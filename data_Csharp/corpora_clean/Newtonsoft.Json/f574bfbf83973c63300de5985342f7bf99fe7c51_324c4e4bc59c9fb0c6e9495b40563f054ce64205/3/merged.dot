digraph  {
m0_47 [label="Entry Newtonsoft.Json.Converters.BinaryConverter.CanConvert(System.Type)", span="135-135", cluster="Newtonsoft.Json.Converters.BinaryConverter.CanConvert(System.Type)", file="BinaryConverter.cs"];
m0_48 [label="Type t = (ReflectionUtils.IsNullableType(objectType))\r\n        ? Nullable.GetUnderlyingType(objectType)\r\n        : objectType", span="137-139", cluster="Newtonsoft.Json.Converters.BinaryConverter.CanConvert(System.Type)", color=red, community=1, file="BinaryConverter.cs"];
m0_49 [label="t.AssignableToTypeName(BinaryTypeName)", span="142-142", cluster="Newtonsoft.Json.Converters.BinaryConverter.CanConvert(System.Type)", color=red, community=0, file="BinaryConverter.cs"];
m0_51 [label="t == typeof(SqlBinary)", span="146-146", cluster="Newtonsoft.Json.Converters.BinaryConverter.CanConvert(System.Type)", color=red, community=0, file="BinaryConverter.cs"];
m0_50 [label="return true;", span="143-143", cluster="Newtonsoft.Json.Converters.BinaryConverter.CanConvert(System.Type)", file="BinaryConverter.cs"];
m0_52 [label="return true;", span="147-147", cluster="Newtonsoft.Json.Converters.BinaryConverter.CanConvert(System.Type)", file="BinaryConverter.cs"];
m0_53 [label="return false;", span="149-149", cluster="Newtonsoft.Json.Converters.BinaryConverter.CanConvert(System.Type)", file="BinaryConverter.cs"];
m0_54 [label="Exit Newtonsoft.Json.Converters.BinaryConverter.CanConvert(System.Type)", span="135-135", cluster="Newtonsoft.Json.Converters.BinaryConverter.CanConvert(System.Type)", file="BinaryConverter.cs"];
m0_44 [label="Entry System.Convert.FromBase64String(string)", span="0-0", cluster="System.Convert.FromBase64String(string)", file="BinaryConverter.cs"];
m0_0 [label="Entry Newtonsoft.Json.Converters.IBinary.ToArray()", span="40-40", cluster="Newtonsoft.Json.Converters.IBinary.ToArray()", file="BinaryConverter.cs"];
m0_1 [label="Exit Newtonsoft.Json.Converters.IBinary.ToArray()", span="40-40", cluster="Newtonsoft.Json.Converters.IBinary.ToArray()", file="BinaryConverter.cs"];
m0_19 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="BinaryConverter.cs"];
m0_9 [label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="617-617", cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="BinaryConverter.cs"];
m0_46 [label="Entry SqlBinary.cstr", span="", cluster="SqlBinary.cstr", file="BinaryConverter.cs"];
m0_22 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="BinaryConverter.cs"];
m0_24 [label="Entry Newtonsoft.Json.Converters.BinaryConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", span="95-95", cluster="Newtonsoft.Json.Converters.BinaryConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="BinaryConverter.cs"];
m0_25 [label="Type t = (ReflectionUtils.IsNullableType(objectType))\r\n        ? Nullable.GetUnderlyingType(objectType)\r\n        : objectType", span="97-99", cluster="Newtonsoft.Json.Converters.BinaryConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="BinaryConverter.cs"];
m0_26 [label="reader.TokenType == JsonToken.Null", span="101-101", cluster="Newtonsoft.Json.Converters.BinaryConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="BinaryConverter.cs"];
m0_27 [label="!ReflectionUtils.IsNullable(objectType)", span="103-103", cluster="Newtonsoft.Json.Converters.BinaryConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="BinaryConverter.cs"];
m0_28 [label="throw new Exception(''Cannot convert null value to {0}.''.FormatWith(CultureInfo.InvariantCulture, objectType));", span="104-104", cluster="Newtonsoft.Json.Converters.BinaryConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="BinaryConverter.cs"];
m0_30 [label="reader.TokenType != JsonToken.String", span="109-109", cluster="Newtonsoft.Json.Converters.BinaryConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="BinaryConverter.cs"];
m0_31 [label="throw new Exception(''Unexpected token parsing binary. Expected String, got {0}.''.FormatWith(CultureInfo.InvariantCulture, reader.TokenType));", span="110-110", cluster="Newtonsoft.Json.Converters.BinaryConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="BinaryConverter.cs"];
m0_32 [label="string encodedData = reader.Value.ToString()", span="114-114", cluster="Newtonsoft.Json.Converters.BinaryConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="BinaryConverter.cs"];
m0_38 [label="throw new Exception(''Unexpected object type when writing binary: {0}''.FormatWith(CultureInfo.InvariantCulture, objectType));", span="125-125", cluster="Newtonsoft.Json.Converters.BinaryConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="BinaryConverter.cs"];
m0_34 [label="t.AssignableToTypeName(BinaryTypeName)", span="118-118", cluster="Newtonsoft.Json.Converters.BinaryConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="BinaryConverter.cs"];
m0_35 [label="return Activator.CreateInstance(t, data);", span="119-119", cluster="Newtonsoft.Json.Converters.BinaryConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="BinaryConverter.cs"];
m0_36 [label="t == typeof(SqlBinary)", span="122-122", cluster="Newtonsoft.Json.Converters.BinaryConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="BinaryConverter.cs"];
m0_29 [label="return null;", span="106-106", cluster="Newtonsoft.Json.Converters.BinaryConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="BinaryConverter.cs"];
m0_33 [label="byte[] data = Convert.FromBase64String(encodedData)", span="115-115", cluster="Newtonsoft.Json.Converters.BinaryConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="BinaryConverter.cs"];
m0_37 [label="return new SqlBinary(data);", span="123-123", cluster="Newtonsoft.Json.Converters.BinaryConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="BinaryConverter.cs"];
m0_39 [label="Exit Newtonsoft.Json.Converters.BinaryConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", span="95-95", cluster="Newtonsoft.Json.Converters.BinaryConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="BinaryConverter.cs"];
m0_42 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", span="88-88", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", file="BinaryConverter.cs"];
m0_2 [label="Entry Newtonsoft.Json.Converters.BinaryConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="59-59", cluster="Newtonsoft.Json.Converters.BinaryConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="BinaryConverter.cs"];
m0_3 [label="value == null", span="61-61", cluster="Newtonsoft.Json.Converters.BinaryConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="BinaryConverter.cs"];
m0_4 [label="writer.WriteNull()", span="63-63", cluster="Newtonsoft.Json.Converters.BinaryConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="BinaryConverter.cs"];
m0_6 [label="byte[] data = GetByteArray(value)", span="67-67", cluster="Newtonsoft.Json.Converters.BinaryConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="BinaryConverter.cs"];
m0_7 [label="writer.WriteValue(data)", span="69-69", cluster="Newtonsoft.Json.Converters.BinaryConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="BinaryConverter.cs"];
m0_5 [label="return;", span="64-64", cluster="Newtonsoft.Json.Converters.BinaryConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="BinaryConverter.cs"];
m0_8 [label="Exit Newtonsoft.Json.Converters.BinaryConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="59-59", cluster="Newtonsoft.Json.Converters.BinaryConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="BinaryConverter.cs"];
m0_20 [label="Entry System.Type.AssignableToTypeName(string)", span="222-222", cluster="System.Type.AssignableToTypeName(string)", file="BinaryConverter.cs"];
m0_23 [label="Entry string.FormatWith(System.IFormatProvider, params object[])", span="48-48", cluster="string.FormatWith(System.IFormatProvider, params object[])", file="BinaryConverter.cs"];
m0_21 [label="Entry Newtonsoft.Json.Utilities.DynamicWrapper.CreateWrapper<T>(object)", span="108-108", cluster="Newtonsoft.Json.Utilities.DynamicWrapper.CreateWrapper<T>(object)", file="BinaryConverter.cs"];
m0_11 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(byte[])", span="981-981", cluster="Newtonsoft.Json.JsonWriter.WriteValue(byte[])", file="BinaryConverter.cs"];
m0_10 [label="Entry Newtonsoft.Json.Converters.BinaryConverter.GetByteArray(object)", span="72-72", cluster="Newtonsoft.Json.Converters.BinaryConverter.GetByteArray(object)", file="BinaryConverter.cs"];
m0_12 [label="value.GetType().AssignableToTypeName(BinaryTypeName)", span="75-75", cluster="Newtonsoft.Json.Converters.BinaryConverter.GetByteArray(object)", file="BinaryConverter.cs"];
m0_13 [label="IBinary binary = DynamicWrapper.CreateWrapper<IBinary>(value)", span="77-77", cluster="Newtonsoft.Json.Converters.BinaryConverter.GetByteArray(object)", file="BinaryConverter.cs"];
m0_15 [label="value is SqlBinary", span="82-82", cluster="Newtonsoft.Json.Converters.BinaryConverter.GetByteArray(object)", file="BinaryConverter.cs"];
m0_16 [label="return ((SqlBinary) value).Value;", span="83-83", cluster="Newtonsoft.Json.Converters.BinaryConverter.GetByteArray(object)", file="BinaryConverter.cs"];
m0_17 [label="throw new Exception(''Unexpected value type when writing binary: {0}''.FormatWith(CultureInfo.InvariantCulture, value.GetType()));", span="85-85", cluster="Newtonsoft.Json.Converters.BinaryConverter.GetByteArray(object)", file="BinaryConverter.cs"];
m0_14 [label="return binary.ToArray();", span="78-78", cluster="Newtonsoft.Json.Converters.BinaryConverter.GetByteArray(object)", file="BinaryConverter.cs"];
m0_18 [label="Exit Newtonsoft.Json.Converters.BinaryConverter.GetByteArray(object)", span="72-72", cluster="Newtonsoft.Json.Converters.BinaryConverter.GetByteArray(object)", file="BinaryConverter.cs"];
m0_45 [label="Entry System.Activator.CreateInstance(System.Type, params object[])", span="0-0", cluster="System.Activator.CreateInstance(System.Type, params object[])", file="BinaryConverter.cs"];
m0_40 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", span="98-98", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", file="BinaryConverter.cs"];
m0_43 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()", file="BinaryConverter.cs"];
m0_41 [label="Entry System.Nullable.GetUnderlyingType(System.Type)", span="0-0", cluster="System.Nullable.GetUnderlyingType(System.Type)", file="BinaryConverter.cs"];
m0_55 [label="Newtonsoft.Json.Converters.BinaryConverter", span="", file="BinaryConverter.cs"];
m2_20 [label="errorContext.Handled = true", span="98-98", cluster="Newtonsoft.Json.Tests.TestObjects.SerializationEventTestObject.OnErrorMethod(System.Runtime.Serialization.StreamingContext, Newtonsoft.Json.Serialization.ErrorContext)", file="BsonReader.cs"];
m2_244 [label="EnsureBuffers()", span="452-452", cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs"];
m2_249 [label="byteCount < MaxCharBytesSize && (b = _reader.ReadByte()) > 0", span="461-461", cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs"];
m2_250 [label="_byteBuffer[byteCount++] = b", span="463-463", cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs"];
m2_252 [label="int length = Encoding.UTF8.GetChars(_byteBuffer, 0, byteCount, _charBuffer, 0)", span="467-467", cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs"];
m2_254 [label="MovePosition(totalBytesRead + 1)", span="471-471", cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs"];
m2_255 [label="return new string(_charBuffer, 0, length);", span="472-472", cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs"];
m2_258 [label="builder.Append(_charBuffer, 0, length)", span="478-478", cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs"];
m2_260 [label="MovePosition(totalBytesRead + 1)", span="482-482", cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs"];
m2_245 [label="StringBuilder builder = null", span="454-454", cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs"];
m2_247 [label="int byteCount = 0", span="459-459", cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs"];
m2_248 [label="byte b", span="460-460", cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs"];
m2_251 [label="totalBytesRead += byteCount", span="465-465", cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs"];
m2_253 [label="byteCount < MaxCharBytesSize && builder == null", span="469-469", cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs"];
m2_259 [label="byteCount < MaxCharBytesSize", span="480-480", cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs"];
m2_256 [label="builder == null", span="475-475", cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs"];
m2_257 [label="builder = new StringBuilder(MaxCharBytesSize * 2)", span="476-476", cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs"];
m2_261 [label="return builder.ToString();", span="483-483", cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs"];
m2_246 [label="int totalBytesRead = 0", span="456-456", cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs"];
m2_262 [label=true, span="486-486", cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs"];
m2_263 [label="Exit Newtonsoft.Json.Bson.BsonReader.ReadString()", span="450-450", cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs"];
m2_166 [label="Entry Newtonsoft.Json.Bson.BsonReader.PopContext()", span="338-338", cluster="Newtonsoft.Json.Bson.BsonReader.PopContext()", file="BsonReader.cs"];
m2_168 [label="_stack.RemoveAt(_stack.Count - 1)", span="340-340", cluster="Newtonsoft.Json.Bson.BsonReader.PopContext()", color=green, community=2, file="BsonReader.cs"];
m2_169 [label="_stack.Count == 0", span="341-341", cluster="Newtonsoft.Json.Bson.BsonReader.PopContext()", color=green, community=2, file="BsonReader.cs"];
m2_170 [label="_currentContext = null", span="342-342", cluster="Newtonsoft.Json.Bson.BsonReader.PopContext()", color=green, community=2, file="BsonReader.cs"];
m2_171 [label="_currentContext = _stack[_stack.Count - 1]", span="344-344", cluster="Newtonsoft.Json.Bson.BsonReader.PopContext()", color=green, community=2, file="BsonReader.cs"];
m2_172 [label="Exit Newtonsoft.Json.Bson.BsonReader.PopContext()", span="338-338", cluster="Newtonsoft.Json.Bson.BsonReader.PopContext()", file="BsonReader.cs"];
m2_264 [label="Entry Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()", span="533-533", cluster="Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()", file="BsonReader.cs"];
m2_298 [label="_byteBuffer == null", span="535-535", cluster="Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()", file="BsonReader.cs"];
m2_299 [label="_byteBuffer = new byte[MaxCharBytesSize]", span="537-537", cluster="Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()", file="BsonReader.cs"];
m2_300 [label="_charBuffer == null", span="539-539", cluster="Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()", file="BsonReader.cs"];
m2_302 [label="_charBuffer = new char[charBufferSize]", span="542-542", cluster="Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()", file="BsonReader.cs"];
m2_301 [label="int charBufferSize = Encoding.UTF8.GetMaxCharCount(MaxCharBytesSize)", span="541-541", cluster="Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()", file="BsonReader.cs"];
m2_303 [label="Exit Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()", span="533-533", cluster="Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()", file="BsonReader.cs"];
m2_238 [label="Entry Newtonsoft.Json.JsonConvert.ConvertJavaScriptTicksToDateTime(long)", span="207-207", cluster="Newtonsoft.Json.JsonConvert.ConvertJavaScriptTicksToDateTime(long)", file="BsonReader.cs"];
m2_304 [label="Entry System.Text.Encoding.GetMaxCharCount(int)", span="0-0", cluster="System.Text.Encoding.GetMaxCharCount(int)", file="BsonReader.cs"];
m2_47 [label="Entry Newtonsoft.Json.Bson.BsonReader.ReadNormal()", span="253-253", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs"];
m2_135 [label="State.PostValue", span="285-285", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", color=green, community=0, file="BsonReader.cs"];
m2_113 [label=CurrentState, span="255-255", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs"];
m2_136 [label="ContainerContext context = _currentContext", span="286-286", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs"];
m2_118 [label="ContainerContext newContext = new ContainerContext(type)", span="263-263", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", color=green, community=0, file="BsonReader.cs"];
m2_116 [label="JTokenType type = (!_rootTypeIsArray) ? JTokenType.Object : JTokenType.Array", span="260-260", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs"];
m2_117 [label="SetToken(token)", span="262-262", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs"];
m2_119 [label="PushContext(newContext)", span="264-264", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs"];
m2_120 [label="newContext.Length = ReadInt32()", span="265-265", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs"];
m2_150 [label="PopContext()", span="311-311", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", color=green, community=2, file="BsonReader.cs"];
m2_148 [label="ReadByte() != 0", span="308-308", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs"];
m2_151 [label="_currentContext != null", span="312-312", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs"];
m2_114 [label="State.Start", span="257-257", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs"];
m2_122 [label="State.ObjectStart", span="268-268", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs"];
m2_125 [label="State.Complete", span="273-273", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs"];
m2_128 [label="State.Property", span="276-276", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs"];
m2_131 [label="State.ArrayStart", span="281-281", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs"];
m2_157 [label="State.ConstructorStart", span="323-323", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs"];
m2_158 [label="State.Constructor", span="325-325", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs"];
m2_159 [label="State.Error", span="327-327", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs"];
m2_160 [label="State.Finished", span="329-329", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs"];
m2_161 [label="throw new ArgumentOutOfRangeException();", span="332-332", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs"];
m2_137 [label="context == null", span="287-287", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs"];
m2_139 [label="int lengthMinusEnd = context.Length - 1", span="290-290", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs"];
m2_140 [label="context.Position < lengthMinusEnd", span="292-292", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs"];
m2_141 [label="context.Type == JTokenType.Array", span="294-294", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs"];
m2_147 [label="context.Position == lengthMinusEnd", span="306-306", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs"];
m2_152 [label="MovePosition(context.Length)", span="313-313", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs"];
m2_153 [label="JsonToken endToken = (context.Type == JTokenType.Object) ? JsonToken.EndObject : JsonToken.EndArray", span="315-315", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs"];
m2_115 [label="JsonToken token = (!_rootTypeIsArray) ? JsonToken.StartObject : JsonToken.StartArray", span="259-259", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs"];
m2_121 [label="return true;", span="266-266", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs"];
m2_123 [label="SetToken(JsonToken.PropertyName, ReadElement())", span="270-270", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs"];
m2_129 [label="ReadType(_currentElementType)", span="278-278", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs"];
m2_132 [label="ReadElement()", span="282-282", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs"];
m2_133 [label="ReadType(_currentElementType)", span="283-283", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs"];
m2_142 [label="ReadElement()", span="296-296", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs"];
m2_143 [label="ReadType(_currentElementType)", span="297-297", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs"];
m2_145 [label="SetToken(JsonToken.PropertyName, ReadElement())", span="302-302", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs"];
m2_154 [label="SetToken(endToken)", span="316-316", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs"];
m2_149 [label="throw new JsonReaderException(''Unexpected end of object byte value.'');", span="309-309", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs"];
m2_126 [label="State.Closed", span="274-274", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs"];
m2_162 [label="return false;", span="335-335", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs"];
m2_138 [label="return false;", span="288-288", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs"];
m2_156 [label="throw new JsonReaderException(''Read past end of current container context.'');", span="321-321", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs"];
m2_124 [label="return true;", span="271-271", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs"];
m2_130 [label="return true;", span="279-279", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs"];
m2_134 [label="return true;", span="284-284", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs"];
m2_144 [label="return true;", span="298-298", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs"];
m2_146 [label="return true;", span="303-303", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs"];
m2_155 [label="return true;", span="317-317", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs"];
m2_127 [label="return false;", span="275-275", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs"];
m2_163 [label="Exit Newtonsoft.Json.Bson.BsonReader.ReadNormal()", span="253-253", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs"];
m2_320 [label="Entry System.IO.BinaryReader.ReadSByte()", span="0-0", cluster="System.IO.BinaryReader.ReadSByte()", file="BsonReader.cs"];
m2_167 [label="Entry Newtonsoft.Json.Bson.BsonReader.MovePosition(int)", span="570-570", cluster="Newtonsoft.Json.Bson.BsonReader.MovePosition(int)", file="BsonReader.cs"];
m2_321 [label="_currentContext.Position += count", span="572-572", cluster="Newtonsoft.Json.Bson.BsonReader.MovePosition(int)", file="BsonReader.cs"];
m2_322 [label="Exit Newtonsoft.Json.Bson.BsonReader.MovePosition(int)", span="570-570", cluster="Newtonsoft.Json.Bson.BsonReader.MovePosition(int)", file="BsonReader.cs"];
m2_237 [label="Entry Newtonsoft.Json.Bson.BsonReader.ReadInt64()", span="558-558", cluster="Newtonsoft.Json.Bson.BsonReader.ReadInt64()", file="BsonReader.cs"];
m2_313 [label="MovePosition(8)", span="560-560", cluster="Newtonsoft.Json.Bson.BsonReader.ReadInt64()", file="BsonReader.cs"];
m2_314 [label="return _reader.ReadInt64();", span="561-561", cluster="Newtonsoft.Json.Bson.BsonReader.ReadInt64()", file="BsonReader.cs"];
m2_315 [label="Exit Newtonsoft.Json.Bson.BsonReader.ReadInt64()", span="558-558", cluster="Newtonsoft.Json.Bson.BsonReader.ReadInt64()", file="BsonReader.cs"];
m2_84 [label="Entry Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", span="234-234", cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", file="BsonReader.cs"];
m2_5 [label="Exit Newtonsoft.Json.Tests.TestObjects.SerializationEventTestObject.SerializationEventTestObject()", span="62-62", cluster="Newtonsoft.Json.Tests.TestObjects.SerializationEventTestObject.SerializationEventTestObject()", file="BsonReader.cs"];
m2_7 [label="Member2 = ''This value went into the data file during serialization.''", span="73-73", cluster="Newtonsoft.Json.Tests.TestObjects.SerializationEventTestObject.OnSerializingMethod(System.Runtime.Serialization.StreamingContext)", file="BsonReader.cs", color=red, community=0];
m2_8 [label="Exit Newtonsoft.Json.Tests.TestObjects.SerializationEventTestObject.OnSerializingMethod(System.Runtime.Serialization.StreamingContext)", span="71-71", cluster="Newtonsoft.Json.Tests.TestObjects.SerializationEventTestObject.OnSerializingMethod(System.Runtime.Serialization.StreamingContext)", file="BsonReader.cs"];
m2_9 [label="Entry Newtonsoft.Json.Tests.TestObjects.SerializationEventTestObject.OnSerializedMethod(System.Runtime.Serialization.StreamingContext)", span="77-77", cluster="Newtonsoft.Json.Tests.TestObjects.SerializationEventTestObject.OnSerializedMethod(System.Runtime.Serialization.StreamingContext)", file="BsonReader.cs"];
m2_6 [label="Entry Newtonsoft.Json.Tests.TestObjects.SerializationEventTestObject.OnSerializingMethod(System.Runtime.Serialization.StreamingContext)", span="71-71", cluster="Newtonsoft.Json.Tests.TestObjects.SerializationEventTestObject.OnSerializingMethod(System.Runtime.Serialization.StreamingContext)", file="BsonReader.cs"];
m2_10 [label="Member2 = ''This value was reset after serialization.''", span="79-79", cluster="Newtonsoft.Json.Tests.TestObjects.SerializationEventTestObject.OnSerializedMethod(System.Runtime.Serialization.StreamingContext)", file="BsonReader.cs", color=red, community=0];
m2_177 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="BsonReader.cs"];
m2_265 [label="Entry System.Text.Encoding.GetChars(byte[], int, int, char[], int)", span="0-0", cluster="System.Text.Encoding.GetChars(byte[], int, int, char[], int)", file="BsonReader.cs"];
m2_308 [label="Entry System.IO.BinaryReader.ReadDouble()", span="0-0", cluster="System.IO.BinaryReader.ReadDouble()", file="BsonReader.cs"];
m2_14 [label="Exit Newtonsoft.Json.Tests.TestObjects.SerializationEventTestObject.OnDeserializingMethod(System.Runtime.Serialization.StreamingContext)", span="83-83", cluster="Newtonsoft.Json.Tests.TestObjects.SerializationEventTestObject.OnDeserializingMethod(System.Runtime.Serialization.StreamingContext)", file="BsonReader.cs"];
m2_15 [label="Entry Newtonsoft.Json.Tests.TestObjects.SerializationEventTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", span="89-89", cluster="Newtonsoft.Json.Tests.TestObjects.SerializationEventTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="BsonReader.cs"];
m2_16 [label="Member4 = ''This value was set after deserialization.''", span="91-91", cluster="Newtonsoft.Json.Tests.TestObjects.SerializationEventTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="BsonReader.cs"];
m2_17 [label="Exit Newtonsoft.Json.Tests.TestObjects.SerializationEventTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", span="89-89", cluster="Newtonsoft.Json.Tests.TestObjects.SerializationEventTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="BsonReader.cs"];
m2_18 [label="Entry Newtonsoft.Json.Tests.TestObjects.SerializationEventTestObject.OnErrorMethod(System.Runtime.Serialization.StreamingContext, Newtonsoft.Json.Serialization.ErrorContext)", span="95-95", cluster="Newtonsoft.Json.Tests.TestObjects.SerializationEventTestObject.OnErrorMethod(System.Runtime.Serialization.StreamingContext, Newtonsoft.Json.Serialization.ErrorContext)", file="BsonReader.cs"];
m2_11 [label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="94-94", cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="BsonReader.cs"];
m2_21 [label="Exit Newtonsoft.Json.Tests.TestObjects.SerializationEventTestObject.OnErrorMethod(System.Runtime.Serialization.StreamingContext, Newtonsoft.Json.Serialization.ErrorContext)", span="95-95", cluster="Newtonsoft.Json.Tests.TestObjects.SerializationEventTestObject.OnErrorMethod(System.Runtime.Serialization.StreamingContext, Newtonsoft.Json.Serialization.ErrorContext)", file="BsonReader.cs"];
m2_22 [label="Newtonsoft.Json.Tests.TestObjects.SerializationEventTestObject", span="", cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsBytes()", file="BsonReader.cs"];
m2_23 [label="TokenType != JsonToken.Bytes", span="115-115", cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsBytes()", file="BsonReader.cs"];
m2_24 [label="throw new JsonReaderException(''Error reading bytes. Expected bytes but got {0}.''.FormatWith(CultureInfo.InvariantCulture, TokenType));", span="116-116", cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsBytes()", file="BsonReader.cs"];
m2_25 [label="return (byte[])Value;", span="118-118", cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsBytes()", file="BsonReader.cs"];
m2_26 [label="Exit Newtonsoft.Json.Bson.BsonReader.ReadAsBytes()", span="112-112", cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsBytes()", file="BsonReader.cs"];
m2_239 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", file="BsonReader.cs"];
m2_12 [label="Entry System.IO.BinaryReader.BinaryReader(System.IO.Stream)", span="0-0", cluster="System.IO.BinaryReader.BinaryReader(System.IO.Stream)", file="BsonReader.cs"];
m2_13 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="BsonReader.cs"];
m2_165 [label="Entry Newtonsoft.Json.Bson.BsonReader.ReadByte()", span="353-353", cluster="Newtonsoft.Json.Bson.BsonReader.ReadByte()", file="BsonReader.cs"];
m2_178 [label="MovePosition(1)", span="355-355", cluster="Newtonsoft.Json.Bson.BsonReader.ReadByte()", file="BsonReader.cs"];
m2_179 [label="return _reader.ReadByte();", span="356-356", cluster="Newtonsoft.Json.Bson.BsonReader.ReadByte()", file="BsonReader.cs"];
m2_180 [label="Exit Newtonsoft.Json.Bson.BsonReader.ReadByte()", span="353-353", cluster="Newtonsoft.Json.Bson.BsonReader.ReadByte()", file="BsonReader.cs"];
m2_164 [label="Entry Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", span="359-359", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs"];
m2_190 [label="ContainerContext newContext = new ContainerContext(JTokenType.Object)", span="374-374", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", color=green, community=0, file="BsonReader.cs"];
m2_189 [label="SetToken(JsonToken.StartObject)", span="372-372", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs"];
m2_191 [label="PushContext(newContext)", span="375-375", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs"];
m2_192 [label="newContext.Length = ReadInt32()", span="376-376", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs"];
m2_195 [label="ContainerContext newContext = new ContainerContext(JTokenType.Array)", span="383-383", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", color=green, community=0, file="BsonReader.cs"];
m2_194 [label="SetToken(JsonToken.StartArray)", span="381-381", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs"];
m2_196 [label="PushContext(newContext)", span="384-384", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs"];
m2_197 [label="newContext.Length = ReadInt32()", span="385-385", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs"];
m2_184 [label="SetToken(JsonToken.Float, ReadDouble())", span="364-364", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs"];
m2_187 [label="SetToken(JsonToken.String, ReadLengthString())", span="368-368", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs"];
m2_199 [label="SetToken(JsonToken.Bytes, ReadBinary())", span="389-389", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs"];
m2_201 [label="SetToken(JsonToken.Undefined)", span="392-392", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs"];
m2_203 [label="byte[] oid = ReadBytes(12)", span="395-395", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs"];
m2_204 [label="SetToken(JsonToken.Bytes, oid)", span="396-396", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs"];
m2_206 [label="bool b = Convert.ToBoolean(ReadByte())", span="399-399", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs"];
m2_207 [label="SetToken(JsonToken.Boolean, b)", span="400-400", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs"];
m2_209 [label="long ticks = ReadInt64()", span="403-403", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs"];
m2_211 [label="SetToken(JsonToken.Date, dateTime)", span="405-405", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs"];
m2_213 [label="SetToken(JsonToken.Null)", span="408-408", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs"];
m2_215 [label="string expression = ReadString()", span="411-411", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs"];
m2_216 [label="string modifiers = ReadString()", span="412-412", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs"];
m2_218 [label="SetToken(JsonToken.String, regex)", span="415-415", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs"];
m2_220 [label="SetToken(JsonToken.StartObject)", span="418-418", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs"];
m2_221 [label="_bsonReaderState = BsonReaderState.ReferenceStart", span="419-419", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs"];
m2_223 [label="SetToken(JsonToken.String, ReadLengthString())", span="422-422", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs"];
m2_225 [label="SetToken(JsonToken.StartObject)", span="425-425", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs"];
m2_226 [label="_bsonReaderState = BsonReaderState.CodeWScopeStart", span="426-426", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs"];
m2_228 [label="SetToken(JsonToken.Integer, (long)ReadInt32())", span="429-429", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs"];
m2_231 [label="SetToken(JsonToken.Integer, ReadInt64())", span="433-433", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs"];
m2_188 [label="BsonType.Object", span="370-370", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs"];
m2_193 [label="BsonType.Array", span="379-379", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs"];
m2_183 [label="BsonType.Number", span="363-363", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs"];
m2_186 [label="BsonType.Symbol", span="367-367", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs"];
m2_198 [label="BsonType.Binary", span="388-388", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs"];
m2_200 [label="BsonType.Undefined", span="391-391", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs"];
m2_202 [label="BsonType.Oid", span="394-394", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs"];
m2_205 [label="BsonType.Boolean", span="398-398", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs"];
m2_208 [label="BsonType.Date", span="402-402", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs"];
m2_210 [label="DateTime dateTime = JsonConvert.ConvertJavaScriptTicksToDateTime(ticks)", span="404-404", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs"];
m2_212 [label="BsonType.Null", span="407-407", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs"];
m2_214 [label="BsonType.Regex", span="410-410", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs"];
m2_217 [label="string regex = @''/'' + expression + @''/'' + modifiers", span="414-414", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs"];
m2_219 [label="BsonType.Reference", span="417-417", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs"];
m2_222 [label="BsonType.Code", span="421-421", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs"];
m2_224 [label="BsonType.CodeWScope", span="424-424", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs"];
m2_227 [label="BsonType.Integer", span="428-428", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs"];
m2_230 [label="BsonType.Long", span="432-432", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs"];
m2_182 [label=type, span="361-361", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs"];
m2_232 [label="throw new ArgumentOutOfRangeException(''type'', ''Unexpected BsonType value: '' + type);", span="436-436", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs"];
m2_185 [label="BsonType.String", span="366-366", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs"];
m2_229 [label="BsonType.TimeStamp", span="431-431", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs"];
m2_233 [label="Exit Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", span="359-359", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs"];
m2_19 [label="Member5 = ''Error message for member '' + errorContext.Member + '' = '' + errorContext.Error.Message", span="97-97", cluster="Newtonsoft.Json.Tests.TestObjects.SerializationEventTestObject.OnErrorMethod(System.Runtime.Serialization.StreamingContext, Newtonsoft.Json.Serialization.ErrorContext)", file="BsonReader.cs"];
m2_317 [label="MovePosition(1)", span="566-566", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType()", file="BsonReader.cs"];
m2_318 [label="return (BsonType)_reader.ReadSByte();", span="567-567", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType()", file="BsonReader.cs"];
m2_319 [label="Exit Newtonsoft.Json.Bson.BsonReader.ReadType()", span="564-564", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType()", file="BsonReader.cs"];
m2_316 [label="Entry System.IO.BinaryReader.ReadInt64()", span="0-0", cluster="System.IO.BinaryReader.ReadInt64()", file="BsonReader.cs"];
m2_267 [label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0", cluster="System.Text.StringBuilder.StringBuilder(int)", file="BsonReader.cs"];
m2_296 [label="Entry System.IO.Stream.Read(byte[], int, int)", span="0-0", cluster="System.IO.Stream.Read(byte[], int, int)", file="BsonReader.cs"];
m2_276 [label="Entry Newtonsoft.Json.Bson.BsonReader.GetString(int)", span="501-501", cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs"];
m2_279 [label="EnsureBuffers()", span="506-506", cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs"];
m2_283 [label="int byteCount = _reader.BaseStream.Read(_byteBuffer, 0, count)", span="514-514", cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs"];
m2_286 [label="int charCount = Encoding.UTF8.GetChars(_byteBuffer, 0, byteCount, _charBuffer, 0)", span="518-518", cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs"];
m2_288 [label="return new string(_charBuffer, 0, charCount);", span="520-520", cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs"];
m2_291 [label="builder.Append(_charBuffer, 0, charCount)", span="525-525", cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs"];
m2_277 [label="length == 0", span="503-503", cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs"];
m2_280 [label="StringBuilder builder = null", span="508-508", cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs"];
m2_282 [label="int count = ((length - totalBytesRead) > MaxCharBytesSize) ? MaxCharBytesSize : (length - totalBytesRead)", span="513-513", cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs"];
m2_281 [label="int totalBytesRead = 0", span="510-510", cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs"];
m2_284 [label="byteCount == 0", span="515-515", cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs"];
m2_287 [label="totalBytesRead == 0 && byteCount == length", span="519-519", cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs"];
m2_292 [label="totalBytesRead += byteCount", span="526-526", cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs"];
m2_290 [label="builder = new StringBuilder(length)", span="523-523", cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs"];
m2_289 [label="builder == null", span="522-522", cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs"];
m2_293 [label="totalBytesRead < length", span="528-528", cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs"];
m2_278 [label="return string.Empty;", span="504-504", cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs"];
m2_294 [label="return builder.ToString();", span="530-530", cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs"];
m2_285 [label="throw new EndOfStreamException(''Unable to read beyond the end of the stream.'');", span="516-516", cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs"];
m2_295 [label="Exit Newtonsoft.Json.Bson.BsonReader.GetString(int)", span="501-501", cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs"];
m2_234 [label="Entry Newtonsoft.Json.Bson.BsonReader.ReadDouble()", span="546-546", cluster="Newtonsoft.Json.Bson.BsonReader.ReadDouble()", file="BsonReader.cs"];
m2_305 [label="MovePosition(8)", span="548-548", cluster="Newtonsoft.Json.Bson.BsonReader.ReadDouble()", file="BsonReader.cs"];
m2_306 [label="return _reader.ReadDouble();", span="549-549", cluster="Newtonsoft.Json.Bson.BsonReader.ReadDouble()", file="BsonReader.cs"];
m2_307 [label="Exit Newtonsoft.Json.Bson.BsonReader.ReadDouble()", span="546-546", cluster="Newtonsoft.Json.Bson.BsonReader.ReadDouble()", file="BsonReader.cs"];
m2_28 [label="Entry Newtonsoft.Json.JsonReaderException.JsonReaderException(string)", span="59-59", cluster="Newtonsoft.Json.JsonReaderException.JsonReaderException(string)", file="BsonReader.cs"];
m2_269 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="BsonReader.cs"];
m2_112 [label="Entry Newtonsoft.Json.Bson.BsonReader.ReadBytes(int)", span="575-575", cluster="Newtonsoft.Json.Bson.BsonReader.ReadBytes(int)", file="BsonReader.cs"];
m2_323 [label="MovePosition(count)", span="577-577", cluster="Newtonsoft.Json.Bson.BsonReader.ReadBytes(int)", file="BsonReader.cs"];
m2_324 [label="return _reader.ReadBytes(count);", span="578-578", cluster="Newtonsoft.Json.Bson.BsonReader.ReadBytes(int)", file="BsonReader.cs"];
m2_325 [label="Exit Newtonsoft.Json.Bson.BsonReader.ReadBytes(int)", span="575-575", cluster="Newtonsoft.Json.Bson.BsonReader.ReadBytes(int)", file="BsonReader.cs"];
m2_49 [label="Entry Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", span="155-155", cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs"];
m2_66 [label="ContainerContext newContext = new ContainerContext(JTokenType.Object)", span="181-181", cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", color=green, community=0, file="BsonReader.cs"];
m2_65 [label="_bsonReaderState = BsonReaderState.CodeWScopeScopeObject", span="179-179", cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs"];
m2_67 [label="PushContext(newContext)", span="182-182", cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs"];
m2_68 [label="newContext.Length = ReadInt32()", span="183-183", cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs"];
m2_64 [label="SetToken(JsonToken.StartObject)", span="178-178", cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs"];
m2_69 [label="return true;", span="185-185", cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs"];
m2_50 [label=_bsonReaderState, span="157-157", cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs"];
m2_52 [label="SetToken(JsonToken.PropertyName, ''$code'')", span="160-160", cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs"];
m2_53 [label="_bsonReaderState = BsonReaderState.CodeWScopeCode", span="161-161", cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs"];
m2_56 [label="ReadInt32()", span="165-165", cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs"];
m2_57 [label="SetToken(JsonToken.String, ReadLengthString())", span="167-167", cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs"];
m2_58 [label="_bsonReaderState = BsonReaderState.CodeWScopeScope", span="168-168", cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs"];
m2_61 [label="CurrentState == State.PostValue", span="171-171", cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs"];
m2_62 [label="SetToken(JsonToken.PropertyName, ''$scope'')", span="173-173", cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs"];
m2_71 [label="bool result = ReadNormal()", span="188-188", cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs"];
m2_72 [label="result && TokenType == JsonToken.EndObject", span="189-189", cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs"];
m2_73 [label="_bsonReaderState = BsonReaderState.CodeWScopeScopeEnd", span="190-190", cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs"];
m2_76 [label="SetToken(JsonToken.EndObject)", span="194-194", cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs"];
m2_77 [label="_bsonReaderState = BsonReaderState.Normal", span="195-195", cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs"];
m2_54 [label="return true;", span="162-162", cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs"];
m2_51 [label="BsonReaderState.CodeWScopeStart", span="159-159", cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs"];
m2_55 [label="BsonReaderState.CodeWScopeCode", span="163-163", cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs"];
m2_60 [label="BsonReaderState.CodeWScopeScope", span="170-170", cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs"];
m2_70 [label="BsonReaderState.CodeWScopeScopeObject", span="187-187", cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs"];
m2_75 [label="BsonReaderState.CodeWScopeScopeEnd", span="193-193", cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs"];
m2_79 [label="throw new ArgumentOutOfRangeException();", span="198-198", cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs"];
m2_59 [label="return true;", span="169-169", cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs"];
m2_63 [label="return true;", span="174-174", cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs"];
m2_74 [label="return result;", span="192-192", cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs"];
m2_78 [label="return true;", span="196-196", cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs"];
m2_80 [label="Exit Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", span="155-155", cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs"];
m2_266 [label="Entry string.String(char[], int, int)", span="0-0", cluster="string.String(char[], int, int)", file="BsonReader.cs"];
m2_326 [label="Entry System.IO.BinaryReader.ReadBytes(int)", span="0-0", cluster="System.IO.BinaryReader.ReadBytes(int)", file="BsonReader.cs"];
m2_48 [label="Entry Newtonsoft.Json.Bson.BsonReader.ReadReference()", span="202-202", cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs"];
m2_87 [label=CurrentState, span="204-204", cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs"];
m2_89 [label="SetToken(JsonToken.PropertyName, ''$ref'')", span="208-208", cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs"];
m2_90 [label="_bsonReaderState = BsonReaderState.ReferenceRef", span="209-209", cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs"];
m2_93 [label="_bsonReaderState == BsonReaderState.ReferenceRef", span="214-214", cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs"];
m2_94 [label="SetToken(JsonToken.String, ReadLengthString())", span="216-216", cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs"];
m2_96 [label="_bsonReaderState == BsonReaderState.ReferenceId", span="219-219", cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs"];
m2_97 [label="SetToken(JsonToken.Bytes, ReadBytes(12))", span="221-221", cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs"];
m2_99 [label="throw new JsonReaderException(''Unexpected state when reading BSON reference: '' + _bsonReaderState);", span="226-226", cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs"];
m2_101 [label="_bsonReaderState == BsonReaderState.ReferenceRef", span="231-231", cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs"];
m2_102 [label="SetToken(JsonToken.PropertyName, ''$id'')", span="233-233", cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs"];
m2_103 [label="_bsonReaderState = BsonReaderState.ReferenceId", span="234-234", cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs"];
m2_105 [label="_bsonReaderState == BsonReaderState.ReferenceId", span="237-237", cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs"];
m2_106 [label="SetToken(JsonToken.EndObject)", span="239-239", cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs"];
m2_107 [label="_bsonReaderState = BsonReaderState.Normal", span="240-240", cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs"];
m2_109 [label="throw new JsonReaderException(''Unexpected state when reading BSON reference: '' + _bsonReaderState);", span="245-245", cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs"];
m2_110 [label="throw new JsonReaderException(''Unexpected state when reading BSON reference: '' + CurrentState);", span="249-249", cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs"];
m2_88 [label="State.ObjectStart", span="206-206", cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs"];
m2_92 [label="State.Property", span="212-212", cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs"];
m2_100 [label="State.PostValue", span="229-229", cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs"];
m2_91 [label="return true;", span="210-210", cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs"];
m2_95 [label="return true;", span="217-217", cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs"];
m2_98 [label="return true;", span="222-222", cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs"];
m2_104 [label="return true;", span="235-235", cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs"];
m2_108 [label="return true;", span="241-241", cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs"];
m2_111 [label="Exit Newtonsoft.Json.Bson.BsonReader.ReadReference()", span="202-202", cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs"];
m2_0 [label="Entry Newtonsoft.Json.Bson.BsonReader.ContainerContext.ContainerContext(Newtonsoft.Json.Linq.JTokenType)", span="72-72", cluster="Newtonsoft.Json.Bson.BsonReader.ContainerContext.ContainerContext(Newtonsoft.Json.Linq.JTokenType)", file="BsonReader.cs"];
m2_1 [label="Type = type", span="74-74", cluster="Newtonsoft.Json.Bson.BsonReader.ContainerContext.ContainerContext(Newtonsoft.Json.Linq.JTokenType)", file="BsonReader.cs"];
m2_2 [label="Exit Newtonsoft.Json.Bson.BsonReader.ContainerContext.ContainerContext(Newtonsoft.Json.Linq.JTokenType)", span="72-72", cluster="Newtonsoft.Json.Bson.BsonReader.ContainerContext.ContainerContext(Newtonsoft.Json.Linq.JTokenType)", file="BsonReader.cs"];
m2_3 [label="Member3 = ''This is a nonserialized value''", span="66-66", cluster="Newtonsoft.Json.Tests.TestObjects.SerializationEventTestObject.SerializationEventTestObject()", color=red, community=0, file="BsonReader.cs"];
m2_4 [label="Member4 = null", span="67-67", cluster="Newtonsoft.Json.Tests.TestObjects.SerializationEventTestObject.SerializationEventTestObject()", color=red, community=0, file="BsonReader.cs"];
m2_86 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", file="BsonReader.cs"];
m2_268 [label="Entry System.Text.StringBuilder.Append(char[], int, int)", span="0-0", cluster="System.Text.StringBuilder.Append(char[], int, int)", file="BsonReader.cs"];
m2_83 [label="Entry Newtonsoft.Json.Bson.BsonReader.ReadLengthString()", span="489-489", cluster="Newtonsoft.Json.Bson.BsonReader.ReadLengthString()", file="BsonReader.cs"];
m2_270 [label="int length = ReadInt32()", span="491-491", cluster="Newtonsoft.Json.Bson.BsonReader.ReadLengthString()", file="BsonReader.cs"];
m2_271 [label="MovePosition(length)", span="493-493", cluster="Newtonsoft.Json.Bson.BsonReader.ReadLengthString()", file="BsonReader.cs"];
m2_272 [label="string s = GetString(length - 1)", span="495-495", cluster="Newtonsoft.Json.Bson.BsonReader.ReadLengthString()", file="BsonReader.cs"];
m2_273 [label="_reader.ReadByte()", span="496-496", cluster="Newtonsoft.Json.Bson.BsonReader.ReadLengthString()", file="BsonReader.cs"];
m2_274 [label="return s;", span="498-498", cluster="Newtonsoft.Json.Bson.BsonReader.ReadLengthString()", file="BsonReader.cs"];
m2_275 [label="Exit Newtonsoft.Json.Bson.BsonReader.ReadLengthString()", span="489-489", cluster="Newtonsoft.Json.Bson.BsonReader.ReadLengthString()", file="BsonReader.cs"];
m2_81 [label="Entry Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", span="244-244", cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="BsonReader.cs"];
m2_82 [label="Entry Newtonsoft.Json.Bson.BsonReader.ReadInt32()", span="552-552", cluster="Newtonsoft.Json.Bson.BsonReader.ReadInt32()", file="BsonReader.cs"];
m2_309 [label="MovePosition(4)", span="554-554", cluster="Newtonsoft.Json.Bson.BsonReader.ReadInt32()", file="BsonReader.cs"];
m2_310 [label="return _reader.ReadInt32();", span="555-555", cluster="Newtonsoft.Json.Bson.BsonReader.ReadInt32()", file="BsonReader.cs"];
m2_311 [label="Exit Newtonsoft.Json.Bson.BsonReader.ReadInt32()", span="552-552", cluster="Newtonsoft.Json.Bson.BsonReader.ReadInt32()", file="BsonReader.cs"];
m2_181 [label="Entry System.IO.BinaryReader.ReadByte()", span="0-0", cluster="System.IO.BinaryReader.ReadByte()", file="BsonReader.cs"];
m2_85 [label="Entry Newtonsoft.Json.Bson.BsonReader.PushContext(Newtonsoft.Json.Bson.BsonReader.ContainerContext)", span="347-347", cluster="Newtonsoft.Json.Bson.BsonReader.PushContext(Newtonsoft.Json.Bson.BsonReader.ContainerContext)", file="BsonReader.cs"];
m2_174 [label="_stack.Add(newContext)", span="349-349", cluster="Newtonsoft.Json.Bson.BsonReader.PushContext(Newtonsoft.Json.Bson.BsonReader.ContainerContext)", color=green, community=2, file="BsonReader.cs"];
m2_175 [label="_currentContext = newContext", span="350-350", cluster="Newtonsoft.Json.Bson.BsonReader.PushContext(Newtonsoft.Json.Bson.BsonReader.ContainerContext)", color=green, community=2, file="BsonReader.cs"];
m2_176 [label="Exit Newtonsoft.Json.Bson.BsonReader.PushContext(Newtonsoft.Json.Bson.BsonReader.ContainerContext)", span="347-347", cluster="Newtonsoft.Json.Bson.BsonReader.PushContext(Newtonsoft.Json.Bson.BsonReader.ContainerContext)", file="BsonReader.cs"];
m2_236 [label="Entry System.Convert.ToBoolean(byte)", span="0-0", cluster="System.Convert.ToBoolean(byte)", file="BsonReader.cs"];
m2_173 [label="Entry System.Collections.Generic.List<T>.RemoveAt(int)", span="0-0", cluster="System.Collections.Generic.List<T>.RemoveAt(int)", file="BsonReader.cs"];
m2_29 [label="Entry string.FormatWith(System.IFormatProvider, params object[])", span="48-48", cluster="string.FormatWith(System.IFormatProvider, params object[])", file="BsonReader.cs"];
m2_312 [label="Entry System.IO.BinaryReader.ReadInt32()", span="0-0", cluster="System.IO.BinaryReader.ReadInt32()", file="BsonReader.cs"];
m2_27 [label="Entry Newtonsoft.Json.Bson.BsonReader.Read()", span="127-127", cluster="Newtonsoft.Json.Bson.BsonReader.Read()", file="BsonReader.cs"];
m2_30 [label=_bsonReaderState, span="131-131", cluster="Newtonsoft.Json.Bson.BsonReader.Read()", file="BsonReader.cs"];
m2_32 [label="return ReadNormal();", span="134-134", cluster="Newtonsoft.Json.Bson.BsonReader.Read()", file="BsonReader.cs"];
m2_36 [label="return ReadReference();", span="138-138", cluster="Newtonsoft.Json.Bson.BsonReader.Read()", file="BsonReader.cs"];
m2_42 [label="return ReadCodeWScope();", span="144-144", cluster="Newtonsoft.Json.Bson.BsonReader.Read()", file="BsonReader.cs"];
m2_43 [label="throw new JsonReaderException(''Unexpected state: {0}''.FormatWith(CultureInfo.InvariantCulture, _bsonReaderState));", span="146-146", cluster="Newtonsoft.Json.Bson.BsonReader.Read()", file="BsonReader.cs"];
m2_45 [label="return false;", span="151-151", cluster="Newtonsoft.Json.Bson.BsonReader.Read()", file="BsonReader.cs"];
m2_31 [label="BsonReaderState.Normal", span="133-133", cluster="Newtonsoft.Json.Bson.BsonReader.Read()", file="BsonReader.cs"];
m2_33 [label="BsonReaderState.ReferenceStart", span="135-135", cluster="Newtonsoft.Json.Bson.BsonReader.Read()", file="BsonReader.cs"];
m2_37 [label="BsonReaderState.CodeWScopeStart", span="139-139", cluster="Newtonsoft.Json.Bson.BsonReader.Read()", file="BsonReader.cs"];
m2_35 [label="BsonReaderState.ReferenceId", span="137-137", cluster="Newtonsoft.Json.Bson.BsonReader.Read()", file="BsonReader.cs"];
m2_41 [label="BsonReaderState.CodeWScopeScopeEnd", span="143-143", cluster="Newtonsoft.Json.Bson.BsonReader.Read()", file="BsonReader.cs"];
m2_44 [label=EndOfStreamException, span="149-149", cluster="Newtonsoft.Json.Bson.BsonReader.Read()", file="BsonReader.cs"];
m2_34 [label="BsonReaderState.ReferenceRef", span="136-136", cluster="Newtonsoft.Json.Bson.BsonReader.Read()", file="BsonReader.cs"];
m2_38 [label="BsonReaderState.CodeWScopeCode", span="140-140", cluster="Newtonsoft.Json.Bson.BsonReader.Read()", file="BsonReader.cs"];
m2_40 [label="BsonReaderState.CodeWScopeScopeObject", span="142-142", cluster="Newtonsoft.Json.Bson.BsonReader.Read()", file="BsonReader.cs"];
m2_39 [label="BsonReaderState.CodeWScopeScope", span="141-141", cluster="Newtonsoft.Json.Bson.BsonReader.Read()", file="BsonReader.cs"];
m2_46 [label="Exit Newtonsoft.Json.Bson.BsonReader.Read()", span="127-127", cluster="Newtonsoft.Json.Bson.BsonReader.Read()", file="BsonReader.cs"];
m2_235 [label="Entry Newtonsoft.Json.Bson.BsonReader.ReadBinary()", span="440-440", cluster="Newtonsoft.Json.Bson.BsonReader.ReadBinary()", file="BsonReader.cs"];
m2_240 [label="int dataLength = ReadInt32()", span="442-442", cluster="Newtonsoft.Json.Bson.BsonReader.ReadBinary()", file="BsonReader.cs"];
m2_241 [label="ReadByte()", span="445-445", cluster="Newtonsoft.Json.Bson.BsonReader.ReadBinary()", file="BsonReader.cs"];
m2_242 [label="return ReadBytes(dataLength);", span="447-447", cluster="Newtonsoft.Json.Bson.BsonReader.ReadBinary()", file="BsonReader.cs"];
m2_243 [label="Exit Newtonsoft.Json.Bson.BsonReader.ReadBinary()", span="440-440", cluster="Newtonsoft.Json.Bson.BsonReader.ReadBinary()", file="BsonReader.cs"];
m2_297 [label="Entry System.IO.EndOfStreamException.EndOfStreamException(string)", span="0-0", cluster="System.IO.EndOfStreamException.EndOfStreamException(string)", file="BsonReader.cs"];
m2_328 [label="Newtonsoft.Json.Bson.BsonReader", span="", file="BsonReader.cs"];
m2_327 [label="Newtonsoft.Json.Bson.BsonReader.ContainerContext", span="", file="BsonReader.cs"];
m4_7 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="BsonWriter.cs"];
m4_6 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="739-739", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="BsonWriter.cs"];
m4_8 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="BsonWriter.cs"];
m4_0 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeObject.Example()", span="52-52", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeObject.Example()", file="BsonWriter.cs"];
m4_1 [label="string json = @''{\r\n              'Email': 'james@example.com',\r\n              'Active': true,\r\n              'CreatedDate': '2013-01-20T00:00:00Z',\r\n              'Roles': [\r\n                'User',\r\n                'Admin'\r\n              ]\r\n            }''", span="55-63", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeObject.Example()", file="BsonWriter.cs"];
m4_2 [label="Account account = JsonConvert.DeserializeObject<Account>(json)", span="65-65", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeObject.Example()", file="BsonWriter.cs"];
m4_3 [label="Console.WriteLine(account.Email)", span="67-67", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeObject.Example()", file="BsonWriter.cs"];
m4_4 [label="Assert.AreEqual(''james@example.com'', account.Email)", span="71-71", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeObject.Example()", file="BsonWriter.cs"];
m4_5 [label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeObject.Example()", span="52-52", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeObject.Example()", file="BsonWriter.cs"];
m5_38 [label="Entry Newtonsoft.Json.Tests.Documentation.JsonSchemaTests.LoadJsonSchema()", span="142-142", cluster="Newtonsoft.Json.Tests.Documentation.JsonSchemaTests.LoadJsonSchema()", file="BsonWriterTests.cs"];
m5_39 [label="JsonSchema schema1 = JsonSchema.Parse(@''{'type':'object'}'')", span="146-146", cluster="Newtonsoft.Json.Tests.Documentation.JsonSchemaTests.LoadJsonSchema()", file="BsonWriterTests.cs"];
m5_40 [label="TextReader reader = File.OpenText(@''c:\schema\Person.json'')", span="149-149", cluster="Newtonsoft.Json.Tests.Documentation.JsonSchemaTests.LoadJsonSchema()", file="BsonWriterTests.cs"];
m5_41 [label="JsonSchema schema2 = JsonSchema.Read(new JsonTextReader(reader))", span="151-151", cluster="Newtonsoft.Json.Tests.Documentation.JsonSchemaTests.LoadJsonSchema()", file="BsonWriterTests.cs"];
m5_42 [label="Exit Newtonsoft.Json.Tests.Documentation.JsonSchemaTests.LoadJsonSchema()", span="142-142", cluster="Newtonsoft.Json.Tests.Documentation.JsonSchemaTests.LoadJsonSchema()", file="BsonWriterTests.cs"];
m5_33 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", span="674-674", cluster="Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", file="BsonWriterTests.cs"];
m5_29 [label="Entry System.IO.StringReader.StringReader(string)", span="0-0", cluster="System.IO.StringReader.StringReader(string)", file="BsonWriterTests.cs"];
m5_6 [label="Entry Newtonsoft.Json.Schema.JsonSchema.Parse(string)", span="294-294", cluster="Newtonsoft.Json.Schema.JsonSchema.Parse(string)", file="BsonWriterTests.cs"];
m5_7 [label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="359-359", cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="BsonWriterTests.cs"];
m5_44 [label="Entry Newtonsoft.Json.Schema.JsonSchema.Read(Newtonsoft.Json.JsonReader)", span="269-269", cluster="Newtonsoft.Json.Schema.JsonSchema.Read(Newtonsoft.Json.JsonReader)", file="BsonWriterTests.cs"];
m5_17 [label="Entry Newtonsoft.Json.Tests.Documentation.JsonSchemaTests.JsonValidatingReader()", span="119-119", cluster="Newtonsoft.Json.Tests.Documentation.JsonSchemaTests.JsonValidatingReader()", file="BsonWriterTests.cs"];
m5_18 [label="string schemaJson = ''{}''", span="121-121", cluster="Newtonsoft.Json.Tests.Documentation.JsonSchemaTests.JsonValidatingReader()", file="BsonWriterTests.cs"];
m5_19 [label="string json = @''{\r\n              'name': 'James',\r\n              'hobbies': ['.NET', 'Blogging', 'Reading', 'Xbox', 'LOLCATS']\r\n            }''", span="124-127", cluster="Newtonsoft.Json.Tests.Documentation.JsonSchemaTests.JsonValidatingReader()", file="BsonWriterTests.cs"];
m5_22 [label="validatingReader.Schema = JsonSchema.Parse(schemaJson)", span="132-132", cluster="Newtonsoft.Json.Tests.Documentation.JsonSchemaTests.JsonValidatingReader()", file="BsonWriterTests.cs"];
m5_20 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="129-129", cluster="Newtonsoft.Json.Tests.Documentation.JsonSchemaTests.JsonValidatingReader()", file="BsonWriterTests.cs"];
m5_21 [label="JsonValidatingReader validatingReader = new JsonValidatingReader(reader)", span="131-131", cluster="Newtonsoft.Json.Tests.Documentation.JsonSchemaTests.JsonValidatingReader()", file="BsonWriterTests.cs"];
m5_24 [label="validatingReader.ValidationEventHandler += (o, a) => messages.Add(a.Message)", span="135-135", cluster="Newtonsoft.Json.Tests.Documentation.JsonSchemaTests.JsonValidatingReader()", file="BsonWriterTests.cs"];
m5_26 [label="Person p = serializer.Deserialize<Person>(validatingReader)", span="138-138", cluster="Newtonsoft.Json.Tests.Documentation.JsonSchemaTests.JsonValidatingReader()", file="BsonWriterTests.cs"];
m5_23 [label="IList<string> messages = new List<string>()", span="134-134", cluster="Newtonsoft.Json.Tests.Documentation.JsonSchemaTests.JsonValidatingReader()", file="BsonWriterTests.cs"];
m5_25 [label="JsonSerializer serializer = new JsonSerializer()", span="137-137", cluster="Newtonsoft.Json.Tests.Documentation.JsonSchemaTests.JsonValidatingReader()", file="BsonWriterTests.cs"];
m5_27 [label="Exit Newtonsoft.Json.Tests.Documentation.JsonSchemaTests.JsonValidatingReader()", span="119-119", cluster="Newtonsoft.Json.Tests.Documentation.JsonSchemaTests.JsonValidatingReader()", file="BsonWriterTests.cs"];
m5_16 [label="Entry Newtonsoft.Json.Linq.JToken.IsValid(Newtonsoft.Json.Schema.JsonSchema, out System.Collections.Generic.IList<string>)", span="79-79", cluster="Newtonsoft.Json.Linq.JToken.IsValid(Newtonsoft.Json.Schema.JsonSchema, out System.Collections.Generic.IList<string>)", file="BsonWriterTests.cs"];
m5_30 [label="Entry Newtonsoft.Json.JsonValidatingReader.JsonValidatingReader(Newtonsoft.Json.JsonReader)", span="297-297", cluster="Newtonsoft.Json.JsonValidatingReader.JsonValidatingReader(Newtonsoft.Json.JsonReader)", file="BsonWriterTests.cs"];
m5_9 [label="Entry Newtonsoft.Json.Tests.Documentation.JsonSchemaTests.IsValidMessages()", span="88-88", cluster="Newtonsoft.Json.Tests.Documentation.JsonSchemaTests.IsValidMessages()", file="BsonWriterTests.cs"];
m5_10 [label="string schemaJson = @''{\r\n               'description': 'A person',\r\n               'type': 'object',\r\n               'properties':\r\n               {\r\n                 'name': {'type':'string'},\r\n                 'hobbies': {\r\n                   'type': 'array',\r\n                   'items': {'type':'string'}\r\n                 }\r\n               }\r\n             }''", span="90-101", cluster="Newtonsoft.Json.Tests.Documentation.JsonSchemaTests.IsValidMessages()", file="BsonWriterTests.cs"];
m5_11 [label="JsonSchema schema = JsonSchema.Parse(schemaJson)", span="104-104", cluster="Newtonsoft.Json.Tests.Documentation.JsonSchemaTests.IsValidMessages()", file="BsonWriterTests.cs"];
m5_12 [label="JObject person = JObject.Parse(@''{\r\n              'name': null,\r\n              'hobbies': ['Invalid content', 0.123456789]\r\n            }'')", span="106-109", cluster="Newtonsoft.Json.Tests.Documentation.JsonSchemaTests.IsValidMessages()", file="BsonWriterTests.cs"];
m5_14 [label="bool valid = person.IsValid(schema, out messages)", span="112-112", cluster="Newtonsoft.Json.Tests.Documentation.JsonSchemaTests.IsValidMessages()", file="BsonWriterTests.cs"];
m5_13 [label="IList<string> messages", span="111-111", cluster="Newtonsoft.Json.Tests.Documentation.JsonSchemaTests.IsValidMessages()", file="BsonWriterTests.cs"];
m5_15 [label="Exit Newtonsoft.Json.Tests.Documentation.JsonSchemaTests.IsValidMessages()", span="88-88", cluster="Newtonsoft.Json.Tests.Documentation.JsonSchemaTests.IsValidMessages()", file="BsonWriterTests.cs"];
m5_31 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="BsonWriterTests.cs"];
m5_55 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="BsonWriterTests.cs"];
m5_37 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="BsonWriterTests.cs"];
m5_53 [label="Entry Newtonsoft.Json.Schema.JsonSchema.JsonSchema()", span="258-258", cluster="Newtonsoft.Json.Schema.JsonSchema.JsonSchema()", file="BsonWriterTests.cs"];
m5_8 [label="Entry Newtonsoft.Json.Linq.JToken.IsValid(Newtonsoft.Json.Schema.JsonSchema)", span="57-57", cluster="Newtonsoft.Json.Linq.JToken.IsValid(Newtonsoft.Json.Schema.JsonSchema)", file="BsonWriterTests.cs"];
m5_28 [label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="72-72", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="BsonWriterTests.cs"];
m5_32 [label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="433-433", cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="BsonWriterTests.cs"];
m5_34 [label="Entry lambda expression", span="135-135", cluster="lambda expression", file="BsonWriterTests.cs"];
m5_35 [label="messages.Add(a.Message)", span="135-135", cluster="lambda expression", file="BsonWriterTests.cs"];
m5_36 [label="Exit lambda expression", span="135-135", cluster="lambda expression", file="BsonWriterTests.cs"];
m5_45 [label="Entry Newtonsoft.Json.Tests.Documentation.JsonSchemaTests.ManuallyCreateJsonSchema()", span="158-158", cluster="Newtonsoft.Json.Tests.Documentation.JsonSchemaTests.ManuallyCreateJsonSchema()", file="BsonWriterTests.cs"];
m5_46 [label="JsonSchema schema = new JsonSchema()", span="161-161", cluster="Newtonsoft.Json.Tests.Documentation.JsonSchemaTests.ManuallyCreateJsonSchema()", file="BsonWriterTests.cs"];
m5_47 [label="schema.Type = JsonSchemaType.Object", span="162-162", cluster="Newtonsoft.Json.Tests.Documentation.JsonSchemaTests.ManuallyCreateJsonSchema()", file="BsonWriterTests.cs"];
m5_48 [label="schema.Properties = new Dictionary<string, JsonSchema>\r\n            {\r\n                { ''name'', new JsonSchema { Type = JsonSchemaType.String } },\r\n                {\r\n                    ''hobbies'', new JsonSchema\r\n                    {\r\n                        Type = JsonSchemaType.Array,\r\n                        Items = new List<JsonSchema> { new JsonSchema { Type = JsonSchemaType.String } }\r\n                    }\r\n                },\r\n            }", span="163-173", cluster="Newtonsoft.Json.Tests.Documentation.JsonSchemaTests.ManuallyCreateJsonSchema()", file="BsonWriterTests.cs"];
m5_50 [label="bool valid = person.IsValid(schema)", span="180-180", cluster="Newtonsoft.Json.Tests.Documentation.JsonSchemaTests.ManuallyCreateJsonSchema()", file="BsonWriterTests.cs"];
m5_49 [label="JObject person = JObject.Parse(@''{\r\n              'name': 'James',\r\n              'hobbies': ['.NET', 'Blogging', 'Reading', 'Xbox', 'LOLCATS']\r\n            }'')", span="175-178", cluster="Newtonsoft.Json.Tests.Documentation.JsonSchemaTests.ManuallyCreateJsonSchema()", file="BsonWriterTests.cs"];
m5_51 [label="Assert.IsTrue(valid)", span="184-184", cluster="Newtonsoft.Json.Tests.Documentation.JsonSchemaTests.ManuallyCreateJsonSchema()", file="BsonWriterTests.cs"];
m5_52 [label="Exit Newtonsoft.Json.Tests.Documentation.JsonSchemaTests.ManuallyCreateJsonSchema()", span="158-158", cluster="Newtonsoft.Json.Tests.Documentation.JsonSchemaTests.ManuallyCreateJsonSchema()", file="BsonWriterTests.cs"];
m5_43 [label="Entry Newtonsoft.Json.Tests.Documentation.File.OpenText(string)", span="58-58", cluster="Newtonsoft.Json.Tests.Documentation.File.OpenText(string)", file="BsonWriterTests.cs"];
m5_0 [label="Entry Newtonsoft.Json.Tests.Documentation.JsonSchemaTests.IsValidBasic()", span="60-60", cluster="Newtonsoft.Json.Tests.Documentation.JsonSchemaTests.IsValidBasic()", file="BsonWriterTests.cs"];
m5_1 [label="string schemaJson = @''{\r\n              'description': 'A person',\r\n              'type': 'object',\r\n              'properties':\r\n              {\r\n                'name': {'type':'string'},\r\n                'hobbies': {\r\n                  'type': 'array',\r\n                  'items': {'type':'string'}\r\n                }\r\n              }\r\n            }''", span="63-74", cluster="Newtonsoft.Json.Tests.Documentation.JsonSchemaTests.IsValidBasic()", file="BsonWriterTests.cs"];
m5_2 [label="JsonSchema schema = JsonSchema.Parse(schemaJson)", span="76-76", cluster="Newtonsoft.Json.Tests.Documentation.JsonSchemaTests.IsValidBasic()", file="BsonWriterTests.cs"];
m5_3 [label="JObject person = JObject.Parse(@''{\r\n              'name': 'James',\r\n              'hobbies': ['.NET', 'Blogging', 'Reading', 'Xbox', 'LOLCATS']\r\n            }'')", span="78-81", cluster="Newtonsoft.Json.Tests.Documentation.JsonSchemaTests.IsValidBasic()", file="BsonWriterTests.cs"];
m5_4 [label="bool valid = person.IsValid(schema)", span="83-83", cluster="Newtonsoft.Json.Tests.Documentation.JsonSchemaTests.IsValidBasic()", file="BsonWriterTests.cs"];
m5_5 [label="Exit Newtonsoft.Json.Tests.Documentation.JsonSchemaTests.IsValidBasic()", span="60-60", cluster="Newtonsoft.Json.Tests.Documentation.JsonSchemaTests.IsValidBasic()", file="BsonWriterTests.cs"];
m5_54 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="BsonWriterTests.cs"];
m5_56 [label=messages, span="", file="BsonWriterTests.cs"];
m7_0 [label="Entry Newtonsoft.Json.Tests.TestObjects.ConstructorReadonlyFields.ConstructorReadonlyFields(string, int)", span="32-32", cluster="Newtonsoft.Json.Tests.TestObjects.ConstructorReadonlyFields.ConstructorReadonlyFields(string, int)", file="ConstructorReadonlyFields.cs"];
m7_1 [label="A = a", span="34-34", cluster="Newtonsoft.Json.Tests.TestObjects.ConstructorReadonlyFields.ConstructorReadonlyFields(string, int)", color=green, community=0, file="ConstructorReadonlyFields.cs"];
m7_2 [label="B = b", span="35-35", cluster="Newtonsoft.Json.Tests.TestObjects.ConstructorReadonlyFields.ConstructorReadonlyFields(string, int)", color=green, community=0, file="ConstructorReadonlyFields.cs"];
m7_3 [label="Exit Newtonsoft.Json.Tests.TestObjects.ConstructorReadonlyFields.ConstructorReadonlyFields(string, int)", span="32-32", cluster="Newtonsoft.Json.Tests.TestObjects.ConstructorReadonlyFields.ConstructorReadonlyFields(string, int)", file="ConstructorReadonlyFields.cs"];
m7_4 [label="Newtonsoft.Json.Tests.TestObjects.ConstructorReadonlyFields", span="", file="ConstructorReadonlyFields.cs"];
m8_13 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="ConvertUtils.cs"];
m8_14 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="ConvertUtils.cs"];
m8_4 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeCustomCreationConverter.Example()", span="33-33", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeCustomCreationConverter.Example()", file="ConvertUtils.cs"];
m8_5 [label="string json = @''{\r\n              'Department': 'Furniture',\r\n              'JobTitle': 'Carpenter',\r\n              'FirstName': 'John',\r\n              'LastName': 'Joinery',\r\n              'BirthDate': '1983-02-02T00:00:00'\r\n            }''", span="36-42", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeCustomCreationConverter.Example()", file="ConvertUtils.cs"];
m8_6 [label="Person person = JsonConvert.DeserializeObject<Person>(json, new PersonConverter())", span="44-44", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeCustomCreationConverter.Example()", file="ConvertUtils.cs"];
m8_7 [label="Console.WriteLine(person.GetType().Name)", span="46-46", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeCustomCreationConverter.Example()", file="ConvertUtils.cs"];
m8_8 [label="Employee employee = (Employee)person", span="49-49", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeCustomCreationConverter.Example()", file="ConvertUtils.cs"];
m8_9 [label="Console.WriteLine(employee.JobTitle)", span="51-51", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeCustomCreationConverter.Example()", file="ConvertUtils.cs"];
m8_10 [label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeCustomCreationConverter.Example()", span="33-33", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeCustomCreationConverter.Example()", file="ConvertUtils.cs"];
m8_0 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeCustomCreationConverter.PersonConverter.Create(System.Type)", span="26-26", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeCustomCreationConverter.PersonConverter.Create(System.Type)", file="ConvertUtils.cs"];
m8_1 [label="return new Employee();", span="28-28", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeCustomCreationConverter.PersonConverter.Create(System.Type)", file="ConvertUtils.cs"];
m8_2 [label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeCustomCreationConverter.PersonConverter.Create(System.Type)", span="26-26", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeCustomCreationConverter.PersonConverter.Create(System.Type)", file="ConvertUtils.cs"];
m8_3 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeCustomCreationConverter.Employee.Employee()", span="18-18", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeCustomCreationConverter.Employee.Employee()", file="ConvertUtils.cs"];
m8_12 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", span="787-787", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", file="ConvertUtils.cs"];
m8_11 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeCustomCreationConverter.PersonConverter.PersonConverter()", span="24-24", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeCustomCreationConverter.PersonConverter.PersonConverter()", file="ConvertUtils.cs"];
m9_14 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="CustomCreationConverter.cs"];
m9_27 [label="Entry lambda expression", span="80-80", cluster="lambda expression", file="CustomCreationConverter.cs"];
m9_18 [label="Entry lambda expression", span="69-69", cluster="lambda expression", file="CustomCreationConverter.cs"];
m9_21 [label="Entry lambda expression", span="74-74", cluster="lambda expression", file="CustomCreationConverter.cs"];
m9_24 [label="Entry lambda expression", span="75-75", cluster="lambda expression", file="CustomCreationConverter.cs"];
m9_19 [label="(string)s", span="69-69", cluster="lambda expression", file="CustomCreationConverter.cs"];
m9_20 [label="Exit lambda expression", span="69-69", cluster="lambda expression", file="CustomCreationConverter.cs"];
m9_22 [label="(string)m.SelectToken(''Products[1].Name'')", span="74-74", cluster="lambda expression", file="CustomCreationConverter.cs"];
m9_23 [label="Exit lambda expression", span="74-74", cluster="lambda expression", file="CustomCreationConverter.cs"];
m9_25 [label="n != null", span="75-75", cluster="lambda expression", file="CustomCreationConverter.cs"];
m9_26 [label="Exit lambda expression", span="75-75", cluster="lambda expression", file="CustomCreationConverter.cs"];
m9_28 [label="(decimal)m.SelectToken(''Products[0].Price'')", span="80-80", cluster="lambda expression", file="CustomCreationConverter.cs"];
m9_29 [label="Exit lambda expression", span="80-80", cluster="lambda expression", file="CustomCreationConverter.cs"];
m9_15 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="CustomCreationConverter.cs"];
m9_16 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Sum<TSource>(System.Func<TSource, decimal>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Sum<TSource>(System.Func<TSource, decimal>)", file="CustomCreationConverter.cs"];
m9_17 [label="Entry System.Console.WriteLine(decimal)", span="0-0", cluster="System.Console.WriteLine(decimal)", file="CustomCreationConverter.cs"];
m9_11 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="CustomCreationConverter.cs"];
m9_12 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="CustomCreationConverter.cs"];
m9_9 [label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="359-359", cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="CustomCreationConverter.cs"];
m9_10 [label="Entry Newtonsoft.Json.Linq.JToken.SelectToken(string)", span="1990-1990", cluster="Newtonsoft.Json.Linq.JToken.SelectToken(string)", file="CustomCreationConverter.cs"];
m9_0 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Linq.QueryJsonSelectTokenWithLinq.Example()", span="35-35", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.QueryJsonSelectTokenWithLinq.Example()", file="CustomCreationConverter.cs"];
m9_1 [label="JObject o = JObject.Parse(@''{\r\n              'Stores': [\r\n                'Lambton Quay',\r\n                'Willis Street'\r\n              ],\r\n              'Manufacturers': [\r\n                {\r\n                  'Name': 'Acme Co',\r\n                  'Products': [\r\n                    {\r\n                      'Name': 'Anvil',\r\n                      'Price': 50\r\n                    }\r\n                  ]\r\n                },\r\n                {\r\n                  'Name': 'Contoso',\r\n                  'Products': [\r\n                    {\r\n                      'Name': 'Elbow Grease',\r\n                      'Price': 99.95\r\n                    },\r\n                    {\r\n                      'Name': 'Headlight Fluid',\r\n                      'Price': 4\r\n                    }\r\n                  ]\r\n                }\r\n              ]\r\n            }'')", span="38-67", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.QueryJsonSelectTokenWithLinq.Example()", file="CustomCreationConverter.cs"];
m9_2 [label="IList<string> storeNames = o.SelectToken(''Stores'').Select(s => (string)s).ToList()", span="69-69", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.QueryJsonSelectTokenWithLinq.Example()", file="CustomCreationConverter.cs"];
m9_4 [label="IList<string> firstProductNames = o[''Manufacturers''].Select(m => (string)m.SelectToken(''Products[1].Name''))\r\n                .Where(n => n != null).ToList()", span="74-75", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.QueryJsonSelectTokenWithLinq.Example()", file="CustomCreationConverter.cs"];
m9_6 [label="decimal totalPrice = o[''Manufacturers''].Sum(m => (decimal)m.SelectToken(''Products[0].Price''))", span="80-80", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.QueryJsonSelectTokenWithLinq.Example()", file="CustomCreationConverter.cs"];
m9_3 [label="Console.WriteLine(string.Join('', '', storeNames))", span="71-71", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.QueryJsonSelectTokenWithLinq.Example()", file="CustomCreationConverter.cs"];
m9_5 [label="Console.WriteLine(string.Join('', '', firstProductNames))", span="77-77", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.QueryJsonSelectTokenWithLinq.Example()", file="CustomCreationConverter.cs"];
m9_7 [label="Console.WriteLine(totalPrice)", span="82-82", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.QueryJsonSelectTokenWithLinq.Example()", file="CustomCreationConverter.cs"];
m9_8 [label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Linq.QueryJsonSelectTokenWithLinq.Example()", span="35-35", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.QueryJsonSelectTokenWithLinq.Example()", file="CustomCreationConverter.cs"];
m9_13 [label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0", cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="CustomCreationConverter.cs"];
m10_12 [label="Entry Unk.WriteJson", span="", cluster="Unk.WriteJson", file="DataSetConverter.cs"];
m10_26 [label="Entry Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", span="72-72", cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="DataSetConverter.cs"];
m10_28 [label="Entry Newtonsoft.Json.Converters.DataSetConverter.CanConvert(System.Type)", span="96-96", cluster="Newtonsoft.Json.Converters.DataSetConverter.CanConvert(System.Type)", file="DataSetConverter.cs"];
m10_29 [label="return (valueType == typeof(DataSet));", span="98-98", cluster="Newtonsoft.Json.Converters.DataSetConverter.CanConvert(System.Type)", file="DataSetConverter.cs"];
m10_30 [label="Exit Newtonsoft.Json.Converters.DataSetConverter.CanConvert(System.Type)", span="96-96", cluster="Newtonsoft.Json.Converters.DataSetConverter.CanConvert(System.Type)", file="DataSetConverter.cs"];
m10_25 [label="Entry Newtonsoft.Json.JsonReader.Read()", span="204-204", cluster="Newtonsoft.Json.JsonReader.Read()", file="DataSetConverter.cs"];
m10_24 [label="Entry DataSet.cstr", span="", cluster="DataSet.cstr", file="DataSetConverter.cs"];
m10_0 [label="Entry Newtonsoft.Json.Converters.DataSetConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="45-45", cluster="Newtonsoft.Json.Converters.DataSetConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DataSetConverter.cs"];
m10_1 [label="DataSet dataSet = (DataSet)value", span="47-47", cluster="Newtonsoft.Json.Converters.DataSetConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DataSetConverter.cs"];
m10_3 [label="writer.WriteStartObject()", span="51-51", cluster="Newtonsoft.Json.Converters.DataSetConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DataSetConverter.cs"];
m10_5 [label="writer.WritePropertyName(table.TableName)", span="55-55", cluster="Newtonsoft.Json.Converters.DataSetConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DataSetConverter.cs"];
m10_6 [label="converter.WriteJson(writer, table, serializer)", span="57-57", cluster="Newtonsoft.Json.Converters.DataSetConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DataSetConverter.cs"];
m10_7 [label="writer.WriteEndObject()", span="60-60", cluster="Newtonsoft.Json.Converters.DataSetConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DataSetConverter.cs"];
m10_2 [label="DataTableConverter converter = new DataTableConverter()", span="49-49", cluster="Newtonsoft.Json.Converters.DataSetConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DataSetConverter.cs"];
m10_4 [label="dataSet.Tables", span="53-53", cluster="Newtonsoft.Json.Converters.DataSetConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DataSetConverter.cs"];
m10_8 [label="Exit Newtonsoft.Json.Converters.DataSetConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="45-45", cluster="Newtonsoft.Json.Converters.DataSetConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DataSetConverter.cs"];
m10_14 [label="Entry Newtonsoft.Json.Converters.DataSetConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", span="70-70", cluster="Newtonsoft.Json.Converters.DataSetConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="DataSetConverter.cs"];
m10_15 [label="DataSet ds = new DataSet()", span="72-72", cluster="Newtonsoft.Json.Converters.DataSetConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="DataSetConverter.cs"];
m10_17 [label="reader.Read()", span="76-76", cluster="Newtonsoft.Json.Converters.DataSetConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="DataSetConverter.cs"];
m10_18 [label="reader.TokenType == JsonToken.PropertyName", span="78-78", cluster="Newtonsoft.Json.Converters.DataSetConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="DataSetConverter.cs"];
m10_19 [label="DataTable dt = (DataTable)converter.ReadJson(reader, typeof (DataTable), serializer)", span="80-80", cluster="Newtonsoft.Json.Converters.DataSetConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="DataSetConverter.cs"];
m10_21 [label="reader.Read()", span="84-84", cluster="Newtonsoft.Json.Converters.DataSetConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="DataSetConverter.cs"];
m10_16 [label="DataTableConverter converter = new DataTableConverter()", span="74-74", cluster="Newtonsoft.Json.Converters.DataSetConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="DataSetConverter.cs"];
m10_20 [label="ds.Tables.Add(dt)", span="81-81", cluster="Newtonsoft.Json.Converters.DataSetConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="DataSetConverter.cs"];
m10_22 [label="return ds;", span="86-86", cluster="Newtonsoft.Json.Converters.DataSetConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="DataSetConverter.cs"];
m10_23 [label="Exit Newtonsoft.Json.Converters.DataSetConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", span="70-70", cluster="Newtonsoft.Json.Converters.DataSetConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="DataSetConverter.cs"];
m10_11 [label="Entry Unk.WritePropertyName", span="", cluster="Unk.WritePropertyName", file="DataSetConverter.cs"];
m10_9 [label="Entry Newtonsoft.Json.Converters.DataTableConverter.DataTableConverter()", span="37-37", cluster="Newtonsoft.Json.Converters.DataTableConverter.DataTableConverter()", file="DataSetConverter.cs"];
m10_10 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="227-227", cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="DataSetConverter.cs"];
m10_13 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="236-236", cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="DataSetConverter.cs"];
m10_27 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="DataSetConverter.cs"];
m11_41 [label="Entry Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeMultiTableDataSet()", span="69-69", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeMultiTableDataSet()", file="DataSetConverterTests.cs"];
m11_42 [label="DataSet ds = new DataSet()", span="71-71", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeMultiTableDataSet()", file="DataSetConverterTests.cs"];
m11_43 [label="ds.Tables.Add(CreateDataTable(''FirstTable''))", span="72-72", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeMultiTableDataSet()", color=red, community=0, file="DataSetConverterTests.cs"];
m11_44 [label="ds.Tables.Add(CreateDataTable(''SecondTable''))", span="73-73", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeMultiTableDataSet()", color=green, community=0, file="DataSetConverterTests.cs"];
m11_45 [label="string json = JsonConvert.SerializeObject(ds, Formatting.Indented, new IsoDateTimeConverter())", span="75-75", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeMultiTableDataSet()", file="DataSetConverterTests.cs"];
m11_46 [label="Assert.AreEqual(@''{\r\n  ''''FirstTable'''': [\r\n    {\r\n      ''''StringCol'''': ''''Item Name'''',\r\n      ''''Int32Col'''': 2147483647,\r\n      ''''BooleanCol'''': true,\r\n      ''''TimeSpanCol'''': ''''10.22:10:15.1000000'''',\r\n      ''''DateTimeCol'''': ''''2000-12-29T00:00:00'''',\r\n      ''''DecimalCol'''': 64.0021\r\n    }\r\n  ],\r\n  ''''SecondTable'''': [\r\n    {\r\n      ''''StringCol'''': ''''Item Name'''',\r\n      ''''Int32Col'''': 2147483647,\r\n      ''''BooleanCol'''': true,\r\n      ''''TimeSpanCol'''': ''''10.22:10:15.1000000'''',\r\n      ''''DateTimeCol'''': ''''2000-12-29T00:00:00'''',\r\n      ''''DecimalCol'''': 64.0021\r\n    }\r\n  ]\r\n}'', json)", span="77-98", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeMultiTableDataSet()", color=green, community=0, file="DataSetConverterTests.cs"];
m11_47 [label="Exit Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeMultiTableDataSet()", span="69-69", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeMultiTableDataSet()", file="DataSetConverterTests.cs"];
m11_32 [label="Entry DataTable.cstr", span="", cluster="DataTable.cstr", file="DataSetConverterTests.cs"];
m11_33 [label="Entry DataColumn.cstr", span="", cluster="DataColumn.cstr", file="DataSetConverterTests.cs"];
m11_36 [label="Entry Unk.AcceptChanges", span="", cluster="Unk.AcceptChanges", file="DataSetConverterTests.cs"];
m11_40 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="DataSetConverterTests.cs"];
m11_50 [label="Entry Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", span="102-102", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="DataSetConverterTests.cs"];
m11_51 [label="string json = @''{\r\n  ''''FirstTable'''': [\r\n    {\r\n      ''''StringCol'''': ''''Item Name'''',\r\n      ''''Int32Col'''': 2147483647,\r\n      ''''BooleanCol'''': true,\r\n      ''''TimeSpanCol'''': ''''10.22:10:15.1000000'''',\r\n      ''''DateTimeCol'''': ''''2000-12-29T00:00:00'''',\r\n      ''''DecimalCol'''': 64.0021\r\n    }\r\n  ],\r\n  ''''SecondTable'''': [\r\n    {\r\n      ''''StringCol'''': ''''Item Name'''',\r\n      ''''Int32Col'''': 2147483647,\r\n      ''''BooleanCol'''': true,\r\n      ''''TimeSpanCol'''': ''''10.22:10:15.1000000'''',\r\n      ''''DateTimeCol'''': ''''2000-12-29T00:00:00'''',\r\n      ''''DecimalCol'''': 64.0021\r\n    }\r\n  ]\r\n}''", span="104-125", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", color=green, community=0, file="DataSetConverterTests.cs"];
m11_52 [label="DataSet ds = JsonConvert.DeserializeObject<DataSet>(json, new IsoDateTimeConverter())", span="127-127", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="DataSetConverterTests.cs"];
m11_53 [label="Assert.IsNotNull(ds)", span="128-128", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="DataSetConverterTests.cs"];
m11_54 [label="Assert.AreEqual(2, ds.Tables.Count)", span="130-130", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="DataSetConverterTests.cs"];
m11_55 [label="Assert.AreEqual(''FirstTable'', ds.Tables[0].TableName)", span="131-131", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="DataSetConverterTests.cs"];
m11_56 [label="Assert.AreEqual(''SecondTable'', ds.Tables[1].TableName)", span="132-132", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="DataSetConverterTests.cs", color=green, community=0];
m11_57 [label="DataTable dt = ds.Tables[0]", span="134-134", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="DataSetConverterTests.cs"];
m11_70 [label="Assert.AreEqual(1, ds.Tables[0].Rows.Count)", span="148-148", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="DataSetConverterTests.cs"];
m11_71 [label="Assert.AreEqual(1, ds.Tables[1].Rows.Count)", span="149-149", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="DataSetConverterTests.cs"];
m11_58 [label="Assert.AreEqual(''StringCol'', dt.Columns[0].ColumnName)", span="135-135", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="DataSetConverterTests.cs", color=green, community=0];
m11_59 [label="Assert.AreEqual(typeof(string), dt.Columns[0].DataType)", span="136-136", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="DataSetConverterTests.cs"];
m11_60 [label="Assert.AreEqual(''Int32Col'', dt.Columns[1].ColumnName)", span="137-137", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="DataSetConverterTests.cs"];
m11_61 [label="Assert.AreEqual(typeof(long), dt.Columns[1].DataType)", span="138-138", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="DataSetConverterTests.cs"];
m11_62 [label="Assert.AreEqual(''BooleanCol'', dt.Columns[2].ColumnName)", span="139-139", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="DataSetConverterTests.cs"];
m11_63 [label="Assert.AreEqual(typeof(bool), dt.Columns[2].DataType)", span="140-140", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="DataSetConverterTests.cs", color=green, community=0];
m11_64 [label="Assert.AreEqual(''TimeSpanCol'', dt.Columns[3].ColumnName)", span="141-141", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="DataSetConverterTests.cs", color=green, community=0];
m11_65 [label="Assert.AreEqual(typeof(string), dt.Columns[3].DataType)", span="142-142", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="DataSetConverterTests.cs", color=green, community=0];
m11_66 [label="Assert.AreEqual(''DateTimeCol'', dt.Columns[4].ColumnName)", span="143-143", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="DataSetConverterTests.cs"];
m11_67 [label="Assert.AreEqual(typeof(string), dt.Columns[4].DataType)", span="144-144", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="DataSetConverterTests.cs"];
m11_68 [label="Assert.AreEqual(''DecimalCol'', dt.Columns[5].ColumnName)", span="145-145", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="DataSetConverterTests.cs"];
m11_69 [label="Assert.AreEqual(typeof(double), dt.Columns[5].DataType)", span="146-146", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="DataSetConverterTests.cs"];
m11_72 [label="Exit Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", span="102-102", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="DataSetConverterTests.cs"];
m11_104 [label="Entry System.TimeSpan.TimeSpan(int, int, int, int, int)", span="0-0", cluster="System.TimeSpan.TimeSpan(int, int, int, int, int)", file="DataSetConverterTests.cs"];
m11_105 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="DataSetConverterTests.cs"];
m11_0 [label="Entry Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", span="15-15", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="DataSetConverterTests.cs"];
m11_1 [label="DataSet dataSet = new DataSet(''dataSet'')", span="17-17", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="DataSetConverterTests.cs"];
m11_2 [label="dataSet.Namespace = ''NetFrameWork''", span="18-18", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="DataSetConverterTests.cs"];
m11_3 [label="DataTable table = new DataTable()", span="19-19", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="DataSetConverterTests.cs"];
m11_9 [label="dataSet.Tables.Add(table)", span="26-26", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="DataSetConverterTests.cs"];
m11_16 [label="dataSet.AcceptChanges()", span="35-35", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="DataSetConverterTests.cs"];
m11_17 [label="string json = JsonConvert.SerializeObject(dataSet, Formatting.Indented)", span="37-37", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="DataSetConverterTests.cs"];
m11_4 [label="DataColumn idColumn = new DataColumn(''id'', typeof(int))", span="20-20", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="DataSetConverterTests.cs"];
m11_7 [label="table.Columns.Add(idColumn)", span="24-24", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="DataSetConverterTests.cs"];
m11_8 [label="table.Columns.Add(itemColumn)", span="25-25", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="DataSetConverterTests.cs"];
m11_12 [label="DataRow newRow = table.NewRow()", span="30-30", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="DataSetConverterTests.cs"];
m11_14 [label="table.Rows.Add(newRow)", span="32-32", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="DataSetConverterTests.cs"];
m11_5 [label="idColumn.AutoIncrement = true", span="21-21", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="DataSetConverterTests.cs"];
m11_6 [label="DataColumn itemColumn = new DataColumn(''item'')", span="23-23", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="DataSetConverterTests.cs"];
m11_10 [label="int i = 0", span="28-28", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="DataSetConverterTests.cs"];
m11_11 [label="i < 2", span="28-28", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="DataSetConverterTests.cs"];
m11_13 [label="newRow[''item''] = ''item '' + i", span="31-31", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="DataSetConverterTests.cs"];
m11_15 [label="i++", span="28-28", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="DataSetConverterTests.cs"];
m11_18 [label="Assert.AreEqual(@''{\r\n  ''''Table1'''': [\r\n    {\r\n      ''''id'''': 0,\r\n      ''''item'''': ''''item 0''''\r\n    },\r\n    {\r\n      ''''id'''': 1,\r\n      ''''item'''': ''''item 1''''\r\n    }\r\n  ]\r\n}'', json)", span="39-50", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="DataSetConverterTests.cs"];
m11_19 [label="DataSet deserializedDataSet = JsonConvert.DeserializeObject<DataSet>(json)", span="52-52", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="DataSetConverterTests.cs"];
m11_20 [label="Assert.IsNotNull(deserializedDataSet)", span="53-53", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="DataSetConverterTests.cs"];
m11_21 [label="Assert.AreEqual(1, deserializedDataSet.Tables.Count)", span="55-55", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="DataSetConverterTests.cs"];
m11_22 [label="DataTable dt = deserializedDataSet.Tables[0]", span="57-57", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="DataSetConverterTests.cs"];
m11_23 [label="Assert.AreEqual(''Table1'', dt.TableName)", span="59-59", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="DataSetConverterTests.cs"];
m11_24 [label="Assert.AreEqual(2, dt.Columns.Count)", span="60-60", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="DataSetConverterTests.cs"];
m11_25 [label="Assert.AreEqual(''id'', dt.Columns[0].ColumnName)", span="61-61", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="DataSetConverterTests.cs"];
m11_26 [label="Assert.AreEqual(typeof(long), dt.Columns[0].DataType)", span="62-62", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="DataSetConverterTests.cs"];
m11_27 [label="Assert.AreEqual(''item'', dt.Columns[1].ColumnName)", span="63-63", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="DataSetConverterTests.cs"];
m11_28 [label="Assert.AreEqual(typeof(string), dt.Columns[1].DataType)", span="64-64", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="DataSetConverterTests.cs"];
m11_29 [label="Assert.AreEqual(2, dt.Rows.Count)", span="66-66", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="DataSetConverterTests.cs"];
m11_30 [label="Exit Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", span="15-15", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="DataSetConverterTests.cs"];
m11_31 [label="Entry DataSet.cstr", span="", cluster="DataSet.cstr", file="DataSetConverterTests.cs"];
m11_48 [label="Entry Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string)", span="152-152", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string)", file="DataSetConverterTests.cs"];
m11_74 [label="DataTable myTable = new DataTable(dataTableName)", span="155-155", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string)", file="DataSetConverterTests.cs", color=green, community=0];
m11_75 [label="DataColumn colString = new DataColumn(''StringCol'')", span="158-158", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string)", file="DataSetConverterTests.cs"];
m11_77 [label="myTable.Columns.Add(colString)", span="160-160", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string)", file="DataSetConverterTests.cs"];
m11_80 [label="myTable.Columns.Add(colInt32)", span="164-164", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string)", file="DataSetConverterTests.cs"];
m11_83 [label="myTable.Columns.Add(colBoolean)", span="168-168", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string)", file="DataSetConverterTests.cs"];
m11_86 [label="myTable.Columns.Add(colTimeSpan)", span="172-172", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string)", file="DataSetConverterTests.cs"];
m11_90 [label="myTable.Columns.Add(colDateTime)", span="177-177", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string)", file="DataSetConverterTests.cs"];
m11_93 [label="myTable.Columns.Add(colDecimal)", span="181-181", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string)", file="DataSetConverterTests.cs"];
m11_94 [label="DataRow myNewRow = myTable.NewRow()", span="184-184", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string)", color=red, community=0, file="DataSetConverterTests.cs"];
m11_101 [label="myTable.Rows.Add(myNewRow)", span="192-192", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string)", color=red, community=0, file="DataSetConverterTests.cs"];
m11_102 [label="return myTable;", span="194-194", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string)", file="DataSetConverterTests.cs"];
m11_76 [label="colString.DataType = typeof(string)", span="159-159", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string)", file="DataSetConverterTests.cs"];
m11_78 [label="DataColumn colInt32 = new DataColumn(''Int32Col'')", span="162-162", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string)", file="DataSetConverterTests.cs"];
m11_79 [label="colInt32.DataType = typeof(int)", span="163-163", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string)", file="DataSetConverterTests.cs"];
m11_81 [label="DataColumn colBoolean = new DataColumn(''BooleanCol'')", span="166-166", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string)", file="DataSetConverterTests.cs"];
m11_82 [label="colBoolean.DataType = typeof(bool)", span="167-167", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string)", file="DataSetConverterTests.cs"];
m11_84 [label="DataColumn colTimeSpan = new DataColumn(''TimeSpanCol'')", span="170-170", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string)", file="DataSetConverterTests.cs"];
m11_85 [label="colTimeSpan.DataType = typeof(TimeSpan)", span="171-171", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string)", file="DataSetConverterTests.cs"];
m11_87 [label="DataColumn colDateTime = new DataColumn(''DateTimeCol'')", span="174-174", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string)", file="DataSetConverterTests.cs"];
m11_88 [label="colDateTime.DataType = typeof(DateTime)", span="175-175", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string)", file="DataSetConverterTests.cs"];
m11_89 [label="colDateTime.DateTimeMode = DataSetDateTime.Utc", span="176-176", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string)", file="DataSetConverterTests.cs"];
m11_91 [label="DataColumn colDecimal = new DataColumn(''DecimalCol'')", span="179-179", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string)", file="DataSetConverterTests.cs"];
m11_92 [label="colDecimal.DataType = typeof(decimal)", span="180-180", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string)", file="DataSetConverterTests.cs"];
m11_95 [label="myNewRow[''StringCol''] = ''Item Name''", span="186-186", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string)", color=red, community=0, file="DataSetConverterTests.cs"];
m11_96 [label="myNewRow[''Int32Col''] = 2147483647", span="187-187", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string)", color=red, community=0, file="DataSetConverterTests.cs"];
m11_97 [label="myNewRow[''BooleanCol''] = true", span="188-188", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string)", color=red, community=0, file="DataSetConverterTests.cs"];
m11_98 [label="myNewRow[''TimeSpanCol''] = new TimeSpan(10, 22, 10, 15, 100)", span="189-189", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string)", color=red, community=0, file="DataSetConverterTests.cs"];
m11_99 [label="myNewRow[''DateTimeCol''] = new DateTime(2000, 12, 29, 0, 0, 0, DateTimeKind.Utc)", span="190-190", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string)", color=red, community=0, file="DataSetConverterTests.cs"];
m11_100 [label="myNewRow[''DecimalCol''] = 64.0021", span="191-191", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string)", color=red, community=0, file="DataSetConverterTests.cs"];
m11_103 [label="Exit Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string)", span="152-152", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string)", file="DataSetConverterTests.cs"];
m11_37 [label="Entry Unk.SerializeObject", span="", cluster="Unk.SerializeObject", file="DataSetConverterTests.cs"];
m11_35 [label="Entry Unk.NewRow", span="", cluster="Unk.NewRow", file="DataSetConverterTests.cs"];
m11_73 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", span="575-575", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", file="DataSetConverterTests.cs"];
m11_39 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="547-547", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="DataSetConverterTests.cs"];
m11_38 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="DataSetConverterTests.cs"];
m11_49 [label="Entry Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", span="12-12", cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", file="DataSetConverterTests.cs"];
m11_34 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="DataSetConverterTests.cs"];
m11_106 [label="Newtonsoft.Json.Tests.Converters.DataSetConverterTests", span="", file="DataSetConverterTests.cs"];
m12_17 [label="Entry Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", span="72-72", cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs"];
m12_18 [label="DataTable dt", span="74-74", cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs"];
m12_19 [label="reader.TokenType == JsonToken.PropertyName", span="76-76", cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs"];
m12_20 [label="dt = new DataTable((string)reader.Value)", span="78-78", cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs"];
m12_21 [label="reader.Read()", span="79-79", cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs"];
m12_23 [label="reader.Read()", span="86-86", cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs"];
m12_24 [label="reader.TokenType == JsonToken.StartObject", span="88-88", cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs"];
m12_26 [label="reader.Read()", span="91-91", cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs"];
m12_27 [label="reader.TokenType == JsonToken.PropertyName", span="93-93", cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs"];
m12_28 [label="string columnName = (string) reader.Value", span="95-95", cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs"];
m12_29 [label="reader.Read()", span="97-97", cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs"];
m12_31 [label="Type columnType = GetColumnDataType(reader.TokenType)", span="101-101", cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs"];
m12_33 [label="dr[columnName] = reader.Value", span="105-105", cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs"];
m12_34 [label="reader.Read()", span="106-106", cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs"];
m12_37 [label="reader.Read()", span="112-112", cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs"];
m12_38 [label="reader.Read()", span="115-115", cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs"];
m12_22 [label="dt = new DataTable()", span="83-83", cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs"];
m12_25 [label="DataRow dr = dt.NewRow()", span="90-90", cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs"];
m12_30 [label="!dt.Columns.Contains(columnName)", span="99-99", cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs"];
m12_32 [label="dt.Columns.Add(new DataColumn(columnName, columnType))", span="102-102", cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs"];
m12_36 [label="dt.Rows.Add(dr)", span="110-110", cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs"];
m12_39 [label="return dt;", span="117-117", cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs"];
m12_35 [label="dr.EndEdit()", span="109-109", cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs"];
m12_40 [label="Exit Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", span="72-72", cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs"];
m12_14 [label="Entry Unk.Serialize", span="", cluster="Unk.Serialize", file="DataTableConverter.cs"];
m12_45 [label="Entry Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", span="120-120", cluster="Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", file="DataTableConverter.cs"];
m12_49 [label=tokenType, span="122-122", cluster="Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", file="DataTableConverter.cs"];
m12_50 [label="JsonToken.Integer", span="124-124", cluster="Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", file="DataTableConverter.cs"];
m12_52 [label="JsonToken.Float", span="126-126", cluster="Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", file="DataTableConverter.cs"];
m12_54 [label="JsonToken.String", span="128-128", cluster="Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", file="DataTableConverter.cs"];
m12_58 [label="JsonToken.Boolean", span="132-132", cluster="Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", file="DataTableConverter.cs"];
m12_60 [label="JsonToken.Date", span="134-134", cluster="Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", file="DataTableConverter.cs"];
m12_62 [label="throw new ArgumentOutOfRangeException();", span="137-137", cluster="Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", file="DataTableConverter.cs"];
m12_51 [label="return typeof (long);", span="125-125", cluster="Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", file="DataTableConverter.cs"];
m12_53 [label="return typeof (double);", span="127-127", cluster="Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", file="DataTableConverter.cs"];
m12_55 [label="JsonToken.Null", span="129-129", cluster="Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", file="DataTableConverter.cs"];
m12_56 [label="JsonToken.Undefined", span="130-130", cluster="Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", file="DataTableConverter.cs"];
m12_57 [label="return typeof (string);", span="131-131", cluster="Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", file="DataTableConverter.cs"];
m12_59 [label="return typeof (bool);", span="133-133", cluster="Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", file="DataTableConverter.cs"];
m12_61 [label="return typeof (DateTime);", span="135-135", cluster="Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", file="DataTableConverter.cs"];
m12_63 [label="Exit Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", span="120-120", cluster="Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", file="DataTableConverter.cs"];
m12_41 [label="Entry DataTable.cstr", span="", cluster="DataTable.cstr", file="DataTableConverter.cs"];
m12_46 [label="Entry DataColumn.cstr", span="", cluster="DataColumn.cstr", file="DataTableConverter.cs"];
m12_11 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="244-244", cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="DataTableConverter.cs"];
m12_42 [label="Entry Newtonsoft.Json.JsonReader.Read()", span="204-204", cluster="Newtonsoft.Json.JsonReader.Read()", file="DataTableConverter.cs"];
m12_48 [label="Entry Unk.EndEdit", span="", cluster="Unk.EndEdit", file="DataTableConverter.cs"];
m12_0 [label="Entry Newtonsoft.Json.Converters.DataTableConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="45-45", cluster="Newtonsoft.Json.Converters.DataTableConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs"];
m12_1 [label="DataTable table = (DataTable)value", span="47-47", cluster="Newtonsoft.Json.Converters.DataTableConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs"];
m12_2 [label="writer.WriteStartArray()", span="49-49", cluster="Newtonsoft.Json.Converters.DataTableConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs"];
m12_4 [label="writer.WriteStartObject()", span="53-53", cluster="Newtonsoft.Json.Converters.DataTableConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs"];
m12_6 [label="writer.WritePropertyName(column.ColumnName)", span="56-56", cluster="Newtonsoft.Json.Converters.DataTableConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs"];
m12_7 [label="serializer.Serialize(writer, row[column])", span="57-57", cluster="Newtonsoft.Json.Converters.DataTableConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs"];
m12_8 [label="writer.WriteEndObject()", span="59-59", cluster="Newtonsoft.Json.Converters.DataTableConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs"];
m12_9 [label="writer.WriteEndArray()", span="62-62", cluster="Newtonsoft.Json.Converters.DataTableConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs"];
m12_3 [label="table.Rows", span="51-51", cluster="Newtonsoft.Json.Converters.DataTableConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs"];
m12_5 [label="row.Table.Columns", span="54-54", cluster="Newtonsoft.Json.Converters.DataTableConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs"];
m12_10 [label="Exit Newtonsoft.Json.Converters.DataTableConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="45-45", cluster="Newtonsoft.Json.Converters.DataTableConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs"];
m12_16 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="253-253", cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="DataTableConverter.cs"];
m12_65 [label="Entry Newtonsoft.Json.Converters.DataTableConverter.CanConvert(System.Type)", span="148-148", cluster="Newtonsoft.Json.Converters.DataTableConverter.CanConvert(System.Type)", file="DataTableConverter.cs"];
m12_66 [label="return (valueType == typeof(DataTable));", span="150-150", cluster="Newtonsoft.Json.Converters.DataTableConverter.CanConvert(System.Type)", file="DataTableConverter.cs"];
m12_67 [label="Exit Newtonsoft.Json.Converters.DataTableConverter.CanConvert(System.Type)", span="148-148", cluster="Newtonsoft.Json.Converters.DataTableConverter.CanConvert(System.Type)", file="DataTableConverter.cs"];
m12_44 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="DataTableConverter.cs"];
m12_43 [label="Entry Unk.NewRow", span="", cluster="Unk.NewRow", file="DataTableConverter.cs"];
m12_13 [label="Entry Unk.WritePropertyName", span="", cluster="Unk.WritePropertyName", file="DataTableConverter.cs"];
m12_12 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="227-227", cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="DataTableConverter.cs"];
m12_15 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="236-236", cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="DataTableConverter.cs"];
m12_64 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", file="DataTableConverter.cs"];
m12_47 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="DataTableConverter.cs"];
m14_174 [label="properties.AddProperty(property)", span="369-369", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(Newtonsoft.Json.Serialization.JsonObjectContract)", file="DefaultContractResolver.cs"];
m14_175 [label="return properties;", span="372-372", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(Newtonsoft.Json.Serialization.JsonObjectContract)", file="DefaultContractResolver.cs"];
m14_176 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(Newtonsoft.Json.Serialization.JsonObjectContract)", span="356-356", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(Newtonsoft.Json.Serialization.JsonObjectContract)", file="DefaultContractResolver.cs"];
m14_35 [label="Entry System.Type.AssignableToTypeName(string, out System.Type)", span="194-194", cluster="System.Type.AssignableToTypeName(string, out System.Type)", file="DefaultContractResolver.cs"];
m14_37 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="DefaultContractResolver.cs"];
m14_38 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", span="119-119", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs"];
m14_40 [label="propertyInfo != null", span="122-122", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs"];
m14_39 [label="PropertyInfo propertyInfo = memberInfo as PropertyInfo", span="121-121", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs"];
m14_41 [label="propertyInfo.PropertyType.IsGenericType && propertyInfo.PropertyType.GetGenericTypeDefinition().FullName == ''System.Data.Objects.DataClasses.EntityReference`1''", span="124-124", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs"];
m14_42 [label="return false;", span="125-125", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs"];
m14_148 [label="method.ReturnType != typeof(void)", span="324-324", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs"];
m14_438 [label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(short?, System.Threading.CancellationToken)", span="1018-1018", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(short?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_440 [label="return value == null ? DoWriteNullAsync(cancellationToken) : WriteIntegerValueAsync(value.GetValueOrDefault(), cancellationToken);", span="1020-1020", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(short?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_441 [label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(short?, System.Threading.CancellationToken)", span="1018-1018", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(short?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_536 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndArrayAsync(System.Threading.CancellationToken)", span="313-313", cluster="Newtonsoft.Json.JsonWriter.WriteEndArrayAsync(System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_36 [label="Entry Newtonsoft.Json.JsonWriter.CloseAsync(System.Threading.CancellationToken)", span="118-118", cluster="Newtonsoft.Json.JsonWriter.CloseAsync(System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_493 [label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(ulong?, System.Threading.CancellationToken)", span="1386-1386", cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(ulong?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_110 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", span="263-263", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", file="DefaultContractResolver.cs"];
m14_111 [label="JsonPrimitiveContract contract = new JsonPrimitiveContract(objectType)", span="265-265", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", file="DefaultContractResolver.cs"];
m14_113 [label="return contract;", span="268-268", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", file="DefaultContractResolver.cs"];
m14_114 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", span="263-263", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", file="DefaultContractResolver.cs"];
m14_112 [label="InitializeContract(contract)", span="266-266", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", file="DefaultContractResolver.cs"];
m14_115 [label="Entry Newtonsoft.Json.Serialization.JsonPrimitiveContract.JsonPrimitiveContract(System.Type)", span="38-38", cluster="Newtonsoft.Json.Serialization.JsonPrimitiveContract.JsonPrimitiveContract(System.Type)", file="DefaultContractResolver.cs"];
m14_33 [label="return _safeAsync ? DoCloseAsync(cancellationToken) : base.CloseAsync(cancellationToken);", span="118-118", cluster="Newtonsoft.Json.JsonTextWriter.CloseAsync(System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_366 [label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(System.Guid, System.Threading.CancellationToken)", span="1057-1057", cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(System.Guid, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_64 [label="return null;", span="157-157", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParametrizedConstructor(System.Type)", file="DefaultContractResolver.cs"];
m14_65 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetParametrizedConstructor(System.Type)", span="150-150", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParametrizedConstructor(System.Type)", file="DefaultContractResolver.cs"];
m14_66 [label="Entry System.Type.GetConstructors(System.Reflection.BindingFlags)", span="0-0", cluster="System.Type.GetConstructors(System.Reflection.BindingFlags)", file="DefaultContractResolver.cs"];
m14_67 [label="JsonContainerAttribute containerAttribute = JsonTypeReflector.GetJsonContainerAttribute(contract.UnderlyingType)", span="162-162", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs"];
m14_68 [label="containerAttribute != null", span="163-163", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs"];
m14_489 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(ulong?, System.Threading.CancellationToken)", span="1148-1148", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(ulong?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_490 [label="return _safeAsync ? DoWriteValueAsync(value, cancellationToken) : base.WriteValueAsync(value, cancellationToken);", span="1150-1150", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(ulong?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_491 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(ulong?, System.Threading.CancellationToken)", span="1148-1148", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(ulong?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_579 [label="Entry Newtonsoft.Json.Utilities.BufferUtils.ReturnBuffer(Newtonsoft.Json.IArrayPool<char>, char[])", span="53-53", cluster="Newtonsoft.Json.Utilities.BufferUtils.ReturnBuffer(Newtonsoft.Json.IArrayPool<char>, char[])", file="DefaultContractResolver.cs"];
m14_17 [label=allMembers, span="91-91", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs"];
m14_18 [label="defaultMembers.Contains(member)", span="93-93", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs"];
m14_19 [label="serializableMembers.Add(member)", span="95-95", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs"];
m14_184 [label="property.Converter = JsonTypeReflector.GetJsonConverter(member, property.PropertyType)", span="390-390", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs"];
m14_185 [label="DataContractAttribute dataContractAttribute = JsonTypeReflector.GetDataContractAttribute(member.DeclaringType)", span="393-393", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs"];
m14_186 [label="DataMemberAttribute dataMemberAttribute", span="395-395", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs"];
m14_187 [label="dataContractAttribute != null", span="396-396", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs"];
m14_129 [label="typeof(IEnumerable).IsAssignableFrom(objectType)", span="298-298", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", color=green, community=0];
m14_130 [label="return CreateArrayContract(objectType);", span="300-300", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", color=green, community=0];
m14_131 [label="objectType.IsSubclassOf(typeof(JToken))", span="302-302", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", color=green, community=0];
m14_46 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", span="137-137", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs"];
m14_273 [label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(char?, System.Threading.CancellationToken)", span="848-848", cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(char?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_201 [label="dataMemberAttribute != null", span="420-420", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs"];
m14_203 [label="property.Required = Required.Default", span="424-424", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs"];
m14_205 [label="property.Readable = ReflectionUtils.CanReadMemberValue(member)", span="434-434", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs"];
m14_206 [label="property.Writable = ReflectionUtils.CanSetMemberValue(member)", span="435-435", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs"];
m14_204 [label="property.Ignored = (hasIgnoreAttribute ||\r\n                      (contract.MemberSerialization == MemberSerialization.OptIn\r\n                       && propertyAttribute == null\r\n#if !PocketPC && !NET20\r\n                       && dataMemberAttribute == null\r\n#endif\r\n))", span="426-432", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs"];
m14_207 [label="property.MemberConverter = JsonTypeReflector.GetJsonConverter(member, ReflectionUtils.GetMemberUnderlyingType(member))", span="437-437", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs"];
m14_137 [label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", span="379-379", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", file="DefaultContractResolver.cs"];
m14_49 [label="contract.MemberSerialization = JsonTypeReflector.GetObjectMemberSerialization(objectType)", span="142-142", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs"];
m14_387 [label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(int?, System.Threading.CancellationToken)", span="887-887", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(int?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_389 [label="return value == null ? DoWriteNullAsync(cancellationToken) : WriteIntegerValueAsync(value.GetValueOrDefault(), cancellationToken);", span="889-889", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(int?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_390 [label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(int?, System.Threading.CancellationToken)", span="887-887", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(int?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_177 [label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="48-48", cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="DefaultContractResolver.cs"];
m14_179 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", span="381-381", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs"];
m14_181 [label="JsonProperty property = new JsonProperty()", span="383-383", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs"];
m14_182 [label="property.PropertyType = ReflectionUtils.GetMemberUnderlyingType(member)", span="384-384", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs"];
m14_180 [label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", span="65-65", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", file="DefaultContractResolver.cs"];
m14_183 [label="property.ValueProvider = new DynamicValueProvider(member)", span="386-386", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs"];
m14_85 [label="contract.OnDeserializing = method", span="218-218", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs"];
m14_87 [label="contract.OnDeserialized = method", span="222-222", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs"];
m14_88 [label="IsValidCallback(method, parameters, typeof(OnErrorAttribute), contract.OnError, ref prevAttributeType)", span="225-225", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs"];
m14_471 [label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(System.TimeSpan?, System.Threading.CancellationToken)", span="1306-1306", cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(System.TimeSpan?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_78 [label="Type prevAttributeType = null", span="204-204", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs"];
m14_79 [label="ParameterInfo[] parameters = method.GetParameters()", span="205-205", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs"];
m14_80 [label="IsValidCallback(method, parameters, typeof(OnSerializingAttribute), contract.OnSerializing, ref prevAttributeType)", span="208-208", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs"];
m14_81 [label="contract.OnSerializing = method", span="210-210", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs"];
m14_86 [label="IsValidCallback(method, parameters, typeof(OnDeserializedAttribute), contract.OnDeserialized, ref prevAttributeType)", span="220-220", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs"];
m14_93 [label="Entry Newtonsoft.Json.Utilities.LateBoundDelegateFactory.CreateDefaultConstructor(System.Type)", span="126-126", cluster="Newtonsoft.Json.Utilities.LateBoundDelegateFactory.CreateDefaultConstructor(System.Type)", file="DefaultContractResolver.cs"];
m14_245 [label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(byte?, System.Threading.CancellationToken)", span="791-791", cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(byte?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_268 [label="Entry Newtonsoft.Json.JsonConvert.ToString(char)", span="173-173", cluster="Newtonsoft.Json.JsonConvert.ToString(char)", file="DefaultContractResolver.cs"];
m14_76 [label="contract.UnderlyingType.GetMethods(BindingFlags.NonPublic | BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)", span="197-197", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs"];
m14_380 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(int, System.Threading.CancellationToken)", span="869-869", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(int, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_381 [label="return _safeAsync ? WriteIntegerValueAsync(value, cancellationToken) : base.WriteValueAsync(value, cancellationToken);", span="871-871", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(int, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_382 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(int, System.Threading.CancellationToken)", span="869-869", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(int, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_500 [label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(System.Uri, System.Threading.CancellationToken)", span="1405-1405", cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(System.Uri, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_372 [label="Entry System.Guid.ToString(string, System.IFormatProvider)", span="0-0", cluster="System.Guid.ToString(string, System.IFormatProvider)", file="DefaultContractResolver.cs"];
m14_142 [label="currentCallback != null", span="315-315", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs"];
m14_315 [label="Entry System.DateTimeOffset.ToString(string, System.IFormatProvider)", span="0-0", cluster="System.DateTimeOffset.ToString(string, System.IFormatProvider)", file="DefaultContractResolver.cs"];
m14_220 [label="Entry Newtonsoft.Json.JsonWriter.InternalWriteWhitespace(string)", span="1698-1698", cluster="Newtonsoft.Json.JsonWriter.InternalWriteWhitespace(string)", file="DefaultContractResolver.cs"];
m14_144 [label="prevAttributeType != null", span="318-318", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", color=green, community=0];
m14_145 [label="throw new Exception(''Invalid Callback. Method '{3}' in type '{2}' has both '{0}' and '{1}'.''.FormatWith(CultureInfo.InvariantCulture, prevAttributeType, attributeType, GetClrTypeFullName(method.DeclaringType), method));", span="319-319", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", color=green, community=0];
m14_146 [label="method.IsVirtual", span="321-321", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs"];
m14_159 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteStartArrayAsync(System.Threading.CancellationToken)", span="372-372", cluster="Newtonsoft.Json.JsonTextWriter.WriteStartArrayAsync(System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_241 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(byte?, System.Threading.CancellationToken)", span="552-552", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(byte?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_242 [label="return _safeAsync ? DoWriteValueAsync(value, cancellationToken) : base.WriteValueAsync(value, cancellationToken);", span="554-554", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(byte?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_243 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(byte?, System.Threading.CancellationToken)", span="552-552", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(byte?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_342 [label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(double, System.Threading.CancellationToken)", span="981-981", cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(double, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_259 [label="Entry Newtonsoft.Json.Utilities.Base64Encoder.EncodeAsync(byte[], int, int, System.Threading.CancellationToken)", span="160-160", cluster="Newtonsoft.Json.Utilities.Base64Encoder.EncodeAsync(byte[], int, int, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_264 [label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(char, System.Threading.CancellationToken)", span="597-597", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(char, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_266 [label="return WriteValueInternalAsync(JsonToken.String, JsonConvert.ToString(value), cancellationToken);", span="599-599", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(char, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_267 [label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(char, System.Threading.CancellationToken)", span="597-597", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(char, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_406 [label="Entry Unk.WriteValueInternalAsync", span="", cluster="Unk.WriteValueInternalAsync", file="DefaultContractResolver.cs"];
m14_215 [label="return property;", span="448-448", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs"];
m14_217 [label="Entry Newtonsoft.Json.Serialization.JsonProperty.JsonProperty()", span="32-32", cluster="Newtonsoft.Json.Serialization.JsonProperty.JsonProperty()", file="DefaultContractResolver.cs"];
m14_218 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", span="388-388", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs"];
m14_219 [label="Entry Newtonsoft.Json.Serialization.DynamicValueProvider.DynamicValueProvider(System.Reflection.MemberInfo)", span="49-49", cluster="Newtonsoft.Json.Serialization.DynamicValueProvider.DynamicValueProvider(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs"];
m14_474 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(uint, System.Threading.CancellationToken)", span="1101-1101", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(uint, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_475 [label="return _safeAsync ? WriteIntegerValueAsync(value, cancellationToken) : base.WriteValueAsync(value, cancellationToken);", span="1103-1103", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(uint, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_476 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(uint, System.Threading.CancellationToken)", span="1101-1101", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(uint, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_224 [label="return propertyName;", span="458-458", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", file="DefaultContractResolver.cs"];
m14_226 [label="Newtonsoft.Json.Serialization.DefaultContractResolver", span="", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(bool, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_227 [label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(bool, System.Threading.CancellationToken)", span="508-508", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(bool, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_252 [label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(byte[], System.Threading.CancellationToken)", span="810-810", cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(byte[], System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_541 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteEndObjectAsync(System.Threading.CancellationToken)", span="1273-1273", cluster="Newtonsoft.Json.JsonTextWriter.WriteEndObjectAsync(System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_542 [label="return _safeAsync ? InternalWriteEndAsync(JsonContainerType.Object, cancellationToken) : base.WriteEndObjectAsync(cancellationToken);", span="1275-1275", cluster="Newtonsoft.Json.JsonTextWriter.WriteEndObjectAsync(System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_543 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteEndObjectAsync(System.Threading.CancellationToken)", span="1273-1273", cluster="Newtonsoft.Json.JsonTextWriter.WriteEndObjectAsync(System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_166 [label="return _writer.WriteAsync('[', cancellationToken);", span="382-382", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteStartArrayAsync(System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_7 [label="throw new ArgumentNullException(''type'');", span="71-71", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DefaultContractResolver.cs"];
m14_0 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", span="56-56", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", file="DefaultContractResolver.cs"];
m14_1 [label="DefaultMembersSearchFlags = BindingFlags.Public | BindingFlags.Instance", span="58-58", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", file="DefaultContractResolver.cs"];
m14_2 [label="_typeContractCache = new ThreadSafeStore<Type, JsonContract>(CreateContract)", span="60-60", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", file="DefaultContractResolver.cs"];
m14_32 [label="Entry Newtonsoft.Json.JsonTextWriter.CloseAsync(System.Threading.CancellationToken)", span="116-116", cluster="Newtonsoft.Json.JsonTextWriter.CloseAsync(System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_466 [label="Entry System.TimeSpan.ToString(string, System.IFormatProvider)", span="0-0", cluster="System.TimeSpan.ToString(string, System.IFormatProvider)", file="DefaultContractResolver.cs"];
m14_4 [label="Entry Newtonsoft.Json.JsonWriter.FlushAsync(System.Threading.CancellationToken)", span="136-136", cluster="Newtonsoft.Json.JsonWriter.FlushAsync(System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_398 [label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(long?, System.Threading.CancellationToken)", span="918-918", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(long?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_400 [label="return value == null ? DoWriteNullAsync(cancellationToken) : WriteIntegerValueAsync(value.GetValueOrDefault(), cancellationToken);", span="920-920", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(long?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_401 [label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(long?, System.Threading.CancellationToken)", span="918-918", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(long?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_439 [label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(short?, System.Threading.CancellationToken)", span="1249-1249", cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(short?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_384 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(int?, System.Threading.CancellationToken)", span="882-882", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(int?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_385 [label="return _safeAsync ? DoWriteValueAsync(value, cancellationToken) : base.WriteValueAsync(value, cancellationToken);", span="884-884", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(int?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_386 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(int?, System.Threading.CancellationToken)", span="882-882", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(int?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_12 [label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteValueDelimiterAsync(System.Threading.CancellationToken)", span="75-75", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueDelimiterAsync(System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_13 [label="Entry Newtonsoft.Json.JsonWriter.WriteValueDelimiterAsync(System.Threading.CancellationToken)", span="191-191", cluster="Newtonsoft.Json.JsonWriter.WriteValueDelimiterAsync(System.Threading.CancellationToken)", color=green, community=0, file="DefaultContractResolver.cs"];
m14_14 [label="return _writer.WriteAsync(',', cancellationToken);", span="77-77", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueDelimiterAsync(System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_22 [label=token, span="95-95", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteEndAsync(Newtonsoft.Json.JsonToken, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_15 [label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteValueDelimiterAsync(System.Threading.CancellationToken)", span="75-75", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueDelimiterAsync(System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_25 [label="JsonToken.EndArray", span="99-99", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteEndAsync(Newtonsoft.Json.JsonToken, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_16 [label="Entry System.IO.TextWriter.WriteAsync(char, System.Threading.CancellationToken)", span="71-71", cluster="System.IO.TextWriter.WriteAsync(char, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_20 [label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteEndAsync(Newtonsoft.Json.JsonToken, System.Threading.CancellationToken)", span="93-93", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteEndAsync(Newtonsoft.Json.JsonToken, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_23 [label="JsonToken.EndObject", span="97-97", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteEndAsync(Newtonsoft.Json.JsonToken, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_26 [label="return _writer.WriteAsync(']', cancellationToken);", span="100-100", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteEndAsync(Newtonsoft.Json.JsonToken, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_27 [label="JsonToken.EndConstructor", span="101-101", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteEndAsync(Newtonsoft.Json.JsonToken, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_24 [label="return _writer.WriteAsync('}', cancellationToken);", span="98-98", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteEndAsync(Newtonsoft.Json.JsonToken, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_21 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndAsync(Newtonsoft.Json.JsonToken, System.Threading.CancellationToken)", span="155-155", cluster="Newtonsoft.Json.JsonWriter.WriteEndAsync(Newtonsoft.Json.JsonToken, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_28 [label="return _writer.WriteAsync(')', cancellationToken);", span="102-102", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteEndAsync(Newtonsoft.Json.JsonToken, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_419 [label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(object, System.Threading.CancellationToken)", span="1171-1171", cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(object, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_562 [label="Entry Newtonsoft.Json.JsonTextWriter.EnsureWriteBuffer(int, int)", span="1309-1309", cluster="Newtonsoft.Json.JsonTextWriter.EnsureWriteBuffer(int, int)", file="DefaultContractResolver.cs"];
m14_563 [label="length < 35", span="1311-1311", cluster="Newtonsoft.Json.JsonTextWriter.EnsureWriteBuffer(int, int)", file="DefaultContractResolver.cs"];
m14_567 [label="return _writeBuffer = BufferUtils.RentBuffer(_arrayPool, length);", span="1319-1319", cluster="Newtonsoft.Json.JsonTextWriter.EnsureWriteBuffer(int, int)", file="DefaultContractResolver.cs"];
m14_568 [label="buffer.Length >= length", span="1322-1322", cluster="Newtonsoft.Json.JsonTextWriter.EnsureWriteBuffer(int, int)", file="DefaultContractResolver.cs"];
m14_570 [label="char[] newBuffer = BufferUtils.RentBuffer(_arrayPool, length)", span="1327-1327", cluster="Newtonsoft.Json.JsonTextWriter.EnsureWriteBuffer(int, int)", file="DefaultContractResolver.cs"];
m14_571 [label="copyTo != 0", span="1328-1328", cluster="Newtonsoft.Json.JsonTextWriter.EnsureWriteBuffer(int, int)", file="DefaultContractResolver.cs"];
m14_572 [label="Array.Copy(buffer, newBuffer, copyTo)", span="1330-1330", cluster="Newtonsoft.Json.JsonTextWriter.EnsureWriteBuffer(int, int)", file="DefaultContractResolver.cs"];
m14_564 [label="length = 35", span="1313-1313", cluster="Newtonsoft.Json.JsonTextWriter.EnsureWriteBuffer(int, int)", file="DefaultContractResolver.cs"];
m14_565 [label="char[] buffer = _writeBuffer", span="1316-1316", cluster="Newtonsoft.Json.JsonTextWriter.EnsureWriteBuffer(int, int)", file="DefaultContractResolver.cs"];
m14_566 [label="buffer == null", span="1317-1317", cluster="Newtonsoft.Json.JsonTextWriter.EnsureWriteBuffer(int, int)", file="DefaultContractResolver.cs"];
m14_569 [label="return buffer;", span="1324-1324", cluster="Newtonsoft.Json.JsonTextWriter.EnsureWriteBuffer(int, int)", file="DefaultContractResolver.cs"];
m14_573 [label="BufferUtils.ReturnBuffer(_arrayPool, buffer)", span="1333-1333", cluster="Newtonsoft.Json.JsonTextWriter.EnsureWriteBuffer(int, int)", file="DefaultContractResolver.cs"];
m14_574 [label="_writeBuffer = newBuffer", span="1334-1334", cluster="Newtonsoft.Json.JsonTextWriter.EnsureWriteBuffer(int, int)", file="DefaultContractResolver.cs"];
m14_575 [label="return newBuffer;", span="1335-1335", cluster="Newtonsoft.Json.JsonTextWriter.EnsureWriteBuffer(int, int)", file="DefaultContractResolver.cs"];
m14_576 [label="Exit Newtonsoft.Json.JsonTextWriter.EnsureWriteBuffer(int, int)", span="1309-1309", cluster="Newtonsoft.Json.JsonTextWriter.EnsureWriteBuffer(int, int)", file="DefaultContractResolver.cs"];
m14_446 [label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(string, System.Threading.CancellationToken)", span="1268-1268", cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(string, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_535 [label="Entry Newtonsoft.Json.JsonWriter.InternalWriteEndAsync(Newtonsoft.Json.JsonContainerType, System.Threading.CancellationToken)", span="278-278", cluster="Newtonsoft.Json.JsonWriter.InternalWriteEndAsync(Newtonsoft.Json.JsonContainerType, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_524 [label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteCommentAsync(string, System.Threading.CancellationToken)", span="1234-1234", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteCommentAsync(string, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_526 [label="await InternalWriteCommentAsync(cancellationToken).ConfigureAwait(false)", span="1236-1236", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteCommentAsync(string, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_527 [label="await _writer.WriteAsync(''/*'', cancellationToken).ConfigureAwait(false)", span="1237-1237", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteCommentAsync(string, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_528 [label="await _writer.WriteAsync(text, cancellationToken).ConfigureAwait(false)", span="1238-1238", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteCommentAsync(string, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_529 [label="await _writer.WriteAsync(''*/'', cancellationToken).ConfigureAwait(false)", span="1239-1239", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteCommentAsync(string, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_530 [label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteCommentAsync(string, System.Threading.CancellationToken)", span="1234-1234", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteCommentAsync(string, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_290 [label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.EnsureDateTime(System.DateTime, Newtonsoft.Json.DateTimeZoneHandling)", span="92-92", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.EnsureDateTime(System.DateTime, Newtonsoft.Json.DateTimeZoneHandling)", file="DefaultContractResolver.cs"];
m14_481 [label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(uint?, System.Threading.CancellationToken)", span="1120-1120", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(uint?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_483 [label="return value == null ? DoWriteNullAsync(cancellationToken) : WriteIntegerValueAsync(value.GetValueOrDefault(), cancellationToken);", span="1122-1122", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(uint?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_484 [label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(uint?, System.Threading.CancellationToken)", span="1120-1120", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(uint?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_229 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(bool?, System.Threading.CancellationToken)", span="521-521", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(bool?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_230 [label="return _safeAsync ? DoWriteValueAsync(value, cancellationToken) : base.WriteValueAsync(value, cancellationToken);", span="523-523", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(bool?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_231 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(bool?, System.Threading.CancellationToken)", span="521-521", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(bool?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_556 [label="Entry Newtonsoft.Json.JsonWriter.UpdateScopeWithFinishedValue()", span="343-343", cluster="Newtonsoft.Json.JsonWriter.UpdateScopeWithFinishedValue()", file="DefaultContractResolver.cs"];
m14_434 [label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(short, System.Threading.CancellationToken)", span="1230-1230", cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(short, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_540 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndConstructorAsync(System.Threading.CancellationToken)", span="331-331", cluster="Newtonsoft.Json.JsonWriter.WriteEndConstructorAsync(System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_251 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueNonNullAsync(byte[], System.Threading.CancellationToken)", span="575-575", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueNonNullAsync(byte[], System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_253 [label="await InternalWriteValueAsync(JsonToken.Bytes, cancellationToken).ConfigureAwait(false)", span="577-577", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueNonNullAsync(byte[], System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_255 [label="await Base64Encoder.EncodeAsync(value, 0, value.Length, cancellationToken).ConfigureAwait(false)", span="579-579", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueNonNullAsync(byte[], System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_256 [label="await Base64Encoder.FlushAsync(cancellationToken).ConfigureAwait(false)", span="580-580", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueNonNullAsync(byte[], System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_254 [label="await _writer.WriteAsync(_quoteChar).ConfigureAwait(false)", span="578-578", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueNonNullAsync(byte[], System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_257 [label="await _writer.WriteAsync(_quoteChar).ConfigureAwait(false)", span="581-581", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueNonNullAsync(byte[], System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_258 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueNonNullAsync(byte[], System.Threading.CancellationToken)", span="575-575", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueNonNullAsync(byte[], System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_223 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(bool, System.Threading.CancellationToken)", span="503-503", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(bool, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_521 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteCommentAsync(string, System.Threading.CancellationToken)", span="1229-1229", cluster="Newtonsoft.Json.JsonTextWriter.WriteCommentAsync(string, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_522 [label="return _safeAsync ? DoWriteCommentAsync(text, cancellationToken) : base.WriteCommentAsync(text, cancellationToken);", span="1231-1231", cluster="Newtonsoft.Json.JsonTextWriter.WriteCommentAsync(string, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_523 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteCommentAsync(string, System.Threading.CancellationToken)", span="1229-1229", cluster="Newtonsoft.Json.JsonTextWriter.WriteCommentAsync(string, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_188 [label="dataMemberAttribute = JsonTypeReflector.GetAttribute<DataMemberAttribute>(member)", span="397-397", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs"];
m14_189 [label="dataMemberAttribute = null", span="399-399", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs"];
m14_190 [label="JsonPropertyAttribute propertyAttribute = JsonTypeReflector.GetAttribute<JsonPropertyAttribute>(member)", span="402-402", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs"];
m14_10 [label="return _safeAsync ? DoWriteValueDelimiterAsync(cancellationToken) : base.WriteValueDelimiterAsync(cancellationToken);", span="72-72", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueDelimiterAsync(System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_136 [label="Entry Newtonsoft.Json.JsonTextWriter.DoWritePropertyNameAsync(string, System.Threading.CancellationToken)", span="316-316", cluster="Newtonsoft.Json.JsonTextWriter.DoWritePropertyNameAsync(string, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_116 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteIntegerValueAsync(System.Threading.Tasks.Task, ulong, bool, System.Threading.CancellationToken)", span="276-276", cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValueAsync(System.Threading.Tasks.Task, ulong, bool, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_118 [label="await WriteDigitsAsync(uvalue, negative, cancellationToken).ConfigureAwait(false)", span="279-279", cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValueAsync(System.Threading.Tasks.Task, ulong, bool, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_117 [label="await task.ConfigureAwait(false)", span="278-278", cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValueAsync(System.Threading.Tasks.Task, ulong, bool, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_119 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteIntegerValueAsync(System.Threading.Tasks.Task, ulong, bool, System.Threading.CancellationToken)", span="276-276", cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValueAsync(System.Threading.Tasks.Task, ulong, bool, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_120 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteIntegerValueAsync(long, System.Threading.CancellationToken)", span="282-282", cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValueAsync(long, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_30 [label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteEndAsync(Newtonsoft.Json.JsonToken, System.Threading.CancellationToken)", span="93-93", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteEndAsync(Newtonsoft.Json.JsonToken, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_518 [label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(ushort?, System.Threading.CancellationToken)", span="1445-1445", cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(ushort?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_202 [label="property.Required = (dataMemberAttribute.IsRequired) ? Required.AllowNull : Required.Default", span="421-421", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", color=green, community=0];
m14_496 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.Uri, System.Threading.CancellationToken)", span="1166-1166", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.Uri, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_497 [label="return _safeAsync ? (value == null ? WriteNullAsync(cancellationToken) : WriteValueNotNullAsync(value, cancellationToken)) : base.WriteValueAsync(value, cancellationToken);", span="1168-1168", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.Uri, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_498 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.Uri, System.Threading.CancellationToken)", span="1166-1166", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.Uri, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_92 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", span="63-63", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", file="DefaultContractResolver.cs"];
m14_94 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type)", span="73-73", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type)", file="DefaultContractResolver.cs"];
m14_95 [label="Entry System.Type.GetMethods(System.Reflection.BindingFlags)", span="0-0", cluster="System.Type.GetMethods(System.Reflection.BindingFlags)", file="DefaultContractResolver.cs"];
m14_77 [label="method.ContainsGenericParameters", span="201-201", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs"];
m14_29 [label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataContractAttribute(System.Type)", span="86-86", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataContractAttribute(System.Type)", file="DefaultContractResolver.cs"];
m14_291 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="DefaultContractResolver.cs"];
m14_459 [label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.TimeSpan, System.Threading.CancellationToken)", span="1066-1066", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.TimeSpan, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_461 [label="await InternalWriteValueAsync(JsonToken.String, cancellationToken).ConfigureAwait(false)", span="1068-1068", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.TimeSpan, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_462 [label="await _writer.WriteAsync(_quoteChar, cancellationToken).ConfigureAwait(false)", span="1069-1069", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.TimeSpan, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_463 [label="await _writer.WriteAsync(value.ToString(null, CultureInfo.InvariantCulture), cancellationToken).ConfigureAwait(false)", span="1070-1070", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.TimeSpan, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_464 [label="await _writer.WriteAsync(_quoteChar, cancellationToken).ConfigureAwait(false)", span="1071-1071", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.TimeSpan, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_465 [label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.TimeSpan, System.Threading.CancellationToken)", span="1066-1066", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.TimeSpan, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_485 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(ulong, System.Threading.CancellationToken)", span="1134-1134", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(ulong, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_486 [label="return _safeAsync ? WriteIntegerValueAsync(value, cancellationToken) : base.WriteValueAsync(value, cancellationToken);", span="1136-1136", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(ulong, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_487 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(ulong, System.Threading.CancellationToken)", span="1134-1134", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(ulong, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_69 [label="contract.IsReference = containerAttribute._isReference", span="165-165", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs"];
m14_162 [label="type.IsGenericTypeDefinition || !type.ContainsGenericParameters", span="345-345", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", file="DefaultContractResolver.cs"];
m14_164 [label="return string.Format(CultureInfo.InvariantCulture, ''{0}.{1}'', new object[] { type.Namespace, type.Name });", span="348-348", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", file="DefaultContractResolver.cs"];
m14_167 [label="List<MemberInfo> members = GetSerializableMembers(contract.UnderlyingType)", span="358-358", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(Newtonsoft.Json.Serialization.JsonObjectContract)", file="DefaultContractResolver.cs"];
m14_165 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", span="343-343", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", file="DefaultContractResolver.cs"];
m14_168 [label="members == null", span="359-359", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(Newtonsoft.Json.Serialization.JsonObjectContract)", file="DefaultContractResolver.cs"];
m14_103 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteDigitsAsync(ulong, bool, System.Threading.CancellationToken)", span="254-254", cluster="Newtonsoft.Json.JsonTextWriter.WriteDigitsAsync(ulong, bool, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_221 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(bool, System.Threading.CancellationToken)", span="503-503", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(bool, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_225 [label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(bool, System.Threading.CancellationToken)", span="734-734", cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(bool, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_577 [label="Entry Newtonsoft.Json.Utilities.BufferUtils.RentBuffer(Newtonsoft.Json.IArrayPool<char>, int)", span="42-42", cluster="Newtonsoft.Json.Utilities.BufferUtils.RentBuffer(Newtonsoft.Json.IArrayPool<char>, int)", file="DefaultContractResolver.cs"];
m14_578 [label="Entry System.Array.Copy(System.Array, System.Array, int)", span="0-0", cluster="System.Array.Copy(System.Array, System.Array, int)", file="DefaultContractResolver.cs"];
m14_48 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteEndAsync(System.Threading.CancellationToken)", span="143-143", cluster="Newtonsoft.Json.JsonTextWriter.WriteEndAsync(System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_47 [label="return _safeAsync ? WriteEndInternalAsync(cancellationToken) : base.WriteEndAsync(cancellationToken);", span="145-145", cluster="Newtonsoft.Json.JsonTextWriter.WriteEndAsync(System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_50 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndAsync(System.Threading.CancellationToken)", span="246-246", cluster="Newtonsoft.Json.JsonWriter.WriteEndAsync(System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_52 [label="return _safeAsync ? DoWriteIndentAsync(cancellationToken) : base.WriteIndentAsync(cancellationToken);", span="157-157", cluster="Newtonsoft.Json.JsonTextWriter.WriteIndentAsync(System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_51 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteIndentAsync(System.Threading.CancellationToken)", span="155-155", cluster="Newtonsoft.Json.JsonTextWriter.WriteIndentAsync(System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_53 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteIndentAsync(System.Threading.CancellationToken)", span="155-155", cluster="Newtonsoft.Json.JsonTextWriter.WriteIndentAsync(System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_54 [label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteIndentAsync(System.Threading.CancellationToken)", span="160-160", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteIndentAsync(System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_510 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(ushort, System.Threading.CancellationToken)", span="1197-1197", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(ushort, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_511 [label="return _safeAsync ? WriteIntegerValueAsync(value, cancellationToken) : base.WriteValueAsync(value, cancellationToken);", span="1199-1199", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(ushort, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_512 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(ushort, System.Threading.CancellationToken)", span="1197-1197", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(ushort, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_43 [label="return true;", span="128-128", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs"];
m14_399 [label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(long?, System.Threading.CancellationToken)", span="1152-1152", cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(long?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_402 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(BigInteger, System.Threading.CancellationToken)", span="924-924", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(BigInteger, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_403 [label="return WriteValueInternalAsync(JsonToken.Integer, value.ToString(CultureInfo.InvariantCulture), cancellationToken);", span="926-926", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(BigInteger, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_404 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(BigInteger, System.Threading.CancellationToken)", span="924-924", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(BigInteger, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_126 [label="return CreateObjectContract(objectType);", span="292-292", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", color=green, community=0];
m14_127 [label="CollectionUtils.IsDictionaryType(objectType)", span="294-294", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", color=green, community=0];
m14_128 [label="return CreateDictionaryContract(objectType);", span="296-296", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", color=green, community=0];
m14_377 [label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(System.Guid?, System.Threading.CancellationToken)", span="1076-1076", cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(System.Guid?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_492 [label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(ulong?, System.Threading.CancellationToken)", span="1153-1153", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(ulong?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_494 [label="return value == null ? DoWriteNullAsync(cancellationToken) : WriteIntegerValueAsync(value.GetValueOrDefault(), cancellationToken);", span="1155-1155", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(ulong?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_495 [label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(ulong?, System.Threading.CancellationToken)", span="1153-1153", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(ulong?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_57 [label="int newLineLen = SetIndentChars()", span="165-165", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteIndentAsync(System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_298 [label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(System.DateTime?, System.Threading.CancellationToken)", span="886-886", cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(System.DateTime?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_477 [label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(uint, System.Threading.CancellationToken)", span="1326-1326", cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(uint, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_122 [label=negative, span="285-285", cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValueAsync(long, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_125 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteIntegerValueAsync(long, System.Threading.CancellationToken)", span="282-282", cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValueAsync(long, System.Threading.CancellationToken)", color=green, community=0, file="DefaultContractResolver.cs"];
m14_123 [label="value = -value", span="287-287", cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValueAsync(long, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_132 [label="Entry Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptStringAsync(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", span="352-352", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptStringAsync(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", color=green, community=0, file="DefaultContractResolver.cs"];
m14_133 [label="Entry Newtonsoft.Json.JsonTextWriter.WritePropertyNameAsync(string, System.Threading.CancellationToken)", span="311-311", cluster="Newtonsoft.Json.JsonTextWriter.WritePropertyNameAsync(string, System.Threading.CancellationToken)", color=green, community=0, file="DefaultContractResolver.cs"];
m14_124 [label="return WriteIntegerValueAsync((ulong)value, negative, cancellationToken);", span="290-290", cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValueAsync(long, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_134 [label="return _safeAsync ? DoWritePropertyNameAsync(name, cancellationToken) : base.WritePropertyNameAsync(name, cancellationToken);", span="313-313", cluster="Newtonsoft.Json.JsonTextWriter.WritePropertyNameAsync(string, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_301 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.DateTimeOffset, System.Threading.CancellationToken)", span="678-678", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.DateTimeOffset, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_302 [label="return _safeAsync ? DoWriteValueAsync(value, cancellationToken) : base.WriteValueAsync(value, cancellationToken);", span="680-680", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.DateTimeOffset, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_303 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.DateTimeOffset, System.Threading.CancellationToken)", span="678-678", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.DateTimeOffset, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_294 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.DateTime?, System.Threading.CancellationToken)", span="660-660", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.DateTime?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_295 [label="return _safeAsync ? DoWriteValueAsync(value, cancellationToken) : base.WriteValueAsync(value, cancellationToken);", span="662-662", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.DateTime?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_296 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.DateTime?, System.Threading.CancellationToken)", span="660-660", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.DateTime?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_178 [label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(Newtonsoft.Json.Serialization.JsonObjectContract)", span="45-45", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(Newtonsoft.Json.Serialization.JsonObjectContract)", file="DefaultContractResolver.cs"];
m14_365 [label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.Guid, System.Threading.CancellationToken)", span="830-830", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.Guid, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_367 [label="await InternalWriteValueAsync(JsonToken.String, cancellationToken).ConfigureAwait(false)", span="832-832", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.Guid, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_369 [label="await _writer.WriteAsync(value.ToString(''D'', CultureInfo.InvariantCulture), cancellationToken).ConfigureAwait(false)", span="836-836", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.Guid, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_368 [label="await _writer.WriteAsync(_quoteChar).ConfigureAwait(false)", span="834-834", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.Guid, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_370 [label="await _writer.WriteAsync(_quoteChar).ConfigureAwait(false)", span="840-840", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.Guid, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_371 [label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.Guid, System.Threading.CancellationToken)", span="830-830", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.Guid, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_452 [label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.Threading.Tasks.Task, string, System.Threading.CancellationToken)", span="1047-1047", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.Threading.Tasks.Task, string, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_453 [label="await task.ConfigureAwait(false)", span="1049-1049", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.Threading.Tasks.Task, string, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_454 [label="await (value == null ? _writer.WriteAsync(JsonConvert.Null, cancellationToken) : WriteEscapedStringAsync(value, true, cancellationToken)).ConfigureAwait(false)", span="1050-1050", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.Threading.Tasks.Task, string, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_455 [label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.Threading.Tasks.Task, string, System.Threading.CancellationToken)", span="1047-1047", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.Threading.Tasks.Task, string, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_316 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.DateTimeOffset?, System.Threading.CancellationToken)", span="709-709", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.DateTimeOffset?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_317 [label="return _safeAsync ? DoWriteValueAsync(value, cancellationToken) : base.WriteValueAsync(value, cancellationToken);", span="711-711", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.DateTimeOffset?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_318 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.DateTimeOffset?, System.Threading.CancellationToken)", span="709-709", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.DateTimeOffset?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_349 [label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(double?, System.Threading.CancellationToken)", span="1000-1000", cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(double?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_362 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.Guid, System.Threading.CancellationToken)", span="825-825", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.Guid, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_363 [label="return _safeAsync ? DoWriteValueAsync(value, cancellationToken) : base.WriteValueAsync(value, cancellationToken);", span="827-827", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.Guid, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_364 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.Guid, System.Threading.CancellationToken)", span="825-825", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.Guid, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_373 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.Guid?, System.Threading.CancellationToken)", span="851-851", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.Guid?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_374 [label="return _safeAsync ? DoWriteValueAsync(value, cancellationToken) : base.WriteValueAsync(value, cancellationToken);", span="853-853", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.Guid?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_375 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.Guid?, System.Threading.CancellationToken)", span="851-851", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.Guid?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_394 [label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(long, System.Threading.CancellationToken)", span="1133-1133", cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(long, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_416 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="DefaultContractResolver.cs"];
m14_31 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="DefaultContractResolver.cs"];
m14_261 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(char, System.Threading.CancellationToken)", span="592-592", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(char, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_262 [label="return _safeAsync ? DoWriteValueAsync(value, cancellationToken) : base.WriteValueAsync(value, cancellationToken);", span="594-594", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(char, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_263 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(char, System.Threading.CancellationToken)", span="592-592", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(char, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_314 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueToBuffer(System.DateTimeOffset)", span="701-701", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueToBuffer(System.DateTimeOffset)", file="DefaultContractResolver.cs"];
m14_269 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(char?, System.Threading.CancellationToken)", span="610-610", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(char?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_270 [label="return _safeAsync ? DoWriteValueAsync(value, cancellationToken) : base.WriteValueAsync(value, cancellationToken);", span="612-612", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(char?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_271 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(char?, System.Threading.CancellationToken)", span="610-610", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(char?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_517 [label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(ushort?, System.Threading.CancellationToken)", span="1216-1216", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(ushort?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_519 [label="return value == null ? DoWriteNullAsync(cancellationToken) : WriteIntegerValueAsync(value.GetValueOrDefault(), cancellationToken);", span="1218-1218", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(ushort?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_520 [label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(ushort?, System.Threading.CancellationToken)", span="1216-1216", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(ushort?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_55 [label="Entry Newtonsoft.Json.JsonWriter.WriteIndentAsync(System.Threading.CancellationToken)", span="173-173", cluster="Newtonsoft.Json.JsonWriter.WriteIndentAsync(System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_216 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", span="381-381", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs"];
m14_158 [label="Exit Newtonsoft.Json.JsonTextWriter.DoWritePropertyNameAsync(string, bool, System.Threading.CancellationToken)", span="339-339", cluster="Newtonsoft.Json.JsonTextWriter.DoWritePropertyNameAsync(string, bool, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_346 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(double?, System.Threading.CancellationToken)", span="781-781", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(double?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_347 [label="return _safeAsync ? (value.HasValue ? WriteValueAsync(value.GetValueOrDefault(), true, cancellationToken) : WriteNullAsync(cancellationToken)) : base.WriteValueAsync(value, cancellationToken);", span="783-783", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(double?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_348 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(double?, System.Threading.CancellationToken)", span="781-781", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(double?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_8 [label="return _typeContractCache.Get(type);", span="73-73", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DefaultContractResolver.cs"];
m14_537 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteEndConstructorAsync(System.Threading.CancellationToken)", span="1261-1261", cluster="Newtonsoft.Json.JsonTextWriter.WriteEndConstructorAsync(System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_538 [label="return _safeAsync ? InternalWriteEndAsync(JsonContainerType.Constructor, cancellationToken) : base.WriteEndConstructorAsync(cancellationToken);", span="1263-1263", cluster="Newtonsoft.Json.JsonTextWriter.WriteEndConstructorAsync(System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_539 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteEndConstructorAsync(System.Threading.CancellationToken)", span="1261-1261", cluster="Newtonsoft.Json.JsonTextWriter.WriteEndConstructorAsync(System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_341 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(double, bool, System.Threading.CancellationToken)", span="768-768", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(double, bool, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_343 [label="return WriteValueInternalAsync(JsonToken.Float, JsonConvert.ToString(value, FloatFormatHandling, QuoteChar, nullable), cancellationToken);", span="770-770", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(double, bool, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_344 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(double, bool, System.Threading.CancellationToken)", span="768-768", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(double, bool, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_545 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteRawValueAsync(string, System.Threading.CancellationToken)", span="1286-1286", cluster="Newtonsoft.Json.JsonTextWriter.WriteRawValueAsync(string, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_546 [label="return _safeAsync ? DoWriteRawValueAsync(json, cancellationToken) : base.WriteRawValueAsync(json, cancellationToken);", span="1288-1288", cluster="Newtonsoft.Json.JsonTextWriter.WriteRawValueAsync(string, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_547 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteRawValueAsync(string, System.Threading.CancellationToken)", span="1286-1286", cluster="Newtonsoft.Json.JsonTextWriter.WriteRawValueAsync(string, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_139 [label="await WriteEscapedStringAsync(name, _quoteName, cancellationToken).ConfigureAwait(false)", span="320-320", cluster="Newtonsoft.Json.JsonTextWriter.DoWritePropertyNameAsync(string, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_383 [label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(int, System.Threading.CancellationToken)", span="1095-1095", cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(int, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_104 [label="uvalue <= 9 & !negative", span="256-256", cluster="Newtonsoft.Json.JsonTextWriter.WriteDigitsAsync(ulong, bool, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_106 [label="int length = WriteNumberToBuffer(uvalue, negative)", span="261-261", cluster="Newtonsoft.Json.JsonTextWriter.WriteDigitsAsync(ulong, bool, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_105 [label="return _writer.WriteAsync((char)('0' + uvalue), cancellationToken);", span="258-258", cluster="Newtonsoft.Json.JsonTextWriter.WriteDigitsAsync(ulong, bool, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_107 [label="return _writer.WriteAsync(_writeBuffer, 0, length, cancellationToken);", span="262-262", cluster="Newtonsoft.Json.JsonTextWriter.WriteDigitsAsync(ulong, bool, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_108 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteDigitsAsync(ulong, bool, System.Threading.CancellationToken)", span="254-254", cluster="Newtonsoft.Json.JsonTextWriter.WriteDigitsAsync(ulong, bool, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_420 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(sbyte, System.Threading.CancellationToken)", span="968-968", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(sbyte, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_421 [label="return _safeAsync ? WriteIntegerValueAsync(value, cancellationToken) : base.WriteValueAsync(value, cancellationToken);", span="970-970", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(sbyte, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_422 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(sbyte, System.Threading.CancellationToken)", span="968-968", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(sbyte, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_354 [label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(float, System.Threading.CancellationToken)", span="1019-1019", cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(float, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_44 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteEndAsync(System.Threading.CancellationToken)", span="143-143", cluster="Newtonsoft.Json.JsonTextWriter.WriteEndAsync(System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_9 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", span="68-68", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DefaultContractResolver.cs"];
m14_11 [label="Entry Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)", span="19-19", cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)", file="DefaultContractResolver.cs"];
m14_63 [label="return constructors[0];", span="155-155", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParametrizedConstructor(System.Type)", file="DefaultContractResolver.cs"];
m14_293 [label="Entry System.DateTime.ToString(string, System.IFormatProvider)", span="0-0", cluster="System.DateTime.ToString(string, System.IFormatProvider)", file="DefaultContractResolver.cs"];
m14_388 [label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(int?, System.Threading.CancellationToken)", span="1114-1114", cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(int?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_121 [label="bool negative = value < 0", span="284-284", cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValueAsync(long, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_237 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(byte, System.Threading.CancellationToken)", span="539-539", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(byte, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_238 [label="return _safeAsync ? WriteIntegerValueAsync(value, cancellationToken) : base.WriteValueAsync(value, cancellationToken);", span="541-541", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(byte, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_239 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(byte, System.Threading.CancellationToken)", span="539-539", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(byte, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_350 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(float, System.Threading.CancellationToken)", span="794-794", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(float, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_351 [label="return _safeAsync ? WriteValueAsync(value, false, cancellationToken) : base.WriteValueAsync(value, cancellationToken);", span="796-796", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(float, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_352 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(float, System.Threading.CancellationToken)", span="794-794", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(float, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_319 [label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.DateTimeOffset?, System.Threading.CancellationToken)", span="714-714", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.DateTimeOffset?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_321 [label="return value == null ? DoWriteNullAsync(cancellationToken) : DoWriteValueAsync(value.GetValueOrDefault(), cancellationToken);", span="716-716", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.DateTimeOffset?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_322 [label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.DateTimeOffset?, System.Threading.CancellationToken)", span="714-714", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.DateTimeOffset?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_3 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", span="56-56", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", file="DefaultContractResolver.cs"];
m14_5 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", span="68-68", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DefaultContractResolver.cs"];
m14_6 [label="type == null", span="70-70", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DefaultContractResolver.cs"];
m14_98 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteNullAsync(System.Threading.CancellationToken)", span="244-244", cluster="Newtonsoft.Json.JsonTextWriter.WriteNullAsync(System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_100 [label="Entry Newtonsoft.Json.JsonWriter.WriteNullAsync(System.Threading.CancellationToken)", span="367-367", cluster="Newtonsoft.Json.JsonWriter.WriteNullAsync(System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_99 [label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteNullAsync(System.Threading.CancellationToken)", span="249-249", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteNullAsync(System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_101 [label="return WriteValueInternalAsync(JsonToken.Null, JsonConvert.Null, cancellationToken);", span="251-251", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteNullAsync(System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_102 [label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteNullAsync(System.Threading.CancellationToken)", span="249-249", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteNullAsync(System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_338 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(double, System.Threading.CancellationToken)", span="763-763", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(double, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_339 [label="return _safeAsync ? WriteValueAsync(value, false, cancellationToken) : base.WriteValueAsync(value, cancellationToken);", span="765-765", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(double, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_340 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(double, System.Threading.CancellationToken)", span="763-763", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(double, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_357 [label="Entry Newtonsoft.Json.JsonConvert.ToString(float, Newtonsoft.Json.FloatFormatHandling, char, bool)", span="268-268", cluster="Newtonsoft.Json.JsonConvert.ToString(float, Newtonsoft.Json.FloatFormatHandling, char, bool)", file="DefaultContractResolver.cs"];
m14_506 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueNotNullAsync(System.Threading.Tasks.Task, System.Uri, System.Threading.CancellationToken)", span="1182-1182", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueNotNullAsync(System.Threading.Tasks.Task, System.Uri, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_507 [label="await task.ConfigureAwait(false)", span="1184-1184", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueNotNullAsync(System.Threading.Tasks.Task, System.Uri, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_508 [label="await WriteEscapedStringAsync(value.OriginalString, true, cancellationToken).ConfigureAwait(false)", span="1185-1185", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueNotNullAsync(System.Threading.Tasks.Task, System.Uri, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_509 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueNotNullAsync(System.Threading.Tasks.Task, System.Uri, System.Threading.CancellationToken)", span="1182-1182", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueNotNullAsync(System.Threading.Tasks.Task, System.Uri, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_160 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", span="343-343", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", file="DefaultContractResolver.cs"];
m14_161 [label="Entry string.FormatWith(System.IFormatProvider, params object[])", span="48-48", cluster="string.FormatWith(System.IFormatProvider, params object[])", file="DefaultContractResolver.cs"];
m14_353 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(float, bool, System.Threading.CancellationToken)", span="799-799", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(float, bool, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_355 [label="return WriteValueInternalAsync(JsonToken.Float, JsonConvert.ToString(value, FloatFormatHandling, QuoteChar, nullable), cancellationToken);", span="801-801", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(float, bool, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_356 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(float, bool, System.Threading.CancellationToken)", span="799-799", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(float, bool, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_557 [label="Entry Newtonsoft.Json.JsonWriter.AutoCompleteAsync(Newtonsoft.Json.JsonToken, System.Threading.CancellationToken)", span="41-41", cluster="Newtonsoft.Json.JsonWriter.AutoCompleteAsync(Newtonsoft.Json.JsonToken, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_244 [label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(byte?, System.Threading.CancellationToken)", span="557-557", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(byte?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_246 [label="return value == null ? DoWriteNullAsync(cancellationToken) : WriteIntegerValueAsync(value.GetValueOrDefault(), cancellationToken);", span="559-559", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(byte?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_247 [label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(byte?, System.Threading.CancellationToken)", span="557-557", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(byte?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_532 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteEndArrayAsync(System.Threading.CancellationToken)", span="1249-1249", cluster="Newtonsoft.Json.JsonTextWriter.WriteEndArrayAsync(System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_533 [label="return _safeAsync ? InternalWriteEndAsync(JsonContainerType.Array, cancellationToken) : base.WriteEndArrayAsync(cancellationToken);", span="1251-1251", cluster="Newtonsoft.Json.JsonTextWriter.WriteEndArrayAsync(System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_534 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteEndArrayAsync(System.Threading.CancellationToken)", span="1249-1249", cluster="Newtonsoft.Json.JsonTextWriter.WriteEndArrayAsync(System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_236 [label="Entry System.Nullable<T>.GetValueOrDefault()", span="0-0", cluster="System.Nullable<T>.GetValueOrDefault()", file="DefaultContractResolver.cs"];
m14_361 [label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(float?, System.Threading.CancellationToken)", span="1038-1038", cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(float?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_147 [label="throw new Exception(''Virtual Method '{0}' of type '{1}' cannot be marked with '{2}' attribute.''.FormatWith(CultureInfo.InvariantCulture, method, GetClrTypeFullName(method.DeclaringType), attributeType));", span="322-322", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs"];
m14_149 [label="throw new Exception(''Serialization Callback '{1}' in type '{0}' must return void.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(method.DeclaringType), method));", span="325-325", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs"];
m14_150 [label="attributeType == typeof(OnErrorAttribute)", span="327-327", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs"];
m14_151 [label="parameters == null || parameters.Length != 2 || parameters[0].ParameterType != typeof(StreamingContext) || parameters[1].ParameterType != typeof(ErrorContext)", span="329-329", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs"];
m14_154 [label="throw new Exception(''Serialization Callback '{1}' in type '{0}' must have a single parameter of type '{2}'.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(method.DeclaringType), method, typeof(StreamingContext)));", span="335-335", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", color=green, community=0];
m14_152 [label="throw new Exception(''Serialization Error Callback '{1}' in type '{0}' must have two parameters of type '{2}' and '{3}'.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(method.DeclaringType), method, typeof (StreamingContext), typeof(ErrorContext)));", span="330-330", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs"];
m14_153 [label="parameters == null || parameters.Length != 1 || parameters[0].ParameterType != typeof(StreamingContext)", span="334-334", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", color=green, community=0];
m14_155 [label="prevAttributeType = attributeType", span="338-338", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs"];
m14_156 [label="return true;", span="340-340", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs"];
m14_157 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", span="310-310", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs"];
m14_34 [label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.ICustomAttributeProvider)", span="220-220", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.ICustomAttributeProvider)", file="DefaultContractResolver.cs"];
m14_280 [label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(System.DateTime, System.Threading.CancellationToken)", span="867-867", cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(System.DateTime, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_138 [label="await InternalWritePropertyNameAsync(name, cancellationToken).ConfigureAwait(false)", span="318-318", cluster="Newtonsoft.Json.JsonTextWriter.DoWritePropertyNameAsync(string, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_192 [label="string mappedName", span="405-405", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs"];
m14_525 [label="Entry Newtonsoft.Json.JsonWriter.WriteCommentAsync(string, System.Threading.CancellationToken)", span="461-461", cluster="Newtonsoft.Json.JsonWriter.WriteCommentAsync(string, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_62 [label="constructors.Length == 1", span="154-154", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParametrizedConstructor(System.Type)", file="DefaultContractResolver.cs"];
m14_549 [label="Entry Newtonsoft.Json.JsonWriter.WriteRawValueAsync(string, System.Threading.CancellationToken)", span="485-485", cluster="Newtonsoft.Json.JsonWriter.WriteRawValueAsync(string, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_417 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type)", span="185-185", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type)", file="DefaultContractResolver.cs"];
m14_58 [label="currentIndentCount <= IndentCharBufferSize", span="167-167", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteIndentAsync(System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_172 [label="await _writer.WriteAsync('[').ConfigureAwait(false)", span="392-392", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteStartArrayAsync(System.Threading.Tasks.Task, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_171 [label="await task.ConfigureAwait(false)", span="390-390", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteStartArrayAsync(System.Threading.Tasks.Task, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_173 [label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteStartArrayAsync(System.Threading.Tasks.Task, System.Threading.CancellationToken)", span="388-388", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteStartArrayAsync(System.Threading.Tasks.Task, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_170 [label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteStartArrayAsync(System.Threading.Tasks.Task, System.Threading.CancellationToken)", span="388-388", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteStartArrayAsync(System.Threading.Tasks.Task, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_169 [label="Entry Newtonsoft.Json.JsonWriter.InternalWriteStartAsync(Newtonsoft.Json.JsonToken, Newtonsoft.Json.JsonContainerType, System.Threading.CancellationToken)", span="446-446", cluster="Newtonsoft.Json.JsonWriter.InternalWriteStartAsync(Newtonsoft.Json.JsonToken, Newtonsoft.Json.JsonContainerType, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_276 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.DateTime, System.Threading.CancellationToken)", span="628-628", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.DateTime, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_277 [label="return _safeAsync ? DoWriteValueAsync(value, cancellationToken) : base.WriteValueAsync(value, cancellationToken);", span="630-630", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.DateTime, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_278 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.DateTime, System.Threading.CancellationToken)", span="628-628", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.DateTime, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_305 [label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(System.DateTimeOffset, System.Threading.CancellationToken)", span="905-905", cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(System.DateTimeOffset, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_198 [label="property.PropertyName = ResolvePropertyName(mappedName)", span="415-415", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs"];
m14_199 [label="propertyAttribute != null", span="417-417", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs"];
m14_200 [label="property.Required = propertyAttribute.Required", span="418-418", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs"];
m14_548 [label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteRawValueAsync(string, System.Threading.CancellationToken)", span="1291-1291", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteRawValueAsync(string, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_550 [label="UpdateScopeWithFinishedValue()", span="1293-1293", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteRawValueAsync(string, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_551 [label="Task task = AutoCompleteAsync(JsonToken.Undefined, cancellationToken)", span="1294-1294", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteRawValueAsync(string, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_553 [label="return WriteRawAsync(json, cancellationToken);", span="1297-1297", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteRawValueAsync(string, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_554 [label="return DoWriteRawValueAsync(task, json, cancellationToken);", span="1300-1300", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteRawValueAsync(string, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_552 [label="task.IsCompleted", span="1295-1295", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteRawValueAsync(string, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_555 [label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteRawValueAsync(string, System.Threading.CancellationToken)", span="1291-1291", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteRawValueAsync(string, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_233 [label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(bool?, System.Threading.CancellationToken)", span="753-753", cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(bool?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_135 [label="Entry Newtonsoft.Json.JsonConvert.IsJsonPrimitiveType(System.Type)", span="487-487", cluster="Newtonsoft.Json.JsonConvert.IsJsonPrimitiveType(System.Type)", file="DefaultContractResolver.cs"];
m14_334 [label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(decimal?, System.Threading.CancellationToken)", span="750-750", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(decimal?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_336 [label="return value == null ? DoWriteNullAsync(cancellationToken) : DoWriteValueAsync(value.GetValueOrDefault(), cancellationToken);", span="752-752", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(decimal?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_337 [label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(decimal?, System.Threading.CancellationToken)", span="750-750", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(decimal?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_395 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(long?, System.Threading.CancellationToken)", span="913-913", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(long?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_396 [label="return _safeAsync ? DoWriteValueAsync(value, cancellationToken) : base.WriteValueAsync(value, cancellationToken);", span="915-915", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(long?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_397 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(long?, System.Threading.CancellationToken)", span="913-913", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(long?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_56 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", span="160-160", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs"];
m14_59 [label="Entry System.Collections.Generic.IList<T>.AddRange<T>(System.Collections.Generic.IEnumerable<T>)", span="194-194", cluster="System.Collections.Generic.IList<T>.AddRange<T>(System.Collections.Generic.IEnumerable<T>)", file="DefaultContractResolver.cs"];
m14_60 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetParametrizedConstructor(System.Type)", span="150-150", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParametrizedConstructor(System.Type)", file="DefaultContractResolver.cs"];
m14_61 [label="ConstructorInfo[] constructors = objectType.GetConstructors(BindingFlags.Public | BindingFlags.Instance)", span="152-152", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParametrizedConstructor(System.Type)", file="DefaultContractResolver.cs"];
m14_478 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(uint?, System.Threading.CancellationToken)", span="1115-1115", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(uint?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_479 [label="return _safeAsync ? DoWriteValueAsync(value, cancellationToken) : base.WriteValueAsync(value, cancellationToken);", span="1117-1117", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(uint?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_480 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(uint?, System.Threading.CancellationToken)", span="1115-1115", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(uint?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_423 [label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(sbyte, System.Threading.CancellationToken)", span="1191-1191", cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(sbyte, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_91 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteRawAsync(string, System.Threading.CancellationToken)", span="227-227", cluster="Newtonsoft.Json.JsonTextWriter.WriteRawAsync(string, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_531 [label="Entry Newtonsoft.Json.JsonWriter.InternalWriteCommentAsync(System.Threading.CancellationToken)", span="472-472", cluster="Newtonsoft.Json.JsonWriter.InternalWriteCommentAsync(System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_323 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(decimal, System.Threading.CancellationToken)", span="727-727", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(decimal, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_324 [label="return _safeAsync ? DoWriteValueAsync(value, cancellationToken) : base.WriteValueAsync(value, cancellationToken);", span="729-729", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(decimal, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_325 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(decimal, System.Threading.CancellationToken)", span="727-727", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(decimal, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_467 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.TimeSpan?, System.Threading.CancellationToken)", span="1082-1082", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.TimeSpan?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_468 [label="return _safeAsync ? DoWriteValueAsync(value, cancellationToken) : base.WriteValueAsync(value, cancellationToken);", span="1084-1084", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.TimeSpan?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_469 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.TimeSpan?, System.Threading.CancellationToken)", span="1082-1082", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.TimeSpan?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_96 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteNullAsync(System.Threading.CancellationToken)", span="244-244", cluster="Newtonsoft.Json.JsonTextWriter.WriteNullAsync(System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_327 [label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(decimal, System.Threading.CancellationToken)", span="943-943", cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(decimal, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_279 [label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.DateTime, System.Threading.CancellationToken)", span="633-633", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.DateTime, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_281 [label="await InternalWriteValueAsync(JsonToken.Date, cancellationToken).ConfigureAwait(false)", span="635-635", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.DateTime, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_282 [label="value = DateTimeUtils.EnsureDateTime(value, DateTimeZoneHandling)", span="636-636", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.DateTime, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_285 [label="await _writer.WriteAsync(_writeBuffer, 0, length, cancellationToken).ConfigureAwait(false)", span="642-642", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.DateTime, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_287 [label="await _writer.WriteAsync(value.ToString(DateFormatString, Culture), cancellationToken).ConfigureAwait(false)", span="647-647", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.DateTime, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_283 [label="string.IsNullOrEmpty(DateFormatString)", span="638-638", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.DateTime, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_284 [label="int length = WriteValueToBuffer(value)", span="640-640", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.DateTime, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_286 [label="await _writer.WriteAsync(_quoteChar).ConfigureAwait(false)", span="646-646", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.DateTime, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_288 [label="await _writer.WriteAsync(_quoteChar).ConfigureAwait(false)", span="648-648", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.DateTime, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_289 [label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.DateTime, System.Threading.CancellationToken)", span="633-633", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.DateTime, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_442 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(string, System.Threading.CancellationToken)", span="1031-1031", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(string, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_443 [label="return _safeAsync ? DoWriteValueAsync(value, cancellationToken) : base.WriteValueAsync(value, cancellationToken);", span="1033-1033", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(string, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_444 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(string, System.Threading.CancellationToken)", span="1031-1031", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(string, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_514 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(ushort?, System.Threading.CancellationToken)", span="1211-1211", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(ushort?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_515 [label="return _safeAsync ? DoWriteValueAsync(value, cancellationToken) : base.WriteValueAsync(value, cancellationToken);", span="1213-1213", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(ushort?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_516 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(ushort?, System.Threading.CancellationToken)", span="1211-1211", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(ushort?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_558 [label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteRawValueAsync(System.Threading.Tasks.Task, string, System.Threading.CancellationToken)", span="1303-1303", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteRawValueAsync(System.Threading.Tasks.Task, string, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_559 [label="await task.ConfigureAwait(false)", span="1305-1305", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteRawValueAsync(System.Threading.Tasks.Task, string, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_560 [label="await WriteRawAsync(json, cancellationToken).ConfigureAwait(false)", span="1306-1306", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteRawValueAsync(System.Threading.Tasks.Task, string, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_561 [label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteRawValueAsync(System.Threading.Tasks.Task, string, System.Threading.CancellationToken)", span="1303-1303", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteRawValueAsync(System.Threading.Tasks.Task, string, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_89 [label="contract.OnError = method", span="227-227", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs"];
m14_90 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", span="160-160", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs"];
m14_163 [label="return type.FullName;", span="346-346", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", file="DefaultContractResolver.cs"];
m14_376 [label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.Guid?, System.Threading.CancellationToken)", span="856-856", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.Guid?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_378 [label="return value == null ? DoWriteNullAsync(cancellationToken) : DoWriteValueAsync(value.GetValueOrDefault(), cancellationToken);", span="858-858", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.Guid?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_379 [label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.Guid?, System.Threading.CancellationToken)", span="856-856", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.Guid?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_109 [label="Entry Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", span="49-49", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="DefaultContractResolver.cs"];
m14_265 [label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(char, System.Threading.CancellationToken)", span="829-829", cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(char, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_445 [label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(string, System.Threading.CancellationToken)", span="1036-1036", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(string, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_447 [label="Task task = InternalWriteValueAsync(JsonToken.String, cancellationToken)", span="1038-1038", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(string, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_449 [label="return value == null ? _writer.WriteAsync(JsonConvert.Null, cancellationToken) : WriteEscapedStringAsync(value, true, cancellationToken);", span="1041-1041", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(string, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_450 [label="return DoWriteValueAsync(task, value, cancellationToken);", span="1044-1044", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(string, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_448 [label="task.IsCompleted", span="1039-1039", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(string, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_451 [label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(string, System.Threading.CancellationToken)", span="1036-1036", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(string, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_460 [label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(System.TimeSpan, System.Threading.CancellationToken)", span="1287-1287", cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(System.TimeSpan, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_428 [label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(sbyte?, System.Threading.CancellationToken)", span="1211-1211", cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(sbyte?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_228 [label="Entry Newtonsoft.Json.JsonConvert.ToString(bool)", span="163-163", cluster="Newtonsoft.Json.JsonConvert.ToString(bool)", file="DefaultContractResolver.cs"];
m14_407 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(object, System.Threading.CancellationToken)", span="938-938", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(object, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_408 [label=_safeAsync, span="940-940", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(object, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_409 [label="value == null", span="942-942", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(object, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_410 [label="return WriteNullAsync(cancellationToken);", span="944-944", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(object, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_411 [label="value is BigInteger", span="947-947", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(object, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_412 [label="return WriteValueAsync((BigInteger)value, cancellationToken);", span="949-949", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(object, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_413 [label="return WriteValueAsync(this, ConvertUtils.GetTypeCode(value.GetType()), value, cancellationToken);", span="953-953", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(object, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_414 [label="return base.WriteValueAsync(value, cancellationToken);", span="956-956", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(object, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_415 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(object, System.Threading.CancellationToken)", span="938-938", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(object, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_72 [label="task.IsCompleted", span="188-188", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueInternalAsync(Newtonsoft.Json.JsonToken, string, System.Threading.CancellationToken)", color=green, community=0, file="DefaultContractResolver.cs"];
m14_71 [label="Task task = InternalWriteValueAsync(token, cancellationToken)", span="187-187", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueInternalAsync(Newtonsoft.Json.JsonToken, string, System.Threading.CancellationToken)", color=green, community=0, file="DefaultContractResolver.cs"];
m14_73 [label="return _writer.WriteAsync(value, cancellationToken);", span="190-190", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueInternalAsync(Newtonsoft.Json.JsonToken, string, System.Threading.CancellationToken)", color=green, community=0, file="DefaultContractResolver.cs"];
m14_74 [label="return WriteValueInternalAsync(task, value, cancellationToken);", span="193-193", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueInternalAsync(Newtonsoft.Json.JsonToken, string, System.Threading.CancellationToken)", color=green, community=0, file="DefaultContractResolver.cs"];
m14_75 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueInternalAsync(Newtonsoft.Json.JsonToken, string, System.Threading.CancellationToken)", span="185-185", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueInternalAsync(Newtonsoft.Json.JsonToken, string, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_70 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueInternalAsync(Newtonsoft.Json.JsonToken, string, System.Threading.CancellationToken)", span="185-185", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueInternalAsync(Newtonsoft.Json.JsonToken, string, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_82 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteIndentSpaceAsync(System.Threading.CancellationToken)", span="209-209", cluster="Newtonsoft.Json.JsonTextWriter.WriteIndentSpaceAsync(System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_83 [label="return _safeAsync ? DoWriteIndentSpaceAsync(cancellationToken) : base.WriteIndentSpaceAsync(cancellationToken);", span="211-211", cluster="Newtonsoft.Json.JsonTextWriter.WriteIndentSpaceAsync(System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_84 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteIndentSpaceAsync(System.Threading.CancellationToken)", span="209-209", cluster="Newtonsoft.Json.JsonTextWriter.WriteIndentSpaceAsync(System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_358 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(float?, System.Threading.CancellationToken)", span="812-812", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(float?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_359 [label="return _safeAsync ? (value.HasValue ? WriteValueAsync(value.GetValueOrDefault(), true, cancellationToken) : WriteNullAsync(cancellationToken)) : base.WriteValueAsync(value, cancellationToken);", span="814-814", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(float?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_360 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(float?, System.Threading.CancellationToken)", span="812-812", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(float?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_209 [label="await task.ConfigureAwait(false)", span="472-472", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteUndefinedAsync(System.Threading.Tasks.Task, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_210 [label="await _writer.WriteAsync(JsonConvert.Undefined, cancellationToken).ConfigureAwait(false)", span="473-473", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteUndefinedAsync(System.Threading.Tasks.Task, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_211 [label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteUndefinedAsync(System.Threading.Tasks.Task, System.Threading.CancellationToken)", span="470-470", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteUndefinedAsync(System.Threading.Tasks.Task, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_212 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteWhitespaceAsync(string, System.Threading.CancellationToken)", span="484-484", cluster="Newtonsoft.Json.JsonTextWriter.WriteWhitespaceAsync(string, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_213 [label="return _safeAsync ? DoWriteWhitespaceAsync(ws, cancellationToken) : base.WriteWhitespaceAsync(ws, cancellationToken);", span="486-486", cluster="Newtonsoft.Json.JsonTextWriter.WriteWhitespaceAsync(string, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_214 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteWhitespaceAsync(string, System.Threading.CancellationToken)", span="484-484", cluster="Newtonsoft.Json.JsonTextWriter.WriteWhitespaceAsync(string, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_195 [label="await _writer.WriteAsync(name, cancellationToken).ConfigureAwait(false)", span="443-443", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteStartConstructorAsync(string, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_196 [label="await _writer.WriteAsync('(').ConfigureAwait(false)", span="444-444", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteStartConstructorAsync(string, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_191 [label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteStartConstructorAsync(string, System.Threading.CancellationToken)", span="438-438", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteStartConstructorAsync(string, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_208 [label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteUndefinedAsync(System.Threading.Tasks.Task, System.Threading.CancellationToken)", span="470-470", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteUndefinedAsync(System.Threading.Tasks.Task, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_197 [label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteStartConstructorAsync(string, System.Threading.CancellationToken)", span="438-438", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteStartConstructorAsync(string, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_194 [label="await _writer.WriteAsync(''new '', cancellationToken).ConfigureAwait(false)", span="442-442", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteStartConstructorAsync(string, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_193 [label="await InternalWriteStartAsync(JsonToken.StartConstructor, JsonContainerType.Constructor, cancellationToken).ConfigureAwait(false)", span="440-440", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteStartConstructorAsync(string, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_97 [label="return _safeAsync ? DoWriteNullAsync(cancellationToken) : base.WriteNullAsync(cancellationToken);", span="246-246", cluster="Newtonsoft.Json.JsonTextWriter.WriteNullAsync(System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_140 [label="await _writer.WriteAsync(':').ConfigureAwait(false)", span="322-322", cluster="Newtonsoft.Json.JsonTextWriter.DoWritePropertyNameAsync(string, System.Threading.CancellationToken)", color=green, community=0, file="DefaultContractResolver.cs"];
m14_141 [label="Exit Newtonsoft.Json.JsonTextWriter.DoWritePropertyNameAsync(string, System.Threading.CancellationToken)", span="316-316", cluster="Newtonsoft.Json.JsonTextWriter.DoWritePropertyNameAsync(string, System.Threading.CancellationToken)", color=green, community=0, file="DefaultContractResolver.cs"];
m14_143 [label="Entry System.IO.TextWriter.WriteAsync(char)", span="0-0", cluster="System.IO.TextWriter.WriteAsync(char)", file="DefaultContractResolver.cs"];
m14_345 [label="Entry Newtonsoft.Json.JsonConvert.ToString(double, Newtonsoft.Json.FloatFormatHandling, char, bool)", span="298-298", cluster="Newtonsoft.Json.JsonConvert.ToString(double, Newtonsoft.Json.FloatFormatHandling, char, bool)", file="DefaultContractResolver.cs"];
m14_320 [label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(System.DateTimeOffset?, System.Threading.CancellationToken)", span="924-924", cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(System.DateTimeOffset?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_431 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(short, System.Threading.CancellationToken)", span="1000-1000", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(short, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_432 [label="return _safeAsync ? WriteIntegerValueAsync(value, cancellationToken) : base.WriteValueAsync(value, cancellationToken);", span="1002-1002", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(short, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_433 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(short, System.Threading.CancellationToken)", span="1000-1000", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(short, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_513 [label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(ushort, System.Threading.CancellationToken)", span="1425-1425", cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(ushort, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_45 [label="Entry System.Type.GetGenericTypeDefinition()", span="0-0", cluster="System.Type.GetGenericTypeDefinition()", file="DefaultContractResolver.cs"];
m14_330 [label="Entry Newtonsoft.Json.JsonConvert.ToString(decimal)", span="349-349", cluster="Newtonsoft.Json.JsonConvert.ToString(decimal)", file="DefaultContractResolver.cs"];
m14_418 [label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object, System.Threading.CancellationToken)", span="1559-1559", cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_424 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(sbyte?, System.Threading.CancellationToken)", span="982-982", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(sbyte?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_425 [label="return _safeAsync ? DoWriteValueAsync(value, cancellationToken) : base.WriteValueAsync(value, cancellationToken);", span="984-984", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(sbyte?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_426 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(sbyte?, System.Threading.CancellationToken)", span="982-982", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(sbyte?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_232 [label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(bool?, System.Threading.CancellationToken)", span="526-526", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(bool?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_234 [label="return value == null ? DoWriteNullAsync(cancellationToken) : DoWriteValueAsync(value.GetValueOrDefault(), cancellationToken);", span="528-528", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(bool?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_235 [label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(bool?, System.Threading.CancellationToken)", span="526-526", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(bool?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_248 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(byte[], System.Threading.CancellationToken)", span="570-570", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(byte[], System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_249 [label="return _safeAsync ? (value == null ? WriteNullAsync(cancellationToken) : WriteValueNonNullAsync(value, cancellationToken)) : base.WriteValueAsync(value, cancellationToken);", span="572-572", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(byte[], System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_250 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(byte[], System.Threading.CancellationToken)", span="570-570", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(byte[], System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_304 [label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.DateTimeOffset, System.Threading.CancellationToken)", span="683-683", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.DateTimeOffset, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_306 [label="await InternalWriteValueAsync(JsonToken.Date, cancellationToken).ConfigureAwait(false)", span="685-685", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.DateTimeOffset, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_308 [label="int length = WriteValueToBuffer(value)", span="689-689", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.DateTimeOffset, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_309 [label="await _writer.WriteAsync(_writeBuffer, 0, length, cancellationToken).ConfigureAwait(false)", span="691-691", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.DateTimeOffset, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_311 [label="await _writer.WriteAsync(value.ToString(DateFormatString, Culture), cancellationToken).ConfigureAwait(false)", span="696-696", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.DateTimeOffset, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_307 [label="string.IsNullOrEmpty(DateFormatString)", span="687-687", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.DateTimeOffset, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_310 [label="await _writer.WriteAsync(_quoteChar).ConfigureAwait(false)", span="695-695", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.DateTimeOffset, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_312 [label="await _writer.WriteAsync(_quoteChar).ConfigureAwait(false)", span="697-697", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.DateTimeOffset, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_313 [label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.DateTimeOffset, System.Threading.CancellationToken)", span="683-683", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.DateTimeOffset, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_488 [label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(ulong, System.Threading.CancellationToken)", span="1366-1366", cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(ulong, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_482 [label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(uint?, System.Threading.CancellationToken)", span="1346-1346", cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(uint?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_456 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.TimeSpan, System.Threading.CancellationToken)", span="1061-1061", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.TimeSpan, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_457 [label="return _safeAsync ? DoWriteValueAsync(value, cancellationToken) : base.WriteValueAsync(value, cancellationToken);", span="1063-1063", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.TimeSpan, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_458 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.TimeSpan, System.Threading.CancellationToken)", span="1061-1061", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.TimeSpan, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_470 [label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.TimeSpan?, System.Threading.CancellationToken)", span="1087-1087", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.TimeSpan?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_472 [label="return value == null ? DoWriteNullAsync(cancellationToken) : DoWriteValueAsync(value.GetValueOrDefault(), cancellationToken);", span="1089-1089", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.TimeSpan?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_473 [label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.TimeSpan?, System.Threading.CancellationToken)", span="1087-1087", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.TimeSpan?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_435 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(short?, System.Threading.CancellationToken)", span="1013-1013", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(short?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_436 [label="return _safeAsync ? DoWriteValueAsync(value, cancellationToken) : base.WriteValueAsync(value, cancellationToken);", span="1015-1015", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(short?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_437 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(short?, System.Threading.CancellationToken)", span="1013-1013", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(short?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_405 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="DefaultContractResolver.cs"];
m14_240 [label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(byte, System.Threading.CancellationToken)", span="772-772", cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(byte, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_326 [label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(decimal, System.Threading.CancellationToken)", span="732-732", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(decimal, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_328 [label="return WriteValueInternalAsync(JsonToken.Float, JsonConvert.ToString(value), cancellationToken);", span="734-734", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(decimal, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_329 [label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(decimal, System.Threading.CancellationToken)", span="732-732", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(decimal, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_427 [label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(sbyte?, System.Threading.CancellationToken)", span="987-987", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(sbyte?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_429 [label="return value == null ? DoWriteNullAsync(cancellationToken) : WriteIntegerValueAsync(value.GetValueOrDefault(), cancellationToken);", span="989-989", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(sbyte?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_430 [label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(sbyte?, System.Threading.CancellationToken)", span="987-987", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(sbyte?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_391 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(long, System.Threading.CancellationToken)", span="900-900", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(long, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_392 [label="return _safeAsync ? WriteIntegerValueAsync(value, cancellationToken) : base.WriteValueAsync(value, cancellationToken);", span="902-902", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(long, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_393 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(long, System.Threading.CancellationToken)", span="900-900", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(long, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_499 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueNotNullAsync(System.Uri, System.Threading.CancellationToken)", span="1171-1171", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueNotNullAsync(System.Uri, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_501 [label="Task task = InternalWriteValueAsync(JsonToken.String, cancellationToken)", span="1173-1173", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueNotNullAsync(System.Uri, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_503 [label="return WriteEscapedStringAsync(value.OriginalString, true, cancellationToken);", span="1176-1176", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueNotNullAsync(System.Uri, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_504 [label="return WriteValueNotNullAsync(task, value, cancellationToken);", span="1179-1179", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueNotNullAsync(System.Uri, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_502 [label="task.IsCompleted", span="1174-1174", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueNotNullAsync(System.Uri, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_505 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueNotNullAsync(System.Uri, System.Threading.CancellationToken)", span="1171-1171", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueNotNullAsync(System.Uri, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_222 [label="return _safeAsync ? DoWriteValueAsync(value, cancellationToken) : base.WriteValueAsync(value, cancellationToken);", span="505-505", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(bool, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_272 [label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(char?, System.Threading.CancellationToken)", span="615-615", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(char?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_274 [label="return value == null ? DoWriteNullAsync(cancellationToken) : DoWriteValueAsync(value.GetValueOrDefault(), cancellationToken);", span="617-617", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(char?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_275 [label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(char?, System.Threading.CancellationToken)", span="615-615", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(char?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_297 [label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.DateTime?, System.Threading.CancellationToken)", span="665-665", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.DateTime?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_299 [label="return value == null ? DoWriteNullAsync(cancellationToken) : DoWriteValueAsync(value.GetValueOrDefault(), cancellationToken);", span="667-667", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.DateTime?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_300 [label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.DateTime?, System.Threading.CancellationToken)", span="665-665", cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.DateTime?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_335 [label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(decimal?, System.Threading.CancellationToken)", span="962-962", cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(decimal?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_260 [label="Entry Newtonsoft.Json.Utilities.Base64Encoder.FlushAsync(System.Threading.CancellationToken)", span="196-196", cluster="Newtonsoft.Json.Utilities.Base64Encoder.FlushAsync(System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_544 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndObjectAsync(System.Threading.CancellationToken)", span="349-349", cluster="Newtonsoft.Json.JsonWriter.WriteEndObjectAsync(System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_292 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueToBuffer(System.DateTime)", span="647-647", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueToBuffer(System.DateTime)", file="DefaultContractResolver.cs"];
m14_331 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(decimal?, System.Threading.CancellationToken)", span="745-745", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(decimal?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_332 [label="return _safeAsync ? DoWriteValueAsync(value, cancellationToken) : base.WriteValueAsync(value, cancellationToken);", span="747-747", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(decimal?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_333 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(decimal?, System.Threading.CancellationToken)", span="745-745", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(decimal?, System.Threading.CancellationToken)", file="DefaultContractResolver.cs"];
m14_580 [label="Newtonsoft.Json.JsonTextWriter", span="", file="DefaultContractResolver.cs"];
m15_14 [label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string, System.Exception)", span="59-59", cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string, System.Exception)", file="DynamicValueProvider.cs"];
m15_0 [label="Entry Newtonsoft.Json.Serialization.DynamicValueProvider.DynamicValueProvider(System.Reflection.MemberInfo)", span="49-49", cluster="Newtonsoft.Json.Serialization.DynamicValueProvider.DynamicValueProvider(System.Reflection.MemberInfo)", file="DynamicValueProvider.cs"];
m15_1 [label="ValidationUtils.ArgumentNotNull(memberInfo, ''memberInfo'')", span="51-51", cluster="Newtonsoft.Json.Serialization.DynamicValueProvider.DynamicValueProvider(System.Reflection.MemberInfo)", file="DynamicValueProvider.cs"];
m15_2 [label="_memberInfo = memberInfo", span="52-52", cluster="Newtonsoft.Json.Serialization.DynamicValueProvider.DynamicValueProvider(System.Reflection.MemberInfo)", file="DynamicValueProvider.cs"];
m15_3 [label="Exit Newtonsoft.Json.Serialization.DynamicValueProvider.DynamicValueProvider(System.Reflection.MemberInfo)", span="49-49", cluster="Newtonsoft.Json.Serialization.DynamicValueProvider.DynamicValueProvider(System.Reflection.MemberInfo)", file="DynamicValueProvider.cs"];
m15_4 [label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="94-94", cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="DynamicValueProvider.cs"];
m15_5 [label="Entry Newtonsoft.Json.Serialization.DynamicValueProvider.SetValue(object, object)", span="60-60", cluster="Newtonsoft.Json.Serialization.DynamicValueProvider.SetValue(object, object)", file="DynamicValueProvider.cs"];
m15_6 [label="_setter == null", span="64-64", cluster="Newtonsoft.Json.Serialization.DynamicValueProvider.SetValue(object, object)", file="DynamicValueProvider.cs"];
m15_8 [label="_setter(target, value)", span="67-67", cluster="Newtonsoft.Json.Serialization.DynamicValueProvider.SetValue(object, object)", file="DynamicValueProvider.cs"];
m15_10 [label="throw new JsonSerializationException(''Error setting value to '{0}' on '{1}'.''.FormatWith(CultureInfo.InvariantCulture, _memberInfo.Name, target.GetType()), ex);", span="71-71", cluster="Newtonsoft.Json.Serialization.DynamicValueProvider.SetValue(object, object)", file="DynamicValueProvider.cs"];
m15_7 [label="_setter = LateBoundDelegateFactory.CreateSet<object>(_memberInfo)", span="65-65", cluster="Newtonsoft.Json.Serialization.DynamicValueProvider.SetValue(object, object)", file="DynamicValueProvider.cs"];
m15_9 [label=Exception, span="69-69", cluster="Newtonsoft.Json.Serialization.DynamicValueProvider.SetValue(object, object)", file="DynamicValueProvider.cs"];
m15_11 [label="Exit Newtonsoft.Json.Serialization.DynamicValueProvider.SetValue(object, object)", span="60-60", cluster="Newtonsoft.Json.Serialization.DynamicValueProvider.SetValue(object, object)", file="DynamicValueProvider.cs"];
m15_15 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="DynamicValueProvider.cs"];
m15_25 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="DynamicValueProvider.cs"];
m15_13 [label="Entry System.Action<T1, T2>.Invoke(T1, T2)", span="0-0", cluster="System.Action<T1, T2>.Invoke(T1, T2)", file="DynamicValueProvider.cs"];
m15_16 [label="Entry string.FormatWith(System.IFormatProvider, params object[])", span="48-48", cluster="string.FormatWith(System.IFormatProvider, params object[])", file="DynamicValueProvider.cs"];
m15_12 [label="Entry Newtonsoft.Json.Utilities.LateBoundDelegateFactory.CreateSet<T>(System.Reflection.MemberInfo)", span="35-35", cluster="Newtonsoft.Json.Utilities.LateBoundDelegateFactory.CreateSet<T>(System.Reflection.MemberInfo)", file="DynamicValueProvider.cs"];
m15_24 [label="Entry Newtonsoft.Json.Utilities.LateBoundDelegateFactory.CreateGet<T>(System.Reflection.MemberInfo)", span="13-13", cluster="Newtonsoft.Json.Utilities.LateBoundDelegateFactory.CreateGet<T>(System.Reflection.MemberInfo)", file="DynamicValueProvider.cs"];
m15_17 [label="Entry Newtonsoft.Json.Serialization.DynamicValueProvider.GetValue(object)", span="80-80", cluster="Newtonsoft.Json.Serialization.DynamicValueProvider.GetValue(object)", file="DynamicValueProvider.cs"];
m15_18 [label="_getter == null", span="84-84", cluster="Newtonsoft.Json.Serialization.DynamicValueProvider.GetValue(object)", file="DynamicValueProvider.cs"];
m15_20 [label="return _getter(target);", span="87-87", cluster="Newtonsoft.Json.Serialization.DynamicValueProvider.GetValue(object)", file="DynamicValueProvider.cs"];
m15_22 [label="throw new JsonSerializationException(''Error getting value from '{0}' on '{1}'.''.FormatWith(CultureInfo.InvariantCulture, _memberInfo.Name, target.GetType()), ex);", span="91-91", cluster="Newtonsoft.Json.Serialization.DynamicValueProvider.GetValue(object)", file="DynamicValueProvider.cs"];
m15_19 [label="_getter = LateBoundDelegateFactory.CreateGet<object>(_memberInfo)", span="85-85", cluster="Newtonsoft.Json.Serialization.DynamicValueProvider.GetValue(object)", file="DynamicValueProvider.cs"];
m15_21 [label=Exception, span="89-89", cluster="Newtonsoft.Json.Serialization.DynamicValueProvider.GetValue(object)", file="DynamicValueProvider.cs"];
m15_23 [label="Exit Newtonsoft.Json.Serialization.DynamicValueProvider.GetValue(object)", span="80-80", cluster="Newtonsoft.Json.Serialization.DynamicValueProvider.GetValue(object)", file="DynamicValueProvider.cs"];
m15_26 [label="Newtonsoft.Json.Serialization.DynamicValueProvider", span="", file="DynamicValueProvider.cs"];
m16_55 [label="Entry System.Type.GetType(string)", span="0-0", cluster="System.Type.GetType(string)", file="EntityKeyMemberConverter.cs"];
m16_54 [label="Entry System.Activator.CreateInstance(System.Type)", span="0-0", cluster="System.Activator.CreateInstance(System.Type)", file="EntityKeyMemberConverter.cs"];
m16_39 [label="Entry Newtonsoft.Json.Converters.EntityKeyMemberConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", span="106-106", cluster="Newtonsoft.Json.Converters.EntityKeyMemberConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="EntityKeyMemberConverter.cs"];
m16_40 [label="IEntityKeyMember entityKeyMember = DynamicWrapper.CreateWrapper<IEntityKeyMember>(Activator.CreateInstance(objectType))", span="108-108", cluster="Newtonsoft.Json.Converters.EntityKeyMemberConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="EntityKeyMemberConverter.cs"];
m16_41 [label="ReadAndAssertProperty(reader, ''Key'')", span="110-110", cluster="Newtonsoft.Json.Converters.EntityKeyMemberConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="EntityKeyMemberConverter.cs"];
m16_42 [label="ReadAndAssert(reader)", span="111-111", cluster="Newtonsoft.Json.Converters.EntityKeyMemberConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="EntityKeyMemberConverter.cs"];
m16_43 [label="entityKeyMember.Key = reader.Value.ToString()", span="112-112", cluster="Newtonsoft.Json.Converters.EntityKeyMemberConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="EntityKeyMemberConverter.cs"];
m16_44 [label="ReadAndAssertProperty(reader, ''Type'')", span="114-114", cluster="Newtonsoft.Json.Converters.EntityKeyMemberConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="EntityKeyMemberConverter.cs"];
m16_45 [label="ReadAndAssert(reader)", span="115-115", cluster="Newtonsoft.Json.Converters.EntityKeyMemberConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="EntityKeyMemberConverter.cs"];
m16_46 [label="string type = reader.Value.ToString()", span="116-116", cluster="Newtonsoft.Json.Converters.EntityKeyMemberConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="EntityKeyMemberConverter.cs"];
m16_48 [label="ReadAndAssertProperty(reader, ''Value'')", span="120-120", cluster="Newtonsoft.Json.Converters.EntityKeyMemberConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="EntityKeyMemberConverter.cs"];
m16_49 [label="ReadAndAssert(reader)", span="121-121", cluster="Newtonsoft.Json.Converters.EntityKeyMemberConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="EntityKeyMemberConverter.cs"];
m16_50 [label="entityKeyMember.Value = serializer.Deserialize(reader, t)", span="122-122", cluster="Newtonsoft.Json.Converters.EntityKeyMemberConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="EntityKeyMemberConverter.cs"];
m16_51 [label="ReadAndAssert(reader)", span="124-124", cluster="Newtonsoft.Json.Converters.EntityKeyMemberConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="EntityKeyMemberConverter.cs"];
m16_52 [label="return DynamicWrapper.GetUnderlyingObject(entityKeyMember);", span="126-126", cluster="Newtonsoft.Json.Converters.EntityKeyMemberConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="EntityKeyMemberConverter.cs"];
m16_47 [label="Type t = Type.GetType(type)", span="118-118", cluster="Newtonsoft.Json.Converters.EntityKeyMemberConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="EntityKeyMemberConverter.cs"];
m16_53 [label="Exit Newtonsoft.Json.Converters.EntityKeyMemberConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", span="106-106", cluster="Newtonsoft.Json.Converters.EntityKeyMemberConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="EntityKeyMemberConverter.cs"];
m16_61 [label="Entry System.Type.AssignableToTypeName(string)", span="222-222", cluster="System.Type.AssignableToTypeName(string)", file="EntityKeyMemberConverter.cs"];
m16_32 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()", file="EntityKeyMemberConverter.cs"];
m16_0 [label="Entry Newtonsoft.Json.Converters.EntityKeyMemberConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="56-56", cluster="Newtonsoft.Json.Converters.EntityKeyMemberConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="EntityKeyMemberConverter.cs"];
m16_1 [label="IEntityKeyMember entityKeyMember = DynamicWrapper.CreateWrapper<IEntityKeyMember>(value)", span="58-58", cluster="Newtonsoft.Json.Converters.EntityKeyMemberConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="EntityKeyMemberConverter.cs"];
m16_3 [label="writer.WriteStartObject()", span="61-61", cluster="Newtonsoft.Json.Converters.EntityKeyMemberConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="EntityKeyMemberConverter.cs"];
m16_4 [label="writer.WritePropertyName(''Key'')", span="62-62", cluster="Newtonsoft.Json.Converters.EntityKeyMemberConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="EntityKeyMemberConverter.cs"];
m16_5 [label="writer.WriteValue(entityKeyMember.Key)", span="63-63", cluster="Newtonsoft.Json.Converters.EntityKeyMemberConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="EntityKeyMemberConverter.cs"];
m16_6 [label="writer.WritePropertyName(''Type'')", span="64-64", cluster="Newtonsoft.Json.Converters.EntityKeyMemberConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="EntityKeyMemberConverter.cs"];
m16_7 [label="writer.WriteValue((keyType != null) ? keyType.FullName : null)", span="65-65", cluster="Newtonsoft.Json.Converters.EntityKeyMemberConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="EntityKeyMemberConverter.cs"];
m16_8 [label="writer.WritePropertyName(''Value'')", span="67-67", cluster="Newtonsoft.Json.Converters.EntityKeyMemberConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="EntityKeyMemberConverter.cs"];
m16_12 [label="writer.WriteValue(valueJson)", span="73-73", cluster="Newtonsoft.Json.Converters.EntityKeyMemberConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="EntityKeyMemberConverter.cs"];
m16_13 [label="writer.WriteValue(entityKeyMember.Value)", span="75-75", cluster="Newtonsoft.Json.Converters.EntityKeyMemberConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="EntityKeyMemberConverter.cs"];
m16_14 [label="writer.WriteNull()", span="79-79", cluster="Newtonsoft.Json.Converters.EntityKeyMemberConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="EntityKeyMemberConverter.cs"];
m16_15 [label="writer.WriteEndObject()", span="82-82", cluster="Newtonsoft.Json.Converters.EntityKeyMemberConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="EntityKeyMemberConverter.cs"];
m16_2 [label="Type keyType = (entityKeyMember.Value != null) ? entityKeyMember.Value.GetType() : null", span="59-59", cluster="Newtonsoft.Json.Converters.EntityKeyMemberConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="EntityKeyMemberConverter.cs"];
m16_11 [label="JsonSerializerInternalWriter.TryConvertToString(entityKeyMember.Value, keyType, out valueJson)", span="72-72", cluster="Newtonsoft.Json.Converters.EntityKeyMemberConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="EntityKeyMemberConverter.cs"];
m16_9 [label="keyType != null", span="69-69", cluster="Newtonsoft.Json.Converters.EntityKeyMemberConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="EntityKeyMemberConverter.cs"];
m16_10 [label="string valueJson", span="71-71", cluster="Newtonsoft.Json.Converters.EntityKeyMemberConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="EntityKeyMemberConverter.cs"];
m16_16 [label="Exit Newtonsoft.Json.Converters.EntityKeyMemberConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="56-56", cluster="Newtonsoft.Json.Converters.EntityKeyMemberConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="EntityKeyMemberConverter.cs"];
m16_22 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", span="226-226", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="EntityKeyMemberConverter.cs"];
m16_24 [label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="617-617", cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="EntityKeyMemberConverter.cs"];
m16_56 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="377-377", cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="EntityKeyMemberConverter.cs"];
m16_58 [label="Entry Newtonsoft.Json.Converters.EntityKeyMemberConverter.CanConvert(System.Type)", span="136-136", cluster="Newtonsoft.Json.Converters.EntityKeyMemberConverter.CanConvert(System.Type)", file="EntityKeyMemberConverter.cs"];
m16_59 [label="return (objectType.AssignableToTypeName(EntityKeyMemberFullTypeName));", span="138-138", cluster="Newtonsoft.Json.Converters.EntityKeyMemberConverter.CanConvert(System.Type)", file="EntityKeyMemberConverter.cs"];
m16_60 [label="Exit Newtonsoft.Json.Converters.EntityKeyMemberConverter.CanConvert(System.Type)", span="136-136", cluster="Newtonsoft.Json.Converters.EntityKeyMemberConverter.CanConvert(System.Type)", file="EntityKeyMemberConverter.cs"];
m16_23 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(object)", span="994-994", cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="EntityKeyMemberConverter.cs"];
m16_17 [label="Entry Newtonsoft.Json.Utilities.DynamicWrapper.CreateWrapper<T>(object)", span="108-108", cluster="Newtonsoft.Json.Utilities.DynamicWrapper.CreateWrapper<T>(object)", file="EntityKeyMemberConverter.cs"];
m16_57 [label="Entry Newtonsoft.Json.Utilities.DynamicWrapper.GetUnderlyingObject(object)", span="81-81", cluster="Newtonsoft.Json.Utilities.DynamicWrapper.GetUnderlyingObject(object)", file="EntityKeyMemberConverter.cs"];
m16_19 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="227-227", cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="EntityKeyMemberConverter.cs"];
m16_31 [label="Entry Newtonsoft.Json.Converters.EntityKeyMemberConverter.ReadAndAssert(Newtonsoft.Json.JsonReader)", span="93-93", cluster="Newtonsoft.Json.Converters.EntityKeyMemberConverter.ReadAndAssert(Newtonsoft.Json.JsonReader)", file="EntityKeyMemberConverter.cs"];
m16_35 [label="!reader.Read()", span="95-95", cluster="Newtonsoft.Json.Converters.EntityKeyMemberConverter.ReadAndAssert(Newtonsoft.Json.JsonReader)", file="EntityKeyMemberConverter.cs"];
m16_36 [label="throw new JsonSerializationException(''Unexpected end.'');", span="96-96", cluster="Newtonsoft.Json.Converters.EntityKeyMemberConverter.ReadAndAssert(Newtonsoft.Json.JsonReader)", file="EntityKeyMemberConverter.cs"];
m16_37 [label="Exit Newtonsoft.Json.Converters.EntityKeyMemberConverter.ReadAndAssert(Newtonsoft.Json.JsonReader)", span="93-93", cluster="Newtonsoft.Json.Converters.EntityKeyMemberConverter.ReadAndAssert(Newtonsoft.Json.JsonReader)", file="EntityKeyMemberConverter.cs"];
m16_25 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="236-236", cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="EntityKeyMemberConverter.cs"];
m16_21 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="653-653", cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="EntityKeyMemberConverter.cs"];
m16_18 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="EntityKeyMemberConverter.cs"];
m16_33 [label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="48-48", cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="EntityKeyMemberConverter.cs"];
m16_20 [label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="280-280", cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="EntityKeyMemberConverter.cs"];
m16_38 [label="Entry Newtonsoft.Json.JsonReader.Read()", span="204-204", cluster="Newtonsoft.Json.JsonReader.Read()", file="EntityKeyMemberConverter.cs"];
m16_26 [label="Entry Newtonsoft.Json.Converters.EntityKeyMemberConverter.ReadAndAssertProperty(Newtonsoft.Json.JsonReader, string)", span="85-85", cluster="Newtonsoft.Json.Converters.EntityKeyMemberConverter.ReadAndAssertProperty(Newtonsoft.Json.JsonReader, string)", file="EntityKeyMemberConverter.cs"];
m16_27 [label="ReadAndAssert(reader)", span="87-87", cluster="Newtonsoft.Json.Converters.EntityKeyMemberConverter.ReadAndAssertProperty(Newtonsoft.Json.JsonReader, string)", file="EntityKeyMemberConverter.cs"];
m16_28 [label="reader.TokenType != JsonToken.PropertyName || reader.Value.ToString() != propertyName", span="89-89", cluster="Newtonsoft.Json.Converters.EntityKeyMemberConverter.ReadAndAssertProperty(Newtonsoft.Json.JsonReader, string)", file="EntityKeyMemberConverter.cs"];
m16_29 [label="throw new JsonSerializationException(''Expected JSON property '{0}'.''.FormatWith(CultureInfo.InvariantCulture, propertyName));", span="90-90", cluster="Newtonsoft.Json.Converters.EntityKeyMemberConverter.ReadAndAssertProperty(Newtonsoft.Json.JsonReader, string)", file="EntityKeyMemberConverter.cs"];
m16_30 [label="Exit Newtonsoft.Json.Converters.EntityKeyMemberConverter.ReadAndAssertProperty(Newtonsoft.Json.JsonReader, string)", span="85-85", cluster="Newtonsoft.Json.Converters.EntityKeyMemberConverter.ReadAndAssertProperty(Newtonsoft.Json.JsonReader, string)", file="EntityKeyMemberConverter.cs"];
m16_34 [label="Entry string.FormatWith(System.IFormatProvider, params object[])", span="48-48", cluster="string.FormatWith(System.IFormatProvider, params object[])", file="EntityKeyMemberConverter.cs"];
m17_0 [label="Entry Newtonsoft.Json.Tests.TestObjects.Foo.Foo()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.Foo.Foo()", file="Foo.cs"];
m17_1 [label="Bars = new List<Bar>()", span="33-33", cluster="Newtonsoft.Json.Tests.TestObjects.Foo.Foo()", color=green, community=0, file="Foo.cs"];
m17_2 [label="Exit Newtonsoft.Json.Tests.TestObjects.Foo.Foo()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.Foo.Foo()", file="Foo.cs"];
m17_3 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="Foo.cs"];
m17_4 [label="Newtonsoft.Json.Tests.TestObjects.Foo", span="", file="Foo.cs"];
m18_11 [label="Entry System.NotImplementedException.NotImplementedException()", span="0-0", cluster="System.NotImplementedException.NotImplementedException()", file="HtmlColorConverter.cs"];
m18_3 [label="Entry Unk.ToHtml", span="", cluster="Unk.ToHtml", file="HtmlColorConverter.cs"];
m18_4 [label="Entry Unk.WriteValue", span="", cluster="Unk.WriteValue", file="HtmlColorConverter.cs"];
m18_5 [label="Entry Newtonsoft.Json.Converters.HtmlColorConverter.CanConvert(System.Type)", span="56-56", cluster="Newtonsoft.Json.Converters.HtmlColorConverter.CanConvert(System.Type)", file="HtmlColorConverter.cs"];
m18_6 [label="return (valueType == typeof(Color));", span="58-58", cluster="Newtonsoft.Json.Converters.HtmlColorConverter.CanConvert(System.Type)", file="HtmlColorConverter.cs"];
m18_7 [label="Exit Newtonsoft.Json.Converters.HtmlColorConverter.CanConvert(System.Type)", span="56-56", cluster="Newtonsoft.Json.Converters.HtmlColorConverter.CanConvert(System.Type)", file="HtmlColorConverter.cs"];
m18_0 [label="Entry Newtonsoft.Json.Converters.HtmlColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="44-44", cluster="Newtonsoft.Json.Converters.HtmlColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="HtmlColorConverter.cs"];
m18_1 [label="writer.WriteValue(ColorTranslator.ToHtml((Color)value))", span="46-46", cluster="Newtonsoft.Json.Converters.HtmlColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="HtmlColorConverter.cs"];
m18_2 [label="Exit Newtonsoft.Json.Converters.HtmlColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="44-44", cluster="Newtonsoft.Json.Converters.HtmlColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="HtmlColorConverter.cs"];
m18_8 [label="Entry Newtonsoft.Json.Converters.HtmlColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", span="68-68", cluster="Newtonsoft.Json.Converters.HtmlColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="HtmlColorConverter.cs"];
m18_9 [label="throw new NotImplementedException();", span="70-70", cluster="Newtonsoft.Json.Converters.HtmlColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="HtmlColorConverter.cs"];
m18_10 [label="Exit Newtonsoft.Json.Converters.HtmlColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", span="68-68", cluster="Newtonsoft.Json.Converters.HtmlColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="HtmlColorConverter.cs"];
m19_20 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", span="40-40", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", file="IsoDateTimeConverter.cs"];
m19_46 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="IsoDateTimeConverter.cs"];
m19_18 [label="Entry System.DateTimeOffset.ToString(string, System.IFormatProvider)", span="0-0", cluster="System.DateTimeOffset.ToString(string, System.IFormatProvider)", file="IsoDateTimeConverter.cs"];
m19_22 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="653-653", cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="IsoDateTimeConverter.cs"];
m19_23 [label="Entry Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", span="96-96", cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="IsoDateTimeConverter.cs"];
m19_24 [label="bool nullable = ReflectionUtils.IsNullableType(objectType)", span="98-98", cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="IsoDateTimeConverter.cs"];
m19_25 [label="Type t = (nullable)\r\n        ? Nullable.GetUnderlyingType(objectType)\r\n        : objectType", span="99-101", cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="IsoDateTimeConverter.cs"];
m19_26 [label="reader.TokenType == JsonToken.Null", span="103-103", cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="IsoDateTimeConverter.cs"];
m19_27 [label="!ReflectionUtils.IsNullableType(objectType)", span="105-105", cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="IsoDateTimeConverter.cs"];
m19_28 [label="throw new Exception(''Cannot convert null value to {0}.''.FormatWith(CultureInfo.InvariantCulture, objectType));", span="106-106", cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="IsoDateTimeConverter.cs"];
m19_30 [label="reader.TokenType != JsonToken.String", span="111-111", cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="IsoDateTimeConverter.cs"];
m19_31 [label="throw new Exception(''Unexpected token parsing date. Expected String, got {0}.''.FormatWith(CultureInfo.InvariantCulture, reader.TokenType));", span="112-112", cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="IsoDateTimeConverter.cs"];
m19_32 [label="string dateText = reader.Value.ToString()", span="114-114", cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="IsoDateTimeConverter.cs"];
m19_33 [label="string.IsNullOrEmpty(dateText) && nullable", span="116-116", cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="IsoDateTimeConverter.cs"];
m19_35 [label="t == typeof(DateTimeOffset)", span="120-120", cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="IsoDateTimeConverter.cs"];
m19_29 [label="return null;", span="108-108", cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="IsoDateTimeConverter.cs"];
m19_37 [label="return DateTimeOffset.ParseExact(dateText, _dateTimeFormat, Culture, _dateTimeStyles);", span="123-123", cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="IsoDateTimeConverter.cs"];
m19_38 [label="return DateTimeOffset.Parse(dateText, Culture, _dateTimeStyles);", span="125-125", cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="IsoDateTimeConverter.cs"];
m19_40 [label="return DateTime.ParseExact(dateText, _dateTimeFormat, Culture, _dateTimeStyles);", span="130-130", cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="IsoDateTimeConverter.cs"];
m19_41 [label="return DateTime.Parse(dateText, Culture, _dateTimeStyles);", span="132-132", cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="IsoDateTimeConverter.cs"];
m19_34 [label="return null;", span="117-117", cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="IsoDateTimeConverter.cs"];
m19_36 [label="!string.IsNullOrEmpty(_dateTimeFormat)", span="122-122", cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="IsoDateTimeConverter.cs"];
m19_39 [label="!string.IsNullOrEmpty(_dateTimeFormat)", span="129-129", cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="IsoDateTimeConverter.cs"];
m19_42 [label="Exit Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", span="96-96", cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="IsoDateTimeConverter.cs"];
m19_49 [label="Entry System.DateTime.ParseExact(string, string, System.IFormatProvider, System.Globalization.DateTimeStyles)", span="0-0", cluster="System.DateTime.ParseExact(string, string, System.IFormatProvider, System.Globalization.DateTimeStyles)", file="IsoDateTimeConverter.cs"];
m19_19 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="IsoDateTimeConverter.cs"];
m19_51 [label="Entry Newtonsoft.Json.Converters.IsoDateTimeConverter.CanConvert(System.Type)", span="142-142", cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.CanConvert(System.Type)", file="IsoDateTimeConverter.cs"];
m19_52 [label="Type t = (ReflectionUtils.IsNullableType(objectType))\r\n        ? Nullable.GetUnderlyingType(objectType)\r\n        : objectType", span="144-146", cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.CanConvert(System.Type)", color=red, community=1, file="IsoDateTimeConverter.cs"];
m19_53 [label="t == typeof(DateTime)", span="148-148", cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.CanConvert(System.Type)", color=red, community=0, file="IsoDateTimeConverter.cs"];
m19_55 [label="t == typeof(DateTimeOffset)", span="151-151", cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.CanConvert(System.Type)", color=red, community=0, file="IsoDateTimeConverter.cs"];
m19_54 [label="return true;", span="149-149", cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.CanConvert(System.Type)", color=red, community=0, file="IsoDateTimeConverter.cs"];
m19_56 [label="return true;", span="152-152", cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.CanConvert(System.Type)", color=red, community=0, file="IsoDateTimeConverter.cs"];
m19_57 [label="return false;", span="155-155", cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.CanConvert(System.Type)", color=red, community=0, file="IsoDateTimeConverter.cs"];
m19_58 [label="Exit Newtonsoft.Json.Converters.IsoDateTimeConverter.CanConvert(System.Type)", span="142-142", cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.CanConvert(System.Type)", file="IsoDateTimeConverter.cs"];
m19_0 [label="Entry Newtonsoft.Json.Converters.IsoDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="56-56", cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="IsoDateTimeConverter.cs"];
m19_1 [label="string text", span="58-58", cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="IsoDateTimeConverter.cs"];
m19_2 [label="value is DateTime", span="60-60", cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="IsoDateTimeConverter.cs"];
m19_3 [label="DateTime dateTime = (DateTime)value", span="62-62", cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="IsoDateTimeConverter.cs"];
m19_7 [label="value is DateTimeOffset", span="71-71", cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="IsoDateTimeConverter.cs"];
m19_8 [label="DateTimeOffset dateTimeOffset = (DateTimeOffset)value", span="73-73", cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="IsoDateTimeConverter.cs"];
m19_12 [label="throw new Exception(''Unexpected value when converting date. Expected DateTime or DateTimeOffset, got {0}.''.FormatWith(CultureInfo.InvariantCulture, ReflectionUtils.GetObjectType(value)));", span="83-83", cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="IsoDateTimeConverter.cs"];
m19_13 [label="writer.WriteValue(text)", span="86-86", cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="IsoDateTimeConverter.cs"];
m19_4 [label="(_dateTimeStyles & DateTimeStyles.AdjustToUniversal) == DateTimeStyles.AdjustToUniversal\r\n          || (_dateTimeStyles & DateTimeStyles.AssumeUniversal) == DateTimeStyles.AssumeUniversal", span="64-65", cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="IsoDateTimeConverter.cs"];
m19_5 [label="dateTime = dateTime.ToUniversalTime()", span="66-66", cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="IsoDateTimeConverter.cs"];
m19_6 [label="text = dateTime.ToString(_dateTimeFormat ?? DefaultDateTimeFormat, Culture)", span="68-68", cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="IsoDateTimeConverter.cs"];
m19_9 [label="(_dateTimeStyles & DateTimeStyles.AdjustToUniversal) == DateTimeStyles.AdjustToUniversal\r\n          || (_dateTimeStyles & DateTimeStyles.AssumeUniversal) == DateTimeStyles.AssumeUniversal", span="74-75", cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="IsoDateTimeConverter.cs"];
m19_10 [label="dateTimeOffset = dateTimeOffset.ToUniversalTime()", span="76-76", cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="IsoDateTimeConverter.cs"];
m19_11 [label="text = dateTimeOffset.ToString(_dateTimeFormat ?? DefaultDateTimeFormat, Culture)", span="78-78", cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="IsoDateTimeConverter.cs"];
m19_14 [label="Exit Newtonsoft.Json.Converters.IsoDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="56-56", cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="IsoDateTimeConverter.cs"];
m19_16 [label="Entry System.DateTime.ToString(string, System.IFormatProvider)", span="0-0", cluster="System.DateTime.ToString(string, System.IFormatProvider)", file="IsoDateTimeConverter.cs"];
m19_17 [label="Entry System.DateTimeOffset.ToUniversalTime()", span="0-0", cluster="System.DateTimeOffset.ToUniversalTime()", file="IsoDateTimeConverter.cs"];
m19_48 [label="Entry System.DateTimeOffset.Parse(string, System.IFormatProvider, System.Globalization.DateTimeStyles)", span="0-0", cluster="System.DateTimeOffset.Parse(string, System.IFormatProvider, System.Globalization.DateTimeStyles)", file="IsoDateTimeConverter.cs"];
m19_21 [label="Entry string.FormatWith(System.IFormatProvider, params object[])", span="48-48", cluster="string.FormatWith(System.IFormatProvider, params object[])", file="IsoDateTimeConverter.cs"];
m19_50 [label="Entry System.DateTime.Parse(string, System.IFormatProvider, System.Globalization.DateTimeStyles)", span="0-0", cluster="System.DateTime.Parse(string, System.IFormatProvider, System.Globalization.DateTimeStyles)", file="IsoDateTimeConverter.cs"];
m19_15 [label="Entry System.DateTime.ToUniversalTime()", span="0-0", cluster="System.DateTime.ToUniversalTime()", file="IsoDateTimeConverter.cs"];
m19_43 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", span="98-98", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", file="IsoDateTimeConverter.cs"];
m19_45 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()", file="IsoDateTimeConverter.cs"];
m19_44 [label="Entry System.Nullable.GetUnderlyingType(System.Type)", span="0-0", cluster="System.Nullable.GetUnderlyingType(System.Type)", file="IsoDateTimeConverter.cs"];
m19_47 [label="Entry System.DateTimeOffset.ParseExact(string, string, System.IFormatProvider, System.Globalization.DateTimeStyles)", span="0-0", cluster="System.DateTimeOffset.ParseExact(string, string, System.IFormatProvider, System.Globalization.DateTimeStyles)", file="IsoDateTimeConverter.cs"];
m19_59 [label="Newtonsoft.Json.Converters.IsoDateTimeConverter", span="", file="IsoDateTimeConverter.cs"];
m20_13 [label="IsoDateTimeConverter converter = new IsoDateTimeConverter()", span="63-63", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeDateTime()", file="IsoDateTimeConverterTests.cs"];
m20_40 [label="string json = @''''''09/12/2006''''''", span="101-101", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeCustomFormattedDateTime()", file="IsoDateTimeConverterTests.cs"];
m20_46 [label="Assert.AreEqual(null, exception.InnerException)", span="96-96", cluster="Newtonsoft.Json.Tests.ExceptionTests.JsonSchemaException()", file="IsoDateTimeConverterTests.cs"];
m20_47 [label="exception = new JsonSchemaException(''Message!'', new Exception(''Inner!''))", span="98-98", cluster="Newtonsoft.Json.Tests.ExceptionTests.JsonSchemaException()", file="IsoDateTimeConverterTests.cs"];
m20_48 [label="Assert.AreEqual(''Message!'', exception.Message)", span="99-99", cluster="Newtonsoft.Json.Tests.ExceptionTests.JsonSchemaException()", file="IsoDateTimeConverterTests.cs", color=green, community=0];
m20_50 [label="Exit Newtonsoft.Json.Tests.ExceptionTests.JsonSchemaException()", span="89-89", cluster="Newtonsoft.Json.Tests.ExceptionTests.JsonSchemaException()", file="IsoDateTimeConverterTests.cs"];
m20_52 [label="Entry Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(string)", span="69-69", cluster="Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(string)", file="IsoDateTimeConverterTests.cs"];
m20_54 [label="result = JsonConvert.SerializeObject(d, converter)", span="125-125", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeFormattedDateTimeNewZealandCulture()", file="IsoDateTimeConverterTests.cs"];
m20_49 [label="Assert.AreEqual(''Inner!'', exception.InnerException.Message)", span="100-100", cluster="Newtonsoft.Json.Tests.ExceptionTests.JsonSchemaException()", file="IsoDateTimeConverterTests.cs", color=green, community=0];
m20_51 [label="Entry Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException()", span="60-60", cluster="Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException()", file="IsoDateTimeConverterTests.cs"];
m20_53 [label="Entry Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(string, System.Exception)", span="80-80", cluster="Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(string, System.Exception)", file="IsoDateTimeConverterTests.cs"];
m20_55 [label="Assert.AreEqual(@''''''Friday, 15 December 2000 10:11:03 p.m.'''''', result)", span="126-126", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeFormattedDateTimeNewZealandCulture()", file="IsoDateTimeConverterTests.cs"];
m20_56 [label="Exit Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeFormattedDateTimeNewZealandCulture()", span="112-112", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeFormattedDateTimeNewZealandCulture()", file="IsoDateTimeConverterTests.cs"];
m20_158 [label="Entry Newtonsoft.Json.Tests.TestObjects.Person.Person()", span="34-34", cluster="Newtonsoft.Json.Tests.TestObjects.Person.Person()", file="IsoDateTimeConverterTests.cs"];
m20_153 [label="Entry Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.BlogCodeSample()", span="272-272", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.BlogCodeSample()", file="IsoDateTimeConverterTests.cs"];
m20_154 [label="Person p = new Person\r\n                   {\r\n                     Name = ''Keith'',\r\n                     BirthDate = new DateTime(1980, 3, 8),\r\n                     LastModified = new DateTime(2009, 4, 12, 20, 44, 55),\r\n                   }", span="274-279", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.BlogCodeSample()", file="IsoDateTimeConverterTests.cs"];
m20_155 [label="string jsonText = JsonConvert.SerializeObject(p, new IsoDateTimeConverter())", span="281-281", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.BlogCodeSample()", file="IsoDateTimeConverterTests.cs"];
m20_156 [label="Console.WriteLine(jsonText)", span="288-288", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.BlogCodeSample()", file="IsoDateTimeConverterTests.cs"];
m20_157 [label="Exit Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.BlogCodeSample()", span="272-272", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.BlogCodeSample()", file="IsoDateTimeConverterTests.cs"];
m20_23 [label="Assert.AreEqual(''Inner!'', exception.InnerException.Message)", span="70-70", cluster="Newtonsoft.Json.Tests.ExceptionTests.JsonWriterException()", file="IsoDateTimeConverterTests.cs"];
m20_10 [label="Entry Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", span="12-12", cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", file="IsoDateTimeConverterTests.cs"];
m20_27 [label="Entry Newtonsoft.Json.JsonWriterException.JsonWriterException(string, System.Exception)", span="63-63", cluster="Newtonsoft.Json.JsonWriterException.JsonWriterException(string, System.Exception)", file="IsoDateTimeConverterTests.cs"];
m20_28 [label="Entry Newtonsoft.Json.Tests.ExceptionTests.JsonReaderException()", span="74-74", cluster="Newtonsoft.Json.Tests.ExceptionTests.JsonReaderException()", file="IsoDateTimeConverterTests.cs"];
m20_29 [label="JsonReaderException exception = new JsonReaderException()", span="76-76", cluster="Newtonsoft.Json.Tests.ExceptionTests.JsonReaderException()", file="IsoDateTimeConverterTests.cs"];
m20_31 [label="exception = new JsonReaderException(''Message!'')", span="79-79", cluster="Newtonsoft.Json.Tests.ExceptionTests.JsonReaderException()", file="IsoDateTimeConverterTests.cs"];
m20_33 [label="Assert.AreEqual(null, exception.InnerException)", span="81-81", cluster="Newtonsoft.Json.Tests.ExceptionTests.JsonReaderException()", file="IsoDateTimeConverterTests.cs"];
m20_35 [label="Assert.AreEqual(''Message!'', exception.Message)", span="84-84", cluster="Newtonsoft.Json.Tests.ExceptionTests.JsonReaderException()", file="IsoDateTimeConverterTests.cs"];
m20_30 [label="Assert.AreEqual(''Exception of type 'Newtonsoft.Json.JsonReaderException' was thrown.'', exception.Message)", span="77-77", cluster="Newtonsoft.Json.Tests.ExceptionTests.JsonReaderException()", file="IsoDateTimeConverterTests.cs"];
m20_32 [label="Assert.AreEqual(''Message!'', exception.Message)", span="80-80", cluster="Newtonsoft.Json.Tests.ExceptionTests.JsonReaderException()", file="IsoDateTimeConverterTests.cs"];
m20_34 [label="exception = new JsonReaderException(''Message!'', new Exception(''Inner!''))", span="83-83", cluster="Newtonsoft.Json.Tests.ExceptionTests.JsonReaderException()", file="IsoDateTimeConverterTests.cs"];
m20_36 [label="Assert.AreEqual(''Inner!'', exception.InnerException.Message)", span="85-85", cluster="Newtonsoft.Json.Tests.ExceptionTests.JsonReaderException()", file="IsoDateTimeConverterTests.cs"];
m20_37 [label="Exit Newtonsoft.Json.Tests.ExceptionTests.JsonReaderException()", span="74-74", cluster="Newtonsoft.Json.Tests.ExceptionTests.JsonReaderException()", file="IsoDateTimeConverterTests.cs"];
m20_91 [label="Entry System.DateTime.ToLocalTime()", span="0-0", cluster="System.DateTime.ToLocalTime()", file="IsoDateTimeConverterTests.cs"];
m20_107 [label="Entry Newtonsoft.Json.Tests.TestObjects.NullableDateTimeTestClass.NullableDateTimeTestClass()", span="33-33", cluster="Newtonsoft.Json.Tests.TestObjects.NullableDateTimeTestClass.NullableDateTimeTestClass()", file="IsoDateTimeConverterTests.cs"];
m20_159 [label="Entry System.DateTime.DateTime(int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int)", file="IsoDateTimeConverterTests.cs"];
m20_139 [label="Entry Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.DeserializeNullToNonNullable()", span="251-251", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.DeserializeNullToNonNullable()", file="IsoDateTimeConverterTests.cs"];
m20_140 [label="DateTimeTestClass c2 =\r\n       JsonConvert.DeserializeObject<DateTimeTestClass>(@''{''''PreField'''':''''Pre'''',''''DateTimeField'''':null,''''DateTimeOffsetField'''':null,''''PostField'''':''''Post''''}'', new IsoDateTimeConverter() { DateTimeStyles = DateTimeStyles.AssumeUniversal })", span="253-254", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.DeserializeNullToNonNullable()", file="IsoDateTimeConverterTests.cs"];
m20_141 [label="Exit Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.DeserializeNullToNonNullable()", span="251-251", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.DeserializeNullToNonNullable()", file="IsoDateTimeConverterTests.cs"];
m20_26 [label="Entry Newtonsoft.Json.JsonWriterException.JsonWriterException(string)", span="52-52", cluster="Newtonsoft.Json.JsonWriterException.JsonWriterException(string)", file="IsoDateTimeConverterTests.cs"];
m20_161 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="IsoDateTimeConverterTests.cs"];
m20_15 [label="string result", span="66-66", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeDateTime()", file="IsoDateTimeConverterTests.cs"];
m20_17 [label="Assert.AreEqual(@''''''2000-12-15T22:11:03.055Z'''''', result)", span="69-69", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeDateTime()", file="IsoDateTimeConverterTests.cs"];
m20_19 [label="d = new DateTime(2000, 12, 15, 22, 11, 3, 55, DateTimeKind.Local)", span="73-73", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeDateTime()", file="IsoDateTimeConverterTests.cs"];
m20_20 [label="result = JsonConvert.SerializeObject(d, converter)", span="74-74", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeDateTime()", file="IsoDateTimeConverterTests.cs"];
m20_22 [label="Exit Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeDateTime()", span="61-61", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeDateTime()", file="IsoDateTimeConverterTests.cs"];
m20_21 [label="Assert.AreEqual(@''''''2000-12-15T22:11:03.055'' + d.GetLocalOffset() + @'''''''', result)", span="75-75", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeDateTime()", file="IsoDateTimeConverterTests.cs"];
m20_16 [label="result = JsonConvert.SerializeObject(d, converter)", span="68-68", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeDateTime()", file="IsoDateTimeConverterTests.cs"];
m20_18 [label="Assert.AreEqual(d, JsonConvert.DeserializeObject<DateTime>(result, converter))", span="71-71", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeDateTime()", file="IsoDateTimeConverterTests.cs"];
m20_24 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", span="474-474", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", file="IsoDateTimeConverterTests.cs"];
m20_152 [label="Entry Unk.AreNotEqual", span="", cluster="Unk.AreNotEqual", file="IsoDateTimeConverterTests.cs"];
m20_41 [label="DateTime d = JsonConvert.DeserializeObject<DateTime>(json, converter)", span="103-103", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeCustomFormattedDateTime()", file="IsoDateTimeConverterTests.cs"];
m20_43 [label="Assert.AreEqual(12, d.Month)", span="106-106", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeCustomFormattedDateTime()", file="IsoDateTimeConverterTests.cs"];
m20_45 [label="Exit Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeCustomFormattedDateTime()", span="97-97", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeCustomFormattedDateTime()", file="IsoDateTimeConverterTests.cs"];
m20_44 [label="Assert.AreEqual(2006, d.Year)", span="107-107", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeCustomFormattedDateTime()", file="IsoDateTimeConverterTests.cs"];
m20_42 [label="Assert.AreEqual(9, d.Day)", span="105-105", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeCustomFormattedDateTime()", file="IsoDateTimeConverterTests.cs"];
m20_138 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="590-590", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="IsoDateTimeConverterTests.cs"];
m20_25 [label="Entry Newtonsoft.Json.JsonWriterException.JsonWriterException()", span="43-43", cluster="Newtonsoft.Json.JsonWriterException.JsonWriterException()", file="IsoDateTimeConverterTests.cs"];
m20_11 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="IsoDateTimeConverterTests.cs"];
m20_92 [label="Entry Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.NullableSerializeUTC()", span="180-180", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.NullableSerializeUTC()", file="IsoDateTimeConverterTests.cs"];
m20_93 [label="NullableDateTimeTestClass c = new NullableDateTimeTestClass()", span="182-182", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.NullableSerializeUTC()", file="IsoDateTimeConverterTests.cs"];
m20_94 [label="c.DateTimeField = new DateTime(2008, 12, 12, 12, 12, 12, 0, DateTimeKind.Utc).ToLocalTime()", span="183-183", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.NullableSerializeUTC()", file="IsoDateTimeConverterTests.cs"];
m20_95 [label="c.DateTimeOffsetField = new DateTime(2008, 12, 12, 12, 12, 12, 0, DateTimeKind.Utc).ToLocalTime()", span="184-184", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.NullableSerializeUTC()", file="IsoDateTimeConverterTests.cs"];
m20_96 [label="c.PreField = ''Pre''", span="185-185", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.NullableSerializeUTC()", file="IsoDateTimeConverterTests.cs"];
m20_97 [label="c.PostField = ''Post''", span="186-186", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.NullableSerializeUTC()", file="IsoDateTimeConverterTests.cs"];
m20_98 [label="string json = JsonConvert.SerializeObject(c, new IsoDateTimeConverter() { DateTimeStyles = DateTimeStyles.AssumeUniversal })", span="187-187", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.NullableSerializeUTC()", file="IsoDateTimeConverterTests.cs"];
m20_100 [label="c.DateTimeField = null", span="191-191", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.NullableSerializeUTC()", file="IsoDateTimeConverterTests.cs"];
m20_101 [label="c.DateTimeOffsetField = null", span="192-192", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.NullableSerializeUTC()", file="IsoDateTimeConverterTests.cs"];
m20_102 [label="c.PreField = ''Pre''", span="193-193", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.NullableSerializeUTC()", file="IsoDateTimeConverterTests.cs"];
m20_103 [label="c.PostField = ''Post''", span="194-194", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.NullableSerializeUTC()", file="IsoDateTimeConverterTests.cs"];
m20_104 [label="json = JsonConvert.SerializeObject(c, new IsoDateTimeConverter() { DateTimeStyles = DateTimeStyles.AssumeUniversal })", span="195-195", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.NullableSerializeUTC()", file="IsoDateTimeConverterTests.cs"];
m20_99 [label="Assert.AreEqual(@''{''''PreField'''':''''Pre'''',''''DateTimeField'''':''''2008-12-12T12:12:12Z'''',''''DateTimeOffsetField'''':''''2008-12-12T12:12:12+00:00'''',''''PostField'''':''''Post''''}'', json)", span="188-188", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.NullableSerializeUTC()", file="IsoDateTimeConverterTests.cs"];
m20_105 [label="Assert.AreEqual(@''{''''PreField'''':''''Pre'''',''''DateTimeField'''':null,''''DateTimeOffsetField'''':null,''''PostField'''':''''Post''''}'', json)", span="196-196", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.NullableSerializeUTC()", file="IsoDateTimeConverterTests.cs"];
m20_106 [label="Exit Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.NullableSerializeUTC()", span="180-180", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.NullableSerializeUTC()", file="IsoDateTimeConverterTests.cs"];
m20_57 [label="Entry System.Globalization.CultureInfo.GetCultureInfo(string)", span="0-0", cluster="System.Globalization.CultureInfo.GetCultureInfo(string)", file="IsoDateTimeConverterTests.cs"];
m20_75 [label="Entry Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeUTC()", span="160-160", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeUTC()", file="IsoDateTimeConverterTests.cs"];
m20_76 [label="DateTimeTestClass c = new DateTimeTestClass()", span="162-162", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeUTC()", file="IsoDateTimeConverterTests.cs"];
m20_77 [label="c.DateTimeField = new DateTime(2008, 12, 12, 12, 12, 12, 0, DateTimeKind.Utc).ToLocalTime()", span="163-163", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeUTC()", file="IsoDateTimeConverterTests.cs"];
m20_78 [label="c.DateTimeOffsetField = new DateTime(2008, 12, 12, 12, 12, 12, 0, DateTimeKind.Utc).ToLocalTime()", span="164-164", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeUTC()", file="IsoDateTimeConverterTests.cs"];
m20_79 [label="c.PreField = ''Pre''", span="165-165", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeUTC()", file="IsoDateTimeConverterTests.cs"];
m20_80 [label="c.PostField = ''Post''", span="166-166", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeUTC()", file="IsoDateTimeConverterTests.cs"];
m20_81 [label="string json = JsonConvert.SerializeObject(c, new IsoDateTimeConverter() { DateTimeStyles = DateTimeStyles.AssumeUniversal })", span="167-167", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeUTC()", file="IsoDateTimeConverterTests.cs"];
m20_83 [label="c.DateTimeField = new DateTime(2008, 1, 1, 1, 1, 1, 0, DateTimeKind.Utc).ToLocalTime()", span="171-171", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeUTC()", file="IsoDateTimeConverterTests.cs"];
m20_84 [label="c.DateTimeOffsetField = new DateTime(2008, 1, 1, 1, 1, 1, 0, DateTimeKind.Utc).ToLocalTime()", span="172-172", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeUTC()", file="IsoDateTimeConverterTests.cs"];
m20_85 [label="c.PreField = ''Pre''", span="173-173", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeUTC()", file="IsoDateTimeConverterTests.cs"];
m20_86 [label="c.PostField = ''Post''", span="174-174", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeUTC()", file="IsoDateTimeConverterTests.cs"];
m20_87 [label="json = JsonConvert.SerializeObject(c, new IsoDateTimeConverter() { DateTimeStyles = DateTimeStyles.AssumeUniversal })", span="175-175", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeUTC()", file="IsoDateTimeConverterTests.cs"];
m20_82 [label="Assert.AreEqual(@''{''''PreField'''':''''Pre'''',''''DateTimeField'''':''''2008-12-12T12:12:12Z'''',''''DateTimeOffsetField'''':''''2008-12-12T12:12:12+00:00'''',''''PostField'''':''''Post''''}'', json)", span="168-168", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeUTC()", file="IsoDateTimeConverterTests.cs"];
m20_88 [label="Assert.AreEqual(@''{''''PreField'''':''''Pre'''',''''DateTimeField'''':''''2008-01-01T01:01:01Z'''',''''DateTimeOffsetField'''':''''2008-01-01T01:01:01+00:00'''',''''PostField'''':''''Post''''}'', json)", span="176-176", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeUTC()", file="IsoDateTimeConverterTests.cs"];
m20_89 [label="Exit Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeUTC()", span="160-160", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeUTC()", file="IsoDateTimeConverterTests.cs"];
m20_39 [label="IsoDateTimeConverter converter = new IsoDateTimeConverter() { DateTimeFormat = ''dd/MM/yyyy'' }", span="99-99", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeCustomFormattedDateTime()", file="IsoDateTimeConverterTests.cs", color=red, community=0];
m20_14 [label="DateTime d = new DateTime(2000, 12, 15, 22, 11, 3, 55, DateTimeKind.Utc)", span="65-65", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeDateTime()", file="IsoDateTimeConverterTests.cs"];
m20_74 [label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, int, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, int, System.TimeSpan)", file="IsoDateTimeConverterTests.cs"];
m20_38 [label="Entry Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeCustomFormattedDateTime()", span="97-97", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeCustomFormattedDateTime()", file="IsoDateTimeConverterTests.cs"];
m20_12 [label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="52-52", cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="IsoDateTimeConverterTests.cs"];
m20_142 [label="Entry Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeShouldChangeNonUTCDates()", span="258-258", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeShouldChangeNonUTCDates()", file="IsoDateTimeConverterTests.cs"];
m20_143 [label="DateTimeTestClass c = new DateTimeTestClass()", span="260-260", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeShouldChangeNonUTCDates()", file="IsoDateTimeConverterTests.cs"];
m20_144 [label="c.DateTimeField = new DateTime(2008, 1, 1, 1, 1, 1, 0, DateTimeKind.Local)", span="261-261", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeShouldChangeNonUTCDates()", file="IsoDateTimeConverterTests.cs"];
m20_145 [label="c.PreField = ''Pre''", span="262-262", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeShouldChangeNonUTCDates()", file="IsoDateTimeConverterTests.cs"];
m20_146 [label="c.PostField = ''Post''", span="263-263", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeShouldChangeNonUTCDates()", file="IsoDateTimeConverterTests.cs"];
m20_147 [label="string json = JsonConvert.SerializeObject(c, new IsoDateTimeConverter() { DateTimeStyles = DateTimeStyles.AssumeUniversal })", span="264-264", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeShouldChangeNonUTCDates()", file="IsoDateTimeConverterTests.cs"];
m20_148 [label="c.DateTimeField = new DateTime(2008, 1, 1, 1, 1, 1, 0, DateTimeKind.Utc)", span="265-265", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeShouldChangeNonUTCDates()", file="IsoDateTimeConverterTests.cs"];
m20_149 [label="string json2 = JsonConvert.SerializeObject(c, new IsoDateTimeConverter() { DateTimeStyles = DateTimeStyles.AssumeUniversal })", span="266-266", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeShouldChangeNonUTCDates()", file="IsoDateTimeConverterTests.cs"];
m20_150 [label="Assert.AreNotEqual(json, json2)", span="267-267", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeShouldChangeNonUTCDates()", file="IsoDateTimeConverterTests.cs"];
m20_151 [label="Exit Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeShouldChangeNonUTCDates()", span="258-258", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeShouldChangeNonUTCDates()", file="IsoDateTimeConverterTests.cs"];
m20_0 [label="Entry Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.PropertiesShouldBeSet()", span="41-41", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.PropertiesShouldBeSet()", file="IsoDateTimeConverterTests.cs"];
m20_2 [label="Assert.AreEqual(CultureInfo.CurrentCulture, converter.Culture)", span="44-44", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.PropertiesShouldBeSet()", file="IsoDateTimeConverterTests.cs"];
m20_4 [label="Assert.AreEqual(DateTimeStyles.RoundtripKind, converter.DateTimeStyles)", span="46-46", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.PropertiesShouldBeSet()", file="IsoDateTimeConverterTests.cs"];
m20_5 [label="converter = new IsoDateTimeConverter()\r\n      {\r\n        DateTimeFormat = ''F'',\r\n        Culture = CultureInfo.InvariantCulture,\r\n        DateTimeStyles = DateTimeStyles.None\r\n      }", span="48-53", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.PropertiesShouldBeSet()", file="IsoDateTimeConverterTests.cs"];
m20_7 [label="Assert.AreEqual(''F'', converter.DateTimeFormat)", span="56-56", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.PropertiesShouldBeSet()", file="IsoDateTimeConverterTests.cs"];
m20_8 [label="Assert.AreEqual(DateTimeStyles.None, converter.DateTimeStyles)", span="57-57", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.PropertiesShouldBeSet()", file="IsoDateTimeConverterTests.cs"];
m20_6 [label="Assert.AreEqual(CultureInfo.InvariantCulture, converter.Culture)", span="55-55", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.PropertiesShouldBeSet()", file="IsoDateTimeConverterTests.cs"];
m20_1 [label="IsoDateTimeConverter converter = new IsoDateTimeConverter()", span="43-43", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.PropertiesShouldBeSet()", file="IsoDateTimeConverterTests.cs"];
m20_3 [label="Assert.AreEqual(string.Empty, converter.DateTimeFormat)", span="45-45", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.PropertiesShouldBeSet()", file="IsoDateTimeConverterTests.cs"];
m20_9 [label="Exit Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.PropertiesShouldBeSet()", span="41-41", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.PropertiesShouldBeSet()", file="IsoDateTimeConverterTests.cs"];
m20_90 [label="Entry Newtonsoft.Json.Tests.TestObjects.DateTimeTestClass.DateTimeTestClass()", span="33-33", cluster="Newtonsoft.Json.Tests.TestObjects.DateTimeTestClass.DateTimeTestClass()", file="IsoDateTimeConverterTests.cs"];
m20_160 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int)", file="IsoDateTimeConverterTests.cs"];
m20_108 [label="Entry Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.DeserializeUTC()", span="200-200", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.DeserializeUTC()", file="IsoDateTimeConverterTests.cs"];
m20_109 [label="DateTimeTestClass c =\r\n        JsonConvert.DeserializeObject<DateTimeTestClass>(@''{''''PreField'''':''''Pre'''',''''DateTimeField'''':''''2008-12-12T12:12:12Z'''',''''DateTimeOffsetField'''':''''2008-12-12T12:12:12Z'''',''''PostField'''':''''Post''''}'', new IsoDateTimeConverter() { DateTimeStyles = DateTimeStyles.AssumeUniversal })", span="202-203", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.DeserializeUTC()", file="IsoDateTimeConverterTests.cs"];
m20_110 [label="Assert.AreEqual(new DateTime(2008, 12, 12, 12, 12, 12, 0, DateTimeKind.Utc).ToLocalTime(), c.DateTimeField)", span="205-205", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.DeserializeUTC()", file="IsoDateTimeConverterTests.cs"];
m20_111 [label="Assert.AreEqual(new DateTimeOffset(2008, 12, 12, 12, 12, 12, 0, TimeSpan.Zero), c.DateTimeOffsetField)", span="206-206", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.DeserializeUTC()", file="IsoDateTimeConverterTests.cs"];
m20_112 [label="Assert.AreEqual(''Pre'', c.PreField)", span="207-207", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.DeserializeUTC()", file="IsoDateTimeConverterTests.cs"];
m20_113 [label="Assert.AreEqual(''Post'', c.PostField)", span="208-208", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.DeserializeUTC()", file="IsoDateTimeConverterTests.cs"];
m20_114 [label="DateTimeTestClass c2 =\r\n       JsonConvert.DeserializeObject<DateTimeTestClass>(@''{''''PreField'''':''''Pre'''',''''DateTimeField'''':''''2008-01-01T01:01:01Z'''',''''DateTimeOffsetField'''':''''2008-01-01T01:01:01Z'''',''''PostField'''':''''Post''''}'', new IsoDateTimeConverter() { DateTimeStyles = DateTimeStyles.AssumeUniversal })", span="210-211", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.DeserializeUTC()", file="IsoDateTimeConverterTests.cs"];
m20_115 [label="Assert.AreEqual(new DateTime(2008, 1, 1, 1, 1, 1, 0, DateTimeKind.Utc).ToLocalTime(), c2.DateTimeField)", span="213-213", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.DeserializeUTC()", file="IsoDateTimeConverterTests.cs"];
m20_116 [label="Assert.AreEqual(new DateTimeOffset(2008, 1, 1, 1, 1, 1, 0, TimeSpan.Zero), c2.DateTimeOffsetField)", span="214-214", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.DeserializeUTC()", file="IsoDateTimeConverterTests.cs"];
m20_117 [label="Assert.AreEqual(''Pre'', c2.PreField)", span="215-215", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.DeserializeUTC()", file="IsoDateTimeConverterTests.cs"];
m20_118 [label="Assert.AreEqual(''Post'', c2.PostField)", span="216-216", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.DeserializeUTC()", file="IsoDateTimeConverterTests.cs"];
m20_119 [label="Exit Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.DeserializeUTC()", span="200-200", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.DeserializeUTC()", file="IsoDateTimeConverterTests.cs"];
m20_120 [label="Entry Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.NullableDeserializeUTC()", span="220-220", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.NullableDeserializeUTC()", file="IsoDateTimeConverterTests.cs"];
m20_121 [label="NullableDateTimeTestClass c =\r\n        JsonConvert.DeserializeObject<NullableDateTimeTestClass>(@''{''''PreField'''':''''Pre'''',''''DateTimeField'''':''''2008-12-12T12:12:12Z'''',''''DateTimeOffsetField'''':''''2008-12-12T12:12:12Z'''',''''PostField'''':''''Post''''}'', new IsoDateTimeConverter() { DateTimeStyles = DateTimeStyles.AssumeUniversal })", span="222-223", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.NullableDeserializeUTC()", file="IsoDateTimeConverterTests.cs"];
m20_122 [label="Assert.AreEqual(new DateTime(2008, 12, 12, 12, 12, 12, 0, DateTimeKind.Utc).ToLocalTime(), c.DateTimeField)", span="225-225", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.NullableDeserializeUTC()", file="IsoDateTimeConverterTests.cs"];
m20_123 [label="Assert.AreEqual(new DateTimeOffset(2008, 12, 12, 12, 12, 12, 0, TimeSpan.Zero), c.DateTimeOffsetField)", span="226-226", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.NullableDeserializeUTC()", file="IsoDateTimeConverterTests.cs"];
m20_124 [label="Assert.AreEqual(''Pre'', c.PreField)", span="227-227", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.NullableDeserializeUTC()", file="IsoDateTimeConverterTests.cs"];
m20_125 [label="Assert.AreEqual(''Post'', c.PostField)", span="228-228", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.NullableDeserializeUTC()", file="IsoDateTimeConverterTests.cs"];
m20_126 [label="NullableDateTimeTestClass c2 =\r\n       JsonConvert.DeserializeObject<NullableDateTimeTestClass>(@''{''''PreField'''':''''Pre'''',''''DateTimeField'''':null,''''DateTimeOffsetField'''':null,''''PostField'''':''''Post''''}'', new IsoDateTimeConverter() { DateTimeStyles = DateTimeStyles.AssumeUniversal })", span="230-231", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.NullableDeserializeUTC()", file="IsoDateTimeConverterTests.cs"];
m20_127 [label="Assert.AreEqual(null, c2.DateTimeField)", span="233-233", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.NullableDeserializeUTC()", file="IsoDateTimeConverterTests.cs"];
m20_128 [label="Assert.AreEqual(null, c2.DateTimeOffsetField)", span="234-234", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.NullableDeserializeUTC()", file="IsoDateTimeConverterTests.cs"];
m20_129 [label="Assert.AreEqual(''Pre'', c2.PreField)", span="235-235", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.NullableDeserializeUTC()", file="IsoDateTimeConverterTests.cs"];
m20_130 [label="Assert.AreEqual(''Post'', c2.PostField)", span="236-236", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.NullableDeserializeUTC()", file="IsoDateTimeConverterTests.cs"];
m20_131 [label="Exit Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.NullableDeserializeUTC()", span="220-220", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.NullableDeserializeUTC()", file="IsoDateTimeConverterTests.cs"];
m20_58 [label="Entry Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeDateTimeCulture()", span="130-130", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeDateTimeCulture()", file="IsoDateTimeConverterTests.cs"];
m20_59 [label="IsoDateTimeConverter converter = new IsoDateTimeConverter() { Culture = CultureInfo.GetCultureInfo(''en-NZ'') }", span="132-132", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeDateTimeCulture()", file="IsoDateTimeConverterTests.cs"];
m20_60 [label="string json = @''''''09/12/2006''''''", span="134-134", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeDateTimeCulture()", file="IsoDateTimeConverterTests.cs"];
m20_61 [label="DateTime d = JsonConvert.DeserializeObject<DateTime>(json, converter)", span="136-136", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeDateTimeCulture()", file="IsoDateTimeConverterTests.cs"];
m20_62 [label="Assert.AreEqual(9, d.Day)", span="138-138", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeDateTimeCulture()", file="IsoDateTimeConverterTests.cs"];
m20_63 [label="Assert.AreEqual(12, d.Month)", span="139-139", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeDateTimeCulture()", file="IsoDateTimeConverterTests.cs"];
m20_64 [label="Assert.AreEqual(2006, d.Year)", span="140-140", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeDateTimeCulture()", file="IsoDateTimeConverterTests.cs"];
m20_65 [label="Exit Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeDateTimeCulture()", span="130-130", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeDateTimeCulture()", file="IsoDateTimeConverterTests.cs"];
m20_132 [label="Entry Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.NullableDeserializeEmptyString()", span="240-240", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.NullableDeserializeEmptyString()", file="IsoDateTimeConverterTests.cs"];
m20_133 [label="string json = @''{''''DateTimeField'''':''''''''}''", span="242-242", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.NullableDeserializeEmptyString()", file="IsoDateTimeConverterTests.cs"];
m20_134 [label="NullableDateTimeTestClass c = JsonConvert.DeserializeObject<NullableDateTimeTestClass>(json,\r\n        new JsonSerializerSettings { Converters = new [] {new IsoDateTimeConverter()}})", span="244-245", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.NullableDeserializeEmptyString()", file="IsoDateTimeConverterTests.cs"];
m20_135 [label="Assert.AreEqual(null, c.DateTimeField)", span="246-246", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.NullableDeserializeEmptyString()", file="IsoDateTimeConverterTests.cs"];
m20_136 [label="Exit Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.NullableDeserializeEmptyString()", span="240-240", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.NullableDeserializeEmptyString()", file="IsoDateTimeConverterTests.cs"];
m20_66 [label="Entry Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeDateTimeOffset()", span="146-146", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeDateTimeOffset()", file="IsoDateTimeConverterTests.cs"];
m20_67 [label="IsoDateTimeConverter converter = new IsoDateTimeConverter()", span="148-148", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeDateTimeOffset()", file="IsoDateTimeConverterTests.cs"];
m20_68 [label="DateTimeOffset d = new DateTimeOffset(2000, 12, 15, 22, 11, 3, 55, TimeSpan.Zero)", span="150-150", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeDateTimeOffset()", file="IsoDateTimeConverterTests.cs"];
m20_70 [label="result = JsonConvert.SerializeObject(d, converter)", span="153-153", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeDateTimeOffset()", file="IsoDateTimeConverterTests.cs"];
m20_72 [label="Assert.AreEqual(d, JsonConvert.DeserializeObject<DateTimeOffset>(result, converter))", span="156-156", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeDateTimeOffset()", file="IsoDateTimeConverterTests.cs"];
m20_69 [label="string result", span="151-151", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeDateTimeOffset()", file="IsoDateTimeConverterTests.cs"];
m20_71 [label="Assert.AreEqual(@''''''2000-12-15T22:11:03.055+00:00'''''', result)", span="154-154", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeDateTimeOffset()", file="IsoDateTimeConverterTests.cs"];
m20_73 [label="Exit Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeDateTimeOffset()", span="146-146", cluster="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests.SerializeDateTimeOffset()", file="IsoDateTimeConverterTests.cs"];
m20_137 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="96-96", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="IsoDateTimeConverterTests.cs"];
m21_16 [label="Entry Newtonsoft.Json.JsonConvert.ConvertDateTimeToJavaScriptTicks(System.DateTime)", span="138-138", cluster="Newtonsoft.Json.JsonConvert.ConvertDateTimeToJavaScriptTicks(System.DateTime)", file="JavaScriptDateTimeConverter.cs"];
m21_20 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(long)", span="680-680", cluster="Newtonsoft.Json.JsonWriter.WriteValue(long)", file="JavaScriptDateTimeConverter.cs"];
m21_48 [label="Entry Newtonsoft.Json.JsonConvert.ConvertJavaScriptTicksToDateTime(long)", span="147-147", cluster="Newtonsoft.Json.JsonConvert.ConvertJavaScriptTicksToDateTime(long)", file="JavaScriptDateTimeConverter.cs"];
m21_49 [label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime)", file="JavaScriptDateTimeConverter.cs"];
m21_50 [label="Entry Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.CanConvert(System.Type)", span="98-98", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.CanConvert(System.Type)", file="JavaScriptDateTimeConverter.cs"];
m21_51 [label="Type t = (ReflectionUtils.IsNullableType(objectType))\r\n        ? Nullable.GetUnderlyingType(objectType)\r\n        : objectType", span="100-102", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.CanConvert(System.Type)", color=red, community=1, file="JavaScriptDateTimeConverter.cs"];
m21_52 [label="t == typeof(DateTime)", span="104-104", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.CanConvert(System.Type)", color=red, community=0, file="JavaScriptDateTimeConverter.cs"];
m21_54 [label="t == typeof(DateTimeOffset)", span="107-107", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.CanConvert(System.Type)", color=red, community=0, file="JavaScriptDateTimeConverter.cs"];
m21_53 [label="return true;", span="105-105", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.CanConvert(System.Type)", color=red, community=0, file="JavaScriptDateTimeConverter.cs"];
m21_55 [label="return true;", span="108-108", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.CanConvert(System.Type)", color=red, community=0, file="JavaScriptDateTimeConverter.cs"];
m21_56 [label="return false;", span="111-111", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.CanConvert(System.Type)", color=red, community=0, file="JavaScriptDateTimeConverter.cs"];
m21_57 [label="Exit Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.CanConvert(System.Type)", span="98-98", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.CanConvert(System.Type)", file="JavaScriptDateTimeConverter.cs"];
m21_21 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndConstructor()", span="271-271", cluster="Newtonsoft.Json.JsonWriter.WriteEndConstructor()", file="JavaScriptDateTimeConverter.cs"];
m21_46 [label="Entry string.Compare(string, string, System.StringComparison)", span="0-0", cluster="string.Compare(string, string, System.StringComparison)", file="JavaScriptDateTimeConverter.cs"];
m21_18 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="JavaScriptDateTimeConverter.cs"];
m21_47 [label="Entry Newtonsoft.Json.JsonReader.Read()", span="204-204", cluster="Newtonsoft.Json.JsonReader.Read()", file="JavaScriptDateTimeConverter.cs"];
m21_0 [label="Entry Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="17-17", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JavaScriptDateTimeConverter.cs"];
m21_1 [label="long ticks", span="19-19", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JavaScriptDateTimeConverter.cs"];
m21_2 [label="value is DateTime", span="21-21", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JavaScriptDateTimeConverter.cs"];
m21_3 [label="DateTime dateTime = (DateTime)value", span="23-23", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JavaScriptDateTimeConverter.cs"];
m21_6 [label="value is DateTimeOffset", span="28-28", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JavaScriptDateTimeConverter.cs"];
m21_7 [label="DateTimeOffset dateTimeOffset = (DateTimeOffset)value", span="30-30", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JavaScriptDateTimeConverter.cs"];
m21_11 [label="writer.WriteStartConstructor(''Date'')", span="40-40", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JavaScriptDateTimeConverter.cs"];
m21_12 [label="writer.WriteValue(ticks)", span="41-41", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JavaScriptDateTimeConverter.cs"];
m21_13 [label="writer.WriteEndConstructor()", span="42-42", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JavaScriptDateTimeConverter.cs"];
m21_4 [label="DateTime utcDateTime = dateTime.ToUniversalTime()", span="24-24", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JavaScriptDateTimeConverter.cs"];
m21_5 [label="ticks = JsonConvert.ConvertDateTimeToJavaScriptTicks(utcDateTime)", span="25-25", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JavaScriptDateTimeConverter.cs"];
m21_10 [label="throw new Exception(''Expected date object value.'');", span="37-37", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JavaScriptDateTimeConverter.cs"];
m21_8 [label="DateTimeOffset utcDateTimeOffset = dateTimeOffset.ToUniversalTime()", span="31-31", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JavaScriptDateTimeConverter.cs"];
m21_9 [label="ticks = JsonConvert.ConvertDateTimeToJavaScriptTicks(utcDateTimeOffset.UtcDateTime)", span="32-32", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JavaScriptDateTimeConverter.cs"];
m21_14 [label="Exit Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="17-17", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JavaScriptDateTimeConverter.cs"];
m21_17 [label="Entry System.DateTimeOffset.ToUniversalTime()", span="0-0", cluster="System.DateTimeOffset.ToUniversalTime()", file="JavaScriptDateTimeConverter.cs"];
m21_22 [label="Entry Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", span="52-52", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="JavaScriptDateTimeConverter.cs"];
m21_23 [label="Type t = (ReflectionUtils.IsNullableType(objectType))\r\n      ? Nullable.GetUnderlyingType(objectType)\r\n      : objectType", span="54-56", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", color=red, community=0, file="JavaScriptDateTimeConverter.cs"];
m21_24 [label="reader.TokenType == JsonToken.Null", span="58-58", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="JavaScriptDateTimeConverter.cs"];
m21_25 [label="!ReflectionUtils.IsNullableType(objectType)", span="60-60", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="JavaScriptDateTimeConverter.cs"];
m21_26 [label="throw new Exception(''Cannot convert null value to {0}.''.FormatWith(CultureInfo.InvariantCulture, objectType));", span="61-61", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="JavaScriptDateTimeConverter.cs"];
m21_28 [label="reader.TokenType != JsonToken.StartConstructor || string.Compare(reader.Value.ToString(), ''Date'', StringComparison.Ordinal) != 0", span="66-66", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="JavaScriptDateTimeConverter.cs"];
m21_29 [label="throw new Exception(''Unexpected token or value when parsing date. Token: {0}, Value: {1}''.FormatWith(CultureInfo.InvariantCulture, reader.TokenType, reader.Value));", span="67-67", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="JavaScriptDateTimeConverter.cs"];
m21_30 [label="reader.Read()", span="69-69", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="JavaScriptDateTimeConverter.cs"];
m21_31 [label="reader.TokenType != JsonToken.Integer", span="71-71", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="JavaScriptDateTimeConverter.cs"];
m21_32 [label="throw new Exception(''Unexpected token parsing date. Expected Integer, got {0}.''.FormatWith(CultureInfo.InvariantCulture, reader.TokenType));", span="72-72", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="JavaScriptDateTimeConverter.cs"];
m21_33 [label="long ticks = (long)reader.Value", span="74-74", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="JavaScriptDateTimeConverter.cs"];
m21_35 [label="reader.Read()", span="78-78", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="JavaScriptDateTimeConverter.cs"];
m21_36 [label="reader.TokenType != JsonToken.EndConstructor", span="80-80", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="JavaScriptDateTimeConverter.cs"];
m21_37 [label="throw new Exception(''Unexpected token parsing date. Expected EndConstructor, got {0}.''.FormatWith(CultureInfo.InvariantCulture, reader.TokenType));", span="81-81", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="JavaScriptDateTimeConverter.cs"];
m21_38 [label="t == typeof(DateTimeOffset)", span="84-84", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="JavaScriptDateTimeConverter.cs"];
m21_27 [label="return null;", span="63-63", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="JavaScriptDateTimeConverter.cs"];
m21_34 [label="DateTime d = JsonConvert.ConvertJavaScriptTicksToDateTime(ticks)", span="76-76", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="JavaScriptDateTimeConverter.cs"];
m21_39 [label="return new DateTimeOffset(d);", span="85-85", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="JavaScriptDateTimeConverter.cs"];
m21_40 [label="return d;", span="88-88", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="JavaScriptDateTimeConverter.cs"];
m21_41 [label="Exit Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", span="52-52", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="JavaScriptDateTimeConverter.cs"];
m21_19 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartConstructor(string)", span="262-262", cluster="Newtonsoft.Json.JsonWriter.WriteStartConstructor(string)", file="JavaScriptDateTimeConverter.cs"];
m21_44 [label="Entry string.FormatWith(System.IFormatProvider, params object[])", span="48-48", cluster="string.FormatWith(System.IFormatProvider, params object[])", file="JavaScriptDateTimeConverter.cs"];
m21_15 [label="Entry System.DateTime.ToUniversalTime()", span="0-0", cluster="System.DateTime.ToUniversalTime()", file="JavaScriptDateTimeConverter.cs"];
m21_42 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", span="98-98", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", file="JavaScriptDateTimeConverter.cs"];
m21_45 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()", file="JavaScriptDateTimeConverter.cs"];
m21_43 [label="Entry System.Nullable.GetUnderlyingType(System.Type)", span="0-0", cluster="System.Nullable.GetUnderlyingType(System.Type)", file="JavaScriptDateTimeConverter.cs"];
m22_4 [label="Entry Newtonsoft.Json.Linq.JRaw.Create(Newtonsoft.Json.JsonReader)", span="58-58", cluster="Newtonsoft.Json.Linq.JRaw.Create(Newtonsoft.Json.JsonReader)", file="JavaScriptUtils.cs"];
m22_5 [label="StringWriter sw = new StringWriter(CultureInfo.InvariantCulture)", span="60-60", cluster="Newtonsoft.Json.Linq.JRaw.Create(Newtonsoft.Json.JsonReader)", color=green, community=0, file="JavaScriptUtils.cs"];
m22_6 [label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="61-61", cluster="Newtonsoft.Json.Linq.JRaw.Create(Newtonsoft.Json.JsonReader)", color=green, community=0, file="JavaScriptUtils.cs"];
m22_8 [label="return new JRaw(sw.ToString());", span="65-65", cluster="Newtonsoft.Json.Linq.JRaw.Create(Newtonsoft.Json.JsonReader)", color=green, community=0, file="JavaScriptUtils.cs"];
m22_7 [label="jsonWriter.WriteToken(reader)", span="63-63", cluster="Newtonsoft.Json.Linq.JRaw.Create(Newtonsoft.Json.JsonReader)", color=green, community=0, file="JavaScriptUtils.cs"];
m22_9 [label="Exit Newtonsoft.Json.Linq.JRaw.Create(Newtonsoft.Json.JsonReader)", span="58-58", cluster="Newtonsoft.Json.Linq.JRaw.Create(Newtonsoft.Json.JsonReader)", file="JavaScriptUtils.cs"];
m22_10 [label="Entry System.IO.StringWriter.StringWriter(System.IFormatProvider)", span="0-0", cluster="System.IO.StringWriter.StringWriter(System.IFormatProvider)", file="JavaScriptUtils.cs"];
m22_11 [label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="149-149", cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JavaScriptUtils.cs"];
m22_2 [label="Entry Newtonsoft.Json.Linq.JRaw.JRaw(object)", span="48-48", cluster="Newtonsoft.Json.Linq.JRaw.JRaw(object)", file="JavaScriptUtils.cs"];
m22_3 [label="Exit Newtonsoft.Json.Linq.JRaw.JRaw(object)", span="48-48", cluster="Newtonsoft.Json.Linq.JRaw.JRaw(object)", file="JavaScriptUtils.cs"];
m22_14 [label="Entry Newtonsoft.Json.Linq.JRaw.CloneToken()", span="69-69", cluster="Newtonsoft.Json.Linq.JRaw.CloneToken()", file="JavaScriptUtils.cs"];
m22_15 [label="return new JRaw(this);", span="71-71", cluster="Newtonsoft.Json.Linq.JRaw.CloneToken()", color=green, community=0, file="JavaScriptUtils.cs"];
m22_16 [label="Exit Newtonsoft.Json.Linq.JRaw.CloneToken()", span="69-69", cluster="Newtonsoft.Json.Linq.JRaw.CloneToken()", file="JavaScriptUtils.cs"];
m22_13 [label="Entry System.IO.StringWriter.ToString()", span="0-0", cluster="System.IO.StringWriter.ToString()", file="JavaScriptUtils.cs"];
m22_12 [label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", span="482-482", cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", file="JavaScriptUtils.cs"];
m22_0 [label="Entry Newtonsoft.Json.Linq.JRaw.JRaw(Newtonsoft.Json.Linq.JRaw)", span="39-39", cluster="Newtonsoft.Json.Linq.JRaw.JRaw(Newtonsoft.Json.Linq.JRaw)", file="JavaScriptUtils.cs"];
m22_1 [label="Exit Newtonsoft.Json.Linq.JRaw.JRaw(Newtonsoft.Json.Linq.JRaw)", span="39-39", cluster="Newtonsoft.Json.Linq.JRaw.JRaw(Newtonsoft.Json.Linq.JRaw)", file="JavaScriptUtils.cs"];
m22_17 [label="Newtonsoft.Json.Linq.JRaw", span="", file="JavaScriptUtils.cs"];
m25_9 [label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="72-72", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JObjectTests.cs"];
m25_8 [label="Entry Newtonsoft.Json.Tests.Documentation.File.OpenText(string)", span="58-58", cluster="Newtonsoft.Json.Tests.Documentation.File.OpenText(string)", file="JObjectTests.cs"];
m25_6 [label="Entry Newtonsoft.Json.Tests.Documentation.File.ReadAllText(string)", span="73-73", cluster="Newtonsoft.Json.Tests.Documentation.File.ReadAllText(string)", file="JObjectTests.cs"];
m25_7 [label="Entry Newtonsoft.Json.Schema.JsonSchema.Parse(string)", span="294-294", cluster="Newtonsoft.Json.Schema.JsonSchema.Parse(string)", file="JObjectTests.cs"];
m25_10 [label="Entry Newtonsoft.Json.Schema.JsonSchema.Read(Newtonsoft.Json.JsonReader)", span="269-269", cluster="Newtonsoft.Json.Schema.JsonSchema.Read(Newtonsoft.Json.JsonReader)", file="JObjectTests.cs"];
m25_0 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Schema.LoadJsonSchemaFromFile.Example()", span="37-37", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.LoadJsonSchemaFromFile.Example()", file="JObjectTests.cs"];
m25_1 [label="JsonSchema schema1 = JsonSchema.Parse(File.ReadAllText(@''c:\schema.json''))", span="41-41", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.LoadJsonSchemaFromFile.Example()", file="JObjectTests.cs"];
m25_2 [label="StreamReader file = File.OpenText(@''c:\schema.json'')", span="44-44", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.LoadJsonSchemaFromFile.Example()", file="JObjectTests.cs"];
m25_3 [label="JsonTextReader reader = new JsonTextReader(file)", span="45-45", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.LoadJsonSchemaFromFile.Example()", file="JObjectTests.cs"];
m25_4 [label="JsonSchema schema2 = JsonSchema.Read(reader)", span="47-47", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.LoadJsonSchemaFromFile.Example()", file="JObjectTests.cs"];
m25_5 [label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Schema.LoadJsonSchemaFromFile.Example()", span="37-37", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.LoadJsonSchemaFromFile.Example()", file="JObjectTests.cs"];
m26_4 [label="Entry Newtonsoft.Json.Linq.JRaw.Create(Newtonsoft.Json.JsonReader)", span="37-37", cluster="Newtonsoft.Json.Linq.JRaw.Create(Newtonsoft.Json.JsonReader)", file="JRaw.cs"];
m26_5 [label="StringWriter sw = new StringWriter(CultureInfo.InvariantCulture)", span="39-39", cluster="Newtonsoft.Json.Linq.JRaw.Create(Newtonsoft.Json.JsonReader)", color=green, community=0, file="JRaw.cs"];
m26_6 [label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="40-40", cluster="Newtonsoft.Json.Linq.JRaw.Create(Newtonsoft.Json.JsonReader)", color=green, community=0, file="JRaw.cs"];
m26_8 [label="return new JRaw(sw.ToString());", span="44-44", cluster="Newtonsoft.Json.Linq.JRaw.Create(Newtonsoft.Json.JsonReader)", color=green, community=0, file="JRaw.cs"];
m26_7 [label="jsonWriter.WriteToken(reader)", span="42-42", cluster="Newtonsoft.Json.Linq.JRaw.Create(Newtonsoft.Json.JsonReader)", color=green, community=0, file="JRaw.cs"];
m26_9 [label="Exit Newtonsoft.Json.Linq.JRaw.Create(Newtonsoft.Json.JsonReader)", span="37-37", cluster="Newtonsoft.Json.Linq.JRaw.Create(Newtonsoft.Json.JsonReader)", file="JRaw.cs"];
m26_10 [label="Entry System.IO.StringWriter.StringWriter(System.IFormatProvider)", span="0-0", cluster="System.IO.StringWriter.StringWriter(System.IFormatProvider)", file="JRaw.cs"];
m26_11 [label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="109-109", cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JRaw.cs"];
m26_14 [label="Entry Newtonsoft.Json.Linq.JRaw.CloneToken()", span="48-48", cluster="Newtonsoft.Json.Linq.JRaw.CloneToken()", file="JRaw.cs"];
m26_15 [label="return new JRaw(this);", span="50-50", cluster="Newtonsoft.Json.Linq.JRaw.CloneToken()", color=green, community=0, file="JRaw.cs"];
m26_16 [label="Exit Newtonsoft.Json.Linq.JRaw.CloneToken()", span="48-48", cluster="Newtonsoft.Json.Linq.JRaw.CloneToken()", file="JRaw.cs"];
m26_0 [label="Entry Newtonsoft.Json.Linq.JRaw.JRaw(Newtonsoft.Json.Linq.JRaw)", span="18-18", cluster="Newtonsoft.Json.Linq.JRaw.JRaw(Newtonsoft.Json.Linq.JRaw)", file="JRaw.cs"];
m26_1 [label="Exit Newtonsoft.Json.Linq.JRaw.JRaw(Newtonsoft.Json.Linq.JRaw)", span="18-18", cluster="Newtonsoft.Json.Linq.JRaw.JRaw(Newtonsoft.Json.Linq.JRaw)", file="JRaw.cs"];
m26_13 [label="Entry System.IO.StringWriter.ToString()", span="0-0", cluster="System.IO.StringWriter.ToString()", file="JRaw.cs"];
m26_12 [label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", span="297-297", cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", file="JRaw.cs"];
m26_2 [label="Entry Newtonsoft.Json.Linq.JRaw.JRaw(string)", span="27-27", cluster="Newtonsoft.Json.Linq.JRaw.JRaw(string)", file="JRaw.cs"];
m26_3 [label="Exit Newtonsoft.Json.Linq.JRaw.JRaw(string)", span="27-27", cluster="Newtonsoft.Json.Linq.JRaw.JRaw(string)", file="JRaw.cs"];
m26_17 [label="Newtonsoft.Json.Linq.JRaw", span="", file="JRaw.cs"];
m28_25 [label="Entry Newtonsoft.Json.Utilities.CollectionWrapper<T>.CollectionWrapper(System.Collections.IList)", span="46-46", cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.CollectionWrapper(System.Collections.IList)", file="JsonArrayContract.cs"];
m28_14 [label="Entry Newtonsoft.Json.Serialization.JsonArrayContract.IsTypeGenericCollectionInterface(System.Type)", span="94-94", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.IsTypeGenericCollectionInterface(System.Type)", file="JsonArrayContract.cs"];
m28_29 [label="!type.IsGenericType", span="96-96", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.IsTypeGenericCollectionInterface(System.Type)", file="JsonArrayContract.cs"];
m28_31 [label="Type genericDefinition = type.GetGenericTypeDefinition()", span="99-99", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.IsTypeGenericCollectionInterface(System.Type)", file="JsonArrayContract.cs"];
m28_30 [label="return false;", span="97-97", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.IsTypeGenericCollectionInterface(System.Type)", file="JsonArrayContract.cs"];
m28_32 [label="return (genericDefinition == typeof(IList<>)\r\n              || genericDefinition == typeof(ICollection<>)\r\n              || genericDefinition == typeof(IEnumerable<>));", span="101-103", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.IsTypeGenericCollectionInterface(System.Type)", file="JsonArrayContract.cs"];
m28_33 [label="Exit Newtonsoft.Json.Serialization.JsonArrayContract.IsTypeGenericCollectionInterface(System.Type)", span="94-94", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.IsTypeGenericCollectionInterface(System.Type)", file="JsonArrayContract.cs"];
m28_34 [label="Entry System.Type.GetGenericTypeDefinition()", span="0-0", cluster="System.Type.GetGenericTypeDefinition()", file="JsonArrayContract.cs"];
m28_16 [label="Entry Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", span="74-74", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JsonArrayContract.cs"];
m28_17 [label="list is IList && (CollectionItemType == null || !_isCollectionItemTypeNullableType)", span="76-76", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JsonArrayContract.cs"];
m28_18 [label="return new CollectionWrapper<object>((IList)list);", span="77-77", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JsonArrayContract.cs"];
m28_23 [label="return (IWrappedCollection)_genericWrapperCreator(null, list);", span="91-91", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JsonArrayContract.cs"];
m28_19 [label="_genericWrapperType == null", span="79-79", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JsonArrayContract.cs"];
m28_20 [label="_genericWrapperType = ReflectionUtils.MakeGenericType(typeof(CollectionWrapper<>), CollectionItemType)", span="81-81", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JsonArrayContract.cs"];
m28_21 [label="ConstructorInfo genericWrapperConstructor = _genericWrapperType.GetConstructor(new[] { _genericCollectionDefinitionType })", span="83-83", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JsonArrayContract.cs"];
m28_22 [label="_genericWrapperCreator = LateBoundDelegateFactory.CreateMethodHandler(genericWrapperConstructor)", span="85-85", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JsonArrayContract.cs"];
m28_24 [label="Exit Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", span="74-74", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JsonArrayContract.cs"];
m28_0 [label="Entry Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", span="49-49", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m28_1 [label="ReflectionUtils.ImplementsGenericDefinition(underlyingType, typeof(ICollection<>), out _genericCollectionDefinitionType)", span="52-52", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m28_2 [label="CollectionItemType = _genericCollectionDefinitionType.GetGenericArguments()[0]", span="54-54", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m28_3 [label="CollectionItemType = ReflectionUtils.GetCollectionItemType(UnderlyingType)", span="58-58", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m28_4 [label="CollectionItemType != null", span="61-61", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m28_5 [label="_isCollectionItemTypeNullableType = ReflectionUtils.IsNullableType(CollectionItemType)", span="62-62", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m28_6 [label="IsTypeGenericCollectionInterface(UnderlyingType)", span="64-64", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m28_7 [label="CreatedType = ReflectionUtils.MakeGenericType(typeof(List<>), CollectionItemType)", span="66-66", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m28_8 [label="CreatedType = UnderlyingType", span="70-70", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m28_9 [label="Exit Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", span="49-49", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m28_15 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.MakeGenericType(System.Type, params System.Type[])", span="607-607", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.MakeGenericType(System.Type, params System.Type[])", file="JsonArrayContract.cs"];
m28_10 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", span="154-154", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="JsonArrayContract.cs"];
m28_12 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", span="272-272", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="JsonArrayContract.cs"];
m28_28 [label="Entry Newtonsoft.Json.Utilities.MemberHandler<T>.Invoke(T, params object[])", span="36-36", cluster="Newtonsoft.Json.Utilities.MemberHandler<T>.Invoke(T, params object[])", file="JsonArrayContract.cs"];
m28_26 [label="Entry System.Type.GetConstructor(System.Type[])", span="0-0", cluster="System.Type.GetConstructor(System.Type[])", file="JsonArrayContract.cs"];
m28_13 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", span="98-98", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", file="JsonArrayContract.cs"];
m28_11 [label="Entry System.Type.GetGenericArguments()", span="0-0", cluster="System.Type.GetGenericArguments()", file="JsonArrayContract.cs"];
m28_27 [label="Entry Newtonsoft.Json.Utilities.LateBoundDelegateFactory.CreateMethodHandler(System.Reflection.MethodBase)", span="48-48", cluster="Newtonsoft.Json.Utilities.LateBoundDelegateFactory.CreateMethodHandler(System.Reflection.MethodBase)", file="JsonArrayContract.cs"];
m28_35 [label="Newtonsoft.Json.Serialization.JsonArrayContract", span="", file="JsonArrayContract.cs"];
m29_3 [label="Entry lambda expression", span="96-96", cluster="lambda expression", file="JsonContract.cs"];
m29_0 [label="Entry lambda expression", span="90-90", cluster="lambda expression", file="JsonContract.cs"];
m29_1 [label="_overrideCreator = value", span="90-90", cluster="lambda expression", file="JsonContract.cs"];
m29_2 [label="Exit lambda expression", span="90-90", cluster="lambda expression", file="JsonContract.cs"];
m29_4 [label="_parameterizedCreator = value", span="96-96", cluster="lambda expression", file="JsonContract.cs"];
m29_5 [label="Exit lambda expression", span="96-96", cluster="lambda expression", file="JsonContract.cs"];
m29_10 [label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(System.Type)", span="46-46", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(System.Type)", file="JsonContract.cs"];
m29_6 [label="Entry Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", span="168-168", cluster="Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", file="JsonContract.cs"];
m29_7 [label="ContractType = JsonContractType.Object", span="171-171", cluster="Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", file="JsonContract.cs"];
m29_8 [label="Properties = new JsonPropertyCollection(UnderlyingType)", span="173-173", cluster="Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", file="JsonContract.cs"];
m29_9 [label="Exit Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", span="168-168", cluster="Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", file="JsonContract.cs"];
m29_11 [label="Newtonsoft.Json.Serialization.JsonObjectContract", span="", file="JsonContract.cs"];
m30_6 [label="Entry Newtonsoft.Json.Converters.BinaryConverter.BinaryConverter()", span="45-45", cluster="Newtonsoft.Json.Converters.BinaryConverter.BinaryConverter()", file="JsonConvertTest.cs"];
m30_8 [label="Entry Binary.cstr", span="", cluster="Binary.cstr", file="JsonConvertTest.cs"];
m30_17 [label="Entry Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeBinaryClass()", span="69-69", cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeBinaryClass()", file="JsonConvertTest.cs"];
m30_18 [label="BinaryClass binaryClass = new BinaryClass()", span="71-71", cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeBinaryClass()", file="JsonConvertTest.cs"];
m30_19 [label="binaryClass.Binary = new Binary(TestData)", span="72-72", cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeBinaryClass()", file="JsonConvertTest.cs"];
m30_20 [label="binaryClass.NullBinary = null", span="73-73", cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeBinaryClass()", file="JsonConvertTest.cs"];
m30_21 [label="string json = JsonConvert.SerializeObject(binaryClass, Formatting.Indented, new BinaryConverter())", span="75-75", cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeBinaryClass()", file="JsonConvertTest.cs"];
m30_22 [label="Assert.AreEqual(@''{\r\n  ''''Binary'''': ''''VGhpcyBpcyBzb21lIHRlc3QgZGF0YSEhIQ=='''',\r\n  ''''NullBinary'''': null\r\n}'', json)", span="77-80", cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeBinaryClass()", file="JsonConvertTest.cs"];
m30_23 [label="Exit Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeBinaryClass()", span="69-69", cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeBinaryClass()", file="JsonConvertTest.cs"];
m30_57 [label="Entry Unk.AreEquivalent", span="", cluster="Unk.AreEquivalent", file="JsonConvertTest.cs"];
m30_44 [label="Entry Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeSqlBinaryClass()", span="125-125", cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeSqlBinaryClass()", file="JsonConvertTest.cs"];
m30_45 [label="string json = @''{\r\n  ''''SqlBinary'''': ''''VGhpcyBpcyBzb21lIHRlc3QgZGF0YSEhIQ=='''',\r\n  ''''NullableSqlBinary1'''': ''''VGhpcyBpcyBzb21lIHRlc3QgZGF0YSEhIQ=='''',\r\n  ''''NullableSqlBinary2'''': null\r\n}''", span="127-131", cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeSqlBinaryClass()", file="JsonConvertTest.cs"];
m30_46 [label="SqlBinaryClass sqlBinaryClass = JsonConvert.DeserializeObject<SqlBinaryClass>(json, new BinaryConverter())", span="133-133", cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeSqlBinaryClass()", file="JsonConvertTest.cs"];
m30_47 [label="Assert.AreEqual(new SqlBinary(TestData), sqlBinaryClass.SqlBinary)", span="135-135", cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeSqlBinaryClass()", file="JsonConvertTest.cs"];
m30_48 [label="Assert.AreEqual(new SqlBinary(TestData), sqlBinaryClass.NullableSqlBinary1)", span="136-136", cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeSqlBinaryClass()", file="JsonConvertTest.cs"];
m30_49 [label="Assert.AreEqual(null, sqlBinaryClass.NullableSqlBinary2)", span="137-137", cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeSqlBinaryClass()", file="JsonConvertTest.cs"];
m30_50 [label="Exit Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeSqlBinaryClass()", span="125-125", cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeSqlBinaryClass()", file="JsonConvertTest.cs"];
m30_65 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="835-835", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="JsonConvertTest.cs"];
m30_24 [label="Entry Newtonsoft.Json.Tests.Converters.BinaryConverterTests.BinaryClass.BinaryClass()", span="62-62", cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.BinaryClass.BinaryClass()", file="JsonConvertTest.cs"];
m30_16 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="JsonConvertTest.cs"];
m30_34 [label="Entry Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeSqlBinaryClass()", span="108-108", cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeSqlBinaryClass()", file="JsonConvertTest.cs"];
m30_35 [label="SqlBinaryClass sqlBinaryClass = new SqlBinaryClass()", span="110-110", cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeSqlBinaryClass()", file="JsonConvertTest.cs"];
m30_36 [label="sqlBinaryClass.SqlBinary = new SqlBinary(TestData)", span="111-111", cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeSqlBinaryClass()", file="JsonConvertTest.cs"];
m30_37 [label="sqlBinaryClass.NullableSqlBinary1 = new SqlBinary(TestData)", span="112-112", cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeSqlBinaryClass()", file="JsonConvertTest.cs"];
m30_38 [label="sqlBinaryClass.NullableSqlBinary2 = null", span="113-113", cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeSqlBinaryClass()", file="JsonConvertTest.cs"];
m30_39 [label="string json = JsonConvert.SerializeObject(sqlBinaryClass, Formatting.Indented, new BinaryConverter())", span="115-115", cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeSqlBinaryClass()", file="JsonConvertTest.cs"];
m30_40 [label="Assert.AreEqual(@''{\r\n  ''''SqlBinary'''': ''''VGhpcyBpcyBzb21lIHRlc3QgZGF0YSEhIQ=='''',\r\n  ''''NullableSqlBinary1'''': ''''VGhpcyBpcyBzb21lIHRlc3QgZGF0YSEhIQ=='''',\r\n  ''''NullableSqlBinary2'''': null\r\n}'', json)", span="117-121", cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeSqlBinaryClass()", file="JsonConvertTest.cs"];
m30_41 [label="Exit Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeSqlBinaryClass()", span="108-108", cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeSqlBinaryClass()", file="JsonConvertTest.cs"];
m30_42 [label="Entry Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SqlBinaryClass.SqlBinaryClass()", span="100-100", cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SqlBinaryClass.SqlBinaryClass()", file="JsonConvertTest.cs"];
m30_7 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", span="863-863", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", file="JsonConvertTest.cs"];
m30_33 [label="Entry Newtonsoft.Json.Tests.Converters.BinaryConverterTests.ByteArrayClass.ByteArrayClass()", span="27-27", cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.ByteArrayClass.ByteArrayClass()", file="JsonConvertTest.cs"];
m30_9 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="JsonConvertTest.cs"];
m30_10 [label="Entry Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeBinaryClassFromJsonArray()", span="49-49", cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeBinaryClassFromJsonArray()", file="JsonConvertTest.cs"];
m30_11 [label="string json = @''{\r\n  ''''Binary'''': [0, 1, 2, 3],\r\n  ''''NullBinary'''': null\r\n}''", span="51-54", cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeBinaryClassFromJsonArray()", file="JsonConvertTest.cs"];
m30_12 [label="BinaryClass binaryClass = JsonConvert.DeserializeObject<BinaryClass>(json, new BinaryConverter())", span="56-56", cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeBinaryClassFromJsonArray()", file="JsonConvertTest.cs"];
m30_13 [label="Assert.AreEqual(new byte[] { 0, 1, 2, 3 }, binaryClass.Binary.ToArray())", span="58-58", cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeBinaryClassFromJsonArray()", file="JsonConvertTest.cs"];
m30_14 [label="Assert.AreEqual(null, binaryClass.NullBinary)", span="59-59", cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeBinaryClassFromJsonArray()", file="JsonConvertTest.cs"];
m30_15 [label="Exit Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeBinaryClassFromJsonArray()", span="49-49", cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeBinaryClassFromJsonArray()", file="JsonConvertTest.cs"];
m30_43 [label="Entry SqlBinary.cstr", span="", cluster="SqlBinary.cstr", file="JsonConvertTest.cs"];
m30_0 [label="Entry Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeBinaryClass()", span="35-35", cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeBinaryClass()", file="JsonConvertTest.cs"];
m30_1 [label="string json = @''{\r\n  ''''Binary'''': ''''VGhpcyBpcyBzb21lIHRlc3QgZGF0YSEhIQ=='''',\r\n  ''''NullBinary'''': null\r\n}''", span="37-40", cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeBinaryClass()", file="JsonConvertTest.cs"];
m30_2 [label="BinaryClass binaryClass = JsonConvert.DeserializeObject<BinaryClass>(json, new BinaryConverter())", span="42-42", cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeBinaryClass()", file="JsonConvertTest.cs"];
m30_3 [label="Assert.AreEqual(new Binary(TestData), binaryClass.Binary)", span="44-44", cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeBinaryClass()", file="JsonConvertTest.cs"];
m30_4 [label="Assert.AreEqual(null, binaryClass.NullBinary)", span="45-45", cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeBinaryClass()", file="JsonConvertTest.cs"];
m30_5 [label="Exit Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeBinaryClass()", span="35-35", cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeBinaryClass()", file="JsonConvertTest.cs"];
m30_26 [label="Entry Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeByteArrayClass()", span="85-85", cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeByteArrayClass()", file="JsonConvertTest.cs"];
m30_27 [label="ByteArrayClass byteArrayClass = new ByteArrayClass()", span="87-87", cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeByteArrayClass()", file="JsonConvertTest.cs"];
m30_28 [label="byteArrayClass.ByteArray = TestData", span="88-88", cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeByteArrayClass()", file="JsonConvertTest.cs"];
m30_29 [label="byteArrayClass.NullByteArray = null", span="89-89", cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeByteArrayClass()", file="JsonConvertTest.cs"];
m30_30 [label="string json = JsonConvert.SerializeObject(byteArrayClass, Formatting.Indented, new BinaryConverter())", span="91-91", cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeByteArrayClass()", file="JsonConvertTest.cs"];
m30_31 [label="Assert.AreEqual(@''{\r\n  ''''ByteArray'''': ''''VGhpcyBpcyBzb21lIHRlc3QgZGF0YSEhIQ=='''',\r\n  ''''NullByteArray'''': null\r\n}'', json)", span="93-96", cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeByteArrayClass()", file="JsonConvertTest.cs"];
m30_32 [label="Exit Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeByteArrayClass()", span="85-85", cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeByteArrayClass()", file="JsonConvertTest.cs"];
m30_51 [label="Entry Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeByteArrayClass()", span="142-142", cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeByteArrayClass()", file="JsonConvertTest.cs"];
m30_52 [label="string json = @''{\r\n  ''''ByteArray'''': ''''VGhpcyBpcyBzb21lIHRlc3QgZGF0YSEhIQ=='''',\r\n  ''''NullByteArray'''': null\r\n}''", span="144-147", cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeByteArrayClass()", file="JsonConvertTest.cs"];
m30_53 [label="ByteArrayClass byteArrayClass = JsonConvert.DeserializeObject<ByteArrayClass>(json, new BinaryConverter())", span="149-149", cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeByteArrayClass()", file="JsonConvertTest.cs"];
m30_54 [label="CollectionAssert.AreEquivalent(TestData, byteArrayClass.ByteArray)", span="151-151", cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeByteArrayClass()", file="JsonConvertTest.cs"];
m30_55 [label="Assert.AreEqual(null, byteArrayClass.NullByteArray)", span="152-152", cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeByteArrayClass()", file="JsonConvertTest.cs"];
m30_56 [label="Exit Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeByteArrayClass()", span="142-142", cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeByteArrayClass()", file="JsonConvertTest.cs"];
m30_25 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", span="701-701", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", file="JsonConvertTest.cs"];
m30_58 [label="Entry Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeByteArrayFromJsonArray()", span="156-156", cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeByteArrayFromJsonArray()", file="JsonConvertTest.cs"];
m30_59 [label="string json = @''{\r\n  ''''ByteArray'''': [0, 1, 2, 3],\r\n  ''''NullByteArray'''': null\r\n}''", span="158-161", cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeByteArrayFromJsonArray()", file="JsonConvertTest.cs"];
m30_60 [label="ByteArrayClass c = JsonConvert.DeserializeObject<ByteArrayClass>(json)", span="163-163", cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeByteArrayFromJsonArray()", file="JsonConvertTest.cs"];
m30_61 [label="Assert.IsNotNull(c.ByteArray)", span="164-164", cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeByteArrayFromJsonArray()", file="JsonConvertTest.cs"];
m30_62 [label="Assert.AreEqual(4, c.ByteArray.Length)", span="165-165", cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeByteArrayFromJsonArray()", file="JsonConvertTest.cs"];
m30_63 [label="CollectionAssert.AreEquivalent(new byte[] { 0, 1, 2, 3 }, c.ByteArray)", span="166-166", cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeByteArrayFromJsonArray()", file="JsonConvertTest.cs"];
m30_64 [label="Exit Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeByteArrayFromJsonArray()", span="156-156", cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeByteArrayFromJsonArray()", file="JsonConvertTest.cs"];
m30_66 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="JsonConvertTest.cs"];
m31_18 [label="Entry Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)", span="77-77", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)", file="JsonDictionaryContract.cs"];
m31_19 [label="dictionary is IDictionary", span="79-79", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)", file="JsonDictionaryContract.cs"];
m31_20 [label="return new DictionaryWrapper<object, object>((IDictionary)dictionary);", span="80-80", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)", file="JsonDictionaryContract.cs"];
m31_25 [label="return (IWrappedDictionary)_genericWrapperCreator(null, dictionary);", span="94-94", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)", file="JsonDictionaryContract.cs"];
m31_21 [label="_genericWrapperType == null", span="82-82", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)", file="JsonDictionaryContract.cs"];
m31_22 [label="_genericWrapperType = ReflectionUtils.MakeGenericType(typeof(DictionaryWrapper<,>), DictionaryKeyType, DictionaryValueType)", span="84-84", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)", file="JsonDictionaryContract.cs"];
m31_23 [label="ConstructorInfo genericWrapperConstructor = _genericWrapperType.GetConstructor(new[] { _genericCollectionDefinitionType })", span="86-86", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)", file="JsonDictionaryContract.cs"];
m31_24 [label="_genericWrapperCreator = LateBoundDelegateFactory.CreateMethodHandler(genericWrapperConstructor)", span="88-88", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)", file="JsonDictionaryContract.cs"];
m31_26 [label="Exit Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)", span="77-77", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)", file="JsonDictionaryContract.cs"];
m31_0 [label="Entry Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", span="49-49", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonDictionaryContract.cs"];
m31_1 [label="Type keyType", span="52-52", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonDictionaryContract.cs"];
m31_3 [label="ReflectionUtils.ImplementsGenericDefinition(underlyingType, typeof(IDictionary<,>), out _genericCollectionDefinitionType)", span="54-54", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonDictionaryContract.cs"];
m31_11 [label="CreatedType = underlyingType", span="73-73", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonDictionaryContract.cs"];
m31_2 [label="Type valueType", span="53-53", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonDictionaryContract.cs"];
m31_4 [label="keyType = _genericCollectionDefinitionType.GetGenericArguments()[0]", span="56-56", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonDictionaryContract.cs"];
m31_6 [label="ReflectionUtils.GetDictionaryKeyValueTypes(UnderlyingType, out keyType, out valueType)", span="61-61", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonDictionaryContract.cs"];
m31_5 [label="valueType = _genericCollectionDefinitionType.GetGenericArguments()[1]", span="57-57", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonDictionaryContract.cs"];
m31_7 [label="DictionaryKeyType = keyType", span="64-64", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonDictionaryContract.cs"];
m31_10 [label="CreatedType = ReflectionUtils.MakeGenericType(typeof(Dictionary<,>), keyType, valueType)", span="69-69", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonDictionaryContract.cs"];
m31_8 [label="DictionaryValueType = valueType", span="65-65", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonDictionaryContract.cs"];
m31_9 [label="IsTypeGenericDictionaryInterface(UnderlyingType)", span="67-67", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonDictionaryContract.cs"];
m31_12 [label="Exit Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", span="49-49", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonDictionaryContract.cs"];
m31_16 [label="Entry Newtonsoft.Json.Serialization.JsonDictionaryContract.IsTypeGenericDictionaryInterface(System.Type)", span="97-97", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.IsTypeGenericDictionaryInterface(System.Type)", file="JsonDictionaryContract.cs"];
m31_31 [label="!type.IsGenericType", span="99-99", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.IsTypeGenericDictionaryInterface(System.Type)", file="JsonDictionaryContract.cs"];
m31_33 [label="Type genericDefinition = type.GetGenericTypeDefinition()", span="102-102", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.IsTypeGenericDictionaryInterface(System.Type)", file="JsonDictionaryContract.cs"];
m31_32 [label="return false;", span="100-100", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.IsTypeGenericDictionaryInterface(System.Type)", file="JsonDictionaryContract.cs"];
m31_34 [label="return (genericDefinition == typeof(IDictionary<,>));", span="104-104", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.IsTypeGenericDictionaryInterface(System.Type)", file="JsonDictionaryContract.cs"];
m31_35 [label="Exit Newtonsoft.Json.Serialization.JsonDictionaryContract.IsTypeGenericDictionaryInterface(System.Type)", span="97-97", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.IsTypeGenericDictionaryInterface(System.Type)", file="JsonDictionaryContract.cs"];
m31_36 [label="Entry System.Type.GetGenericTypeDefinition()", span="0-0", cluster="System.Type.GetGenericTypeDefinition()", file="JsonDictionaryContract.cs"];
m31_28 [label="Entry System.Type.GetConstructor(System.Type[])", span="0-0", cluster="System.Type.GetConstructor(System.Type[])", file="JsonDictionaryContract.cs"];
m31_17 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.MakeGenericType(System.Type, params System.Type[])", span="607-607", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.MakeGenericType(System.Type, params System.Type[])", file="JsonDictionaryContract.cs"];
m31_13 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", span="154-154", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="JsonDictionaryContract.cs"];
m31_27 [label="Entry Newtonsoft.Json.Utilities.DictionaryWrapper<TKey, TValue>.DictionaryWrapper(System.Collections.IDictionary)", span="20-20", cluster="Newtonsoft.Json.Utilities.DictionaryWrapper<TKey, TValue>.DictionaryWrapper(System.Collections.IDictionary)", file="JsonDictionaryContract.cs"];
m31_30 [label="Entry Newtonsoft.Json.Utilities.MemberHandler<T>.Invoke(T, params object[])", span="36-36", cluster="Newtonsoft.Json.Utilities.MemberHandler<T>.Invoke(T, params object[])", file="JsonDictionaryContract.cs"];
m31_15 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", span="298-298", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="JsonDictionaryContract.cs"];
m31_14 [label="Entry System.Type.GetGenericArguments()", span="0-0", cluster="System.Type.GetGenericArguments()", file="JsonDictionaryContract.cs"];
m31_29 [label="Entry Newtonsoft.Json.Utilities.LateBoundDelegateFactory.CreateMethodHandler(System.Reflection.MethodBase)", span="48-48", cluster="Newtonsoft.Json.Utilities.LateBoundDelegateFactory.CreateMethodHandler(System.Reflection.MethodBase)", file="JsonDictionaryContract.cs"];
m31_37 [label="Newtonsoft.Json.Serialization.JsonDictionaryContract", span="", file="JsonDictionaryContract.cs"];
m32_91 [label="Entry System.IO.BinaryWriter.Write(long)", span="0-0", cluster="System.IO.BinaryWriter.Write(long)", file="JsonLinqContract.cs"];
m32_186 [label="Entry System.Text.Encoding.GetByteCount(string)", span="0-0", cluster="System.Text.Encoding.GetByteCount(string)", file="JsonLinqContract.cs"];
m32_118 [label="Entry System.IO.BinaryWriter.Write(byte[], int, int)", span="0-0", cluster="System.IO.BinaryWriter.Write(byte[], int, int)", file="JsonLinqContract.cs"];
m32_4 [label="Entry Newtonsoft.Json.Bson.BsonBinaryWriter.Flush()", span="26-26", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.Flush()", file="JsonLinqContract.cs"];
m32_5 [label="_writer.Flush()", span="28-28", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.Flush()", file="JsonLinqContract.cs"];
m32_6 [label="Exit Newtonsoft.Json.Bson.BsonBinaryWriter.Flush()", span="26-26", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.Flush()", file="JsonLinqContract.cs"];
m32_123 [label="Entry Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSizeWithLength(int, bool)", span="205-205", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSizeWithLength(int, bool)", file="JsonLinqContract.cs"];
m32_124 [label="int baseSize = (includeSize)\r\n        ? 5 // size bytes + terminator\r\n        : 1", span="207-209", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSizeWithLength(int, bool)", file="JsonLinqContract.cs"];
m32_125 [label="return baseSize + stringByteCount;", span="211-211", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSizeWithLength(int, bool)", file="JsonLinqContract.cs"];
m32_126 [label="Exit Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSizeWithLength(int, bool)", span="205-205", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSizeWithLength(int, bool)", file="JsonLinqContract.cs"];
m32_94 [label="Entry System.IO.BinaryWriter.Write(bool)", span="0-0", cluster="System.IO.BinaryWriter.Write(bool)", file="JsonLinqContract.cs"];
m32_95 [label="Entry System.DateTime.ToUniversalTime()", span="0-0", cluster="System.DateTime.ToUniversalTime()", file="JsonLinqContract.cs"];
m32_107 [label="Entry Newtonsoft.Json.Bson.BsonBinaryWriter.WriteUtf8Bytes(string, int)", span="179-179", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteUtf8Bytes(string, int)", file="JsonLinqContract.cs"];
m32_109 [label="_largeByteBuffer == null", span="183-183", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteUtf8Bytes(string, int)", file="JsonLinqContract.cs"];
m32_110 [label="_largeByteBuffer = new byte[256]", span="185-185", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteUtf8Bytes(string, int)", file="JsonLinqContract.cs"];
m32_112 [label="Encoding.GetBytes(s, 0, s.Length, _largeByteBuffer, 0)", span="189-189", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteUtf8Bytes(string, int)", file="JsonLinqContract.cs"];
m32_113 [label="_writer.Write(_largeByteBuffer, 0, byteCount)", span="190-190", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteUtf8Bytes(string, int)", file="JsonLinqContract.cs"];
m32_115 [label="_writer.Write(bytes)", span="195-195", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteUtf8Bytes(string, int)", file="JsonLinqContract.cs"];
m32_108 [label="s != null", span="181-181", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteUtf8Bytes(string, int)", file="JsonLinqContract.cs"];
m32_111 [label="byteCount <= 256", span="187-187", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteUtf8Bytes(string, int)", file="JsonLinqContract.cs"];
m32_114 [label="byte[] bytes = Encoding.GetBytes(s)", span="194-194", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteUtf8Bytes(string, int)", file="JsonLinqContract.cs"];
m32_116 [label="Exit Newtonsoft.Json.Bson.BsonBinaryWriter.WriteUtf8Bytes(string, int)", span="179-179", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteUtf8Bytes(string, int)", file="JsonLinqContract.cs"];
m32_96 [label="Entry System.DateTime.ToLocalTime()", span="0-0", cluster="System.DateTime.ToLocalTime()", file="JsonLinqContract.cs"];
m32_12 [label="Entry Newtonsoft.Json.Bson.BsonBinaryWriter.WriteToken(Newtonsoft.Json.Bson.BsonToken)", span="40-40", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteToken(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_13 [label="CalculateSize(t)", span="42-42", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteToken(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_14 [label="WriteTokenInternal(t)", span="43-43", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteToken(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_15 [label="Exit Newtonsoft.Json.Bson.BsonBinaryWriter.WriteToken(Newtonsoft.Json.Bson.BsonToken)", span="40-40", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteToken(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_100 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", file="JsonLinqContract.cs"];
m32_86 [label="Entry System.IO.BinaryWriter.Write(byte)", span="0-0", cluster="System.IO.BinaryWriter.Write(byte)", file="JsonLinqContract.cs"];
m32_117 [label="Entry System.Text.Encoding.GetBytes(string, int, int, byte[], int)", span="0-0", cluster="System.Text.Encoding.GetBytes(string, int, int, byte[], int)", file="JsonLinqContract.cs"];
m32_83 [label="Entry System.IO.BinaryWriter.Write(int)", span="0-0", cluster="System.IO.BinaryWriter.Write(int)", file="JsonLinqContract.cs"];
m32_120 [label="Entry Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(int)", span="200-200", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(int)", file="JsonLinqContract.cs"];
m32_121 [label="return stringByteCount + 1;", span="202-202", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(int)", file="JsonLinqContract.cs"];
m32_122 [label="Exit Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(int)", span="200-200", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(int)", file="JsonLinqContract.cs"];
m32_90 [label="Entry System.Convert.ToInt64(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToInt64(object, System.IFormatProvider)", file="JsonLinqContract.cs"];
m32_0 [label="Entry Newtonsoft.Json.Bson.BsonBinaryWriter.BsonBinaryWriter(System.IO.BinaryWriter)", span="20-20", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.BsonBinaryWriter(System.IO.BinaryWriter)", file="JsonLinqContract.cs"];
m32_1 [label="DateTimeKindHandling = DateTimeKind.Utc", span="22-22", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.BsonBinaryWriter(System.IO.BinaryWriter)", color=green, community=0, file="JsonLinqContract.cs"];
m32_2 [label="_writer = writer", span="23-23", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.BsonBinaryWriter(System.IO.BinaryWriter)", file="JsonLinqContract.cs"];
m32_3 [label="Exit Newtonsoft.Json.Bson.BsonBinaryWriter.BsonBinaryWriter(System.IO.BinaryWriter)", span="20-20", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.BsonBinaryWriter(System.IO.BinaryWriter)", file="JsonLinqContract.cs"];
m32_87 [label="Entry int.ToString(System.IFormatProvider)", span="0-0", cluster="int.ToString(System.IFormatProvider)", file="JsonLinqContract.cs"];
m32_11 [label="Entry System.IO.BinaryWriter.Close()", span="0-0", cluster="System.IO.BinaryWriter.Close()", file="JsonLinqContract.cs"];
m32_7 [label="Entry System.IO.BinaryWriter.Flush()", span="0-0", cluster="System.IO.BinaryWriter.Flush()", file="JsonLinqContract.cs"];
m32_88 [label="Entry Newtonsoft.Json.Utilities.MathUtils.IntLength(int)", span="33-33", cluster="Newtonsoft.Json.Utilities.MathUtils.IntLength(int)", file="JsonLinqContract.cs"];
m32_98 [label="Entry Newtonsoft.Json.JsonConvert.ConvertDateTimeToJavaScriptTicks(System.DateTime, System.TimeSpan)", span="253-253", cluster="Newtonsoft.Json.JsonConvert.ConvertDateTimeToJavaScriptTicks(System.DateTime, System.TimeSpan)", file="JsonLinqContract.cs"];
m32_99 [label="Entry System.IO.BinaryWriter.Write(byte[])", span="0-0", cluster="System.IO.BinaryWriter.Write(byte[])", file="JsonLinqContract.cs"];
m32_8 [label="Entry Newtonsoft.Json.Bson.BsonBinaryWriter.Close()", span="31-31", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.Close()", file="JsonLinqContract.cs"];
m32_9 [label="_writer.Close()", span="34-34", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.Close()", file="JsonLinqContract.cs"];
m32_10 [label="Exit Newtonsoft.Json.Bson.BsonBinaryWriter.Close()", span="31-31", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.Close()", file="JsonLinqContract.cs"];
m32_97 [label="Entry Newtonsoft.Json.JsonConvert.ConvertDateTimeToJavaScriptTicks(System.DateTime, bool)", span="265-265", cluster="Newtonsoft.Json.JsonConvert.ConvertDateTimeToJavaScriptTicks(System.DateTime, bool)", file="JsonLinqContract.cs"];
m32_16 [label="Entry Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", span="214-214", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_133 [label="size += CalculateSize(p.Name)", span="226-226", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_134 [label="size += CalculateSize(p.Value)", span="227-227", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_145 [label="size += CalculateSize(MathUtils.IntLength(index))", span="244-244", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_146 [label="size += CalculateSize(c)", span="245-245", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_161 [label="value.CalculatedSize = CalculateSizeWithLength(value.ByteCount, value.IncludeLength)", span="264-264", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_180 [label="size += CalculateSize(value.Pattern)", span="290-290", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_181 [label="size += CalculateSize(value.Options)", span="291-291", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_131 [label=value, span="223-223", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_132 [label="int size = 1", span="225-225", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_135 [label="bases += size", span="229-229", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_142 [label="int index = 0", span="240-240", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_144 [label="size += 1", span="243-243", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_143 [label=value, span="241-241", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_147 [label="index++", span="246-246", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_148 [label="size += 1", span="248-248", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_158 [label="BsonString value = (BsonString)t", span="261-261", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_160 [label="value.ByteCount = (s != null) ? Encoding.GetByteCount(s) : 0", span="263-263", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_162 [label="return value.CalculatedSize;", span="266-266", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_178 [label="BsonRegex value = (BsonRegex)t", span="288-288", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_179 [label="int size = 0", span="289-289", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_182 [label="value.CalculatedSize = size", span="292-292", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_141 [label="int size = 4", span="239-239", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_127 [label="t.Type", span="216-216", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_129 [label="BsonObject value = (BsonObject)t", span="220-220", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_140 [label="BsonArray value = (BsonArray)t", span="237-237", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_171 [label="BsonValue value = (BsonValue)t", span="277-277", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_184 [label="throw new ArgumentOutOfRangeException(''t'', ''Unexpected token when writing BSON: {0}''.FormatWith(CultureInfo.InvariantCulture, t.Type));", span="297-297", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_130 [label="int bases = 4", span="222-222", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_154 [label="return 8;", span="256-256", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_176 [label="return 12;", span="285-285", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_136 [label="bases += 1", span="231-231", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_149 [label="value.CalculatedSize = size", span="249-249", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_157 [label="BsonType.String", span="259-259", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_159 [label="string s = (string)value.Value", span="262-262", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_177 [label="BsonType.Regex", span="286-286", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_183 [label="return value.CalculatedSize;", span="294-294", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_138 [label="return bases;", span="233-233", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_150 [label="return value.CalculatedSize;", span="251-251", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_152 [label="return 4;", span="254-254", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_156 [label="return 8;", span="258-258", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_164 [label="return 1;", span="269-269", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_167 [label="return 0;", span="272-272", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_169 [label="return 8;", span="274-274", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_174 [label="return value.CalculatedSize;", span="282-282", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_128 [label="BsonType.Object", span="218-218", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_139 [label="BsonType.Array", span="235-235", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_151 [label="BsonType.Integer", span="253-253", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_153 [label="BsonType.Long", span="255-255", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_155 [label="BsonType.Number", span="257-257", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_163 [label="BsonType.Boolean", span="268-268", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_165 [label="BsonType.Null", span="270-270", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_168 [label="BsonType.Date", span="273-273", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_170 [label="BsonType.Binary", span="275-275", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_175 [label="BsonType.Oid", span="284-284", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_137 [label="value.CalculatedSize = bases", span="232-232", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_172 [label="byte[] data = (byte[])value.Value", span="279-279", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_173 [label="value.CalculatedSize = 4 + 1 + data.Length", span="280-280", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_166 [label="BsonType.Undefined", span="271-271", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_185 [label="Exit Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", span="214-214", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_119 [label="Entry System.Text.Encoding.GetBytes(string)", span="0-0", cluster="System.Text.Encoding.GetBytes(string)", file="JsonLinqContract.cs"];
m32_92 [label="Entry System.Convert.ToDouble(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToDouble(object, System.IFormatProvider)", file="JsonLinqContract.cs"];
m32_101 [label="Entry string.FormatWith(System.IFormatProvider, params object[])", span="43-43", cluster="string.FormatWith(System.IFormatProvider, params object[])", file="JsonLinqContract.cs"];
m32_93 [label="Entry System.IO.BinaryWriter.Write(double)", span="0-0", cluster="System.IO.BinaryWriter.Write(double)", file="JsonLinqContract.cs"];
m32_17 [label="Entry Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", span="46-46", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_21 [label="_writer.Write(value.CalculatedSize)", span="53-53", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_23 [label="_writer.Write((sbyte)property.Value.Type)", span="56-56", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_24 [label="WriteString((string)property.Name.Value, property.Name.ByteCount, null)", span="57-57", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_25 [label="WriteTokenInternal(property.Value)", span="58-58", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_26 [label="_writer.Write((byte)0)", span="60-60", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_29 [label="_writer.Write(value.CalculatedSize)", span="66-66", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_32 [label="_writer.Write((sbyte)c.Type)", span="70-70", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_33 [label="WriteString(index.ToString(CultureInfo.InvariantCulture), MathUtils.IntLength(index), null)", span="71-71", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_34 [label="WriteTokenInternal(c)", span="72-72", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_36 [label="_writer.Write((byte)0)", span="75-75", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_39 [label="_writer.Write(Convert.ToInt32(value.Value, CultureInfo.InvariantCulture))", span="81-81", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_42 [label="_writer.Write(Convert.ToInt64(value.Value, CultureInfo.InvariantCulture))", span="87-87", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_45 [label="_writer.Write(Convert.ToDouble(value.Value, CultureInfo.InvariantCulture))", span="93-93", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_48 [label="WriteString((string)value.Value, value.ByteCount, value.CalculatedSize - 4)", span="99-99", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_51 [label="_writer.Write((bool)value.Value)", span="105-105", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_59 [label="DateTimeKindHandling == DateTimeKind.Utc", span="120-120", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_61 [label="DateTimeKindHandling == DateTimeKind.Local", span="122-122", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_66 [label="_writer.Write(ticks)", span="135-135", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_70 [label="_writer.Write(data.Length)", span="143-143", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_71 [label="_writer.Write((byte)BsonBinaryType.Binary)", span="144-144", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_72 [label="_writer.Write(data)", span="145-145", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_76 [label="_writer.Write(data)", span="153-153", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_79 [label="WriteString((string)value.Pattern.Value, value.Pattern.ByteCount, null)", span="160-160", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_80 [label="WriteString((string)value.Options.Value, value.Options.ByteCount, null)", span="161-161", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_20 [label="BsonObject value = (BsonObject)t", span="52-52", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_22 [label=value, span="54-54", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_28 [label="BsonArray value = (BsonArray)t", span="65-65", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_30 [label="int index = 0", span="67-67", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_31 [label=value, span="68-68", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_35 [label="index++", span="73-73", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_38 [label="BsonValue value = (BsonValue)t", span="80-80", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_41 [label="BsonValue value = (BsonValue)t", span="86-86", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_44 [label="BsonValue value = (BsonValue)t", span="92-92", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_47 [label="BsonString value = (BsonString)t", span="98-98", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_50 [label="BsonValue value = (BsonValue)t", span="104-104", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_58 [label="DateTime dateTime = (DateTime)value.Value", span="119-119", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_60 [label="dateTime = dateTime.ToUniversalTime()", span="121-121", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_62 [label="dateTime = dateTime.ToLocalTime()", span="123-123", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_63 [label="ticks = JsonConvert.ConvertDateTimeToJavaScriptTicks(dateTime, false)", span="125-125", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_65 [label="ticks = JsonConvert.ConvertDateTimeToJavaScriptTicks(dateTimeOffset.UtcDateTime, dateTimeOffset.Offset)", span="131-131", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_69 [label="byte[] data = (byte[])value.Value", span="142-142", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_75 [label="byte[] data = (byte[])value.Value", span="152-152", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_78 [label="BsonRegex value = (BsonRegex)t", span="158-158", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_18 [label="t.Type", span="48-48", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_55 [label="BsonValue value = (BsonValue)t", span="113-113", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_68 [label="BsonValue value = (BsonValue)t", span="140-140", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_74 [label="BsonValue value = (BsonValue)t", span="150-150", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_81 [label="throw new ArgumentOutOfRangeException(''t'', ''Unexpected token when writing BSON: {0}''.FormatWith(CultureInfo.InvariantCulture, t.Type));", span="165-165", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_19 [label="BsonType.Object", span="50-50", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_53 [label="BsonType.Undefined", span="109-109", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_27 [label="BsonType.Array", span="63-63", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_56 [label="long ticks = 0", span="115-115", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_37 [label="BsonType.Integer", span="78-78", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_40 [label="BsonType.Long", span="84-84", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_43 [label="BsonType.Number", span="90-90", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_46 [label="BsonType.String", span="96-96", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_49 [label="BsonType.Boolean", span="102-102", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_57 [label="value.Value is DateTime", span="117-117", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_64 [label="DateTimeOffset dateTimeOffset = (DateTimeOffset)value.Value", span="130-130", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_77 [label="BsonType.Regex", span="156-156", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_52 [label="BsonType.Null", span="108-108", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_54 [label="BsonType.Date", span="111-111", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_67 [label="BsonType.Binary", span="138-138", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_73 [label="BsonType.Oid", span="148-148", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_82 [label="Exit Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", span="46-46", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonLinqContract.cs"];
m32_85 [label="Entry Newtonsoft.Json.Bson.BsonBinaryWriter.WriteString(string, int, int?)", span="169-169", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteString(string, int, int?)", file="JsonLinqContract.cs"];
m32_103 [label="_writer.Write(calculatedlengthPrefix.Value)", span="172-172", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteString(string, int, int?)", file="JsonLinqContract.cs"];
m32_104 [label="WriteUtf8Bytes(s, byteCount)", span="174-174", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteString(string, int, int?)", file="JsonLinqContract.cs"];
m32_105 [label="_writer.Write((byte)0)", span="176-176", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteString(string, int, int?)", file="JsonLinqContract.cs"];
m32_102 [label="calculatedlengthPrefix != null", span="171-171", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteString(string, int, int?)", file="JsonLinqContract.cs"];
m32_106 [label="Exit Newtonsoft.Json.Bson.BsonBinaryWriter.WriteString(string, int, int?)", span="169-169", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteString(string, int, int?)", file="JsonLinqContract.cs"];
m32_89 [label="Entry System.Convert.ToInt32(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToInt32(object, System.IFormatProvider)", file="JsonLinqContract.cs"];
m32_84 [label="Entry System.IO.BinaryWriter.Write(sbyte)", span="0-0", cluster="System.IO.BinaryWriter.Write(sbyte)", file="JsonLinqContract.cs"];
m32_187 [label="Newtonsoft.Json.Bson.BsonBinaryWriter", span="", file="JsonLinqContract.cs"];
m33_0 [label="Entry Newtonsoft.Json.Serialization.JsonPrimitiveContract.JsonPrimitiveContract(System.Type)", span="38-38", cluster="Newtonsoft.Json.Serialization.JsonPrimitiveContract.JsonPrimitiveContract(System.Type)", file="JsonPrimitiveContract.cs"];
m33_1 [label="CreatedType = underlyingType", span="41-41", cluster="Newtonsoft.Json.Serialization.JsonPrimitiveContract.JsonPrimitiveContract(System.Type)", color=green, community=0, file="JsonPrimitiveContract.cs"];
m33_2 [label="Exit Newtonsoft.Json.Serialization.JsonPrimitiveContract.JsonPrimitiveContract(System.Type)", span="38-38", cluster="Newtonsoft.Json.Serialization.JsonPrimitiveContract.JsonPrimitiveContract(System.Type)", file="JsonPrimitiveContract.cs"];
m33_3 [label="Newtonsoft.Json.Serialization.JsonPrimitiveContract", span="", file="JsonPrimitiveContract.cs"];
m35_21 [label="Entry System.Collections.ObjectModel.Collection<T>.Remove(T)", span="0-0", cluster="System.Collections.ObjectModel.Collection<T>.Remove(T)", file="JsonPropertyCollection.cs"];
m35_18 [label="Entry System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.Contains(TKey)", span="0-0", cluster="System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.Contains(TKey)", file="JsonPropertyCollection.cs"];
m35_4 [label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="94-94", cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="JsonPropertyCollection.cs"];
m35_22 [label="Entry System.Collections.ObjectModel.Collection<T>.Add(T)", span="0-0", cluster="System.Collections.ObjectModel.Collection<T>.Add(T)", file="JsonPropertyCollection.cs"];
m35_19 [label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="48-48", cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="JsonPropertyCollection.cs"];
m35_38 [label="Entry string.Compare(string, string, System.StringComparison)", span="0-0", cluster="string.Compare(string, string, System.StringComparison)", file="JsonPropertyCollection.cs"];
m35_0 [label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(Newtonsoft.Json.Serialization.JsonObjectContract)", span="45-45", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(Newtonsoft.Json.Serialization.JsonObjectContract)", file="JsonPropertyCollection.cs"];
m35_1 [label="ValidationUtils.ArgumentNotNull(contract, ''contract'')", span="47-47", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(Newtonsoft.Json.Serialization.JsonObjectContract)", file="JsonPropertyCollection.cs"];
m35_2 [label="_contract = contract", span="48-48", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(Newtonsoft.Json.Serialization.JsonObjectContract)", file="JsonPropertyCollection.cs"];
m35_3 [label="Exit Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(Newtonsoft.Json.Serialization.JsonObjectContract)", span="45-45", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(Newtonsoft.Json.Serialization.JsonObjectContract)", file="JsonPropertyCollection.cs"];
m35_5 [label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.GetKeyForItem(Newtonsoft.Json.Serialization.JsonProperty)", span="56-56", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetKeyForItem(Newtonsoft.Json.Serialization.JsonProperty)", file="JsonPropertyCollection.cs"];
m35_6 [label="return item.PropertyName;", span="58-58", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetKeyForItem(Newtonsoft.Json.Serialization.JsonProperty)", file="JsonPropertyCollection.cs"];
m35_7 [label="Exit Newtonsoft.Json.Serialization.JsonPropertyCollection.GetKeyForItem(Newtonsoft.Json.Serialization.JsonProperty)", span="56-56", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetKeyForItem(Newtonsoft.Json.Serialization.JsonProperty)", file="JsonPropertyCollection.cs"];
m35_30 [label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.TryGetProperty(string, System.StringComparison, out Newtonsoft.Json.Serialization.JsonProperty)", span="111-111", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.TryGetProperty(string, System.StringComparison, out Newtonsoft.Json.Serialization.JsonProperty)", file="JsonPropertyCollection.cs"];
m35_31 [label=this, span="113-113", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.TryGetProperty(string, System.StringComparison, out Newtonsoft.Json.Serialization.JsonProperty)", file="JsonPropertyCollection.cs"];
m35_32 [label="string.Compare(propertyName, property.PropertyName, comparisonType) == 0", span="115-115", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.TryGetProperty(string, System.StringComparison, out Newtonsoft.Json.Serialization.JsonProperty)", color=red, community=0, file="JsonPropertyCollection.cs"];
m35_35 [label="matchingProperty = default(JsonProperty)", span="122-122", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.TryGetProperty(string, System.StringComparison, out Newtonsoft.Json.Serialization.JsonProperty)", color=red, community=0, file="JsonPropertyCollection.cs"];
m35_33 [label="matchingProperty = property", span="117-117", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.TryGetProperty(string, System.StringComparison, out Newtonsoft.Json.Serialization.JsonProperty)", color=red, community=0, file="JsonPropertyCollection.cs"];
m35_34 [label="return true;", span="118-118", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.TryGetProperty(string, System.StringComparison, out Newtonsoft.Json.Serialization.JsonProperty)", color=red, community=0, file="JsonPropertyCollection.cs"];
m35_36 [label="return false;", span="123-123", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.TryGetProperty(string, System.StringComparison, out Newtonsoft.Json.Serialization.JsonProperty)", color=red, community=0, file="JsonPropertyCollection.cs"];
m35_37 [label="Exit Newtonsoft.Json.Serialization.JsonPropertyCollection.TryGetProperty(string, System.StringComparison, out Newtonsoft.Json.Serialization.JsonProperty)", span="111-111", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.TryGetProperty(string, System.StringComparison, out Newtonsoft.Json.Serialization.JsonProperty)", file="JsonPropertyCollection.cs"];
m35_20 [label="Entry string.FormatWith(System.IFormatProvider, params object[])", span="48-48", cluster="string.FormatWith(System.IFormatProvider, params object[])", file="JsonPropertyCollection.cs"];
m35_23 [label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.TryGetClosestMatchProperty(string, out Newtonsoft.Json.Serialization.JsonProperty)", span="94-94", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.TryGetClosestMatchProperty(string, out Newtonsoft.Json.Serialization.JsonProperty)", file="JsonPropertyCollection.cs"];
m35_24 [label="TryGetProperty(propertyName, StringComparison.Ordinal, out property)", span="96-96", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.TryGetClosestMatchProperty(string, out Newtonsoft.Json.Serialization.JsonProperty)", color=red, community=0, file="JsonPropertyCollection.cs"];
m35_26 [label="TryGetProperty(propertyName, StringComparison.OrdinalIgnoreCase, out property)", span="98-98", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.TryGetClosestMatchProperty(string, out Newtonsoft.Json.Serialization.JsonProperty)", color=red, community=0, file="JsonPropertyCollection.cs"];
m35_25 [label="return true;", span="97-97", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.TryGetClosestMatchProperty(string, out Newtonsoft.Json.Serialization.JsonProperty)", color=red, community=0, file="JsonPropertyCollection.cs"];
m35_27 [label="return true;", span="99-99", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.TryGetClosestMatchProperty(string, out Newtonsoft.Json.Serialization.JsonProperty)", color=red, community=0, file="JsonPropertyCollection.cs"];
m35_28 [label="return false;", span="101-101", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.TryGetClosestMatchProperty(string, out Newtonsoft.Json.Serialization.JsonProperty)", color=red, community=0, file="JsonPropertyCollection.cs"];
m35_29 [label="Exit Newtonsoft.Json.Serialization.JsonPropertyCollection.TryGetClosestMatchProperty(string, out Newtonsoft.Json.Serialization.JsonProperty)", span="94-94", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.TryGetClosestMatchProperty(string, out Newtonsoft.Json.Serialization.JsonProperty)", file="JsonPropertyCollection.cs"];
m35_8 [label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", span="65-65", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", file="JsonPropertyCollection.cs"];
m35_9 [label="Contains(property.PropertyName)", span="67-67", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", file="JsonPropertyCollection.cs"];
m35_10 [label="property.Ignored", span="70-70", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", file="JsonPropertyCollection.cs"];
m35_12 [label="JsonProperty existingProperty = this[property.PropertyName]", span="73-73", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", file="JsonPropertyCollection.cs"];
m35_14 [label="throw new JsonSerializationException(\r\n            ''A member with the name '{0}' already exists on '{1}'. Use the JsonPropertyAttribute to specify another name.''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName, _contract.UnderlyingType));", span="76-77", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", file="JsonPropertyCollection.cs"];
m35_16 [label="Add(property)", span="83-83", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", file="JsonPropertyCollection.cs"];
m35_11 [label="return;", span="71-71", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", file="JsonPropertyCollection.cs"];
m35_13 [label="!existingProperty.Ignored", span="75-75", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", file="JsonPropertyCollection.cs"];
m35_15 [label="Remove(existingProperty)", span="80-80", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", file="JsonPropertyCollection.cs"];
m35_17 [label="Exit Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", span="65-65", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", file="JsonPropertyCollection.cs"];
m35_39 [label="Newtonsoft.Json.Serialization.JsonPropertyCollection", span="", file="JsonPropertyCollection.cs"];
m36_62 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="JsonRaw.cs"];
m36_71 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="421-421", cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="JsonRaw.cs"];
m36_72 [label="Entry Newtonsoft.Json.Linq.JToken.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="414-414", cluster="Newtonsoft.Json.Linq.JToken.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonRaw.cs"];
m36_34 [label="Entry Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", span="108-108", cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", file="JsonRaw.cs"];
m36_63 [label="Entry Newtonsoft.Json.Linq.JArray.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="220-220", cluster="Newtonsoft.Json.Linq.JArray.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonRaw.cs"];
m36_64 [label="writer.WriteStartArray()", span="222-222", cluster="Newtonsoft.Json.Linq.JArray.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonRaw.cs"];
m36_67 [label="_values[i].WriteTo(writer, converters)", span="226-226", cluster="Newtonsoft.Json.Linq.JArray.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonRaw.cs"];
m36_69 [label="writer.WriteEndArray()", span="229-229", cluster="Newtonsoft.Json.Linq.JArray.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonRaw.cs"];
m36_65 [label="int i = 0", span="224-224", cluster="Newtonsoft.Json.Linq.JArray.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonRaw.cs"];
m36_66 [label="i < _values.Count", span="224-224", cluster="Newtonsoft.Json.Linq.JArray.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonRaw.cs"];
m36_68 [label="i++", span="224-224", cluster="Newtonsoft.Json.Linq.JArray.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonRaw.cs"];
m36_70 [label="Exit Newtonsoft.Json.Linq.JArray.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="220-220", cluster="Newtonsoft.Json.Linq.JArray.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonRaw.cs"];
m36_105 [label="Entry Newtonsoft.Json.Linq.JArray.Clear()", span="353-353", cluster="Newtonsoft.Json.Linq.JArray.Clear()", file="JsonRaw.cs"];
m36_106 [label="ClearItems()", span="355-355", cluster="Newtonsoft.Json.Linq.JArray.Clear()", file="JsonRaw.cs"];
m36_107 [label="Exit Newtonsoft.Json.Linq.JArray.Clear()", span="353-353", cluster="Newtonsoft.Json.Linq.JArray.Clear()", file="JsonRaw.cs"];
m36_108 [label="Entry Newtonsoft.Json.Linq.JContainer.ClearItems()", span="528-528", cluster="Newtonsoft.Json.Linq.JContainer.ClearItems()", file="JsonRaw.cs"];
m36_51 [label="Entry Newtonsoft.Json.Linq.JArray.FromObject(object)", span="192-192", cluster="Newtonsoft.Json.Linq.JArray.FromObject(object)", file="JsonRaw.cs"];
m36_52 [label="return FromObject(o, JsonSerializer.CreateDefault());", span="194-194", cluster="Newtonsoft.Json.Linq.JArray.FromObject(object)", file="JsonRaw.cs"];
m36_53 [label="Exit Newtonsoft.Json.Linq.JArray.FromObject(object)", span="192-192", cluster="Newtonsoft.Json.Linq.JArray.FromObject(object)", file="JsonRaw.cs"];
m36_38 [label="Entry Newtonsoft.Json.Linq.JContainer.ReadTokenFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", span="730-730", cluster="Newtonsoft.Json.Linq.JContainer.ReadTokenFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JsonRaw.cs"];
m36_89 [label="Entry Newtonsoft.Json.Linq.JArray.Insert(int, Newtonsoft.Json.Linq.JToken)", span="311-311", cluster="Newtonsoft.Json.Linq.JArray.Insert(int, Newtonsoft.Json.Linq.JToken)", file="JsonRaw.cs"];
m36_90 [label="InsertItem(index, item, false)", span="313-313", cluster="Newtonsoft.Json.Linq.JArray.Insert(int, Newtonsoft.Json.Linq.JToken)", file="JsonRaw.cs"];
m36_91 [label="Exit Newtonsoft.Json.Linq.JArray.Insert(int, Newtonsoft.Json.Linq.JToken)", span="311-311", cluster="Newtonsoft.Json.Linq.JArray.Insert(int, Newtonsoft.Json.Linq.JToken)", file="JsonRaw.cs"];
m36_50 [label="Entry System.IO.StringReader.StringReader(string)", span="0-0", cluster="System.IO.StringReader.StringReader(string)", file="JsonRaw.cs"];
m36_96 [label="Entry Newtonsoft.Json.Linq.JContainer.RemoveItemAt(int)", span="400-400", cluster="Newtonsoft.Json.Linq.JContainer.RemoveItemAt(int)", file="JsonRaw.cs"];
m36_9 [label="Entry Newtonsoft.Json.Linq.JContainer.Add(object)", span="631-631", cluster="Newtonsoft.Json.Linq.JContainer.Add(object)", file="JsonRaw.cs"];
m36_121 [label="Entry Newtonsoft.Json.Linq.JArray.GetDeepHashCode()", span="402-402", cluster="Newtonsoft.Json.Linq.JArray.GetDeepHashCode()", file="JsonRaw.cs"];
m36_122 [label="return ContentsHashCode();", span="404-404", cluster="Newtonsoft.Json.Linq.JArray.GetDeepHashCode()", file="JsonRaw.cs"];
m36_123 [label="Exit Newtonsoft.Json.Linq.JArray.GetDeepHashCode()", span="402-402", cluster="Newtonsoft.Json.Linq.JArray.GetDeepHashCode()", file="JsonRaw.cs"];
m36_21 [label="Entry Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", span="124-124", cluster="Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JsonRaw.cs"];
m36_22 [label="reader.TokenType == JsonToken.None", span="126-126", cluster="Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JsonRaw.cs"];
m36_23 [label="!reader.Read()", span="128-128", cluster="Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JsonRaw.cs"];
m36_24 [label="throw JsonReaderException.Create(reader, ''Error reading JArray from JsonReader.'');", span="130-130", cluster="Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JsonRaw.cs"];
m36_25 [label="reader.MoveToContent()", span="134-134", cluster="Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JsonRaw.cs"];
m36_26 [label="reader.TokenType != JsonToken.StartArray", span="136-136", cluster="Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JsonRaw.cs"];
m36_27 [label="throw JsonReaderException.Create(reader, ''Error reading JArray from JsonReader. Current JsonReader item is not an array: {0}''.FormatWith(CultureInfo.InvariantCulture, reader.TokenType));", span="138-138", cluster="Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JsonRaw.cs"];
m36_29 [label="a.SetLineInfo(reader as IJsonLineInfo, settings)", span="142-142", cluster="Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JsonRaw.cs"];
m36_30 [label="a.ReadTokenFrom(reader, settings)", span="144-144", cluster="Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JsonRaw.cs"];
m36_28 [label="JArray a = new JArray()", span="141-141", cluster="Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JsonRaw.cs"];
m36_31 [label="return a;", span="146-146", cluster="Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JsonRaw.cs"];
m36_32 [label="Exit Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", span="124-124", cluster="Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JsonRaw.cs"];
m36_113 [label="Entry Newtonsoft.Json.Linq.JArray.CopyTo(Newtonsoft.Json.Linq.JToken[], int)", span="375-375", cluster="Newtonsoft.Json.Linq.JArray.CopyTo(Newtonsoft.Json.Linq.JToken[], int)", file="JsonRaw.cs"];
m36_114 [label="CopyItemsTo(array, arrayIndex)", span="377-377", cluster="Newtonsoft.Json.Linq.JArray.CopyTo(Newtonsoft.Json.Linq.JToken[], int)", file="JsonRaw.cs"];
m36_115 [label="Exit Newtonsoft.Json.Linq.JArray.CopyTo(Newtonsoft.Json.Linq.JToken[], int)", span="375-375", cluster="Newtonsoft.Json.Linq.JArray.CopyTo(Newtonsoft.Json.Linq.JToken[], int)", file="JsonRaw.cs"];
m36_0 [label="Entry Newtonsoft.Json.Linq.JArray.JArray()", span="65-65", cluster="Newtonsoft.Json.Linq.JArray.JArray()", file="JsonRaw.cs"];
m36_1 [label="Exit Newtonsoft.Json.Linq.JArray.JArray()", span="65-65", cluster="Newtonsoft.Json.Linq.JArray.JArray()", file="JsonRaw.cs"];
m36_86 [label="Entry Newtonsoft.Json.Linq.JArray.IndexOf(Newtonsoft.Json.Linq.JToken)", span="298-298", cluster="Newtonsoft.Json.Linq.JArray.IndexOf(Newtonsoft.Json.Linq.JToken)", file="JsonRaw.cs"];
m36_87 [label="return IndexOfItem(item);", span="300-300", cluster="Newtonsoft.Json.Linq.JArray.IndexOf(Newtonsoft.Json.Linq.JToken)", file="JsonRaw.cs"];
m36_88 [label="Exit Newtonsoft.Json.Linq.JArray.IndexOf(Newtonsoft.Json.Linq.JToken)", span="298-298", cluster="Newtonsoft.Json.Linq.JArray.IndexOf(Newtonsoft.Json.Linq.JToken)", file="JsonRaw.cs"];
m36_116 [label="Entry Newtonsoft.Json.Linq.JContainer.CopyItemsTo(System.Array, int)", span="573-573", cluster="Newtonsoft.Json.Linq.JContainer.CopyItemsTo(System.Array, int)", file="JsonRaw.cs"];
m36_100 [label="Entry Newtonsoft.Json.Linq.JContainer.Children()", span="264-264", cluster="Newtonsoft.Json.Linq.JContainer.Children()", file="JsonRaw.cs"];
m36_55 [label="Entry Newtonsoft.Json.Linq.JArray.FromObject(object, Newtonsoft.Json.JsonSerializer)", span="203-203", cluster="Newtonsoft.Json.Linq.JArray.FromObject(object, Newtonsoft.Json.JsonSerializer)", file="JsonRaw.cs"];
m36_56 [label="JToken token = FromObjectInternal(o, jsonSerializer)", span="205-205", cluster="Newtonsoft.Json.Linq.JArray.FromObject(object, Newtonsoft.Json.JsonSerializer)", file="JsonRaw.cs"];
m36_57 [label="token.Type != JTokenType.Array", span="207-207", cluster="Newtonsoft.Json.Linq.JArray.FromObject(object, Newtonsoft.Json.JsonSerializer)", file="JsonRaw.cs"];
m36_58 [label="throw new ArgumentException(''Object serialized to {0}. JArray instance expected.''.FormatWith(CultureInfo.InvariantCulture, token.Type));", span="209-209", cluster="Newtonsoft.Json.Linq.JArray.FromObject(object, Newtonsoft.Json.JsonSerializer)", file="JsonRaw.cs"];
m36_59 [label="return (JArray)token;", span="212-212", cluster="Newtonsoft.Json.Linq.JArray.FromObject(object, Newtonsoft.Json.JsonSerializer)", file="JsonRaw.cs"];
m36_60 [label="Exit Newtonsoft.Json.Linq.JArray.FromObject(object, Newtonsoft.Json.JsonSerializer)", span="203-203", cluster="Newtonsoft.Json.Linq.JArray.FromObject(object, Newtonsoft.Json.JsonSerializer)", file="JsonRaw.cs"];
m36_109 [label="Entry Newtonsoft.Json.Linq.JArray.Contains(Newtonsoft.Json.Linq.JToken)", span="365-365", cluster="Newtonsoft.Json.Linq.JArray.Contains(Newtonsoft.Json.Linq.JToken)", file="JsonRaw.cs"];
m36_110 [label="return ContainsItem(item);", span="367-367", cluster="Newtonsoft.Json.Linq.JArray.Contains(Newtonsoft.Json.Linq.JToken)", file="JsonRaw.cs"];
m36_111 [label="Exit Newtonsoft.Json.Linq.JArray.Contains(Newtonsoft.Json.Linq.JToken)", span="365-365", cluster="Newtonsoft.Json.Linq.JArray.Contains(Newtonsoft.Json.Linq.JToken)", file="JsonRaw.cs"];
m36_54 [label="Entry Newtonsoft.Json.JsonSerializer.CreateDefault()", span="596-596", cluster="Newtonsoft.Json.JsonSerializer.CreateDefault()", file="JsonRaw.cs"];
m36_97 [label="Entry Newtonsoft.Json.Linq.JArray.GetEnumerator()", span="334-334", cluster="Newtonsoft.Json.Linq.JArray.GetEnumerator()", file="JsonRaw.cs"];
m36_98 [label="return Children().GetEnumerator();", span="336-336", cluster="Newtonsoft.Json.Linq.JArray.GetEnumerator()", file="JsonRaw.cs"];
m36_99 [label="Exit Newtonsoft.Json.Linq.JArray.GetEnumerator()", span="334-334", cluster="Newtonsoft.Json.Linq.JArray.GetEnumerator()", file="JsonRaw.cs"];
m36_120 [label="Entry Newtonsoft.Json.Linq.JContainer.RemoveItem(Newtonsoft.Json.Linq.JToken)", span="448-448", cluster="Newtonsoft.Json.Linq.JContainer.RemoveItem(Newtonsoft.Json.Linq.JToken)", file="JsonRaw.cs"];
m36_102 [label="Entry Newtonsoft.Json.Linq.JArray.Add(Newtonsoft.Json.Linq.JToken)", span="345-345", cluster="Newtonsoft.Json.Linq.JArray.Add(Newtonsoft.Json.Linq.JToken)", file="JsonRaw.cs"];
m36_103 [label="Add((object)item)", span="347-347", cluster="Newtonsoft.Json.Linq.JArray.Add(Newtonsoft.Json.Linq.JToken)", file="JsonRaw.cs"];
m36_104 [label="Exit Newtonsoft.Json.Linq.JArray.Add(Newtonsoft.Json.Linq.JToken)", span="345-345", cluster="Newtonsoft.Json.Linq.JArray.Add(Newtonsoft.Json.Linq.JToken)", file="JsonRaw.cs"];
m36_10 [label="Entry Newtonsoft.Json.Linq.JArray.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="96-96", cluster="Newtonsoft.Json.Linq.JArray.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JsonRaw.cs"];
m36_11 [label="JArray t = node as JArray", span="98-98", cluster="Newtonsoft.Json.Linq.JArray.DeepEquals(Newtonsoft.Json.Linq.JToken)", color=red, community=0, file="JsonRaw.cs"];
m36_12 [label="return (t != null && ContentsEqual(t));", span="99-99", cluster="Newtonsoft.Json.Linq.JArray.DeepEquals(Newtonsoft.Json.Linq.JToken)", color=red, community=0, file="JsonRaw.cs"];
m36_13 [label="Exit Newtonsoft.Json.Linq.JArray.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="96-96", cluster="Newtonsoft.Json.Linq.JArray.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JsonRaw.cs"];
m36_6 [label="Entry Newtonsoft.Json.Linq.JArray.JArray(object)", span="91-91", cluster="Newtonsoft.Json.Linq.JArray.JArray(object)", file="JsonRaw.cs"];
m36_7 [label="Add(content)", span="93-93", cluster="Newtonsoft.Json.Linq.JArray.JArray(object)", color=red, community=0, file="JsonRaw.cs"];
m36_8 [label="Exit Newtonsoft.Json.Linq.JArray.JArray(object)", span="91-91", cluster="Newtonsoft.Json.Linq.JArray.JArray(object)", file="JsonRaw.cs"];
m36_61 [label="Entry Newtonsoft.Json.Linq.JToken.FromObjectInternal(object, Newtonsoft.Json.JsonSerializer)", span="1891-1891", cluster="Newtonsoft.Json.Linq.JToken.FromObjectInternal(object, Newtonsoft.Json.JsonSerializer)", file="JsonRaw.cs"];
m36_112 [label="Entry Newtonsoft.Json.Linq.JContainer.ContainsItem(Newtonsoft.Json.Linq.JToken)", span="568-568", cluster="Newtonsoft.Json.Linq.JContainer.ContainsItem(Newtonsoft.Json.Linq.JToken)", file="JsonRaw.cs"];
m36_49 [label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="75-75", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonRaw.cs"];
m36_2 [label="Entry Newtonsoft.Json.Linq.JArray.JArray(Newtonsoft.Json.Linq.JArray)", span="73-73", cluster="Newtonsoft.Json.Linq.JArray.JArray(Newtonsoft.Json.Linq.JArray)", file="JsonRaw.cs"];
m36_3 [label="Exit Newtonsoft.Json.Linq.JArray.JArray(Newtonsoft.Json.Linq.JArray)", span="73-73", cluster="Newtonsoft.Json.Linq.JArray.JArray(Newtonsoft.Json.Linq.JArray)", file="JsonRaw.cs"];
m36_92 [label="Entry Newtonsoft.Json.Linq.JContainer.InsertItem(int, Newtonsoft.Json.Linq.JToken, bool)", span="351-351", cluster="Newtonsoft.Json.Linq.JContainer.InsertItem(int, Newtonsoft.Json.Linq.JToken, bool)", file="JsonRaw.cs"];
m36_117 [label="Entry Newtonsoft.Json.Linq.JArray.Remove(Newtonsoft.Json.Linq.JToken)", span="396-396", cluster="Newtonsoft.Json.Linq.JArray.Remove(Newtonsoft.Json.Linq.JToken)", file="JsonRaw.cs"];
m36_118 [label="return RemoveItem(item);", span="398-398", cluster="Newtonsoft.Json.Linq.JArray.Remove(Newtonsoft.Json.Linq.JToken)", file="JsonRaw.cs"];
m36_119 [label="Exit Newtonsoft.Json.Linq.JArray.Remove(Newtonsoft.Json.Linq.JToken)", span="396-396", cluster="Newtonsoft.Json.Linq.JArray.Remove(Newtonsoft.Json.Linq.JToken)", file="JsonRaw.cs"];
m36_18 [label="Entry Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader)", span="112-112", cluster="Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader)", file="JsonRaw.cs"];
m36_19 [label="return Load(reader, null);", span="114-114", cluster="Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader)", color=red, community=0, file="JsonRaw.cs"];
m36_20 [label="Exit Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader)", span="112-112", cluster="Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader)", file="JsonRaw.cs"];
m36_78 [label="Entry Newtonsoft.Json.Linq.JArray.MergeItem(object, Newtonsoft.Json.Linq.JsonMergeSettings)", span="277-277", cluster="Newtonsoft.Json.Linq.JArray.MergeItem(object, Newtonsoft.Json.Linq.JsonMergeSettings)", file="JsonRaw.cs"];
m36_79 [label="IEnumerable a = (IsMultiContent(content) || content is JArray)\r\n                ? (IEnumerable)content\r\n                : null", span="279-281", cluster="Newtonsoft.Json.Linq.JArray.MergeItem(object, Newtonsoft.Json.Linq.JsonMergeSettings)", file="JsonRaw.cs"];
m36_82 [label="MergeEnumerableContent(this, a, settings)", span="287-287", cluster="Newtonsoft.Json.Linq.JArray.MergeItem(object, Newtonsoft.Json.Linq.JsonMergeSettings)", file="JsonRaw.cs"];
m36_80 [label="a == null", span="282-282", cluster="Newtonsoft.Json.Linq.JArray.MergeItem(object, Newtonsoft.Json.Linq.JsonMergeSettings)", file="JsonRaw.cs"];
m36_81 [label="return;", span="284-284", cluster="Newtonsoft.Json.Linq.JArray.MergeItem(object, Newtonsoft.Json.Linq.JsonMergeSettings)", file="JsonRaw.cs"];
m36_83 [label="Exit Newtonsoft.Json.Linq.JArray.MergeItem(object, Newtonsoft.Json.Linq.JsonMergeSettings)", span="277-277", cluster="Newtonsoft.Json.Linq.JArray.MergeItem(object, Newtonsoft.Json.Linq.JsonMergeSettings)", file="JsonRaw.cs"];
m36_42 [label="Entry Newtonsoft.Json.Linq.JArray.Parse(string, Newtonsoft.Json.Linq.JsonLoadSettings)", span="172-172", cluster="Newtonsoft.Json.Linq.JArray.Parse(string, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JsonRaw.cs"];
m36_43 [label="JsonReader reader = new JsonTextReader(new StringReader(json))", span="174-174", cluster="Newtonsoft.Json.Linq.JArray.Parse(string, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JsonRaw.cs"];
m36_44 [label="JArray a = Load(reader, settings)", span="176-176", cluster="Newtonsoft.Json.Linq.JArray.Parse(string, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JsonRaw.cs"];
m36_45 [label="reader.Read() && reader.TokenType != JsonToken.Comment", span="178-178", cluster="Newtonsoft.Json.Linq.JArray.Parse(string, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JsonRaw.cs"];
m36_46 [label="throw JsonReaderException.Create(reader, ''Additional text found in JSON string after parsing content.'');", span="180-180", cluster="Newtonsoft.Json.Linq.JArray.Parse(string, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JsonRaw.cs"];
m36_47 [label="return a;", span="183-183", cluster="Newtonsoft.Json.Linq.JArray.Parse(string, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JsonRaw.cs"];
m36_48 [label="Exit Newtonsoft.Json.Linq.JArray.Parse(string, Newtonsoft.Json.Linq.JsonLoadSettings)", span="172-172", cluster="Newtonsoft.Json.Linq.JArray.Parse(string, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JsonRaw.cs"];
m36_85 [label="Entry Newtonsoft.Json.Linq.JContainer.MergeEnumerableContent(Newtonsoft.Json.Linq.JContainer, System.Collections.IEnumerable, Newtonsoft.Json.Linq.JsonMergeSettings)", span="1142-1142", cluster="Newtonsoft.Json.Linq.JContainer.MergeEnumerableContent(Newtonsoft.Json.Linq.JContainer, System.Collections.IEnumerable, Newtonsoft.Json.Linq.JsonMergeSettings)", file="JsonRaw.cs"];
m36_4 [label="Entry Newtonsoft.Json.Linq.JArray.JArray(params object[])", span="82-82", cluster="Newtonsoft.Json.Linq.JArray.JArray(params object[])", file="JsonRaw.cs"];
m36_5 [label="Exit Newtonsoft.Json.Linq.JArray.JArray(params object[])", span="82-82", cluster="Newtonsoft.Json.Linq.JArray.JArray(params object[])", file="JsonRaw.cs"];
m36_35 [label="Entry Newtonsoft.Json.JsonReader.MoveToContent()", span="1153-1153", cluster="Newtonsoft.Json.JsonReader.MoveToContent()", file="JsonRaw.cs"];
m36_93 [label="Entry Newtonsoft.Json.Linq.JArray.RemoveAt(int)", span="323-323", cluster="Newtonsoft.Json.Linq.JArray.RemoveAt(int)", file="JsonRaw.cs"];
m36_94 [label="RemoveItemAt(index)", span="325-325", cluster="Newtonsoft.Json.Linq.JArray.RemoveAt(int)", file="JsonRaw.cs"];
m36_95 [label="Exit Newtonsoft.Json.Linq.JArray.RemoveAt(int)", span="323-323", cluster="Newtonsoft.Json.Linq.JArray.RemoveAt(int)", file="JsonRaw.cs"];
m36_33 [label="Entry Newtonsoft.Json.JsonReader.Read()", span="409-409", cluster="Newtonsoft.Json.JsonReader.Read()", file="JsonRaw.cs"];
m36_77 [label="Entry System.Collections.Generic.List<T>.IndexOfReference<T>(T)", span="237-237", cluster="System.Collections.Generic.List<T>.IndexOfReference<T>(T)", file="JsonRaw.cs"];
m36_124 [label="Entry Newtonsoft.Json.Linq.JContainer.ContentsHashCode()", span="867-867", cluster="Newtonsoft.Json.Linq.JContainer.ContentsHashCode()", file="JsonRaw.cs"];
m36_15 [label="Entry Newtonsoft.Json.Linq.JArray.CloneToken()", span="102-102", cluster="Newtonsoft.Json.Linq.JArray.CloneToken()", file="JsonRaw.cs"];
m36_16 [label="return new JArray(this);", span="104-104", cluster="Newtonsoft.Json.Linq.JArray.CloneToken()", color=red, community=0, file="JsonRaw.cs"];
m36_17 [label="Exit Newtonsoft.Json.Linq.JArray.CloneToken()", span="102-102", cluster="Newtonsoft.Json.Linq.JArray.CloneToken()", file="JsonRaw.cs"];
m36_37 [label="Entry Newtonsoft.Json.Linq.JToken.SetLineInfo(Newtonsoft.Json.IJsonLineInfo, Newtonsoft.Json.Linq.JsonLoadSettings)", span="2228-2228", cluster="Newtonsoft.Json.Linq.JToken.SetLineInfo(Newtonsoft.Json.IJsonLineInfo, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JsonRaw.cs"];
m36_73 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="429-429", cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="JsonRaw.cs"];
m36_36 [label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47", cluster="string.FormatWith(System.IFormatProvider, object)", file="JsonRaw.cs"];
m36_101 [label="Entry Newtonsoft.Json.Linq.JEnumerable<T>.GetEnumerator()", span="67-67", cluster="Newtonsoft.Json.Linq.JEnumerable<T>.GetEnumerator()", file="JsonRaw.cs"];
m36_74 [label="Entry Newtonsoft.Json.Linq.JArray.IndexOfItem(Newtonsoft.Json.Linq.JToken)", span="272-272", cluster="Newtonsoft.Json.Linq.JArray.IndexOfItem(Newtonsoft.Json.Linq.JToken)", file="JsonRaw.cs"];
m36_75 [label="return _values.IndexOfReference(item);", span="274-274", cluster="Newtonsoft.Json.Linq.JArray.IndexOfItem(Newtonsoft.Json.Linq.JToken)", file="JsonRaw.cs"];
m36_76 [label="Exit Newtonsoft.Json.Linq.JArray.IndexOfItem(Newtonsoft.Json.Linq.JToken)", span="272-272", cluster="Newtonsoft.Json.Linq.JArray.IndexOfItem(Newtonsoft.Json.Linq.JToken)", file="JsonRaw.cs"];
m36_14 [label="Entry Newtonsoft.Json.Linq.JContainer.ContentsEqual(Newtonsoft.Json.Linq.JContainer)", span="201-201", cluster="Newtonsoft.Json.Linq.JContainer.ContentsEqual(Newtonsoft.Json.Linq.JContainer)", file="JsonRaw.cs"];
m36_84 [label="Entry Newtonsoft.Json.Linq.JContainer.IsMultiContent(object)", span="320-320", cluster="Newtonsoft.Json.Linq.JContainer.IsMultiContent(object)", file="JsonRaw.cs"];
m36_39 [label="Entry Newtonsoft.Json.Linq.JArray.Parse(string)", span="157-157", cluster="Newtonsoft.Json.Linq.JArray.Parse(string)", file="JsonRaw.cs"];
m36_40 [label="return Parse(json, null);", span="159-159", cluster="Newtonsoft.Json.Linq.JArray.Parse(string)", file="JsonRaw.cs"];
m36_41 [label="Exit Newtonsoft.Json.Linq.JArray.Parse(string)", span="157-157", cluster="Newtonsoft.Json.Linq.JArray.Parse(string)", file="JsonRaw.cs"];
m36_125 [label="Newtonsoft.Json.Linq.JArray", span="", file="JsonRaw.cs"];
m37_8 [label="Entry string.String(char[], int, int)", span="0-0", cluster="string.String(char[], int, int)", file="JsonRawTests.cs"];
m37_0 [label="Entry Newtonsoft.Json.Utilities.StringReference.StringReference(char[], int, int)", span="28-28", cluster="Newtonsoft.Json.Utilities.StringReference.StringReference(char[], int, int)", file="JsonRawTests.cs"];
m37_1 [label="_chars = chars", span="30-30", cluster="Newtonsoft.Json.Utilities.StringReference.StringReference(char[], int, int)", color=red, community=0, file="JsonRawTests.cs"];
m37_2 [label="_startIndex = startIndex", span="31-31", cluster="Newtonsoft.Json.Utilities.StringReference.StringReference(char[], int, int)", color=red, community=0, file="JsonRawTests.cs"];
m37_3 [label="_length = length", span="32-32", cluster="Newtonsoft.Json.Utilities.StringReference.StringReference(char[], int, int)", color=red, community=0, file="JsonRawTests.cs"];
m37_4 [label="Exit Newtonsoft.Json.Utilities.StringReference.StringReference(char[], int, int)", span="28-28", cluster="Newtonsoft.Json.Utilities.StringReference.StringReference(char[], int, int)", file="JsonRawTests.cs"];
m37_5 [label="Entry Newtonsoft.Json.Utilities.StringReference.ToString()", span="35-35", cluster="Newtonsoft.Json.Utilities.StringReference.ToString()", file="JsonRawTests.cs"];
m37_6 [label="return new string(_chars, _startIndex, _length);", span="37-37", cluster="Newtonsoft.Json.Utilities.StringReference.ToString()", color=red, community=0, file="JsonRawTests.cs"];
m37_7 [label="Exit Newtonsoft.Json.Utilities.StringReference.ToString()", span="35-35", cluster="Newtonsoft.Json.Utilities.StringReference.ToString()", file="JsonRawTests.cs"];
m37_9 [label="out Newtonsoft.Json.Utilities.StringReference", span="", file="JsonRawTests.cs"];
m37_10 [label="Newtonsoft.Json.Utilities.StringReference", span="", file="JsonRawTests.cs"];
m38_31 [label="Read() && (depth < Depth)", span="224-224", cluster="Newtonsoft.Json.JsonReader.Skip()", file="JsonReader.cs"];
m38_20 [label="Entry Newtonsoft.Json.JsonReader.Peek()", span="198-198", cluster="Newtonsoft.Json.JsonReader.Peek()", file="JsonReader.cs"];
m38_21 [label="Entry System.Collections.Generic.List<T>.RemoveAt(int)", span="0-0", cluster="System.Collections.Generic.List<T>.RemoveAt(int)", file="JsonReader.cs"];
m38_22 [label="return _currentTypeContext;", span="200-200", cluster="Newtonsoft.Json.JsonReader.Peek()", file="JsonReader.cs", color=green, community=0];
m38_0 [label="Entry Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken)", span="52-52", cluster="Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken)", file="JsonReader.cs"];
m38_1 [label="ValidationUtils.ArgumentNotNull(token, ''token'')", span="54-54", cluster="Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken)", file="JsonReader.cs"];
m38_2 [label="_root = token", span="56-56", cluster="Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken)", file="JsonReader.cs"];
m38_3 [label="Exit Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken)", span="52-52", cluster="Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken)", file="JsonReader.cs"];
m38_4 [label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="52-52", cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="JsonReader.cs"];
m38_5 [label="Entry Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken, string)", span="59-59", cluster="Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken, string)", file="JsonReader.cs"];
m38_16 [label="_top--", span="192-192", cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs"];
m38_17 [label="_currentTypeContext = _stack[_top - 1]", span="193-193", cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", color=green, community=0];
m38_18 [label="return value;", span="195-195", cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs"];
m38_80 [label="Exit Newtonsoft.Json.Linq.JTokenReader.GetEndToken(Newtonsoft.Json.Linq.JContainer)", span="183-183", cluster="Newtonsoft.Json.Linq.JTokenReader.GetEndToken(Newtonsoft.Json.Linq.JContainer)", file="JsonReader.cs"];
m38_82 [label="JToken firstChild = c.First", span="202-202", cluster="Newtonsoft.Json.Linq.JTokenReader.ReadInto(Newtonsoft.Json.Linq.JContainer)", file="JsonReader.cs"];
m38_83 [label="firstChild == null", span="203-203", cluster="Newtonsoft.Json.Linq.JTokenReader.ReadInto(Newtonsoft.Json.Linq.JContainer)", file="JsonReader.cs"];
m38_84 [label="return SetEnd(c);", span="205-205", cluster="Newtonsoft.Json.Linq.JTokenReader.ReadInto(Newtonsoft.Json.Linq.JContainer)", file="JsonReader.cs"];
m38_85 [label="SetToken(firstChild)", span="209-209", cluster="Newtonsoft.Json.Linq.JTokenReader.ReadInto(Newtonsoft.Json.Linq.JContainer)", file="JsonReader.cs"];
m38_136 [label="Dispose(true)", span="390-390", cluster="Newtonsoft.Json.JsonReader.System.IDisposable.Dispose()", file="JsonReader.cs"];
m38_137 [label="Exit Newtonsoft.Json.JsonReader.System.IDisposable.Dispose()", span="388-388", cluster="Newtonsoft.Json.JsonReader.System.IDisposable.Dispose()", file="JsonReader.cs"];
m38_138 [label="Entry Newtonsoft.Json.JsonReader.Dispose(bool)", span="397-397", cluster="Newtonsoft.Json.JsonReader.Dispose(bool)", file="JsonReader.cs"];
m38_45 [label="Push(JTokenType.Array)", span="256-256", cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="JsonReader.cs"];
m38_51 [label="_currentState = State.PostValue", span="264-264", cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="JsonReader.cs"];
m38_53 [label="ValidateEnd(JsonToken.EndArray)", span="267-267", cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="JsonReader.cs"];
m38_54 [label="_currentState = State.PostValue", span="268-268", cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="JsonReader.cs"];
m38_55 [label="JsonToken.EndConstructor", span="270-270", cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="JsonReader.cs"];
m38_57 [label="_currentState = State.PostValue", span="272-272", cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="JsonReader.cs"];
m38_52 [label="JsonToken.EndArray", span="266-266", cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="JsonReader.cs"];
m38_58 [label="JsonToken.PropertyName", span="274-274", cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="JsonReader.cs"];
m38_56 [label="ValidateEnd(JsonToken.EndConstructor)", span="271-271", cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="JsonReader.cs"];
m38_59 [label="_currentState = State.Property", span="275-275", cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="JsonReader.cs"];
m38_60 [label="Push(JTokenType.Property)", span="276-276", cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="JsonReader.cs"];
m38_61 [label="JsonToken.Undefined", span="278-278", cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="JsonReader.cs"];
m38_146 [label="_valueType = null", span="411-411", cluster="Newtonsoft.Json.JsonReader.Close()", file="JsonReader.cs"];
m38_139 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()", file="JsonReader.cs"];
m38_140 [label="Entry Newtonsoft.Json.Linq.JTokenReader.Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", span="297-297", cluster="Newtonsoft.Json.Linq.JTokenReader.Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", file="JsonReader.cs"];
m38_141 [label="CurrentState == State.Start", span="299-299", cluster="Newtonsoft.Json.Linq.JTokenReader.Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", file="JsonReader.cs"];
m38_7 [label="Exit Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken, string)", span="59-59", cluster="Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken, string)", file="JsonReader.cs"];
m38_10 [label="Exit Newtonsoft.Json.Linq.JTokenReader.ReadAsBytes()", span="71-71", cluster="Newtonsoft.Json.Linq.JTokenReader.ReadAsBytes()", color=green, community=0, file="JsonReader.cs"];
m38_9 [label="return ReadAsBytesInternal();", span="73-73", cluster="Newtonsoft.Json.Linq.JTokenReader.ReadAsBytes()", file="JsonReader.cs"];
m38_8 [label="Entry Newtonsoft.Json.Linq.JTokenReader.ReadAsBytes()", span="71-71", cluster="Newtonsoft.Json.Linq.JTokenReader.ReadAsBytes()", file="JsonReader.cs"];
m38_11 [label="Entry Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", span="513-513", cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs"];
m38_27 [label="Entry Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", span="774-774", cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", file="JsonReader.cs"];
m38_34 [label="_current == null", span="127-127", cluster="Newtonsoft.Json.Linq.JTokenReader.ReadInternal()", file="JsonReader.cs"];
m38_68 [label="JsonToken.Raw", span="285-285", cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="JsonReader.cs"];
m38_35 [label="return false;", span="128-128", cluster="Newtonsoft.Json.Linq.JTokenReader.ReadInternal()", file="JsonReader.cs"];
m38_36 [label="JContainer container = _current as JContainer", span="130-130", cluster="Newtonsoft.Json.Linq.JTokenReader.ReadInternal()", file="JsonReader.cs"];
m38_12 [label="Entry Newtonsoft.Json.Linq.JTokenReader.ReadAsDecimal()", span="80-80", cluster="Newtonsoft.Json.Linq.JTokenReader.ReadAsDecimal()", file="JsonReader.cs"];
m38_44 [label="_currentState = State.ArrayStart", span="255-255", cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="JsonReader.cs"];
m38_87 [label="Entry Newtonsoft.Json.JsonReaderException.JsonReaderException(string)", span="59-59", cluster="Newtonsoft.Json.JsonReaderException.JsonReaderException(string)", file="JsonReader.cs"];
m38_86 [label="Entry Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", span="370-370", cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs"];
m38_88 [label="Entry string.FormatWith(System.IFormatProvider, params object[])", span="48-48", cluster="string.FormatWith(System.IFormatProvider, params object[])", file="JsonReader.cs"];
m38_89 [label="Entry Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", span="318-318", cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs"];
m38_24 [label="Entry Newtonsoft.Json.JsonReader.Read()", span="207-207", cluster="Newtonsoft.Json.JsonReader.Read()", file="JsonReader.cs"];
m38_25 [label="Exit Newtonsoft.Json.JsonReader.Read()", span="207-207", cluster="Newtonsoft.Json.JsonReader.Read()", file="JsonReader.cs"];
m38_26 [label="Exit Newtonsoft.Json.Linq.JTokenReader.ReadAsDateTime()", span="107-107", cluster="Newtonsoft.Json.Linq.JTokenReader.ReadAsDateTime()", file="JsonReader.cs"];
m38_62 [label="JsonToken.Integer", span="279-279", cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="JsonReader.cs"];
m38_64 [label="JsonToken.Boolean", span="281-281", cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="JsonReader.cs"];
m38_65 [label="JsonToken.Null", span="282-282", cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="JsonReader.cs"];
m38_66 [label="JsonToken.Date", span="283-283", cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="JsonReader.cs"];
m38_67 [label="JsonToken.String", span="284-284", cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="JsonReader.cs"];
m38_6 [label="_initialPath = initialPath", span="62-62", cluster="Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken, string)", file="JsonReader.cs"];
m38_125 [label="JTokenType.Bytes", span="275-275", cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JsonReader.cs"];
m38_81 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="JsonReader.cs"];
m38_32 [label="Exit Newtonsoft.Json.JsonReader.Skip()", span="218-218", cluster="Newtonsoft.Json.JsonReader.Skip()", file="JsonReader.cs"];
m38_33 [label="Entry Newtonsoft.Json.JsonReader.IsStartToken(Newtonsoft.Json.JsonToken)", span="341-341", cluster="Newtonsoft.Json.JsonReader.IsStartToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs"];
m38_40 [label="JsonToken.StartObject", span="250-250", cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="JsonReader.cs"];
m38_37 [label="Entry Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", span="244-244", cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="JsonReader.cs"];
m38_38 [label="_token = newToken", span="246-246", cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="JsonReader.cs"];
m38_39 [label=newToken, span="248-248", cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="JsonReader.cs"];
m38_41 [label="_currentState = State.ObjectStart", span="251-251", cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="JsonReader.cs"];
m38_42 [label="Push(JTokenType.Object)", span="252-252", cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="JsonReader.cs"];
m38_43 [label="JsonToken.StartArray", span="254-254", cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="JsonReader.cs"];
m38_102 [label="SetToken(JsonToken.StartArray)", span="240-240", cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JsonReader.cs"];
m38_123 [label="JTokenType.Raw", span="272-272", cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JsonReader.cs"];
m38_107 [label="JTokenType.Comment", span="248-248", cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JsonReader.cs"];
m38_122 [label="SetToken(JsonToken.Date, ((JValue)token).Value)", span="270-270", cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JsonReader.cs"];
m38_103 [label="JTokenType.Constructor", span="242-242", cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JsonReader.cs"];
m38_108 [label="SetToken(JsonToken.Comment, ((JValue)token).Value)", span="249-249", cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JsonReader.cs"];
m38_106 [label="SetToken(JsonToken.PropertyName, ((JProperty)token).Name)", span="246-246", cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JsonReader.cs"];
m38_121 [label="JTokenType.Date", span="269-269", cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JsonReader.cs"];
m38_104 [label="SetToken(JsonToken.StartConstructor, ((JConstructor)token).Name)", span="243-243", cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JsonReader.cs"];
m38_109 [label="JTokenType.Integer", span="251-251", cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JsonReader.cs"];
m38_105 [label="JTokenType.Property", span="245-245", cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JsonReader.cs"];
m38_120 [label="SetToken(JsonToken.Undefined, ((JValue)token).Value)", span="267-267", cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JsonReader.cs"];
m38_110 [label="SetToken(JsonToken.Integer, ((JValue)token).Value)", span="252-252", cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JsonReader.cs"];
m38_119 [label="JTokenType.Undefined", span="266-266", cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JsonReader.cs"];
m38_111 [label="JTokenType.Float", span="254-254", cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JsonReader.cs"];
m38_118 [label="SetToken(JsonToken.Null, ((JValue)token).Value)", span="264-264", cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JsonReader.cs"];
m38_112 [label="SetToken(JsonToken.Float, ((JValue)token).Value)", span="255-255", cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JsonReader.cs"];
m38_117 [label="JTokenType.Null", span="263-263", cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JsonReader.cs"];
m38_113 [label="JTokenType.String", span="257-257", cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JsonReader.cs"];
m38_116 [label="SetToken(JsonToken.Boolean, ((JValue)token).Value)", span="261-261", cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JsonReader.cs"];
m38_114 [label="SetToken(JsonToken.String, ((JValue)token).Value)", span="258-258", cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JsonReader.cs"];
m38_115 [label="JTokenType.Boolean", span="260-260", cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JsonReader.cs"];
m38_124 [label="SetToken(JsonToken.Raw, ((JValue)token).Value)", span="273-273", cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JsonReader.cs"];
m38_46 [label="JsonToken.StartConstructor", span="258-258", cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="JsonReader.cs"];
m38_98 [label="JTokenType.None", span="333-333", cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs"];
m38_126 [label=token, span="372-372", cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs"];
m38_128 [label="return JTokenType.Object;", span="375-375", cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs"];
m38_130 [label="return JTokenType.Array;", span="377-377", cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs"];
m38_132 [label="return JTokenType.Constructor;", span="379-379", cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs"];
m38_133 [label="throw new JsonReaderException(''Not a valid close JsonToken: '' + token);", span="381-381", cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs"];
m38_99 [label="_currentState = State.Finished", span="334-334", cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs"];
m38_101 [label="Exit Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", span="318-318", cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs"];
m38_127 [label="JsonToken.EndObject", span="374-374", cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs"];
m38_129 [label="JsonToken.EndArray", span="376-376", cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs"];
m38_131 [label="JsonToken.EndConstructor", span="378-378", cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs"];
m38_100 [label="throw new JsonReaderException(''While setting the reader state back to current object an unexpected JsonType was encountered: '' + currentObject);", span="337-337", cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs"];
m38_134 [label="Exit Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", span="370-370", cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs"];
m38_47 [label="_currentState = State.ConstructorStart", span="259-259", cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="JsonReader.cs"];
m38_48 [label="Push(JTokenType.Constructor)", span="260-260", cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="JsonReader.cs"];
m38_49 [label="JsonToken.EndObject", span="262-262", cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="JsonReader.cs"];
m38_50 [label="ValidateEnd(JsonToken.EndObject)", span="263-263", cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="JsonReader.cs"];
m38_15 [label="_stack.RemoveAt(_stack.Count - 1)", span="191-191", cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs"];
m38_63 [label="JsonToken.Float", span="280-280", cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="JsonReader.cs"];
m38_90 [label="JTokenType currentObject = Peek()", span="320-320", cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs"];
m38_93 [label="_currentState = State.Object", span="325-325", cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs"];
m38_94 [label="JTokenType.Array", span="327-327", cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs"];
m38_96 [label="JTokenType.Constructor", span="330-330", cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs"];
m38_91 [label=currentObject, span="322-322", cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs"];
m38_92 [label="JTokenType.Object", span="324-324", cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs"];
m38_95 [label="_currentState = State.Array", span="328-328", cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs"];
m38_97 [label="_currentState = State.Constructor", span="331-331", cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs"];
m38_142 [label="return false;", span="300-300", cluster="Newtonsoft.Json.Linq.JTokenReader.Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", file="JsonReader.cs"];
m38_143 [label="IJsonLineInfo info = _current", span="302-302", cluster="Newtonsoft.Json.Linq.JTokenReader.Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", file="JsonReader.cs"];
m38_144 [label="return (info != null && info.HasLineInfo());", span="303-303", cluster="Newtonsoft.Json.Linq.JTokenReader.Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", file="JsonReader.cs"];
m38_145 [label="Exit Newtonsoft.Json.Linq.JTokenReader.Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", span="297-297", cluster="Newtonsoft.Json.Linq.JTokenReader.Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", file="JsonReader.cs"];
m38_147 [label="Newtonsoft.Json.Linq.JTokenReader", span="", cluster="Newtonsoft.Json.JsonReader.Close()", file="JsonReader.cs"];
m38_69 [label="JsonToken.Bytes", span="286-286", cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="JsonReader.cs"];
m38_70 [label="_currentState = State.PostValue", span="287-287", cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="JsonReader.cs"];
m38_79 [label="Exit Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", span="244-244", cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="JsonReader.cs"];
m38_71 [label="JTokenType current = Peek()", span="291-291", cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="JsonReader.cs"];
m38_73 [label="Pop()", span="293-293", cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="JsonReader.cs"];
m38_75 [label="_value = value", span="297-297", cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="JsonReader.cs"];
m38_77 [label="_value = null", span="302-302", cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="JsonReader.cs"];
m38_72 [label="current == JTokenType.Property && _currentState == State.PostValue", span="292-292", cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="JsonReader.cs"];
m38_74 [label="value != null", span="295-295", cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="JsonReader.cs"];
m38_76 [label="_valueType = value.GetType()", span="298-298", cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="JsonReader.cs"];
m38_78 [label="_valueType = null", span="303-303", cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="JsonReader.cs"];
m38_135 [label="Entry Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", span="886-886", cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="JsonReader.cs"];
m38_28 [label="Entry Newtonsoft.Json.Linq.JTokenReader.ReadAsDateTimeOffset()", span="117-117", cluster="Newtonsoft.Json.Linq.JTokenReader.ReadAsDateTimeOffset()", file="JsonReader.cs"];
m38_29 [label="return ReadAsDateTimeOffsetInternal();", span="119-119", cluster="Newtonsoft.Json.Linq.JTokenReader.ReadAsDateTimeOffset()", file="JsonReader.cs"];
m38_30 [label="Exit Newtonsoft.Json.Linq.JTokenReader.ReadAsDateTimeOffset()", span="117-117", cluster="Newtonsoft.Json.Linq.JTokenReader.ReadAsDateTimeOffset()", file="JsonReader.cs"];
m38_19 [label="Exit Newtonsoft.Json.JsonReader.Pop()", span="188-188", cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs"];
m38_23 [label="Entry Newtonsoft.Json.JsonReader.ReadAsStringInternal()", span="728-728", cluster="Newtonsoft.Json.JsonReader.ReadAsStringInternal()", file="JsonReader.cs"];
m38_13 [label="Entry Newtonsoft.Json.JsonReader.Pop()", span="188-188", cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs"];
m38_14 [label="JTokenType value = Peek()", span="190-190", cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs"];
m38_148 [label="Newtonsoft.Json.JsonReader", span="", file="JsonReader.cs"];
m39_188 [label="Entry Newtonsoft.Json.Linq.JToken.DeepClone()", span="2082-2082", cluster="Newtonsoft.Json.Linq.JToken.DeepClone()", file="JsonSerializer.cs"];
m39_56 [label="currentToken = null", span="126-126", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ResolveReferences(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSerializer.cs"];
m39_57 [label="currentToken == null", span="129-129", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ResolveReferences(Newtonsoft.Json.Schema.JsonSchema)", color=green, community=0, file="JsonSerializer.cs"];
m39_58 [label="currentToken != null", span="133-133", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ResolveReferences(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSerializer.cs"];
m39_90 [label="throw new ArgumentNullException(''objectType'');", span="433-433", cluster="Newtonsoft.Json.JsonSerializer.HasMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type, out Newtonsoft.Json.JsonConverter)", file="JsonSerializer.cs"];
m39_43 [label="JsonSchema resolvedSchema = _resolver.GetSchema(reference)", span="104-104", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ResolveReferences(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSerializer.cs"];
m39_46 [label="string[] escapedParts = schema.DeferredReference.TrimStart('#').Split(new[] { '/' }, StringSplitOptions.RemoveEmptyEntries)", span="110-110", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ResolveReferences(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSerializer.cs"];
m39_45 [label=locationReference, span="108-108", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ResolveReferences(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSerializer.cs"];
m39_47 [label="JToken currentToken = _rootSchema", span="111-111", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ResolveReferences(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSerializer.cs"];
m39_44 [label="resolvedSchema == null", span="106-106", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ResolveReferences(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSerializer.cs"];
m39_48 [label=escapedParts, span="112-112", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ResolveReferences(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSerializer.cs"];
m39_67 [label="int i = 0", span="151-151", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ResolveReferences(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSerializer.cs"];
m39_68 [label="i < schema.Extends.Count", span="151-151", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ResolveReferences(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSerializer.cs"];
m39_69 [label="schema.Extends[i] = ResolveReferences(schema.Extends[i])", span="153-153", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ResolveReferences(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSerializer.cs"];
m39_70 [label="i++", span="151-151", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ResolveReferences(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSerializer.cs"];
m39_22 [label="jsonSerializer.DefaultValueHandling = settings.DefaultValueHandling", span="302-302", cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs"];
m39_50 [label="currentToken.Type == JTokenType.Object", span="116-116", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ResolveReferences(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSerializer.cs"];
m39_93 [label="i < converters.Count", span="437-437", cluster="Newtonsoft.Json.JsonSerializer.HasMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type, out Newtonsoft.Json.JsonConverter)", file="JsonSerializer.cs"];
m39_23 [label="jsonSerializer.ConstructorHandling = settings.ConstructorHandling", span="303-303", cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs"];
m39_24 [label="settings.Error != null", span="305-305", cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs"];
m39_25 [label="jsonSerializer.Error += settings.Error", span="306-306", cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs"];
m39_26 [label="settings.ContractResolver != null", span="308-308", cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs"];
m39_27 [label="jsonSerializer.ContractResolver = settings.ContractResolver", span="309-309", cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs"];
m39_28 [label="settings.ReferenceResolver != null", span="310-310", cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs"];
m39_29 [label="jsonSerializer.ReferenceResolver = settings.ReferenceResolver", span="311-311", cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs"];
m39_88 [label="Entry Newtonsoft.Json.JsonSerializer.HasMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type, out Newtonsoft.Json.JsonConverter)", span="430-430", cluster="Newtonsoft.Json.JsonSerializer.HasMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type, out Newtonsoft.Json.JsonConverter)", file="JsonSerializer.cs"];
m39_102 [label="JsonSchema deferredSchema = new JsonSchema()", span="199-199", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.BuildSchema(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_186 [label="Entry Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessAdditionalProperties(Newtonsoft.Json.Linq.JToken)", span="353-353", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessAdditionalProperties(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_207 [label="token.Type == JTokenType.Boolean", span="355-355", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessAdditionalProperties(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_208 [label="CurrentSchema.AllowAdditionalProperties = (bool)token", span="356-356", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessAdditionalProperties(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_209 [label="CurrentSchema.AdditionalProperties = BuildSchema(token)", span="358-358", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessAdditionalProperties(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_210 [label="Exit Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessAdditionalProperties(Newtonsoft.Json.Linq.JToken)", span="353-353", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessAdditionalProperties(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_61 [label="throw new JsonException(''Could not resolve schema reference '{0}'.''.FormatWith(CultureInfo.InvariantCulture, schema.DeferredReference));", span="138-138", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ResolveReferences(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSerializer.cs"];
m39_63 [label="schema.ReferencesResolved", span="144-144", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ResolveReferences(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSerializer.cs"];
m39_62 [label="schema = resolvedSchema", span="141-141", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ResolveReferences(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSerializer.cs"];
m39_64 [label="return schema;", span="145-145", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ResolveReferences(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSerializer.cs"];
m39_65 [label="schema.ReferencesResolved = true", span="147-147", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ResolveReferences(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSerializer.cs"];
m39_66 [label="schema.Extends != null", span="149-149", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ResolveReferences(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSerializer.cs"];
m39_120 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="JsonSerializer.cs"];
m39_34 [label="return Uri.UnescapeDataString(reference).Replace(''~1'', ''/'').Replace(''~0'', ''~'');", span="91-91", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.UnescapeReference(string)", file="JsonSerializer.cs"];
m39_119 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="JsonSerializer.cs"];
m39_184 [label="Entry Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessProperties(Newtonsoft.Json.Linq.JToken)", span="369-369", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessProperties(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_215 [label="IDictionary<string, JsonSchema> properties = new Dictionary<string, JsonSchema>()", span="371-371", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessProperties(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_216 [label="token.Type != JTokenType.Object", span="373-373", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessProperties(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_217 [label="throw JsonException.Create(token, token.Path, ''Expected Object token while parsing schema properties, got {0}.''.FormatWith(CultureInfo.InvariantCulture, token.Type));", span="374-374", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessProperties(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_218 [label=token, span="376-376", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessProperties(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_219 [label="properties.ContainsKey(propertyToken.Name)", span="378-378", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessProperties(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_221 [label="properties.Add(propertyToken.Name, BuildSchema(propertyToken.Value))", span="381-381", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessProperties(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_222 [label="return properties;", span="384-384", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessProperties(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_220 [label="throw new JsonException(''Property {0} has already been defined in schema.''.FormatWith(CultureInfo.InvariantCulture, propertyToken.Name));", span="379-379", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessProperties(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_223 [label="Exit Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessProperties(Newtonsoft.Json.Linq.JToken)", span="369-369", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessProperties(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_79 [label="schema.PatternProperties.ToList()", span="170-170", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ResolveReferences(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSerializer.cs"];
m39_49 [label="string part = UnescapeReference(escapedPart)", span="114-114", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ResolveReferences(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSerializer.cs"];
m39_35 [label="Exit Newtonsoft.Json.Schema.JsonSchemaBuilder.UnescapeReference(string)", span="89-89", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.UnescapeReference(string)", file="JsonSerializer.cs"];
m39_80 [label="schema.PatternProperties[patternProperty.Key] = ResolveReferences(patternProperty.Value)", span="172-172", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ResolveReferences(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSerializer.cs"];
m39_40 [label="bool locationReference = (reference.StartsWith(''#'', StringComparison.Ordinal))", span="100-100", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ResolveReferences(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSerializer.cs"];
m39_41 [label=locationReference, span="101-101", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ResolveReferences(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSerializer.cs"];
m39_42 [label="reference = UnescapeReference(reference)", span="102-102", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ResolveReferences(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSerializer.cs"];
m39_15 [label="jsonSerializer.Converters.AddRange(settings.Converters)", span="294-294", cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs"];
m39_16 [label="jsonSerializer.TypeNameHandling = settings.TypeNameHandling", span="296-296", cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", color=red, community=0, file="JsonSerializer.cs"];
m39_17 [label="jsonSerializer.PreserveReferencesHandling = settings.PreserveReferencesHandling", span="297-297", cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", color=red, community=0, file="JsonSerializer.cs"];
m39_19 [label="jsonSerializer.MissingMemberHandling = settings.MissingMemberHandling", span="299-299", cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs"];
m39_18 [label="jsonSerializer.ReferenceLoopHandling = settings.ReferenceLoopHandling", span="298-298", cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", color=red, community=0, file="JsonSerializer.cs"];
m39_20 [label="jsonSerializer.ObjectCreationHandling = settings.ObjectCreationHandling", span="300-300", cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs"];
m39_185 [label="Entry Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessItems(Newtonsoft.Json.Linq.JToken)", span="387-387", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessItems(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_225 [label="CurrentSchema.Items = new List<JsonSchema>()", span="389-389", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessItems(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_226 [label="token.Type", span="391-391", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessItems(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_228 [label="CurrentSchema.Items.Add(BuildSchema(token))", span="394-394", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessItems(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_232 [label=token, span="399-399", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessItems(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_234 [label="throw JsonException.Create(token, token.Path, ''Expected array or JSON schema object, got {0}.''.FormatWith(CultureInfo.InvariantCulture, token.Type));", span="405-405", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessItems(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_227 [label="JTokenType.Object", span="393-393", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessItems(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_230 [label="JTokenType.Array", span="397-397", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessItems(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_229 [label="CurrentSchema.PositionalItemsValidation = false", span="395-395", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessItems(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_231 [label="CurrentSchema.PositionalItemsValidation = true", span="398-398", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessItems(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_233 [label="CurrentSchema.Items.Add(BuildSchema(schemaToken))", span="401-401", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessItems(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_235 [label="Exit Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessItems(Newtonsoft.Json.Linq.JToken)", span="387-387", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessItems(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_5 [label="_objectCreationHandling = JsonSerializerSettings.DefaultObjectCreationHandling", span="275-275", cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonSerializer.cs"];
m39_257 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="JsonSerializer.cs"];
m39_30 [label="settings.Binder != null", span="312-312", cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs"];
m39_104 [label="return deferredSchema;", span="202-202", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.BuildSchema(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_105 [label="string location = token.Path.Replace(''.'', ''/'').Replace(''['', ''/'').Replace('']'', string.Empty)", span="205-205", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.BuildSchema(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_107 [label="location = ''/'' + location", span="207-207", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.BuildSchema(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_106 [label="!string.IsNullOrEmpty(location)", span="206-206", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.BuildSchema(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_108 [label="location = ''#'' + location", span="208-208", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.BuildSchema(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_103 [label="deferredSchema.DeferredReference = (string)referenceToken", span="200-200", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.BuildSchema(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_189 [label="Entry Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessEnum(Newtonsoft.Json.Linq.JToken)", span="340-340", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessEnum(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_201 [label="token.Type != JTokenType.Array", span="342-342", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessEnum(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_202 [label="throw JsonException.Create(token, token.Path, ''Expected Array token while parsing enum values, got {0}.''.FormatWith(CultureInfo.InvariantCulture, token.Type));", span="343-343", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessEnum(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_204 [label=token, span="347-347", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessEnum(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_203 [label="CurrentSchema.Enum = new List<JToken>()", span="345-345", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessEnum(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_205 [label="CurrentSchema.Enum.Add(enumValue.DeepClone())", span="349-349", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessEnum(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_206 [label="Exit Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessEnum(Newtonsoft.Json.Linq.JToken)", span="340-340", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessEnum(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_36 [label="Entry Newtonsoft.Json.JsonSerializer.Populate(System.IO.TextReader, object)", span="324-324", cluster="Newtonsoft.Json.JsonSerializer.Populate(System.IO.TextReader, object)", file="JsonSerializer.cs"];
m39_13 [label="settings != null", span="291-291", cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs"];
m39_190 [label="Entry Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessExtends(Newtonsoft.Json.Linq.JToken)", span="318-318", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessExtends(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_191 [label="IList<JsonSchema> schemas = new List<JsonSchema>()", span="320-320", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessExtends(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_192 [label="token.Type == JTokenType.Array", span="322-322", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessExtends(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_193 [label=token, span="324-324", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessExtends(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_195 [label="JsonSchema schema = BuildSchema(token)", span="331-331", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessExtends(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_194 [label="schemas.Add(BuildSchema(schemaObject))", span="326-326", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessExtends(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_197 [label="schemas.Add(schema)", span="333-333", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessExtends(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_198 [label="schemas.Count > 0", span="336-336", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessExtends(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_199 [label="CurrentSchema.Extends = schemas", span="337-337", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessExtends(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_196 [label="schema != null", span="332-332", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessExtends(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_200 [label="Exit Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessExtends(Newtonsoft.Json.Linq.JToken)", span="318-318", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessExtends(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_109 [label="JsonSchema existingSchema", span="210-210", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.BuildSchema(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_51 [label="currentToken = currentToken[part]", span="118-118", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ResolveReferences(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSerializer.cs"];
m39_92 [label="int i = 0", span="437-437", cluster="Newtonsoft.Json.JsonSerializer.HasMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type, out Newtonsoft.Json.JsonConverter)", file="JsonSerializer.cs"];
m39_224 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="JsonSerializer.cs"];
m39_254 [label="Entry Newtonsoft.Json.Schema.JsonSchemaBuilder.MapType(Newtonsoft.Json.Schema.JsonSchemaType)", span="442-442", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.MapType(Newtonsoft.Json.Schema.JsonSchemaType)", file="JsonSerializer.cs"];
m39_255 [label="return JsonSchemaConstants.JsonSchemaTypeMapping.Single(kv => kv.Value == type).Key;", span="444-444", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.MapType(Newtonsoft.Json.Schema.JsonSchemaType)", file="JsonSerializer.cs"];
m39_256 [label="Exit Newtonsoft.Json.Schema.JsonSchemaBuilder.MapType(Newtonsoft.Json.Schema.JsonSchemaType)", span="442-442", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.MapType(Newtonsoft.Json.Schema.JsonSchemaType)", file="JsonSerializer.cs"];
m39_33 [label="Exit Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", span="287-287", cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs"];
m39_94 [label="JsonConverter converter = converters[i]", span="439-439", cluster="Newtonsoft.Json.JsonSerializer.HasMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type, out Newtonsoft.Json.JsonConverter)", file="JsonSerializer.cs"];
m39_52 [label="currentToken.Type == JTokenType.Array || currentToken.Type == JTokenType.Constructor", span="120-120", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ResolveReferences(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSerializer.cs"];
m39_53 [label="int index", span="122-122", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ResolveReferences(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSerializer.cs"];
m39_54 [label="int.TryParse(part, out index) && index >= 0 && index < currentToken.Count()", span="123-123", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ResolveReferences(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSerializer.cs"];
m39_118 [label="Entry Newtonsoft.Json.Schema.JsonSchema.JsonSchema()", span="252-252", cluster="Newtonsoft.Json.Schema.JsonSchema.JsonSchema()", file="JsonSerializer.cs"];
m39_39 [label="string reference = schema.DeferredReference", span="98-98", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ResolveReferences(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSerializer.cs"];
m39_248 [label="Entry Newtonsoft.Json.Schema.JsonSchemaBuilder.MapType(string)", span="433-433", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.MapType(string)", file="JsonSerializer.cs"];
m39_249 [label="JsonSchemaType mappedType", span="435-435", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.MapType(string)", file="JsonSerializer.cs"];
m39_250 [label="!JsonSchemaConstants.JsonSchemaTypeMapping.TryGetValue(type, out mappedType)", span="436-436", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.MapType(string)", file="JsonSerializer.cs"];
m39_251 [label="throw new JsonException(''Invalid JSON schema type: {0}''.FormatWith(CultureInfo.InvariantCulture, type));", span="437-437", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.MapType(string)", file="JsonSerializer.cs"];
m39_252 [label="return mappedType;", span="439-439", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.MapType(string)", file="JsonSerializer.cs"];
m39_253 [label="Exit Newtonsoft.Json.Schema.JsonSchemaBuilder.MapType(string)", span="433-433", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.MapType(string)", file="JsonSerializer.cs"];
m39_117 [label="Entry Newtonsoft.Json.Linq.JObject.TryGetValue(string, out Newtonsoft.Json.Linq.JToken)", span="514-514", cluster="Newtonsoft.Json.Linq.JObject.TryGetValue(string, out Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_55 [label="currentToken = currentToken[index]", span="124-124", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ResolveReferences(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSerializer.cs"];
m39_59 [label="resolvedSchema = BuildSchema(currentToken)", span="134-134", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ResolveReferences(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSerializer.cs"];
m39_60 [label="resolvedSchema == null", span="137-137", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ResolveReferences(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSerializer.cs"];
m39_0 [label="Entry Newtonsoft.Json.Schema.JsonSchemaBuilder.JsonSchemaBuilder(Newtonsoft.Json.Schema.JsonSchemaResolver)", span="47-47", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.JsonSchemaBuilder(Newtonsoft.Json.Schema.JsonSchemaResolver)", file="JsonSerializer.cs"];
m39_1 [label="_stack = new List<JsonSchema>()", span="49-49", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.JsonSchemaBuilder(Newtonsoft.Json.Schema.JsonSchemaResolver)", file="JsonSerializer.cs"];
m39_2 [label="_documentSchemas = new Dictionary<string, JsonSchema>()", span="50-50", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.JsonSchemaBuilder(Newtonsoft.Json.Schema.JsonSchemaResolver)", file="JsonSerializer.cs"];
m39_3 [label="_resolver = resolver", span="51-51", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.JsonSchemaBuilder(Newtonsoft.Json.Schema.JsonSchemaResolver)", file="JsonSerializer.cs"];
m39_4 [label="Exit Newtonsoft.Json.Schema.JsonSchemaBuilder.JsonSchemaBuilder(Newtonsoft.Json.Schema.JsonSchemaResolver)", span="47-47", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.JsonSchemaBuilder(Newtonsoft.Json.Schema.JsonSchemaResolver)", file="JsonSerializer.cs"];
m39_6 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JsonSerializer.cs"];
m39_7 [label="Entry Newtonsoft.Json.Schema.JsonSchemaBuilder.Push(Newtonsoft.Json.Schema.JsonSchema)", span="54-54", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.Push(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSerializer.cs"];
m39_8 [label="_currentSchema = value", span="56-56", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.Push(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSerializer.cs", color=red, community=0];
m39_9 [label="_stack.Add(value)", span="57-57", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.Push(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSerializer.cs", color=red, community=0];
m39_10 [label="_resolver.LoadedSchemas.Add(value)", span="58-58", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.Push(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSerializer.cs", color=red, community=0];
m39_258 [label="Entry lambda expression", span="444-444", cluster="lambda expression", file="JsonSerializer.cs"];
m39_259 [label="kv.Value == type", span="444-444", cluster="lambda expression", file="JsonSerializer.cs"];
m39_260 [label="Exit lambda expression", span="444-444", cluster="lambda expression", file="JsonSerializer.cs"];
m39_81 [label="schema.Properties != null", span="176-176", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ResolveReferences(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSerializer.cs"];
m39_82 [label="schema.Properties.ToList()", span="178-178", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ResolveReferences(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSerializer.cs"];
m39_83 [label="schema.Properties[property.Key] = ResolveReferences(property.Value)", span="180-180", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ResolveReferences(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSerializer.cs"];
m39_84 [label="schema.AdditionalProperties != null", span="184-184", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ResolveReferences(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSerializer.cs"];
m39_86 [label="return schema;", span="187-187", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ResolveReferences(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSerializer.cs"];
m39_85 [label="schema.AdditionalProperties = ResolveReferences(schema.AdditionalProperties)", span="185-185", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ResolveReferences(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSerializer.cs"];
m39_87 [label="Exit Newtonsoft.Json.Schema.JsonSchemaBuilder.ResolveReferences(Newtonsoft.Json.Schema.JsonSchema)", span="94-94", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ResolveReferences(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSerializer.cs"];
m39_14 [label="!CollectionUtils.IsNullOrEmpty(settings.Converters)", span="293-293", cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs"];
m39_187 [label="Entry Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessAdditionalItems(Newtonsoft.Json.Linq.JToken)", span="361-361", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessAdditionalItems(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_211 [label="token.Type == JTokenType.Boolean", span="363-363", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessAdditionalItems(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_212 [label="CurrentSchema.AllowAdditionalItems = (bool)token", span="364-364", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessAdditionalItems(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_213 [label="CurrentSchema.AdditionalItems = BuildSchema(token)", span="366-366", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessAdditionalItems(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_214 [label="Exit Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessAdditionalItems(Newtonsoft.Json.Linq.JToken)", span="361-361", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessAdditionalItems(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_89 [label="objectType == null", span="432-432", cluster="Newtonsoft.Json.JsonSerializer.HasMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type, out Newtonsoft.Json.JsonConverter)", file="JsonSerializer.cs"];
m39_74 [label="schema.Items[i] = ResolveReferences(schema.Items[i])", span="161-161", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ResolveReferences(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSerializer.cs"];
m39_76 [label="schema.AdditionalItems != null", span="165-165", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ResolveReferences(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSerializer.cs"];
m39_75 [label="i++", span="159-159", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ResolveReferences(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSerializer.cs"];
m39_77 [label="schema.AdditionalItems = ResolveReferences(schema.AdditionalItems)", span="166-166", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ResolveReferences(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSerializer.cs"];
m39_78 [label="schema.PatternProperties != null", span="168-168", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ResolveReferences(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSerializer.cs"];
m39_116 [label="Entry Newtonsoft.Json.JsonException.Create(Newtonsoft.Json.IJsonLineInfo, string, string)", span="84-84", cluster="Newtonsoft.Json.JsonException.Create(Newtonsoft.Json.IJsonLineInfo, string, string)", file="JsonSerializer.cs"];
m39_37 [label="Entry string.Replace(string, string)", span="0-0", cluster="string.Replace(string, string)", file="JsonSerializer.cs"];
m39_38 [label="schema.DeferredReference != null", span="96-96", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ResolveReferences(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSerializer.cs"];
m39_91 [label="converters != null", span="435-435", cluster="Newtonsoft.Json.JsonSerializer.HasMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type, out Newtonsoft.Json.JsonConverter)", file="JsonSerializer.cs"];
m39_11 [label="Entry Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", span="287-287", cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", color=red, community=0, file="JsonSerializer.cs"];
m39_12 [label="JsonSerializer jsonSerializer = new JsonSerializer()", span="289-289", cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs"];
m39_96 [label="matchingConverter = converter", span="443-443", cluster="Newtonsoft.Json.JsonSerializer.HasMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type, out Newtonsoft.Json.JsonConverter)", file="JsonSerializer.cs"];
m39_183 [label="Entry Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessType(Newtonsoft.Json.Linq.JToken)", span="409-409", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessType(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_236 [label="token.Type", span="411-411", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessType(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_239 [label=token, span="417-417", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessType(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_241 [label="throw JsonException.Create(typeToken, typeToken.Path, ''Exception JSON schema type string token, got {0}.''.FormatWith(CultureInfo.InvariantCulture, token.Type));", span="420-420", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessType(Newtonsoft.Json.Linq.JToken)", color=red, community=0, file="JsonSerializer.cs"];
m39_245 [label="return MapType((string)token);", span="427-427", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessType(Newtonsoft.Json.Linq.JToken)", color=red, community=0, file="JsonSerializer.cs"];
m39_246 [label="throw JsonException.Create(token, token.Path, ''Expected array or JSON schema type string token, got {0}.''.FormatWith(CultureInfo.InvariantCulture, token.Type));", span="429-429", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessType(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_237 [label="JTokenType.Array", span="413-413", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessType(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_244 [label="JTokenType.String", span="426-426", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessType(Newtonsoft.Json.Linq.JToken)", color=red, community=0, file="JsonSerializer.cs"];
m39_238 [label="JsonSchemaType? type = JsonSchemaType.None", span="415-415", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessType(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_242 [label="type = type | MapType((string)typeToken)", span="422-422", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessType(Newtonsoft.Json.Linq.JToken)", color=red, community=0, file="JsonSerializer.cs"];
m39_243 [label="return type;", span="425-425", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessType(Newtonsoft.Json.Linq.JToken)", color=red, community=0, file="JsonSerializer.cs"];
m39_240 [label="typeToken.Type != JTokenType.String", span="419-419", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessType(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_247 [label="Exit Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessType(Newtonsoft.Json.Linq.JToken)", span="409-409", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessType(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_121 [label="Entry Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", span="221-221", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JsonSerializer.cs"];
m39_122 [label=schemaObject, span="223-223", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JsonSerializer.cs"];
m39_123 [label="property.Key", span="225-225", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JsonSerializer.cs"];
m39_124 [label="JsonSchemaConstants.TypePropertyName", span="227-227", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JsonSerializer.cs"];
m39_126 [label="JsonSchemaConstants.IdPropertyName", span="230-230", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JsonSerializer.cs"];
m39_128 [label="JsonSchemaConstants.TitlePropertyName", span="233-233", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JsonSerializer.cs"];
m39_130 [label="JsonSchemaConstants.DescriptionPropertyName", span="236-236", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JsonSerializer.cs"];
m39_132 [label="JsonSchemaConstants.PropertiesPropertyName", span="239-239", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JsonSerializer.cs"];
m39_134 [label="JsonSchemaConstants.ItemsPropertyName", span="242-242", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JsonSerializer.cs"];
m39_136 [label="JsonSchemaConstants.AdditionalPropertiesPropertyName", span="245-245", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JsonSerializer.cs"];
m39_138 [label="JsonSchemaConstants.AdditionalItemsPropertyName", span="248-248", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JsonSerializer.cs"];
m39_140 [label="JsonSchemaConstants.PatternPropertiesPropertyName", span="251-251", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JsonSerializer.cs"];
m39_142 [label="JsonSchemaConstants.RequiredPropertyName", span="254-254", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JsonSerializer.cs"];
m39_144 [label="JsonSchemaConstants.RequiresPropertyName", span="257-257", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JsonSerializer.cs"];
m39_146 [label="JsonSchemaConstants.MinimumPropertyName", span="260-260", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JsonSerializer.cs"];
m39_148 [label="JsonSchemaConstants.MaximumPropertyName", span="263-263", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JsonSerializer.cs"];
m39_150 [label="JsonSchemaConstants.ExclusiveMinimumPropertyName", span="266-266", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JsonSerializer.cs"];
m39_152 [label="JsonSchemaConstants.ExclusiveMaximumPropertyName", span="269-269", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JsonSerializer.cs"];
m39_154 [label="JsonSchemaConstants.MaximumLengthPropertyName", span="272-272", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JsonSerializer.cs"];
m39_156 [label="JsonSchemaConstants.MinimumLengthPropertyName", span="275-275", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JsonSerializer.cs"];
m39_158 [label="JsonSchemaConstants.MaximumItemsPropertyName", span="278-278", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JsonSerializer.cs"];
m39_160 [label="JsonSchemaConstants.MinimumItemsPropertyName", span="281-281", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JsonSerializer.cs"];
m39_162 [label="JsonSchemaConstants.DivisibleByPropertyName", span="284-284", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JsonSerializer.cs"];
m39_164 [label="JsonSchemaConstants.DisallowPropertyName", span="287-287", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JsonSerializer.cs"];
m39_166 [label="JsonSchemaConstants.DefaultPropertyName", span="290-290", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JsonSerializer.cs"];
m39_168 [label="JsonSchemaConstants.HiddenPropertyName", span="293-293", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JsonSerializer.cs"];
m39_170 [label="JsonSchemaConstants.ReadOnlyPropertyName", span="296-296", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JsonSerializer.cs"];
m39_172 [label="JsonSchemaConstants.FormatPropertyName", span="299-299", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JsonSerializer.cs"];
m39_174 [label="JsonSchemaConstants.PatternPropertyName", span="302-302", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JsonSerializer.cs"];
m39_176 [label="JsonSchemaConstants.EnumPropertyName", span="305-305", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JsonSerializer.cs"];
m39_178 [label="JsonSchemaConstants.ExtendsPropertyName", span="308-308", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JsonSerializer.cs"];
m39_180 [label="JsonSchemaConstants.UniqueItemsPropertyName", span="311-311", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JsonSerializer.cs"];
m39_125 [label="CurrentSchema.Type = ProcessType(property.Value)", span="228-228", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JsonSerializer.cs"];
m39_127 [label="CurrentSchema.Id = (string)property.Value", span="231-231", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JsonSerializer.cs"];
m39_129 [label="CurrentSchema.Title = (string)property.Value", span="234-234", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JsonSerializer.cs"];
m39_131 [label="CurrentSchema.Description = (string)property.Value", span="237-237", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JsonSerializer.cs"];
m39_133 [label="CurrentSchema.Properties = ProcessProperties(property.Value)", span="240-240", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JsonSerializer.cs"];
m39_135 [label="ProcessItems(property.Value)", span="243-243", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JsonSerializer.cs"];
m39_137 [label="ProcessAdditionalProperties(property.Value)", span="246-246", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JsonSerializer.cs"];
m39_139 [label="ProcessAdditionalItems(property.Value)", span="249-249", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JsonSerializer.cs"];
m39_141 [label="CurrentSchema.PatternProperties = ProcessProperties(property.Value)", span="252-252", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JsonSerializer.cs"];
m39_143 [label="CurrentSchema.Required = (bool)property.Value", span="255-255", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JsonSerializer.cs"];
m39_145 [label="CurrentSchema.Requires = (string)property.Value", span="258-258", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JsonSerializer.cs"];
m39_147 [label="CurrentSchema.Minimum = (double)property.Value", span="261-261", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JsonSerializer.cs"];
m39_149 [label="CurrentSchema.Maximum = (double)property.Value", span="264-264", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JsonSerializer.cs"];
m39_151 [label="CurrentSchema.ExclusiveMinimum = (bool)property.Value", span="267-267", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JsonSerializer.cs"];
m39_153 [label="CurrentSchema.ExclusiveMaximum = (bool)property.Value", span="270-270", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JsonSerializer.cs"];
m39_155 [label="CurrentSchema.MaximumLength = (int)property.Value", span="273-273", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JsonSerializer.cs"];
m39_157 [label="CurrentSchema.MinimumLength = (int)property.Value", span="276-276", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JsonSerializer.cs"];
m39_159 [label="CurrentSchema.MaximumItems = (int)property.Value", span="279-279", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JsonSerializer.cs"];
m39_161 [label="CurrentSchema.MinimumItems = (int)property.Value", span="282-282", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JsonSerializer.cs"];
m39_163 [label="CurrentSchema.DivisibleBy = (double)property.Value", span="285-285", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JsonSerializer.cs"];
m39_165 [label="CurrentSchema.Disallow = ProcessType(property.Value)", span="288-288", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JsonSerializer.cs"];
m39_167 [label="CurrentSchema.Default = property.Value.DeepClone()", span="291-291", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JsonSerializer.cs"];
m39_169 [label="CurrentSchema.Hidden = (bool)property.Value", span="294-294", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JsonSerializer.cs"];
m39_171 [label="CurrentSchema.ReadOnly = (bool)property.Value", span="297-297", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JsonSerializer.cs"];
m39_173 [label="CurrentSchema.Format = (string)property.Value", span="300-300", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JsonSerializer.cs"];
m39_175 [label="CurrentSchema.Pattern = (string)property.Value", span="303-303", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JsonSerializer.cs"];
m39_177 [label="ProcessEnum(property.Value)", span="306-306", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JsonSerializer.cs"];
m39_179 [label="ProcessExtends(property.Value)", span="309-309", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JsonSerializer.cs"];
m39_181 [label="CurrentSchema.UniqueItems = (bool)property.Value", span="312-312", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JsonSerializer.cs"];
m39_182 [label="Exit Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", span="221-221", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JsonSerializer.cs"];
m39_32 [label="return jsonSerializer;", span="316-316", cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs"];
m39_71 [label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="407-407", cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializer.cs"];
m39_73 [label="Exit Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="407-407", cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializer.cs"];
m39_72 [label="SerializeInternal(jsonWriter, value)", span="409-409", cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializer.cs"];
m39_95 [label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47", cluster="string.FormatWith(System.IFormatProvider, object)", file="JsonSerializer.cs"];
m39_99 [label="throw JsonException.Create(token, token.Path, ''Expected object while parsing schema object, got {0}.''.FormatWith(CultureInfo.InvariantCulture, token.Type));", span="194-194", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.BuildSchema(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_97 [label="JObject schemaObject = token as JObject", span="192-192", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.BuildSchema(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_100 [label="JToken referenceToken", span="196-196", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.BuildSchema(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_98 [label="schemaObject == null", span="193-193", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.BuildSchema(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_101 [label="schemaObject.TryGetValue(JsonTypeReflector.RefPropertyName, out referenceToken)", span="197-197", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.BuildSchema(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_21 [label="Entry System.Collections.Generic.IList<T>.RemoveAt(int)", span="0-0", cluster="System.Collections.Generic.IList<T>.RemoveAt(int)", file="JsonSerializer.cs"];
m39_31 [label="Entry Newtonsoft.Json.Schema.JsonSchemaBuilder.BuildSchema(Newtonsoft.Json.Linq.JToken)", span="190-190", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.BuildSchema(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_113 [label="ProcessSchemaProperties(schemaObject)", span="216-216", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.BuildSchema(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_110 [label="Newtonsoft.Json.JsonSerializer", span="", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.BuildSchema(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_112 [label="Push(new JsonSchema { Location = location })", span="214-214", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.BuildSchema(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_111 [label="return existingSchema;", span="212-212", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.BuildSchema(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_114 [label="return Pop();", span="218-218", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.BuildSchema(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_115 [label="Exit Newtonsoft.Json.Schema.JsonSchemaBuilder.BuildSchema(Newtonsoft.Json.Linq.JToken)", span="190-190", cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.BuildSchema(Newtonsoft.Json.Linq.JToken)", file="JsonSerializer.cs"];
m39_261 [label="Newtonsoft.Json.Schema.JsonSchemaBuilder", span="", file="JsonSerializer.cs"];
m39_262 [label="Newtonsoft.Json.Schema.JsonSchemaType", span="", file="JsonSerializer.cs"];
m41_48 [label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", span="82-82", cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", file="JsonSerializerInternalWriter.cs"];
m41_52 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", span="600-600", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", file="JsonSerializerInternalWriter.cs"];
m41_53 [label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.FormatValueForPrint(object)", span="138-138", cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.FormatValueForPrint(object)", file="JsonSerializerInternalWriter.cs"];
m41_50 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()", file="JsonSerializerInternalWriter.cs"];
m41_29 [label="Entry Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="123-123", cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalWriter.cs"];
m41_30 [label="reader.TokenType == JsonToken.Null", span="125-125", cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=red, community=0, file="JsonSerializerInternalWriter.cs"];
m41_31 [label="!ReflectionUtils.IsNullableType(objectType)", span="127-127", cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalWriter.cs"];
m41_32 [label="throw JsonSerializationException.Create(reader, ''Cannot convert null value to {0}.''.FormatWith(CultureInfo.InvariantCulture, objectType));", span="129-129", cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalWriter.cs"];
m41_34 [label="bool isNullable = ReflectionUtils.IsNullableType(objectType)", span="135-135", cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalWriter.cs"];
m41_35 [label="Type t = isNullable ? Nullable.GetUnderlyingType(objectType) : objectType", span="136-136", cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalWriter.cs"];
m41_36 [label="reader.TokenType == JsonToken.String", span="140-140", cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalWriter.cs"];
m41_37 [label="string enumText = reader.Value.ToString()", span="142-142", cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalWriter.cs"];
m41_39 [label="reader.TokenType == JsonToken.Integer", span="147-147", cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=red, community=0, file="JsonSerializerInternalWriter.cs"];
m41_41 [label="throw JsonSerializationException.Create(reader, ''Integer value {0} is not allowed.''.FormatWith(CultureInfo.InvariantCulture, reader.Value));", span="151-151", cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalWriter.cs"];
m41_42 [label="return ConvertUtils.ConvertOrCast(reader.Value, CultureInfo.InvariantCulture, t);", span="154-154", cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalWriter.cs"];
m41_44 [label="throw JsonSerializationException.Create(reader, ''Error converting value {0} to type '{1}'.''.FormatWith(CultureInfo.InvariantCulture, MiscellaneousUtils.FormatValueForPrint(reader.Value), objectType), ex);", span="159-159", cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalWriter.cs"];
m41_45 [label="throw JsonSerializationException.Create(reader, ''Unexpected token {0} when parsing enum.''.FormatWith(CultureInfo.InvariantCulture, reader.TokenType));", span="163-163", cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalWriter.cs"];
m41_33 [label="return null;", span="132-132", cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalWriter.cs"];
m41_38 [label="return EnumUtils.ParseEnumName(enumText, isNullable, !AllowIntegerValues, t);", span="144-144", cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=red, community=0, file="JsonSerializerInternalWriter.cs"];
m41_40 [label="!AllowIntegerValues", span="149-149", cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalWriter.cs"];
m41_43 [label=Exception, span="157-157", cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalWriter.cs"];
m41_46 [label="Exit Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="123-123", cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalWriter.cs"];
m41_22 [label="Entry char.IsNumber(char)", span="0-0", cluster="char.IsNumber(char)", file="JsonSerializerInternalWriter.cs"];
m41_3 [label="Entry Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter(bool)", span="71-71", cluster="Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter(bool)", file="JsonSerializerInternalWriter.cs"];
m41_4 [label="CamelCaseText = camelCaseText", span="74-74", cluster="Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter(bool)", color=red, community=0, file="JsonSerializerInternalWriter.cs"];
m41_5 [label="Exit Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter(bool)", span="71-71", cluster="Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter(bool)", file="JsonSerializerInternalWriter.cs"];
m41_24 [label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", span="92-92", cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", file="JsonSerializerInternalWriter.cs"];
m41_60 [label="Entry System.Type.IsEnum()", span="189-189", cluster="System.Type.IsEnum()", file="JsonSerializerInternalWriter.cs"];
m41_20 [label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="907-907", cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="JsonSerializerInternalWriter.cs"];
m41_0 [label="Entry Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter()", span="62-62", cluster="Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter()", file="JsonSerializerInternalWriter.cs"];
m41_1 [label="AllowIntegerValues = true", span="64-64", cluster="Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter()", file="JsonSerializerInternalWriter.cs"];
m41_2 [label="Exit Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter()", span="62-62", cluster="Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter()", file="JsonSerializerInternalWriter.cs"];
m41_6 [label="Entry Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="83-83", cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalWriter.cs"];
m41_7 [label="value == null", span="85-85", cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalWriter.cs"];
m41_8 [label="writer.WriteNull()", span="87-87", cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalWriter.cs"];
m41_10 [label="Enum e = (Enum)value", span="91-91", cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalWriter.cs"];
m41_14 [label="throw JsonSerializationException.Create(null, writer.ContainerPath, ''Integer value {0} is not allowed.''.FormatWith(CultureInfo.InvariantCulture, enumName), null);", span="99-99", cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalWriter.cs"];
m41_15 [label="writer.WriteValue(value)", span="103-103", cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", color=red, community=0, file="JsonSerializerInternalWriter.cs"];
m41_18 [label="writer.WriteValue(finalName)", span="111-111", cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalWriter.cs"];
m41_9 [label="return;", span="88-88", cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", color=red, community=0, file="JsonSerializerInternalWriter.cs"];
m41_11 [label="string enumName = e.ToString(''G'')", span="93-93", cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalWriter.cs"];
m41_16 [label="Type enumType = e.GetType()", span="107-107", cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalWriter.cs"];
m41_12 [label="char.IsNumber(enumName[0]) || enumName[0] == '-'", span="95-95", cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalWriter.cs"];
m41_17 [label="string finalName = EnumUtils.ToEnumName(enumType, enumName, CamelCaseText)", span="109-109", cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalWriter.cs"];
m41_13 [label="!AllowIntegerValues", span="97-97", cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalWriter.cs"];
m41_19 [label="Exit Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="83-83", cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalWriter.cs"];
m41_54 [label="Entry string.FormatWith(System.IFormatProvider, object, object)", span="52-52", cluster="string.FormatWith(System.IFormatProvider, object, object)", file="JsonSerializerInternalWriter.cs"];
m41_25 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(object)", span="1424-1424", cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonSerializerInternalWriter.cs"];
m41_47 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", span="263-263", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", file="JsonSerializerInternalWriter.cs"];
m41_49 [label="Entry System.Nullable.GetUnderlyingType(System.Type)", span="0-0", cluster="System.Nullable.GetUnderlyingType(System.Type)", file="JsonSerializerInternalWriter.cs"];
m41_51 [label="Entry Newtonsoft.Json.Utilities.EnumUtils.ParseEnumName(string, bool, bool, System.Type)", span="187-187", cluster="Newtonsoft.Json.Utilities.EnumUtils.ParseEnumName(string, bool, bool, System.Type)", file="JsonSerializerInternalWriter.cs"];
m41_28 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="945-945", cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="JsonSerializerInternalWriter.cs"];
m41_26 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="JsonSerializerInternalWriter.cs"];
m41_21 [label="Entry System.Enum.ToString(string)", span="0-0", cluster="System.Enum.ToString(string)", file="JsonSerializerInternalWriter.cs"];
m41_23 [label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47", cluster="string.FormatWith(System.IFormatProvider, object)", file="JsonSerializerInternalWriter.cs"];
m41_27 [label="Entry Newtonsoft.Json.Utilities.EnumUtils.ToEnumName(System.Type, string, bool)", span="233-233", cluster="Newtonsoft.Json.Utilities.EnumUtils.ToEnumName(System.Type, string, bool)", file="JsonSerializerInternalWriter.cs"];
m41_55 [label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", span="87-87", cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", file="JsonSerializerInternalWriter.cs"];
m41_56 [label="Entry Newtonsoft.Json.Converters.StringEnumConverter.CanConvert(System.Type)", span="173-173", cluster="Newtonsoft.Json.Converters.StringEnumConverter.CanConvert(System.Type)", file="JsonSerializerInternalWriter.cs"];
m41_57 [label="Type t = (ReflectionUtils.IsNullableType(objectType))\r\n                ? Nullable.GetUnderlyingType(objectType)\r\n                : objectType", span="175-177", cluster="Newtonsoft.Json.Converters.StringEnumConverter.CanConvert(System.Type)", color=red, community=0, file="JsonSerializerInternalWriter.cs"];
m41_58 [label="return t.IsEnum();", span="179-179", cluster="Newtonsoft.Json.Converters.StringEnumConverter.CanConvert(System.Type)", file="JsonSerializerInternalWriter.cs"];
m41_59 [label="Exit Newtonsoft.Json.Converters.StringEnumConverter.CanConvert(System.Type)", span="173-173", cluster="Newtonsoft.Json.Converters.StringEnumConverter.CanConvert(System.Type)", file="JsonSerializerInternalWriter.cs"];
m41_61 [label="Newtonsoft.Json.Converters.StringEnumConverter", span="", file="JsonSerializerInternalWriter.cs"];
m42_39 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.Equals(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)", span="270-270", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.Equals(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)", file="JsonSerializerTest.cs"];
m42_40 [label="return (_initialType == other._initialType && _targetType == other._targetType);", span="272-272", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.Equals(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)", file="JsonSerializerTest.cs"];
m42_41 [label="Exit Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.Equals(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)", span="270-270", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.Equals(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)", file="JsonSerializerTest.cs"];
m42_0 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Linq.QueryJsonLinq.Example()", span="10-10", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.QueryJsonLinq.Example()", file="JsonSerializerTest.cs"];
m42_1 [label="string json = @''{\r\n              'channel': {\r\n                'title': 'James Newton-King',\r\n                'link': 'http://james.newtonking.com',\r\n                'description': 'James Newton-King\'s blog.',\r\n                'item': [\r\n                  {\r\n                    'title': 'Json.NET 1.3 + New license + Now on CodePlex',\r\n                    'description': 'Annoucing the release of Json.NET 1.3, the MIT license and the source on CodePlex',\r\n                    'link': 'http://james.newtonking.com/projects/json-net.aspx',\r\n                    'category': [\r\n                      'Json.NET',\r\n                      'CodePlex'\r\n                    ]\r\n                  },\r\n                  {\r\n                    'title': 'LINQ to JSON beta',\r\n                    'description': 'Annoucing LINQ to JSON',\r\n                    'link': 'http://james.newtonking.com/projects/json-net.aspx',\r\n                    'category': [\r\n                      'Json.NET',\r\n                      'LINQ'\r\n                    ]\r\n                  }\r\n                ]\r\n              }\r\n            }''", span="13-39", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.QueryJsonLinq.Example()", file="JsonSerializerTest.cs"];
m42_2 [label="JObject rss = JObject.Parse(json)", span="41-41", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.QueryJsonLinq.Example()", file="JsonSerializerTest.cs"];
m42_3 [label="var postTitles =\r\n                from p in rss[''channel''][''item'']\r\n                select (string)p[''title'']", span="43-45", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.QueryJsonLinq.Example()", file="JsonSerializerTest.cs"];
m42_6 [label="Exit Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(object)", span="139-139", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(object)", file="JsonSerializerTest.cs"];
m42_4 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(object)", span="139-139", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(object)", file="JsonSerializerTest.cs"];
m42_5 [label="return System.Convert.GetTypeCode(o);", span="142-142", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(object)", file="JsonSerializerTest.cs", color=green, community=0];
m42_7 [label="Entry System.Convert.GetTypeCode(object)", span="0-0", cluster="System.Convert.GetTypeCode(object)", file="JsonSerializerTest.cs"];
m42_8 [label="Console.WriteLine(c.Category + '' - Count: '' + c.Count)", span="63-63", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.QueryJsonLinq.Example()", file="JsonSerializerTest.cs"];
m42_9 [label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Linq.QueryJsonLinq.Example()", span="10-10", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.QueryJsonLinq.Example()", file="JsonSerializerTest.cs"];
m42_202 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="JsonSerializerTest.cs"];
m42_82 [label="Entry System.InvalidCastException.InvalidCastException(string)", span="0-0", cluster="System.InvalidCastException.InvalidCastException(string)", file="JsonSerializerTest.cs"];
m42_26 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.TypeConvertKey(System.Type, System.Type)", span="251-251", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.TypeConvertKey(System.Type, System.Type)", file="JsonSerializerTest.cs"];
m42_27 [label="_initialType = initialType", span="253-253", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.TypeConvertKey(System.Type, System.Type)", file="JsonSerializerTest.cs"];
m42_28 [label="_targetType = targetType", span="254-254", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.TypeConvertKey(System.Type, System.Type)", file="JsonSerializerTest.cs"];
m42_29 [label="Exit Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.TypeConvertKey(System.Type, System.Type)", span="251-251", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.TypeConvertKey(System.Type, System.Type)", file="JsonSerializerTest.cs"];
m42_14 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="JsonSerializerTest.cs"];
m42_12 [label="Entry Newtonsoft.Json.Linq.JToken.Children()", span="349-349", cluster="Newtonsoft.Json.Linq.JToken.Children()", file="JsonSerializerTest.cs"];
m42_178 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", span="482-482", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", file="JsonSerializerTest.cs"];
m42_182 [label="initialValue == null && ReflectionUtils.IsNullable(targetType)", span="489-489", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", file="JsonSerializerTest.cs"];
m42_186 [label="return EnsureTypeAssignable(initialValue, ReflectionUtils.GetObjectType(initialValue), targetType);", span="495-495", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", file="JsonSerializerTest.cs"];
m42_184 [label="TryConvert(initialValue, culture, targetType, out convertedValue)", span="492-492", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", file="JsonSerializerTest.cs"];
m42_179 [label="object convertedValue", span="484-484", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", file="JsonSerializerTest.cs"];
m42_180 [label="targetType == typeof(object)", span="486-486", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", file="JsonSerializerTest.cs"];
m42_183 [label="return null;", span="490-490", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", file="JsonSerializerTest.cs"];
m42_181 [label="return initialValue;", span="487-487", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", file="JsonSerializerTest.cs"];
m42_185 [label="return convertedValue;", span="493-493", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", file="JsonSerializerTest.cs"];
m42_187 [label="Exit Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", span="482-482", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", file="JsonSerializerTest.cs"];
m42_146 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JsonSerializerTest.cs"];
m42_51 [label="Entry System.Type.GetMethod(string, System.Type[])", span="0-0", cluster="System.Type.GetMethod(string, System.Type[])", file="JsonSerializerTest.cs"];
m42_154 [label="Entry System.Type.GetType(string, bool)", span="0-0", cluster="System.Type.GetType(string, bool)", file="JsonSerializerTest.cs"];
m42_10 [label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="359-359", cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="JsonSerializerTest.cs"];
m42_100 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", span="345-345", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="JsonSerializerTest.cs"];
m42_137 [label="return fromConverter.ConvertFrom(null, culture, initialValue);", span="418-418", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", color=green, community=0, file="JsonSerializerTest.cs"];
m42_135 [label="TypeConverter fromConverter = GetConverter(targetType)", span="413-413", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="JsonSerializerTest.cs"];
m42_136 [label="fromConverter != null && fromConverter.CanConvertFrom(initialType)", span="415-415", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", color=green, community=0, file="JsonSerializerTest.cs"];
m42_138 [label="initialValue == DBNull.Value", span="426-426", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", color=green, community=0, file="JsonSerializerTest.cs"];
m42_139 [label="ReflectionUtils.IsNullable(targetType)", span="428-428", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", color=green, community=0, file="JsonSerializerTest.cs"];
m42_142 [label="initialValue is INullable", span="435-435", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", color=green, community=0, file="JsonSerializerTest.cs"];
m42_104 [label="targetType = Nullable.GetUnderlyingType(targetType)", span="351-351", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="JsonSerializerTest.cs"];
m42_140 [label="return EnsureTypeAssignable(null, initialType, targetType);", span="429-429", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", color=green, community=0, file="JsonSerializerTest.cs"];
m42_141 [label="throw new Exception(''Can not convert null {0} into non-nullable {1}.''.FormatWith(CultureInfo.InvariantCulture, initialType, targetType));", span="431-431", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", color=green, community=0, file="JsonSerializerTest.cs"];
m42_105 [label="Type initialType = initialValue.GetType()", span="353-353", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="JsonSerializerTest.cs"];
m42_143 [label="return EnsureTypeAssignable(ToValue((INullable)initialValue), initialType, targetType);", span="436-436", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", color=green, community=0, file="JsonSerializerTest.cs"];
m42_144 [label="throw new InvalidOperationException(''Can not convert from {0} to {1}.''.FormatWith(CultureInfo.InvariantCulture, initialType, targetType));", span="439-439", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", color=green, community=0, file="JsonSerializerTest.cs"];
m42_101 [label="initialValue == null", span="347-347", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="JsonSerializerTest.cs"];
m42_103 [label="ReflectionUtils.IsNullableType(targetType)", span="350-350", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="JsonSerializerTest.cs"];
m42_106 [label="targetType == initialType", span="355-355", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="JsonSerializerTest.cs"];
m42_107 [label="return initialValue;", span="356-356", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="JsonSerializerTest.cs"];
m42_108 [label="ConvertUtils.IsConvertible(initialValue) && ConvertUtils.IsConvertible(targetType)", span="359-359", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="JsonSerializerTest.cs"];
m42_109 [label="targetType.IsEnum()", span="361-361", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="JsonSerializerTest.cs"];
m42_110 [label="initialValue is string", span="363-363", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="JsonSerializerTest.cs"];
m42_111 [label="return Enum.Parse(targetType, initialValue.ToString(), true);", span="364-364", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="JsonSerializerTest.cs"];
m42_112 [label="IsInteger(initialValue)", span="365-365", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="JsonSerializerTest.cs"];
m42_113 [label="return Enum.ToObject(targetType, initialValue);", span="366-366", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="JsonSerializerTest.cs"];
m42_114 [label="return System.Convert.ChangeType(initialValue, targetType, culture);", span="369-369", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="JsonSerializerTest.cs"];
m42_115 [label="initialValue is string && typeof(Type).IsAssignableFrom(targetType)", span="372-372", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="JsonSerializerTest.cs"];
m42_116 [label="return Type.GetType((string) initialValue, true);", span="373-373", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="JsonSerializerTest.cs"];
m42_117 [label="targetType.IsInterface() || targetType.IsGenericTypeDefinition() || targetType.IsAbstract()", span="375-375", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="JsonSerializerTest.cs"];
m42_118 [label="throw new ArgumentException(''Target type {0} is not a value type or a non-abstract class.''.FormatWith(CultureInfo.InvariantCulture, targetType), ''targetType'');", span="376-376", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="JsonSerializerTest.cs"];
m42_119 [label="initialValue is DateTime && targetType == typeof(DateTimeOffset)", span="379-379", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="JsonSerializerTest.cs"];
m42_120 [label="return new DateTimeOffset((DateTime)initialValue);", span="380-380", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="JsonSerializerTest.cs"];
m42_121 [label="initialValue is string", span="383-383", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="JsonSerializerTest.cs"];
m42_122 [label="targetType == typeof (Guid)", span="385-385", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="JsonSerializerTest.cs"];
m42_123 [label="return new Guid((string) initialValue);", span="386-386", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="JsonSerializerTest.cs"];
m42_124 [label="targetType == typeof (Uri)", span="387-387", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="JsonSerializerTest.cs"];
m42_125 [label="return new Uri((string) initialValue, UriKind.RelativeOrAbsolute);", span="388-388", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="JsonSerializerTest.cs"];
m42_126 [label="targetType == typeof(TimeSpan)", span="389-389", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="JsonSerializerTest.cs"];
m42_127 [label="return ParseTimeSpan((string) initialValue);", span="390-390", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="JsonSerializerTest.cs"];
m42_128 [label="targetType == typeof(BigInteger)", span="394-394", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="JsonSerializerTest.cs"];
m42_129 [label="return ToBigInteger(initialValue);", span="395-395", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="JsonSerializerTest.cs"];
m42_130 [label="initialValue is BigInteger", span="396-396", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="JsonSerializerTest.cs"];
m42_131 [label="return FromBigInteger((BigInteger)initialValue, targetType);", span="397-397", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="JsonSerializerTest.cs"];
m42_133 [label="toConverter != null && toConverter.CanConvertTo(targetType)", span="404-404", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="JsonSerializerTest.cs"];
m42_134 [label="return toConverter.ConvertTo(null, culture, initialValue, targetType);", span="407-407", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="JsonSerializerTest.cs"];
m42_102 [label="throw new ArgumentNullException(''initialValue'');", span="348-348", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="JsonSerializerTest.cs"];
m42_132 [label="TypeConverter toConverter = GetConverter(initialType)", span="402-402", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="JsonSerializerTest.cs"];
m42_145 [label="Exit Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", span="345-345", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="JsonSerializerTest.cs"];
m42_165 [label="Entry System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)", span="0-0", cluster="System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)", file="JsonSerializerTest.cs"];
m42_150 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()", file="JsonSerializerTest.cs"];
m42_156 [label="Entry System.Type.IsGenericTypeDefinition()", span="134-134", cluster="System.Type.IsGenericTypeDefinition()", file="JsonSerializerTest.cs"];
m42_56 [label="Entry Newtonsoft.Json.Utilities.MethodCall<T, TResult>.Invoke(T, params object[])", span="27-27", cluster="Newtonsoft.Json.Utilities.MethodCall<T, TResult>.Invoke(T, params object[])", file="JsonSerializerTest.cs"];
m42_162 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.GetConverter(System.Type)", span="542-542", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetConverter(System.Type)", file="JsonSerializerTest.cs"];
m42_221 [label="return JsonTypeReflector.GetTypeConverter(t);", span="544-544", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetConverter(System.Type)", file="JsonSerializerTest.cs"];
m42_222 [label="Exit Newtonsoft.Json.Utilities.ConvertUtils.GetConverter(System.Type)", span="542-542", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetConverter(System.Type)", file="JsonSerializerTest.cs"];
m42_188 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", span="159-159", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", file="JsonSerializerTest.cs"];
m42_166 [label="Entry System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", span="0-0", cluster="System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonSerializerTest.cs"];
m42_34 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.Equals(object)", span="262-262", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.Equals(object)", file="JsonSerializerTest.cs"];
m42_36 [label="return false;", span="265-265", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.Equals(object)", file="JsonSerializerTest.cs"];
m42_35 [label="!(obj is TypeConvertKey)", span="264-264", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.Equals(object)", file="JsonSerializerTest.cs"];
m42_37 [label="return Equals((TypeConvertKey)obj);", span="267-267", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.Equals(object)", file="JsonSerializerTest.cs"];
m42_38 [label="Exit Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.Equals(object)", span="262-262", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.Equals(object)", file="JsonSerializerTest.cs"];
m42_163 [label="Entry System.ComponentModel.TypeConverter.CanConvertTo(System.Type)", span="0-0", cluster="System.ComponentModel.TypeConverter.CanConvertTo(System.Type)", file="JsonSerializerTest.cs"];
m42_200 [label="Entry Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)", span="50-50", cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)", file="JsonSerializerTest.cs"];
m42_30 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.GetHashCode()", span="257-257", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.GetHashCode()", file="JsonSerializerTest.cs"];
m42_31 [label="return _initialType.GetHashCode() ^ _targetType.GetHashCode();", span="259-259", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.GetHashCode()", file="JsonSerializerTest.cs"];
m42_32 [label="Exit Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.GetHashCode()", span="257-257", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.GetHashCode()", file="JsonSerializerTest.cs"];
m42_164 [label="Entry System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", span="0-0", cluster="System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="JsonSerializerTest.cs"];
m42_21 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)", file="JsonSerializerTest.cs"];
m42_18 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.IsConvertible(System.Type)", span="216-216", cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsConvertible(System.Type)", file="JsonSerializerTest.cs"];
m42_19 [label="return typeof(IConvertible).IsAssignableFrom(t);", span="219-219", cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsConvertible(System.Type)", file="JsonSerializerTest.cs"];
m42_20 [label="Exit Newtonsoft.Json.Utilities.ConvertUtils.IsConvertible(System.Type)", span="216-216", cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsConvertible(System.Type)", file="JsonSerializerTest.cs"];
m42_220 [label="Entry Unk.FormatWith", span="", cluster="Unk.FormatWith", file="JsonSerializerTest.cs"];
m42_157 [label="Entry System.Type.IsAbstract()", span="489-489", cluster="System.Type.IsAbstract()", file="JsonSerializerTest.cs"];
m42_81 [label="Entry BigInteger.cstr", span="", cluster="BigInteger.cstr", file="JsonSerializerTest.cs"];
m42_152 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", span="548-548", cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="JsonSerializerTest.cs"];
m42_224 [label="GetTypeCode(value)", span="550-550", cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="JsonSerializerTest.cs"];
m42_225 [label="TypeCode.SByte", span="552-552", cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="JsonSerializerTest.cs"];
m42_234 [label="return false;", span="562-562", cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="JsonSerializerTest.cs"];
m42_226 [label="TypeCode.Byte", span="553-553", cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="JsonSerializerTest.cs"];
m42_233 [label="return true;", span="560-560", cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="JsonSerializerTest.cs"];
m42_227 [label="TypeCode.Int16", span="554-554", cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="JsonSerializerTest.cs"];
m42_232 [label="TypeCode.UInt64", span="559-559", cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="JsonSerializerTest.cs"];
m42_228 [label="TypeCode.UInt16", span="555-555", cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="JsonSerializerTest.cs"];
m42_231 [label="TypeCode.Int64", span="558-558", cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="JsonSerializerTest.cs"];
m42_229 [label="TypeCode.Int32", span="556-556", cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="JsonSerializerTest.cs"];
m42_230 [label="TypeCode.UInt32", span="557-557", cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="JsonSerializerTest.cs"];
m42_235 [label="Exit Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", span="548-548", cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="JsonSerializerTest.cs"];
m42_218 [label="Entry Unk.ToValue", span="", cluster="Unk.ToValue", file="JsonSerializerTest.cs"];
m42_52 [label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", span="63-63", cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", file="JsonSerializerTest.cs"];
m42_159 [label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime)", file="JsonSerializerTest.cs"];
m42_149 [label="Entry System.Type.IsEnum()", span="152-152", cluster="System.Type.IsEnum()", file="JsonSerializerTest.cs"];
m42_169 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="JsonSerializerTest.cs"];
m42_170 [label="Entry string.FormatWith(System.IFormatProvider, object, object)", span="52-52", cluster="string.FormatWith(System.IFormatProvider, object, object)", file="JsonSerializerTest.cs"];
m42_53 [label="Entry lambda expression", span="290-290", cluster="lambda expression", file="JsonSerializerTest.cs"];
m42_54 [label="call(null, o)", span="290-290", cluster="lambda expression", file="JsonSerializerTest.cs"];
m42_55 [label="Exit lambda expression", span="290-290", cluster="lambda expression", file="JsonSerializerTest.cs"];
m42_201 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="JsonSerializerTest.cs"];
m42_80 [label="Entry Unk.Parse", span="", cluster="Unk.Parse", file="JsonSerializerTest.cs"];
m42_11 [label="Entry Unk.WriteLine", span="", cluster="Unk.WriteLine", file="JsonSerializerTest.cs"];
m42_15 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.IsConvertible(object)", span="202-202", cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsConvertible(object)", file="JsonSerializerTest.cs"];
m42_16 [label="return o is IConvertible;", span="205-205", cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsConvertible(object)", file="JsonSerializerTest.cs"];
m42_17 [label="Exit Newtonsoft.Json.Utilities.ConvertUtils.IsConvertible(object)", span="202-202", cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsConvertible(object)", file="JsonSerializerTest.cs"];
m42_57 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", span="294-294", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="JsonSerializerTest.cs"];
m42_58 [label="value is BigInteger", span="296-296", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="JsonSerializerTest.cs"];
m42_59 [label="return (BigInteger)value;", span="297-297", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="JsonSerializerTest.cs"];
m42_60 [label="value is string", span="298-298", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="JsonSerializerTest.cs"];
m42_61 [label="return BigInteger.Parse((string)value, CultureInfo.InvariantCulture);", span="299-299", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="JsonSerializerTest.cs"];
m42_62 [label="value is float", span="300-300", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="JsonSerializerTest.cs"];
m42_63 [label="return new BigInteger((float)value);", span="301-301", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="JsonSerializerTest.cs"];
m42_64 [label="value is double", span="302-302", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="JsonSerializerTest.cs"];
m42_65 [label="return new BigInteger((double)value);", span="303-303", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="JsonSerializerTest.cs"];
m42_66 [label="value is decimal", span="304-304", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="JsonSerializerTest.cs"];
m42_67 [label="return new BigInteger((decimal)value);", span="305-305", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="JsonSerializerTest.cs"];
m42_68 [label="value is int", span="306-306", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="JsonSerializerTest.cs"];
m42_69 [label="return new BigInteger((int)value);", span="307-307", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="JsonSerializerTest.cs"];
m42_70 [label="value is long", span="308-308", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="JsonSerializerTest.cs"];
m42_71 [label="return new BigInteger((long)value);", span="309-309", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="JsonSerializerTest.cs"];
m42_72 [label="value is uint", span="310-310", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="JsonSerializerTest.cs"];
m42_73 [label="return new BigInteger((uint)value);", span="311-311", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="JsonSerializerTest.cs"];
m42_74 [label="value is ulong", span="312-312", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="JsonSerializerTest.cs"];
m42_75 [label="return new BigInteger((ulong)value);", span="313-313", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="JsonSerializerTest.cs"];
m42_76 [label="value is byte[]", span="314-314", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="JsonSerializerTest.cs"];
m42_77 [label="return new BigInteger((byte[])value);", span="315-315", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="JsonSerializerTest.cs"];
m42_78 [label="throw new InvalidCastException(''Cannot convert {0} to BigInteger.''.FormatWith(CultureInfo.InvariantCulture, value.GetType()));", span="317-317", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="JsonSerializerTest.cs"];
m42_79 [label="Exit Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", span="294-294", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="JsonSerializerTest.cs"];
m42_168 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", span="499-499", cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", file="JsonSerializerTest.cs"];
m42_196 [label="ReflectionUtils.IsNullable(targetType)", span="514-514", cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", file="JsonSerializerTest.cs"];
m42_189 [label="Type valueType = (value != null) ? value.GetType() : null", span="501-501", cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", file="JsonSerializerTest.cs"];
m42_190 [label="value != null", span="503-503", cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", file="JsonSerializerTest.cs"];
m42_191 [label="targetType.IsAssignableFrom(valueType)", span="505-505", cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", file="JsonSerializerTest.cs"];
m42_192 [label="return value;", span="506-506", cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", file="JsonSerializerTest.cs"];
m42_193 [label="Func<object, object> castConverter = CastConverters.Get(new TypeConvertKey(valueType, targetType))", span="508-508", cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", file="JsonSerializerTest.cs"];
m42_195 [label="return castConverter(value);", span="510-510", cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", file="JsonSerializerTest.cs"];
m42_198 [label="throw new ArgumentException(''Could not cast or convert from {0} to {1}.''.FormatWith(CultureInfo.InvariantCulture, (initialType != null) ? initialType.ToString() : ''{null}'', targetType));", span="518-518", cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", file="JsonSerializerTest.cs"];
m42_197 [label="return null;", span="515-515", cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", file="JsonSerializerTest.cs"];
m42_194 [label="castConverter != null", span="509-509", cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", file="JsonSerializerTest.cs"];
m42_199 [label="Exit Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", span="499-499", cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", file="JsonSerializerTest.cs"];
m42_161 [label="Entry System.Uri.Uri(string, System.UriKind)", span="0-0", cluster="System.Uri.Uri(string, System.UriKind)", file="JsonSerializerTest.cs"];
m42_33 [label="Entry System.Type.GetHashCode()", span="0-0", cluster="System.Type.GetHashCode()", file="JsonSerializerTest.cs"];
m42_22 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.ParseTimeSpan(string)", span="227-227", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ParseTimeSpan(string)", file="JsonSerializerTest.cs"];
m42_23 [label="return TimeSpan.Parse((string) input, CultureInfo.InvariantCulture);", span="230-230", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ParseTimeSpan(string)", file="JsonSerializerTest.cs"];
m42_24 [label="Exit Newtonsoft.Json.Utilities.ConvertUtils.ParseTimeSpan(string)", span="227-227", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ParseTimeSpan(string)", file="JsonSerializerTest.cs"];
m42_147 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", span="293-293", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", file="JsonSerializerTest.cs"];
m42_148 [label="Entry System.Nullable.GetUnderlyingType(System.Type)", span="0-0", cluster="System.Nullable.GetUnderlyingType(System.Type)", file="JsonSerializerTest.cs"];
m42_25 [label="Entry System.TimeSpan.Parse(string, System.IFormatProvider)", span="0-0", cluster="System.TimeSpan.Parse(string, System.IFormatProvider)", file="JsonSerializerTest.cs"];
m42_171 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", span="522-522", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", file="JsonSerializerTest.cs"];
m42_204 [label="nullableValue == null", span="524-524", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", file="JsonSerializerTest.cs"];
m42_206 [label="nullableValue is SqlInt32", span="526-526", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", file="JsonSerializerTest.cs"];
m42_207 [label="return ToValue((SqlInt32)nullableValue);", span="527-527", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", file="JsonSerializerTest.cs"];
m42_208 [label="nullableValue is SqlInt64", span="528-528", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", file="JsonSerializerTest.cs"];
m42_209 [label="return ToValue((SqlInt64)nullableValue);", span="529-529", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", file="JsonSerializerTest.cs"];
m42_210 [label="nullableValue is SqlBoolean", span="530-530", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", file="JsonSerializerTest.cs"];
m42_211 [label="return ToValue((SqlBoolean)nullableValue);", span="531-531", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", file="JsonSerializerTest.cs"];
m42_212 [label="nullableValue is SqlString", span="532-532", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", file="JsonSerializerTest.cs"];
m42_213 [label="return ToValue((SqlString)nullableValue);", span="533-533", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", file="JsonSerializerTest.cs"];
m42_214 [label="nullableValue is SqlDateTime", span="534-534", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", file="JsonSerializerTest.cs"];
m42_215 [label="return ToValue((SqlDateTime)nullableValue);", span="535-535", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", file="JsonSerializerTest.cs"];
m42_216 [label="throw new ArgumentException(''Unsupported INullable type: {0}''.FormatWith(CultureInfo.InvariantCulture, nullableValue.GetType()));", span="537-537", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", file="JsonSerializerTest.cs"];
m42_205 [label="return null;", span="525-525", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", file="JsonSerializerTest.cs"];
m42_217 [label="Exit Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", span="522-522", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", file="JsonSerializerTest.cs"];
m42_158 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)", file="JsonSerializerTest.cs"];
m42_151 [label="Entry System.Enum.Parse(System.Type, string, bool)", span="0-0", cluster="System.Enum.Parse(System.Type, string, bool)", file="JsonSerializerTest.cs"];
m42_83 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="JsonSerializerTest.cs"];
m42_219 [label="Entry Unk.GetType", span="", cluster="Unk.GetType", file="JsonSerializerTest.cs"];
m42_13 [label="Entry System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Values<U>()", span="146-146", cluster="System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Values<U>()", file="JsonSerializerTest.cs"];
m42_167 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", span="283-283", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", file="JsonSerializerTest.cs"];
m42_85 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)", span="320-320", cluster="Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)", file="JsonSerializerTest.cs"];
m42_96 [label="throw new InvalidOperationException(''Can not convert from BigInteger to {0}.''.FormatWith(CultureInfo.InvariantCulture, targetType));", span="333-333", cluster="Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)", file="JsonSerializerTest.cs"];
m42_94 [label="IsConvertible(targetType)", span="330-330", cluster="Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)", file="JsonSerializerTest.cs"];
m42_86 [label="targetType == typeof (decimal)", span="322-322", cluster="Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)", file="JsonSerializerTest.cs"];
m42_87 [label="return (decimal) i;", span="323-323", cluster="Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)", file="JsonSerializerTest.cs"];
m42_88 [label="targetType == typeof (double)", span="324-324", cluster="Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)", file="JsonSerializerTest.cs"];
m42_89 [label="return (double) i;", span="325-325", cluster="Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)", file="JsonSerializerTest.cs"];
m42_90 [label="targetType == typeof (float)", span="326-326", cluster="Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)", file="JsonSerializerTest.cs"];
m42_91 [label="return (float) i;", span="327-327", cluster="Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)", file="JsonSerializerTest.cs"];
m42_92 [label="targetType == typeof (ulong)", span="328-328", cluster="Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)", file="JsonSerializerTest.cs"];
m42_93 [label="return (ulong) i;", span="329-329", cluster="Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)", file="JsonSerializerTest.cs"];
m42_95 [label="return System.Convert.ChangeType((long) i, targetType, CultureInfo.InvariantCulture);", span="331-331", cluster="Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)", file="JsonSerializerTest.cs"];
m42_97 [label="Exit Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)", span="320-320", cluster="Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)", file="JsonSerializerTest.cs"];
m42_99 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="JsonSerializerTest.cs"];
m42_203 [label="Entry System.Type.ToString()", span="0-0", cluster="System.Type.ToString()", file="JsonSerializerTest.cs"];
m42_223 [label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetTypeConverter(System.Type)", span="216-216", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetTypeConverter(System.Type)", file="JsonSerializerTest.cs"];
m42_84 [label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47", cluster="string.FormatWith(System.IFormatProvider, object)", file="JsonSerializerTest.cs"];
m42_153 [label="Entry System.Enum.ToObject(System.Type, object)", span="0-0", cluster="System.Enum.ToObject(System.Type, object)", file="JsonSerializerTest.cs"];
m42_42 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.CreateCastConverter(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)", span="279-279", cluster="Newtonsoft.Json.Utilities.ConvertUtils.CreateCastConverter(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)", file="JsonSerializerTest.cs"];
m42_47 [label="return null;", span="286-286", cluster="Newtonsoft.Json.Utilities.ConvertUtils.CreateCastConverter(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)", file="JsonSerializerTest.cs"];
m42_46 [label="castMethodInfo == null", span="285-285", cluster="Newtonsoft.Json.Utilities.ConvertUtils.CreateCastConverter(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)", file="JsonSerializerTest.cs"];
m42_43 [label="MethodInfo castMethodInfo = t.TargetType.GetMethod(''op_Implicit'', new[] { t.InitialType })", span="281-281", cluster="Newtonsoft.Json.Utilities.ConvertUtils.CreateCastConverter(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)", file="JsonSerializerTest.cs"];
m42_49 [label="return o => call(null, o);", span="290-290", cluster="Newtonsoft.Json.Utilities.ConvertUtils.CreateCastConverter(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)", file="JsonSerializerTest.cs"];
m42_44 [label="castMethodInfo == null", span="282-282", cluster="Newtonsoft.Json.Utilities.ConvertUtils.CreateCastConverter(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)", file="JsonSerializerTest.cs"];
m42_45 [label="castMethodInfo = t.TargetType.GetMethod(''op_Explicit'', new[] { t.InitialType })", span="283-283", cluster="Newtonsoft.Json.Utilities.ConvertUtils.CreateCastConverter(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)", file="JsonSerializerTest.cs"];
m42_48 [label="MethodCall<object, object> call = JsonTypeReflector.ReflectionDelegateFactory.CreateMethodCall<object>(castMethodInfo)", span="288-288", cluster="Newtonsoft.Json.Utilities.ConvertUtils.CreateCastConverter(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)", file="JsonSerializerTest.cs"];
m42_50 [label="Exit Newtonsoft.Json.Utilities.ConvertUtils.CreateCastConverter(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)", span="279-279", cluster="Newtonsoft.Json.Utilities.ConvertUtils.CreateCastConverter(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)", file="JsonSerializerTest.cs"];
m42_160 [label="Entry System.Guid.Guid(string)", span="0-0", cluster="System.Guid.Guid(string)", file="JsonSerializerTest.cs"];
m42_172 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.TryConvert(object, System.Globalization.CultureInfo, System.Type, out object)", span="455-455", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvert(object, System.Globalization.CultureInfo, System.Type, out object)", file="JsonSerializerTest.cs"];
m42_173 [label="convertedValue = Convert(initialValue, culture, targetType)", span="459-459", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvert(object, System.Globalization.CultureInfo, System.Type, out object)", file="JsonSerializerTest.cs"];
m42_174 [label="return true;", span="460-460", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvert(object, System.Globalization.CultureInfo, System.Type, out object)", file="JsonSerializerTest.cs"];
m42_175 [label="convertedValue = null", span="464-464", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvert(object, System.Globalization.CultureInfo, System.Type, out object)", file="JsonSerializerTest.cs"];
m42_176 [label="return false;", span="465-465", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvert(object, System.Globalization.CultureInfo, System.Type, out object)", file="JsonSerializerTest.cs"];
m42_177 [label="Exit Newtonsoft.Json.Utilities.ConvertUtils.TryConvert(object, System.Globalization.CultureInfo, System.Type, out object)", span="455-455", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvert(object, System.Globalization.CultureInfo, System.Type, out object)", file="JsonSerializerTest.cs"];
m42_98 [label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0", cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs"];
m42_155 [label="Entry System.Type.IsInterface()", span="116-116", cluster="System.Type.IsInterface()", file="JsonSerializerTest.cs"];
m42_238 [label="ref Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey", span="", file="JsonSerializerTest.cs"];
m42_236 [label="out Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey", span="", file="JsonSerializerTest.cs"];
m42_237 [label="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey", span="", file="JsonSerializerTest.cs"];
m42_239 [label=call, span="", file="JsonSerializerTest.cs"];
m45_252 [label="Exit Newtonsoft.Json.JsonValidatingReader.WriteToken(System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>)", span="570-570", cluster="Newtonsoft.Json.JsonValidatingReader.WriteToken(System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>)", file="JsonTextWriter.cs"];
m45_277 [label="requiredProperties != null", span="631-631", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateEndObject(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_278 [label="List<string> unmatchedRequiredProperties =\r\n                    requiredProperties.Where(kv => !kv.Value).Select(kv => kv.Key).ToList()", span="633-634", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateEndObject(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_279 [label="unmatchedRequiredProperties.Count > 0", span="636-636", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateEndObject(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_217 [label="writer.WriteValue((float)_value)", span="789-789", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonTextWriter.cs"];
m45_71 [label="DateTime date2", span="322-322", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonTextWriter.cs"];
m45_74 [label="JTokenType.Bytes", span="355-355", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonTextWriter.cs"];
m45_77 [label="throw new ArgumentException(''Object must be of type byte[].'');", span="359-359", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonTextWriter.cs"];
m45_72 [label="date2 = Convert.ToDateTime(objB, CultureInfo.InvariantCulture)", span="332-332", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonTextWriter.cs"];
m45_75 [label="byte[] bytes2 = objB as byte[]", span="356-356", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonTextWriter.cs"];
m45_76 [label="bytes2 == null", span="357-357", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonTextWriter.cs"];
m45_73 [label="return date1.CompareTo(date2);", span="335-335", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonTextWriter.cs"];
m45_78 [label="byte[] bytes1 = objA as byte[]", span="362-362", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonTextWriter.cs"];
m45_263 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.Uri)", span="1407-1407", cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.Uri)", file="JsonTextWriter.cs"];
m45_253 [label="Entry Newtonsoft.Json.Utilities.JsonTokenUtils.IsEndToken(Newtonsoft.Json.JsonToken)", span="32-32", cluster="Newtonsoft.Json.Utilities.JsonTokenUtils.IsEndToken(Newtonsoft.Json.JsonToken)", file="JsonTextWriter.cs"];
m45_53 [label="return CompareFloat(objA, objB);", span="282-282", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonTextWriter.cs"];
m45_262 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.TimeSpan?)", span="1375-1375", cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.TimeSpan?)", file="JsonTextWriter.cs"];
m45_28 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.TimeSpan)", span="181-181", cluster="Newtonsoft.Json.Linq.JValue.JValue(System.TimeSpan)", file="JsonTextWriter.cs"];
m45_413 [label="Entry Newtonsoft.Json.JsonValidatingReader.IsPropertyDefinied(Newtonsoft.Json.Schema.JsonSchemaModel, string)", span="847-847", cluster="Newtonsoft.Json.JsonValidatingReader.IsPropertyDefinied(Newtonsoft.Json.Schema.JsonSchemaModel, string)", file="JsonTextWriter.cs"];
m45_414 [label="schema.Properties != null && schema.Properties.ContainsKey(propertyName)", span="849-849", cluster="Newtonsoft.Json.JsonValidatingReader.IsPropertyDefinied(Newtonsoft.Json.Schema.JsonSchemaModel, string)", file="JsonTextWriter.cs"];
m45_416 [label="schema.PatternProperties != null", span="852-852", cluster="Newtonsoft.Json.JsonValidatingReader.IsPropertyDefinied(Newtonsoft.Json.Schema.JsonSchemaModel, string)", file="JsonTextWriter.cs"];
m45_417 [label="schema.PatternProperties.Keys", span="854-854", cluster="Newtonsoft.Json.JsonValidatingReader.IsPropertyDefinied(Newtonsoft.Json.Schema.JsonSchemaModel, string)", file="JsonTextWriter.cs"];
m45_418 [label="Regex.IsMatch(propertyName, pattern)", span="856-856", cluster="Newtonsoft.Json.JsonValidatingReader.IsPropertyDefinied(Newtonsoft.Json.Schema.JsonSchemaModel, string)", file="JsonTextWriter.cs"];
m45_415 [label="return true;", span="850-850", cluster="Newtonsoft.Json.JsonValidatingReader.IsPropertyDefinied(Newtonsoft.Json.Schema.JsonSchemaModel, string)", file="JsonTextWriter.cs"];
m45_420 [label="return false;", span="861-861", cluster="Newtonsoft.Json.JsonValidatingReader.IsPropertyDefinied(Newtonsoft.Json.Schema.JsonSchemaModel, string)", file="JsonTextWriter.cs"];
m45_419 [label="return true;", span="857-857", cluster="Newtonsoft.Json.JsonValidatingReader.IsPropertyDefinied(Newtonsoft.Json.Schema.JsonSchemaModel, string)", file="JsonTextWriter.cs"];
m45_421 [label="Exit Newtonsoft.Json.JsonValidatingReader.IsPropertyDefinied(Newtonsoft.Json.Schema.JsonSchemaModel, string)", span="847-847", cluster="Newtonsoft.Json.JsonValidatingReader.IsPropertyDefinied(Newtonsoft.Json.Schema.JsonSchemaModel, string)", file="JsonTextWriter.cs"];
m45_29 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="JsonTextWriter.cs"];
m45_396 [label="Entry System.Math.Floor(double)", span="0-0", cluster="System.Math.Floor(double)", file="JsonTextWriter.cs"];
m45_357 [label="Entry System.Math.Truncate(double)", span="0-0", cluster="System.Math.Truncate(double)", file="JsonTextWriter.cs"];
m45_134 [label="Exit Newtonsoft.Json.JsonValidatingReader.ReadAsDateTimeOffset()", span="428-428", cluster="Newtonsoft.Json.JsonValidatingReader.ReadAsDateTimeOffset()", file="JsonTextWriter.cs"];
m45_135 [label="Entry Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset()", span="402-402", cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset()", file="JsonTextWriter.cs"];
m45_136 [label="Entry Newtonsoft.Json.JsonValidatingReader.Read()", span="443-443", cluster="Newtonsoft.Json.JsonValidatingReader.Read()", file="JsonTextWriter.cs"];
m45_27 [label="Exit Newtonsoft.Json.Linq.JValue.JValue(System.Uri)", span="172-172", cluster="Newtonsoft.Json.Linq.JValue.JValue(System.Uri)", file="JsonTextWriter.cs"];
m45_121 [label="return s;", span="408-408", cluster="Newtonsoft.Json.JsonValidatingReader.ReadAsString()", file="JsonTextWriter.cs"];
m45_0 [label="Entry Newtonsoft.Json.JsonValidatingReader.SchemaScope.SchemaScope(Newtonsoft.Json.Linq.JTokenType, System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>)", span="77-77", cluster="Newtonsoft.Json.JsonValidatingReader.SchemaScope.SchemaScope(Newtonsoft.Json.Linq.JTokenType, System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>)", file="JsonTextWriter.cs"];
m45_1 [label="_tokenType = tokenType", span="79-79", cluster="Newtonsoft.Json.JsonValidatingReader.SchemaScope.SchemaScope(Newtonsoft.Json.Linq.JTokenType, System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>)", file="JsonTextWriter.cs"];
m45_2 [label="_schemas = schemas", span="80-80", cluster="Newtonsoft.Json.JsonValidatingReader.SchemaScope.SchemaScope(Newtonsoft.Json.Linq.JTokenType, System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>)", file="JsonTextWriter.cs"];
m45_3 [label="_requiredProperties = schemas.SelectMany<JsonSchemaModel, string>(GetRequiredProperties).Distinct().ToDictionary(p => p, p => false)", span="82-82", cluster="Newtonsoft.Json.JsonValidatingReader.SchemaScope.SchemaScope(Newtonsoft.Json.Linq.JTokenType, System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>)", file="JsonTextWriter.cs"];
m45_146 [label="JsonSchemaModelBuilder builder = new JsonSchemaModelBuilder()", span="460-460", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonTextWriter.cs"];
m45_147 [label="_model = builder.Build(_schema)", span="461-461", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonTextWriter.cs"];
m45_149 [label="Push(new SchemaScope(JTokenType.None, CurrentMemberSchemas))", span="464-464", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonTextWriter.cs"];
m45_150 [label="_reader.TokenType", span="467-467", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonTextWriter.cs"];
m45_151 [label="JsonToken.StartObject", span="469-469", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonTextWriter.cs"];
m45_153 [label="IList<JsonSchemaModel> objectSchemas = CurrentMemberSchemas.Where(ValidateObject).ToList()", span="471-471", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonTextWriter.cs"];
m45_155 [label="WriteToken(CurrentSchemas)", span="473-473", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonTextWriter.cs"];
m45_157 [label="ProcessValue()", span="476-476", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonTextWriter.cs"];
m45_159 [label="Push(new SchemaScope(JTokenType.Array, arraySchemas))", span="478-478", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonTextWriter.cs"];
m45_161 [label="JsonToken.StartConstructor", span="481-481", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonTextWriter.cs"];
m45_163 [label="Push(new SchemaScope(JTokenType.Constructor, null))", span="483-483", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonTextWriter.cs"];
m45_165 [label="JsonToken.PropertyName", span="486-486", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonTextWriter.cs"];
m45_167 [label=CurrentSchemas, span="488-488", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonTextWriter.cs"];
m45_169 [label="JsonToken.Raw", span="493-493", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonTextWriter.cs"];
m45_148 [label="!JsonTokenUtils.IsStartToken(_reader.TokenType)", span="463-463", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonTextWriter.cs"];
m45_152 [label="ProcessValue()", span="470-470", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonTextWriter.cs"];
m45_154 [label="Push(new SchemaScope(JTokenType.Object, objectSchemas))", span="472-472", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonTextWriter.cs"];
m45_156 [label="JsonToken.StartArray", span="475-475", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonTextWriter.cs"];
m45_158 [label="IList<JsonSchemaModel> arraySchemas = CurrentMemberSchemas.Where(ValidateArray).ToList()", span="477-477", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonTextWriter.cs"];
m45_160 [label="WriteToken(CurrentSchemas)", span="479-479", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonTextWriter.cs"];
m45_162 [label="ProcessValue()", span="482-482", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonTextWriter.cs"];
m45_164 [label="WriteToken(CurrentSchemas)", span="484-484", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonTextWriter.cs"];
m45_166 [label="WriteToken(CurrentSchemas)", span="487-487", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonTextWriter.cs"];
m45_168 [label="ValidatePropertyName(schema)", span="490-490", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonTextWriter.cs"];
m45_170 [label="ProcessValue()", span="494-494", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonTextWriter.cs"];
m45_36 [label="other == this", span="202-202", cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JsonTextWriter.cs"];
m45_37 [label="return true;", span="204-204", cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JsonTextWriter.cs"];
m45_38 [label="return ValuesEquals(this, other);", span="207-207", cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JsonTextWriter.cs"];
m45_39 [label="Exit Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="195-195", cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JsonTextWriter.cs"];
m45_140 [label="return true;", span="449-449", cluster="Newtonsoft.Json.JsonValidatingReader.Read()", file="JsonTextWriter.cs"];
m45_141 [label="ValidateCurrentToken()", span="451-451", cluster="Newtonsoft.Json.JsonValidatingReader.Read()", file="JsonTextWriter.cs"];
m45_142 [label="return true;", span="452-452", cluster="Newtonsoft.Json.JsonValidatingReader.Read()", file="JsonTextWriter.cs"];
m45_422 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="JsonTextWriter.cs"];
m45_304 [label="Entry Newtonsoft.Json.JsonValidatingReader.TestType(Newtonsoft.Json.Schema.JsonSchemaModel, Newtonsoft.Json.Schema.JsonSchemaType)", span="880-880", cluster="Newtonsoft.Json.JsonValidatingReader.TestType(Newtonsoft.Json.Schema.JsonSchemaModel, Newtonsoft.Json.Schema.JsonSchemaType)", file="JsonTextWriter.cs"];
m45_412 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="JsonTextWriter.cs"];
m45_118 [label="Entry Newtonsoft.Json.JsonValidatingReader.ReadAsString()", span="403-403", cluster="Newtonsoft.Json.JsonValidatingReader.ReadAsString()", file="JsonTextWriter.cs"];
m45_54 [label="return Convert.ToInt64(objA, CultureInfo.InvariantCulture).CompareTo(Convert.ToInt64(objB, CultureInfo.InvariantCulture));", span="286-286", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonTextWriter.cs"];
m45_33 [label="JValue other = node as JValue", span="197-197", cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JsonTextWriter.cs"];
m45_268 [label="Entry object.GetHashCode()", span="0-0", cluster="object.GetHashCode()", file="JsonTextWriter.cs"];
m45_265 [label="int valueHashCode = (_value != null) ? _value.GetHashCode() : 0", span="833-833", cluster="Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", file="JsonTextWriter.cs"];
m45_271 [label="Exit Newtonsoft.Json.Linq.JValue.ValuesEquals(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", span="839-839", cluster="Newtonsoft.Json.Linq.JValue.ValuesEquals(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="JsonTextWriter.cs"];
m45_270 [label="return (v1 == v2 || (v1._valueType == v2._valueType && Compare(v1._valueType, v1._value, v2._value) == 0));", span="841-841", cluster="Newtonsoft.Json.Linq.JValue.ValuesEquals(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="JsonTextWriter.cs"];
m45_269 [label="Entry int.GetHashCode()", span="0-0", cluster="int.GetHashCode()", file="JsonTextWriter.cs"];
m45_284 [label="Exit Newtonsoft.Json.Linq.JValue.GetHashCode()", span="879-879", cluster="Newtonsoft.Json.Linq.JValue.GetHashCode()", file="JsonTextWriter.cs"];
m45_287 [label="return string.Empty;", span="899-899", cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="JsonTextWriter.cs"];
m45_13 [label="Exit Newtonsoft.Json.Linq.JValue.JValue(ulong)", span="98-98", cluster="Newtonsoft.Json.Linq.JValue.JValue(ulong)", file="JsonTextWriter.cs"];
m45_16 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(float)", span="116-116", cluster="Newtonsoft.Json.Linq.JValue.JValue(float)", file="JsonTextWriter.cs"];
m45_19 [label="Exit Newtonsoft.Json.Linq.JValue.JValue(System.DateTime)", span="125-125", cluster="Newtonsoft.Json.Linq.JValue.JValue(System.DateTime)", file="JsonTextWriter.cs"];
m45_30 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(object)", span="190-190", cluster="Newtonsoft.Json.Linq.JValue.JValue(object)", file="JsonTextWriter.cs"];
m45_267 [label="Exit Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", span="831-831", cluster="Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", file="JsonTextWriter.cs"];
m45_266 [label="return ((int)_valueType).GetHashCode() ^ valueHashCode;", span="836-836", cluster="Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", file="JsonTextWriter.cs"];
m45_273 [label="other == null", span="853-853", cluster="Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", file="JsonTextWriter.cs"];
m45_272 [label="Entry Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", span="851-851", cluster="Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", file="JsonTextWriter.cs"];
m45_286 [label="_value == null", span="897-897", cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="JsonTextWriter.cs"];
m45_285 [label="Entry Newtonsoft.Json.Linq.JValue.ToString()", span="895-895", cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="JsonTextWriter.cs"];
m45_289 [label="Exit Newtonsoft.Json.Linq.JValue.ToString()", span="895-895", cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="JsonTextWriter.cs"];
m45_288 [label="return _value.ToString();", span="902-902", cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="JsonTextWriter.cs"];
m45_15 [label="Exit Newtonsoft.Json.Linq.JValue.JValue(double)", span="107-107", cluster="Newtonsoft.Json.Linq.JValue.JValue(double)", file="JsonTextWriter.cs"];
m45_14 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(double)", span="107-107", cluster="Newtonsoft.Json.Linq.JValue.JValue(double)", file="JsonTextWriter.cs"];
m45_18 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.DateTime)", span="125-125", cluster="Newtonsoft.Json.Linq.JValue.JValue(System.DateTime)", file="JsonTextWriter.cs"];
m45_17 [label="Exit Newtonsoft.Json.Linq.JValue.JValue(float)", span="116-116", cluster="Newtonsoft.Json.Linq.JValue.JValue(float)", file="JsonTextWriter.cs"];
m45_21 [label="Exit Newtonsoft.Json.Linq.JValue.JValue(bool)", span="145-145", cluster="Newtonsoft.Json.Linq.JValue.JValue(bool)", file="JsonTextWriter.cs"];
m45_20 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(bool)", span="145-145", cluster="Newtonsoft.Json.Linq.JValue.JValue(bool)", file="JsonTextWriter.cs"];
m45_32 [label="Entry Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="195-195", cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JsonTextWriter.cs"];
m45_31 [label="Exit Newtonsoft.Json.Linq.JValue.JValue(object)", span="190-190", cluster="Newtonsoft.Json.Linq.JValue.JValue(object)", file="JsonTextWriter.cs"];
m45_34 [label="other == null", span="198-198", cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JsonTextWriter.cs"];
m45_35 [label="return false;", span="200-200", cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JsonTextWriter.cs"];
m45_63 [label="string s2 = Convert.ToString(objB, CultureInfo.InvariantCulture)", span="308-308", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonTextWriter.cs"];
m45_70 [label="DateTime date1 = (DateTime)objA", span="321-321", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonTextWriter.cs"];
m45_46 [label="objA == null", span="258-258", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonTextWriter.cs"];
m45_220 [label="JTokenType.String", span="796-796", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonTextWriter.cs"];
m45_256 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(float)", span="992-992", cluster="Newtonsoft.Json.JsonWriter.WriteValue(float)", file="JsonTextWriter.cs"];
m45_130 [label="Entry double.CompareTo(double)", span="0-0", cluster="double.CompareTo(double)", file="JsonTextWriter.cs"];
m45_131 [label="Entry Newtonsoft.Json.Linq.JValue.CloneToken()", span="563-563", cluster="Newtonsoft.Json.Linq.JValue.CloneToken()", file="JsonTextWriter.cs"];
m45_132 [label="return new JValue(this);", span="565-565", cluster="Newtonsoft.Json.Linq.JValue.CloneToken()", file="JsonTextWriter.cs"];
m45_133 [label="Exit Newtonsoft.Json.Linq.JValue.CloneToken()", span="563-563", cluster="Newtonsoft.Json.Linq.JValue.CloneToken()", file="JsonTextWriter.cs"];
m45_245 [label="schemas.Any(s => s.Enum != null)", span="603-603", cluster="Newtonsoft.Json.JsonValidatingReader.WriteToken(System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>)", file="JsonTextWriter.cs"];
m45_257 [label="Entry Unk.First", span="", cluster="Unk.First", file="JsonTextWriter.cs"];
m45_392 [label="Entry Newtonsoft.Json.JsonConvert.ToString(double)", span="288-288", cluster="Newtonsoft.Json.JsonConvert.ToString(double)", file="JsonTextWriter.cs"];
m45_305 [label="schema == null", span="668-668", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateBoolean(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_306 [label="return;", span="669-669", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateBoolean(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_308 [label="return;", span="672-672", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateBoolean(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_314 [label="return;", span="683-683", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateString(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_307 [label="!TestType(schema, JsonSchemaType.Boolean)", span="671-671", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateBoolean(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_309 [label="ValidateNotDisallowed(schema)", span="674-674", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateBoolean(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_311 [label="schema == null", span="679-679", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateString(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_312 [label="return;", span="680-680", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateString(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_313 [label="!TestType(schema, JsonSchemaType.String)", span="682-682", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateString(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_310 [label="Exit Newtonsoft.Json.JsonValidatingReader.ValidateBoolean(Newtonsoft.Json.Schema.JsonSchemaModel)", span="666-666", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateBoolean(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_316 [label="string value = _reader.Value.ToString()", span="687-687", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateString(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_315 [label="ValidateNotDisallowed(schema)", span="685-685", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateString(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_317 [label="schema.MaximumLength != null && value.Length > schema.MaximumLength", span="689-689", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateString(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_247 [label="schema.Enum != null", span="607-607", cluster="Newtonsoft.Json.JsonValidatingReader.WriteToken(System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>)", file="JsonTextWriter.cs"];
m45_10 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(char)", span="88-88", cluster="Newtonsoft.Json.Linq.JValue.JValue(char)", file="JsonTextWriter.cs"];
m45_294 [label="RaiseError(''Array item count {0} exceeds maximum count of {1}.''.FormatWith(CultureInfo.InvariantCulture, arrayItemCount, schema.MaximumItems), schema)", span="649-649", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateEndArray(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_295 [label="schema.MinimumItems != null && arrayItemCount < schema.MinimumItems", span="651-651", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateEndArray(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_296 [label="RaiseError(''Array item count {0} is less than minimum count of {1}.''.FormatWith(CultureInfo.InvariantCulture, arrayItemCount, schema.MinimumItems), schema)", span="652-652", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateEndArray(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_434 [label="RaiseError(''Invalid type. Expected {0} but got {1}.''.FormatWith(CultureInfo.InvariantCulture, currentSchema.Type, currentType), currentSchema)", span="884-884", cluster="Newtonsoft.Json.JsonValidatingReader.TestType(Newtonsoft.Json.Schema.JsonSchemaModel, Newtonsoft.Json.Schema.JsonSchemaType)", file="JsonTextWriter.cs"];
m45_433 [label="!JsonSchemaGenerator.HasFlag(currentSchema.Type, currentType)", span="882-882", cluster="Newtonsoft.Json.JsonValidatingReader.TestType(Newtonsoft.Json.Schema.JsonSchemaModel, Newtonsoft.Json.Schema.JsonSchemaType)", file="JsonTextWriter.cs"];
m45_435 [label="return false;", span="885-885", cluster="Newtonsoft.Json.JsonValidatingReader.TestType(Newtonsoft.Json.Schema.JsonSchemaModel, Newtonsoft.Json.Schema.JsonSchemaType)", file="JsonTextWriter.cs"];
m45_436 [label="return true;", span="888-888", cluster="Newtonsoft.Json.JsonValidatingReader.TestType(Newtonsoft.Json.Schema.JsonSchemaModel, Newtonsoft.Json.Schema.JsonSchemaType)", file="JsonTextWriter.cs"];
m45_437 [label="Exit Newtonsoft.Json.JsonValidatingReader.TestType(Newtonsoft.Json.Schema.JsonSchemaModel, Newtonsoft.Json.Schema.JsonSchemaType)", span="880-880", cluster="Newtonsoft.Json.JsonValidatingReader.TestType(Newtonsoft.Json.Schema.JsonSchemaModel, Newtonsoft.Json.Schema.JsonSchemaType)", file="JsonTextWriter.cs"];
m45_80 [label="return MiscellaneousUtils.ByteArrayCompare(bytes1, bytes2);", span="365-365", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonTextWriter.cs"];
m45_110 [label="Exit Newtonsoft.Json.JsonValidatingReader.ReadAsBytes()", span="379-379", cluster="Newtonsoft.Json.JsonValidatingReader.ReadAsBytes()", file="JsonTextWriter.cs"];
m45_105 [label="Entry long.CompareTo(long)", span="0-0", cluster="long.CompareTo(long)", file="JsonTextWriter.cs"];
m45_145 [label="Exit Newtonsoft.Json.Linq.JValue.CreateUndefined()", span="601-601", cluster="Newtonsoft.Json.Linq.JValue.CreateUndefined()", file="JsonTextWriter.cs"];
m45_172 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="JsonTextWriter.cs"];
m45_173 [label="current == null", span="677-677", cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="JsonTextWriter.cs"];
m45_174 [label="return JTokenType.String;", span="679-679", cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="JsonTextWriter.cs"];
m45_175 [label="current.GetValueOrDefault()", span="682-682", cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="JsonTextWriter.cs"];
m45_177 [label="JTokenType.String", span="685-685", cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="JsonTextWriter.cs"];
m45_178 [label="JTokenType.Raw", span="686-686", cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="JsonTextWriter.cs"];
m45_179 [label="return current.GetValueOrDefault();", span="687-687", cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="JsonTextWriter.cs"];
m45_180 [label="return JTokenType.String;", span="689-689", cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="JsonTextWriter.cs"];
m45_182 [label="Entry System.Nullable<T>.GetValueOrDefault()", span="0-0", cluster="System.Nullable<T>.GetValueOrDefault()", file="JsonTextWriter.cs"];
m45_183 [label="Entry Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="728-728", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonTextWriter.cs"];
m45_184 [label="converters != null && converters.Length > 0 && _value != null", span="730-730", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonTextWriter.cs"];
m45_185 [label="JsonConverter matchingConverter = JsonSerializer.GetMatchingConverter(converters, _value.GetType())", span="732-732", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonTextWriter.cs"];
m45_187 [label="matchingConverter.WriteJson(writer, _value, JsonSerializer.CreateDefault())", span="735-735", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonTextWriter.cs"];
m45_188 [label="return;", span="736-736", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonTextWriter.cs"];
m45_189 [label=_valueType, span="740-740", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonTextWriter.cs"];
m45_190 [label="JTokenType.Comment", span="742-742", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonTextWriter.cs"];
m45_192 [label="return;", span="744-744", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonTextWriter.cs"];
m45_193 [label="JTokenType.Raw", span="745-745", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonTextWriter.cs"];
m45_194 [label="writer.WriteRawValue(_value?.ToString())", span="746-746", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonTextWriter.cs"];
m45_195 [label="return;", span="747-747", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonTextWriter.cs"];
m45_197 [label="writer.WriteNull()", span="749-749", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonTextWriter.cs"];
m45_198 [label="return;", span="750-750", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonTextWriter.cs"];
m45_199 [label="JTokenType.Undefined", span="751-751", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonTextWriter.cs"];
m45_200 [label="writer.WriteUndefined()", span="752-752", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonTextWriter.cs"];
m45_202 [label="JTokenType.Integer", span="754-754", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonTextWriter.cs"];
m45_203 [label="_value is int", span="755-755", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonTextWriter.cs"];
m45_204 [label="writer.WriteValue((int)_value)", span="757-757", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonTextWriter.cs"];
m45_205 [label="_value is long", span="759-759", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonTextWriter.cs"];
m45_207 [label="_value is ulong", span="763-763", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonTextWriter.cs"];
m45_208 [label="writer.WriteValue((ulong)_value)", span="765-765", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonTextWriter.cs"];
m45_212 [label="_value is decimal", span="779-779", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonTextWriter.cs"];
m45_171 [label="Entry Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", span="675-675", cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="JsonTextWriter.cs"];
m45_176 [label="JTokenType.Comment", span="684-684", cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="JsonTextWriter.cs"];
m45_181 [label="Exit Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", span="675-675", cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="JsonTextWriter.cs"];
m45_186 [label="matchingConverter != null && matchingConverter.CanWrite", span="733-733", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonTextWriter.cs"];
m45_191 [label="writer.WriteComment(_value?.ToString())", span="743-743", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonTextWriter.cs"];
m45_196 [label="JTokenType.Null", span="748-748", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonTextWriter.cs"];
m45_201 [label="return;", span="753-753", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonTextWriter.cs"];
m45_206 [label="writer.WriteValue((long)_value)", span="761-761", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonTextWriter.cs"];
m45_209 [label="writer.WriteValue(Convert.ToInt64(_value, CultureInfo.InvariantCulture))", span="775-775", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonTextWriter.cs"];
m45_213 [label="writer.WriteValue((decimal)_value)", span="781-781", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonTextWriter.cs"];
m45_214 [label="_value is double", span="783-783", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonTextWriter.cs"];
m45_211 [label="JTokenType.Float", span="778-778", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonTextWriter.cs"];
m45_210 [label="return;", span="777-777", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonTextWriter.cs"];
m45_215 [label="writer.WriteValue((double)_value)", span="785-785", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonTextWriter.cs"];
m45_224 [label="writer.WriteValue(Convert.ToBoolean(_value, CultureInfo.InvariantCulture))", span="800-800", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonTextWriter.cs"];
m45_372 [label="!TestType(schema, JsonSchemaType.Float)", span="782-782", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateFloat(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_374 [label="ValidateNotDisallowed(schema)", span="785-785", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateFloat(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_375 [label="double value = Convert.ToDouble(_reader.Value, CultureInfo.InvariantCulture)", span="787-787", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateFloat(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_378 [label="RaiseError(''Float {0} exceeds maximum value of {1}.''.FormatWith(CultureInfo.InvariantCulture, JsonConvert.ToString(value), schema.Maximum), schema)", span="792-792", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateFloat(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_380 [label="RaiseError(''Float {0} equals maximum value of {1} and exclusive maximum is true.''.FormatWith(CultureInfo.InvariantCulture, JsonConvert.ToString(value), schema.Maximum), schema)", span="794-794", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateFloat(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_383 [label="RaiseError(''Float {0} is less than minimum value of {1}.''.FormatWith(CultureInfo.InvariantCulture, JsonConvert.ToString(value), schema.Minimum), schema)", span="800-800", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateFloat(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_385 [label="RaiseError(''Float {0} equals minimum value of {1} and exclusive minimum is true.''.FormatWith(CultureInfo.InvariantCulture, JsonConvert.ToString(value), schema.Minimum), schema)", span="802-802", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateFloat(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_389 [label="RaiseError(''Float {0} is not evenly divisible by {1}.''.FormatWith(CultureInfo.InvariantCulture, JsonConvert.ToString(value), schema.DivisibleBy), schema)", span="810-810", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateFloat(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_370 [label="schema == null", span="779-779", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateFloat(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_373 [label="return;", span="783-783", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateFloat(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_376 [label="schema.Maximum != null", span="789-789", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateFloat(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_377 [label="value > schema.Maximum", span="791-791", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateFloat(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_379 [label="schema.ExclusiveMaximum && value == schema.Maximum", span="793-793", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateFloat(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_382 [label="value < schema.Minimum", span="799-799", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateFloat(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_384 [label="schema.ExclusiveMinimum && value == schema.Minimum", span="801-801", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateFloat(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_387 [label="double remainder = FloatingPointRemainder(value, schema.DivisibleBy.Value)", span="807-807", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateFloat(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_381 [label="schema.Minimum != null", span="797-797", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateFloat(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_386 [label="schema.DivisibleBy != null", span="805-805", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateFloat(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_388 [label="!IsZero(remainder)", span="809-809", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateFloat(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_371 [label="return;", span="780-780", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateFloat(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_390 [label="Exit Newtonsoft.Json.JsonValidatingReader.ValidateFloat(Newtonsoft.Json.Schema.JsonSchemaModel)", span="777-777", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateFloat(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_99 [label="throw MiscellaneousUtils.CreateArgumentOutOfRangeException(nameof(valueType), valueType, ''Unexpected value type: {0}''.FormatWith(CultureInfo.InvariantCulture, valueType));", span="397-397", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonTextWriter.cs"];
m45_100 [label="Exit Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", span="248-248", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonTextWriter.cs"];
m45_101 [label="Entry System.Convert.ToDecimal(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToDecimal(object, System.IFormatProvider)", file="JsonTextWriter.cs"];
m45_102 [label="Entry decimal.CompareTo(decimal)", span="0-0", cluster="decimal.CompareTo(decimal)", file="JsonTextWriter.cs"];
m45_103 [label="Entry Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", span="401-401", cluster="Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", file="JsonTextWriter.cs"];
m45_9 [label="Exit Newtonsoft.Json.Linq.JValue.JValue(decimal)", span="79-79", cluster="Newtonsoft.Json.Linq.JValue.JValue(decimal)", file="JsonTextWriter.cs"];
m45_260 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ContainsValue<TSource>(TSource, System.Collections.Generic.IEqualityComparer<TSource>)", span="149-149", cluster="System.Collections.Generic.IEnumerable<TSource>.ContainsValue<TSource>(TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="JsonTextWriter.cs"];
m45_40 [label="Entry System.Collections.Generic.Stack<T>.Push(T)", span="0-0", cluster="System.Collections.Generic.Stack<T>.Push(T)", file="JsonTextWriter.cs"];
m45_124 [label="MathUtils.ApproxEquals(d1, d2)", span="407-407", cluster="Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", file="JsonTextWriter.cs"];
m45_125 [label="return 0;", span="409-409", cluster="Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", file="JsonTextWriter.cs"];
m45_126 [label="return d1.CompareTo(d2);", span="412-412", cluster="Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", file="JsonTextWriter.cs"];
m45_127 [label="Exit Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", span="401-401", cluster="Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", file="JsonTextWriter.cs"];
m45_128 [label="Entry System.Convert.ToDouble(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToDouble(object, System.IFormatProvider)", file="JsonTextWriter.cs"];
m45_283 [label="return _value.GetHashCode();", span="886-886", cluster="Newtonsoft.Json.Linq.JValue.GetHashCode()", file="JsonTextWriter.cs"];
m45_69 [label="JTokenType.Date", span="316-316", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonTextWriter.cs"];
m45_108 [label="ValidateCurrentToken()", span="383-383", cluster="Newtonsoft.Json.JsonValidatingReader.ReadAsBytes()", file="JsonTextWriter.cs"];
m45_218 [label="writer.WriteValue(Convert.ToDouble(_value, CultureInfo.InvariantCulture))", span="793-793", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonTextWriter.cs"];
m45_129 [label="Entry Newtonsoft.Json.JsonReader.ReadAsDateTime()", span="395-395", cluster="Newtonsoft.Json.JsonReader.ReadAsDateTime()", file="JsonTextWriter.cs"];
m45_219 [label="return;", span="795-795", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonTextWriter.cs"];
m45_364 [label="_currentScope != null && _currentScope.TokenType == JTokenType.Array", span="759-759", cluster="Newtonsoft.Json.JsonValidatingReader.ProcessValue()", file="JsonTextWriter.cs"];
m45_365 [label="_currentScope.ArrayItemCount++", span="761-761", cluster="Newtonsoft.Json.JsonValidatingReader.ProcessValue()", file="JsonTextWriter.cs"];
m45_366 [label=CurrentSchemas, span="763-763", cluster="Newtonsoft.Json.JsonValidatingReader.ProcessValue()", file="JsonTextWriter.cs"];
m45_367 [label="currentSchema != null\r\n                        && currentSchema.PositionalItemsValidation\r\n                        && !currentSchema.AllowAdditionalItems\r\n                        && (currentSchema.Items == null || _currentScope.ArrayItemCount - 1 >= currentSchema.Items.Count)", span="766-769", cluster="Newtonsoft.Json.JsonValidatingReader.ProcessValue()", file="JsonTextWriter.cs"];
m45_368 [label="RaiseError(''Index {0} has not been defined and the schema does not allow additional items.''.FormatWith(CultureInfo.InvariantCulture, _currentScope.ArrayItemCount), currentSchema)", span="771-771", cluster="Newtonsoft.Json.JsonValidatingReader.ProcessValue()", file="JsonTextWriter.cs"];
m45_369 [label="Exit Newtonsoft.Json.JsonValidatingReader.ProcessValue()", span="757-757", cluster="Newtonsoft.Json.JsonValidatingReader.ProcessValue()", file="JsonTextWriter.cs"];
m45_119 [label="Entry Unk.nameof", span="", cluster="Unk.nameof", file="JsonTextWriter.cs"];
m45_120 [label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47", cluster="string.FormatWith(System.IFormatProvider, object)", file="JsonTextWriter.cs"];
m45_122 [label="double d1 = Convert.ToDouble(objA, CultureInfo.InvariantCulture)", span="403-403", cluster="Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", file="JsonTextWriter.cs"];
m45_259 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime)", span="1075-1075", cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime)", file="JsonTextWriter.cs"];
m45_109 [label="return data;", span="384-384", cluster="Newtonsoft.Json.JsonValidatingReader.ReadAsBytes()", file="JsonTextWriter.cs"];
m45_361 [label="Entry System.Convert.ToInt64(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToInt64(object, System.IFormatProvider)", file="JsonTextWriter.cs"];
m45_104 [label="Entry Newtonsoft.Json.JsonReader.ReadAsInt32()", span="371-371", cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JsonTextWriter.cs"];
m45_12 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="JsonTextWriter.cs"];
m45_254 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", span="83-83", cluster="Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", file="JsonTextWriter.cs"];
m45_275 [label="return;", span="627-627", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateEndObject(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_274 [label="schema == null", span="626-626", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateEndObject(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_276 [label="Dictionary<string, bool> requiredProperties = _currentScope.RequiredProperties", span="629-629", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateEndObject(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_106 [label="Entry System.Convert.ToString(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToString(object, System.IFormatProvider)", file="JsonTextWriter.cs"];
m45_107 [label="Entry string.CompareOrdinal(string, string)", span="0-0", cluster="string.CompareOrdinal(string, string)", file="JsonTextWriter.cs"];
m45_230 [label="writer.WriteValue((byte[])_value)", span="815-815", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonTextWriter.cs"];
m45_117 [label="Entry Newtonsoft.Json.JsonReader.ReadAsDecimal()", span="389-389", cluster="Newtonsoft.Json.JsonReader.ReadAsDecimal()", file="JsonTextWriter.cs"];
m45_56 [label="objA is ulong || objB is ulong || objA is decimal || objB is decimal", span="299-299", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonTextWriter.cs"];
m45_57 [label="return Convert.ToDecimal(objA, CultureInfo.InvariantCulture).CompareTo(Convert.ToDecimal(objB, CultureInfo.InvariantCulture));", span="301-301", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonTextWriter.cs"];
m45_59 [label="JTokenType.Comment", span="304-304", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonTextWriter.cs"];
m45_58 [label="return CompareFloat(objA, objB);", span="303-303", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonTextWriter.cs"];
m45_60 [label="JTokenType.String", span="305-305", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonTextWriter.cs"];
m45_61 [label="JTokenType.Raw", span="306-306", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonTextWriter.cs"];
m45_55 [label="JTokenType.Float", span="288-288", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonTextWriter.cs"];
m45_116 [label="Exit Newtonsoft.Json.JsonValidatingReader.ReadAsDecimal()", span="391-391", cluster="Newtonsoft.Json.JsonValidatingReader.ReadAsDecimal()", file="JsonTextWriter.cs"];
m45_223 [label="JTokenType.Boolean", span="799-799", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonTextWriter.cs"];
m45_330 [label="!TestType(schema, JsonSchemaType.Integer)", span="710-710", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_332 [label="ValidateNotDisallowed(schema)", span="713-713", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_333 [label="object value = _reader.Value", span="715-715", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_336 [label="RaiseError(''Integer {0} exceeds maximum value of {1}.''.FormatWith(CultureInfo.InvariantCulture, value, schema.Maximum), schema)", span="720-720", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_338 [label="RaiseError(''Integer {0} equals maximum value of {1} and exclusive maximum is true.''.FormatWith(CultureInfo.InvariantCulture, value, schema.Maximum), schema)", span="722-722", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_341 [label="RaiseError(''Integer {0} is less than minimum value of {1}.''.FormatWith(CultureInfo.InvariantCulture, value, schema.Minimum), schema)", span="728-728", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_343 [label="RaiseError(''Integer {0} equals minimum value of {1} and exclusive minimum is true.''.FormatWith(CultureInfo.InvariantCulture, value, schema.Minimum), schema)", span="730-730", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_354 [label="RaiseError(''Integer {0} is not evenly divisible by {1}.''.FormatWith(CultureInfo.InvariantCulture, JsonConvert.ToString(value), schema.DivisibleBy), schema)", span="753-753", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_328 [label="schema == null", span="707-707", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_331 [label="return;", span="711-711", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_334 [label="schema.Maximum != null", span="717-717", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_335 [label="JValue.Compare(JTokenType.Integer, value, schema.Maximum) > 0", span="719-719", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_337 [label="schema.ExclusiveMaximum && JValue.Compare(JTokenType.Integer, value, schema.Maximum) == 0", span="721-721", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_340 [label="JValue.Compare(JTokenType.Integer, value, schema.Minimum) < 0", span="727-727", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_342 [label="schema.ExclusiveMinimum && JValue.Compare(JTokenType.Integer, value, schema.Minimum) == 0", span="729-729", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_346 [label="value is BigInteger", span="737-737", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_347 [label="BigInteger i = (BigInteger)value", span="741-741", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_352 [label="notDivisible = !IsZero(Convert.ToInt64(value, CultureInfo.InvariantCulture) % schema.DivisibleBy.Value)", span="750-750", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_339 [label="schema.Minimum != null", span="725-725", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_344 [label="schema.DivisibleBy != null", span="733-733", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_353 [label=notDivisible, span="752-752", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_348 [label="bool divisibleNonInteger = !Math.Abs(schema.DivisibleBy.Value - Math.Truncate(schema.DivisibleBy.Value)).Equals(0)", span="742-742", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_351 [label="notDivisible = i % new BigInteger(schema.DivisibleBy.Value) != 0", span="746-746", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_329 [label="return;", span="708-708", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_345 [label="bool notDivisible", span="735-735", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_350 [label="notDivisible = i != 0", span="744-744", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_349 [label=divisibleNonInteger, span="743-743", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_355 [label="Exit Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", span="705-705", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_290 [label="schema == null", span="643-643", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateEndArray(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_291 [label="return;", span="644-644", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateEndArray(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_292 [label="int arrayItemCount = _currentScope.ArrayItemCount", span="646-646", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateEndArray(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_391 [label="Entry System.Convert.ToDouble(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToDouble(object, System.IFormatProvider)", file="JsonTextWriter.cs"];
m45_428 [label="Entry Newtonsoft.Json.JsonValidatingReader.ValidateObject(Newtonsoft.Json.Schema.JsonSchemaModel)", span="872-872", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateObject(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_431 [label="return (TestType(schema, JsonSchemaType.Object));", span="877-877", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateObject(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_429 [label="schema == null", span="874-874", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateObject(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_430 [label="return true;", span="875-875", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateObject(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_432 [label="Exit Newtonsoft.Json.JsonValidatingReader.ValidateObject(Newtonsoft.Json.Schema.JsonSchemaModel)", span="872-872", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateObject(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_221 [label="Entry Newtonsoft.Json.JsonValidatingReader.WriteToken(System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>)", span="570-570", cluster="Newtonsoft.Json.JsonValidatingReader.WriteToken(System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>)", file="JsonTextWriter.cs"];
m45_227 [label="Entry Newtonsoft.Json.JsonValidatingReader.ValidateNull(Newtonsoft.Json.Schema.JsonSchemaModel)", span="655-655", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateNull(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_233 [label="isInUniqueArray || schemas.Any(s => s.Enum != null)", span="576-576", cluster="Newtonsoft.Json.JsonValidatingReader.WriteToken(System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>)", file="JsonTextWriter.cs"];
m45_236 [label="schemaScope.CurrentItemWriter = new JTokenWriter()", span="583-583", cluster="Newtonsoft.Json.JsonValidatingReader.WriteToken(System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>)", file="JsonTextWriter.cs"];
m45_239 [label="JToken finishedItem = schemaScope.CurrentItemWriter.Token", span="591-591", cluster="Newtonsoft.Json.JsonValidatingReader.WriteToken(System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>)", file="JsonTextWriter.cs"];
m45_226 [label="Entry Newtonsoft.Json.JsonValidatingReader.ValidateBoolean(Newtonsoft.Json.Schema.JsonSchemaModel)", span="666-666", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateBoolean(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_229 [label="Entry Newtonsoft.Json.JsonValidatingReader.ValidateEndArray(Newtonsoft.Json.Schema.JsonSchemaModel)", span="641-641", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateEndArray(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_232 [label="bool isInUniqueArray = (schemaScope.TokenType == JTokenType.Array && schemaScope.IsUniqueArray && schemaScope.ArrayItemCount > 0)", span="574-574", cluster="Newtonsoft.Json.JsonValidatingReader.WriteToken(System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>)", file="JsonTextWriter.cs"];
m45_235 [label="JsonTokenUtils.IsEndToken(_reader.TokenType)", span="580-580", cluster="Newtonsoft.Json.JsonValidatingReader.WriteToken(System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>)", file="JsonTextWriter.cs"];
m45_238 [label="schemaScope.CurrentItemWriter.Top == 0 && _reader.TokenType != JsonToken.PropertyName", span="589-589", cluster="Newtonsoft.Json.JsonValidatingReader.WriteToken(System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>)", file="JsonTextWriter.cs"];
m45_216 [label="Entry Newtonsoft.Json.Schema.JsonSchemaModelBuilder.JsonSchemaModelBuilder()", span="35-35", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.JsonSchemaModelBuilder()", file="JsonTextWriter.cs"];
m45_222 [label="Entry Newtonsoft.Json.JsonValidatingReader.ValidatePropertyName(Newtonsoft.Json.Schema.JsonSchemaModel)", span="826-826", cluster="Newtonsoft.Json.JsonValidatingReader.ValidatePropertyName(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_225 [label="Entry Newtonsoft.Json.JsonValidatingReader.ValidateString(Newtonsoft.Json.Schema.JsonSchemaModel)", span="677-677", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateString(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_228 [label="Entry Newtonsoft.Json.JsonValidatingReader.ValidateEndObject(Newtonsoft.Json.Schema.JsonSchemaModel)", span="624-624", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateEndObject(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_231 [label=_stack, span="572-572", cluster="Newtonsoft.Json.JsonValidatingReader.WriteToken(System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>)", file="JsonTextWriter.cs"];
m45_234 [label="schemaScope.CurrentItemWriter == null", span="578-578", cluster="Newtonsoft.Json.JsonValidatingReader.WriteToken(System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>)", file="JsonTextWriter.cs"];
m45_237 [label="schemaScope.CurrentItemWriter.WriteToken(_reader, false)", span="586-586", cluster="Newtonsoft.Json.JsonValidatingReader.WriteToken(System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>)", file="JsonTextWriter.cs"];
m45_240 [label="schemaScope.CurrentItemWriter = null", span="594-594", cluster="Newtonsoft.Json.JsonValidatingReader.WriteToken(System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>)", file="JsonTextWriter.cs"];
m45_242 [label="schemaScope.UniqueArrayItems.Contains(finishedItem, JToken.EqualityComparer)", span="598-598", cluster="Newtonsoft.Json.JsonValidatingReader.WriteToken(System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>)", file="JsonTextWriter.cs"];
m45_241 [label=isInUniqueArray, span="596-596", cluster="Newtonsoft.Json.JsonValidatingReader.WriteToken(System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>)", file="JsonTextWriter.cs"];
m45_8 [label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="JsonTextWriter.cs"];
m45_48 [label=valueType, span="263-263", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonTextWriter.cs"];
m45_49 [label="JTokenType.Integer", span="265-265", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonTextWriter.cs"];
m45_51 [label="return Convert.ToDecimal(objA, CultureInfo.InvariantCulture).CompareTo(Convert.ToDecimal(objB, CultureInfo.InvariantCulture));", span="278-278", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonTextWriter.cs"];
m45_50 [label="objA is ulong || objB is ulong || objA is decimal || objB is decimal", span="276-276", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonTextWriter.cs"];
m45_52 [label="objA is float || objB is float || objA is double || objB is double", span="280-280", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonTextWriter.cs"];
m45_402 [label="string propertyName = Convert.ToString(_reader.Value, CultureInfo.InvariantCulture)", span="831-831", cluster="Newtonsoft.Json.JsonValidatingReader.ValidatePropertyName(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_403 [label="_currentScope.RequiredProperties.ContainsKey(propertyName)", span="833-833", cluster="Newtonsoft.Json.JsonValidatingReader.ValidatePropertyName(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_404 [label="_currentScope.RequiredProperties[propertyName] = true", span="834-834", cluster="Newtonsoft.Json.JsonValidatingReader.ValidatePropertyName(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_406 [label="bool propertyDefinied = IsPropertyDefinied(schema, propertyName)", span="838-838", cluster="Newtonsoft.Json.JsonValidatingReader.ValidatePropertyName(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_408 [label="RaiseError(''Property '{0}' has not been defined and the schema does not allow additional properties.''.FormatWith(CultureInfo.InvariantCulture, propertyName), schema)", span="841-841", cluster="Newtonsoft.Json.JsonValidatingReader.ValidatePropertyName(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_409 [label="_currentScope.CurrentPropertyName = propertyName", span="844-844", cluster="Newtonsoft.Json.JsonValidatingReader.ValidatePropertyName(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_400 [label="schema == null", span="828-828", cluster="Newtonsoft.Json.JsonValidatingReader.ValidatePropertyName(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_405 [label="!schema.AllowAdditionalProperties", span="836-836", cluster="Newtonsoft.Json.JsonValidatingReader.ValidatePropertyName(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_407 [label="!propertyDefinied", span="840-840", cluster="Newtonsoft.Json.JsonValidatingReader.ValidatePropertyName(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_401 [label="return;", span="829-829", cluster="Newtonsoft.Json.JsonValidatingReader.ValidatePropertyName(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_410 [label="Exit Newtonsoft.Json.JsonValidatingReader.ValidatePropertyName(Newtonsoft.Json.Schema.JsonSchemaModel)", span="826-826", cluster="Newtonsoft.Json.JsonValidatingReader.ValidatePropertyName(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_41 [label="Entry Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", span="248-248", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonTextWriter.cs"];
m45_42 [label="objA == objB", span="250-250", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonTextWriter.cs"];
m45_43 [label="return 0;", span="252-252", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonTextWriter.cs"];
m45_44 [label="objB == null", span="254-254", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonTextWriter.cs"];
m45_45 [label="return 1;", span="256-256", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonTextWriter.cs"];
m45_123 [label="Entry Newtonsoft.Json.JsonReader.ReadAsString()", span="377-377", cluster="Newtonsoft.Json.JsonReader.ReadAsString()", file="JsonTextWriter.cs"];
m45_47 [label="return -1;", span="260-260", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonTextWriter.cs"];
m45_251 [label="RaiseError(''Value {0} is not defined in enum.''.FormatWith(CultureInfo.InvariantCulture, sw.ToString()), schema)", span="614-614", cluster="Newtonsoft.Json.JsonValidatingReader.WriteToken(System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>)", file="JsonTextWriter.cs"];
m45_115 [label="return d;", span="396-396", cluster="Newtonsoft.Json.JsonValidatingReader.ReadAsDecimal()", file="JsonTextWriter.cs"];
m45_6 [label="UniqueArrayItems = new List<JToken>()", span="87-87", cluster="Newtonsoft.Json.JsonValidatingReader.SchemaScope.SchemaScope(Newtonsoft.Json.Linq.JTokenType, System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>)", file="JsonTextWriter.cs"];
m45_7 [label="Exit Newtonsoft.Json.JsonValidatingReader.SchemaScope.SchemaScope(Newtonsoft.Json.Linq.JTokenType, System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>)", span="77-77", cluster="Newtonsoft.Json.JsonValidatingReader.SchemaScope.SchemaScope(Newtonsoft.Json.Linq.JTokenType, System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>)", file="JsonTextWriter.cs"];
m45_64 [label="return string.CompareOrdinal(s1, s2);", span="310-310", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonTextWriter.cs"];
m45_65 [label="JTokenType.Boolean", span="311-311", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", color=green, community=0, file="JsonTextWriter.cs"];
m45_66 [label="bool b1 = Convert.ToBoolean(objA, CultureInfo.InvariantCulture)", span="312-312", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", color=green, community=0, file="JsonTextWriter.cs"];
m45_67 [label="bool b2 = Convert.ToBoolean(objB, CultureInfo.InvariantCulture)", span="313-313", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", color=green, community=0, file="JsonTextWriter.cs"];
m45_68 [label="return b1.CompareTo(b2);", span="315-315", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonTextWriter.cs"];
m45_255 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(double)", span="1001-1001", cluster="Newtonsoft.Json.JsonWriter.WriteValue(double)", file="JsonTextWriter.cs"];
m45_358 [label="Entry System.Math.Abs(double)", span="0-0", cluster="System.Math.Abs(double)", file="JsonTextWriter.cs"];
m45_258 [label="Entry Unk.RaiseError", span="", cluster="Unk.RaiseError", file="JsonTextWriter.cs"];
m45_244 [label="schemaScope.UniqueArrayItems.Add(finishedItem)", span="601-601", cluster="Newtonsoft.Json.JsonValidatingReader.WriteToken(System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>)", file="JsonTextWriter.cs"];
m45_11 [label="Exit Newtonsoft.Json.Linq.JValue.JValue(char)", span="88-88", cluster="Newtonsoft.Json.Linq.JValue.JValue(char)", file="JsonTextWriter.cs"];
m45_26 [label="Exit Newtonsoft.Json.JsonValidatingReader.SchemaScope.GetRequiredProperties(Newtonsoft.Json.Schema.JsonSchemaModel)", span="91-91", cluster="Newtonsoft.Json.JsonValidatingReader.SchemaScope.GetRequiredProperties(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_111 [label="Entry System.DateTime.CompareTo(System.DateTime)", span="0-0", cluster="System.DateTime.CompareTo(System.DateTime)", file="JsonTextWriter.cs"];
m45_280 [label="Entry Newtonsoft.Json.Linq.JValue.GetHashCode()", span="879-879", cluster="Newtonsoft.Json.Linq.JValue.GetHashCode()", file="JsonTextWriter.cs"];
m45_281 [label="_value == null", span="881-881", cluster="Newtonsoft.Json.Linq.JValue.GetHashCode()", file="JsonTextWriter.cs"];
m45_24 [label="return Enumerable.Empty<string>();", span="94-94", cluster="Newtonsoft.Json.JsonValidatingReader.SchemaScope.GetRequiredProperties(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_25 [label="return schema.Properties.Where(p => p.Value.Required).Select(p => p.Key);", span="96-96", cluster="Newtonsoft.Json.JsonValidatingReader.SchemaScope.GetRequiredProperties(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_360 [label="Entry BigInteger.cstr", span="", cluster="BigInteger.cstr", file="JsonTextWriter.cs"];
m45_4 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(Newtonsoft.Json.Linq.JValue)", span="61-61", cluster="Newtonsoft.Json.Linq.JValue.JValue(Newtonsoft.Json.Linq.JValue)", file="JsonTextWriter.cs"];
m45_5 [label="Exit Newtonsoft.Json.Linq.JValue.JValue(Newtonsoft.Json.Linq.JValue)", span="61-61", cluster="Newtonsoft.Json.Linq.JValue.JValue(Newtonsoft.Json.Linq.JValue)", file="JsonTextWriter.cs"];
m45_249 [label="StringWriter sw = new StringWriter(CultureInfo.InvariantCulture)", span="611-611", cluster="Newtonsoft.Json.JsonValidatingReader.WriteToken(System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>)", file="JsonTextWriter.cs"];
m45_318 [label="RaiseError(''String '{0}' exceeds maximum length of {1}.''.FormatWith(CultureInfo.InvariantCulture, value, schema.MaximumLength), schema)", span="690-690", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateString(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_319 [label="schema.MinimumLength != null && value.Length < schema.MinimumLength", span="692-692", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateString(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_321 [label="schema.Patterns != null", span="695-695", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateString(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_322 [label="schema.Patterns", span="697-697", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateString(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_320 [label="RaiseError(''String '{0}' is less than minimum length of {1}.''.FormatWith(CultureInfo.InvariantCulture, value, schema.MinimumLength), schema)", span="693-693", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateString(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_323 [label="!Regex.IsMatch(value, pattern)", span="699-699", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateString(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_22 [label="Entry Newtonsoft.Json.JsonValidatingReader.SchemaScope.GetRequiredProperties(Newtonsoft.Json.Schema.JsonSchemaModel)", span="91-91", cluster="Newtonsoft.Json.JsonValidatingReader.SchemaScope.GetRequiredProperties(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_23 [label="schema == null || schema.Properties == null", span="93-93", cluster="Newtonsoft.Json.JsonValidatingReader.SchemaScope.GetRequiredProperties(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_250 [label="finishedItem.WriteTo(new JsonTextWriter(sw))", span="612-612", cluster="Newtonsoft.Json.JsonValidatingReader.WriteToken(System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>)", file="JsonTextWriter.cs"];
m45_79 [label="Debug.Assert(bytes1 != null)", span="363-363", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonTextWriter.cs"];
m45_82 [label="!(objB is Guid)", span="367-367", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonTextWriter.cs"];
m45_83 [label="throw new ArgumentException(''Object must be of type Guid.'');", span="369-369", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonTextWriter.cs"];
m45_85 [label="Guid guid2 = (Guid)objB", span="373-373", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonTextWriter.cs"];
m45_87 [label="JTokenType.Uri", span="376-376", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonTextWriter.cs"];
m45_89 [label="uri2 == null", span="378-378", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonTextWriter.cs"];
m45_91 [label="Uri uri1 = (Uri)objA", span="383-383", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonTextWriter.cs"];
m45_93 [label="JTokenType.TimeSpan", span="386-386", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonTextWriter.cs"];
m45_95 [label="throw new ArgumentException(''Object must be of type TimeSpan.'');", span="389-389", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonTextWriter.cs"];
m45_97 [label="TimeSpan ts2 = (TimeSpan)objB", span="393-393", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonTextWriter.cs"];
m45_84 [label="Guid guid1 = (Guid)objA", span="372-372", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonTextWriter.cs"];
m45_86 [label="return guid1.CompareTo(guid2);", span="375-375", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonTextWriter.cs"];
m45_88 [label="Uri uri2 = objB as Uri", span="377-377", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonTextWriter.cs"];
m45_90 [label="throw new ArgumentException(''Object must be of type Uri.'');", span="380-380", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonTextWriter.cs"];
m45_92 [label="return Comparer<string>.Default.Compare(uri1.ToString(), uri2.ToString());", span="385-385", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonTextWriter.cs"];
m45_94 [label="!(objB is TimeSpan)", span="387-387", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonTextWriter.cs"];
m45_96 [label="TimeSpan ts1 = (TimeSpan)objA", span="392-392", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonTextWriter.cs"];
m45_98 [label="return ts1.CompareTo(ts2);", span="395-395", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonTextWriter.cs"];
m45_293 [label="schema.MaximumItems != null && arrayItemCount > schema.MaximumItems", span="648-648", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateEndArray(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_297 [label="Exit Newtonsoft.Json.JsonValidatingReader.ValidateEndArray(Newtonsoft.Json.Schema.JsonSchemaModel)", span="641-641", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateEndArray(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_301 [label="return;", span="661-661", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateNull(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_298 [label="schema == null", span="657-657", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateNull(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_299 [label="return;", span="658-658", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateNull(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_300 [label="!TestType(schema, JsonSchemaType.Null)", span="660-660", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateNull(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_302 [label="ValidateNotDisallowed(schema)", span="663-663", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateNull(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_303 [label="Exit Newtonsoft.Json.JsonValidatingReader.ValidateNull(Newtonsoft.Json.Schema.JsonSchemaModel)", span="655-655", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateNull(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_423 [label="Entry Newtonsoft.Json.JsonValidatingReader.ValidateArray(Newtonsoft.Json.Schema.JsonSchemaModel)", span="864-864", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateArray(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_426 [label="return (TestType(schema, JsonSchemaType.Array));", span="869-869", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateArray(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_424 [label="schema == null", span="866-866", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateArray(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_425 [label="return true;", span="867-867", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateArray(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_427 [label="Exit Newtonsoft.Json.JsonValidatingReader.ValidateArray(Newtonsoft.Json.Schema.JsonSchemaModel)", span="864-864", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateArray(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_62 [label="string s1 = Convert.ToString(objA, CultureInfo.InvariantCulture)", span="307-307", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonTextWriter.cs"];
m45_261 [label="Entry System.IO.StringWriter.StringWriter(System.IFormatProvider)", span="0-0", cluster="System.IO.StringWriter.StringWriter(System.IFormatProvider)", file="JsonTextWriter.cs"];
m45_114 [label="ValidateCurrentToken()", span="395-395", cluster="Newtonsoft.Json.JsonValidatingReader.ReadAsDecimal()", file="JsonTextWriter.cs"];
m45_81 [label="JTokenType.Guid", span="366-366", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonTextWriter.cs"];
m45_393 [label="Entry Newtonsoft.Json.JsonValidatingReader.FloatingPointRemainder(double, double)", span="814-814", cluster="Newtonsoft.Json.JsonValidatingReader.FloatingPointRemainder(double, double)", file="JsonTextWriter.cs"];
m45_394 [label="return dividend - Math.Floor(dividend / divisor) * divisor;", span="816-816", cluster="Newtonsoft.Json.JsonValidatingReader.FloatingPointRemainder(double, double)", file="JsonTextWriter.cs"];
m45_395 [label="Exit Newtonsoft.Json.JsonValidatingReader.FloatingPointRemainder(double, double)", span="814-814", cluster="Newtonsoft.Json.JsonValidatingReader.FloatingPointRemainder(double, double)", file="JsonTextWriter.cs"];
m45_359 [label="Entry double.Equals(double)", span="0-0", cluster="double.Equals(double)", file="JsonTextWriter.cs"];
m45_112 [label="Entry Newtonsoft.Json.JsonValidatingReader.ReadAsDecimal()", span="391-391", cluster="Newtonsoft.Json.JsonValidatingReader.ReadAsDecimal()", file="JsonTextWriter.cs"];
m45_327 [label="Entry System.Text.RegularExpressions.Regex.IsMatch(string, string)", span="0-0", cluster="System.Text.RegularExpressions.Regex.IsMatch(string, string)", file="JsonTextWriter.cs"];
m45_363 [label="Entry Newtonsoft.Json.JsonConvert.ToString(object)", span="444-444", cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonTextWriter.cs"];
m45_282 [label="return 0;", span="883-883", cluster="Newtonsoft.Json.Linq.JValue.GetHashCode()", file="JsonTextWriter.cs"];
m45_362 [label="Entry Newtonsoft.Json.JsonValidatingReader.IsZero(double)", span="819-819", cluster="Newtonsoft.Json.JsonValidatingReader.IsZero(double)", file="JsonTextWriter.cs"];
m45_397 [label="double epsilon = 2.2204460492503131e-016", span="821-821", cluster="Newtonsoft.Json.JsonValidatingReader.IsZero(double)", file="JsonTextWriter.cs"];
m45_398 [label="return Math.Abs(value) < 20.0 * epsilon;", span="823-823", cluster="Newtonsoft.Json.JsonValidatingReader.IsZero(double)", file="JsonTextWriter.cs"];
m45_399 [label="Exit Newtonsoft.Json.JsonValidatingReader.IsZero(double)", span="819-819", cluster="Newtonsoft.Json.JsonValidatingReader.IsZero(double)", file="JsonTextWriter.cs"];
m45_243 [label="RaiseError(''Non-unique array item at index {0}.''.FormatWith(CultureInfo.InvariantCulture, schemaScope.ArrayItemCount - 1), schemaScope.Schemas.First(s => s.UniqueItems))", span="599-599", cluster="Newtonsoft.Json.JsonValidatingReader.WriteToken(System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>)", file="JsonTextWriter.cs"];
m45_248 [label="!schema.Enum.ContainsValue(finishedItem, JToken.EqualityComparer)", span="609-609", cluster="Newtonsoft.Json.JsonValidatingReader.WriteToken(System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>)", file="JsonTextWriter.cs"];
m45_326 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()", file="JsonTextWriter.cs"];
m45_246 [label=schemas, span="605-605", cluster="Newtonsoft.Json.JsonValidatingReader.WriteToken(System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>)", file="JsonTextWriter.cs"];
m45_113 [label="Entry System.Diagnostics.Debug.Assert(bool)", span="0-0", cluster="System.Diagnostics.Debug.Assert(bool)", file="JsonTextWriter.cs"];
m45_137 [label="!_reader.Read()", span="445-445", cluster="Newtonsoft.Json.JsonValidatingReader.Read()", file="JsonTextWriter.cs"];
m45_138 [label="return false;", span="446-446", cluster="Newtonsoft.Json.JsonValidatingReader.Read()", file="JsonTextWriter.cs"];
m45_139 [label="_reader.TokenType == JsonToken.Comment", span="448-448", cluster="Newtonsoft.Json.JsonValidatingReader.Read()", file="JsonTextWriter.cs"];
m45_143 [label="Exit Newtonsoft.Json.JsonValidatingReader.Read()", span="443-443", cluster="Newtonsoft.Json.JsonValidatingReader.Read()", file="JsonTextWriter.cs"];
m45_144 [label="Entry Newtonsoft.Json.JsonReader.Read()", span="365-365", cluster="Newtonsoft.Json.JsonReader.Read()", file="JsonTextWriter.cs"];
m45_438 [label="Entry Newtonsoft.Json.JsonValidatingReader.Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", span="891-891", cluster="Newtonsoft.Json.JsonValidatingReader.Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", file="JsonTextWriter.cs"];
m45_439 [label="IJsonLineInfo lineInfo = _reader as IJsonLineInfo", span="893-893", cluster="Newtonsoft.Json.JsonValidatingReader.Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", file="JsonTextWriter.cs"];
m45_440 [label="return lineInfo != null && lineInfo.HasLineInfo();", span="894-894", cluster="Newtonsoft.Json.JsonValidatingReader.Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", file="JsonTextWriter.cs"];
m45_441 [label="Exit Newtonsoft.Json.JsonValidatingReader.Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", span="891-891", cluster="Newtonsoft.Json.JsonValidatingReader.Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", file="JsonTextWriter.cs"];
m45_324 [label="Newtonsoft.Json.Linq.JValue", span="", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateString(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_325 [label="Exit Newtonsoft.Json.JsonValidatingReader.ValidateString(Newtonsoft.Json.Schema.JsonSchemaModel)", span="677-677", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateString(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonTextWriter.cs"];
m45_411 [label="Entry System.Convert.ToString(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToString(object, System.IFormatProvider)", file="JsonTextWriter.cs"];
m45_264 [label="Entry System.IO.StringWriter.ToString()", span="0-0", cluster="System.IO.StringWriter.ToString()", file="JsonTextWriter.cs"];
m45_356 [label="Entry Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", span="242-242", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonTextWriter.cs"];
m45_443 [label="Newtonsoft.Json.JsonValidatingReader", span="", file="JsonTextWriter.cs"];
m45_442 [label="Newtonsoft.Json.JsonValidatingReader.SchemaScope", span="", file="JsonTextWriter.cs"];
m47_984 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", span="1579-1579", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonWriter.cs"];
m47_987 [label="Assert.AreEqual(1.1m, reader.ReadAsDecimal())", span="1584-1584", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonWriter.cs"];
m47_989 [label="Assert.AreEqual(-1.1m, reader.ReadAsDecimal())", span="1587-1587", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonWriter.cs"];
m47_991 [label="Assert.AreEqual(0.0m, reader.ReadAsDecimal())", span="1590-1590", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonWriter.cs"];
m47_993 [label="Assert.AreEqual(0, reader.ReadAsDecimal())", span="1593-1593", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonWriter.cs"];
m47_1000 [label="Assert.AreEqual(0.000001m, reader.ReadAsDecimal())", span="1603-1603", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonWriter.cs"];
m47_1002 [label="Assert.AreEqual(null, reader.ReadAsDecimal())", span="1606-1606", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonWriter.cs"];
m47_986 [label="reader = new JsonTextReader(new StringReader(''1.1''))", span="1583-1583", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonWriter.cs"];
m47_988 [label="reader = new JsonTextReader(new StringReader(''-1.1''))", span="1586-1586", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonWriter.cs"];
m47_990 [label="reader = new JsonTextReader(new StringReader(''0.0''))", span="1589-1589", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonWriter.cs"];
m47_992 [label="reader = new JsonTextReader(new StringReader(''-0.0''))", span="1592-1592", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonWriter.cs"];
m47_994 [label="reader = new JsonTextReader(new StringReader(''9999999999999999999999999999999999999999999999999999999999999999999999999999asdasdasd''))", span="1595-1595", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonWriter.cs"];
m47_996 [label="reader = new JsonTextReader(new StringReader(''9999999999999999999999999999999999999999999999999999999999999999999999999999asdasdasd''))", span="1598-1598", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonWriter.cs"];
m47_999 [label="reader = new JsonTextReader(new StringReader(''1E-06''))", span="1602-1602", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonWriter.cs"];
m47_1001 [label="reader = new JsonTextReader(new StringReader(''''))", span="1605-1605", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonWriter.cs"];
m47_1003 [label="reader = new JsonTextReader(new StringReader(''-''))", span="1608-1608", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonWriter.cs"];
m47_985 [label="JsonTextReader reader = null", span="1581-1581", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonWriter.cs"];
m47_995 [label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsDecimal(), ''Unexpected character encountered while parsing number: s. Path '', line 1, position 77.'')", span="1596-1596", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonWriter.cs"];
m47_997 [label="reader.FloatParseHandling = Json.FloatParseHandling.Decimal", span="1599-1599", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonWriter.cs"];
m47_998 [label="ExceptionAssert.Throws<JsonReaderException>(() => reader.Read(), ''Unexpected character encountered while parsing number: s. Path '', line 1, position 77.'')", span="1600-1600", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonWriter.cs"];
m47_1004 [label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsDecimal(), ''Input string '-' is not a valid decimal. Path '', line 1, position 1.'')", span="1609-1609", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonWriter.cs"];
m47_1005 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", span="1579-1579", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonWriter.cs"];
m47_606 [label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="142-142", cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonWriter.cs"];
m47_1768 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", span="2723-2723", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="JsonWriter.cs"];
m47_1770 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2726-2726", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="JsonWriter.cs"];
m47_1769 [label="string json = ''new Date,()''", span="2725-2725", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="JsonWriter.cs"];
m47_1771 [label="ExceptionAssert.Throws<JsonReaderException>(() => { Assert.IsTrue(reader.Read()); }, ''Unexpected character while parsing constructor: ,. Path '', line 1, position 8.'')", span="2728-2728", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="JsonWriter.cs"];
m47_1772 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", span="2723-2723", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="JsonWriter.cs"];
m47_1569 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", span="2397-2397", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="JsonWriter.cs"];
m47_1570 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''/sdf''))", span="2399-2399", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="JsonWriter.cs"];
m47_1571 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Error parsing comment. Expected: *, got s. Path '', line 1, position 1.'')", span="2401-2401", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="JsonWriter.cs"];
m47_1572 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", span="2397-2397", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="JsonWriter.cs"];
m47_279 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", span="457-457", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonWriter.cs"];
m47_283 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="464-464", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonWriter.cs"];
m47_285 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="467-467", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonWriter.cs"];
m47_287 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="470-470", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonWriter.cs"];
m47_289 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="473-473", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonWriter.cs"];
m47_291 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="476-476", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonWriter.cs"];
m47_293 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="479-479", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonWriter.cs"];
m47_294 [label="Assert.AreEqual(''recipe_text'', reader.Value)", span="480-480", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonWriter.cs"];
m47_296 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="483-483", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonWriter.cs"];
m47_297 [label="Assert.AreEqual(''#C16------------------------------\r\n#C12Ingredients #C20\r\n#C16------------------------------\r\n\r\na piece of Leather Armor\r\n( ie #L \''Enhanced Leather Armor Boots\'' \''85644\'' )\r\n<img src=rdb://13264>\r\n\r\n#L \''Hacker Tool\'' \''87814\''\r\n<img src=rdb://99282>\r\n\r\n#L \''Clanalizer\'' \''208313\''\r\n<img src=rdb://156479>\r\n\r\n#C16------------------------------\r\n#C12Recipe #C16\r\n#C16------------------------------#C20\r\n\r\nHacker Tool\r\n#C15+#C20\r\na piece of Leather Armor\r\n#C15=#C20\r\n<img src=rdb://13264>\r\na piece of Hacked Leather Armor\r\n( ie : #L \''Hacked Leather Armor Boots\'' \''245979\'' )\r\n#C16Skills: |  BE  |#C20\r\n\r\n#C14------------------------------#C20\r\n\r\nClanalizer\r\n#C15+#C20\r\na piece of Hacked Leather Armor\r\n#C15=#C20\r\n<img src=rdb://13264>\r\na piece of Apocalypse Leather Armor\r\n( ie : #L \''Apocalypse Leather Armor Boots\'' \''245966\'' )\r\n#C16Skills: |  ??  |#C20\r\n\r\n#C16------------------------------\r\n#C12Details#C16\r\n#C16------------------------------#C20\r\n\r\n#L \''Apocalypse Leather Armor Boots\'' \''245967\''\r\n#L \''Apocalypse Leather Armor Gloves\'' \''245969\''\r\n#L \''Apocalypse Leather Armor Helmet\'' \''245975\''\r\n#L \''Apocalypse Leather Armor Pants\'' \''245971\''\r\n#L \''Apocalypse Leather Armor Sleeves\'' \''245973\''\r\n#L \''Apocalypse Leather Body Armor\'' \''245965\''\r\n\r\n#C16------------------------------\r\n#C12Comments#C16\r\n#C16------------------------------#C20\r\n\r\nNice froob armor.. but ugleh!\r\n\r\n'', reader.Value)", span="485-485", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonWriter.cs"];
m47_282 [label="Assert.IsTrue(reader.Read())", span="463-463", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonWriter.cs"];
m47_284 [label="Assert.IsTrue(reader.Read())", span="466-466", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonWriter.cs"];
m47_286 [label="Assert.IsTrue(reader.Read())", span="469-469", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonWriter.cs"];
m47_288 [label="Assert.IsTrue(reader.Read())", span="472-472", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonWriter.cs"];
m47_290 [label="Assert.IsTrue(reader.Read())", span="475-475", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonWriter.cs"];
m47_292 [label="Assert.IsTrue(reader.Read())", span="478-478", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonWriter.cs"];
m47_295 [label="Assert.IsTrue(reader.Read())", span="482-482", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonWriter.cs"];
m47_281 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="461-461", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonWriter.cs"];
m47_280 [label="string json = @''{''''recipe_id'''':''''12'''',''''recipe_name'''':''''Apocalypse Leather Armors'''',''''recipe_text'''':''''#C16------------------------------\r\n#C12Ingredients #C20\r\n#C16------------------------------\r\n\r\na piece of Leather Armor\r\n( ie #L \''''Enhanced Leather Armor Boots\'''' \''''85644\'''' )\r\n<img src=rdb:\/\/13264>\r\n\r\n#L \''''Hacker Tool\'''' \''''87814\''''\r\n<img src=rdb:\/\/99282>\r\n\r\n#L \''''Clanalizer\'''' \''''208313\''''\r\n<img src=rdb:\/\/156479>\r\n\r\n#C16------------------------------\r\n#C12Recipe #C16\r\n#C16------------------------------#C20\r\n\r\nHacker Tool\r\n#C15+#C20\r\na piece of Leather Armor\r\n#C15=#C20\r\n<img src=rdb:\/\/13264>\r\na piece of Hacked Leather Armor\r\n( ie : #L \''''Hacked Leather Armor Boots\'''' \''''245979\'''' )\r\n#C16Skills: |  BE  |#C20\r\n\r\n#C14------------------------------#C20\r\n\r\nClanalizer\r\n#C15+#C20\r\na piece of Hacked Leather Armor\r\n#C15=#C20\r\n<img src=rdb:\/\/13264>\r\na piece of Apocalypse Leather Armor\r\n( ie : #L \''''Apocalypse Leather Armor Boots\'''' \''''245966\'''' )\r\n#C16Skills: |  ??  |#C20\r\n\r\n#C16------------------------------\r\n#C12Details#C16\r\n#C16------------------------------#C20\r\n\r\n#L \''''Apocalypse Leather Armor Boots\'''' \''''245967\''''\r\n#L \''''Apocalypse Leather Armor Gloves\'''' \''''245969\''''\r\n#L \''''Apocalypse Leather Armor Helmet\'''' \''''245975\''''\r\n#L \''''Apocalypse Leather Armor Pants\'''' \''''245971\''''\r\n#L \''''Apocalypse Leather Armor Sleeves\'''' \''''245973\''''\r\n#L \''''Apocalypse Leather Body Armor\'''' \''''245965\''''\r\n\r\n#C16------------------------------\r\n#C12Comments#C16\r\n#C16------------------------------#C20\r\n\r\nNice froob armor.. but ugleh!\r\n\r\n'''',''''recipe_author'''':null}''", span="459-459", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonWriter.cs"];
m47_298 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", span="457-457", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonWriter.cs"];
m47_584 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", span="952-952", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonWriter.cs"];
m47_600 [label="Assert.AreEqual((long)i, reader.Value)", span="971-971", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonWriter.cs"];
m47_596 [label="Assert.IsTrue(reader.Read())", span="967-967", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonWriter.cs"];
m47_599 [label="Assert.IsTrue(reader.Read())", span="970-970", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonWriter.cs"];
m47_602 [label="Assert.IsTrue(reader.Read())", span="973-973", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonWriter.cs"];
m47_603 [label="Assert.IsFalse(reader.Read())", span="974-974", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonWriter.cs"];
m47_595 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="966-966", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonWriter.cs"];
m47_597 [label="int i = 0", span="968-968", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonWriter.cs"];
m47_601 [label="i++", span="968-968", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonWriter.cs"];
m47_598 [label="i < valueCount", span="968-968", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonWriter.cs"];
m47_594 [label="string json = sw.ToString()", span="964-964", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonWriter.cs"];
m47_585 [label="int valueCount = 10000", span="954-954", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonWriter.cs"];
m47_586 [label="StringWriter sw = new StringWriter()", span="955-955", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonWriter.cs"];
m47_593 [label="writer.WriteEndArray()", span="962-962", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonWriter.cs"];
m47_590 [label="i < valueCount", span="958-958", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonWriter.cs"];
m47_587 [label="JsonTextWriter writer = new JsonTextWriter(sw)", span="956-956", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonWriter.cs"];
m47_589 [label="int i = 0", span="958-958", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonWriter.cs"];
m47_592 [label="i++", span="958-958", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonWriter.cs"];
m47_591 [label="writer.WriteValue(i)", span="960-960", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonWriter.cs"];
m47_588 [label="writer.WriteStartArray()", span="957-957", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonWriter.cs"];
m47_604 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", span="952-952", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonWriter.cs"];
m47_1396 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", span="2153-2153", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonWriter.cs"];
m47_1400 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2160-2160", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonWriter.cs"];
m47_1402 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2163-2163", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonWriter.cs"];
m47_1404 [label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2166-2166", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonWriter.cs"];
m47_1405 [label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2167-2167", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonWriter.cs"];
m47_1406 [label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), reader.Value)", span="2168-2168", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonWriter.cs"];
m47_1408 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2171-2171", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonWriter.cs"];
m47_1399 [label="Assert.IsTrue(reader.Read())", span="2159-2159", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonWriter.cs"];
m47_1401 [label="Assert.IsTrue(reader.Read())", span="2162-2162", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonWriter.cs"];
m47_1407 [label="Assert.IsTrue(reader.Read())", span="2170-2170", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonWriter.cs"];
m47_1398 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2157-2157", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonWriter.cs"];
m47_1403 [label="reader.ReadAsDateTimeOffset()", span="2165-2165", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonWriter.cs"];
m47_1397 [label="string json = ''{\''Offset\'':\''\\/Date(946663200000+0600)\\/\''}''", span="2155-2155", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonWriter.cs"];
m47_1409 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", span="2153-2153", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonWriter.cs"];
m47_811 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", span="1303-1303", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="JsonWriter.cs"];
m47_813 [label="Assert.IsTrue(reader.Read())", span="1306-1306", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="JsonWriter.cs"];
m47_812 [label="JsonReader reader = new JsonTextReader(new StringReader(@''{aww''))", span="1305-1305", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="JsonWriter.cs"];
m47_814 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected end while parsing unquoted property name. Path '', line 1, position 4.'')", span="1308-1308", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="JsonWriter.cs"];
m47_815 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", span="1303-1303", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="JsonWriter.cs"];
m47_0 [label="Entry lambda expression", span="84-84", cluster="lambda expression", file="JsonWriter.cs"];
m47_34 [label="Assert.AreEqual(1, jsonTextReader.LinePosition)", span="109-109", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", color=green, community=0, file="JsonWriter.cs"];
m47_30 [label="jsonTextReader = new JsonTextReader(new StringReader(json))", span="104-104", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonWriter.cs"];
m47_33 [label="Assert.AreEqual(2, jsonTextReader.LineNumber)", span="108-108", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonWriter.cs"];
m47_35 [label="Assert.IsTrue(jsonTextReader.Read())", span="111-111", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonWriter.cs"];
m47_36 [label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="112-112", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", color=green, community=0, file="JsonWriter.cs"];
m47_37 [label="Assert.AreEqual(2, jsonTextReader.LineNumber)", span="113-113", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", color=green, community=0, file="JsonWriter.cs"];
m47_38 [label="Assert.AreEqual(5, jsonTextReader.LinePosition)", span="114-114", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", color=green, community=0, file="JsonWriter.cs"];
m47_39 [label="Assert.IsTrue(jsonTextReader.Read())", span="116-116", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", color=green, community=0, file="JsonWriter.cs"];
m47_40 [label="Assert.AreEqual(JsonToken.String, jsonTextReader.TokenType)", span="117-117", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", color=green, community=0, file="JsonWriter.cs"];
m47_41 [label="Assert.AreEqual(3, jsonTextReader.LineNumber)", span="118-118", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", color=green, community=0, file="JsonWriter.cs"];
m47_42 [label="Assert.AreEqual(4, jsonTextReader.LinePosition)", span="119-119", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", color=green, community=0, file="JsonWriter.cs"];
m47_43 [label="Assert.IsTrue(jsonTextReader.Read())", span="121-121", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonWriter.cs"];
m47_29 [label="json = ''\n{\''a\'':\n\''bc\'',\''d\'':true\n}''", span="102-102", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonWriter.cs"];
m47_31 [label="Assert.IsTrue(jsonTextReader.Read())", span="106-106", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonWriter.cs"];
m47_32 [label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", span="107-107", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonWriter.cs"];
m47_44 [label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="122-122", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonWriter.cs"];
m47_45 [label="Assert.AreEqual(3, jsonTextReader.LineNumber)", span="123-123", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonWriter.cs"];
m47_46 [label="Assert.AreEqual(9, jsonTextReader.LinePosition)", span="124-124", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonWriter.cs"];
m47_47 [label="Assert.IsTrue(jsonTextReader.Read())", span="126-126", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonWriter.cs"];
m47_48 [label="Assert.AreEqual(JsonToken.Boolean, jsonTextReader.TokenType)", span="127-127", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonWriter.cs"];
m47_49 [label="Assert.AreEqual(3, jsonTextReader.LineNumber)", span="128-128", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonWriter.cs"];
m47_50 [label="Assert.AreEqual(13, jsonTextReader.LinePosition)", span="129-129", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonWriter.cs"];
m47_51 [label="Assert.IsTrue(jsonTextReader.Read())", span="131-131", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonWriter.cs"];
m47_52 [label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", span="132-132", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonWriter.cs"];
m47_53 [label="Assert.AreEqual(4, jsonTextReader.LineNumber)", span="133-133", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonWriter.cs"];
m47_54 [label="Assert.AreEqual(1, jsonTextReader.LinePosition)", span="134-134", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonWriter.cs"];
m47_4 [label="_parameterizedCreator = value", span="90-90", cluster="lambda expression", file="JsonWriter.cs"];
m47_5 [label="Exit lambda expression", span="90-90", cluster="lambda expression", file="JsonWriter.cs"];
m47_6 [label="Entry Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", span="162-162", cluster="Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", file="JsonWriter.cs"];
m47_8 [label="Properties = new JsonPropertyCollection(UnderlyingType)", span="167-167", cluster="Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", file="JsonWriter.cs"];
m47_9 [label="Exit Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", span="162-162", cluster="Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", file="JsonWriter.cs"];
m47_10 [label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(System.Type)", span="46-46", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(System.Type)", file="JsonWriter.cs"];
m47_14 [label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", span="83-83", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonWriter.cs"];
m47_15 [label="Assert.AreEqual(2, jsonTextReader.LineNumber)", span="84-84", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonWriter.cs"];
m47_16 [label="Assert.AreEqual(1, jsonTextReader.LinePosition)", span="85-85", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonWriter.cs"];
m47_18 [label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="88-88", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonWriter.cs"];
m47_19 [label="Assert.AreEqual(2, jsonTextReader.LineNumber)", span="89-89", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonWriter.cs"];
m47_20 [label="Assert.AreEqual(5, jsonTextReader.LinePosition)", span="90-90", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonWriter.cs"];
m47_22 [label="Assert.AreEqual(JsonToken.String, jsonTextReader.TokenType)", span="93-93", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonWriter.cs"];
m47_23 [label="Assert.AreEqual(2, jsonTextReader.LineNumber)", span="94-94", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonWriter.cs"];
m47_24 [label="Assert.AreEqual(9, jsonTextReader.LinePosition)", span="95-95", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonWriter.cs"];
m47_26 [label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", span="98-98", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonWriter.cs"];
m47_27 [label="Assert.AreEqual(2, jsonTextReader.LineNumber)", span="99-99", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonWriter.cs"];
m47_28 [label="Assert.AreEqual(10, jsonTextReader.LinePosition)", span="100-100", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonWriter.cs"];
m47_3 [label="Entry lambda expression", span="90-90", cluster="lambda expression", file="JsonWriter.cs"];
m47_7 [label="ContractType = JsonContractType.Object", span="165-165", cluster="Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", file="JsonWriter.cs"];
m47_13 [label="Assert.IsTrue(jsonTextReader.Read())", span="82-82", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonWriter.cs"];
m47_17 [label="Assert.IsTrue(jsonTextReader.Read())", span="87-87", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonWriter.cs"];
m47_21 [label="Assert.IsTrue(jsonTextReader.Read())", span="92-92", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonWriter.cs"];
m47_25 [label="Assert.IsTrue(jsonTextReader.Read())", span="97-97", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonWriter.cs"];
m47_2 [label="Exit lambda expression", span="84-84", cluster="lambda expression", file="JsonWriter.cs"];
m47_12 [label="jsonTextReader = new JsonTextReader(new StringReader(json))", span="80-80", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonWriter.cs"];
m47_11 [label="Newtonsoft.Json.Serialization.JsonObjectContract", span="", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonWriter.cs"];
m47_1 [label="_overrideCreator = value", span="84-84", cluster="lambda expression", file="JsonWriter.cs"];
m47_55 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", span="61-61", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonWriter.cs"];
m47_1753 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", span="2702-2702", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", file="JsonWriter.cs"];
m47_1754 [label="JsonTextReader reader = new JsonTextReader(new StringReader(''true/''))", span="2704-2704", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", file="JsonWriter.cs"];
m47_1755 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Error parsing boolean value. Path '', line 1, position 4.'')", span="2706-2706", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", file="JsonWriter.cs"];
m47_1756 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", span="2702-2702", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", file="JsonWriter.cs"];
m47_1411 [label="Entry System.DateTime.DateTime(int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int)", file="JsonWriter.cs"];
m47_698 [label="Entry StringReader.cstr", span="", cluster="StringReader.cstr", file="JsonWriter.cs"];
m47_95 [label="Entry System.Convert.FromBase64String(string)", span="0-0", cluster="System.Convert.FromBase64String(string)", file="JsonWriter.cs"];
m47_1745 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", span="2689-2689", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonWriter.cs"];
m47_1749 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2695-2695", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonWriter.cs"];
m47_1751 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2698-2698", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonWriter.cs"];
m47_1748 [label="Assert.IsTrue(reader.Read())", span="2694-2694", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonWriter.cs"];
m47_1750 [label="Assert.IsTrue(reader.Read())", span="2697-2697", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonWriter.cs"];
m47_1747 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2692-2692", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonWriter.cs"];
m47_1746 [label="string json = ''{}''", span="2691-2691", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonWriter.cs"];
m47_1752 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", span="2689-2689", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonWriter.cs"];
m47_1354 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", span="2088-2088", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="JsonWriter.cs"];
m47_1355 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[1''))", span="2090-2090", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="JsonWriter.cs"];
m47_1356 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Unexpected end when reading bytes. Path '[0]', line 1, position 2.'')", span="2092-2092", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="JsonWriter.cs"];
m47_1357 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", span="2088-2088", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="JsonWriter.cs"];
m47_1361 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", span="2096-2096", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="JsonWriter.cs"];
m47_1362 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[1.0]''))", span="2098-2098", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="JsonWriter.cs"];
m47_1363 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Unexpected token when reading bytes: Float. Path '[0]', line 1, position 4.'')", span="2100-2100", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="JsonWriter.cs"];
m47_1364 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", span="2096-2096", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="JsonWriter.cs"];
m47_467 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", span="794-794", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_471 [label="Assert.AreEqual(0, reader.Depth)", span="806-806", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_473 [label="Assert.AreEqual(reader.TokenType, JsonToken.StartObject)", span="809-809", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_474 [label="Assert.AreEqual(0, reader.Depth)", span="810-810", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_475 [label="Assert.AreEqual('''', reader.Path)", span="811-811", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_477 [label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="814-814", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_478 [label="Assert.AreEqual(1, reader.Depth)", span="815-815", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_479 [label="Assert.AreEqual(''value'', reader.Path)", span="816-816", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_481 [label="Assert.AreEqual(reader.TokenType, JsonToken.String)", span="819-819", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_482 [label="Assert.AreEqual(reader.Value, @''Purple'')", span="820-820", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_483 [label="Assert.AreEqual(reader.QuoteChar, '\'')", span="821-821", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_484 [label="Assert.AreEqual(1, reader.Depth)", span="822-822", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_485 [label="Assert.AreEqual(''value'', reader.Path)", span="823-823", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_487 [label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="826-826", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_488 [label="Assert.AreEqual(1, reader.Depth)", span="827-827", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_489 [label="Assert.AreEqual(''array'', reader.Path)", span="828-828", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_491 [label="Assert.AreEqual(reader.TokenType, JsonToken.StartArray)", span="831-831", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_492 [label="Assert.AreEqual(1, reader.Depth)", span="832-832", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_493 [label="Assert.AreEqual(''array'', reader.Path)", span="833-833", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_495 [label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="836-836", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_496 [label="Assert.AreEqual(1L, reader.Value)", span="837-837", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_497 [label="Assert.AreEqual(2, reader.Depth)", span="838-838", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_498 [label="Assert.AreEqual(''array[0]'', reader.Path)", span="839-839", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_500 [label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="842-842", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_501 [label="Assert.AreEqual(2L, reader.Value)", span="843-843", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_502 [label="Assert.AreEqual(2, reader.Depth)", span="844-844", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_503 [label="Assert.AreEqual(''array[1]'', reader.Path)", span="845-845", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_505 [label="Assert.AreEqual(reader.TokenType, JsonToken.StartConstructor)", span="848-848", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_506 [label="Assert.AreEqual(''Date'', reader.Value)", span="849-849", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_507 [label="Assert.AreEqual(2, reader.Depth)", span="850-850", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_508 [label="Assert.AreEqual(''array[2]'', reader.Path)", span="851-851", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_510 [label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="854-854", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_511 [label="Assert.AreEqual(1L, reader.Value)", span="855-855", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_512 [label="Assert.AreEqual(3, reader.Depth)", span="856-856", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_513 [label="Assert.AreEqual(''array[2][0]'', reader.Path)", span="857-857", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_515 [label="Assert.AreEqual(reader.TokenType, JsonToken.EndConstructor)", span="860-860", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_516 [label="Assert.AreEqual(null, reader.Value)", span="861-861", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_517 [label="Assert.AreEqual(2, reader.Depth)", span="862-862", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_518 [label="Assert.AreEqual(''array[2]'', reader.Path)", span="863-863", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_520 [label="Assert.AreEqual(reader.TokenType, JsonToken.EndArray)", span="866-866", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_521 [label="Assert.AreEqual(1, reader.Depth)", span="867-867", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_522 [label="Assert.AreEqual(''array'', reader.Path)", span="868-868", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_524 [label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="871-871", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_525 [label="Assert.AreEqual(1, reader.Depth)", span="872-872", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_526 [label="Assert.AreEqual(''subobject'', reader.Path)", span="873-873", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_528 [label="Assert.AreEqual(reader.TokenType, JsonToken.StartObject)", span="876-876", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_529 [label="Assert.AreEqual(1, reader.Depth)", span="877-877", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_530 [label="Assert.AreEqual(''subobject'', reader.Path)", span="878-878", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_532 [label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="881-881", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_533 [label="Assert.AreEqual(2, reader.Depth)", span="882-882", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_534 [label="Assert.AreEqual(''subobject.prop'', reader.Path)", span="883-883", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_536 [label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="886-886", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_537 [label="Assert.AreEqual(2, reader.Depth)", span="887-887", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_538 [label="Assert.AreEqual(''subobject.prop'', reader.Path)", span="888-888", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_540 [label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="891-891", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_541 [label="Assert.AreEqual(2, reader.Depth)", span="892-892", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_542 [label="Assert.AreEqual(''subobject.proparray'', reader.Path)", span="893-893", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_544 [label="Assert.AreEqual(reader.TokenType, JsonToken.StartArray)", span="896-896", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_545 [label="Assert.AreEqual(2, reader.Depth)", span="897-897", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_546 [label="Assert.AreEqual(''subobject.proparray'', reader.Path)", span="898-898", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_548 [label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="901-901", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_549 [label="Assert.AreEqual(3, reader.Depth)", span="902-902", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_550 [label="Assert.AreEqual(''subobject.proparray[0]'', reader.Path)", span="903-903", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_552 [label="Assert.AreEqual(reader.TokenType, JsonToken.EndArray)", span="906-906", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_553 [label="Assert.AreEqual(2, reader.Depth)", span="907-907", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_554 [label="Assert.AreEqual(''subobject.proparray'', reader.Path)", span="908-908", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_556 [label="Assert.AreEqual(reader.TokenType, JsonToken.EndObject)", span="911-911", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_557 [label="Assert.AreEqual(1, reader.Depth)", span="912-912", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_558 [label="Assert.AreEqual(''subobject'', reader.Path)", span="913-913", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_560 [label="Assert.AreEqual(reader.TokenType, JsonToken.EndObject)", span="916-916", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_561 [label="Assert.AreEqual(0, reader.Depth)", span="917-917", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_562 [label="Assert.AreEqual('''', reader.Path)", span="918-918", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_470 [label="JsonReader reader = new JsonTextReader(sr)", span="804-804", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_469 [label="StringReader sr = new StringReader(input)", span="802-802", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_472 [label="reader.Read()", span="808-808", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_476 [label="reader.Read()", span="813-813", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_480 [label="reader.Read()", span="818-818", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_486 [label="reader.Read()", span="825-825", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_490 [label="reader.Read()", span="830-830", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_494 [label="reader.Read()", span="835-835", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_499 [label="reader.Read()", span="841-841", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_504 [label="reader.Read()", span="847-847", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_509 [label="reader.Read()", span="853-853", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_514 [label="reader.Read()", span="859-859", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_519 [label="reader.Read()", span="865-865", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_523 [label="reader.Read()", span="870-870", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_527 [label="reader.Read()", span="875-875", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_531 [label="reader.Read()", span="880-880", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_535 [label="reader.Read()", span="885-885", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_539 [label="reader.Read()", span="890-890", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_543 [label="reader.Read()", span="895-895", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_547 [label="reader.Read()", span="900-900", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_551 [label="reader.Read()", span="905-905", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_555 [label="reader.Read()", span="910-910", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_559 [label="reader.Read()", span="915-915", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_468 [label="string input = @''{\r\n  value:'Purple',\r\n  array:[1,2,new Date(1)],\r\n  subobject:{prop:1,proparray:[1]}\r\n}''", span="796-800", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_563 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", span="794-794", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonWriter.cs"];
m47_700 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", span="1123-1123", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonWriter.cs"];
m47_704 [label="Assert.AreEqual(typeof(long), reader.ValueType)", span="1129-1129", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonWriter.cs"];
m47_710 [label="Assert.AreEqual(typeof(BigInteger), reader.ValueType)", span="1138-1138", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonWriter.cs"];
m47_703 [label="reader.Read()", span="1128-1128", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonWriter.cs"];
m47_709 [label="reader.Read()", span="1136-1136", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonWriter.cs"];
m47_702 [label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="1127-1127", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonWriter.cs"];
m47_708 [label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="1135-1135", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonWriter.cs"];
m47_705 [label="int j = 1", span="1131-1131", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonWriter.cs"];
m47_711 [label="j++", span="1131-1131", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonWriter.cs"];
m47_701 [label="BigInteger i = new BigInteger(long.MinValue)", span="1125-1125", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonWriter.cs"];
m47_707 [label="BigInteger total = i + -j", span="1133-1133", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonWriter.cs"];
m47_706 [label="j < 1000", span="1131-1131", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonWriter.cs"];
m47_712 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", span="1123-1123", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonWriter.cs"];
m47_1050 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", span="1653-1653", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonWriter.cs"];
m47_1085 [label="Assert.AreEqual(json, sb.ToString())", span="1712-1712", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonWriter.cs"];
m47_1080 [label="object jsonObject = serializer.Deserialize(new JsonTextReader(new StringReader(json)))", span="1699-1699", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonWriter.cs"];
m47_1078 [label="string json = sb.ToString()", span="1695-1695", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonWriter.cs"];
m47_1084 [label="serializer.Serialize(jsonWriter, jsonObject)", span="1709-1709", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonWriter.cs"];
m47_1081 [label="sb = new StringBuilder()", span="1701-1701", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonWriter.cs"];
m47_1079 [label="JsonSerializer serializer = new JsonSerializer()", span="1697-1697", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonWriter.cs"];
m47_1051 [label="StringBuilder sb = new StringBuilder()", span="1655-1655", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonWriter.cs"];
m47_1077 [label="jsonWriter.WriteEndArray()", span="1692-1692", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonWriter.cs"];
m47_1083 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)\r\n            {\r\n                Formatting = Formatting.Indented\r\n            }", span="1704-1707", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonWriter.cs"];
m47_1082 [label="sw = new StringWriter(sb)", span="1702-1702", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonWriter.cs"];
m47_1052 [label="StringWriter sw = new StringWriter(sb)", span="1656-1656", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonWriter.cs"];
m47_1053 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)\r\n            {\r\n                Formatting = Formatting.Indented\r\n            }", span="1658-1661", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonWriter.cs"];
m47_1076 [label="jsonWriter.WriteNull()", span="1691-1691", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonWriter.cs"];
m47_1054 [label="jsonWriter.WriteStartArray()", span="1663-1663", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonWriter.cs"];
m47_1055 [label="jsonWriter.WriteValue(true)", span="1664-1664", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonWriter.cs"];
m47_1056 [label="jsonWriter.WriteStartObject()", span="1666-1666", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonWriter.cs"];
m47_1057 [label="jsonWriter.WritePropertyName(''integer'')", span="1667-1667", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonWriter.cs"];
m47_1058 [label="jsonWriter.WriteValue(99)", span="1668-1668", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonWriter.cs"];
m47_1059 [label="jsonWriter.WritePropertyName(''string'')", span="1669-1669", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonWriter.cs"];
m47_1060 [label="jsonWriter.WriteValue(''how now brown cow?'')", span="1670-1670", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonWriter.cs"];
m47_1061 [label="jsonWriter.WritePropertyName(''array'')", span="1671-1671", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonWriter.cs"];
m47_1062 [label="jsonWriter.WriteStartArray()", span="1673-1673", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonWriter.cs"];
m47_1065 [label="jsonWriter.WriteValue(i)", span="1676-1676", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonWriter.cs"];
m47_1067 [label="jsonWriter.WriteStartObject()", span="1679-1679", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonWriter.cs"];
m47_1068 [label="jsonWriter.WritePropertyName(''decimal'')", span="1680-1680", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonWriter.cs"];
m47_1069 [label="jsonWriter.WriteValue(990.00990099m)", span="1681-1681", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonWriter.cs"];
m47_1070 [label="jsonWriter.WriteEndObject()", span="1682-1682", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonWriter.cs"];
m47_1071 [label="jsonWriter.WriteValue(5)", span="1684-1684", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonWriter.cs"];
m47_1072 [label="jsonWriter.WriteEndArray()", span="1685-1685", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonWriter.cs"];
m47_1073 [label="jsonWriter.WriteEndObject()", span="1687-1687", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonWriter.cs"];
m47_1074 [label="jsonWriter.WriteValue(''This is a string.'')", span="1689-1689", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonWriter.cs"];
m47_1075 [label="jsonWriter.WriteNull()", span="1690-1690", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonWriter.cs"];
m47_1063 [label="int i = 0", span="1674-1674", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonWriter.cs"];
m47_1064 [label="i < 5", span="1674-1674", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonWriter.cs"];
m47_1066 [label="i++", span="1674-1674", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonWriter.cs"];
m47_1086 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", span="1653-1653", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonWriter.cs"];
m47_1333 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", span="2059-2059", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="JsonWriter.cs"];
m47_1334 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''new Date()''))", span="2061-2061", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="JsonWriter.cs"];
m47_1335 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Error reading bytes. Unexpected token: StartConstructor. Path '', line 1, position 9.'')", span="2063-2063", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="JsonWriter.cs"];
m47_1336 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", span="2059-2059", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="JsonWriter.cs"];
m47_1500 [label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0", cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="JsonWriter.cs"];
m47_772 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", span="1258-1258", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="JsonWriter.cs"];
m47_773 [label="JsonReader reader = new JsonTextReader(new StringReader(@'''h\u123''))", span="1260-1260", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="JsonWriter.cs"];
m47_774 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected end while parsing unicode character. Path '', line 1, position 4.'')", span="1262-1262", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="JsonWriter.cs"];
m47_775 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", span="1258-1258", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="JsonWriter.cs"];
m47_1721 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", span="2655-2655", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="JsonWriter.cs"];
m47_1723 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2658-2658", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="JsonWriter.cs"];
m47_1722 [label="string json = ''new Date !''", span="2657-2657", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="JsonWriter.cs"];
m47_1724 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected character while parsing constructor: !. Path '', line 1, position 9.'')", span="2660-2660", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="JsonWriter.cs"];
m47_1725 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", span="2655-2655", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="JsonWriter.cs"];
m47_138 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", span="262-262", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JsonWriter.cs"];
m47_142 [label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", span="271-271", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JsonWriter.cs"];
m47_144 [label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="274-274", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JsonWriter.cs"];
m47_147 [label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", span="279-279", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JsonWriter.cs"];
m47_141 [label="Assert.IsTrue(jsonTextReader.Read())", span="270-270", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JsonWriter.cs"];
m47_143 [label="Assert.IsTrue(jsonTextReader.Read())", span="273-273", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JsonWriter.cs"];
m47_146 [label="Assert.IsTrue(jsonTextReader.Read())", span="278-278", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JsonWriter.cs"];
m47_148 [label="Assert.IsFalse(jsonTextReader.Read())", span="281-281", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JsonWriter.cs"];
m47_140 [label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="268-268", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JsonWriter.cs"];
m47_145 [label="ExceptionAssert.Throws<JsonReaderException>(() => jsonTextReader.ReadAsInt32(), ''JSON integer 333333333333333333333333333333333333333 is too large or small for an Int32. Path 'ChildId', line 2, position 52.'')", span="276-276", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JsonWriter.cs"];
m47_139 [label="string json = @''{\r\n    ChildId: 333333333333333333333333333333333333333\r\n}''", span="264-266", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JsonWriter.cs"];
m47_149 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", span="262-262", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JsonWriter.cs"];
m47_106 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", span="206-206", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", file="JsonWriter.cs"];
m47_110 [label="Assert.AreEqual(JsonToken.String, jsonTextReader.TokenType)", span="215-215", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", file="JsonWriter.cs"];
m47_111 [label="Assert.AreEqual(@''first line\r\nsecond line\r\nthird line'', jsonTextReader.Value)", span="217-219", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", file="JsonWriter.cs"];
m47_109 [label="Assert.IsTrue(jsonTextReader.Read())", span="214-214", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", file="JsonWriter.cs"];
m47_108 [label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="212-212", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", file="JsonWriter.cs"];
m47_107 [label="string json = @''''''first line\r\nsecond line\r\nthird line''''''", span="208-210", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", file="JsonWriter.cs"];
m47_112 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", span="206-206", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", file="JsonWriter.cs"];
m47_1645 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", span="2541-2541", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonWriter.cs"];
m47_1649 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2547-2547", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonWriter.cs"];
m47_1651 [label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2550-2550", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonWriter.cs"];
m47_1653 [label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2553-2553", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonWriter.cs"];
m47_1655 [label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2556-2556", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonWriter.cs"];
m47_1657 [label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2559-2559", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonWriter.cs"];
m47_1659 [label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2562-2562", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonWriter.cs"];
m47_1661 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2565-2565", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonWriter.cs"];
m47_1648 [label="Assert.IsTrue(reader.Read())", span="2546-2546", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonWriter.cs"];
m47_1650 [label="Assert.IsTrue(reader.Read())", span="2549-2549", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonWriter.cs"];
m47_1652 [label="Assert.IsTrue(reader.Read())", span="2552-2552", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonWriter.cs"];
m47_1654 [label="Assert.IsTrue(reader.Read())", span="2555-2555", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonWriter.cs"];
m47_1656 [label="Assert.IsTrue(reader.Read())", span="2558-2558", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonWriter.cs"];
m47_1658 [label="Assert.IsTrue(reader.Read())", span="2561-2561", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonWriter.cs"];
m47_1660 [label="Assert.IsTrue(reader.Read())", span="2564-2564", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonWriter.cs"];
m47_1647 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2544-2544", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonWriter.cs"];
m47_1646 [label="string json = ''[,,, \n\r\n \0   \r  , ,    ]''", span="2543-2543", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonWriter.cs"];
m47_1662 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", span="2541-2541", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonWriter.cs"];
m47_1541 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", span="2365-2365", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="JsonWriter.cs"];
m47_1542 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''nul''))", span="2367-2367", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="JsonWriter.cs"];
m47_1543 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Error parsing null value. Path '', line 0, position 0.'')", span="2369-2369", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="JsonWriter.cs"];
m47_1544 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", span="2365-2365", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="JsonWriter.cs"];
m47_312 [label="Entry System.Globalization.StringInfo.StringInfo(string)", span="0-0", cluster="System.Globalization.StringInfo.StringInfo(string)", file="JsonWriter.cs"];
m47_402 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", span="683-683", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", file="JsonWriter.cs"];
m47_405 [label="reader.Read()", span="694-694", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", file="JsonWriter.cs"];
m47_404 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="693-693", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", file="JsonWriter.cs"];
m47_403 [label="string json = @''[\r\n''''Small'''',\r\n''''Medium'''',\r\n''''Large''''\r\n]   \r\n\r\n''", span="685-691", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", file="JsonWriter.cs"];
m47_406 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", span="683-683", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", file="JsonWriter.cs"];
m47_1729 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", span="2664-2664", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonWriter.cs"];
m47_1732 [label="Assert.IsTrue(reader.Read())", span="2669-2669", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonWriter.cs"];
m47_1733 [label="Assert.IsTrue(reader.Read())", span="2670-2670", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonWriter.cs"];
m47_1734 [label="Assert.IsTrue(reader.Read())", span="2671-2671", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonWriter.cs"];
m47_1735 [label="Assert.IsFalse(reader.Read())", span="2672-2672", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonWriter.cs"];
m47_1731 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2667-2667", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonWriter.cs"];
m47_1730 [label="string json = ''{hi:1, ''", span="2666-2666", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonWriter.cs"];
m47_1736 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", span="2664-2664", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonWriter.cs"];
m47_570 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", span="934-934", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", file="JsonWriter.cs"];
m47_571 [label="JsonReader reader = new JsonTextReader(new StringReader('''hi''))", span="936-936", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", file="JsonWriter.cs"];
m47_572 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unterminated string. Expected delimiter: '. Path '', line 1, position 3.'')", span="938-938", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", file="JsonWriter.cs"];
m47_573 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", span="934-934", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", file="JsonWriter.cs"];
m47_375 [label="Entry System.Text.UTF8Encoding.UTF8Encoding(bool)", span="0-0", cluster="System.Text.UTF8Encoding.UTF8Encoding(bool)", file="JsonWriter.cs"];
m47_349 [label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0", cluster="System.IO.MemoryStream.MemoryStream()", file="JsonWriter.cs"];
m47_1971 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", span="3044-3044", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JsonWriter.cs"];
m47_1973 [label="Assert.IsTrue(reader.Read())", span="3047-3047", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JsonWriter.cs"];
m47_1974 [label="Assert.IsTrue(reader.Read())", span="3048-3048", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JsonWriter.cs"];
m47_1972 [label="JsonReader reader = new JsonTextReader(new StringReader(@''{}}''))", span="3046-3046", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JsonWriter.cs"];
m47_1975 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Additional text encountered after finished reading JSON content: }. Path '', line 1, position 2.'')", span="3050-3050", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JsonWriter.cs"];
m47_1976 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", span="3044-3044", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JsonWriter.cs"];
m47_2165 [label="Entry System.DateTimeOffset.DateTimeOffset(long, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(long, System.TimeSpan)", file="JsonWriter.cs"];
m47_608 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(int)", span="409-409", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(int)", file="JsonWriter.cs"];
m47_1325 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", span="422-422", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="JsonWriter.cs"];
m47_2267 [label="Entry Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", span="3467-3467", cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="JsonWriter.cs"];
m47_2268 [label=Error, span="3469-3469", cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="JsonWriter.cs"];
m47_2270 [label="return _inner.Read(buffer, index, 1);", span="3472-3472", cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="JsonWriter.cs"];
m47_2269 [label="throw new Exception(''Read error'');", span="3470-3470", cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="JsonWriter.cs"];
m47_2271 [label="Exit Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", span="3467-3467", cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="JsonWriter.cs"];
m47_1365 [label="Entry lambda expression", span="2100-2100", cluster="lambda expression", file="JsonWriter.cs"];
m47_217 [label="reader.Read()", span="374-374", cluster="lambda expression", file="JsonWriter.cs"];
m47_240 [label="reader.Read()", span="404-404", cluster="lambda expression", file="JsonWriter.cs"];
m47_277 [label="reader.Read()", span="453-453", cluster="lambda expression", file="JsonWriter.cs"];
m47_382 [label="reader.Read()", span="644-644", cluster="lambda expression", file="JsonWriter.cs"];
m47_400 [label="reader.Read()", span="679-679", cluster="lambda expression", file="JsonWriter.cs"];
m47_413 [label="reader.Read()", span="708-708", cluster="lambda expression", file="JsonWriter.cs"];
m47_1010 [label="reader.Read()", span="1600-1600", cluster="lambda expression", file="JsonWriter.cs"];
m47_1045 [label="reader.Read()", span="1638-1638", cluster="lambda expression", file="JsonWriter.cs"];
m47_1048 [label="reader.Read()", span="1649-1649", cluster="lambda expression", file="JsonWriter.cs"];
m47_1223 [label="reader.Read()", span="1900-1900", cluster="lambda expression", file="JsonWriter.cs"];
m47_1301 [label="reader.Read()", span="2010-2010", cluster="lambda expression", file="JsonWriter.cs"];
m47_1546 [label="reader.Read()", span="2369-2369", cluster="lambda expression", file="JsonWriter.cs"];
m47_1553 [label="reader.Read()", span="2377-2377", cluster="lambda expression", file="JsonWriter.cs"];
m47_1560 [label="reader.Read()", span="2385-2385", cluster="lambda expression", file="JsonWriter.cs"];
m47_1567 [label="reader.Read()", span="2393-2393", cluster="lambda expression", file="JsonWriter.cs"];
m47_1574 [label="reader.Read()", span="2401-2401", cluster="lambda expression", file="JsonWriter.cs"];
m47_1719 [label="reader.Read()", span="2651-2651", cluster="lambda expression", file="JsonWriter.cs"];
m47_1727 [label="reader.Read()", span="2660-2660", cluster="lambda expression", file="JsonWriter.cs"];
m47_1758 [label="reader.Read()", span="2706-2706", cluster="lambda expression", file="JsonWriter.cs"];
m47_1775 [label="Assert.IsTrue(reader.Read())", span="2728-2728", cluster="lambda expression", file="JsonWriter.cs"];
m47_1939 [label="reader.Read()", span="2990-2990", cluster="lambda expression", file="JsonWriter.cs"];
m47_2033 [label="Assert.IsTrue(reader.Read())", span="3131-3131", cluster="lambda expression", file="JsonWriter.cs"];
m47_2065 [label="Assert.IsTrue(reader.Read())", span="3147-3147", cluster="lambda expression", file="JsonWriter.cs"];
m47_2068 [label="Assert.IsTrue(reader.Read())", span="3165-3165", cluster="lambda expression", file="JsonWriter.cs"];
m47_2190 [label="jsonTextReader.Read()", span="3323-3323", cluster="lambda expression", file="JsonWriter.cs"];
m47_2193 [label="jsonTextReader.Read()", span="3324-3324", cluster="lambda expression", file="JsonWriter.cs"];
m47_2196 [label="jsonTextReader.Read()", span="3333-3333", cluster="lambda expression", file="JsonWriter.cs"];
m47_2199 [label="jsonTextReader.Read()", span="3342-3342", cluster="lambda expression", file="JsonWriter.cs"];
m47_2202 [label="jsonTextReader.Read()", span="3343-3343", cluster="lambda expression", file="JsonWriter.cs"];
m47_2205 [label="jsonTextReader.Read()", span="3344-3344", cluster="lambda expression", file="JsonWriter.cs"];
m47_2231 [label="reader.Read()", span="3398-3398", cluster="lambda expression", file="JsonWriter.cs"];
m47_568 [label="new JsonTextReader (null)", span="926-926", cluster="lambda expression", file="JsonWriter.cs"];
m47_665 [label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="1074-1074", cluster="lambda expression", file="JsonWriter.cs"];
m47_681 [label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="1095-1095", cluster="lambda expression", file="JsonWriter.cs"];
m47_2230 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3397-3397", cluster="lambda expression", file="JsonWriter.cs"];
m47_216 [label="Entry lambda expression", span="374-374", cluster="lambda expression", file="JsonWriter.cs"];
m47_218 [label="Exit lambda expression", span="374-374", cluster="lambda expression", file="JsonWriter.cs"];
m47_239 [label="Entry lambda expression", span="404-404", cluster="lambda expression", file="JsonWriter.cs"];
m47_241 [label="Exit lambda expression", span="404-404", cluster="lambda expression", file="JsonWriter.cs"];
m47_276 [label="Entry lambda expression", span="453-453", cluster="lambda expression", file="JsonWriter.cs"];
m47_278 [label="Exit lambda expression", span="453-453", cluster="lambda expression", file="JsonWriter.cs"];
m47_381 [label="Entry lambda expression", span="642-647", cluster="lambda expression", file="JsonWriter.cs"];
m47_383 [label="Exit lambda expression", span="642-647", cluster="lambda expression", file="JsonWriter.cs"];
m47_399 [label="Entry lambda expression", span="679-679", cluster="lambda expression", file="JsonWriter.cs"];
m47_401 [label="Exit lambda expression", span="679-679", cluster="lambda expression", file="JsonWriter.cs"];
m47_412 [label="Entry lambda expression", span="706-711", cluster="lambda expression", file="JsonWriter.cs"];
m47_414 [label="Exit lambda expression", span="706-711", cluster="lambda expression", file="JsonWriter.cs"];
m47_1009 [label="Entry lambda expression", span="1600-1600", cluster="lambda expression", file="JsonWriter.cs"];
m47_1011 [label="Exit lambda expression", span="1600-1600", cluster="lambda expression", file="JsonWriter.cs"];
m47_1044 [label="Entry lambda expression", span="1638-1638", cluster="lambda expression", file="JsonWriter.cs"];
m47_1046 [label="Exit lambda expression", span="1638-1638", cluster="lambda expression", file="JsonWriter.cs"];
m47_1047 [label="Entry lambda expression", span="1649-1649", cluster="lambda expression", file="JsonWriter.cs"];
m47_1049 [label="Exit lambda expression", span="1649-1649", cluster="lambda expression", file="JsonWriter.cs"];
m47_1222 [label="Entry lambda expression", span="1900-1900", cluster="lambda expression", file="JsonWriter.cs"];
m47_1224 [label="Exit lambda expression", span="1900-1900", cluster="lambda expression", file="JsonWriter.cs"];
m47_1300 [label="Entry lambda expression", span="2010-2010", cluster="lambda expression", file="JsonWriter.cs"];
m47_1302 [label="Exit lambda expression", span="2010-2010", cluster="lambda expression", file="JsonWriter.cs"];
m47_1545 [label="Entry lambda expression", span="2369-2369", cluster="lambda expression", file="JsonWriter.cs"];
m47_1547 [label="Exit lambda expression", span="2369-2369", cluster="lambda expression", file="JsonWriter.cs"];
m47_1552 [label="Entry lambda expression", span="2377-2377", cluster="lambda expression", file="JsonWriter.cs"];
m47_1554 [label="Exit lambda expression", span="2377-2377", cluster="lambda expression", file="JsonWriter.cs"];
m47_1559 [label="Entry lambda expression", span="2385-2385", cluster="lambda expression", file="JsonWriter.cs"];
m47_1561 [label="Exit lambda expression", span="2385-2385", cluster="lambda expression", file="JsonWriter.cs"];
m47_1566 [label="Entry lambda expression", span="2393-2393", cluster="lambda expression", file="JsonWriter.cs"];
m47_1568 [label="Exit lambda expression", span="2393-2393", cluster="lambda expression", file="JsonWriter.cs"];
m47_1573 [label="Entry lambda expression", span="2401-2401", cluster="lambda expression", file="JsonWriter.cs"];
m47_1575 [label="Exit lambda expression", span="2401-2401", cluster="lambda expression", file="JsonWriter.cs"];
m47_1718 [label="Entry lambda expression", span="2651-2651", cluster="lambda expression", file="JsonWriter.cs"];
m47_1720 [label="Exit lambda expression", span="2651-2651", cluster="lambda expression", file="JsonWriter.cs"];
m47_1726 [label="Entry lambda expression", span="2660-2660", cluster="lambda expression", file="JsonWriter.cs"];
m47_1728 [label="Exit lambda expression", span="2660-2660", cluster="lambda expression", file="JsonWriter.cs"];
m47_1757 [label="Entry lambda expression", span="2706-2706", cluster="lambda expression", file="JsonWriter.cs"];
m47_1759 [label="Exit lambda expression", span="2706-2706", cluster="lambda expression", file="JsonWriter.cs"];
m47_1774 [label="Entry lambda expression", span="2728-2728", cluster="lambda expression", file="JsonWriter.cs"];
m47_1776 [label="Exit lambda expression", span="2728-2728", cluster="lambda expression", file="JsonWriter.cs"];
m47_1938 [label="Entry lambda expression", span="2990-2990", cluster="lambda expression", file="JsonWriter.cs"];
m47_1940 [label="Exit lambda expression", span="2990-2990", cluster="lambda expression", file="JsonWriter.cs"];
m47_2032 [label="Entry lambda expression", span="3131-3131", cluster="lambda expression", file="JsonWriter.cs"];
m47_2034 [label="Exit lambda expression", span="3131-3131", cluster="lambda expression", file="JsonWriter.cs"];
m47_2064 [label="Entry lambda expression", span="3147-3147", cluster="lambda expression", file="JsonWriter.cs"];
m47_2066 [label="Exit lambda expression", span="3147-3147", cluster="lambda expression", file="JsonWriter.cs"];
m47_2067 [label="Entry lambda expression", span="3165-3165", cluster="lambda expression", file="JsonWriter.cs"];
m47_2069 [label="Exit lambda expression", span="3165-3165", cluster="lambda expression", file="JsonWriter.cs"];
m47_2189 [label="Entry lambda expression", span="3323-3323", cluster="lambda expression", file="JsonWriter.cs"];
m47_2191 [label="Exit lambda expression", span="3323-3323", cluster="lambda expression", file="JsonWriter.cs"];
m47_2192 [label="Entry lambda expression", span="3324-3324", cluster="lambda expression", file="JsonWriter.cs"];
m47_2194 [label="Exit lambda expression", span="3324-3324", cluster="lambda expression", file="JsonWriter.cs"];
m47_2195 [label="Entry lambda expression", span="3333-3333", cluster="lambda expression", file="JsonWriter.cs"];
m47_2197 [label="Exit lambda expression", span="3333-3333", cluster="lambda expression", file="JsonWriter.cs"];
m47_2198 [label="Entry lambda expression", span="3342-3342", cluster="lambda expression", file="JsonWriter.cs"];
m47_2200 [label="Exit lambda expression", span="3342-3342", cluster="lambda expression", file="JsonWriter.cs"];
m47_2201 [label="Entry lambda expression", span="3343-3343", cluster="lambda expression", file="JsonWriter.cs"];
m47_2203 [label="Exit lambda expression", span="3343-3343", cluster="lambda expression", file="JsonWriter.cs"];
m47_2204 [label="Entry lambda expression", span="3344-3344", cluster="lambda expression", file="JsonWriter.cs"];
m47_2206 [label="Exit lambda expression", span="3344-3344", cluster="lambda expression", file="JsonWriter.cs"];
m47_2232 [label="Exit lambda expression", span="3395-3401", cluster="lambda expression", file="JsonWriter.cs"];
m47_152 [label="jsonTextReader.ReadAsInt32()", span="276-276", cluster="lambda expression", file="JsonWriter.cs"];
m47_169 [label="jsonTextReader.ReadAsInt32()", span="299-299", cluster="lambda expression", file="JsonWriter.cs"];
m47_172 [label="jsonTextReader.ReadAsInt32()", span="301-301", cluster="lambda expression", file="JsonWriter.cs"];
m47_175 [label="jsonTextReader.ReadAsInt32()", span="303-303", cluster="lambda expression", file="JsonWriter.cs"];
m47_178 [label="jsonTextReader.ReadAsInt32()", span="305-305", cluster="lambda expression", file="JsonWriter.cs"];
m47_220 [label="reader.ReadAsDecimal()", span="378-378", cluster="lambda expression", file="JsonWriter.cs"];
m47_224 [label="reader.ReadAsInt32()", span="382-382", cluster="lambda expression", file="JsonWriter.cs"];
m47_567 [label="Entry lambda expression", span="926-926", cluster="lambda expression", file="JsonWriter.cs"];
m47_569 [label="Exit lambda expression", span="926-926", cluster="lambda expression", file="JsonWriter.cs"];
m47_575 [label="reader.Read()", span="938-938", cluster="lambda expression", file="JsonWriter.cs"];
m47_664 [label="Entry lambda expression", span="1072-1076", cluster="lambda expression", file="JsonWriter.cs"];
m47_666 [label="reader.ReadAsInt32()", span="1075-1075", cluster="lambda expression", file="JsonWriter.cs"];
m47_680 [label="Entry lambda expression", span="1093-1097", cluster="lambda expression", file="JsonWriter.cs"];
m47_682 [label="reader.ReadAsInt32()", span="1096-1096", cluster="lambda expression", file="JsonWriter.cs"];
m47_777 [label="reader.Read()", span="1262-1262", cluster="lambda expression", file="JsonWriter.cs"];
m47_784 [label="reader.Read()", span="1270-1270", cluster="lambda expression", file="JsonWriter.cs"];
m47_791 [label="reader.ReadAsBytes()", span="1278-1278", cluster="lambda expression", file="JsonWriter.cs"];
m47_802 [label="reader.ReadAsBytes()", span="1289-1289", cluster="lambda expression", file="JsonWriter.cs"];
m47_817 [label="reader.Read()", span="1308-1308", cluster="lambda expression", file="JsonWriter.cs"];
m47_970 [label="reader.ReadAsInt32()", span="1560-1560", cluster="lambda expression", file="JsonWriter.cs"];
m47_973 [label="reader.ReadAsInt32()", span="1563-1563", cluster="lambda expression", file="JsonWriter.cs"];
m47_976 [label="reader.ReadAsInt32()", span="1566-1566", cluster="lambda expression", file="JsonWriter.cs"];
m47_979 [label="reader.ReadAsInt32()", span="1569-1569", cluster="lambda expression", file="JsonWriter.cs"];
m47_982 [label="reader.ReadAsInt32()", span="1575-1575", cluster="lambda expression", file="JsonWriter.cs"];
m47_1007 [label="reader.ReadAsDecimal()", span="1596-1596", cluster="lambda expression", file="JsonWriter.cs"];
m47_1013 [label="reader.ReadAsDecimal()", span="1609-1609", cluster="lambda expression", file="JsonWriter.cs"];
m47_1318 [label="reader.ReadAsBytes()", span="2036-2036", cluster="lambda expression", file="JsonWriter.cs"];
m47_1331 [label="reader.ReadAsDecimal()", span="2055-2055", cluster="lambda expression", file="JsonWriter.cs"];
m47_1338 [label="reader.ReadAsBytes()", span="2063-2063", cluster="lambda expression", file="JsonWriter.cs"];
m47_1345 [label="reader.ReadAsDateTimeOffset()", span="2072-2072", cluster="lambda expression", file="JsonWriter.cs"];
m47_1359 [label="reader.ReadAsBytes()", span="2092-2092", cluster="lambda expression", file="JsonWriter.cs"];
m47_1366 [label="reader.ReadAsBytes()", span="2100-2100", cluster="lambda expression", file="JsonWriter.cs"];
m47_1437 [label="reader.ReadAsDateTimeOffset()", span="2209-2209", cluster="lambda expression", file="JsonWriter.cs"];
m47_1539 [label="reader.ReadAsInt32()", span="2361-2361", cluster="lambda expression", file="JsonWriter.cs"];
m47_1978 [label="reader.Read()", span="3050-3050", cluster="lambda expression", file="JsonWriter.cs"];
m47_2229 [label="Entry lambda expression", span="3395-3401", cluster="lambda expression", file="JsonWriter.cs"];
m47_151 [label="Entry lambda expression", span="276-276", cluster="lambda expression", file="JsonWriter.cs"];
m47_168 [label="Entry lambda expression", span="299-299", cluster="lambda expression", file="JsonWriter.cs"];
m47_1436 [label="Entry lambda expression", span="2209-2209", cluster="lambda expression", file="JsonWriter.cs"];
m47_1538 [label="Entry lambda expression", span="2361-2361", cluster="lambda expression", file="JsonWriter.cs"];
m47_177 [label="Entry lambda expression", span="305-305", cluster="lambda expression", file="JsonWriter.cs"];
m47_816 [label="Entry lambda expression", span="1308-1308", cluster="lambda expression", file="JsonWriter.cs"];
m47_1977 [label="Entry lambda expression", span="3050-3050", cluster="lambda expression", file="JsonWriter.cs"];
m47_153 [label="Exit lambda expression", span="276-276", cluster="lambda expression", file="JsonWriter.cs"];
m47_170 [label="Exit lambda expression", span="299-299", cluster="lambda expression", file="JsonWriter.cs"];
m47_171 [label="Entry lambda expression", span="301-301", cluster="lambda expression", file="JsonWriter.cs"];
m47_173 [label="Exit lambda expression", span="301-301", cluster="lambda expression", file="JsonWriter.cs"];
m47_174 [label="Entry lambda expression", span="303-303", cluster="lambda expression", file="JsonWriter.cs"];
m47_176 [label="Exit lambda expression", span="303-303", cluster="lambda expression", file="JsonWriter.cs"];
m47_179 [label="Exit lambda expression", span="305-305", cluster="lambda expression", file="JsonWriter.cs"];
m47_219 [label="Entry lambda expression", span="378-378", cluster="lambda expression", file="JsonWriter.cs"];
m47_221 [label="Exit lambda expression", span="378-378", cluster="lambda expression", file="JsonWriter.cs"];
m47_223 [label="Entry lambda expression", span="382-382", cluster="lambda expression", file="JsonWriter.cs"];
m47_225 [label="Exit lambda expression", span="382-382", cluster="lambda expression", file="JsonWriter.cs"];
m47_574 [label="Entry lambda expression", span="938-938", cluster="lambda expression", file="JsonWriter.cs"];
m47_576 [label="Exit lambda expression", span="938-938", cluster="lambda expression", file="JsonWriter.cs"];
m47_667 [label="Exit lambda expression", span="1072-1076", cluster="lambda expression", file="JsonWriter.cs"];
m47_683 [label="Exit lambda expression", span="1093-1097", cluster="lambda expression", file="JsonWriter.cs"];
m47_776 [label="Entry lambda expression", span="1262-1262", cluster="lambda expression", file="JsonWriter.cs"];
m47_778 [label="Exit lambda expression", span="1262-1262", cluster="lambda expression", file="JsonWriter.cs"];
m47_783 [label="Entry lambda expression", span="1270-1270", cluster="lambda expression", file="JsonWriter.cs"];
m47_785 [label="Exit lambda expression", span="1270-1270", cluster="lambda expression", file="JsonWriter.cs"];
m47_790 [label="Entry lambda expression", span="1278-1278", cluster="lambda expression", file="JsonWriter.cs"];
m47_792 [label="Exit lambda expression", span="1278-1278", cluster="lambda expression", file="JsonWriter.cs"];
m47_801 [label="Entry lambda expression", span="1289-1289", cluster="lambda expression", file="JsonWriter.cs"];
m47_803 [label="Exit lambda expression", span="1289-1289", cluster="lambda expression", file="JsonWriter.cs"];
m47_818 [label="Exit lambda expression", span="1308-1308", cluster="lambda expression", file="JsonWriter.cs"];
m47_969 [label="Entry lambda expression", span="1560-1560", cluster="lambda expression", file="JsonWriter.cs"];
m47_971 [label="Exit lambda expression", span="1560-1560", cluster="lambda expression", file="JsonWriter.cs"];
m47_972 [label="Entry lambda expression", span="1563-1563", cluster="lambda expression", file="JsonWriter.cs"];
m47_974 [label="Exit lambda expression", span="1563-1563", cluster="lambda expression", file="JsonWriter.cs"];
m47_975 [label="Entry lambda expression", span="1566-1566", cluster="lambda expression", file="JsonWriter.cs"];
m47_977 [label="Exit lambda expression", span="1566-1566", cluster="lambda expression", file="JsonWriter.cs"];
m47_978 [label="Entry lambda expression", span="1569-1569", cluster="lambda expression", file="JsonWriter.cs"];
m47_980 [label="Exit lambda expression", span="1569-1569", cluster="lambda expression", file="JsonWriter.cs"];
m47_981 [label="Entry lambda expression", span="1575-1575", cluster="lambda expression", file="JsonWriter.cs"];
m47_983 [label="Exit lambda expression", span="1575-1575", cluster="lambda expression", file="JsonWriter.cs"];
m47_1006 [label="Entry lambda expression", span="1596-1596", cluster="lambda expression", file="JsonWriter.cs"];
m47_1008 [label="Exit lambda expression", span="1596-1596", cluster="lambda expression", file="JsonWriter.cs"];
m47_1012 [label="Entry lambda expression", span="1609-1609", cluster="lambda expression", file="JsonWriter.cs"];
m47_1014 [label="Exit lambda expression", span="1609-1609", cluster="lambda expression", file="JsonWriter.cs"];
m47_1317 [label="Entry lambda expression", span="2036-2036", cluster="lambda expression", file="JsonWriter.cs"];
m47_1319 [label="Exit lambda expression", span="2036-2036", cluster="lambda expression", file="JsonWriter.cs"];
m47_1330 [label="Entry lambda expression", span="2055-2055", cluster="lambda expression", file="JsonWriter.cs"];
m47_1332 [label="Exit lambda expression", span="2055-2055", cluster="lambda expression", file="JsonWriter.cs"];
m47_1337 [label="Entry lambda expression", span="2063-2063", cluster="lambda expression", file="JsonWriter.cs"];
m47_1339 [label="Exit lambda expression", span="2063-2063", cluster="lambda expression", file="JsonWriter.cs"];
m47_1344 [label="Entry lambda expression", span="2072-2072", cluster="lambda expression", file="JsonWriter.cs"];
m47_1346 [label="Exit lambda expression", span="2072-2072", cluster="lambda expression", file="JsonWriter.cs"];
m47_1358 [label="Entry lambda expression", span="2092-2092", cluster="lambda expression", file="JsonWriter.cs"];
m47_1360 [label="Exit lambda expression", span="2092-2092", cluster="lambda expression", file="JsonWriter.cs"];
m47_1367 [label="Exit lambda expression", span="2100-2100", cluster="lambda expression", file="JsonWriter.cs"];
m47_1438 [label="Exit lambda expression", span="2209-2209", cluster="lambda expression", file="JsonWriter.cs"];
m47_1540 [label="Exit lambda expression", span="2361-2361", cluster="lambda expression", file="JsonWriter.cs"];
m47_1979 [label="Exit lambda expression", span="3050-3050", cluster="lambda expression", file="JsonWriter.cs"];
m47_2272 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="JsonWriter.cs"];
m47_1098 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="JsonWriter.cs"];
m47_1148 [label="Entry System.Convert.ToInt32(char)", span="0-0", cluster="System.Convert.ToInt32(char)", file="JsonWriter.cs"];
m47_877 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", span="1419-1419", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonWriter.cs"];
m47_882 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="1426-1426", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonWriter.cs"];
m47_884 [label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1428-1428", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonWriter.cs"];
m47_887 [label="Assert.AreEqual(JsonToken.Bytes, reader.TokenType)", span="1431-1431", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonWriter.cs"];
m47_889 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="1433-1433", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonWriter.cs"];
m47_881 [label="Assert.IsTrue(reader.Read())", span="1425-1425", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonWriter.cs"];
m47_883 [label="Assert.IsTrue(reader.Read())", span="1427-1427", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonWriter.cs"];
m47_888 [label="Assert.IsTrue(reader.Read())", span="1432-1432", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonWriter.cs"];
m47_880 [label="JsonReader reader = new JsonTextReader(new StringReader(@''[1,''' + Convert.ToBase64String(helloWorldData) + @''']''))", span="1424-1424", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonWriter.cs"];
m47_885 [label="byte[] data = reader.ReadAsBytes()", span="1429-1429", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonWriter.cs"];
m47_886 [label="CollectionAssert.AreEquivalent(helloWorldData, data)", span="1430-1430", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonWriter.cs"];
m47_890 [label="Assert.IsFalse(reader.Read())", span="1435-1435", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonWriter.cs"];
m47_879 [label="byte[] helloWorldData = Encoding.UTF8.GetBytes(helloWorld)", span="1422-1422", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonWriter.cs"];
m47_878 [label="string helloWorld = ''Hello world!''", span="1421-1421", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonWriter.cs"];
m47_891 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", span="1419-1419", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonWriter.cs"];
m47_935 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", span="1506-1506", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="JsonWriter.cs"];
m47_938 [label="reader.Read()", span="1531-1531", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="JsonWriter.cs"];
m47_937 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1530-1530", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="JsonWriter.cs"];
m47_936 [label="string json = @''[\r\n  true,\r\n  {\r\n    ''''integer'''': 99,\r\n    ''''string'''': ''''how now brown cow?'''',\r\n    ''''array'''': [\r\n      0,\r\n      1,\r\n      2,\r\n      3,\r\n      4,\r\n      {\r\n        ''''decimal'''': 990.00990099\r\n      },\r\n      5\r\n    ]\r\n  },\r\n  ''''This is a string.'''',\r\n  null,\r\n  null\r\n]''", span="1508-1528", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="JsonWriter.cs"];
m47_939 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", span="1506-1506", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="JsonWriter.cs"];
m47_605 [label="Entry System.IO.StringWriter.StringWriter()", span="0-0", cluster="System.IO.StringWriter.StringWriter()", file="JsonWriter.cs"];
m47_1948 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", span="3006-3006", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonWriter.cs"];
m47_1952 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3013-3013", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonWriter.cs"];
m47_1953 [label="Assert.AreEqual(32m, reader.Value)", span="3014-3014", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonWriter.cs"];
m47_1950 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3010-3010", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonWriter.cs"];
m47_1951 [label="reader.ReadAsDecimal()", span="3012-3012", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonWriter.cs"];
m47_1949 [label="string json = @''0x20''", span="3008-3008", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonWriter.cs"];
m47_1954 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", span="3006-3006", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonWriter.cs"];
m47_1091 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="404-404", cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="JsonWriter.cs"];
m47_2207 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", span="3353-3353", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonWriter.cs"];
m47_2219 [label="Assert.AreEqual(decimal.MaxValue, max)", span="3371-3371", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonWriter.cs"];
m47_2221 [label="Assert.AreEqual(decimal.MinValue, min)", span="3374-3374", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonWriter.cs"];
m47_2217 [label="Assert.IsTrue(reader.Read())", span="3368-3368", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonWriter.cs"];
m47_2222 [label="Assert.IsTrue(reader.Read())", span="3376-3376", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonWriter.cs"];
m47_2216 [label="JsonTextReader reader = new JsonTextReader(sr)", span="3366-3366", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonWriter.cs"];
m47_2215 [label="StringReader sr = new StringReader(json)", span="3365-3365", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonWriter.cs"];
m47_2218 [label="decimal? max = reader.ReadAsDecimal()", span="3370-3370", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonWriter.cs"];
m47_2220 [label="decimal? min = reader.ReadAsDecimal()", span="3373-3373", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonWriter.cs"];
m47_2214 [label="string json = sw.ToString()", span="3363-3363", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonWriter.cs"];
m47_2208 [label="StringWriter sw = new StringWriter()", span="3355-3355", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonWriter.cs"];
m47_2213 [label="writer.WriteEndArray()", span="3361-3361", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonWriter.cs"];
m47_2209 [label="JsonTextWriter writer = new JsonTextWriter(sw)", span="3356-3356", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonWriter.cs"];
m47_2212 [label="writer.WriteValue(decimal.MinValue)", span="3360-3360", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonWriter.cs"];
m47_2210 [label="writer.WriteStartArray()", span="3358-3358", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonWriter.cs"];
m47_2211 [label="writer.WriteValue(decimal.MaxValue)", span="3359-3359", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonWriter.cs"];
m47_2223 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", span="3353-3353", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonWriter.cs"];
m47_1326 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", span="2051-2051", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="JsonWriter.cs"];
m47_1327 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''new Date()''))", span="2053-2053", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="JsonWriter.cs"];
m47_1328 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDecimal(); }, ''Error reading decimal. Unexpected token: StartConstructor. Path '', line 1, position 9.'')", span="2055-2055", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="JsonWriter.cs"];
m47_1329 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", span="2051-2051", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="JsonWriter.cs"];
m47_863 [label="Entry System.IO.StringReader.ReadLine()", span="0-0", cluster="System.IO.StringReader.ReadLine()", file="JsonWriter.cs"];
m47_893 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", span="1439-1439", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonWriter.cs"];
m47_898 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1446-1446", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonWriter.cs"];
m47_901 [label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1449-1449", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonWriter.cs"];
m47_905 [label="Assert.AreEqual(JsonToken.Bytes, reader.TokenType)", span="1453-1453", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonWriter.cs"];
m47_907 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1455-1455", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonWriter.cs"];
m47_897 [label="Assert.IsTrue(reader.Read())", span="1445-1445", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonWriter.cs"];
m47_899 [label="Assert.IsTrue(reader.Read())", span="1447-1447", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonWriter.cs"];
m47_900 [label="Assert.IsTrue(reader.Read())", span="1448-1448", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonWriter.cs"];
m47_902 [label="Assert.IsTrue(reader.Read())", span="1450-1450", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonWriter.cs"];
m47_906 [label="Assert.IsTrue(reader.Read())", span="1454-1454", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonWriter.cs"];
m47_896 [label="JsonReader reader = new JsonTextReader(new StringReader(@''{num:1,data:''' + Convert.ToBase64String(helloWorldData) + @'''}''))", span="1444-1444", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonWriter.cs"];
m47_904 [label="CollectionAssert.AreEquivalent(helloWorldData, data)", span="1452-1452", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonWriter.cs"];
m47_908 [label="Assert.IsFalse(reader.Read())", span="1457-1457", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonWriter.cs"];
m47_903 [label="byte[] data = reader.ReadAsBytes()", span="1451-1451", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonWriter.cs"];
m47_895 [label="byte[] helloWorldData = Encoding.UTF8.GetBytes(helloWorld)", span="1442-1442", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonWriter.cs"];
m47_894 [label="string helloWorld = ''Hello world!''", span="1441-1441", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonWriter.cs"];
m47_909 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", span="1439-1439", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonWriter.cs"];
m47_663 [label="Entry long.ToString(System.IFormatProvider)", span="0-0", cluster="long.ToString(System.IFormatProvider)", file="JsonWriter.cs"];
m47_1094 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="873-873", cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="JsonWriter.cs"];
m47_1529 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", span="2349-2349", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonWriter.cs"];
m47_1533 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2356-2356", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonWriter.cs"];
m47_1535 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2359-2359", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonWriter.cs"];
m47_1532 [label="Assert.IsTrue(reader.Read())", span="2355-2355", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonWriter.cs"];
m47_1534 [label="Assert.IsTrue(reader.Read())", span="2358-2358", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonWriter.cs"];
m47_1531 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2353-2353", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonWriter.cs"];
m47_1536 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsInt32(); }, ''Input string '1.1' is not a valid integer. Path 'Name', line 1, position 12.'')", span="2361-2361", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonWriter.cs"];
m47_1530 [label="string json = @''{''''Name'''': 1.1}''", span="2351-2351", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonWriter.cs"];
m47_1537 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", span="2349-2349", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonWriter.cs"];
m47_1941 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", span="2994-2994", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonWriter.cs"];
m47_1945 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3001-3001", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonWriter.cs"];
m47_1946 [label="Assert.AreEqual(8m, reader.Value)", span="3002-3002", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonWriter.cs"];
m47_1943 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2998-2998", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonWriter.cs"];
m47_1944 [label="reader.ReadAsDecimal()", span="3000-3000", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonWriter.cs"];
m47_1942 [label="string json = @''010''", span="2996-2996", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonWriter.cs"];
m47_1947 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", span="2994-2994", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonWriter.cs"];
m47_337 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", span="556-556", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonWriter.cs"];
m47_340 [label="Assert.IsTrue(ms.CanRead)", span="561-561", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonWriter.cs"];
m47_345 [label="Assert.IsTrue(ms.CanRead)", span="568-568", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonWriter.cs"];
m47_347 [label="Assert.IsTrue(ms.CanRead)", span="570-570", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonWriter.cs"];
m47_339 [label="JsonTextReader reader = new JsonTextReader(new StreamReader(ms))", span="559-559", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonWriter.cs"];
m47_344 [label="reader = new JsonTextReader(new StreamReader(ms)) { CloseInput = false }", span="566-566", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonWriter.cs"];
m47_338 [label="MemoryStream ms = new MemoryStream()", span="558-558", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonWriter.cs"];
m47_341 [label="reader.Close()", span="562-562", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonWriter.cs"];
m47_343 [label="ms = new MemoryStream()", span="565-565", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonWriter.cs"];
m47_346 [label="reader.Close()", span="569-569", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonWriter.cs"];
m47_342 [label="Assert.IsFalse(ms.CanRead)", span="563-563", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonWriter.cs"];
m47_348 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", span="556-556", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonWriter.cs"];
m47_609 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="428-428", cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="JsonWriter.cs"];
m47_1839 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", span="2833-2833", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1843 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2858-2858", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1844 [label="Assert.AreEqual(''comment*//*hi*/'', reader.Value)", span="2859-2859", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1845 [label="Assert.AreEqual(2, reader.LineNumber)", span="2860-2860", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1847 [label="Assert.AreEqual(2, reader.LineNumber)", span="2863-2863", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1848 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2864-2864", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1850 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2867-2867", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1851 [label="Assert.AreEqual(3, reader.LineNumber)", span="2868-2868", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1853 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2871-2871", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1854 [label="Assert.AreEqual(''Name'', reader.Value)", span="2872-2872", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1855 [label="Assert.AreEqual(3, reader.LineNumber)", span="2873-2873", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1857 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2876-2876", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1858 [label="Assert.AreEqual(4, reader.LineNumber)", span="2877-2877", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1860 [label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="2880-2880", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1861 [label="Assert.AreEqual(true, reader.Value)", span="2881-2881", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1862 [label="Assert.AreEqual(4, reader.LineNumber)", span="2882-2882", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1864 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2885-2885", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1865 [label="Assert.AreEqual(''comment after true'', reader.Value)", span="2886-2886", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1866 [label="Assert.AreEqual(5, reader.LineNumber)", span="2887-2887", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1868 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2890-2890", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1869 [label="Assert.AreEqual(''comment after comma'', reader.Value)", span="2891-2891", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1870 [label="Assert.AreEqual(6, reader.LineNumber)", span="2892-2892", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1872 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2895-2895", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1873 [label="Assert.AreEqual(''ExpiryDate'', reader.Value)", span="2896-2896", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1874 [label="Assert.AreEqual(6, reader.LineNumber)", span="2897-2897", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1876 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2900-2900", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1877 [label="Assert.AreEqual(7, reader.LineNumber)", span="2901-2901", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1879 [label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2904-2904", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1880 [label="Assert.AreEqual(9, reader.LineNumber)", span="2905-2905", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1881 [label="Assert.AreEqual(''Date'', reader.Value)", span="2906-2906", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1883 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2909-2909", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1885 [label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="2912-2912", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1886 [label="Assert.AreEqual(10, reader.LineNumber)", span="2913-2913", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1888 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2916-2916", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1889 [label="Assert.AreEqual(11, reader.LineNumber)", span="2917-2917", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1891 [label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2920-2920", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1892 [label="Assert.AreEqual(11, reader.LineNumber)", span="2921-2921", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1894 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2924-2924", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1895 [label="Assert.AreEqual(''Price'', reader.Value)", span="2925-2925", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1897 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2928-2928", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1899 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2931-2931", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1900 [label="Assert.AreEqual(''Sizes'', reader.Value)", span="2932-2932", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1902 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2935-2935", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1904 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2938-2938", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1906 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2941-2941", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1908 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="2944-2944", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1910 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2947-2947", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1912 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2950-2950", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1914 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2953-2953", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1916 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2956-2956", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1918 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2959-2959", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1919 [label="Assert.AreEqual(''comment '', reader.Value)", span="2960-2960", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1921 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2963-2963", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1922 [label="Assert.AreEqual(''comment 1 '', reader.Value)", span="2964-2964", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1842 [label="Assert.IsTrue(reader.Read())", span="2857-2857", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1846 [label="Assert.IsTrue(reader.Read())", span="2862-2862", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1849 [label="Assert.IsTrue(reader.Read())", span="2866-2866", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1852 [label="Assert.IsTrue(reader.Read())", span="2870-2870", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1856 [label="Assert.IsTrue(reader.Read())", span="2875-2875", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1859 [label="Assert.IsTrue(reader.Read())", span="2879-2879", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1863 [label="Assert.IsTrue(reader.Read())", span="2884-2884", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1867 [label="Assert.IsTrue(reader.Read())", span="2889-2889", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1871 [label="Assert.IsTrue(reader.Read())", span="2894-2894", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1875 [label="Assert.IsTrue(reader.Read())", span="2899-2899", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1878 [label="Assert.IsTrue(reader.Read())", span="2903-2903", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1882 [label="Assert.IsTrue(reader.Read())", span="2908-2908", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1884 [label="Assert.IsTrue(reader.Read())", span="2911-2911", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1887 [label="Assert.IsTrue(reader.Read())", span="2915-2915", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1890 [label="Assert.IsTrue(reader.Read())", span="2919-2919", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1893 [label="Assert.IsTrue(reader.Read())", span="2923-2923", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1896 [label="Assert.IsTrue(reader.Read())", span="2927-2927", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1898 [label="Assert.IsTrue(reader.Read())", span="2930-2930", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1901 [label="Assert.IsTrue(reader.Read())", span="2934-2934", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1903 [label="Assert.IsTrue(reader.Read())", span="2937-2937", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1905 [label="Assert.IsTrue(reader.Read())", span="2940-2940", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1907 [label="Assert.IsTrue(reader.Read())", span="2943-2943", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1909 [label="Assert.IsTrue(reader.Read())", span="2946-2946", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1911 [label="Assert.IsTrue(reader.Read())", span="2949-2949", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1913 [label="Assert.IsTrue(reader.Read())", span="2952-2952", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1915 [label="Assert.IsTrue(reader.Read())", span="2955-2955", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1917 [label="Assert.IsTrue(reader.Read())", span="2958-2958", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1920 [label="Assert.IsTrue(reader.Read())", span="2962-2962", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1923 [label="Assert.IsFalse(reader.Read())", span="2966-2966", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1841 [label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2855-2855", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1840 [label="string json = @''//comment*//*hi*/\r\n{//comment\r\nName://comment\r\ntrue//comment after true'' + StringUtils.CarriageReturn +\r\n@'',//comment after comma'' + StringUtils.CarriageReturnLineFeed + \r\n@''''''ExpiryDate''''://comment''  + StringUtils.LineFeed + \r\n@''new '' + StringUtils.LineFeed +\r\n@''Date\r\n(//comment\r\nnull//comment\r\n),\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': //comment\r\n[//comment\r\n\r\n          ''''Small''''//comment\r\n]//comment\r\n}//comment \r\n//comment 1 ''", span="2835-2853", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1924 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", span="2833-2833", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonWriter.cs"];
m47_1383 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", span="2131-2131", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonWriter.cs"];
m47_1387 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2138-2138", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonWriter.cs"];
m47_1389 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2141-2141", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonWriter.cs"];
m47_1391 [label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2144-2144", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonWriter.cs"];
m47_1392 [label="Assert.AreEqual(11806310474565, reader.Value)", span="2145-2145", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonWriter.cs"];
m47_1394 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2148-2148", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonWriter.cs"];
m47_1386 [label="Assert.IsTrue(reader.Read())", span="2137-2137", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonWriter.cs"];
m47_1388 [label="Assert.IsTrue(reader.Read())", span="2140-2140", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonWriter.cs"];
m47_1390 [label="Assert.IsTrue(reader.Read())", span="2143-2143", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonWriter.cs"];
m47_1393 [label="Assert.IsTrue(reader.Read())", span="2147-2147", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonWriter.cs"];
m47_1385 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2135-2135", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonWriter.cs"];
m47_1384 [label="string json = @''{''''text'''':0xabcdef12345}''", span="2133-2133", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonWriter.cs"];
m47_1395 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", span="2131-2131", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonWriter.cs"];
m47_1101 [label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="882-882", cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JsonWriter.cs"];
m47_96 [label="Entry System.Guid.Guid(string)", span="0-0", cluster="System.Guid.Guid(string)", file="JsonWriter.cs"];
m47_2023 [label="Entry System.Convert.ToDouble(string, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToDouble(string, System.IFormatProvider)", file="JsonWriter.cs"];
m47_1233 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="JsonWriter.cs"];
m47_1467 [label="Entry System.TimeSpan.FromMinutes(double)", span="0-0", cluster="System.TimeSpan.FromMinutes(double)", file="JsonWriter.cs"];
m47_180 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", span="314-314", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonWriter.cs"];
m47_184 [label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", span="323-323", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonWriter.cs"];
m47_186 [label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="326-326", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonWriter.cs"];
m47_190 [label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", span="337-337", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonWriter.cs"];
m47_183 [label="Assert.IsTrue(jsonTextReader.Read())", span="322-322", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonWriter.cs"];
m47_185 [label="Assert.IsTrue(jsonTextReader.Read())", span="325-325", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonWriter.cs"];
m47_189 [label="Assert.IsTrue(jsonTextReader.Read())", span="336-336", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonWriter.cs"];
m47_191 [label="Assert.IsFalse(jsonTextReader.Read())", span="339-339", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonWriter.cs"];
m47_182 [label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="320-320", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonWriter.cs"];
m47_187 [label="jsonTextReader.ReadAsBytes()", span="330-330", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonWriter.cs"];
m47_188 [label=FormatException, span="332-332", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonWriter.cs"];
m47_181 [label="string json = @''{\r\n    ChildId: '123'\r\n}''", span="316-318", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonWriter.cs"];
m47_192 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", span="314-314", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonWriter.cs"];
m47_1980 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", span="3054-3054", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonWriter.cs"];
m47_1983 [label="Assert.AreEqual(''6,0221418E+23'', d.ToString(new CultureInfo(''fr-FR'')))", span="3060-3060", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonWriter.cs"];
m47_1984 [label="Assert.AreEqual(''602214180000000000000000'', d.ToString(''0.#############################################################################''))", span="3061-3061", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonWriter.cs"];
m47_1989 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3070-3070", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonWriter.cs"];
m47_1990 [label="Assert.AreEqual(0d, reader.Value)", span="3071-3071", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonWriter.cs"];
m47_1992 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3074-3074", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonWriter.cs"];
m47_1993 [label="Assert.AreEqual(0d, reader.Value)", span="3075-3075", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonWriter.cs"];
m47_1995 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3078-3078", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonWriter.cs"];
m47_1996 [label="Assert.AreEqual(0.0000025d, reader.Value)", span="3079-3079", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonWriter.cs"];
m47_1998 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3082-3082", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonWriter.cs"];
m47_1999 [label="Assert.AreEqual(3000000000d, reader.Value)", span="3083-3083", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonWriter.cs"];
m47_2001 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3086-3086", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonWriter.cs"];
m47_2002 [label="Assert.AreEqual(602214180000000000000000d, reader.Value)", span="3087-3087", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonWriter.cs"];
m47_2007 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3097-3097", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonWriter.cs"];
m47_2008 [label="Assert.AreEqual(0m, reader.Value)", span="3098-3098", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonWriter.cs"];
m47_2010 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3101-3101", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonWriter.cs"];
m47_2011 [label="Assert.AreEqual(0m, reader.Value)", span="3102-3102", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonWriter.cs"];
m47_2013 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3105-3105", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonWriter.cs"];
m47_2014 [label="Assert.AreEqual(0.0000025m, reader.Value)", span="3106-3106", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonWriter.cs"];
m47_2016 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3109-3109", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonWriter.cs"];
m47_2017 [label="Assert.AreEqual(3000000000m, reader.Value)", span="3110-3110", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonWriter.cs"];
m47_2019 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3113-3113", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonWriter.cs"];
m47_2020 [label="Assert.AreEqual(602214180000000000000000m, reader.Value)", span="3114-3114", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonWriter.cs"];
m47_1987 [label="reader.Read()", span="3067-3067", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonWriter.cs"];
m47_1988 [label="reader.Read()", span="3069-3069", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonWriter.cs"];
m47_1991 [label="reader.Read()", span="3073-3073", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonWriter.cs"];
m47_1994 [label="reader.Read()", span="3077-3077", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonWriter.cs"];
m47_1997 [label="reader.Read()", span="3081-3081", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonWriter.cs"];
m47_2000 [label="reader.Read()", span="3085-3085", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonWriter.cs"];
m47_2003 [label="reader.Read()", span="3089-3089", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonWriter.cs"];
m47_2005 [label="reader.Read()", span="3094-3094", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonWriter.cs"];
m47_2021 [label="reader.Read()", span="3116-3116", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonWriter.cs"];
m47_1986 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3065-3065", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonWriter.cs"];
m47_2004 [label="reader = new JsonTextReader(new StringReader(json))", span="3092-3092", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonWriter.cs"];
m47_1982 [label="d = Convert.ToDouble(''6.0221418e23'', CultureInfo.InvariantCulture)", span="3058-3058", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonWriter.cs"];
m47_1985 [label="string json = @''[0e-10,0E-10,0.25e-5,0.3e10,6.0221418e23]''", span="3063-3063", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonWriter.cs"];
m47_2006 [label="reader.ReadAsDecimal()", span="3096-3096", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonWriter.cs"];
m47_2009 [label="reader.ReadAsDecimal()", span="3100-3100", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonWriter.cs"];
m47_2012 [label="reader.ReadAsDecimal()", span="3104-3104", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonWriter.cs"];
m47_2015 [label="reader.ReadAsDecimal()", span="3108-3108", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonWriter.cs"];
m47_2018 [label="reader.ReadAsDecimal()", span="3112-3112", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonWriter.cs"];
m47_1981 [label="double d", span="3056-3056", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonWriter.cs"];
m47_2022 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", span="3054-3054", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonWriter.cs"];
m47_1087 [label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0", cluster="System.Text.StringBuilder.StringBuilder()", file="JsonWriter.cs"];
m47_1468 [label="Entry System.TimeSpan.Add(System.TimeSpan)", span="0-0", cluster="System.TimeSpan.Add(System.TimeSpan)", file="JsonWriter.cs"];
m47_1427 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", span="2197-2197", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonWriter.cs"];
m47_1431 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2204-2204", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonWriter.cs"];
m47_1433 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2207-2207", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonWriter.cs"];
m47_1430 [label="Assert.IsTrue(reader.Read())", span="2203-2203", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonWriter.cs"];
m47_1432 [label="Assert.IsTrue(reader.Read())", span="2206-2206", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonWriter.cs"];
m47_1429 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2201-2201", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonWriter.cs"];
m47_1434 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDateTimeOffset(); }, ''Could not convert string to DateTimeOffset: blablahbla. Path 'Offset', line 1, position 22.'')", span="2209-2209", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonWriter.cs"];
m47_1428 [label="string json = @''{''''Offset'''':''''blablahbla''''}''", span="2199-2199", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonWriter.cs"];
m47_1435 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", span="2197-2197", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonWriter.cs"];
m47_2233 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", span="3407-3407", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonWriter.cs"];
m47_2237 [label="Assert.AreEqual(1, r.LineNumber)", span="3414-3414", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonWriter.cs"];
m47_2238 [label="Assert.AreEqual(1, r.LinePosition)", span="3415-3415", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonWriter.cs"];
m47_2240 [label="Assert.AreEqual(1, r.LineNumber)", span="3418-3418", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonWriter.cs"];
m47_2241 [label="Assert.AreEqual(5, r.LinePosition)", span="3419-3419", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonWriter.cs"];
m47_2243 [label="Assert.AreEqual(1, r.LineNumber)", span="3422-3422", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonWriter.cs"];
m47_2244 [label="Assert.AreEqual(9, r.LinePosition)", span="3423-3423", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonWriter.cs"];
m47_2246 [label="Assert.AreEqual(1, r.LineNumber)", span="3426-3426", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonWriter.cs"];
m47_2247 [label="Assert.AreEqual(10, r.LinePosition)", span="3427-3427", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonWriter.cs"];
m47_2252 [label="Assert.AreEqual(2, r.LineNumber)", span="3436-3436", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonWriter.cs"];
m47_2253 [label="Assert.AreEqual(1, r.LinePosition)", span="3437-3437", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonWriter.cs"];
m47_2255 [label="Assert.AreEqual(2, r.LineNumber)", span="3440-3440", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonWriter.cs"];
m47_2256 [label="Assert.AreEqual(5, r.LinePosition)", span="3441-3441", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonWriter.cs"];
m47_2258 [label="Assert.AreEqual(2, r.LineNumber)", span="3444-3444", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonWriter.cs"];
m47_2259 [label="Assert.AreEqual(9, r.LinePosition)", span="3445-3445", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonWriter.cs"];
m47_2261 [label="Assert.AreEqual(2, r.LineNumber)", span="3448-3448", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonWriter.cs"];
m47_2262 [label="Assert.AreEqual(10, r.LinePosition)", span="3449-3449", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonWriter.cs"];
m47_2236 [label="Assert.IsTrue(r.Read())", span="3413-3413", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonWriter.cs"];
m47_2239 [label="Assert.IsTrue(r.Read())", span="3417-3417", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonWriter.cs"];
m47_2242 [label="Assert.IsTrue(r.Read())", span="3421-3421", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonWriter.cs"];
m47_2245 [label="Assert.IsTrue(r.Read())", span="3425-3425", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonWriter.cs"];
m47_2248 [label="Assert.IsFalse(r.Read())", span="3429-3429", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonWriter.cs"];
m47_2251 [label="Assert.IsTrue(r.Read())", span="3435-3435", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonWriter.cs"];
m47_2254 [label="Assert.IsTrue(r.Read())", span="3439-3439", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonWriter.cs"];
m47_2257 [label="Assert.IsTrue(r.Read())", span="3443-3443", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonWriter.cs"];
m47_2260 [label="Assert.IsTrue(r.Read())", span="3447-3447", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonWriter.cs"];
m47_2263 [label="Assert.IsFalse(r.Read())", span="3451-3451", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonWriter.cs"];
m47_2235 [label="JsonTextReader r = new JsonTextReader(new StringReader(json1))", span="3411-3411", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonWriter.cs"];
m47_2250 [label="r = new JsonTextReader(new StringReader(json2))", span="3433-3433", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonWriter.cs"];
m47_2249 [label="string json2 = ''\n{'a':'bc'}''", span="3431-3431", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonWriter.cs"];
m47_2234 [label="string json1 = ''{'a':'bc'}''", span="3409-3409", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonWriter.cs"];
m47_2264 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", span="3407-3407", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonWriter.cs"];
m47_765 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.FakeBufferPool.FakeBufferPool()", span="1176-1176", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FakeBufferPool.FakeBufferPool()", file="JsonWriter.cs"];
m47_84 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", span="177-177", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", file="JsonWriter.cs"];
m47_88 [label="CollectionAssert.AreEqual(expected, data)", span="183-183", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", file="JsonWriter.cs"];
m47_92 [label="CollectionAssert.AreEqual(expected, data)", span="189-189", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", file="JsonWriter.cs"];
m47_85 [label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader('''AAAAAAAAAAAAAAAAAAAAAAAAAAABAAAA'''))", span="179-179", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", file="JsonWriter.cs"];
m47_89 [label="jsonTextReader = new JsonTextReader(new StringReader('''AAAAAAAA-AAAA-AAAA-AAAA-AAAAAAABAAAA'''))", span="185-185", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", file="JsonWriter.cs"];
m47_86 [label="byte[] data = jsonTextReader.ReadAsBytes()", span="180-180", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", file="JsonWriter.cs"];
m47_87 [label="byte[] expected = Convert.FromBase64String(''AAAAAAAAAAAAAAAAAAAAAAAAAAABAAAA'')", span="181-181", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", file="JsonWriter.cs"];
m47_90 [label="data = jsonTextReader.ReadAsBytes()", span="186-186", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", file="JsonWriter.cs"];
m47_91 [label="expected = new Guid(''AAAAAAAA-AAAA-AAAA-AAAA-AAAAAAABAAAA'').ToByteArray()", span="187-187", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", file="JsonWriter.cs"];
m47_93 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", span="177-177", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", file="JsonWriter.cs"];
m47_1605 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", span="2450-2450", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonWriter.cs"];
m47_1613 [label="Assert.AreEqual(new DateTime(631136448000000000), reader.Value)", span="2476-2476", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonWriter.cs"];
m47_1610 [label="reader.Read()", span="2472-2472", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonWriter.cs"];
m47_1612 [label="Assert.IsTrue(reader.Read())", span="2475-2475", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonWriter.cs"];
m47_1607 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2465-2465", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonWriter.cs"];
m47_1609 [label="i < 13", span="2470-2470", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonWriter.cs"];
m47_1611 [label="i++", span="2470-2470", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonWriter.cs"];
m47_1606 [label="string json = @''[\r\n  {\r\n    ''''Name'''': ''''Jim'''',\r\n    ''''BirthDate'''': ''''\/Date(978048000000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(978048000000)\/''''\r\n  },\r\n  {\r\n    ''''Name'''': ''''Jim'''',\r\n    ''''BirthDate'''': ''''\/Date(978048000000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(978048000000)\/''''\r\n  }\r\n]''", span="2452-2463", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonWriter.cs"];
m47_1608 [label="int i = 0", span="2470-2470", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonWriter.cs"];
m47_1614 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", span="2450-2450", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonWriter.cs"];
m47_136 [label="Entry Unk.IsFalse", span="", cluster="Unk.IsFalse", file="JsonWriter.cs"];
m47_668 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", span="1081-1081", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonWriter.cs"];
m47_673 [label="Assert.AreEqual(i, reader.Value)", span="1088-1088", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonWriter.cs"];
m47_672 [label="Assert.AreEqual(typeof(long), reader.ValueType)", span="1087-1087", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonWriter.cs"];
m47_671 [label="reader.Read()", span="1086-1086", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonWriter.cs"];
m47_670 [label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="1085-1085", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonWriter.cs"];
m47_669 [label="long i = int.MinValue", span="1083-1083", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonWriter.cs"];
m47_674 [label="int j = 1", span="1090-1090", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonWriter.cs"];
m47_677 [label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n                {\r\n                    reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)));\r\n                    reader.ReadAsInt32();\r\n                }, ''JSON integer '' + total + '' is too large or small for an Int32. Path '', line 1, position 11.'')", span="1093-1097", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonWriter.cs"];
m47_676 [label="long total = -j + i", span="1092-1092", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonWriter.cs"];
m47_675 [label="j < 1000", span="1090-1090", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonWriter.cs"];
m47_678 [label="j++", span="1090-1090", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonWriter.cs"];
m47_679 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", span="1081-1081", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonWriter.cs"];
m47_1235 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", span="1917-1917", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonWriter.cs"];
m47_1239 [label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="1923-1923", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonWriter.cs"];
m47_1241 [label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1926-1926", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonWriter.cs"];
m47_1242 [label="Assert.AreEqual(250L, jsonReader.Value)", span="1927-1927", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonWriter.cs"];
m47_1244 [label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1930-1930", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonWriter.cs"];
m47_1245 [label="Assert.AreEqual(250L, jsonReader.Value)", span="1931-1931", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonWriter.cs"];
m47_1247 [label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1934-1934", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonWriter.cs"];
m47_1248 [label="Assert.AreEqual(250L, jsonReader.Value)", span="1935-1935", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonWriter.cs"];
m47_1250 [label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="1938-1938", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonWriter.cs"];
m47_1238 [label="Assert.IsTrue(jsonReader.Read())", span="1922-1922", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonWriter.cs"];
m47_1240 [label="Assert.IsTrue(jsonReader.Read())", span="1925-1925", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonWriter.cs"];
m47_1243 [label="Assert.IsTrue(jsonReader.Read())", span="1929-1929", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonWriter.cs"];
m47_1246 [label="Assert.IsTrue(jsonReader.Read())", span="1933-1933", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonWriter.cs"];
m47_1249 [label="Assert.IsTrue(jsonReader.Read())", span="1937-1937", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonWriter.cs"];
m47_1251 [label="Assert.IsFalse(jsonReader.Read())", span="1940-1940", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonWriter.cs"];
m47_1237 [label="JsonTextReader jsonReader = new JsonTextReader(s)", span="1920-1920", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonWriter.cs"];
m47_1236 [label="StringReader s = new StringReader(@''[0372, 0xFA, 0XFA]'')", span="1919-1919", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonWriter.cs"];
m47_1252 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", span="1917-1917", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonWriter.cs"];
m47_137 [label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="371-371", cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="JsonWriter.cs"];
m47_800 [label="Entry System.Convert.ToBase64String(byte[])", span="0-0", cluster="System.Convert.ToBase64String(byte[])", file="JsonWriter.cs"];
m47_351 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", span="574-574", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="JsonWriter.cs"];
m47_352 [label="string input = @''{\r\n''''matches'''' : [\r\n{''''t'''':''''C'''', ''''n'''':''''Citigroup Inc.'''', ''''e'''':''''NYSE'''', ''''id'''':''''662713''''}\r\n,{''''t'''':''''CHL'''', ''''n'''':''''China Mobile Ltd. (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''660998''''}\r\n,{''''t'''':''''PTR'''', ''''n'''':''''PetroChina Company Limited (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''664536''''}\r\n,{''''t'''':''''RIO'''', ''''n'''':''''Companhia Vale do Rio Doce (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''671472''''}\r\n,{''''t'''':''''RIOPR'''', ''''n'''':''''Companhia Vale do Rio Doce (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''3512643''''}\r\n,{''''t'''':''''CSCO'''', ''''n'''':''''Cisco Systems, Inc.'''', ''''e'''':''''NASDAQ'''', ''''id'''':''''99624''''}\r\n,{''''t'''':''''CVX'''', ''''n'''':''''Chevron Corporation'''', ''''e'''':''''NYSE'''', ''''id'''':''''667226''''}\r\n,{''''t'''':''''TM'''', ''''n'''':''''Toyota Motor Corporation (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''655880''''}\r\n,{''''t'''':''''JPM'''', ''''n'''':''''JPMorgan Chase \\x26 Co.'''', ''''e'''':''''NYSE'''', ''''id'''':''''665639''''}\r\n,{''''t'''':''''COP'''', ''''n'''':''''ConocoPhillips'''', ''''e'''':''''NYSE'''', ''''id'''':''''1691168''''}\r\n,{''''t'''':''''LFC'''', ''''n'''':''''China Life Insurance Company Ltd. (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''688679''''}\r\n,{''''t'''':''''NOK'''', ''''n'''':''''Nokia Corporation (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''657729''''}\r\n,{''''t'''':''''KO'''', ''''n'''':''''The Coca-Cola Company'''', ''''e'''':''''NYSE'''', ''''id'''':''''6550''''}\r\n,{''''t'''':''''VZ'''', ''''n'''':''''Verizon Communications Inc.'''', ''''e'''':''''NYSE'''', ''''id'''':''''664887''''}\r\n,{''''t'''':''''AMX'''', ''''n'''':''''America Movil S.A.B de C.V. (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''665834''''}],\r\n''''all'''' : false\r\n}\r\n''", span="576-595", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", color=green, community=0, file="JsonWriter.cs"];
m47_353 [label="JsonReader jsonReader = new JsonTextReader(new StringReader(input))", span="597-597", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="JsonWriter.cs"];
m47_354 [label="jsonReader.Read()", span="599-599", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="JsonWriter.cs"];
m47_355 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", span="574-574", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="JsonWriter.cs"];
m47_207 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", span="368-368", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JsonWriter.cs"];
m47_209 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="372-372", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JsonWriter.cs"];
m47_211 [label="reader = new JsonTextReader(new StringReader(json))", span="376-376", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JsonWriter.cs"];
m47_213 [label="reader = new JsonTextReader(new StringReader(json))", span="380-380", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JsonWriter.cs"];
m47_208 [label="string json = ''0aq2dun13.hod''", span="370-370", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JsonWriter.cs"];
m47_210 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected character encountered while parsing number: q. Path '', line 1, position 2.'')", span="374-374", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JsonWriter.cs"];
m47_212 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDecimal(); }, ''Unexpected character encountered while parsing number: q. Path '', line 1, position 2.'')", span="378-378", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JsonWriter.cs"];
m47_214 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsInt32(); }, ''Unexpected character encountered while parsing number: q. Path '', line 1, position 2.'')", span="382-382", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JsonWriter.cs"];
m47_215 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", span="368-368", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JsonWriter.cs"];
m47_2025 [label="Entry double.ToString(string)", span="0-0", cluster="double.ToString(string)", file="JsonWriter.cs"];
m47_299 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", span="489-489", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonWriter.cs"];
m47_305 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="499-499", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonWriter.cs"];
m47_307 [label="Assert.AreEqual(2, s.Length)", span="502-502", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonWriter.cs"];
m47_309 [label="Assert.AreEqual(1, stringInfo.LengthInTextElements)", span="505-505", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonWriter.cs"];
m47_302 [label="Assert.IsTrue(reader.Read())", span="495-495", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonWriter.cs"];
m47_303 [label="Assert.IsTrue(reader.Read())", span="496-496", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonWriter.cs"];
m47_304 [label="Assert.IsTrue(reader.Read())", span="498-498", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonWriter.cs"];
m47_301 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="493-493", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonWriter.cs"];
m47_306 [label="string s = reader.Value.ToString()", span="501-501", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonWriter.cs"];
m47_308 [label="StringInfo stringInfo = new StringInfo(s)", span="504-504", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonWriter.cs"];
m47_300 [label="string json = @''{ ''''MATHEMATICAL ITALIC CAPITAL ALPHA'''': ''''\uD835\uDEE2'''' }''", span="491-491", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonWriter.cs"];
m47_310 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", span="489-489", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonWriter.cs"];
m47_1737 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", span="2676-2676", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonWriter.cs"];
m47_1741 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2682-2682", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonWriter.cs"];
m47_1743 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2685-2685", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonWriter.cs"];
m47_1740 [label="Assert.IsTrue(reader.Read())", span="2681-2681", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonWriter.cs"];
m47_1742 [label="Assert.IsTrue(reader.Read())", span="2684-2684", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonWriter.cs"];
m47_1739 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2679-2679", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonWriter.cs"];
m47_1738 [label="string json = ''[]''", span="2678-2678", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonWriter.cs"];
m47_1744 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", span="2676-2676", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonWriter.cs"];
m47_1590 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", span="2427-2427", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonWriter.cs"];
m47_1595 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2435-2435", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonWriter.cs"];
m47_1597 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2438-2438", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonWriter.cs"];
m47_1599 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2441-2441", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonWriter.cs"];
m47_1600 [label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="2442-2442", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonWriter.cs"];
m47_1603 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2446-2446", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonWriter.cs"];
m47_1601 [label="Assert.AreEqual(9.99m, d)", span="2443-2443", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonWriter.cs"];
m47_1594 [label="Assert.IsTrue(reader.Read())", span="2434-2434", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonWriter.cs"];
m47_1596 [label="Assert.IsTrue(reader.Read())", span="2437-2437", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonWriter.cs"];
m47_1602 [label="Assert.IsTrue(reader.Read())", span="2445-2445", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonWriter.cs"];
m47_1592 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2431-2431", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonWriter.cs"];
m47_1598 [label="decimal? d = reader.ReadAsDecimal()", span="2440-2440", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonWriter.cs"];
m47_1593 [label="reader.Culture = new CultureInfo(''fr-FR'')", span="2432-2432", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonWriter.cs"];
m47_1591 [label="string json = @''{''''decimal'''':''''9,99''''}''", span="2429-2429", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonWriter.cs"];
m47_1604 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", span="2427-2427", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonWriter.cs"];
m47_767 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", span="1249-1249", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="JsonWriter.cs"];
m47_770 [label="Assert.AreEqual(''h\0i'', reader.Value)", span="1254-1254", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="JsonWriter.cs"];
m47_769 [label="Assert.IsTrue(reader.Read())", span="1252-1252", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="JsonWriter.cs"];
m47_768 [label="JsonReader reader = new JsonTextReader(new StringReader('''h\0i'''))", span="1251-1251", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="JsonWriter.cs"];
m47_771 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", span="1249-1249", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="JsonWriter.cs"];
m47_1102 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", span="1716-1716", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonWriter.cs"];
m47_1107 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.StartArray)", span="1729-1729", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonWriter.cs"];
m47_1109 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.Float)", span="1732-1732", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonWriter.cs"];
m47_1110 [label="Assert.AreEqual(jsonReader.Value, double.NaN)", span="1733-1733", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonWriter.cs"];
m47_1112 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.Float)", span="1736-1736", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonWriter.cs"];
m47_1113 [label="Assert.AreEqual(jsonReader.Value, double.PositiveInfinity)", span="1737-1737", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonWriter.cs"];
m47_1115 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.Float)", span="1740-1740", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonWriter.cs"];
m47_1116 [label="Assert.AreEqual(jsonReader.Value, double.NegativeInfinity)", span="1741-1741", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonWriter.cs"];
m47_1118 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.EndArray)", span="1744-1744", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonWriter.cs"];
m47_1105 [label="JsonReader jsonReader = new JsonTextReader(sr)", span="1726-1726", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonWriter.cs"];
m47_1104 [label="StringReader sr = new StringReader(input)", span="1724-1724", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonWriter.cs"];
m47_1106 [label="jsonReader.Read()", span="1728-1728", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonWriter.cs"];
m47_1108 [label="jsonReader.Read()", span="1731-1731", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonWriter.cs"];
m47_1111 [label="jsonReader.Read()", span="1735-1735", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonWriter.cs"];
m47_1114 [label="jsonReader.Read()", span="1739-1739", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonWriter.cs"];
m47_1117 [label="jsonReader.Read()", span="1743-1743", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonWriter.cs"];
m47_1103 [label="string input = @''[\r\n  NaN,\r\n  Infinity,\r\n  -Infinity\r\n]''", span="1718-1722", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonWriter.cs"];
m47_1119 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", span="1716-1716", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonWriter.cs"];
m47_336 [label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0", cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="JsonWriter.cs"];
m47_1800 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", span="2768-2768", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonWriter.cs"];
m47_1804 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2782-2782", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonWriter.cs"];
m47_1806 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2785-2785", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonWriter.cs"];
m47_1808 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2788-2788", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonWriter.cs"];
m47_1810 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2791-2791", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonWriter.cs"];
m47_1811 [label="Assert.AreEqual(''Name'', reader.Value)", span="2792-2792", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonWriter.cs"];
m47_1813 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2795-2795", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonWriter.cs"];
m47_1815 [label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="2798-2798", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonWriter.cs"];
m47_1816 [label="Assert.AreEqual(true, reader.Value)", span="2799-2799", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonWriter.cs"];
m47_1818 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2802-2802", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonWriter.cs"];
m47_1820 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2805-2805", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonWriter.cs"];
m47_1822 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2808-2808", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonWriter.cs"];
m47_1823 [label="Assert.AreEqual(''ExpiryDate'', reader.Value)", span="2809-2809", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonWriter.cs"];
m47_1825 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2812-2812", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonWriter.cs"];
m47_1827 [label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2815-2815", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonWriter.cs"];
m47_1828 [label="Assert.AreEqual(5, reader.LineNumber)", span="2816-2816", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonWriter.cs"];
m47_1829 [label="Assert.AreEqual(''Date'', reader.Value)", span="2817-2817", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonWriter.cs"];
m47_1831 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2820-2820", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonWriter.cs"];
m47_1833 [label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="2823-2823", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonWriter.cs"];
m47_1835 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2826-2826", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonWriter.cs"];
m47_1837 [label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2829-2829", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonWriter.cs"];
m47_1803 [label="Assert.IsTrue(reader.Read())", span="2781-2781", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonWriter.cs"];
m47_1805 [label="Assert.IsTrue(reader.Read())", span="2784-2784", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonWriter.cs"];
m47_1807 [label="Assert.IsTrue(reader.Read())", span="2787-2787", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonWriter.cs"];
m47_1809 [label="Assert.IsTrue(reader.Read())", span="2790-2790", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonWriter.cs"];
m47_1812 [label="Assert.IsTrue(reader.Read())", span="2794-2794", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonWriter.cs"];
m47_1814 [label="Assert.IsTrue(reader.Read())", span="2797-2797", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonWriter.cs"];
m47_1817 [label="Assert.IsTrue(reader.Read())", span="2801-2801", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonWriter.cs"];
m47_1819 [label="Assert.IsTrue(reader.Read())", span="2804-2804", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonWriter.cs"];
m47_1821 [label="Assert.IsTrue(reader.Read())", span="2807-2807", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonWriter.cs"];
m47_1824 [label="Assert.IsTrue(reader.Read())", span="2811-2811", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonWriter.cs"];
m47_1826 [label="Assert.IsTrue(reader.Read())", span="2814-2814", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonWriter.cs"];
m47_1830 [label="Assert.IsTrue(reader.Read())", span="2819-2819", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonWriter.cs"];
m47_1832 [label="Assert.IsTrue(reader.Read())", span="2822-2822", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonWriter.cs"];
m47_1834 [label="Assert.IsTrue(reader.Read())", span="2825-2825", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonWriter.cs"];
m47_1836 [label="Assert.IsTrue(reader.Read())", span="2828-2828", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonWriter.cs"];
m47_1802 [label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2779-2779", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonWriter.cs"];
m47_1801 [label="string json = @''/*comment*/{/*comment*/Name:/*comment*/true/*comment*/,/*comment*/\r\n        ''''ExpiryDate'''':/*comment*/new\r\n'' + StringUtils.LineFeed +\r\n                          @''Date\r\n(/*comment*/null/*comment*/),\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''':/*comment*/[/*comment*/\r\n          ''''Small''''/*comment*/]/*comment*/}/*comment*/''", span="2770-2777", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonWriter.cs"];
m47_1838 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", span="2768-2768", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonWriter.cs"];
m47_1484 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", span="2279-2279", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonWriter.cs"];
m47_1489 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2287-2287", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonWriter.cs"];
m47_1491 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2290-2290", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonWriter.cs"];
m47_1493 [label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2293-2293", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonWriter.cs"];
m47_1494 [label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2294-2294", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonWriter.cs"];
m47_1498 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2300-2300", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonWriter.cs"];
m47_1496 [label="Assert.AreEqual(new DateTime(2011, 1, 30, 0, 0, 0, DateTimeKind.Unspecified), dt.DateTime)", span="2297-2297", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonWriter.cs"];
m47_1488 [label="Assert.IsTrue(reader.Read())", span="2286-2286", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonWriter.cs"];
m47_1490 [label="Assert.IsTrue(reader.Read())", span="2289-2289", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonWriter.cs"];
m47_1497 [label="Assert.IsTrue(reader.Read())", span="2299-2299", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonWriter.cs"];
m47_1486 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2283-2283", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonWriter.cs"];
m47_1492 [label="reader.ReadAsDateTimeOffset()", span="2292-2292", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonWriter.cs"];
m47_1495 [label="DateTimeOffset dt = (DateTimeOffset)reader.Value", span="2296-2296", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonWriter.cs"];
m47_1487 [label="reader.Culture = new CultureInfo(''en-US'')", span="2284-2284", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonWriter.cs"];
m47_1485 [label="string json = @''{''''Offset'''':''''1/30/2011''''}''", span="2281-2281", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonWriter.cs"];
m47_1499 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", span="2279-2279", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonWriter.cs"];
m47_1095 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(decimal)", span="994-994", cluster="Newtonsoft.Json.JsonWriter.WriteValue(decimal)", file="JsonWriter.cs"];
m47_2273 [label="Entry System.IO.TextReader.Read(char[], int, int)", span="0-0", cluster="System.IO.TextReader.Read(char[], int, int)", file="JsonWriter.cs"];
m47_2035 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", span="3135-3135", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonWriter.cs"];
m47_2039 [label="Assert.AreEqual(0, reader.Depth)", span="3145-3145", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonWriter.cs"];
m47_2041 [label="Assert.AreEqual(1, reader.Depth)", span="3148-3148", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonWriter.cs"];
m47_2043 [label="Assert.AreEqual(2, reader.Depth)", span="3151-3151", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonWriter.cs"];
m47_2045 [label="Assert.AreEqual(3, reader.Depth)", span="3154-3154", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonWriter.cs"];
m47_2047 [label="Assert.AreEqual(3, reader.Depth)", span="3157-3157", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonWriter.cs"];
m47_2049 [label="Assert.AreEqual(2, reader.Depth)", span="3160-3160", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonWriter.cs"];
m47_2051 [label="Assert.AreEqual(1, reader.Depth)", span="3163-3163", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonWriter.cs"];
m47_2053 [label="Assert.AreEqual(1, reader.Depth)", span="3166-3166", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonWriter.cs"];
m47_2055 [label="Assert.AreEqual(2, reader.Depth)", span="3169-3169", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonWriter.cs"];
m47_2057 [label="Assert.AreEqual(2, reader.Depth)", span="3172-3172", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonWriter.cs"];
m47_2059 [label="Assert.AreEqual(1, reader.Depth)", span="3175-3175", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonWriter.cs"];
m47_2061 [label="Assert.AreEqual(0, reader.Depth)", span="3178-3178", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonWriter.cs"];
m47_2038 [label="Assert.IsTrue(reader.Read())", span="3144-3144", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonWriter.cs"];
m47_2042 [label="Assert.IsTrue(reader.Read())", span="3150-3150", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonWriter.cs"];
m47_2044 [label="Assert.IsTrue(reader.Read())", span="3153-3153", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonWriter.cs"];
m47_2046 [label="Assert.IsTrue(reader.Read())", span="3156-3156", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonWriter.cs"];
m47_2048 [label="Assert.IsTrue(reader.Read())", span="3159-3159", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonWriter.cs"];
m47_2050 [label="Assert.IsTrue(reader.Read())", span="3162-3162", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonWriter.cs"];
m47_2054 [label="Assert.IsTrue(reader.Read())", span="3168-3168", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonWriter.cs"];
m47_2056 [label="Assert.IsTrue(reader.Read())", span="3171-3171", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonWriter.cs"];
m47_2058 [label="Assert.IsTrue(reader.Read())", span="3174-3174", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonWriter.cs"];
m47_2060 [label="Assert.IsTrue(reader.Read())", span="3177-3177", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonWriter.cs"];
m47_2062 [label="Assert.IsFalse(reader.Read())", span="3180-3180", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonWriter.cs"];
m47_2037 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                MaxDepth = 1\r\n            }", span="3139-3142", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonWriter.cs"];
m47_2040 [label="ExceptionAssert.Throws<JsonReaderException>(() => { Assert.IsTrue(reader.Read()); }, ''The reader's MaxDepth of 1 has been exceeded. Path '[0]', line 1, position 2.'')", span="3147-3147", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonWriter.cs"];
m47_2052 [label="ExceptionAssert.Throws<JsonReaderException>(() => { Assert.IsTrue(reader.Read()); }, ''The reader's MaxDepth of 1 has been exceeded. Path '[1]', line 1, position 9.'')", span="3165-3165", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonWriter.cs"];
m47_2036 [label="string json = ''[[[[]]],[[]]]''", span="3137-3137", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonWriter.cs"];
m47_2063 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", span="3135-3135", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonWriter.cs"];
m47_804 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", span="1293-1293", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JsonWriter.cs"];
m47_808 [label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1299-1299", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JsonWriter.cs"];
m47_806 [label="Assert.IsTrue(reader.Read())", span="1296-1296", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JsonWriter.cs"];
m47_805 [label="JsonReader reader = new JsonTextReader(new StringReader(@''[  ''))", span="1295-1295", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JsonWriter.cs"];
m47_807 [label="Assert.IsNull(reader.ReadAsBytes())", span="1298-1298", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JsonWriter.cs"];
m47_809 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", span="1293-1293", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JsonWriter.cs"];
m47_56 [label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="73-73", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonWriter.cs"];
m47_1099 [label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="445-445", cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonWriter.cs"];
m47_564 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", span="923-923", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", file="JsonWriter.cs"];
m47_565 [label="ExceptionAssert.Throws<ArgumentNullException> (\r\n                () => { new JsonTextReader (null); },\r\n                new string[] { \r\n                    ''Value cannot be null.'' + Environment.NewLine + ''Parameter name: reader'',\r\n                    ''Argument cannot be null.'' + Environment.NewLine + ''Parameter name: reader'' // Mono\r\n                })", span="925-930", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", file="JsonWriter.cs"];
m47_566 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", span="923-923", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", file="JsonWriter.cs"];
m47_384 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", span="651-651", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonWriter.cs"];
m47_388 [label="Assert.AreEqual(1, reader.LineNumber)", span="665-665", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonWriter.cs"];
m47_390 [label="Assert.AreEqual(2, reader.LineNumber)", span="668-668", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonWriter.cs"];
m47_392 [label="Assert.AreEqual(3, reader.LineNumber)", span="671-671", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonWriter.cs"];
m47_394 [label="Assert.AreEqual(4, reader.LineNumber)", span="674-674", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonWriter.cs"];
m47_396 [label="Assert.AreEqual(5, reader.LineNumber)", span="677-677", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonWriter.cs"];
m47_387 [label="reader.Read()", span="664-664", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonWriter.cs"];
m47_389 [label="reader.Read()", span="667-667", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonWriter.cs"];
m47_391 [label="reader.Read()", span="670-670", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonWriter.cs"];
m47_393 [label="reader.Read()", span="673-673", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonWriter.cs"];
m47_395 [label="reader.Read()", span="676-676", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonWriter.cs"];
m47_386 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="659-659", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonWriter.cs"];
m47_397 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Additional text encountered after finished reading JSON content: c. Path '', line 5, position 1.'')", span="679-679", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonWriter.cs"];
m47_385 [label="string json = @''[\r\n''''Small'''',\r\n''''Medium'''',\r\n''''Large''''\r\n]content''", span="653-657", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonWriter.cs"];
m47_398 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", span="651-651", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonWriter.cs"];
m47_1706 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", span="2635-2635", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonWriter.cs"];
m47_1709 [label="Assert.IsTrue(reader.Read())", span="2640-2640", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonWriter.cs"];
m47_1710 [label="Assert.IsTrue(reader.Read())", span="2641-2641", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonWriter.cs"];
m47_1711 [label="Assert.IsFalse(reader.Read())", span="2642-2642", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonWriter.cs"];
m47_1708 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2638-2638", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonWriter.cs"];
m47_1707 [label="string json = ''[true ''", span="2637-2637", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonWriter.cs"];
m47_1712 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", span="2635-2635", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonWriter.cs"];
m47_1253 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", span="1944-1944", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonWriter.cs"];
m47_1257 [label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="1950-1950", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonWriter.cs"];
m47_1259 [label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1953-1953", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonWriter.cs"];
m47_1260 [label="Assert.AreEqual(typeof(long), jsonReader.ValueType)", span="1954-1954", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonWriter.cs"];
m47_1261 [label="Assert.AreEqual((long)250, (long)jsonReader.Value)", span="1955-1955", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonWriter.cs"];
m47_1263 [label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1958-1958", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonWriter.cs"];
m47_1264 [label="Assert.AreEqual(typeof(long), jsonReader.ValueType)", span="1959-1959", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonWriter.cs"];
m47_1265 [label="Assert.AreEqual((long)250, (long)jsonReader.Value)", span="1960-1960", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonWriter.cs"];
m47_1267 [label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1963-1963", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonWriter.cs"];
m47_1268 [label="Assert.AreEqual(typeof(long), jsonReader.ValueType)", span="1964-1964", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonWriter.cs"];
m47_1269 [label="Assert.AreEqual((long)250, (long)jsonReader.Value)", span="1965-1965", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonWriter.cs"];
m47_1271 [label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="1968-1968", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonWriter.cs"];
m47_1256 [label="Assert.IsTrue(jsonReader.Read())", span="1949-1949", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonWriter.cs"];
m47_1258 [label="jsonReader.Read()", span="1952-1952", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonWriter.cs"];
m47_1262 [label="jsonReader.Read()", span="1957-1957", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonWriter.cs"];
m47_1266 [label="jsonReader.Read()", span="1962-1962", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonWriter.cs"];
m47_1270 [label="Assert.IsTrue(jsonReader.Read())", span="1967-1967", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonWriter.cs"];
m47_1272 [label="Assert.IsFalse(jsonReader.Read())", span="1970-1970", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonWriter.cs"];
m47_1255 [label="JsonTextReader jsonReader = new JsonTextReader(s)", span="1947-1947", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonWriter.cs"];
m47_1254 [label="StringReader s = new StringReader(@''[0372, 0xFA, 0XFA]'')", span="1946-1946", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonWriter.cs"];
m47_1273 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", span="1944-1944", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonWriter.cs"];
m47_1096 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="412-412", cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="JsonWriter.cs"];
m47_376 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", span="632-632", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="JsonWriter.cs"];
m47_378 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="640-640", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="JsonWriter.cs"];
m47_377 [label="string json = @''[\r\n''''Small'''',\r\n''''Medium'''',\r\n''''Large''''\r\n],''", span="634-638", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="JsonWriter.cs"];
m47_379 [label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                while (reader.Read())\r\n                {\r\n                }\r\n            }, ''Additional text encountered after finished reading JSON content: ,. Path '', line 5, position 1.'')", span="642-647", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="JsonWriter.cs"];
m47_380 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", span="632-632", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="JsonWriter.cs"];
m47_1274 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", span="1974-1974", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonWriter.cs"];
m47_1278 [label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="1980-1980", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonWriter.cs"];
m47_1280 [label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1983-1983", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonWriter.cs"];
m47_1281 [label="Assert.AreEqual(typeof(int), jsonReader.ValueType)", span="1984-1984", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonWriter.cs"];
m47_1282 [label="Assert.AreEqual(250, jsonReader.Value)", span="1985-1985", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonWriter.cs"];
m47_1284 [label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1988-1988", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonWriter.cs"];
m47_1285 [label="Assert.AreEqual(typeof(int), jsonReader.ValueType)", span="1989-1989", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonWriter.cs"];
m47_1286 [label="Assert.AreEqual(250, jsonReader.Value)", span="1990-1990", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonWriter.cs"];
m47_1288 [label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1993-1993", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonWriter.cs"];
m47_1289 [label="Assert.AreEqual(typeof(int), jsonReader.ValueType)", span="1994-1994", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonWriter.cs"];
m47_1290 [label="Assert.AreEqual(250, jsonReader.Value)", span="1995-1995", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonWriter.cs"];
m47_1292 [label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="1998-1998", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonWriter.cs"];
m47_1277 [label="Assert.IsTrue(jsonReader.Read())", span="1979-1979", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonWriter.cs"];
m47_1291 [label="Assert.IsTrue(jsonReader.Read())", span="1997-1997", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonWriter.cs"];
m47_1293 [label="Assert.IsFalse(jsonReader.Read())", span="2000-2000", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonWriter.cs"];
m47_1276 [label="JsonTextReader jsonReader = new JsonTextReader(s)", span="1977-1977", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonWriter.cs"];
m47_1275 [label="StringReader s = new StringReader(@''[0372, 0xFA, 0XFA]'')", span="1976-1976", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonWriter.cs"];
m47_1279 [label="jsonReader.ReadAsInt32()", span="1982-1982", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonWriter.cs"];
m47_1283 [label="jsonReader.ReadAsInt32()", span="1987-1987", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonWriter.cs"];
m47_1287 [label="jsonReader.ReadAsInt32()", span="1992-1992", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonWriter.cs"];
m47_1294 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", span="1974-1974", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonWriter.cs"];
m47_415 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", span="715-715", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonWriter.cs"];
m47_419 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.None)", span="733-733", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonWriter.cs"];
m47_420 [label="Assert.AreEqual(0, jsonReader.LineNumber)", span="734-734", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonWriter.cs"];
m47_421 [label="Assert.AreEqual(0, jsonReader.LinePosition)", span="735-735", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonWriter.cs"];
m47_423 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.StartObject)", span="738-738", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonWriter.cs"];
m47_424 [label="Assert.AreEqual(1, jsonReader.LineNumber)", span="739-739", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonWriter.cs"];
m47_425 [label="Assert.AreEqual(1, jsonReader.LinePosition)", span="740-740", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonWriter.cs"];
m47_427 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.PropertyName)", span="743-743", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonWriter.cs"];
m47_428 [label="Assert.AreEqual(jsonReader.Value, ''CPU'')", span="744-744", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonWriter.cs"];
m47_429 [label="Assert.AreEqual(2, jsonReader.LineNumber)", span="745-745", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonWriter.cs"];
m47_430 [label="Assert.AreEqual(6, jsonReader.LinePosition)", span="746-746", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonWriter.cs"];
m47_432 [label="Assert.AreEqual(JsonToken.String, jsonReader.TokenType)", span="749-749", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonWriter.cs"];
m47_433 [label="Assert.AreEqual(''Intel'', jsonReader.Value)", span="750-750", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonWriter.cs"];
m47_434 [label="Assert.AreEqual(2, jsonReader.LineNumber)", span="751-751", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonWriter.cs"];
m47_435 [label="Assert.AreEqual(14, jsonReader.LinePosition)", span="752-752", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonWriter.cs"];
m47_437 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.PropertyName)", span="755-755", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonWriter.cs"];
m47_438 [label="Assert.AreEqual(jsonReader.Value, ''Drives'')", span="756-756", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonWriter.cs"];
m47_439 [label="Assert.AreEqual(3, jsonReader.LineNumber)", span="757-757", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonWriter.cs"];
m47_440 [label="Assert.AreEqual(9, jsonReader.LinePosition)", span="758-758", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonWriter.cs"];
m47_442 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.StartArray)", span="761-761", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonWriter.cs"];
m47_443 [label="Assert.AreEqual(3, jsonReader.LineNumber)", span="762-762", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonWriter.cs"];
m47_444 [label="Assert.AreEqual(11, jsonReader.LinePosition)", span="763-763", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonWriter.cs"];
m47_446 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.String)", span="766-766", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonWriter.cs"];
m47_447 [label="Assert.AreEqual(jsonReader.Value, ''DVD read/writer'')", span="767-767", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonWriter.cs"];
m47_448 [label="Assert.AreEqual(jsonReader.QuoteChar, '\'')", span="768-768", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonWriter.cs"];
m47_449 [label="Assert.AreEqual(4, jsonReader.LineNumber)", span="769-769", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonWriter.cs"];
m47_450 [label="Assert.AreEqual(21, jsonReader.LinePosition)", span="770-770", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonWriter.cs"];
m47_452 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.String)", span="773-773", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonWriter.cs"];
m47_453 [label="Assert.AreEqual(jsonReader.Value, ''500 gigabyte hard drive'')", span="774-774", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonWriter.cs"];
m47_454 [label="Assert.AreEqual(jsonReader.QuoteChar, '''')", span="775-775", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonWriter.cs"];
m47_455 [label="Assert.AreEqual(5, jsonReader.LineNumber)", span="776-776", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonWriter.cs"];
m47_456 [label="Assert.AreEqual(29, jsonReader.LinePosition)", span="777-777", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonWriter.cs"];
m47_458 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.EndArray)", span="780-780", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonWriter.cs"];
m47_459 [label="Assert.AreEqual(6, jsonReader.LineNumber)", span="781-781", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonWriter.cs"];
m47_460 [label="Assert.AreEqual(3, jsonReader.LinePosition)", span="782-782", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonWriter.cs"];
m47_462 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.EndObject)", span="785-785", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonWriter.cs"];
m47_463 [label="Assert.AreEqual(7, jsonReader.LineNumber)", span="786-786", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonWriter.cs"];
m47_464 [label="Assert.AreEqual(1, jsonReader.LinePosition)", span="787-787", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonWriter.cs"];
m47_422 [label="jsonReader.Read()", span="737-737", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonWriter.cs"];
m47_426 [label="jsonReader.Read()", span="742-742", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonWriter.cs"];
m47_431 [label="jsonReader.Read()", span="748-748", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonWriter.cs"];
m47_436 [label="jsonReader.Read()", span="754-754", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonWriter.cs"];
m47_441 [label="jsonReader.Read()", span="760-760", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonWriter.cs"];
m47_445 [label="jsonReader.Read()", span="765-765", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonWriter.cs"];
m47_451 [label="jsonReader.Read()", span="772-772", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonWriter.cs"];
m47_457 [label="jsonReader.Read()", span="779-779", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonWriter.cs"];
m47_461 [label="jsonReader.Read()", span="784-784", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonWriter.cs"];
m47_465 [label="Assert.IsFalse(jsonReader.Read())", span="789-789", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonWriter.cs"];
m47_418 [label="JsonTextReader jsonReader = new JsonTextReader(sr)", span="727-727", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonWriter.cs"];
m47_417 [label="StringReader sr = new StringReader(input)", span="725-725", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonWriter.cs"];
m47_416 [label="string input = @''{\r\n  CPU: 'Intel',\r\n  Drives: [\r\n    'DVD read/writer',\r\n    ''''500 gigabyte hard drive''''\r\n  ]\r\n}''", span="717-723", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonWriter.cs"];
m47_466 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", span="715-715", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonWriter.cs"];
m47_864 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", span="1403-1403", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonWriter.cs"];
m47_868 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1408-1408", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonWriter.cs"];
m47_869 [label="Assert.AreEqual(''hi\r\nbye'', reader.Value)", span="1409-1409", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonWriter.cs"];
m47_871 [label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1411-1411", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonWriter.cs"];
m47_872 [label="Assert.AreEqual(1L, reader.Value)", span="1412-1412", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonWriter.cs"];
m47_874 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1414-1414", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonWriter.cs"];
m47_866 [label="Assert.IsTrue(reader.Read())", span="1406-1406", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonWriter.cs"];
m47_867 [label="Assert.IsTrue(reader.Read())", span="1407-1407", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonWriter.cs"];
m47_870 [label="Assert.IsTrue(reader.Read())", span="1410-1410", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonWriter.cs"];
m47_873 [label="Assert.IsTrue(reader.Read())", span="1413-1413", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonWriter.cs"];
m47_865 [label="JsonReader reader = new JsonTextReader(new StringReader(@''{'hi\r\nbye':1}''))", span="1405-1405", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonWriter.cs"];
m47_875 [label="Assert.IsFalse(reader.Read())", span="1415-1415", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonWriter.cs"];
m47_876 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", span="1403-1403", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonWriter.cs"];
m47_2024 [label="Entry double.ToString(System.IFormatProvider)", span="0-0", cluster="double.ToString(System.IFormatProvider)", file="JsonWriter.cs"];
m47_2224 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", span="567-567", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", file="JsonWriter.cs"];
m47_1576 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", span="2405-2405", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonWriter.cs"];
m47_1580 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2412-2412", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonWriter.cs"];
m47_1582 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2415-2415", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonWriter.cs"];
m47_1584 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2418-2418", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonWriter.cs"];
m47_1585 [label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="2419-2419", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonWriter.cs"];
m47_1588 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2423-2423", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonWriter.cs"];
m47_1586 [label="Assert.AreEqual(-79228162514264300000000000000m, d)", span="2420-2420", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonWriter.cs"];
m47_1579 [label="Assert.IsTrue(reader.Read())", span="2411-2411", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonWriter.cs"];
m47_1581 [label="Assert.IsTrue(reader.Read())", span="2414-2414", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonWriter.cs"];
m47_1587 [label="Assert.IsTrue(reader.Read())", span="2422-2422", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonWriter.cs"];
m47_1578 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2409-2409", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonWriter.cs"];
m47_1583 [label="decimal? d = reader.ReadAsDecimal()", span="2417-2417", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonWriter.cs"];
m47_1577 [label="string json = @''{''''decimal'''':-7.92281625142643E+28}''", span="2407-2407", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonWriter.cs"];
m47_1589 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", span="2405-2405", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonWriter.cs"];
m47_268 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", span="443-443", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JsonWriter.cs"];
m47_273 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="451-451", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JsonWriter.cs"];
m47_272 [label="Assert.IsTrue(reader.Read())", span="450-450", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JsonWriter.cs"];
m47_270 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="447-447", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JsonWriter.cs"];
m47_274 [label="ExceptionAssert.Throws<JsonReaderException>(() => reader.Read(), ''Cannot read NaN as a decimal.'')", span="453-453", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JsonWriter.cs"];
m47_271 [label="reader.FloatParseHandling = Json.FloatParseHandling.Decimal", span="448-448", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JsonWriter.cs"];
m47_269 [label="string json = ''[NaN]''", span="445-445", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JsonWriter.cs"];
m47_275 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", span="443-443", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JsonWriter.cs"];
m47_819 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", span="1312-1312", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonWriter.cs"];
m47_831 [label="Assert.AreEqual(newLinesText + ''name1'' + newLinesText, reader.Value)", span="1357-1357", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonWriter.cs"];
m47_846 [label="Assert.AreEqual(newLinesText + ''blah comment'' + newLinesText, reader.Value)", span="1377-1377", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonWriter.cs"];
m47_828 [label="Assert.AreEqual(7, reader.LineNumber)", span="1353-1353", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonWriter.cs"];
m47_830 [label="Assert.AreEqual(31, reader.LineNumber)", span="1356-1356", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonWriter.cs"];
m47_833 [label="Assert.AreEqual(37, reader.LineNumber)", span="1360-1360", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonWriter.cs"];
m47_835 [label="Assert.AreEqual(55, reader.LineNumber)", span="1363-1363", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonWriter.cs"];
m47_836 [label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="1364-1364", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonWriter.cs"];
m47_837 [label="Assert.AreEqual(''Date'', reader.Value)", span="1365-1365", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonWriter.cs"];
m47_839 [label="Assert.AreEqual(61, reader.LineNumber)", span="1368-1368", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonWriter.cs"];
m47_840 [label="Assert.AreEqual(1L, reader.Value)", span="1369-1369", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonWriter.cs"];
m47_842 [label="Assert.AreEqual(73, reader.LineNumber)", span="1372-1372", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonWriter.cs"];
m47_843 [label="Assert.AreEqual(null, reader.Value)", span="1373-1373", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonWriter.cs"];
m47_845 [label="Assert.AreEqual(91, reader.LineNumber)", span="1376-1376", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonWriter.cs"];
m47_848 [label="Assert.AreEqual(97, reader.LineNumber)", span="1380-1380", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonWriter.cs"];
m47_850 [label="Assert.AreEqual(109, reader.LineNumber)", span="1383-1383", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonWriter.cs"];
m47_852 [label="Assert.AreEqual(115, reader.LineNumber)", span="1386-1386", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonWriter.cs"];
m47_854 [label="Assert.AreEqual(133, reader.LineNumber)", span="1389-1389", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonWriter.cs"];
m47_855 [label="Assert.AreEqual(''name2'', reader.Value)", span="1390-1390", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonWriter.cs"];
m47_857 [label="Assert.AreEqual(139, reader.LineNumber)", span="1393-1393", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonWriter.cs"];
m47_859 [label="Assert.AreEqual(145, reader.LineNumber)", span="1396-1396", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonWriter.cs"];
m47_861 [label="Assert.AreEqual(151, reader.LineNumber)", span="1399-1399", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonWriter.cs"];
m47_827 [label="Assert.IsTrue(reader.Read())", span="1352-1352", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonWriter.cs"];
m47_829 [label="Assert.IsTrue(reader.Read())", span="1355-1355", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonWriter.cs"];
m47_832 [label="Assert.IsTrue(reader.Read())", span="1359-1359", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonWriter.cs"];
m47_834 [label="Assert.IsTrue(reader.Read())", span="1362-1362", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonWriter.cs"];
m47_838 [label="Assert.IsTrue(reader.Read())", span="1367-1367", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonWriter.cs"];
m47_841 [label="Assert.IsTrue(reader.Read())", span="1371-1371", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonWriter.cs"];
m47_844 [label="Assert.IsTrue(reader.Read())", span="1375-1375", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonWriter.cs"];
m47_847 [label="Assert.IsTrue(reader.Read())", span="1379-1379", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonWriter.cs"];
m47_849 [label="Assert.IsTrue(reader.Read())", span="1382-1382", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonWriter.cs"];
m47_851 [label="Assert.IsTrue(reader.Read())", span="1385-1385", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonWriter.cs"];
m47_853 [label="Assert.IsTrue(reader.Read())", span="1388-1388", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonWriter.cs"];
m47_856 [label="Assert.IsTrue(reader.Read())", span="1392-1392", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonWriter.cs"];
m47_858 [label="Assert.IsTrue(reader.Read())", span="1395-1395", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonWriter.cs"];
m47_860 [label="Assert.IsTrue(reader.Read())", span="1398-1398", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonWriter.cs"];
m47_826 [label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="1351-1351", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonWriter.cs"];
m47_823 [label="StringReader sr = new StringReader(newLinesText)", span="1345-1345", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonWriter.cs"];
m47_820 [label="string newLinesText = StringUtils.CarriageReturn + StringUtils.CarriageReturnLineFeed + StringUtils.LineFeed + StringUtils.CarriageReturnLineFeed + '' '' + StringUtils.CarriageReturn + StringUtils.CarriageReturnLineFeed", span="1314-1314", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonWriter.cs"];
m47_821 [label="string json =\r\n                newLinesText\r\n                + ''{'' + newLinesText\r\n                + ''''' + newLinesText\r\n                + ''name1'' + newLinesText\r\n                + ''''' + newLinesText\r\n                + '':'' + newLinesText\r\n                + ''['' + newLinesText\r\n                + ''new'' + newLinesText\r\n                + ''Date'' + newLinesText\r\n                + ''('' + newLinesText\r\n                + ''1'' + newLinesText\r\n                + '','' + newLinesText\r\n                + ''null'' + newLinesText\r\n                + ''/*'' + newLinesText\r\n                + ''blah comment'' + newLinesText\r\n                + ''*/'' + newLinesText\r\n                + '')'' + newLinesText\r\n                + '','' + newLinesText\r\n                + ''1.1111'' + newLinesText\r\n                + '']'' + newLinesText\r\n                + '','' + newLinesText\r\n                + ''name2'' + newLinesText\r\n                + '':'' + newLinesText\r\n                + ''{'' + newLinesText\r\n                + ''}'' + newLinesText\r\n                + ''}'' + newLinesText", span="1316-1342", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonWriter.cs"];
m47_824 [label="sr.ReadLine() != null", span="1346-1346", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonWriter.cs"];
m47_822 [label="int count = 0", span="1344-1344", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonWriter.cs"];
m47_825 [label="count++", span="1348-1348", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonWriter.cs"];
m47_862 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", span="1312-1312", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonWriter.cs"];
m47_1713 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", span="2646-2646", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="JsonWriter.cs"];
m47_1715 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2649-2649", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="JsonWriter.cs"];
m47_1714 [label="string json = ''new Dat''", span="2648-2648", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="JsonWriter.cs"];
m47_1716 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected end while parsing constructor. Path '', line 1, position 7.'')", span="2651-2651", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="JsonWriter.cs"];
m47_1717 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", span="2646-2646", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="JsonWriter.cs"];
m47_1562 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", span="2389-2389", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="JsonWriter.cs"];
m47_1563 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''/* sdf''))", span="2391-2391", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="JsonWriter.cs"];
m47_1564 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected end while parsing comment. Path '', line 1, position 6.'')", span="2393-2393", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="JsonWriter.cs"];
m47_1565 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", span="2389-2389", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="JsonWriter.cs"];
m47_374 [label="Entry Newtonsoft.Json.Tests.SlowStream.SlowStream(string, System.Text.Encoding, int)", span="3489-3489", cluster="Newtonsoft.Json.Tests.SlowStream.SlowStream(string, System.Text.Encoding, int)", file="JsonWriter.cs"];
m47_2279 [label="Exit Newtonsoft.Json.Tests.SlowStream.SlowStream(string, System.Text.Encoding, int)", span="3489-3489", cluster="Newtonsoft.Json.Tests.SlowStream.SlowStream(string, System.Text.Encoding, int)", file="JsonWriter.cs"];
m47_313 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", span="509-509", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonWriter.cs"];
m47_314 [label="Assert.AreEqual(''ABC \ud800\udc00 DEF'', ReadString(''ABC \\ud800\\udc00 DEF''))", span="512-512", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonWriter.cs"];
m47_315 [label="Assert.AreEqual(''ABC \ufffd\ufffd DEF'', ReadString(''ABC \\ud800\\ud800 DEF''))", span="515-515", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonWriter.cs"];
m47_316 [label="Assert.AreEqual(''ABC \ufffd\ufffd\u1234 DEF'', ReadString(''ABC \\ud800\\ud800\\u1234 DEF''))", span="518-518", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonWriter.cs"];
m47_317 [label="Assert.AreEqual(''ABC \ufffd\ufffd\ufffd DEF'', ReadString(''ABC \\ud800\\ud800\\ud800 DEF''))", span="521-521", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonWriter.cs"];
m47_318 [label="Assert.AreEqual(''ABC \ufffd\ud800\udc00 DEF'', ReadString(''ABC \\ud800\\ud800\\udc00 DEF''))", span="524-524", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonWriter.cs"];
m47_319 [label="Assert.AreEqual(''ABC \ufffd'', ReadString(''ABC \\ud800''))", span="527-527", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonWriter.cs"];
m47_320 [label="Assert.AreEqual(''ABC \ufffd DEF'', ReadString(''ABC \\ud800 DEF''))", span="530-530", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonWriter.cs"];
m47_321 [label="Assert.AreEqual(''ABC \ufffd\ufffd DEF'', ReadString(''ABC \\udc00\\ud800 DEF''))", span="533-533", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonWriter.cs"];
m47_322 [label="Assert.AreEqual(''\ufffd\ufffd\ufffd'', ReadString(''\udc00\ud800\ud800''))", span="536-536", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonWriter.cs"];
m47_323 [label="Assert.AreEqual(''ABC \ufffd\b'', ReadString(''ABC \\ud800\\b''))", span="538-538", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonWriter.cs"];
m47_324 [label="Assert.AreEqual(''ABC \ufffd '', ReadString(''ABC \\ud800 ''))", span="539-539", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonWriter.cs"];
m47_325 [label="Assert.AreEqual(''ABC \b\ufffd'', ReadString(''ABC \\b\\ud800''))", span="540-540", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonWriter.cs"];
m47_326 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", span="509-509", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonWriter.cs"];
m47_779 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", span="1266-1266", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="JsonWriter.cs"];
m47_780 [label="JsonReader reader = new JsonTextReader(new StringReader(@'''h\''))", span="1268-1268", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="JsonWriter.cs"];
m47_781 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unterminated string. Expected delimiter: '. Path '', line 1, position 3.'')", span="1270-1270", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="JsonWriter.cs"];
m47_782 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", span="1266-1266", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="JsonWriter.cs"];
m47_98 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", span="193-193", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", file="JsonWriter.cs"];
m47_104 [label="Assert.AreEqual(@''Forest's Bakery And Cafe'', jsonTextReader.Value)", span="202-202", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", file="JsonWriter.cs"];
m47_101 [label="jsonTextReader.Read()", span="198-198", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", file="JsonWriter.cs"];
m47_102 [label="jsonTextReader.Read()", span="199-199", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", file="JsonWriter.cs"];
m47_103 [label="jsonTextReader.Read()", span="200-200", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", file="JsonWriter.cs"];
m47_100 [label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="197-197", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", file="JsonWriter.cs"];
m47_99 [label="string json = @''{''''NameOfStore'''':''''Forest's Bakery And Cafe''''}''", span="195-195", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", file="JsonWriter.cs"];
m47_105 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", span="193-193", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", file="JsonWriter.cs"];
m47_1093 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(int)", span="882-882", cluster="Newtonsoft.Json.JsonWriter.WriteValue(int)", file="JsonWriter.cs"];
m47_193 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", span="343-343", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonWriter.cs"];
m47_197 [label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", span="352-352", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonWriter.cs"];
m47_199 [label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="355-355", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonWriter.cs"];
m47_201 [label="Assert.AreEqual(JsonToken.String, jsonTextReader.TokenType)", span="358-358", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonWriter.cs"];
m47_202 [label="Assert.AreEqual(@''/Date(9467082_PIE_340000-0631)/'', jsonTextReader.Value)", span="359-359", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonWriter.cs"];
m47_204 [label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", span="362-362", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonWriter.cs"];
m47_196 [label="Assert.IsTrue(jsonTextReader.Read())", span="351-351", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonWriter.cs"];
m47_198 [label="Assert.IsTrue(jsonTextReader.Read())", span="354-354", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonWriter.cs"];
m47_200 [label="Assert.IsTrue(jsonTextReader.Read())", span="357-357", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonWriter.cs"];
m47_203 [label="Assert.IsTrue(jsonTextReader.Read())", span="361-361", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonWriter.cs"];
m47_205 [label="Assert.IsFalse(jsonTextReader.Read())", span="364-364", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonWriter.cs"];
m47_195 [label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="349-349", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonWriter.cs"];
m47_194 [label="string json = @''{\r\n    ChildId: '\/Date(9467082_PIE_340000-0631)\/'\r\n}''", span="345-347", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonWriter.cs"];
m47_206 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", span="343-343", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonWriter.cs"];
m47_611 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", span="978-978", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonWriter.cs"];
m47_615 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="984-984", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonWriter.cs"];
m47_617 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="987-987", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonWriter.cs"];
m47_619 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="990-990", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonWriter.cs"];
m47_621 [label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="993-993", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonWriter.cs"];
m47_623 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="996-996", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonWriter.cs"];
m47_625 [label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="999-999", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonWriter.cs"];
m47_627 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="1002-1002", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonWriter.cs"];
m47_629 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1005-1005", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonWriter.cs"];
m47_631 [label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="1008-1008", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonWriter.cs"];
m47_633 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1011-1011", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonWriter.cs"];
m47_635 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="1014-1014", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonWriter.cs"];
m47_636 [label="Assert.AreEqual(''\0sd\0f\0'', reader.Value)", span="1015-1015", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonWriter.cs"];
m47_638 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="1018-1018", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonWriter.cs"];
m47_639 [label="Assert.AreEqual(''\0sd\0f\0'', reader.Value)", span="1019-1019", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonWriter.cs"];
m47_614 [label="Assert.IsTrue(reader.Read())", span="983-983", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonWriter.cs"];
m47_616 [label="Assert.IsTrue(reader.Read())", span="986-986", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonWriter.cs"];
m47_618 [label="Assert.IsTrue(reader.Read())", span="989-989", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonWriter.cs"];
m47_620 [label="Assert.IsTrue(reader.Read())", span="992-992", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonWriter.cs"];
m47_622 [label="Assert.IsTrue(reader.Read())", span="995-995", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonWriter.cs"];
m47_624 [label="Assert.IsTrue(reader.Read())", span="998-998", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonWriter.cs"];
m47_626 [label="Assert.IsTrue(reader.Read())", span="1001-1001", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonWriter.cs"];
m47_628 [label="Assert.IsTrue(reader.Read())", span="1004-1004", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonWriter.cs"];
m47_630 [label="Assert.IsTrue(reader.Read())", span="1007-1007", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonWriter.cs"];
m47_632 [label="Assert.IsTrue(reader.Read())", span="1010-1010", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonWriter.cs"];
m47_634 [label="Assert.IsTrue(reader.Read())", span="1013-1013", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonWriter.cs"];
m47_637 [label="Assert.IsTrue(reader.Read())", span="1017-1017", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonWriter.cs"];
m47_640 [label="Assert.IsFalse(reader.Read())", span="1021-1021", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonWriter.cs"];
m47_613 [label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="981-981", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonWriter.cs"];
m47_612 [label="string json = ''\0{\0'\0h\0i\0'\0:\0[\01\0,\0'\0'\0\0,\0null\0]\0,\0do\0:true\0}\0\0/*\0sd\0f\0*/\0/*\0sd\0f\0*/ \0''", span="980-980", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonWriter.cs"];
m47_641 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", span="978-978", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonWriter.cs"];
m47_968 [label="Entry long.ToString()", span="0-0", cluster="long.ToString()", file="JsonWriter.cs"];
m47_766 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="JsonWriter.cs"];
m47_1368 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", span="2104-2104", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonWriter.cs"];
m47_1372 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2114-2114", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonWriter.cs"];
m47_1374 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2117-2117", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonWriter.cs"];
m47_1375 [label="Assert.AreEqual(''Message'', reader.Value)", span="2118-2118", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonWriter.cs"];
m47_1377 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="2121-2121", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonWriter.cs"];
m47_1378 [label="Assert.AreEqual(@''Hi,I'' + '\u0092' + ''ve send you smth'', reader.Value)", span="2122-2122", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonWriter.cs"];
m47_1380 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2125-2125", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonWriter.cs"];
m47_1371 [label="Assert.IsTrue(reader.Read())", span="2113-2113", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonWriter.cs"];
m47_1373 [label="Assert.IsTrue(reader.Read())", span="2116-2116", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonWriter.cs"];
m47_1376 [label="Assert.IsTrue(reader.Read())", span="2120-2120", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonWriter.cs"];
m47_1379 [label="Assert.IsTrue(reader.Read())", span="2124-2124", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonWriter.cs"];
m47_1381 [label="Assert.IsFalse(reader.Read())", span="2127-2127", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonWriter.cs"];
m47_1370 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2108-2108", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonWriter.cs"];
m47_1369 [label="string json = @''{''''Message'''':''''Hi,I\u0092ve send you smth''''}''", span="2106-2106", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonWriter.cs"];
m47_1382 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", span="2104-2104", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonWriter.cs"];
m47_2188 [label="Entry Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", span="3462-3462", cluster="Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", file="JsonWriter.cs"];
m47_2265 [label="_inner = inner", span="3464-3464", cluster="Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", file="JsonWriter.cs"];
m47_2266 [label="Exit Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", span="3462-3462", cluster="Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", file="JsonWriter.cs"];
m47_1090 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(bool)", span="938-938", cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool)", file="JsonWriter.cs"];
m47_334 [label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0", cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="JsonWriter.cs"];
m47_793 [label="Entry Newtonsoft.Json.JsonReader.ReadAsBytes()", span="423-423", cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonWriter.cs"];
m47_1773 [label="Entry Unk.>", span="", cluster="Unk.>", file="JsonWriter.cs"];
m47_697 [label="Entry BigInteger.cstr", span="", cluster="BigInteger.cstr", file="JsonWriter.cs"];
m47_967 [label="Entry int.ToString()", span="0-0", cluster="int.ToString()", file="JsonWriter.cs"];
m47_684 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", span="1103-1103", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonWriter.cs"];
m47_688 [label="Assert.AreEqual(typeof(long), reader.ValueType)", span="1109-1109", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonWriter.cs"];
m47_694 [label="Assert.AreEqual(typeof(BigInteger), reader.ValueType)", span="1118-1118", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonWriter.cs"];
m47_687 [label="reader.Read()", span="1108-1108", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonWriter.cs"];
m47_693 [label="reader.Read()", span="1116-1116", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonWriter.cs"];
m47_686 [label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="1107-1107", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonWriter.cs"];
m47_692 [label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="1115-1115", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonWriter.cs"];
m47_689 [label="int j = 1", span="1111-1111", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonWriter.cs"];
m47_695 [label="j++", span="1111-1111", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonWriter.cs"];
m47_685 [label="BigInteger i = new BigInteger(long.MaxValue)", span="1105-1105", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonWriter.cs"];
m47_691 [label="BigInteger total = i + j", span="1113-1113", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonWriter.cs"];
m47_690 [label="j < 1000", span="1111-1111", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonWriter.cs"];
m47_696 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", span="1103-1103", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonWriter.cs"];
m47_350 [label="Entry Newtonsoft.Json.JsonTextReader.Close()", span="1748-1748", cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonWriter.cs"];
m47_60 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="JsonWriter.cs"];
m47_713 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", span="1144-1144", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonWriter.cs"];
m47_721 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1172-1172", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonWriter.cs"];
m47_722 [label="Assert.AreEqual(''type'', reader.Value)", span="1173-1173", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonWriter.cs"];
m47_718 [label="Assert.IsTrue(reader.Read())", span="1168-1168", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonWriter.cs"];
m47_720 [label="Assert.IsTrue(reader.Read())", span="1171-1171", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonWriter.cs"];
m47_715 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1161-1161", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonWriter.cs"];
m47_717 [label="i < 14", span="1166-1166", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonWriter.cs"];
m47_719 [label="i++", span="1166-1166", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonWriter.cs"];
m47_714 [label="string json = @''\r\n{\r\n  ''''description'''': ''''A person'''',\r\n  ''''type'''': ''''object'''',\r\n  ''''properties'''':\r\n  {\r\n    ''''name'''': {''''type'''':''''string''''},\r\n    ''''hobbies'''': {\r\n      ''''type'''': ''''array'''',\r\n      ''''items'''': {''''type'''':''''string''''}\r\n    }\r\n  }\r\n}\r\n''", span="1146-1159", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonWriter.cs"];
m47_716 [label="int i = 0", span="1166-1166", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonWriter.cs"];
m47_723 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", span="1144-1144", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonWriter.cs"];
m47_1100 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", span="672-672", cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", file="JsonWriter.cs"];
m47_97 [label="Entry System.Guid.ToByteArray()", span="0-0", cluster="System.Guid.ToByteArray()", file="JsonWriter.cs"];
m47_242 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", span="408-408", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonWriter.cs"];
m47_247 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="416-416", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonWriter.cs"];
m47_249 [label="Assert.AreEqual(1.0m, reader.Value)", span="419-419", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonWriter.cs"];
m47_250 [label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="420-420", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonWriter.cs"];
m47_251 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="421-421", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonWriter.cs"];
m47_253 [label="Assert.AreEqual(1L, reader.Value)", span="424-424", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonWriter.cs"];
m47_254 [label="Assert.AreEqual(typeof(long), reader.ValueType)", span="425-425", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonWriter.cs"];
m47_255 [label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="426-426", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonWriter.cs"];
m47_257 [label="Assert.AreEqual(9.9m, reader.Value)", span="429-429", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonWriter.cs"];
m47_258 [label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="430-430", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonWriter.cs"];
m47_259 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="431-431", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonWriter.cs"];
m47_261 [label="Assert.AreEqual(Convert.ToDecimal(1E-06), reader.Value)", span="434-434", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonWriter.cs"];
m47_262 [label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="435-435", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonWriter.cs"];
m47_263 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="436-436", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonWriter.cs"];
m47_265 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="439-439", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonWriter.cs"];
m47_246 [label="Assert.IsTrue(reader.Read())", span="415-415", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonWriter.cs"];
m47_248 [label="Assert.IsTrue(reader.Read())", span="418-418", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonWriter.cs"];
m47_252 [label="Assert.IsTrue(reader.Read())", span="423-423", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonWriter.cs"];
m47_256 [label="Assert.IsTrue(reader.Read())", span="428-428", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonWriter.cs"];
m47_260 [label="Assert.IsTrue(reader.Read())", span="433-433", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonWriter.cs"];
m47_264 [label="Assert.IsTrue(reader.Read())", span="438-438", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonWriter.cs"];
m47_244 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="412-412", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonWriter.cs"];
m47_245 [label="reader.FloatParseHandling = Json.FloatParseHandling.Decimal", span="413-413", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonWriter.cs"];
m47_243 [label="string json = ''[1.0,1,9.9,1E-06]''", span="410-410", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonWriter.cs"];
m47_266 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", span="408-408", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonWriter.cs"];
m47_1097 [label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="835-835", cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="JsonWriter.cs"];
m47_1149 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", span="1795-1795", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonWriter.cs"];
m47_1153 [label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="1803-1803", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonWriter.cs"];
m47_1155 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1806-1806", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonWriter.cs"];
m47_1156 [label="Assert.AreEqual(0.0, jsonReader.Value)", span="1807-1807", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonWriter.cs"];
m47_1158 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1810-1810", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonWriter.cs"];
m47_1159 [label="Assert.AreEqual(0.0, jsonReader.Value)", span="1811-1811", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonWriter.cs"];
m47_1161 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1814-1814", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonWriter.cs"];
m47_1162 [label="Assert.AreEqual(0.1, jsonReader.Value)", span="1815-1815", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonWriter.cs"];
m47_1164 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1818-1818", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonWriter.cs"];
m47_1165 [label="Assert.AreEqual(1.0, jsonReader.Value)", span="1819-1819", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonWriter.cs"];
m47_1167 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1822-1822", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonWriter.cs"];
m47_1168 [label="Assert.AreEqual(1.000001, jsonReader.Value)", span="1823-1823", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonWriter.cs"];
m47_1170 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1826-1826", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonWriter.cs"];
m47_1171 [label="Assert.AreEqual(1E-06, jsonReader.Value)", span="1827-1827", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonWriter.cs"];
m47_1173 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1830-1830", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonWriter.cs"];
m47_1174 [label="Assert.AreEqual(4.94065645841247E-324, jsonReader.Value)", span="1831-1831", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonWriter.cs"];
m47_1176 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1834-1834", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonWriter.cs"];
m47_1177 [label="Assert.AreEqual(double.PositiveInfinity, jsonReader.Value)", span="1835-1835", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonWriter.cs"];
m47_1179 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1838-1838", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonWriter.cs"];
m47_1180 [label="Assert.AreEqual(double.NegativeInfinity, jsonReader.Value)", span="1839-1839", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonWriter.cs"];
m47_1182 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1842-1842", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonWriter.cs"];
m47_1183 [label="Assert.AreEqual(double.NaN, jsonReader.Value)", span="1843-1843", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonWriter.cs"];
m47_1185 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1846-1846", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonWriter.cs"];
m47_1186 [label="Assert.AreEqual(double.MaxValue, jsonReader.Value)", span="1847-1847", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonWriter.cs"];
m47_1188 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1850-1850", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonWriter.cs"];
m47_1189 [label="Assert.AreEqual(double.MinValue, jsonReader.Value)", span="1851-1851", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonWriter.cs"];
m47_1191 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1854-1854", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonWriter.cs"];
m47_1192 [label="Assert.AreEqual(double.PositiveInfinity, jsonReader.Value)", span="1855-1855", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonWriter.cs"];
m47_1194 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1858-1858", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonWriter.cs"];
m47_1195 [label="Assert.AreEqual(double.NegativeInfinity, jsonReader.Value)", span="1859-1859", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonWriter.cs"];
m47_1197 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1862-1862", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonWriter.cs"];
m47_1198 [label="Assert.AreEqual(double.NaN, jsonReader.Value)", span="1863-1863", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonWriter.cs"];
m47_1200 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1866-1866", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonWriter.cs"];
m47_1201 [label="Assert.AreEqual(0d, jsonReader.Value)", span="1867-1867", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonWriter.cs"];
m47_1203 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1870-1870", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonWriter.cs"];
m47_1204 [label="Assert.AreEqual(0.0000025d, jsonReader.Value)", span="1871-1871", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonWriter.cs"];
m47_1206 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1874-1874", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonWriter.cs"];
m47_1207 [label="Assert.AreEqual(3000000000d, jsonReader.Value)", span="1875-1875", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonWriter.cs"];
m47_1209 [label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="1878-1878", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonWriter.cs"];
m47_1151 [label="JsonReader jsonReader = new JsonTextReader(new StringReader(json))", span="1800-1800", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonWriter.cs"];
m47_1152 [label="jsonReader.Read()", span="1802-1802", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonWriter.cs"];
m47_1154 [label="jsonReader.Read()", span="1805-1805", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonWriter.cs"];
m47_1157 [label="jsonReader.Read()", span="1809-1809", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonWriter.cs"];
m47_1160 [label="jsonReader.Read()", span="1813-1813", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonWriter.cs"];
m47_1163 [label="jsonReader.Read()", span="1817-1817", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonWriter.cs"];
m47_1166 [label="jsonReader.Read()", span="1821-1821", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonWriter.cs"];
m47_1169 [label="jsonReader.Read()", span="1825-1825", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonWriter.cs"];
m47_1172 [label="jsonReader.Read()", span="1829-1829", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonWriter.cs"];
m47_1175 [label="jsonReader.Read()", span="1833-1833", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonWriter.cs"];
m47_1178 [label="jsonReader.Read()", span="1837-1837", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonWriter.cs"];
m47_1181 [label="jsonReader.Read()", span="1841-1841", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonWriter.cs"];
m47_1184 [label="jsonReader.Read()", span="1845-1845", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonWriter.cs"];
m47_1187 [label="jsonReader.Read()", span="1849-1849", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonWriter.cs"];
m47_1190 [label="jsonReader.Read()", span="1853-1853", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonWriter.cs"];
m47_1193 [label="jsonReader.Read()", span="1857-1857", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonWriter.cs"];
m47_1196 [label="jsonReader.Read()", span="1861-1861", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonWriter.cs"];
m47_1199 [label="jsonReader.Read()", span="1865-1865", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonWriter.cs"];
m47_1202 [label="jsonReader.Read()", span="1869-1869", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonWriter.cs"];
m47_1205 [label="jsonReader.Read()", span="1873-1873", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonWriter.cs"];
m47_1208 [label="jsonReader.Read()", span="1877-1877", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonWriter.cs"];
m47_1150 [label="string json =\r\n                @''[0.0,0.0,0.1,1.0,1.000001,1E-06,4.94065645841247E-324,Infinity,-Infinity,NaN,1.7976931348623157E+308,-1.7976931348623157E+308,Infinity,-Infinity,NaN,0e-10,0.25e-5,0.3e10]''", span="1797-1798", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonWriter.cs"];
m47_1210 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", span="1795-1795", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonWriter.cs"];
m47_1410 [label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", file="JsonWriter.cs"];
m47_1933 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", span="2984-2984", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="JsonWriter.cs"];
m47_1935 [label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2988-2988", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="JsonWriter.cs"];
m47_1934 [label="string json = @''/''", span="2986-2986", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="JsonWriter.cs"];
m47_1936 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected end while parsing comment. Path '', line 1, position 1.'')", span="2990-2990", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="JsonWriter.cs"];
m47_1937 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", span="2984-2984", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="JsonWriter.cs"];
m47_1347 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", span="2077-2077", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonWriter.cs"];
m47_1350 [label="Assert.AreEqual(2, data.Length)", span="2082-2082", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonWriter.cs"];
m47_1351 [label="Assert.AreEqual(1, data[0])", span="2083-2083", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonWriter.cs"];
m47_1352 [label="Assert.AreEqual(2, data[1])", span="2084-2084", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonWriter.cs"];
m47_1348 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[/*hi*/1/*hi*/,2/*hi*/]''))", span="2079-2079", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonWriter.cs"];
m47_1349 [label="byte[] data = reader.ReadAsBytes()", span="2081-2081", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonWriter.cs"];
m47_1353 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", span="2077-2077", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonWriter.cs"];
m47_58 [label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="358-358", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonWriter.cs"];
m47_1308 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", span="2023-2023", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="JsonWriter.cs"];
m47_1311 [label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="2028-2028", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="JsonWriter.cs"];
m47_1309 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''''))", span="2025-2025", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="JsonWriter.cs"];
m47_1310 [label="Assert.IsNull(reader.ReadAsBytes())", span="2027-2027", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="JsonWriter.cs"];
m47_1312 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", span="2023-2023", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="JsonWriter.cs"];
m47_1320 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", span="2041-2041", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="JsonWriter.cs"];
m47_1323 [label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="2046-2046", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="JsonWriter.cs"];
m47_1321 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''''))", span="2043-2043", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="JsonWriter.cs"];
m47_1322 [label="Assert.IsNull(reader.ReadAsDateTimeOffset())", span="2045-2045", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="JsonWriter.cs"];
m47_1324 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", span="2041-2041", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="JsonWriter.cs"];
m47_652 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", span="1061-1061", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonWriter.cs"];
m47_656 [label="Assert.AreEqual(typeof(long), reader.ValueType)", span="1067-1067", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonWriter.cs"];
m47_655 [label="reader.Read()", span="1066-1066", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonWriter.cs"];
m47_654 [label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="1065-1065", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonWriter.cs"];
m47_657 [label="int j = 1", span="1069-1069", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonWriter.cs"];
m47_653 [label="long i = int.MaxValue", span="1063-1063", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonWriter.cs"];
m47_660 [label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n                {\r\n                    reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)));\r\n                    reader.ReadAsInt32();\r\n                }, ''JSON integer '' + total + '' is too large or small for an Int32. Path '', line 1, position 10.'')", span="1072-1076", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonWriter.cs"];
m47_659 [label="long total = j + i", span="1071-1071", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonWriter.cs"];
m47_658 [label="j < 1000", span="1069-1069", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonWriter.cs"];
m47_661 [label="j++", span="1069-1069", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonWriter.cs"];
m47_662 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", span="1061-1061", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonWriter.cs"];
m47_2111 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", span="3243-3243", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonWriter.cs"];
m47_2117 [label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="3252-3252", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonWriter.cs"];
m47_2118 [label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="3253-3253", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonWriter.cs"];
m47_2120 [label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="3255-3255", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonWriter.cs"];
m47_2121 [label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="3256-3256", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonWriter.cs"];
m47_2127 [label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="3265-3265", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonWriter.cs"];
m47_2128 [label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="3266-3266", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonWriter.cs"];
m47_2130 [label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="3268-3268", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonWriter.cs"];
m47_2131 [label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="3269-3269", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonWriter.cs"];
m47_2137 [label="Assert.AreEqual(@''1970-01-01T00:00:00Z'', reader.Value)", span="3278-3278", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonWriter.cs"];
m47_2138 [label="Assert.AreEqual(typeof(string), reader.ValueType)", span="3279-3279", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonWriter.cs"];
m47_2140 [label="Assert.AreEqual(@''/Date(0)/'', reader.Value)", span="3281-3281", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonWriter.cs"];
m47_2141 [label="Assert.AreEqual(typeof(string), reader.ValueType)", span="3282-3282", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonWriter.cs"];
m47_2147 [label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="3291-3291", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonWriter.cs"];
m47_2148 [label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="3292-3292", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonWriter.cs"];
m47_2150 [label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="3294-3294", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonWriter.cs"];
m47_2151 [label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="3295-3295", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonWriter.cs"];
m47_2157 [label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="3304-3304", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonWriter.cs"];
m47_2158 [label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="3305-3305", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonWriter.cs"];
m47_2160 [label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="3307-3307", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonWriter.cs"];
m47_2161 [label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="3308-3308", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonWriter.cs"];
m47_2115 [label="Assert.IsTrue(reader.Read())", span="3250-3250", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonWriter.cs"];
m47_2116 [label="Assert.IsTrue(reader.Read())", span="3251-3251", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonWriter.cs"];
m47_2119 [label="Assert.IsTrue(reader.Read())", span="3254-3254", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonWriter.cs"];
m47_2122 [label="Assert.IsTrue(reader.Read())", span="3257-3257", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonWriter.cs"];
m47_2125 [label="Assert.IsTrue(reader.Read())", span="3263-3263", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonWriter.cs"];
m47_2126 [label="Assert.IsTrue(reader.Read())", span="3264-3264", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonWriter.cs"];
m47_2129 [label="Assert.IsTrue(reader.Read())", span="3267-3267", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonWriter.cs"];
m47_2132 [label="Assert.IsTrue(reader.Read())", span="3270-3270", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonWriter.cs"];
m47_2135 [label="Assert.IsTrue(reader.Read())", span="3276-3276", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonWriter.cs"];
m47_2136 [label="Assert.IsTrue(reader.Read())", span="3277-3277", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonWriter.cs"];
m47_2139 [label="Assert.IsTrue(reader.Read())", span="3280-3280", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonWriter.cs"];
m47_2142 [label="Assert.IsTrue(reader.Read())", span="3283-3283", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonWriter.cs"];
m47_2145 [label="Assert.IsTrue(reader.Read())", span="3289-3289", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonWriter.cs"];
m47_2152 [label="Assert.IsTrue(reader.Read())", span="3296-3296", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonWriter.cs"];
m47_2155 [label="Assert.IsTrue(reader.Read())", span="3302-3302", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonWriter.cs"];
m47_2162 [label="Assert.IsTrue(reader.Read())", span="3309-3309", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonWriter.cs"];
m47_2113 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3247-3247", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonWriter.cs"];
m47_2123 [label="reader = new JsonTextReader(new StringReader(json))", span="3260-3260", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonWriter.cs"];
m47_2133 [label="reader = new JsonTextReader(new StringReader(json))", span="3273-3273", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonWriter.cs"];
m47_2143 [label="reader = new JsonTextReader(new StringReader(json))", span="3286-3286", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonWriter.cs"];
m47_2153 [label="reader = new JsonTextReader(new StringReader(json))", span="3299-3299", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonWriter.cs"];
m47_2146 [label="reader.ReadAsDateTimeOffset()", span="3290-3290", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonWriter.cs"];
m47_2149 [label="reader.ReadAsDateTimeOffset()", span="3293-3293", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonWriter.cs"];
m47_2156 [label="reader.ReadAsDateTime()", span="3303-3303", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonWriter.cs"];
m47_2159 [label="reader.ReadAsDateTime()", span="3306-3306", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonWriter.cs"];
m47_2114 [label="reader.DateParseHandling = Json.DateParseHandling.DateTime", span="3248-3248", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonWriter.cs"];
m47_2124 [label="reader.DateParseHandling = Json.DateParseHandling.DateTimeOffset", span="3261-3261", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonWriter.cs"];
m47_2134 [label="reader.DateParseHandling = Json.DateParseHandling.None", span="3274-3274", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonWriter.cs"];
m47_2144 [label="reader.DateParseHandling = Json.DateParseHandling.DateTime", span="3287-3287", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonWriter.cs"];
m47_2154 [label="reader.DateParseHandling = Json.DateParseHandling.DateTimeOffset", span="3300-3300", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonWriter.cs"];
m47_2112 [label="string json = @''[''''1970-01-01T00:00:00Z'''',''''\/Date(0)\/'''']''", span="3245-3245", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonWriter.cs"];
m47_2163 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", span="3243-3243", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonWriter.cs"];
m47_1616 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", span="2480-2480", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonWriter.cs"];
m47_1624 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2504-2504", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonWriter.cs"];
m47_1621 [label="Assert.IsTrue(reader.Read())", span="2500-2500", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonWriter.cs"];
m47_1623 [label="Assert.IsTrue(reader.Read())", span="2503-2503", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonWriter.cs"];
m47_1625 [label="Assert.IsFalse(reader.Read())", span="2506-2506", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonWriter.cs"];
m47_1618 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2493-2493", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonWriter.cs"];
m47_1620 [label="i < 26", span="2498-2498", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonWriter.cs"];
m47_1622 [label="i++", span="2498-2498", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonWriter.cs"];
m47_1617 [label="string json = @''/*comment*/ { /*comment*/\r\n        ''''Name'''': /*comment*/ ''''Apple'''' /*comment*/, /*comment*/\r\n        ''''ExpiryDate'''': ''''\/Date(1230422400000)\/'''',\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': /*comment*/ [ /*comment*/\r\n          ''''Small'''', /*comment*/\r\n          ''''Medium'''' /*comment*/,\r\n          /*comment*/ ''''Large''''\r\n        /*comment*/ ] /*comment*/\r\n      } /*comment*/''", span="2482-2491", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonWriter.cs"];
m47_1619 [label="int i = 0", span="2498-2498", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonWriter.cs"];
m47_1626 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", span="2480-2480", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonWriter.cs"];
m47_607 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteStartArray()", span="196-196", cluster="Newtonsoft.Json.JsonTextWriter.WriteStartArray()", file="JsonWriter.cs"];
m47_1295 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", span="2004-2004", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="JsonWriter.cs"];
m47_1297 [label="reader.Read()", span="2008-2008", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="JsonWriter.cs"];
m47_1296 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[}''))", span="2006-2006", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="JsonWriter.cs"];
m47_1298 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected character encountered while parsing value: }. Path '', line 1, position 1.'')", span="2010-2010", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="JsonWriter.cs"];
m47_1299 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", span="2004-2004", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="JsonWriter.cs"];
m47_1092 [label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="454-454", cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="JsonWriter.cs"];
m47_1469 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", span="2257-2257", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonWriter.cs"];
m47_1473 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2264-2264", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonWriter.cs"];
m47_1475 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2267-2267", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonWriter.cs"];
m47_1477 [label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2270-2270", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonWriter.cs"];
m47_1478 [label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2271-2271", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonWriter.cs"];
m47_1479 [label="Assert.AreEqual(new DateTimeOffset(new DateTime(2011, 8, 1, 21, 25, 0, DateTimeKind.Utc), TimeSpan.Zero), reader.Value)", span="2272-2272", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonWriter.cs"];
m47_1481 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2275-2275", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonWriter.cs"];
m47_1472 [label="Assert.IsTrue(reader.Read())", span="2263-2263", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonWriter.cs"];
m47_1474 [label="Assert.IsTrue(reader.Read())", span="2266-2266", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonWriter.cs"];
m47_1480 [label="Assert.IsTrue(reader.Read())", span="2274-2274", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonWriter.cs"];
m47_1471 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2261-2261", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonWriter.cs"];
m47_1476 [label="reader.ReadAsDateTimeOffset()", span="2269-2269", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonWriter.cs"];
m47_1470 [label="string json = @''{''''Offset'''':''''2011-08-01T21:25Z''''}''", span="2259-2259", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonWriter.cs"];
m47_1482 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", span="2257-2257", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonWriter.cs"];
m47_335 [label="Entry System.Text.Encoding.GetBytes(string)", span="0-0", cluster="System.Text.Encoding.GetBytes(string)", file="JsonWriter.cs"];
m47_1088 [label="Entry System.IO.StringWriter.StringWriter(System.Text.StringBuilder)", span="0-0", cluster="System.IO.StringWriter.StringWriter(System.Text.StringBuilder)", file="JsonWriter.cs"];
m47_135 [label="Entry Unk.Parse", span="", cluster="Unk.Parse", file="JsonWriter.cs"];
m47_154 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsInt32()", span="394-394", cluster="Newtonsoft.Json.JsonTextReader.ReadAsInt32()", file="JsonWriter.cs"];
m47_940 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", span="1537-1537", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonWriter.cs"];
m47_943 [label="Assert.AreEqual(1, reader.ReadAsInt32())", span="1542-1542", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonWriter.cs"];
m47_945 [label="Assert.AreEqual(-1, reader.ReadAsInt32())", span="1545-1545", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonWriter.cs"];
m47_947 [label="Assert.AreEqual(0, reader.ReadAsInt32())", span="1548-1548", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonWriter.cs"];
m47_949 [label="Assert.AreEqual(0, reader.ReadAsInt32())", span="1551-1551", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonWriter.cs"];
m47_951 [label="Assert.AreEqual(int.MaxValue, reader.ReadAsInt32())", span="1554-1554", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonWriter.cs"];
m47_953 [label="Assert.AreEqual(int.MinValue, reader.ReadAsInt32())", span="1557-1557", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonWriter.cs"];
m47_963 [label="Assert.AreEqual(null, reader.ReadAsInt32())", span="1572-1572", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonWriter.cs"];
m47_942 [label="reader = new JsonTextReader(new StringReader(''1''))", span="1541-1541", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonWriter.cs"];
m47_944 [label="reader = new JsonTextReader(new StringReader(''-1''))", span="1544-1544", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonWriter.cs"];
m47_946 [label="reader = new JsonTextReader(new StringReader(''0''))", span="1547-1547", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonWriter.cs"];
m47_948 [label="reader = new JsonTextReader(new StringReader(''-0''))", span="1550-1550", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonWriter.cs"];
m47_950 [label="reader = new JsonTextReader(new StringReader(int.MaxValue.ToString()))", span="1553-1553", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonWriter.cs"];
m47_952 [label="reader = new JsonTextReader(new StringReader(int.MinValue.ToString()))", span="1556-1556", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonWriter.cs"];
m47_954 [label="reader = new JsonTextReader(new StringReader(long.MaxValue.ToString()))", span="1559-1559", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonWriter.cs"];
m47_956 [label="reader = new JsonTextReader(new StringReader(''9999999999999999999999999999999999999999999999999999999999999999999999999999asdasdasd''))", span="1562-1562", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonWriter.cs"];
m47_958 [label="reader = new JsonTextReader(new StringReader(''1E-06''))", span="1565-1565", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonWriter.cs"];
m47_960 [label="reader = new JsonTextReader(new StringReader(''1.1''))", span="1568-1568", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonWriter.cs"];
m47_962 [label="reader = new JsonTextReader(new StringReader(''''))", span="1571-1571", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonWriter.cs"];
m47_964 [label="reader = new JsonTextReader(new StringReader(''-''))", span="1574-1574", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonWriter.cs"];
m47_941 [label="JsonTextReader reader = null", span="1539-1539", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonWriter.cs"];
m47_955 [label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsInt32(), ''JSON integer 9223372036854775807 is too large or small for an Int32. Path '', line 1, position 19.'')", span="1560-1560", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonWriter.cs"];
m47_957 [label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsInt32(), ''Unexpected character encountered while parsing number: s. Path '', line 1, position 77.'')", span="1563-1563", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonWriter.cs"];
m47_959 [label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsInt32(), ''Input string '1E-06' is not a valid integer. Path '', line 1, position 5.'')", span="1566-1566", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonWriter.cs"];
m47_961 [label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsInt32(), ''Input string '1.1' is not a valid integer. Path '', line 1, position 3.'')", span="1569-1569", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonWriter.cs"];
m47_965 [label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsInt32(), ''Input string '-' is not a valid integer. Path '', line 1, position 1.'')", span="1575-1575", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonWriter.cs"];
m47_966 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", span="1537-1537", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonWriter.cs"];
m47_751 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", span="1213-1213", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JsonWriter.cs"];
m47_762 [label="Assert.AreEqual(0, bufferPool.UsedBuffers.Count)", span="1244-1244", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JsonWriter.cs"];
m47_763 [label="Assert.AreEqual(6, bufferPool.FreeBuffers.Count)", span="1245-1245", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JsonWriter.cs"];
m47_758 [label="reader.Read()", span="1233-1233", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JsonWriter.cs"];
m47_756 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1229-1229", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JsonWriter.cs"];
m47_753 [label="FakeBufferPool bufferPool = new FakeBufferPool()", span="1225-1225", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JsonWriter.cs"];
m47_755 [label="i < 1000", span="1227-1227", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JsonWriter.cs"];
m47_757 [label="reader.BufferPool = bufferPool", span="1231-1231", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JsonWriter.cs"];
m47_759 [label="(i + 1) % 100 == 0", span="1238-1238", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JsonWriter.cs"];
m47_752 [label="string json = @''{\r\n              ''''CPU'''': ''''Intel'''',\r\n              ''''Description'''': ''''Amazing!\nBuy now!'''',\r\n              ''''Drives'''': [\r\n                ''''DVD read/writer'''',\r\n                ''''500 gigabyte hard drive'''',\r\n                ''''Amazing Drive'' + new string('!', 9000) + @''''''\r\n              ]\r\n            }''", span="1215-1223", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JsonWriter.cs"];
m47_754 [label="int i = 0", span="1227-1227", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JsonWriter.cs"];
m47_760 [label="Console.WriteLine(''Allocated buffers: '' + bufferPool.FreeBuffers.Count)", span="1240-1240", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JsonWriter.cs"];
m47_761 [label="i++", span="1227-1227", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JsonWriter.cs"];
m47_764 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", span="1213-1213", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JsonWriter.cs"];
m47_1089 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="420-420", cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="JsonWriter.cs"];
m47_2166 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", span="412-412", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", file="JsonWriter.cs"];
m47_1303 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", span="2014-2014", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="JsonWriter.cs"];
m47_1306 [label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="2019-2019", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="JsonWriter.cs"];
m47_1304 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''''))", span="2016-2016", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="JsonWriter.cs"];
m47_1305 [label="Assert.IsNull(reader.ReadAsDecimal())", span="2018-2018", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="JsonWriter.cs"];
m47_1307 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", span="2014-2014", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="JsonWriter.cs"];
m47_1413 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", span="2175-2175", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonWriter.cs"];
m47_1417 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2182-2182", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonWriter.cs"];
m47_1419 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2185-2185", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonWriter.cs"];
m47_1421 [label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2188-2188", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonWriter.cs"];
m47_1422 [label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2189-2189", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonWriter.cs"];
m47_1423 [label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(-6)), reader.Value)", span="2190-2190", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonWriter.cs"];
m47_1425 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2193-2193", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonWriter.cs"];
m47_1416 [label="Assert.IsTrue(reader.Read())", span="2181-2181", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonWriter.cs"];
m47_1418 [label="Assert.IsTrue(reader.Read())", span="2184-2184", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonWriter.cs"];
m47_1424 [label="Assert.IsTrue(reader.Read())", span="2192-2192", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonWriter.cs"];
m47_1415 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2179-2179", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonWriter.cs"];
m47_1420 [label="reader.ReadAsDateTimeOffset()", span="2187-2187", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonWriter.cs"];
m47_1414 [label="string json = @''{''''Offset'''':''''\/Date(946706400000-0600)\/''''}''", span="2177-2177", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonWriter.cs"];
m47_1426 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", span="2175-2175", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonWriter.cs"];
m47_583 [label="Entry string.String(char, int)", span="0-0", cluster="string.String(char, int)", file="JsonWriter.cs"];
m47_1015 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", span="1613-1613", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonWriter.cs"];
m47_1019 [label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1619-1619", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonWriter.cs"];
m47_1020 [label="Assert.AreEqual(1.1d, reader.Value)", span="1620-1620", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonWriter.cs"];
m47_1023 [label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1624-1624", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonWriter.cs"];
m47_1024 [label="Assert.AreEqual(-1.1d, reader.Value)", span="1625-1625", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonWriter.cs"];
m47_1027 [label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1629-1629", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonWriter.cs"];
m47_1028 [label="Assert.AreEqual(0.0d, reader.Value)", span="1630-1630", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonWriter.cs"];
m47_1031 [label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1634-1634", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonWriter.cs"];
m47_1032 [label="Assert.AreEqual(-0.0d, reader.Value)", span="1635-1635", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonWriter.cs"];
m47_1037 [label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1642-1642", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonWriter.cs"];
m47_1038 [label="Assert.AreEqual(0.000001d, reader.Value)", span="1643-1643", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonWriter.cs"];
m47_1018 [label="Assert.IsTrue(reader.Read())", span="1618-1618", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonWriter.cs"];
m47_1022 [label="Assert.IsTrue(reader.Read())", span="1623-1623", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonWriter.cs"];
m47_1026 [label="Assert.IsTrue(reader.Read())", span="1628-1628", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonWriter.cs"];
m47_1030 [label="Assert.IsTrue(reader.Read())", span="1633-1633", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonWriter.cs"];
m47_1036 [label="Assert.IsTrue(reader.Read())", span="1641-1641", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonWriter.cs"];
m47_1040 [label="Assert.IsFalse(reader.Read())", span="1646-1646", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonWriter.cs"];
m47_1017 [label="reader = new JsonTextReader(new StringReader(''1.1''))", span="1617-1617", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonWriter.cs"];
m47_1021 [label="reader = new JsonTextReader(new StringReader(''-1.1''))", span="1622-1622", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonWriter.cs"];
m47_1025 [label="reader = new JsonTextReader(new StringReader(''0.0''))", span="1627-1627", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonWriter.cs"];
m47_1029 [label="reader = new JsonTextReader(new StringReader(''-0.0''))", span="1632-1632", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonWriter.cs"];
m47_1033 [label="reader = new JsonTextReader(new StringReader(''9999999999999999999999999999999999999999999999999999999999999999999999999999asdasdasd''))", span="1637-1637", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonWriter.cs"];
m47_1035 [label="reader = new JsonTextReader(new StringReader(''1E-06''))", span="1640-1640", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonWriter.cs"];
m47_1039 [label="reader = new JsonTextReader(new StringReader(''''))", span="1645-1645", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonWriter.cs"];
m47_1041 [label="reader = new JsonTextReader(new StringReader(''-''))", span="1648-1648", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonWriter.cs"];
m47_1016 [label="JsonTextReader reader = null", span="1615-1615", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonWriter.cs"];
m47_1034 [label="ExceptionAssert.Throws<JsonReaderException>(() => reader.Read(), ''Unexpected character encountered while parsing number: s. Path '', line 1, position 77.'')", span="1638-1638", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonWriter.cs"];
m47_1042 [label="ExceptionAssert.Throws<JsonReaderException>(() => reader.Read(), ''Input string '-' is not a valid number. Path '', line 1, position 1.'')", span="1649-1649", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonWriter.cs"];
m47_1043 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", span="1613-1613", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonWriter.cs"];
m47_226 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", span="386-386", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonWriter.cs"];
m47_230 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="393-393", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonWriter.cs"];
m47_232 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="396-396", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonWriter.cs"];
m47_234 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="399-399", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonWriter.cs"];
m47_236 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="402-402", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonWriter.cs"];
m47_229 [label="Assert.IsTrue(reader.Read())", span="392-392", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonWriter.cs"];
m47_231 [label="Assert.IsTrue(reader.Read())", span="395-395", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonWriter.cs"];
m47_233 [label="Assert.IsTrue(reader.Read())", span="398-398", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonWriter.cs"];
m47_235 [label="Assert.IsTrue(reader.Read())", span="401-401", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonWriter.cs"];
m47_228 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="390-390", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonWriter.cs"];
m47_237 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected content while parsing JSON. Path 'u', line 1, position 27.'')", span="404-404", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonWriter.cs"];
m47_227 [label="string json = @''{ ''''ItemName'''': ''''value'''', ''''u'''':netanelsalinger,''''r'''':9 }''", span="388-388", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonWriter.cs"];
m47_238 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", span="386-386", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonWriter.cs"];
m47_892 [label="Entry Unk.AreEquivalent", span="", cluster="Unk.AreEquivalent", file="JsonWriter.cs"];
m47_57 [label="Entry System.IO.StringReader.StringReader(string)", span="0-0", cluster="System.IO.StringReader.StringReader(string)", file="JsonWriter.cs"];
m47_2070 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", span="3184-3184", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonWriter.cs"];
m47_2075 [label="Assert.AreEqual(false, reader.Value)", span="3193-3193", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonWriter.cs"];
m47_2077 [label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="3196-3196", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonWriter.cs"];
m47_2078 [label="Assert.AreEqual(true, reader.Value)", span="3197-3197", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonWriter.cs"];
m47_2080 [label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="3200-3200", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonWriter.cs"];
m47_2081 [label="Assert.AreEqual(true, reader.Value)", span="3201-3201", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonWriter.cs"];
m47_2083 [label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="3204-3204", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonWriter.cs"];
m47_2084 [label="Assert.AreEqual(false, reader.Value)", span="3205-3205", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonWriter.cs"];
m47_2086 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="3208-3208", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonWriter.cs"];
m47_2087 [label="Assert.AreEqual(''test!'', reader.Value)", span="3209-3209", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonWriter.cs"];
m47_2089 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3212-3212", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonWriter.cs"];
m47_2090 [label="Assert.AreEqual(1.11d, reader.Value)", span="3213-3213", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonWriter.cs"];
m47_2092 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3216-3216", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonWriter.cs"];
m47_2093 [label="Assert.AreEqual(0d, reader.Value)", span="3217-3217", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonWriter.cs"];
m47_2095 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3220-3220", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonWriter.cs"];
m47_2096 [label="Assert.AreEqual(0d, reader.Value)", span="3221-3221", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonWriter.cs"];
m47_2098 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3224-3224", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonWriter.cs"];
m47_2099 [label="Assert.AreEqual(0.0000025d, reader.Value)", span="3225-3225", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonWriter.cs"];
m47_2101 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3228-3228", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonWriter.cs"];
m47_2102 [label="Assert.AreEqual(3000000000d, reader.Value)", span="3229-3229", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonWriter.cs"];
m47_2104 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3232-3232", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonWriter.cs"];
m47_2105 [label="Assert.AreEqual(602214180000000000000000d, reader.Value)", span="3233-3233", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonWriter.cs"];
m47_2107 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="3236-3236", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonWriter.cs"];
m47_2108 [label="Assert.AreEqual(reader.Value, ''Purple\r \n monkey's:\tdishwasher'')", span="3237-3237", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonWriter.cs"];
m47_2073 [label="Assert.IsTrue(reader.Read())", span="3190-3190", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonWriter.cs"];
m47_2074 [label="Assert.IsTrue(reader.Read())", span="3192-3192", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonWriter.cs"];
m47_2076 [label="Assert.IsTrue(reader.Read())", span="3195-3195", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonWriter.cs"];
m47_2079 [label="Assert.IsTrue(reader.Read())", span="3199-3199", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonWriter.cs"];
m47_2082 [label="Assert.IsTrue(reader.Read())", span="3203-3203", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonWriter.cs"];
m47_2085 [label="Assert.IsTrue(reader.Read())", span="3207-3207", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonWriter.cs"];
m47_2088 [label="Assert.IsTrue(reader.Read())", span="3211-3211", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonWriter.cs"];
m47_2091 [label="Assert.IsTrue(reader.Read())", span="3215-3215", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonWriter.cs"];
m47_2094 [label="Assert.IsTrue(reader.Read())", span="3219-3219", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonWriter.cs"];
m47_2097 [label="Assert.IsTrue(reader.Read())", span="3223-3223", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonWriter.cs"];
m47_2100 [label="Assert.IsTrue(reader.Read())", span="3227-3227", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonWriter.cs"];
m47_2103 [label="Assert.IsTrue(reader.Read())", span="3231-3231", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonWriter.cs"];
m47_2106 [label="Assert.IsTrue(reader.Read())", span="3235-3235", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonWriter.cs"];
m47_2109 [label="Assert.IsTrue(reader.Read())", span="3239-3239", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonWriter.cs"];
m47_2072 [label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="3188-3188", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonWriter.cs"];
m47_2071 [label="string json = ''[false, true, true, false, 'test!', 1.11, 0e-10, 0E-10, 0.25e-5, 0.3e10, 6.0221418e23, 'Purple\\r \\n monkey\\'s:\\tdishwasher']''", span="3186-3186", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonWriter.cs"];
m47_2110 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", span="3184-3184", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonWriter.cs"];
m47_1615 [label="Entry System.DateTime.DateTime(long)", span="0-0", cluster="System.DateTime.DateTime(long)", file="JsonWriter.cs"];
m47_642 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", span="1025-1025", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonWriter.cs"];
m47_650 [label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="1057-1057", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonWriter.cs"];
m47_647 [label="reader.Read()", span="1053-1053", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonWriter.cs"];
m47_649 [label="reader.Read()", span="1056-1056", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonWriter.cs"];
m47_644 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1046-1046", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonWriter.cs"];
m47_646 [label="i < 15", span="1051-1051", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonWriter.cs"];
m47_648 [label="i++", span="1051-1051", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonWriter.cs"];
m47_643 [label="string json = @''[\r\n  {\r\n    ''''$id'''': ''''1'''',\r\n    ''''Name'''': ''''e1'''',\r\n    ''''Manager'''': null\r\n  },\r\n  {\r\n    ''''$id'''': ''''2'''',\r\n    ''''Name'''': ''''e2'''',\r\n    ''''Manager'''': null\r\n  },\r\n  {\r\n    ''''$ref'''': ''''1''''\r\n  },\r\n  {\r\n    ''''$ref'''': ''''2''''\r\n  }\r\n]''", span="1027-1044", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonWriter.cs"];
m47_645 [label="int i = 0", span="1051-1051", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonWriter.cs"];
m47_651 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", span="1025-1025", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonWriter.cs"];
m47_1412 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="JsonWriter.cs"];
m47_311 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()", file="JsonWriter.cs"];
m47_1453 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", span="2235-2235", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonWriter.cs"];
m47_1457 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2242-2242", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonWriter.cs"];
m47_1459 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2245-2245", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonWriter.cs"];
m47_1461 [label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2248-2248", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonWriter.cs"];
m47_1462 [label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2249-2249", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonWriter.cs"];
m47_1463 [label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(-6).Add(TimeSpan.FromMinutes(-31))), reader.Value)", span="2250-2250", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonWriter.cs"];
m47_1465 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2253-2253", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonWriter.cs"];
m47_1456 [label="Assert.IsTrue(reader.Read())", span="2241-2241", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonWriter.cs"];
m47_1458 [label="Assert.IsTrue(reader.Read())", span="2244-2244", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonWriter.cs"];
m47_1464 [label="Assert.IsTrue(reader.Read())", span="2252-2252", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonWriter.cs"];
m47_1455 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2239-2239", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonWriter.cs"];
m47_1460 [label="reader.ReadAsDateTimeOffset()", span="2247-2247", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonWriter.cs"];
m47_1454 [label="string json = @''{''''Offset'''':''''\/Date(946708260000-0631)\/''''}''", span="2237-2237", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonWriter.cs"];
m47_1466 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", span="2235-2235", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonWriter.cs"];
m47_910 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", span="1461-1461", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonWriter.cs"];
m47_914 [label="Assert.AreEqual(0, jsonReader.Depth)", span="1469-1469", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonWriter.cs"];
m47_916 [label="Assert.AreEqual(JsonToken.StartObject, jsonReader.TokenType)", span="1472-1472", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonWriter.cs"];
m47_917 [label="Assert.AreEqual(0, jsonReader.Depth)", span="1473-1473", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonWriter.cs"];
m47_919 [label="Assert.AreEqual(JsonToken.PropertyName, jsonReader.TokenType)", span="1476-1476", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonWriter.cs"];
m47_920 [label="Assert.AreEqual(1, jsonReader.Depth)", span="1477-1477", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonWriter.cs"];
m47_922 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.String)", span="1480-1480", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonWriter.cs"];
m47_923 [label="Assert.AreEqual(''Purple\r \n monkey's:\tdishwasher'', jsonReader.Value)", span="1481-1481", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonWriter.cs"];
m47_924 [label="Assert.AreEqual('\'', jsonReader.QuoteChar)", span="1482-1482", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonWriter.cs"];
m47_925 [label="Assert.AreEqual(1, jsonReader.Depth)", span="1483-1483", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonWriter.cs"];
m47_927 [label="Assert.AreEqual(JsonToken.EndObject, jsonReader.TokenType)", span="1486-1486", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonWriter.cs"];
m47_928 [label="Assert.AreEqual(0, jsonReader.Depth)", span="1487-1487", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonWriter.cs"];
m47_913 [label="JsonReader jsonReader = new JsonTextReader(sr)", span="1467-1467", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonWriter.cs"];
m47_912 [label="StringReader sr = new StringReader(input)", span="1465-1465", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonWriter.cs"];
m47_915 [label="jsonReader.Read()", span="1471-1471", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonWriter.cs"];
m47_918 [label="jsonReader.Read()", span="1475-1475", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonWriter.cs"];
m47_921 [label="jsonReader.Read()", span="1479-1479", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonWriter.cs"];
m47_926 [label="jsonReader.Read()", span="1485-1485", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonWriter.cs"];
m47_911 [label="string input = ''{value:'Purple\\r \\n monkey\\'s:\\tdishwasher'}''", span="1463-1463", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonWriter.cs"];
m47_929 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", span="1461-1461", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonWriter.cs"];
m47_1777 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", span="2732-2732", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonWriter.cs"];
m47_1781 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2738-2738", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonWriter.cs"];
m47_1783 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2741-2741", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonWriter.cs"];
m47_1785 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2744-2744", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonWriter.cs"];
m47_1787 [label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="2747-2747", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonWriter.cs"];
m47_1789 [label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2750-2750", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonWriter.cs"];
m47_1791 [label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2753-2753", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonWriter.cs"];
m47_1793 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2756-2756", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonWriter.cs"];
m47_1795 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2759-2759", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonWriter.cs"];
m47_1797 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2762-2762", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonWriter.cs"];
m47_1780 [label="Assert.IsTrue(reader.Read())", span="2737-2737", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonWriter.cs"];
m47_1782 [label="Assert.IsTrue(reader.Read())", span="2740-2740", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonWriter.cs"];
m47_1784 [label="Assert.IsTrue(reader.Read())", span="2743-2743", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonWriter.cs"];
m47_1786 [label="Assert.IsTrue(reader.Read())", span="2746-2746", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonWriter.cs"];
m47_1788 [label="Assert.IsTrue(reader.Read())", span="2749-2749", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonWriter.cs"];
m47_1790 [label="Assert.IsTrue(reader.Read())", span="2752-2752", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonWriter.cs"];
m47_1792 [label="Assert.IsTrue(reader.Read())", span="2755-2755", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonWriter.cs"];
m47_1794 [label="Assert.IsTrue(reader.Read())", span="2758-2758", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonWriter.cs"];
m47_1796 [label="Assert.IsTrue(reader.Read())", span="2761-2761", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonWriter.cs"];
m47_1798 [label="Assert.IsFalse(reader.Read())", span="2764-2764", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonWriter.cs"];
m47_1779 [label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2735-2735", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonWriter.cs"];
m47_1778 [label="string json = ''\x00a0{\x00a0'h\x00a0i\x00a0'\x00a0:\x00a0[\x00a0true\x00a0,\x00a0new\x00a0Date\x00a0(\x00a0)\x00a0]\x00a0/*\x00a0comment\x00a0*/\x00a0}\x00a0''", span="2734-2734", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonWriter.cs"];
m47_1799 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", span="2732-2732", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonWriter.cs"];
m47_1548 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", span="2373-2373", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="JsonWriter.cs"];
m47_1549 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''nulz''))", span="2375-2375", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="JsonWriter.cs"];
m47_1550 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Error parsing null value. Path '', line 0, position 0.'')", span="2377-2377", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="JsonWriter.cs"];
m47_1551 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", span="2373-2373", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="JsonWriter.cs"];
m47_810 [label="Entry Unk.IsNull", span="", cluster="Unk.IsNull", file="JsonWriter.cs"];
m47_1135 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", span="1772-1772", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonWriter.cs"];
m47_1139 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="1782-1782", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonWriter.cs"];
m47_1141 [label="Assert.AreEqual(''<'', reader.Value)", span="1785-1785", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonWriter.cs"];
m47_1143 [label="Assert.AreEqual(24352, Convert.ToInt32(Convert.ToChar((string)reader.Value)))", span="1788-1788", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonWriter.cs"];
m47_1145 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="1791-1791", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonWriter.cs"];
m47_1138 [label="reader.Read()", span="1781-1781", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonWriter.cs"];
m47_1140 [label="reader.Read()", span="1784-1784", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonWriter.cs"];
m47_1142 [label="reader.Read()", span="1787-1787", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonWriter.cs"];
m47_1144 [label="reader.Read()", span="1790-1790", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonWriter.cs"];
m47_1137 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1776-1776", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonWriter.cs"];
m47_1136 [label="string json = @''[''''\u003c'''',''''\u5f20'''']''", span="1774-1774", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonWriter.cs"];
m47_1146 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", span="1772-1772", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonWriter.cs"];
m47_59 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="JsonWriter.cs"];
m47_113 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", span="224-224", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonWriter.cs"];
m47_117 [label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", span="234-234", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonWriter.cs"];
m47_119 [label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="237-237", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonWriter.cs"];
m47_121 [label="Assert.AreEqual(JsonToken.Integer, jsonTextReader.TokenType)", span="240-240", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonWriter.cs"];
m47_123 [label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="243-243", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonWriter.cs"];
m47_125 [label="Assert.AreEqual(JsonToken.Integer, jsonTextReader.TokenType)", span="246-246", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonWriter.cs"];
m47_126 [label="Assert.AreEqual(typeof(BigInteger), jsonTextReader.ValueType)", span="247-247", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonWriter.cs"];
m47_127 [label="Assert.AreEqual(BigInteger.Parse(''333333333333333333333333333333333333333''), jsonTextReader.Value)", span="248-248", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonWriter.cs"];
m47_129 [label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", span="251-251", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonWriter.cs"];
m47_133 [label="Assert.AreEqual(BigInteger.Parse(''333333333333333333333333333333333333333''), i)", span="257-257", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonWriter.cs"];
m47_116 [label="Assert.IsTrue(jsonTextReader.Read())", span="233-233", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonWriter.cs"];
m47_118 [label="Assert.IsTrue(jsonTextReader.Read())", span="236-236", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonWriter.cs"];
m47_120 [label="Assert.IsTrue(jsonTextReader.Read())", span="239-239", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonWriter.cs"];
m47_122 [label="Assert.IsTrue(jsonTextReader.Read())", span="242-242", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonWriter.cs"];
m47_124 [label="Assert.IsTrue(jsonTextReader.Read())", span="245-245", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonWriter.cs"];
m47_128 [label="Assert.IsTrue(jsonTextReader.Read())", span="250-250", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonWriter.cs"];
m47_130 [label="Assert.IsFalse(jsonTextReader.Read())", span="253-253", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonWriter.cs"];
m47_115 [label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="231-231", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonWriter.cs"];
m47_132 [label="var i = (BigInteger)((JValue)o[''ChildId'']).Value", span="256-256", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonWriter.cs"];
m47_131 [label="JObject o = JObject.Parse(json)", span="255-255", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonWriter.cs"];
m47_114 [label="string json = @''{\r\n    ParentId: 1,\r\n    ChildId: 333333333333333333333333333333333333333,\r\n}''", span="226-229", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonWriter.cs"];
m47_134 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", span="224-224", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonWriter.cs"];
m47_2225 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedPathInExceptionMessage()", span="3380-3380", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedPathInExceptionMessage()", file="JsonWriter.cs"];
m47_2226 [label="string json = @''{\r\n  ''''frameworks'''': {\r\n    ''''dnxcore50'''': {\r\n      ''''dependencies'''': {\r\n        ''''System.Xml.ReaderWriter'''': {\r\n          ''''source'''': !!! !!!\r\n        }\r\n      }\r\n    }\r\n  }\r\n}''", span="3382-3392", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedPathInExceptionMessage()", file="JsonWriter.cs"];
m47_2227 [label="ExceptionAssert.Throws<JsonReaderException>(\r\n                () =>\r\n                {\r\n                    JsonTextReader reader = new JsonTextReader(new StringReader(json));\r\n                    while (reader.Read())\r\n                    {\r\n                    }\r\n                },\r\n                ''Unexpected character encountered while parsing value: !. Path 'frameworks.dnxcore50.dependencies['System.Xml.ReaderWriter'].source', line 6, position 20.'')", span="3394-3402", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedPathInExceptionMessage()", file="JsonWriter.cs"];
m47_2228 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedPathInExceptionMessage()", span="3380-3380", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedPathInExceptionMessage()", file="JsonWriter.cs"];
m47_1627 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", span="2510-2510", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonWriter.cs"];
m47_1631 [label="Assert.AreEqual(''Date'', reader.Value)", span="2519-2519", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonWriter.cs"];
m47_1632 [label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2520-2520", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonWriter.cs"];
m47_1634 [label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2523-2523", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonWriter.cs"];
m47_1630 [label="Assert.IsTrue(reader.Read())", span="2518-2518", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonWriter.cs"];
m47_1633 [label="Assert.IsTrue(reader.Read())", span="2522-2522", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonWriter.cs"];
m47_1629 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2513-2513", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonWriter.cs"];
m47_1628 [label="string json = ''new Date\0()''", span="2512-2512", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonWriter.cs"];
m47_1635 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", span="2510-2510", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonWriter.cs"];
m47_1211 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", span="1883-1883", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonWriter.cs"];
m47_1215 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1892-1892", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonWriter.cs"];
m47_1217 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1895-1895", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonWriter.cs"];
m47_1219 [label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="1898-1898", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonWriter.cs"];
m47_1214 [label="reader.Read()", span="1891-1891", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonWriter.cs"];
m47_1216 [label="reader.Read()", span="1894-1894", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonWriter.cs"];
m47_1218 [label="reader.Read()", span="1897-1897", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonWriter.cs"];
m47_1213 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1889-1889", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonWriter.cs"];
m47_1220 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, @''Invalid character after parsing property name. Expected ':' but got: ''''. Path 'A', line 3, position 8.'')", span="1900-1900", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonWriter.cs"];
m47_1212 [label="string json = @''{\r\n    ''''A'''' : true,\r\n    ''''B'''' ''''''", span="1885-1887", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonWriter.cs"];
m47_1221 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", span="1883-1883", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonWriter.cs"];
m47_1663 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", span="2569-2569", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonWriter.cs"];
m47_1667 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2575-2575", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonWriter.cs"];
m47_1669 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2578-2578", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonWriter.cs"];
m47_1671 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2581-2581", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonWriter.cs"];
m47_1673 [label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2584-2584", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonWriter.cs"];
m47_1675 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2587-2587", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonWriter.cs"];
m47_1677 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2590-2590", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonWriter.cs"];
m47_1679 [label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2593-2593", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonWriter.cs"];
m47_1681 [label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2596-2596", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonWriter.cs"];
m47_1683 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="2599-2599", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonWriter.cs"];
m47_1685 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2602-2602", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonWriter.cs"];
m47_1687 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2605-2605", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonWriter.cs"];
m47_1689 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2608-2608", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonWriter.cs"];
m47_1691 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2611-2611", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonWriter.cs"];
m47_1693 [label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="2614-2614", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonWriter.cs"];
m47_1695 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2617-2617", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonWriter.cs"];
m47_1697 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2620-2620", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonWriter.cs"];
m47_1699 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2623-2623", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonWriter.cs"];
m47_1701 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2626-2626", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonWriter.cs"];
m47_1703 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2629-2629", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonWriter.cs"];
m47_1666 [label="Assert.IsTrue(reader.Read())", span="2574-2574", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonWriter.cs"];
m47_1668 [label="Assert.IsTrue(reader.Read())", span="2577-2577", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonWriter.cs"];
m47_1670 [label="Assert.IsTrue(reader.Read())", span="2580-2580", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonWriter.cs"];
m47_1672 [label="Assert.IsTrue(reader.Read())", span="2583-2583", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonWriter.cs"];
m47_1674 [label="Assert.IsTrue(reader.Read())", span="2586-2586", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonWriter.cs"];
m47_1676 [label="Assert.IsTrue(reader.Read())", span="2589-2589", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonWriter.cs"];
m47_1678 [label="Assert.IsTrue(reader.Read())", span="2592-2592", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonWriter.cs"];
m47_1680 [label="Assert.IsTrue(reader.Read())", span="2595-2595", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonWriter.cs"];
m47_1682 [label="Assert.IsTrue(reader.Read())", span="2598-2598", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonWriter.cs"];
m47_1684 [label="Assert.IsTrue(reader.Read())", span="2601-2601", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonWriter.cs"];
m47_1686 [label="Assert.IsTrue(reader.Read())", span="2604-2604", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonWriter.cs"];
m47_1688 [label="Assert.IsTrue(reader.Read())", span="2607-2607", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonWriter.cs"];
m47_1690 [label="Assert.IsTrue(reader.Read())", span="2610-2610", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonWriter.cs"];
m47_1692 [label="Assert.IsTrue(reader.Read())", span="2613-2613", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonWriter.cs"];
m47_1694 [label="Assert.IsTrue(reader.Read())", span="2616-2616", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonWriter.cs"];
m47_1696 [label="Assert.IsTrue(reader.Read())", span="2619-2619", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonWriter.cs"];
m47_1698 [label="Assert.IsTrue(reader.Read())", span="2622-2622", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonWriter.cs"];
m47_1700 [label="Assert.IsTrue(reader.Read())", span="2625-2625", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonWriter.cs"];
m47_1702 [label="Assert.IsTrue(reader.Read())", span="2628-2628", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonWriter.cs"];
m47_1704 [label="Assert.IsFalse(reader.Read())", span="2631-2631", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonWriter.cs"];
m47_1664 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''{'prop1':[1]} 1 2 ''''name'''' [][]null {}{} 1.1''))", span="2571-2571", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonWriter.cs"];
m47_1665 [label="reader.SupportMultipleContent = true", span="2572-2572", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonWriter.cs"];
m47_1705 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", span="2569-2569", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonWriter.cs"];
m47_2167 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", span="3314-3314", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonWriter.cs"];
m47_2176 [label="Assert.AreEqual(''first'', jsonTextReader.Value)", span="3329-3329", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonWriter.cs"];
m47_2181 [label="Assert.AreEqual(1L, jsonTextReader.Value)", span="3338-3338", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonWriter.cs"];
m47_2170 [label="Assert.IsTrue(jsonTextReader.Read())", span="3319-3319", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonWriter.cs"];
m47_2175 [label="Assert.IsTrue(jsonTextReader.Read())", span="3328-3328", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonWriter.cs"];
m47_2180 [label="Assert.IsTrue(jsonTextReader.Read())", span="3337-3337", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonWriter.cs"];
m47_2169 [label="JsonTextReader jsonTextReader = new JsonTextReader(toggleReaderError)", span="3317-3317", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonWriter.cs"];
m47_2168 [label="ToggleReaderError toggleReaderError = new ToggleReaderError(new StringReader(''{'first':1,'second':2,'third':3}''))", span="3316-3316", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonWriter.cs"];
m47_2177 [label="toggleReaderError.Error = true", span="3331-3331", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonWriter.cs"];
m47_2182 [label="toggleReaderError.Error = true", span="3340-3340", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonWriter.cs"];
m47_2171 [label="toggleReaderError.Error = true", span="3321-3321", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonWriter.cs"];
m47_2174 [label="toggleReaderError.Error = false", span="3326-3326", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonWriter.cs"];
m47_2179 [label="toggleReaderError.Error = false", span="3335-3335", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonWriter.cs"];
m47_2172 [label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="3323-3323", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonWriter.cs"];
m47_2173 [label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="3324-3324", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonWriter.cs"];
m47_2178 [label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="3333-3333", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonWriter.cs"];
m47_2183 [label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="3342-3342", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonWriter.cs"];
m47_2184 [label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="3343-3343", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonWriter.cs"];
m47_2185 [label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="3344-3344", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonWriter.cs"];
m47_2186 [label="toggleReaderError.Error = false", span="3346-3346", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonWriter.cs"];
m47_2187 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", span="3314-3314", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonWriter.cs"];
m47_1439 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", span="2213-2213", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonWriter.cs"];
m47_1443 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2220-2220", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonWriter.cs"];
m47_1445 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2223-2223", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonWriter.cs"];
m47_1447 [label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2226-2226", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonWriter.cs"];
m47_1448 [label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2227-2227", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonWriter.cs"];
m47_1449 [label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), reader.Value)", span="2228-2228", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonWriter.cs"];
m47_1451 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2231-2231", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonWriter.cs"];
m47_1442 [label="Assert.IsTrue(reader.Read())", span="2219-2219", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonWriter.cs"];
m47_1444 [label="Assert.IsTrue(reader.Read())", span="2222-2222", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonWriter.cs"];
m47_1450 [label="Assert.IsTrue(reader.Read())", span="2230-2230", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonWriter.cs"];
m47_1441 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2217-2217", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonWriter.cs"];
m47_1446 [label="reader.ReadAsDateTimeOffset()", span="2225-2225", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonWriter.cs"];
m47_1440 [label="string json = ''{\''Offset\'':\''\\/Date(946663200000+06)\\/\''}''", span="2215-2215", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonWriter.cs"];
m47_1452 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", span="2213-2213", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonWriter.cs"];
m47_1234 [label="Entry System.Text.Encoding.GetString(byte[], int, int)", span="0-0", cluster="System.Text.Encoding.GetString(byte[], int, int)", file="JsonWriter.cs"];
m47_327 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", span="543-543", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JsonWriter.cs"];
m47_330 [label="reader.Read()", span="548-548", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JsonWriter.cs"];
m47_329 [label="JsonTextReader reader = new JsonTextReader(new StreamReader(ms))", span="547-547", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JsonWriter.cs"];
m47_331 [label="string s = (string)reader.Value", span="550-550", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JsonWriter.cs"];
m47_328 [label="MemoryStream ms = new MemoryStream(Encoding.UTF8.GetBytes(@'''''''' + input + @''''''''))", span="545-545", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JsonWriter.cs"];
m47_332 [label="return s;", span="552-552", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JsonWriter.cs"];
m47_333 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", span="543-543", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JsonWriter.cs"];
m47_407 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", span="700-700", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="JsonWriter.cs"];
m47_409 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="704-704", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="JsonWriter.cs"];
m47_408 [label="string json = @'''hi' a''", span="702-702", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="JsonWriter.cs"];
m47_410 [label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                while (reader.Read())\r\n                {\r\n                }\r\n            }, ''Additional text encountered after finished reading JSON content: a. Path '', line 1, position 5.'')", span="706-711", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="JsonWriter.cs"];
m47_411 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", span="700-700", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="JsonWriter.cs"];
m47_1955 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", span="3018-3018", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonWriter.cs"];
m47_1959 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="3025-3025", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonWriter.cs"];
m47_1961 [label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="3028-3028", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonWriter.cs"];
m47_1963 [label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="3031-3031", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonWriter.cs"];
m47_1965 [label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="3034-3034", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonWriter.cs"];
m47_1967 [label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="3037-3037", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonWriter.cs"];
m47_1969 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="3040-3040", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonWriter.cs"];
m47_1958 [label="reader.Read()", span="3024-3024", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonWriter.cs"];
m47_1960 [label="reader.Read()", span="3027-3027", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonWriter.cs"];
m47_1962 [label="reader.Read()", span="3030-3030", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonWriter.cs"];
m47_1964 [label="reader.Read()", span="3033-3033", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonWriter.cs"];
m47_1966 [label="reader.Read()", span="3036-3036", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonWriter.cs"];
m47_1968 [label="reader.Read()", span="3039-3039", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonWriter.cs"];
m47_1957 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3022-3022", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonWriter.cs"];
m47_1956 [label="string json = @''[0,1,2 , 3]''", span="3020-3020", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonWriter.cs"];
m47_1970 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", span="3018-3018", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonWriter.cs"];
m47_155 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", span="285-285", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonWriter.cs"];
m47_159 [label="Assert.AreEqual(JsonToken.StartArray, jsonTextReader.TokenType)", span="297-297", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonWriter.cs"];
m47_165 [label="Assert.AreEqual(JsonToken.EndArray, jsonTextReader.TokenType)", span="308-308", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonWriter.cs"];
m47_158 [label="Assert.IsTrue(jsonTextReader.Read())", span="296-296", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonWriter.cs"];
m47_164 [label="Assert.IsTrue(jsonTextReader.Read())", span="307-307", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonWriter.cs"];
m47_166 [label="Assert.IsFalse(jsonTextReader.Read())", span="310-310", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonWriter.cs"];
m47_157 [label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="294-294", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonWriter.cs"];
m47_160 [label="ExceptionAssert.Throws<JsonReaderException>(() => jsonTextReader.ReadAsInt32(), ''JSON integer 333333333333333333333333333333333333333 is too large or small for an Int32. Path '[0]', line 2, position 41.'')", span="299-299", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonWriter.cs"];
m47_163 [label="ExceptionAssert.Throws<JsonReaderException>(() => jsonTextReader.ReadAsInt32(), ''Input string '0f' is not a valid integer. Path '[3]', line 5, position 4.'')", span="305-305", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonWriter.cs"];
m47_156 [label="string json = @''[\r\n  333333333333333333333333333333333333333,\r\n  3.3,\r\n  ,\r\n  0f\r\n]''", span="287-292", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonWriter.cs"];
m47_161 [label="ExceptionAssert.Throws<JsonReaderException>(() => jsonTextReader.ReadAsInt32(), ''Input string '3.3' is not a valid integer. Path '[1]', line 3, position 5.'')", span="301-301", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonWriter.cs"];
m47_162 [label="ExceptionAssert.Throws<JsonReaderException>(() => jsonTextReader.ReadAsInt32(), ''Error reading integer. Unexpected token: Undefined. Path '[2]', line 4, position 2.'')", span="303-303", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonWriter.cs"];
m47_167 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", span="285-285", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonWriter.cs"];
m47_61 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", span="137-137", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonWriter.cs"];
m47_65 [label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", span="149-149", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonWriter.cs"];
m47_67 [label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="152-152", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonWriter.cs"];
m47_69 [label="Assert.AreEqual(JsonToken.StartArray, jsonTextReader.TokenType)", span="155-155", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonWriter.cs"];
m47_71 [label="Assert.AreEqual(JsonToken.String, jsonTextReader.TokenType)", span="158-158", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonWriter.cs"];
m47_72 [label="Assert.AreEqual(''src'', jsonTextReader.Value)", span="159-159", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonWriter.cs"];
m47_74 [label="Assert.AreEqual(JsonToken.Comment, jsonTextReader.TokenType)", span="162-162", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonWriter.cs"];
m47_75 [label="Assert.AreEqual(@'''''''', jsonTextReader.Value)", span="163-163", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonWriter.cs"];
m47_77 [label="Assert.AreEqual(JsonToken.String, jsonTextReader.TokenType)", span="166-166", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonWriter.cs"];
m47_78 [label="Assert.AreEqual(''test'', jsonTextReader.Value)", span="167-167", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonWriter.cs"];
m47_80 [label="Assert.AreEqual(JsonToken.EndArray, jsonTextReader.TokenType)", span="170-170", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonWriter.cs"];
m47_82 [label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", span="173-173", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonWriter.cs"];
m47_64 [label="Assert.IsTrue(jsonTextReader.Read())", span="148-148", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonWriter.cs"];
m47_66 [label="Assert.IsTrue(jsonTextReader.Read())", span="151-151", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonWriter.cs"];
m47_68 [label="Assert.IsTrue(jsonTextReader.Read())", span="154-154", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonWriter.cs"];
m47_70 [label="Assert.IsTrue(jsonTextReader.Read())", span="157-157", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonWriter.cs"];
m47_73 [label="Assert.IsTrue(jsonTextReader.Read())", span="161-161", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonWriter.cs"];
m47_76 [label="Assert.IsTrue(jsonTextReader.Read())", span="165-165", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonWriter.cs"];
m47_79 [label="Assert.IsTrue(jsonTextReader.Read())", span="169-169", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonWriter.cs"];
m47_81 [label="Assert.IsTrue(jsonTextReader.Read())", span="172-172", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonWriter.cs"];
m47_63 [label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="147-147", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonWriter.cs"];
m47_62 [label="string json = @''{\r\n    ''''projects'''': [\r\n        ''''src'''',\r\n        //''''\r\n        ''''test''''\r\n    ]\r\n}''", span="139-145", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonWriter.cs"];
m47_83 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", span="137-137", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonWriter.cs"];
m47_1501 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", span="2304-2304", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonWriter.cs"];
m47_1506 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2312-2312", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonWriter.cs"];
m47_1508 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2315-2315", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonWriter.cs"];
m47_1510 [label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2318-2318", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonWriter.cs"];
m47_1511 [label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2319-2319", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonWriter.cs"];
m47_1515 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2325-2325", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonWriter.cs"];
m47_1513 [label="Assert.AreEqual(new DateTime(2011, 1, 30, 0, 0, 0, DateTimeKind.Unspecified), dt.DateTime)", span="2322-2322", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonWriter.cs"];
m47_1505 [label="Assert.IsTrue(reader.Read())", span="2311-2311", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonWriter.cs"];
m47_1507 [label="Assert.IsTrue(reader.Read())", span="2314-2314", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonWriter.cs"];
m47_1514 [label="Assert.IsTrue(reader.Read())", span="2324-2324", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonWriter.cs"];
m47_1503 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2308-2308", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonWriter.cs"];
m47_1509 [label="reader.ReadAsDateTimeOffset()", span="2317-2317", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonWriter.cs"];
m47_1512 [label="DateTimeOffset dt = (DateTimeOffset)reader.Value", span="2321-2321", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonWriter.cs"];
m47_1504 [label="reader.Culture = new CultureInfo(''en-NZ'')", span="2309-2309", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonWriter.cs"];
m47_1502 [label="string json = @''{''''Offset'''':''''30/1/2011''''}''", span="2306-2306", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonWriter.cs"];
m47_1516 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", span="2304-2304", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonWriter.cs"];
m47_1925 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", span="2970-2970", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonWriter.cs"];
m47_1929 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2977-2977", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonWriter.cs"];
m47_1930 [label="Assert.AreEqual(''comment'', reader.Value)", span="2978-2978", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonWriter.cs"];
m47_1928 [label="Assert.IsTrue(reader.Read())", span="2976-2976", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonWriter.cs"];
m47_1931 [label="Assert.IsFalse(reader.Read())", span="2980-2980", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonWriter.cs"];
m47_1927 [label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2974-2974", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonWriter.cs"];
m47_1926 [label="string json = @''//comment''", span="2972-2972", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonWriter.cs"];
m47_1932 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", span="2970-2970", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonWriter.cs"];
m47_1313 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", span="2032-2032", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="JsonWriter.cs"];
m47_1314 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''{''))", span="2034-2034", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="JsonWriter.cs"];
m47_1315 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Unexpected end when reading bytes. Path '', line 1, position 1.'')", span="2036-2036", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="JsonWriter.cs"];
m47_1316 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", span="2032-2032", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="JsonWriter.cs"];
m47_577 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", span="942-942", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="JsonWriter.cs"];
m47_581 [label="Assert.AreEqual(s, reader.Value)", span="948-948", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="JsonWriter.cs"];
m47_579 [label="JsonReader reader = new JsonTextReader(new StringReader(''''' + s + '''''))", span="945-945", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="JsonWriter.cs"];
m47_578 [label="string s = new string('a', 10000)", span="944-944", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="JsonWriter.cs"];
m47_580 [label="reader.Read()", span="946-946", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="JsonWriter.cs"];
m47_582 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", span="942-942", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="JsonWriter.cs"];
m47_794 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", span="1282-1282", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JsonWriter.cs"];
m47_797 [label="JsonReader reader = new JsonTextReader(new StringReader(@''''' + Convert.ToBase64String(helloWorldData)))", span="1287-1287", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JsonWriter.cs"];
m47_796 [label="byte[] helloWorldData = Encoding.UTF8.GetBytes(helloWorld)", span="1285-1285", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JsonWriter.cs"];
m47_798 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Unterminated string. Expected delimiter: '. Path '', line 1, position 17.'')", span="1289-1289", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JsonWriter.cs"];
m47_795 [label="string helloWorld = ''Hello world!''", span="1284-1284", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JsonWriter.cs"];
m47_799 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", span="1282-1282", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JsonWriter.cs"];
m47_2164 [label="Entry System.DateTime.DateTime(long, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(long, System.DateTimeKind)", file="JsonWriter.cs"];
m47_786 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", span="1274-1274", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="JsonWriter.cs"];
m47_787 [label="JsonReader reader = new JsonTextReader(new StringReader(@''true''))", span="1276-1276", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="JsonWriter.cs"];
m47_788 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Error reading bytes. Unexpected token: Boolean. Path '', line 1, position 4.'')", span="1278-1278", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="JsonWriter.cs"];
m47_789 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", span="1274-1274", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="JsonWriter.cs"];
m47_2026 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", span="3120-3120", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JsonWriter.cs"];
m47_2029 [label="Assert.IsTrue(reader.Read())", span="3129-3129", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JsonWriter.cs"];
m47_2028 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                MaxDepth = 1\r\n            }", span="3124-3127", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JsonWriter.cs"];
m47_2030 [label="ExceptionAssert.Throws<JsonReaderException>(() => { Assert.IsTrue(reader.Read()); }, ''The reader's MaxDepth of 1 has been exceeded. Path '[0]', line 1, position 2.'')", span="3131-3131", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JsonWriter.cs"];
m47_2027 [label="string json = ''[[]]''", span="3122-3122", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JsonWriter.cs"];
m47_2031 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", span="3120-3120", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JsonWriter.cs"];
m47_699 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="JsonWriter.cs"];
m47_150 [label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="358-358", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="JsonWriter.cs"];
m47_357 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", span="606-606", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonWriter.cs"];
m47_363 [label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="615-615", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonWriter.cs"];
m47_364 [label="Assert.AreEqual(''Date'', reader.Value)", span="616-616", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonWriter.cs"];
m47_366 [label="Assert.AreEqual(0L, reader.Value)", span="619-619", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonWriter.cs"];
m47_368 [label="Assert.AreEqual(''hi'', reader.Value)", span="622-622", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonWriter.cs"];
m47_370 [label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="625-625", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonWriter.cs"];
m47_372 [label="Assert.AreEqual(''MemberConverter'', reader.Value)", span="628-628", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonWriter.cs"];
m47_360 [label="Assert.IsTrue(reader.Read())", span="612-612", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonWriter.cs"];
m47_361 [label="Assert.IsTrue(reader.Read())", span="613-613", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonWriter.cs"];
m47_362 [label="Assert.IsTrue(reader.Read())", span="614-614", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonWriter.cs"];
m47_365 [label="Assert.IsTrue(reader.Read())", span="618-618", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonWriter.cs"];
m47_367 [label="Assert.IsTrue(reader.Read())", span="621-621", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonWriter.cs"];
m47_369 [label="Assert.IsTrue(reader.Read())", span="624-624", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonWriter.cs"];
m47_371 [label="Assert.IsTrue(reader.Read())", span="627-627", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonWriter.cs"];
m47_359 [label="JsonReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="610-610", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonWriter.cs"];
m47_358 [label="string json = @''{''''DefaultConverter'''':new Date(0, ''''hi''''),''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}''", span="608-608", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonWriter.cs"];
m47_373 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", span="606-606", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonWriter.cs"];
m47_1636 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", span="2527-2527", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonWriter.cs"];
m47_1640 [label="Assert.AreEqual(''Date'', reader.Value)", span="2533-2533", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonWriter.cs"];
m47_1641 [label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2534-2534", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonWriter.cs"];
m47_1643 [label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2537-2537", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonWriter.cs"];
m47_1639 [label="Assert.IsTrue(reader.Read())", span="2532-2532", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonWriter.cs"];
m47_1642 [label="Assert.IsTrue(reader.Read())", span="2536-2536", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonWriter.cs"];
m47_1638 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2530-2530", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonWriter.cs"];
m47_1637 [label="string json = ''new Date\n()''", span="2529-2529", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonWriter.cs"];
m47_1644 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", span="2527-2527", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonWriter.cs"];
m47_267 [label="Entry System.Convert.ToDecimal(double)", span="0-0", cluster="System.Convert.ToDecimal(double)", file="JsonWriter.cs"];
m47_1517 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", span="2330-2330", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonWriter.cs"];
m47_1521 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2337-2337", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonWriter.cs"];
m47_1523 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2340-2340", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonWriter.cs"];
m47_1525 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2343-2343", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonWriter.cs"];
m47_1526 [label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="2344-2344", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonWriter.cs"];
m47_1527 [label="Assert.AreEqual(1m, reader.Value)", span="2345-2345", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonWriter.cs"];
m47_1520 [label="Assert.IsTrue(reader.Read())", span="2336-2336", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonWriter.cs"];
m47_1522 [label="Assert.IsTrue(reader.Read())", span="2339-2339", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonWriter.cs"];
m47_1519 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2334-2334", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonWriter.cs"];
m47_1524 [label="reader.ReadAsDecimal()", span="2342-2342", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonWriter.cs"];
m47_1518 [label="string json = @''{''''Name'''':1}''", span="2332-2332", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonWriter.cs"];
m47_1528 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", span="2330-2330", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonWriter.cs"];
m47_1555 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", span="2381-2381", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", file="JsonWriter.cs"];
m47_1556 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''nullz''))", span="2383-2383", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", file="JsonWriter.cs"];
m47_1557 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Error parsing null value. Path '', line 1, position 4.'')", span="2385-2385", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", file="JsonWriter.cs"];
m47_1558 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", span="2381-2381", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", file="JsonWriter.cs"];
m47_356 [label="Entry Newtonsoft.Json.JsonReader.Read()", span="405-405", cluster="Newtonsoft.Json.JsonReader.Read()", file="JsonWriter.cs"];
m47_1120 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", span="1749-1749", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonWriter.cs"];
m47_1125 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="1757-1757", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonWriter.cs"];
m47_1127 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1760-1760", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonWriter.cs"];
m47_1128 [label="Assert.AreEqual(typeof(string), reader.ValueType)", span="1761-1761", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonWriter.cs"];
m47_1129 [label="Assert.AreEqual(20000, reader.Value.ToString().Length)", span="1762-1762", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonWriter.cs"];
m47_1131 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="1765-1765", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonWriter.cs"];
m47_1133 [label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1768-1768", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonWriter.cs"];
m47_1124 [label="reader.Read()", span="1756-1756", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonWriter.cs"];
m47_1126 [label="reader.Read()", span="1759-1759", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonWriter.cs"];
m47_1130 [label="Assert.IsTrue(reader.Read())", span="1764-1764", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonWriter.cs"];
m47_1132 [label="Assert.IsFalse(reader.Read())", span="1767-1767", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonWriter.cs"];
m47_1123 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1754-1754", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonWriter.cs"];
m47_1122 [label="string json = @''['''''' + new string(' ', length) + @'''''']''", span="1752-1752", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonWriter.cs"];
m47_1121 [label="int length = 20000", span="1751-1751", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonWriter.cs"];
m47_1134 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", span="1749-1749", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonWriter.cs"];
m47_1483 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JsonWriter.cs"];
m47_1760 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", span="2710-2710", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonWriter.cs"];
m47_1764 [label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2716-2716", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonWriter.cs"];
m47_1766 [label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2719-2719", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonWriter.cs"];
m47_1763 [label="Assert.IsTrue(reader.Read())", span="2715-2715", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonWriter.cs"];
m47_1765 [label="Assert.IsTrue(reader.Read())", span="2718-2718", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonWriter.cs"];
m47_1762 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2713-2713", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonWriter.cs"];
m47_1761 [label="string json = ''new Date()''", span="2712-2712", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonWriter.cs"];
m47_1767 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", span="2710-2710", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonWriter.cs"];
m47_222 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", span="385-385", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="JsonWriter.cs"];
m47_1147 [label="Entry System.Convert.ToChar(string)", span="0-0", cluster="System.Convert.ToChar(string)", file="JsonWriter.cs"];
m47_610 [label="Entry System.IO.StringWriter.ToString()", span="0-0", cluster="System.IO.StringWriter.ToString()", file="JsonWriter.cs"];
m47_1225 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", span="1904-1904", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonWriter.cs"];
m47_1231 [label="Assert.AreEqual(''Hello world.'', text)", span="1913-1913", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonWriter.cs"];
m47_1227 [label="JsonTextReader reader = new JsonTextReader(s)", span="1907-1907", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonWriter.cs"];
m47_1226 [label="StringReader s = new StringReader(@''''''SGVsbG8gd29ybGQu'''''')", span="1906-1906", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonWriter.cs"];
m47_1230 [label="string text = Encoding.UTF8.GetString(data, 0, data.Length)", span="1912-1912", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonWriter.cs"];
m47_1228 [label="byte[] data = reader.ReadAsBytes()", span="1909-1909", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonWriter.cs"];
m47_1229 [label="Assert.IsNotNull(data)", span="1910-1910", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonWriter.cs"];
m47_1232 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", span="1904-1904", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonWriter.cs"];
m47_1340 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", span="2068-2068", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="JsonWriter.cs"];
m47_1341 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''new Date()''))", span="2070-2070", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="JsonWriter.cs"];
m47_1342 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDateTimeOffset(); }, ''Error reading date. Unexpected token: StartConstructor. Path '', line 1, position 9.'')", span="2072-2072", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="JsonWriter.cs"];
m47_1343 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", span="2068-2068", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="JsonWriter.cs"];
m47_94 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsBytes()", span="376-376", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonWriter.cs"];
m47_2307 [label="Newtonsoft.Json.Tests.JsonTextReaderTest", span="", file="JsonWriter.cs"];
m47_2304 [label=reader, span="", file="JsonWriter.cs"];
m47_2305 [label=reader, span="", file="JsonWriter.cs"];
m47_2306 [label=reader, span="", file="JsonWriter.cs"];
m47_2308 [label=reader, span="", file="JsonWriter.cs"];
m47_2309 [label=reader, span="", file="JsonWriter.cs"];
m47_2310 [label=reader, span="", file="JsonWriter.cs"];
m47_2322 [label=reader, span="", file="JsonWriter.cs"];
m47_2323 [label=reader, span="", file="JsonWriter.cs"];
m47_2324 [label=reader, span="", file="JsonWriter.cs"];
m47_2325 [label=reader, span="", file="JsonWriter.cs"];
m47_2334 [label=reader, span="", file="JsonWriter.cs"];
m47_2335 [label=reader, span="", file="JsonWriter.cs"];
m47_2336 [label=reader, span="", file="JsonWriter.cs"];
m47_2337 [label=reader, span="", file="JsonWriter.cs"];
m47_2338 [label=reader, span="", file="JsonWriter.cs"];
m47_2339 [label=reader, span="", file="JsonWriter.cs"];
m47_2340 [label=reader, span="", file="JsonWriter.cs"];
m47_2341 [label=reader, span="", file="JsonWriter.cs"];
m47_2342 [label=reader, span="", file="JsonWriter.cs"];
m47_2343 [label=reader, span="", file="JsonWriter.cs"];
m47_2345 [label=reader, span="", file="JsonWriter.cs"];
m47_2346 [label=reader, span="", file="JsonWriter.cs"];
m47_2347 [label=jsonTextReader, span="", file="JsonWriter.cs"];
m47_2312 [label=total, span="", file="JsonWriter.cs"];
m47_2313 [label=total, span="", file="JsonWriter.cs"];
m47_2348 [label=json, span="", file="JsonWriter.cs"];
m47_2302 [label=jsonTextReader, span="", file="JsonWriter.cs"];
m47_2303 [label=jsonTextReader, span="", file="JsonWriter.cs"];
m47_2311 [label=reader, span="", file="JsonWriter.cs"];
m47_2316 [label=reader, span="", file="JsonWriter.cs"];
m47_2317 [label=reader, span="", file="JsonWriter.cs"];
m47_2318 [label=reader, span="", file="JsonWriter.cs"];
m47_2319 [label=reader, span="", file="JsonWriter.cs"];
m47_2320 [label=reader, span="", file="JsonWriter.cs"];
m47_2321 [label=reader, span="", file="JsonWriter.cs"];
m47_2326 [label=reader, span="", file="JsonWriter.cs"];
m47_2327 [label=reader, span="", file="JsonWriter.cs"];
m47_2328 [label=reader, span="", file="JsonWriter.cs"];
m47_2329 [label=reader, span="", file="JsonWriter.cs"];
m47_2330 [label=reader, span="", file="JsonWriter.cs"];
m47_2331 [label=reader, span="", file="JsonWriter.cs"];
m47_2332 [label=reader, span="", file="JsonWriter.cs"];
m47_2333 [label=reader, span="", file="JsonWriter.cs"];
m47_2344 [label=reader, span="", file="JsonWriter.cs"];
m47_2349 [label="Newtonsoft.Json.Tests.ToggleReaderError", span="", file="JsonWriter.cs"];
m48_0 [label="Entry Newtonsoft.Json.JsonWriterException.JsonWriterException()", span="49-49", cluster="Newtonsoft.Json.JsonWriterException.JsonWriterException()", file="JTokenWriter.cs"];
m48_1 [label="Exit Newtonsoft.Json.JsonWriterException.JsonWriterException()", span="49-49", cluster="Newtonsoft.Json.JsonWriterException.JsonWriterException()", file="JTokenWriter.cs"];
m48_6 [label="Entry Newtonsoft.Json.JsonWriterException.JsonWriterException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="82-82", cluster="Newtonsoft.Json.JsonWriterException.JsonWriterException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JTokenWriter.cs"];
m48_7 [label="Exit Newtonsoft.Json.JsonWriterException.JsonWriterException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="82-82", cluster="Newtonsoft.Json.JsonWriterException.JsonWriterException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JTokenWriter.cs"];
m48_11 [label="Entry Newtonsoft.Json.JsonWriterException.Create(Newtonsoft.Json.JsonWriter, string, System.Exception)", span="94-94", cluster="Newtonsoft.Json.JsonWriterException.Create(Newtonsoft.Json.JsonWriter, string, System.Exception)", file="JTokenWriter.cs"];
m48_12 [label="return Create(writer.ContainerPath, message, ex);", span="96-96", cluster="Newtonsoft.Json.JsonWriterException.Create(Newtonsoft.Json.JsonWriter, string, System.Exception)", file="JTokenWriter.cs"];
m48_13 [label="Exit Newtonsoft.Json.JsonWriterException.Create(Newtonsoft.Json.JsonWriter, string, System.Exception)", span="94-94", cluster="Newtonsoft.Json.JsonWriterException.Create(Newtonsoft.Json.JsonWriter, string, System.Exception)", file="JTokenWriter.cs"];
m48_18 [label="Entry Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", span="139-139", cluster="Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", file="JTokenWriter.cs"];
m48_2 [label="Entry Newtonsoft.Json.JsonWriterException.JsonWriterException(string)", span="58-58", cluster="Newtonsoft.Json.JsonWriterException.JsonWriterException(string)", file="JTokenWriter.cs"];
m48_3 [label="Exit Newtonsoft.Json.JsonWriterException.JsonWriterException(string)", span="58-58", cluster="Newtonsoft.Json.JsonWriterException.JsonWriterException(string)", file="JTokenWriter.cs"];
m48_4 [label="Entry Newtonsoft.Json.JsonWriterException.JsonWriterException(string, System.Exception)", span="69-69", cluster="Newtonsoft.Json.JsonWriterException.JsonWriterException(string, System.Exception)", file="JTokenWriter.cs"];
m48_5 [label="Exit Newtonsoft.Json.JsonWriterException.JsonWriterException(string, System.Exception)", span="69-69", cluster="Newtonsoft.Json.JsonWriterException.JsonWriterException(string, System.Exception)", file="JTokenWriter.cs"];
m48_8 [label="Entry Newtonsoft.Json.JsonWriterException.JsonWriterException(string, System.Exception, string)", span="88-88", cluster="Newtonsoft.Json.JsonWriterException.JsonWriterException(string, System.Exception, string)", file="JTokenWriter.cs"];
m48_9 [label="Path = path", span="91-91", cluster="Newtonsoft.Json.JsonWriterException.JsonWriterException(string, System.Exception, string)", file="JTokenWriter.cs"];
m48_10 [label="Exit Newtonsoft.Json.JsonWriterException.JsonWriterException(string, System.Exception, string)", span="88-88", cluster="Newtonsoft.Json.JsonWriterException.JsonWriterException(string, System.Exception, string)", file="JTokenWriter.cs"];
m48_14 [label="Entry Newtonsoft.Json.JsonWriterException.Create(string, string, System.Exception)", span="99-99", cluster="Newtonsoft.Json.JsonWriterException.Create(string, string, System.Exception)", file="JTokenWriter.cs"];
m48_15 [label="message = JsonPosition.FormatMessage(null, path, message)", span="101-101", cluster="Newtonsoft.Json.JsonWriterException.Create(string, string, System.Exception)", file="JTokenWriter.cs"];
m48_16 [label="return new JsonWriterException(message, ex, path);", span="103-103", cluster="Newtonsoft.Json.JsonWriterException.Create(string, string, System.Exception)", file="JTokenWriter.cs"];
m48_17 [label="Exit Newtonsoft.Json.JsonWriterException.Create(string, string, System.Exception)", span="99-99", cluster="Newtonsoft.Json.JsonWriterException.Create(string, string, System.Exception)", file="JTokenWriter.cs"];
m48_19 [label="Newtonsoft.Json.JsonWriterException", span="", file="JTokenWriter.cs"];
m49_80 [label="Assert.AreEqual(JsonToken.EndArray, jsonTextReader.TokenType)", span="170-170", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JTokenWriterTest.cs"];
m49_984 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", span="1579-1579", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JTokenWriterTest.cs"];
m49_987 [label="Assert.AreEqual(1.1m, reader.ReadAsDecimal())", span="1584-1584", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JTokenWriterTest.cs"];
m49_989 [label="Assert.AreEqual(-1.1m, reader.ReadAsDecimal())", span="1587-1587", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JTokenWriterTest.cs"];
m49_991 [label="Assert.AreEqual(0.0m, reader.ReadAsDecimal())", span="1590-1590", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JTokenWriterTest.cs"];
m49_993 [label="Assert.AreEqual(0, reader.ReadAsDecimal())", span="1593-1593", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JTokenWriterTest.cs"];
m49_1000 [label="Assert.AreEqual(0.000001m, reader.ReadAsDecimal())", span="1603-1603", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JTokenWriterTest.cs"];
m49_1002 [label="Assert.AreEqual(null, reader.ReadAsDecimal())", span="1606-1606", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JTokenWriterTest.cs"];
m49_986 [label="reader = new JsonTextReader(new StringReader(''1.1''))", span="1583-1583", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JTokenWriterTest.cs"];
m49_988 [label="reader = new JsonTextReader(new StringReader(''-1.1''))", span="1586-1586", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JTokenWriterTest.cs"];
m49_990 [label="reader = new JsonTextReader(new StringReader(''0.0''))", span="1589-1589", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JTokenWriterTest.cs"];
m49_992 [label="reader = new JsonTextReader(new StringReader(''-0.0''))", span="1592-1592", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JTokenWriterTest.cs"];
m49_994 [label="reader = new JsonTextReader(new StringReader(''9999999999999999999999999999999999999999999999999999999999999999999999999999asdasdasd''))", span="1595-1595", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JTokenWriterTest.cs"];
m49_996 [label="reader = new JsonTextReader(new StringReader(''9999999999999999999999999999999999999999999999999999999999999999999999999999asdasdasd''))", span="1598-1598", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JTokenWriterTest.cs"];
m49_999 [label="reader = new JsonTextReader(new StringReader(''1E-06''))", span="1602-1602", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JTokenWriterTest.cs"];
m49_1001 [label="reader = new JsonTextReader(new StringReader(''''))", span="1605-1605", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JTokenWriterTest.cs"];
m49_1003 [label="reader = new JsonTextReader(new StringReader(''-''))", span="1608-1608", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JTokenWriterTest.cs"];
m49_985 [label="JsonTextReader reader = null", span="1581-1581", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JTokenWriterTest.cs"];
m49_995 [label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsDecimal(), ''Unexpected character encountered while parsing number: s. Path '', line 1, position 77.'')", span="1596-1596", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JTokenWriterTest.cs"];
m49_997 [label="reader.FloatParseHandling = Json.FloatParseHandling.Decimal", span="1599-1599", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JTokenWriterTest.cs"];
m49_998 [label="ExceptionAssert.Throws<JsonReaderException>(() => reader.Read(), ''Unexpected character encountered while parsing number: s. Path '', line 1, position 77.'')", span="1600-1600", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JTokenWriterTest.cs"];
m49_1004 [label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsDecimal(), ''Input string '-' is not a valid decimal. Path '', line 1, position 1.'')", span="1609-1609", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JTokenWriterTest.cs"];
m49_1005 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", span="1579-1579", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JTokenWriterTest.cs"];
m49_606 [label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="142-142", cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JTokenWriterTest.cs"];
m49_1768 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", span="2723-2723", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="JTokenWriterTest.cs"];
m49_1770 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2726-2726", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="JTokenWriterTest.cs"];
m49_1769 [label="string json = ''new Date,()''", span="2725-2725", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="JTokenWriterTest.cs"];
m49_1771 [label="ExceptionAssert.Throws<JsonReaderException>(() => { Assert.IsTrue(reader.Read()); }, ''Unexpected character while parsing constructor: ,. Path '', line 1, position 8.'')", span="2728-2728", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="JTokenWriterTest.cs"];
m49_1772 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", span="2723-2723", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="JTokenWriterTest.cs"];
m49_1569 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", span="2397-2397", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="JTokenWriterTest.cs"];
m49_1570 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''/sdf''))", span="2399-2399", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="JTokenWriterTest.cs"];
m49_1571 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Error parsing comment. Expected: *, got s. Path '', line 1, position 1.'')", span="2401-2401", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="JTokenWriterTest.cs"];
m49_1572 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", span="2397-2397", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="JTokenWriterTest.cs"];
m49_50 [label="Assert.AreEqual(13, jsonTextReader.LinePosition)", span="129-129", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JTokenWriterTest.cs", color=green, community=0];
m49_279 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", span="457-457", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JTokenWriterTest.cs"];
m49_283 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="464-464", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JTokenWriterTest.cs"];
m49_285 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="467-467", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JTokenWriterTest.cs"];
m49_287 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="470-470", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JTokenWriterTest.cs"];
m49_289 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="473-473", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JTokenWriterTest.cs"];
m49_291 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="476-476", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JTokenWriterTest.cs"];
m49_293 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="479-479", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JTokenWriterTest.cs"];
m49_294 [label="Assert.AreEqual(''recipe_text'', reader.Value)", span="480-480", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JTokenWriterTest.cs"];
m49_296 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="483-483", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JTokenWriterTest.cs"];
m49_297 [label="Assert.AreEqual(''#C16------------------------------\r\n#C12Ingredients #C20\r\n#C16------------------------------\r\n\r\na piece of Leather Armor\r\n( ie #L \''Enhanced Leather Armor Boots\'' \''85644\'' )\r\n<img src=rdb://13264>\r\n\r\n#L \''Hacker Tool\'' \''87814\''\r\n<img src=rdb://99282>\r\n\r\n#L \''Clanalizer\'' \''208313\''\r\n<img src=rdb://156479>\r\n\r\n#C16------------------------------\r\n#C12Recipe #C16\r\n#C16------------------------------#C20\r\n\r\nHacker Tool\r\n#C15+#C20\r\na piece of Leather Armor\r\n#C15=#C20\r\n<img src=rdb://13264>\r\na piece of Hacked Leather Armor\r\n( ie : #L \''Hacked Leather Armor Boots\'' \''245979\'' )\r\n#C16Skills: |  BE  |#C20\r\n\r\n#C14------------------------------#C20\r\n\r\nClanalizer\r\n#C15+#C20\r\na piece of Hacked Leather Armor\r\n#C15=#C20\r\n<img src=rdb://13264>\r\na piece of Apocalypse Leather Armor\r\n( ie : #L \''Apocalypse Leather Armor Boots\'' \''245966\'' )\r\n#C16Skills: |  ??  |#C20\r\n\r\n#C16------------------------------\r\n#C12Details#C16\r\n#C16------------------------------#C20\r\n\r\n#L \''Apocalypse Leather Armor Boots\'' \''245967\''\r\n#L \''Apocalypse Leather Armor Gloves\'' \''245969\''\r\n#L \''Apocalypse Leather Armor Helmet\'' \''245975\''\r\n#L \''Apocalypse Leather Armor Pants\'' \''245971\''\r\n#L \''Apocalypse Leather Armor Sleeves\'' \''245973\''\r\n#L \''Apocalypse Leather Body Armor\'' \''245965\''\r\n\r\n#C16------------------------------\r\n#C12Comments#C16\r\n#C16------------------------------#C20\r\n\r\nNice froob armor.. but ugleh!\r\n\r\n'', reader.Value)", span="485-485", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JTokenWriterTest.cs"];
m49_282 [label="Assert.IsTrue(reader.Read())", span="463-463", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JTokenWriterTest.cs"];
m49_284 [label="Assert.IsTrue(reader.Read())", span="466-466", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JTokenWriterTest.cs"];
m49_286 [label="Assert.IsTrue(reader.Read())", span="469-469", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JTokenWriterTest.cs"];
m49_288 [label="Assert.IsTrue(reader.Read())", span="472-472", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JTokenWriterTest.cs"];
m49_290 [label="Assert.IsTrue(reader.Read())", span="475-475", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JTokenWriterTest.cs"];
m49_292 [label="Assert.IsTrue(reader.Read())", span="478-478", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JTokenWriterTest.cs"];
m49_295 [label="Assert.IsTrue(reader.Read())", span="482-482", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JTokenWriterTest.cs"];
m49_281 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="461-461", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JTokenWriterTest.cs"];
m49_280 [label="string json = @''{''''recipe_id'''':''''12'''',''''recipe_name'''':''''Apocalypse Leather Armors'''',''''recipe_text'''':''''#C16------------------------------\r\n#C12Ingredients #C20\r\n#C16------------------------------\r\n\r\na piece of Leather Armor\r\n( ie #L \''''Enhanced Leather Armor Boots\'''' \''''85644\'''' )\r\n<img src=rdb:\/\/13264>\r\n\r\n#L \''''Hacker Tool\'''' \''''87814\''''\r\n<img src=rdb:\/\/99282>\r\n\r\n#L \''''Clanalizer\'''' \''''208313\''''\r\n<img src=rdb:\/\/156479>\r\n\r\n#C16------------------------------\r\n#C12Recipe #C16\r\n#C16------------------------------#C20\r\n\r\nHacker Tool\r\n#C15+#C20\r\na piece of Leather Armor\r\n#C15=#C20\r\n<img src=rdb:\/\/13264>\r\na piece of Hacked Leather Armor\r\n( ie : #L \''''Hacked Leather Armor Boots\'''' \''''245979\'''' )\r\n#C16Skills: |  BE  |#C20\r\n\r\n#C14------------------------------#C20\r\n\r\nClanalizer\r\n#C15+#C20\r\na piece of Hacked Leather Armor\r\n#C15=#C20\r\n<img src=rdb:\/\/13264>\r\na piece of Apocalypse Leather Armor\r\n( ie : #L \''''Apocalypse Leather Armor Boots\'''' \''''245966\'''' )\r\n#C16Skills: |  ??  |#C20\r\n\r\n#C16------------------------------\r\n#C12Details#C16\r\n#C16------------------------------#C20\r\n\r\n#L \''''Apocalypse Leather Armor Boots\'''' \''''245967\''''\r\n#L \''''Apocalypse Leather Armor Gloves\'''' \''''245969\''''\r\n#L \''''Apocalypse Leather Armor Helmet\'''' \''''245975\''''\r\n#L \''''Apocalypse Leather Armor Pants\'''' \''''245971\''''\r\n#L \''''Apocalypse Leather Armor Sleeves\'''' \''''245973\''''\r\n#L \''''Apocalypse Leather Body Armor\'''' \''''245965\''''\r\n\r\n#C16------------------------------\r\n#C12Comments#C16\r\n#C16------------------------------#C20\r\n\r\nNice froob armor.. but ugleh!\r\n\r\n'''',''''recipe_author'''':null}''", span="459-459", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JTokenWriterTest.cs"];
m49_298 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", span="457-457", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JTokenWriterTest.cs"];
m49_584 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", span="952-952", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JTokenWriterTest.cs"];
m49_600 [label="Assert.AreEqual((long)i, reader.Value)", span="971-971", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JTokenWriterTest.cs"];
m49_596 [label="Assert.IsTrue(reader.Read())", span="967-967", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JTokenWriterTest.cs"];
m49_599 [label="Assert.IsTrue(reader.Read())", span="970-970", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JTokenWriterTest.cs"];
m49_602 [label="Assert.IsTrue(reader.Read())", span="973-973", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JTokenWriterTest.cs"];
m49_603 [label="Assert.IsFalse(reader.Read())", span="974-974", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JTokenWriterTest.cs"];
m49_595 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="966-966", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JTokenWriterTest.cs"];
m49_597 [label="int i = 0", span="968-968", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JTokenWriterTest.cs"];
m49_601 [label="i++", span="968-968", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JTokenWriterTest.cs"];
m49_598 [label="i < valueCount", span="968-968", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JTokenWriterTest.cs"];
m49_594 [label="string json = sw.ToString()", span="964-964", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JTokenWriterTest.cs"];
m49_585 [label="int valueCount = 10000", span="954-954", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JTokenWriterTest.cs"];
m49_590 [label="i < valueCount", span="958-958", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JTokenWriterTest.cs"];
m49_586 [label="StringWriter sw = new StringWriter()", span="955-955", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JTokenWriterTest.cs"];
m49_593 [label="writer.WriteEndArray()", span="962-962", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JTokenWriterTest.cs"];
m49_589 [label="int i = 0", span="958-958", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JTokenWriterTest.cs"];
m49_592 [label="i++", span="958-958", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JTokenWriterTest.cs"];
m49_591 [label="writer.WriteValue(i)", span="960-960", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JTokenWriterTest.cs"];
m49_587 [label="JsonTextWriter writer = new JsonTextWriter(sw)", span="956-956", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JTokenWriterTest.cs"];
m49_588 [label="writer.WriteStartArray()", span="957-957", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JTokenWriterTest.cs"];
m49_604 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", span="952-952", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JTokenWriterTest.cs"];
m49_1396 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", span="2153-2153", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JTokenWriterTest.cs"];
m49_1400 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2160-2160", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JTokenWriterTest.cs"];
m49_1402 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2163-2163", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JTokenWriterTest.cs"];
m49_1404 [label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2166-2166", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JTokenWriterTest.cs"];
m49_1405 [label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2167-2167", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JTokenWriterTest.cs"];
m49_1406 [label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), reader.Value)", span="2168-2168", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JTokenWriterTest.cs"];
m49_1408 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2171-2171", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JTokenWriterTest.cs"];
m49_1399 [label="Assert.IsTrue(reader.Read())", span="2159-2159", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JTokenWriterTest.cs"];
m49_1401 [label="Assert.IsTrue(reader.Read())", span="2162-2162", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JTokenWriterTest.cs"];
m49_1407 [label="Assert.IsTrue(reader.Read())", span="2170-2170", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JTokenWriterTest.cs"];
m49_1398 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2157-2157", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JTokenWriterTest.cs"];
m49_1403 [label="reader.ReadAsDateTimeOffset()", span="2165-2165", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JTokenWriterTest.cs"];
m49_1397 [label="string json = ''{\''Offset\'':\''\\/Date(946663200000+0600)\\/\''}''", span="2155-2155", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JTokenWriterTest.cs"];
m49_1409 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", span="2153-2153", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JTokenWriterTest.cs"];
m49_43 [label="Assert.IsTrue(jsonTextReader.Read())", span="121-121", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JTokenWriterTest.cs", color=green, community=0];
m49_0 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", span="39-39", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m49_40 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteValue(string)", span="190-190", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(string)", color=green, community=0, file="JTokenWriterTest.cs"];
m49_30 [label="Assert.AreEqual(string.Empty, (string)root[8])", span="75-75", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m49_39 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteValue(char)", span="290-290", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(char)", file="JTokenWriterTest.cs"];
m49_41 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteValue(bool)", span="260-260", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(bool)", color=green, community=0, file="JTokenWriterTest.cs"];
m49_42 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteValue(int)", span="200-200", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(int)", color=green, community=0, file="JTokenWriterTest.cs"];
m49_44 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteValue(decimal)", span="320-320", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(decimal)", color=green, community=0, file="JTokenWriterTest.cs"];
m49_45 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteNull()", span="160-160", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteNull()", color=green, community=0, file="JTokenWriterTest.cs"];
m49_46 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteUndefined()", span="169-169", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteUndefined()", color=green, community=0, file="JTokenWriterTest.cs"];
m49_47 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteValue(byte[])", span="352-352", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(byte[])", color=green, community=0, file="JTokenWriterTest.cs"];
m49_48 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="253-253", cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", color=green, community=0, file="JTokenWriterTest.cs"];
m49_49 [label="Entry Unk.IsInstanceOfType", span="", cluster="Unk.IsInstanceOfType", color=green, community=0, file="JTokenWriterTest.cs"];
m49_51 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", color=green, community=0, file="JTokenWriterTest.cs"];
m49_52 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", color=green, community=0, file="JTokenWriterTest.cs"];
m49_53 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", span="83-83", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", color=green, community=0, file="JTokenWriterTest.cs"];
m49_54 [label="JsonWriter jsonWriter = new JTokenWriter()", span="85-85", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", color=green, community=0, file="JTokenWriterTest.cs"];
m49_29 [label="Assert.AreEqual(0.000000000000000001m, (decimal)root[7])", span="74-74", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m49_31 [label="Assert.AreEqual(''This is a string.'', (string)root[9])", span="76-76", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m49_32 [label="Assert.AreEqual(null, ((JValue)root[10]).Value)", span="77-77", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m49_33 [label="Assert.AreEqual(null, ((JValue)root[11]).Value)", span="78-78", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m49_34 [label="Assert.AreEqual(data, (byte[])root[12])", span="79-79", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m49_35 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", span="39-39", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m49_36 [label="Entry System.Text.Encoding.GetBytes(string)", span="0-0", cluster="System.Text.Encoding.GetBytes(string)", file="JTokenWriterTest.cs"];
m49_37 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", span="48-48", cluster="Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", file="JTokenWriterTest.cs"];
m49_38 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteStartArray()", span="98-98", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteStartArray()", file="JTokenWriterTest.cs"];
m49_4 [label="jsonWriter.WriteStartArray()", span="46-46", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m49_5 [label="jsonWriter.WriteValue('@')", span="47-47", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m49_6 [label="jsonWriter.WriteValue(''\r\n\t\f\b?{\\r\\n\''\''')", span="48-48", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m49_8 [label="jsonWriter.WriteValue(10)", span="50-50", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m49_9 [label="jsonWriter.WriteValue(10.99)", span="51-51", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m49_10 [label="jsonWriter.WriteValue(0.99)", span="52-52", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m49_14 [label="jsonWriter.WriteValue(''This is a string.'')", span="56-56", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m49_15 [label="jsonWriter.WriteNull()", span="57-57", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m49_16 [label="jsonWriter.WriteUndefined()", span="58-58", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m49_18 [label="jsonWriter.WriteEndArray()", span="60-60", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m49_19 [label="root = jsonWriter.Token", span="62-62", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m49_20 [label="Assert.IsInstanceOfType(typeof(JArray), root)", span="65-65", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m49_22 [label="Assert.AreEqual(''@'', (string)root[0])", span="67-67", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m49_23 [label="Assert.AreEqual(''\r\n\t\f\b?{\\r\\n\''\''', (string)root[1])", span="68-68", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m49_24 [label="Assert.AreEqual(true, (bool)root[2])", span="69-69", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m49_26 [label="Assert.AreEqual(10.99, (double)root[4])", span="71-71", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m49_27 [label="Assert.AreEqual(0.99, (double)root[5])", span="72-72", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m49_28 [label="Assert.AreEqual(0.000000000000000001d, (double)root[6])", span="73-73", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m49_3 [label="JTokenWriter jsonWriter = new JTokenWriter()", span="44-44", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m49_7 [label="jsonWriter.WriteValue(true)", span="49-49", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m49_13 [label="jsonWriter.WriteValue((string)null)", span="55-55", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m49_17 [label="jsonWriter.WriteValue(data)", span="59-59", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m49_21 [label="Assert.AreEqual(13, root.Children().Count())", span="66-66", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m49_25 [label="Assert.AreEqual(10, (int)root[3])", span="70-70", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m49_2 [label="JToken root", span="43-43", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m49_12 [label="jsonWriter.WriteValue(0.000000000000000001m)", span="54-54", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m49_11 [label="jsonWriter.WriteValue(0.000000000000000001d)", span="53-53", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m49_1 [label="byte[] data = Encoding.UTF8.GetBytes(''Hello world.'')", span="41-41", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m49_55 [label="Assert.AreEqual(WriteState.Start, jsonWriter.WriteState)", span="87-87", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="JTokenWriterTest.cs"];
m49_811 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", span="1303-1303", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="JTokenWriterTest.cs"];
m49_813 [label="Assert.IsTrue(reader.Read())", span="1306-1306", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="JTokenWriterTest.cs"];
m49_812 [label="JsonReader reader = new JsonTextReader(new StringReader(@''{aww''))", span="1305-1305", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="JTokenWriterTest.cs"];
m49_814 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected end while parsing unquoted property name. Path '', line 1, position 4.'')", span="1308-1308", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="JTokenWriterTest.cs"];
m49_815 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", span="1303-1303", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="JTokenWriterTest.cs"];
m49_1753 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", span="2702-2702", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", file="JTokenWriterTest.cs"];
m49_1754 [label="JsonTextReader reader = new JsonTextReader(new StringReader(''true/''))", span="2704-2704", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", file="JTokenWriterTest.cs"];
m49_1755 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Error parsing boolean value. Path '', line 1, position 4.'')", span="2706-2706", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", file="JTokenWriterTest.cs"];
m49_1756 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", span="2702-2702", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", file="JTokenWriterTest.cs"];
m49_1411 [label="Entry System.DateTime.DateTime(int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int)", file="JTokenWriterTest.cs"];
m49_698 [label="Entry StringReader.cstr", span="", cluster="StringReader.cstr", file="JTokenWriterTest.cs"];
m49_95 [label="Entry System.Convert.FromBase64String(string)", span="0-0", cluster="System.Convert.FromBase64String(string)", file="JTokenWriterTest.cs"];
m49_1745 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", span="2689-2689", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JTokenWriterTest.cs"];
m49_1749 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2695-2695", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JTokenWriterTest.cs"];
m49_1751 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2698-2698", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JTokenWriterTest.cs"];
m49_1748 [label="Assert.IsTrue(reader.Read())", span="2694-2694", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JTokenWriterTest.cs"];
m49_1750 [label="Assert.IsTrue(reader.Read())", span="2697-2697", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JTokenWriterTest.cs"];
m49_1747 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2692-2692", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JTokenWriterTest.cs"];
m49_1746 [label="string json = ''{}''", span="2691-2691", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JTokenWriterTest.cs"];
m49_1752 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", span="2689-2689", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JTokenWriterTest.cs"];
m49_1354 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", span="2088-2088", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="JTokenWriterTest.cs"];
m49_1355 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[1''))", span="2090-2090", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="JTokenWriterTest.cs"];
m49_1356 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Unexpected end when reading bytes. Path '[0]', line 1, position 2.'')", span="2092-2092", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="JTokenWriterTest.cs"];
m49_1357 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", span="2088-2088", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="JTokenWriterTest.cs"];
m49_1361 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", span="2096-2096", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="JTokenWriterTest.cs"];
m49_1362 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[1.0]''))", span="2098-2098", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="JTokenWriterTest.cs"];
m49_1363 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Unexpected token when reading bytes: Float. Path '[0]', line 1, position 4.'')", span="2100-2100", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="JTokenWriterTest.cs"];
m49_1364 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", span="2096-2096", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="JTokenWriterTest.cs"];
m49_467 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", span="794-794", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_471 [label="Assert.AreEqual(0, reader.Depth)", span="806-806", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_473 [label="Assert.AreEqual(reader.TokenType, JsonToken.StartObject)", span="809-809", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_474 [label="Assert.AreEqual(0, reader.Depth)", span="810-810", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_475 [label="Assert.AreEqual('''', reader.Path)", span="811-811", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_477 [label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="814-814", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_478 [label="Assert.AreEqual(1, reader.Depth)", span="815-815", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_479 [label="Assert.AreEqual(''value'', reader.Path)", span="816-816", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_481 [label="Assert.AreEqual(reader.TokenType, JsonToken.String)", span="819-819", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_482 [label="Assert.AreEqual(reader.Value, @''Purple'')", span="820-820", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_483 [label="Assert.AreEqual(reader.QuoteChar, '\'')", span="821-821", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_484 [label="Assert.AreEqual(1, reader.Depth)", span="822-822", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_485 [label="Assert.AreEqual(''value'', reader.Path)", span="823-823", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_487 [label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="826-826", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_488 [label="Assert.AreEqual(1, reader.Depth)", span="827-827", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_489 [label="Assert.AreEqual(''array'', reader.Path)", span="828-828", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_491 [label="Assert.AreEqual(reader.TokenType, JsonToken.StartArray)", span="831-831", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_492 [label="Assert.AreEqual(1, reader.Depth)", span="832-832", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_493 [label="Assert.AreEqual(''array'', reader.Path)", span="833-833", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_495 [label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="836-836", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_496 [label="Assert.AreEqual(1L, reader.Value)", span="837-837", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_497 [label="Assert.AreEqual(2, reader.Depth)", span="838-838", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_498 [label="Assert.AreEqual(''array[0]'', reader.Path)", span="839-839", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_500 [label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="842-842", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_501 [label="Assert.AreEqual(2L, reader.Value)", span="843-843", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_502 [label="Assert.AreEqual(2, reader.Depth)", span="844-844", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_503 [label="Assert.AreEqual(''array[1]'', reader.Path)", span="845-845", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_505 [label="Assert.AreEqual(reader.TokenType, JsonToken.StartConstructor)", span="848-848", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_506 [label="Assert.AreEqual(''Date'', reader.Value)", span="849-849", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_507 [label="Assert.AreEqual(2, reader.Depth)", span="850-850", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_508 [label="Assert.AreEqual(''array[2]'', reader.Path)", span="851-851", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_510 [label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="854-854", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_511 [label="Assert.AreEqual(1L, reader.Value)", span="855-855", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_512 [label="Assert.AreEqual(3, reader.Depth)", span="856-856", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_513 [label="Assert.AreEqual(''array[2][0]'', reader.Path)", span="857-857", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_515 [label="Assert.AreEqual(reader.TokenType, JsonToken.EndConstructor)", span="860-860", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_516 [label="Assert.AreEqual(null, reader.Value)", span="861-861", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_517 [label="Assert.AreEqual(2, reader.Depth)", span="862-862", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_518 [label="Assert.AreEqual(''array[2]'', reader.Path)", span="863-863", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_520 [label="Assert.AreEqual(reader.TokenType, JsonToken.EndArray)", span="866-866", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_521 [label="Assert.AreEqual(1, reader.Depth)", span="867-867", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_522 [label="Assert.AreEqual(''array'', reader.Path)", span="868-868", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_524 [label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="871-871", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_525 [label="Assert.AreEqual(1, reader.Depth)", span="872-872", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_526 [label="Assert.AreEqual(''subobject'', reader.Path)", span="873-873", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_528 [label="Assert.AreEqual(reader.TokenType, JsonToken.StartObject)", span="876-876", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_529 [label="Assert.AreEqual(1, reader.Depth)", span="877-877", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_530 [label="Assert.AreEqual(''subobject'', reader.Path)", span="878-878", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_532 [label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="881-881", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_533 [label="Assert.AreEqual(2, reader.Depth)", span="882-882", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_534 [label="Assert.AreEqual(''subobject.prop'', reader.Path)", span="883-883", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_536 [label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="886-886", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_537 [label="Assert.AreEqual(2, reader.Depth)", span="887-887", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_538 [label="Assert.AreEqual(''subobject.prop'', reader.Path)", span="888-888", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_540 [label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="891-891", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_541 [label="Assert.AreEqual(2, reader.Depth)", span="892-892", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_542 [label="Assert.AreEqual(''subobject.proparray'', reader.Path)", span="893-893", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_544 [label="Assert.AreEqual(reader.TokenType, JsonToken.StartArray)", span="896-896", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_545 [label="Assert.AreEqual(2, reader.Depth)", span="897-897", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_546 [label="Assert.AreEqual(''subobject.proparray'', reader.Path)", span="898-898", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_548 [label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="901-901", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_549 [label="Assert.AreEqual(3, reader.Depth)", span="902-902", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_550 [label="Assert.AreEqual(''subobject.proparray[0]'', reader.Path)", span="903-903", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_552 [label="Assert.AreEqual(reader.TokenType, JsonToken.EndArray)", span="906-906", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_553 [label="Assert.AreEqual(2, reader.Depth)", span="907-907", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_554 [label="Assert.AreEqual(''subobject.proparray'', reader.Path)", span="908-908", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_556 [label="Assert.AreEqual(reader.TokenType, JsonToken.EndObject)", span="911-911", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_557 [label="Assert.AreEqual(1, reader.Depth)", span="912-912", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_558 [label="Assert.AreEqual(''subobject'', reader.Path)", span="913-913", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_560 [label="Assert.AreEqual(reader.TokenType, JsonToken.EndObject)", span="916-916", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_561 [label="Assert.AreEqual(0, reader.Depth)", span="917-917", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_562 [label="Assert.AreEqual('''', reader.Path)", span="918-918", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_470 [label="JsonReader reader = new JsonTextReader(sr)", span="804-804", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_469 [label="StringReader sr = new StringReader(input)", span="802-802", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_472 [label="reader.Read()", span="808-808", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_476 [label="reader.Read()", span="813-813", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_480 [label="reader.Read()", span="818-818", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_486 [label="reader.Read()", span="825-825", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_490 [label="reader.Read()", span="830-830", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_494 [label="reader.Read()", span="835-835", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_499 [label="reader.Read()", span="841-841", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_504 [label="reader.Read()", span="847-847", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_509 [label="reader.Read()", span="853-853", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_514 [label="reader.Read()", span="859-859", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_519 [label="reader.Read()", span="865-865", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_523 [label="reader.Read()", span="870-870", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_527 [label="reader.Read()", span="875-875", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_531 [label="reader.Read()", span="880-880", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_535 [label="reader.Read()", span="885-885", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_539 [label="reader.Read()", span="890-890", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_543 [label="reader.Read()", span="895-895", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_547 [label="reader.Read()", span="900-900", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_551 [label="reader.Read()", span="905-905", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_555 [label="reader.Read()", span="910-910", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_559 [label="reader.Read()", span="915-915", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_468 [label="string input = @''{\r\n  value:'Purple',\r\n  array:[1,2,new Date(1)],\r\n  subobject:{prop:1,proparray:[1]}\r\n}''", span="796-800", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_563 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", span="794-794", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JTokenWriterTest.cs"];
m49_700 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", span="1123-1123", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JTokenWriterTest.cs"];
m49_704 [label="Assert.AreEqual(typeof(long), reader.ValueType)", span="1129-1129", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JTokenWriterTest.cs"];
m49_710 [label="Assert.AreEqual(typeof(BigInteger), reader.ValueType)", span="1138-1138", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JTokenWriterTest.cs"];
m49_703 [label="reader.Read()", span="1128-1128", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JTokenWriterTest.cs"];
m49_709 [label="reader.Read()", span="1136-1136", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JTokenWriterTest.cs"];
m49_702 [label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="1127-1127", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JTokenWriterTest.cs"];
m49_708 [label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="1135-1135", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JTokenWriterTest.cs"];
m49_705 [label="int j = 1", span="1131-1131", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JTokenWriterTest.cs"];
m49_711 [label="j++", span="1131-1131", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JTokenWriterTest.cs"];
m49_701 [label="BigInteger i = new BigInteger(long.MinValue)", span="1125-1125", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JTokenWriterTest.cs"];
m49_707 [label="BigInteger total = i + -j", span="1133-1133", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JTokenWriterTest.cs"];
m49_706 [label="j < 1000", span="1131-1131", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JTokenWriterTest.cs"];
m49_712 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", span="1123-1123", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JTokenWriterTest.cs"];
m49_1050 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", span="1653-1653", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JTokenWriterTest.cs"];
m49_1085 [label="Assert.AreEqual(json, sb.ToString())", span="1712-1712", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JTokenWriterTest.cs"];
m49_1080 [label="object jsonObject = serializer.Deserialize(new JsonTextReader(new StringReader(json)))", span="1699-1699", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JTokenWriterTest.cs"];
m49_1078 [label="string json = sb.ToString()", span="1695-1695", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JTokenWriterTest.cs"];
m49_1084 [label="serializer.Serialize(jsonWriter, jsonObject)", span="1709-1709", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JTokenWriterTest.cs"];
m49_1081 [label="sb = new StringBuilder()", span="1701-1701", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JTokenWriterTest.cs"];
m49_1079 [label="JsonSerializer serializer = new JsonSerializer()", span="1697-1697", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JTokenWriterTest.cs"];
m49_1051 [label="StringBuilder sb = new StringBuilder()", span="1655-1655", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JTokenWriterTest.cs"];
m49_1077 [label="jsonWriter.WriteEndArray()", span="1692-1692", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JTokenWriterTest.cs"];
m49_1083 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)\r\n            {\r\n                Formatting = Formatting.Indented\r\n            }", span="1704-1707", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JTokenWriterTest.cs"];
m49_1082 [label="sw = new StringWriter(sb)", span="1702-1702", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JTokenWriterTest.cs"];
m49_1052 [label="StringWriter sw = new StringWriter(sb)", span="1656-1656", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JTokenWriterTest.cs"];
m49_1053 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)\r\n            {\r\n                Formatting = Formatting.Indented\r\n            }", span="1658-1661", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JTokenWriterTest.cs"];
m49_1076 [label="jsonWriter.WriteNull()", span="1691-1691", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JTokenWriterTest.cs"];
m49_1063 [label="int i = 0", span="1674-1674", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JTokenWriterTest.cs"];
m49_1054 [label="jsonWriter.WriteStartArray()", span="1663-1663", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JTokenWriterTest.cs"];
m49_1055 [label="jsonWriter.WriteValue(true)", span="1664-1664", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JTokenWriterTest.cs"];
m49_1056 [label="jsonWriter.WriteStartObject()", span="1666-1666", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JTokenWriterTest.cs"];
m49_1057 [label="jsonWriter.WritePropertyName(''integer'')", span="1667-1667", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JTokenWriterTest.cs"];
m49_1058 [label="jsonWriter.WriteValue(99)", span="1668-1668", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JTokenWriterTest.cs"];
m49_1059 [label="jsonWriter.WritePropertyName(''string'')", span="1669-1669", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JTokenWriterTest.cs"];
m49_1060 [label="jsonWriter.WriteValue(''how now brown cow?'')", span="1670-1670", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JTokenWriterTest.cs"];
m49_1061 [label="jsonWriter.WritePropertyName(''array'')", span="1671-1671", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JTokenWriterTest.cs"];
m49_1062 [label="jsonWriter.WriteStartArray()", span="1673-1673", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JTokenWriterTest.cs"];
m49_1065 [label="jsonWriter.WriteValue(i)", span="1676-1676", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JTokenWriterTest.cs"];
m49_1067 [label="jsonWriter.WriteStartObject()", span="1679-1679", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JTokenWriterTest.cs"];
m49_1068 [label="jsonWriter.WritePropertyName(''decimal'')", span="1680-1680", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JTokenWriterTest.cs"];
m49_1069 [label="jsonWriter.WriteValue(990.00990099m)", span="1681-1681", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JTokenWriterTest.cs"];
m49_1070 [label="jsonWriter.WriteEndObject()", span="1682-1682", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JTokenWriterTest.cs"];
m49_1071 [label="jsonWriter.WriteValue(5)", span="1684-1684", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JTokenWriterTest.cs"];
m49_1072 [label="jsonWriter.WriteEndArray()", span="1685-1685", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JTokenWriterTest.cs"];
m49_1073 [label="jsonWriter.WriteEndObject()", span="1687-1687", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JTokenWriterTest.cs"];
m49_1074 [label="jsonWriter.WriteValue(''This is a string.'')", span="1689-1689", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JTokenWriterTest.cs"];
m49_1075 [label="jsonWriter.WriteNull()", span="1690-1690", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JTokenWriterTest.cs"];
m49_1064 [label="i < 5", span="1674-1674", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JTokenWriterTest.cs"];
m49_1066 [label="i++", span="1674-1674", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JTokenWriterTest.cs"];
m49_1086 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", span="1653-1653", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JTokenWriterTest.cs"];
m49_1333 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", span="2059-2059", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="JTokenWriterTest.cs"];
m49_1334 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''new Date()''))", span="2061-2061", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="JTokenWriterTest.cs"];
m49_1335 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Error reading bytes. Unexpected token: StartConstructor. Path '', line 1, position 9.'')", span="2063-2063", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="JTokenWriterTest.cs"];
m49_1336 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", span="2059-2059", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="JTokenWriterTest.cs"];
m49_1500 [label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0", cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="JTokenWriterTest.cs"];
m49_772 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", span="1258-1258", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="JTokenWriterTest.cs"];
m49_773 [label="JsonReader reader = new JsonTextReader(new StringReader(@'''h\u123''))", span="1260-1260", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="JTokenWriterTest.cs"];
m49_774 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected end while parsing unicode character. Path '', line 1, position 4.'')", span="1262-1262", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="JTokenWriterTest.cs"];
m49_775 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", span="1258-1258", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="JTokenWriterTest.cs"];
m49_1721 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", span="2655-2655", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="JTokenWriterTest.cs"];
m49_1723 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2658-2658", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="JTokenWriterTest.cs"];
m49_1722 [label="string json = ''new Date !''", span="2657-2657", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="JTokenWriterTest.cs"];
m49_1724 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected character while parsing constructor: !. Path '', line 1, position 9.'')", span="2660-2660", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="JTokenWriterTest.cs"];
m49_1725 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", span="2655-2655", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="JTokenWriterTest.cs"];
m49_138 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", span="262-262", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JTokenWriterTest.cs"];
m49_142 [label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", span="271-271", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JTokenWriterTest.cs"];
m49_144 [label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="274-274", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JTokenWriterTest.cs"];
m49_147 [label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", span="279-279", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JTokenWriterTest.cs"];
m49_141 [label="Assert.IsTrue(jsonTextReader.Read())", span="270-270", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JTokenWriterTest.cs"];
m49_143 [label="Assert.IsTrue(jsonTextReader.Read())", span="273-273", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JTokenWriterTest.cs"];
m49_146 [label="Assert.IsTrue(jsonTextReader.Read())", span="278-278", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JTokenWriterTest.cs"];
m49_148 [label="Assert.IsFalse(jsonTextReader.Read())", span="281-281", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JTokenWriterTest.cs"];
m49_140 [label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="268-268", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JTokenWriterTest.cs"];
m49_145 [label="ExceptionAssert.Throws<JsonReaderException>(() => jsonTextReader.ReadAsInt32(), ''JSON integer 333333333333333333333333333333333333333 is too large or small for an Int32. Path 'ChildId', line 2, position 52.'')", span="276-276", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JTokenWriterTest.cs"];
m49_139 [label="string json = @''{\r\n    ChildId: 333333333333333333333333333333333333333\r\n}''", span="264-266", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JTokenWriterTest.cs"];
m49_149 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", span="262-262", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JTokenWriterTest.cs"];
m49_106 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", span="206-206", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", file="JTokenWriterTest.cs"];
m49_110 [label="Assert.AreEqual(JsonToken.String, jsonTextReader.TokenType)", span="215-215", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", file="JTokenWriterTest.cs"];
m49_111 [label="Assert.AreEqual(@''first line\r\nsecond line\r\nthird line'', jsonTextReader.Value)", span="217-219", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", file="JTokenWriterTest.cs"];
m49_109 [label="Assert.IsTrue(jsonTextReader.Read())", span="214-214", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", file="JTokenWriterTest.cs"];
m49_108 [label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="212-212", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", file="JTokenWriterTest.cs"];
m49_107 [label="string json = @''''''first line\r\nsecond line\r\nthird line''''''", span="208-210", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", file="JTokenWriterTest.cs"];
m49_112 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", span="206-206", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", file="JTokenWriterTest.cs"];
m49_1645 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", span="2541-2541", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JTokenWriterTest.cs"];
m49_1649 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2547-2547", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JTokenWriterTest.cs"];
m49_1651 [label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2550-2550", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JTokenWriterTest.cs"];
m49_1653 [label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2553-2553", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JTokenWriterTest.cs"];
m49_1655 [label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2556-2556", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JTokenWriterTest.cs"];
m49_1657 [label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2559-2559", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JTokenWriterTest.cs"];
m49_1659 [label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2562-2562", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JTokenWriterTest.cs"];
m49_1661 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2565-2565", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JTokenWriterTest.cs"];
m49_1648 [label="Assert.IsTrue(reader.Read())", span="2546-2546", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JTokenWriterTest.cs"];
m49_1650 [label="Assert.IsTrue(reader.Read())", span="2549-2549", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JTokenWriterTest.cs"];
m49_1652 [label="Assert.IsTrue(reader.Read())", span="2552-2552", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JTokenWriterTest.cs"];
m49_1654 [label="Assert.IsTrue(reader.Read())", span="2555-2555", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JTokenWriterTest.cs"];
m49_1656 [label="Assert.IsTrue(reader.Read())", span="2558-2558", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JTokenWriterTest.cs"];
m49_1658 [label="Assert.IsTrue(reader.Read())", span="2561-2561", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JTokenWriterTest.cs"];
m49_1660 [label="Assert.IsTrue(reader.Read())", span="2564-2564", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JTokenWriterTest.cs"];
m49_1647 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2544-2544", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JTokenWriterTest.cs"];
m49_1646 [label="string json = ''[,,, \n\r\n \0   \r  , ,    ]''", span="2543-2543", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JTokenWriterTest.cs"];
m49_1662 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", span="2541-2541", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JTokenWriterTest.cs"];
m49_1541 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", span="2365-2365", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="JTokenWriterTest.cs"];
m49_1542 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''nul''))", span="2367-2367", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="JTokenWriterTest.cs"];
m49_1543 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Error parsing null value. Path '', line 0, position 0.'')", span="2369-2369", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="JTokenWriterTest.cs"];
m49_1544 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", span="2365-2365", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="JTokenWriterTest.cs"];
m49_312 [label="Entry System.Globalization.StringInfo.StringInfo(string)", span="0-0", cluster="System.Globalization.StringInfo.StringInfo(string)", file="JTokenWriterTest.cs"];
m49_402 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", span="683-683", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", file="JTokenWriterTest.cs"];
m49_405 [label="reader.Read()", span="694-694", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", file="JTokenWriterTest.cs"];
m49_404 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="693-693", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", file="JTokenWriterTest.cs"];
m49_403 [label="string json = @''[\r\n''''Small'''',\r\n''''Medium'''',\r\n''''Large''''\r\n]   \r\n\r\n''", span="685-691", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", file="JTokenWriterTest.cs"];
m49_406 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", span="683-683", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", file="JTokenWriterTest.cs"];
m49_1729 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", span="2664-2664", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JTokenWriterTest.cs"];
m49_1732 [label="Assert.IsTrue(reader.Read())", span="2669-2669", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JTokenWriterTest.cs"];
m49_1733 [label="Assert.IsTrue(reader.Read())", span="2670-2670", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JTokenWriterTest.cs"];
m49_1734 [label="Assert.IsTrue(reader.Read())", span="2671-2671", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JTokenWriterTest.cs"];
m49_1735 [label="Assert.IsFalse(reader.Read())", span="2672-2672", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JTokenWriterTest.cs"];
m49_1731 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2667-2667", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JTokenWriterTest.cs"];
m49_1730 [label="string json = ''{hi:1, ''", span="2666-2666", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JTokenWriterTest.cs"];
m49_1736 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", span="2664-2664", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JTokenWriterTest.cs"];
m49_570 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", span="934-934", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", file="JTokenWriterTest.cs"];
m49_571 [label="JsonReader reader = new JsonTextReader(new StringReader('''hi''))", span="936-936", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", file="JTokenWriterTest.cs"];
m49_572 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unterminated string. Expected delimiter: '. Path '', line 1, position 3.'')", span="938-938", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", file="JTokenWriterTest.cs"];
m49_573 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", span="934-934", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", file="JTokenWriterTest.cs"];
m49_375 [label="Entry System.Text.UTF8Encoding.UTF8Encoding(bool)", span="0-0", cluster="System.Text.UTF8Encoding.UTF8Encoding(bool)", file="JTokenWriterTest.cs"];
m49_349 [label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0", cluster="System.IO.MemoryStream.MemoryStream()", file="JTokenWriterTest.cs"];
m49_1971 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", span="3044-3044", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JTokenWriterTest.cs"];
m49_1973 [label="Assert.IsTrue(reader.Read())", span="3047-3047", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JTokenWriterTest.cs"];
m49_1974 [label="Assert.IsTrue(reader.Read())", span="3048-3048", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JTokenWriterTest.cs"];
m49_1972 [label="JsonReader reader = new JsonTextReader(new StringReader(@''{}}''))", span="3046-3046", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JTokenWriterTest.cs"];
m49_1975 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Additional text encountered after finished reading JSON content: }. Path '', line 1, position 2.'')", span="3050-3050", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JTokenWriterTest.cs"];
m49_1976 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", span="3044-3044", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JTokenWriterTest.cs"];
m49_2165 [label="Entry System.DateTimeOffset.DateTimeOffset(long, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(long, System.TimeSpan)", file="JTokenWriterTest.cs"];
m49_608 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(int)", span="409-409", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(int)", file="JTokenWriterTest.cs"];
m49_1325 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", span="422-422", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="JTokenWriterTest.cs"];
m49_2267 [label="Entry Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", span="3467-3467", cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="JTokenWriterTest.cs"];
m49_2268 [label=Error, span="3469-3469", cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="JTokenWriterTest.cs"];
m49_2270 [label="return _inner.Read(buffer, index, 1);", span="3472-3472", cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="JTokenWriterTest.cs"];
m49_2269 [label="throw new Exception(''Read error'');", span="3470-3470", cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="JTokenWriterTest.cs"];
m49_2271 [label="Exit Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", span="3467-3467", cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="JTokenWriterTest.cs"];
m49_1365 [label="Entry lambda expression", span="2100-2100", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_217 [label="reader.Read()", span="374-374", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_240 [label="reader.Read()", span="404-404", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_277 [label="reader.Read()", span="453-453", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_382 [label="reader.Read()", span="644-644", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_400 [label="reader.Read()", span="679-679", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_413 [label="reader.Read()", span="708-708", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1010 [label="reader.Read()", span="1600-1600", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1045 [label="reader.Read()", span="1638-1638", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1048 [label="reader.Read()", span="1649-1649", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1223 [label="reader.Read()", span="1900-1900", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1301 [label="reader.Read()", span="2010-2010", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1546 [label="reader.Read()", span="2369-2369", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1553 [label="reader.Read()", span="2377-2377", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1560 [label="reader.Read()", span="2385-2385", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1567 [label="reader.Read()", span="2393-2393", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1574 [label="reader.Read()", span="2401-2401", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1719 [label="reader.Read()", span="2651-2651", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1727 [label="reader.Read()", span="2660-2660", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1758 [label="reader.Read()", span="2706-2706", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1775 [label="Assert.IsTrue(reader.Read())", span="2728-2728", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1939 [label="reader.Read()", span="2990-2990", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_2033 [label="Assert.IsTrue(reader.Read())", span="3131-3131", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_2065 [label="Assert.IsTrue(reader.Read())", span="3147-3147", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_2068 [label="Assert.IsTrue(reader.Read())", span="3165-3165", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_2190 [label="jsonTextReader.Read()", span="3323-3323", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_2193 [label="jsonTextReader.Read()", span="3324-3324", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_2196 [label="jsonTextReader.Read()", span="3333-3333", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_2199 [label="jsonTextReader.Read()", span="3342-3342", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_2202 [label="jsonTextReader.Read()", span="3343-3343", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_2205 [label="jsonTextReader.Read()", span="3344-3344", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_2231 [label="reader.Read()", span="3398-3398", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_568 [label="new JsonTextReader (null)", span="926-926", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_665 [label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="1074-1074", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_681 [label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="1095-1095", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_2230 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3397-3397", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_216 [label="Entry lambda expression", span="374-374", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_218 [label="Exit lambda expression", span="374-374", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_239 [label="Entry lambda expression", span="404-404", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_241 [label="Exit lambda expression", span="404-404", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_276 [label="Entry lambda expression", span="453-453", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_278 [label="Exit lambda expression", span="453-453", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_381 [label="Entry lambda expression", span="642-647", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_383 [label="Exit lambda expression", span="642-647", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_399 [label="Entry lambda expression", span="679-679", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_401 [label="Exit lambda expression", span="679-679", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_412 [label="Entry lambda expression", span="706-711", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_414 [label="Exit lambda expression", span="706-711", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1009 [label="Entry lambda expression", span="1600-1600", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1011 [label="Exit lambda expression", span="1600-1600", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1044 [label="Entry lambda expression", span="1638-1638", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1046 [label="Exit lambda expression", span="1638-1638", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1047 [label="Entry lambda expression", span="1649-1649", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1049 [label="Exit lambda expression", span="1649-1649", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1222 [label="Entry lambda expression", span="1900-1900", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1224 [label="Exit lambda expression", span="1900-1900", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1300 [label="Entry lambda expression", span="2010-2010", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1302 [label="Exit lambda expression", span="2010-2010", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1545 [label="Entry lambda expression", span="2369-2369", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1547 [label="Exit lambda expression", span="2369-2369", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1552 [label="Entry lambda expression", span="2377-2377", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1554 [label="Exit lambda expression", span="2377-2377", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1559 [label="Entry lambda expression", span="2385-2385", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1561 [label="Exit lambda expression", span="2385-2385", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1566 [label="Entry lambda expression", span="2393-2393", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1568 [label="Exit lambda expression", span="2393-2393", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1573 [label="Entry lambda expression", span="2401-2401", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1575 [label="Exit lambda expression", span="2401-2401", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1718 [label="Entry lambda expression", span="2651-2651", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1720 [label="Exit lambda expression", span="2651-2651", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1726 [label="Entry lambda expression", span="2660-2660", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1728 [label="Exit lambda expression", span="2660-2660", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1757 [label="Entry lambda expression", span="2706-2706", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1759 [label="Exit lambda expression", span="2706-2706", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1774 [label="Entry lambda expression", span="2728-2728", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1776 [label="Exit lambda expression", span="2728-2728", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1938 [label="Entry lambda expression", span="2990-2990", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1940 [label="Exit lambda expression", span="2990-2990", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_2032 [label="Entry lambda expression", span="3131-3131", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_2034 [label="Exit lambda expression", span="3131-3131", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_2064 [label="Entry lambda expression", span="3147-3147", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_2066 [label="Exit lambda expression", span="3147-3147", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_2067 [label="Entry lambda expression", span="3165-3165", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_2069 [label="Exit lambda expression", span="3165-3165", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_2189 [label="Entry lambda expression", span="3323-3323", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_2191 [label="Exit lambda expression", span="3323-3323", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_2192 [label="Entry lambda expression", span="3324-3324", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_2194 [label="Exit lambda expression", span="3324-3324", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_2195 [label="Entry lambda expression", span="3333-3333", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_2197 [label="Exit lambda expression", span="3333-3333", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_2198 [label="Entry lambda expression", span="3342-3342", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_2200 [label="Exit lambda expression", span="3342-3342", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_2201 [label="Entry lambda expression", span="3343-3343", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_2203 [label="Exit lambda expression", span="3343-3343", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_2204 [label="Entry lambda expression", span="3344-3344", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_2206 [label="Exit lambda expression", span="3344-3344", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_2232 [label="Exit lambda expression", span="3395-3401", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_152 [label="jsonTextReader.ReadAsInt32()", span="276-276", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_169 [label="jsonTextReader.ReadAsInt32()", span="299-299", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_172 [label="jsonTextReader.ReadAsInt32()", span="301-301", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_175 [label="jsonTextReader.ReadAsInt32()", span="303-303", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_178 [label="jsonTextReader.ReadAsInt32()", span="305-305", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_220 [label="reader.ReadAsDecimal()", span="378-378", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_224 [label="reader.ReadAsInt32()", span="382-382", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_567 [label="Entry lambda expression", span="926-926", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_569 [label="Exit lambda expression", span="926-926", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_575 [label="reader.Read()", span="938-938", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_664 [label="Entry lambda expression", span="1072-1076", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_666 [label="reader.ReadAsInt32()", span="1075-1075", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_680 [label="Entry lambda expression", span="1093-1097", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_682 [label="reader.ReadAsInt32()", span="1096-1096", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_777 [label="reader.Read()", span="1262-1262", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_784 [label="reader.Read()", span="1270-1270", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_791 [label="reader.ReadAsBytes()", span="1278-1278", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_802 [label="reader.ReadAsBytes()", span="1289-1289", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_817 [label="reader.Read()", span="1308-1308", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_970 [label="reader.ReadAsInt32()", span="1560-1560", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_973 [label="reader.ReadAsInt32()", span="1563-1563", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_976 [label="reader.ReadAsInt32()", span="1566-1566", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_979 [label="reader.ReadAsInt32()", span="1569-1569", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_982 [label="reader.ReadAsInt32()", span="1575-1575", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1007 [label="reader.ReadAsDecimal()", span="1596-1596", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1013 [label="reader.ReadAsDecimal()", span="1609-1609", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1318 [label="reader.ReadAsBytes()", span="2036-2036", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1331 [label="reader.ReadAsDecimal()", span="2055-2055", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1338 [label="reader.ReadAsBytes()", span="2063-2063", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1345 [label="reader.ReadAsDateTimeOffset()", span="2072-2072", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1359 [label="reader.ReadAsBytes()", span="2092-2092", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1366 [label="reader.ReadAsBytes()", span="2100-2100", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1437 [label="reader.ReadAsDateTimeOffset()", span="2209-2209", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1539 [label="reader.ReadAsInt32()", span="2361-2361", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1978 [label="reader.Read()", span="3050-3050", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_2229 [label="Entry lambda expression", span="3395-3401", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_151 [label="Entry lambda expression", span="276-276", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_168 [label="Entry lambda expression", span="299-299", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1436 [label="Entry lambda expression", span="2209-2209", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1538 [label="Entry lambda expression", span="2361-2361", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_177 [label="Entry lambda expression", span="305-305", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_816 [label="Entry lambda expression", span="1308-1308", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1977 [label="Entry lambda expression", span="3050-3050", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_153 [label="Exit lambda expression", span="276-276", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_170 [label="Exit lambda expression", span="299-299", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_171 [label="Entry lambda expression", span="301-301", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_173 [label="Exit lambda expression", span="301-301", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_174 [label="Entry lambda expression", span="303-303", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_176 [label="Exit lambda expression", span="303-303", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_179 [label="Exit lambda expression", span="305-305", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_219 [label="Entry lambda expression", span="378-378", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_221 [label="Exit lambda expression", span="378-378", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_223 [label="Entry lambda expression", span="382-382", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_225 [label="Exit lambda expression", span="382-382", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_574 [label="Entry lambda expression", span="938-938", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_576 [label="Exit lambda expression", span="938-938", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_667 [label="Exit lambda expression", span="1072-1076", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_683 [label="Exit lambda expression", span="1093-1097", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_776 [label="Entry lambda expression", span="1262-1262", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_778 [label="Exit lambda expression", span="1262-1262", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_783 [label="Entry lambda expression", span="1270-1270", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_785 [label="Exit lambda expression", span="1270-1270", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_790 [label="Entry lambda expression", span="1278-1278", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_792 [label="Exit lambda expression", span="1278-1278", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_801 [label="Entry lambda expression", span="1289-1289", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_803 [label="Exit lambda expression", span="1289-1289", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_818 [label="Exit lambda expression", span="1308-1308", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_969 [label="Entry lambda expression", span="1560-1560", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_971 [label="Exit lambda expression", span="1560-1560", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_972 [label="Entry lambda expression", span="1563-1563", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_974 [label="Exit lambda expression", span="1563-1563", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_975 [label="Entry lambda expression", span="1566-1566", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_977 [label="Exit lambda expression", span="1566-1566", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_978 [label="Entry lambda expression", span="1569-1569", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_980 [label="Exit lambda expression", span="1569-1569", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_981 [label="Entry lambda expression", span="1575-1575", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_983 [label="Exit lambda expression", span="1575-1575", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1006 [label="Entry lambda expression", span="1596-1596", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1008 [label="Exit lambda expression", span="1596-1596", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1012 [label="Entry lambda expression", span="1609-1609", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1014 [label="Exit lambda expression", span="1609-1609", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1317 [label="Entry lambda expression", span="2036-2036", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1319 [label="Exit lambda expression", span="2036-2036", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1330 [label="Entry lambda expression", span="2055-2055", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1332 [label="Exit lambda expression", span="2055-2055", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1337 [label="Entry lambda expression", span="2063-2063", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1339 [label="Exit lambda expression", span="2063-2063", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1344 [label="Entry lambda expression", span="2072-2072", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1346 [label="Exit lambda expression", span="2072-2072", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1358 [label="Entry lambda expression", span="2092-2092", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1360 [label="Exit lambda expression", span="2092-2092", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1367 [label="Exit lambda expression", span="2100-2100", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1438 [label="Exit lambda expression", span="2209-2209", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1540 [label="Exit lambda expression", span="2361-2361", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_1979 [label="Exit lambda expression", span="3050-3050", cluster="lambda expression", file="JTokenWriterTest.cs"];
m49_2272 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="JTokenWriterTest.cs"];
m49_1098 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="JTokenWriterTest.cs"];
m49_1148 [label="Entry System.Convert.ToInt32(char)", span="0-0", cluster="System.Convert.ToInt32(char)", file="JTokenWriterTest.cs"];
m49_877 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", span="1419-1419", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JTokenWriterTest.cs"];
m49_882 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="1426-1426", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JTokenWriterTest.cs"];
m49_884 [label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1428-1428", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JTokenWriterTest.cs"];
m49_887 [label="Assert.AreEqual(JsonToken.Bytes, reader.TokenType)", span="1431-1431", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JTokenWriterTest.cs"];
m49_889 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="1433-1433", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JTokenWriterTest.cs"];
m49_881 [label="Assert.IsTrue(reader.Read())", span="1425-1425", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JTokenWriterTest.cs"];
m49_883 [label="Assert.IsTrue(reader.Read())", span="1427-1427", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JTokenWriterTest.cs"];
m49_888 [label="Assert.IsTrue(reader.Read())", span="1432-1432", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JTokenWriterTest.cs"];
m49_880 [label="JsonReader reader = new JsonTextReader(new StringReader(@''[1,''' + Convert.ToBase64String(helloWorldData) + @''']''))", span="1424-1424", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JTokenWriterTest.cs"];
m49_885 [label="byte[] data = reader.ReadAsBytes()", span="1429-1429", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JTokenWriterTest.cs"];
m49_886 [label="CollectionAssert.AreEquivalent(helloWorldData, data)", span="1430-1430", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JTokenWriterTest.cs"];
m49_890 [label="Assert.IsFalse(reader.Read())", span="1435-1435", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JTokenWriterTest.cs"];
m49_879 [label="byte[] helloWorldData = Encoding.UTF8.GetBytes(helloWorld)", span="1422-1422", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JTokenWriterTest.cs"];
m49_878 [label="string helloWorld = ''Hello world!''", span="1421-1421", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JTokenWriterTest.cs"];
m49_891 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", span="1419-1419", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JTokenWriterTest.cs"];
m49_935 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", span="1506-1506", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="JTokenWriterTest.cs"];
m49_938 [label="reader.Read()", span="1531-1531", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="JTokenWriterTest.cs"];
m49_937 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1530-1530", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="JTokenWriterTest.cs"];
m49_936 [label="string json = @''[\r\n  true,\r\n  {\r\n    ''''integer'''': 99,\r\n    ''''string'''': ''''how now brown cow?'''',\r\n    ''''array'''': [\r\n      0,\r\n      1,\r\n      2,\r\n      3,\r\n      4,\r\n      {\r\n        ''''decimal'''': 990.00990099\r\n      },\r\n      5\r\n    ]\r\n  },\r\n  ''''This is a string.'''',\r\n  null,\r\n  null\r\n]''", span="1508-1528", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="JTokenWriterTest.cs"];
m49_939 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", span="1506-1506", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="JTokenWriterTest.cs"];
m49_605 [label="Entry System.IO.StringWriter.StringWriter()", span="0-0", cluster="System.IO.StringWriter.StringWriter()", file="JTokenWriterTest.cs"];
m49_1948 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", span="3006-3006", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JTokenWriterTest.cs"];
m49_1952 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3013-3013", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JTokenWriterTest.cs"];
m49_1953 [label="Assert.AreEqual(32m, reader.Value)", span="3014-3014", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JTokenWriterTest.cs"];
m49_1950 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3010-3010", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JTokenWriterTest.cs"];
m49_1951 [label="reader.ReadAsDecimal()", span="3012-3012", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JTokenWriterTest.cs"];
m49_1949 [label="string json = @''0x20''", span="3008-3008", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JTokenWriterTest.cs"];
m49_1954 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", span="3006-3006", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JTokenWriterTest.cs"];
m49_75 [label="Assert.AreEqual(@'''''''', jsonTextReader.Value)", span="163-163", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JTokenWriterTest.cs", color=green, community=0];
m49_2207 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", span="3353-3353", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JTokenWriterTest.cs"];
m49_2219 [label="Assert.AreEqual(decimal.MaxValue, max)", span="3371-3371", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JTokenWriterTest.cs"];
m49_2221 [label="Assert.AreEqual(decimal.MinValue, min)", span="3374-3374", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JTokenWriterTest.cs"];
m49_2217 [label="Assert.IsTrue(reader.Read())", span="3368-3368", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JTokenWriterTest.cs"];
m49_2222 [label="Assert.IsTrue(reader.Read())", span="3376-3376", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JTokenWriterTest.cs"];
m49_2216 [label="JsonTextReader reader = new JsonTextReader(sr)", span="3366-3366", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JTokenWriterTest.cs"];
m49_2215 [label="StringReader sr = new StringReader(json)", span="3365-3365", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JTokenWriterTest.cs"];
m49_2218 [label="decimal? max = reader.ReadAsDecimal()", span="3370-3370", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JTokenWriterTest.cs"];
m49_2220 [label="decimal? min = reader.ReadAsDecimal()", span="3373-3373", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JTokenWriterTest.cs"];
m49_2214 [label="string json = sw.ToString()", span="3363-3363", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JTokenWriterTest.cs"];
m49_2208 [label="StringWriter sw = new StringWriter()", span="3355-3355", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JTokenWriterTest.cs"];
m49_2213 [label="writer.WriteEndArray()", span="3361-3361", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JTokenWriterTest.cs"];
m49_2209 [label="JsonTextWriter writer = new JsonTextWriter(sw)", span="3356-3356", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JTokenWriterTest.cs"];
m49_2212 [label="writer.WriteValue(decimal.MinValue)", span="3360-3360", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JTokenWriterTest.cs"];
m49_2210 [label="writer.WriteStartArray()", span="3358-3358", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JTokenWriterTest.cs"];
m49_2211 [label="writer.WriteValue(decimal.MaxValue)", span="3359-3359", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JTokenWriterTest.cs"];
m49_2223 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", span="3353-3353", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JTokenWriterTest.cs"];
m49_1326 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", span="2051-2051", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="JTokenWriterTest.cs"];
m49_1327 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''new Date()''))", span="2053-2053", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="JTokenWriterTest.cs"];
m49_1328 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDecimal(); }, ''Error reading decimal. Unexpected token: StartConstructor. Path '', line 1, position 9.'')", span="2055-2055", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="JTokenWriterTest.cs"];
m49_1329 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", span="2051-2051", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="JTokenWriterTest.cs"];
m49_863 [label="Entry System.IO.StringReader.ReadLine()", span="0-0", cluster="System.IO.StringReader.ReadLine()", file="JTokenWriterTest.cs"];
m49_893 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", span="1439-1439", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JTokenWriterTest.cs"];
m49_898 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1446-1446", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JTokenWriterTest.cs"];
m49_901 [label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1449-1449", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JTokenWriterTest.cs"];
m49_905 [label="Assert.AreEqual(JsonToken.Bytes, reader.TokenType)", span="1453-1453", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JTokenWriterTest.cs"];
m49_907 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1455-1455", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JTokenWriterTest.cs"];
m49_897 [label="Assert.IsTrue(reader.Read())", span="1445-1445", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JTokenWriterTest.cs"];
m49_899 [label="Assert.IsTrue(reader.Read())", span="1447-1447", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JTokenWriterTest.cs"];
m49_900 [label="Assert.IsTrue(reader.Read())", span="1448-1448", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JTokenWriterTest.cs"];
m49_902 [label="Assert.IsTrue(reader.Read())", span="1450-1450", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JTokenWriterTest.cs"];
m49_906 [label="Assert.IsTrue(reader.Read())", span="1454-1454", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JTokenWriterTest.cs"];
m49_896 [label="JsonReader reader = new JsonTextReader(new StringReader(@''{num:1,data:''' + Convert.ToBase64String(helloWorldData) + @'''}''))", span="1444-1444", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JTokenWriterTest.cs"];
m49_904 [label="CollectionAssert.AreEquivalent(helloWorldData, data)", span="1452-1452", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JTokenWriterTest.cs"];
m49_908 [label="Assert.IsFalse(reader.Read())", span="1457-1457", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JTokenWriterTest.cs"];
m49_903 [label="byte[] data = reader.ReadAsBytes()", span="1451-1451", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JTokenWriterTest.cs"];
m49_895 [label="byte[] helloWorldData = Encoding.UTF8.GetBytes(helloWorld)", span="1442-1442", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JTokenWriterTest.cs"];
m49_894 [label="string helloWorld = ''Hello world!''", span="1441-1441", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JTokenWriterTest.cs"];
m49_909 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", span="1439-1439", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JTokenWriterTest.cs"];
m49_1094 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="873-873", cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="JTokenWriterTest.cs"];
m49_77 [label="Assert.AreEqual(JsonToken.String, jsonTextReader.TokenType)", span="166-166", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JTokenWriterTest.cs"];
m49_663 [label="Entry long.ToString(System.IFormatProvider)", span="0-0", cluster="long.ToString(System.IFormatProvider)", file="JTokenWriterTest.cs"];
m49_1529 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", span="2349-2349", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JTokenWriterTest.cs"];
m49_1533 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2356-2356", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JTokenWriterTest.cs"];
m49_1535 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2359-2359", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JTokenWriterTest.cs"];
m49_1532 [label="Assert.IsTrue(reader.Read())", span="2355-2355", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JTokenWriterTest.cs"];
m49_1534 [label="Assert.IsTrue(reader.Read())", span="2358-2358", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JTokenWriterTest.cs"];
m49_1531 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2353-2353", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JTokenWriterTest.cs"];
m49_1536 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsInt32(); }, ''Input string '1.1' is not a valid integer. Path 'Name', line 1, position 12.'')", span="2361-2361", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JTokenWriterTest.cs"];
m49_1530 [label="string json = @''{''''Name'''': 1.1}''", span="2351-2351", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JTokenWriterTest.cs"];
m49_1537 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", span="2349-2349", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JTokenWriterTest.cs"];
m49_1941 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", span="2994-2994", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JTokenWriterTest.cs"];
m49_1945 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3001-3001", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JTokenWriterTest.cs"];
m49_1946 [label="Assert.AreEqual(8m, reader.Value)", span="3002-3002", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JTokenWriterTest.cs"];
m49_1943 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2998-2998", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JTokenWriterTest.cs"];
m49_1944 [label="reader.ReadAsDecimal()", span="3000-3000", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JTokenWriterTest.cs"];
m49_1942 [label="string json = @''010''", span="2996-2996", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JTokenWriterTest.cs"];
m49_1947 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", span="2994-2994", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JTokenWriterTest.cs"];
m49_337 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", span="556-556", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JTokenWriterTest.cs"];
m49_340 [label="Assert.IsTrue(ms.CanRead)", span="561-561", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JTokenWriterTest.cs"];
m49_345 [label="Assert.IsTrue(ms.CanRead)", span="568-568", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JTokenWriterTest.cs"];
m49_347 [label="Assert.IsTrue(ms.CanRead)", span="570-570", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JTokenWriterTest.cs"];
m49_339 [label="JsonTextReader reader = new JsonTextReader(new StreamReader(ms))", span="559-559", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JTokenWriterTest.cs"];
m49_344 [label="reader = new JsonTextReader(new StreamReader(ms)) { CloseInput = false }", span="566-566", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JTokenWriterTest.cs"];
m49_338 [label="MemoryStream ms = new MemoryStream()", span="558-558", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JTokenWriterTest.cs"];
m49_341 [label="reader.Close()", span="562-562", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JTokenWriterTest.cs"];
m49_343 [label="ms = new MemoryStream()", span="565-565", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JTokenWriterTest.cs"];
m49_346 [label="reader.Close()", span="569-569", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JTokenWriterTest.cs"];
m49_342 [label="Assert.IsFalse(ms.CanRead)", span="563-563", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JTokenWriterTest.cs"];
m49_348 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", span="556-556", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JTokenWriterTest.cs"];
m49_1839 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", span="2833-2833", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1843 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2858-2858", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1844 [label="Assert.AreEqual(''comment*//*hi*/'', reader.Value)", span="2859-2859", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1845 [label="Assert.AreEqual(2, reader.LineNumber)", span="2860-2860", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1847 [label="Assert.AreEqual(2, reader.LineNumber)", span="2863-2863", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1848 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2864-2864", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1850 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2867-2867", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1851 [label="Assert.AreEqual(3, reader.LineNumber)", span="2868-2868", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1853 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2871-2871", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1854 [label="Assert.AreEqual(''Name'', reader.Value)", span="2872-2872", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1855 [label="Assert.AreEqual(3, reader.LineNumber)", span="2873-2873", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1857 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2876-2876", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1858 [label="Assert.AreEqual(4, reader.LineNumber)", span="2877-2877", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1860 [label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="2880-2880", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1861 [label="Assert.AreEqual(true, reader.Value)", span="2881-2881", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1862 [label="Assert.AreEqual(4, reader.LineNumber)", span="2882-2882", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1864 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2885-2885", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1865 [label="Assert.AreEqual(''comment after true'', reader.Value)", span="2886-2886", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1866 [label="Assert.AreEqual(5, reader.LineNumber)", span="2887-2887", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1868 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2890-2890", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1869 [label="Assert.AreEqual(''comment after comma'', reader.Value)", span="2891-2891", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1870 [label="Assert.AreEqual(6, reader.LineNumber)", span="2892-2892", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1872 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2895-2895", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1873 [label="Assert.AreEqual(''ExpiryDate'', reader.Value)", span="2896-2896", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1874 [label="Assert.AreEqual(6, reader.LineNumber)", span="2897-2897", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1876 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2900-2900", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1877 [label="Assert.AreEqual(7, reader.LineNumber)", span="2901-2901", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1879 [label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2904-2904", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1880 [label="Assert.AreEqual(9, reader.LineNumber)", span="2905-2905", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1881 [label="Assert.AreEqual(''Date'', reader.Value)", span="2906-2906", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1883 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2909-2909", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1885 [label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="2912-2912", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1886 [label="Assert.AreEqual(10, reader.LineNumber)", span="2913-2913", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1888 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2916-2916", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1889 [label="Assert.AreEqual(11, reader.LineNumber)", span="2917-2917", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1891 [label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2920-2920", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1892 [label="Assert.AreEqual(11, reader.LineNumber)", span="2921-2921", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1894 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2924-2924", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1895 [label="Assert.AreEqual(''Price'', reader.Value)", span="2925-2925", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1897 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2928-2928", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1899 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2931-2931", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1900 [label="Assert.AreEqual(''Sizes'', reader.Value)", span="2932-2932", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1902 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2935-2935", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1904 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2938-2938", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1906 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2941-2941", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1908 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="2944-2944", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1910 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2947-2947", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1912 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2950-2950", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1914 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2953-2953", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1916 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2956-2956", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1918 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2959-2959", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1919 [label="Assert.AreEqual(''comment '', reader.Value)", span="2960-2960", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1921 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2963-2963", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1922 [label="Assert.AreEqual(''comment 1 '', reader.Value)", span="2964-2964", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1842 [label="Assert.IsTrue(reader.Read())", span="2857-2857", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1846 [label="Assert.IsTrue(reader.Read())", span="2862-2862", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1849 [label="Assert.IsTrue(reader.Read())", span="2866-2866", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1852 [label="Assert.IsTrue(reader.Read())", span="2870-2870", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1856 [label="Assert.IsTrue(reader.Read())", span="2875-2875", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1859 [label="Assert.IsTrue(reader.Read())", span="2879-2879", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1863 [label="Assert.IsTrue(reader.Read())", span="2884-2884", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1867 [label="Assert.IsTrue(reader.Read())", span="2889-2889", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1871 [label="Assert.IsTrue(reader.Read())", span="2894-2894", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1875 [label="Assert.IsTrue(reader.Read())", span="2899-2899", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1878 [label="Assert.IsTrue(reader.Read())", span="2903-2903", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1882 [label="Assert.IsTrue(reader.Read())", span="2908-2908", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1884 [label="Assert.IsTrue(reader.Read())", span="2911-2911", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1887 [label="Assert.IsTrue(reader.Read())", span="2915-2915", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1890 [label="Assert.IsTrue(reader.Read())", span="2919-2919", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1893 [label="Assert.IsTrue(reader.Read())", span="2923-2923", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1896 [label="Assert.IsTrue(reader.Read())", span="2927-2927", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1898 [label="Assert.IsTrue(reader.Read())", span="2930-2930", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1901 [label="Assert.IsTrue(reader.Read())", span="2934-2934", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1903 [label="Assert.IsTrue(reader.Read())", span="2937-2937", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1905 [label="Assert.IsTrue(reader.Read())", span="2940-2940", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1907 [label="Assert.IsTrue(reader.Read())", span="2943-2943", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1909 [label="Assert.IsTrue(reader.Read())", span="2946-2946", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1911 [label="Assert.IsTrue(reader.Read())", span="2949-2949", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1913 [label="Assert.IsTrue(reader.Read())", span="2952-2952", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1915 [label="Assert.IsTrue(reader.Read())", span="2955-2955", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1917 [label="Assert.IsTrue(reader.Read())", span="2958-2958", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1920 [label="Assert.IsTrue(reader.Read())", span="2962-2962", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1923 [label="Assert.IsFalse(reader.Read())", span="2966-2966", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1841 [label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2855-2855", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1840 [label="string json = @''//comment*//*hi*/\r\n{//comment\r\nName://comment\r\ntrue//comment after true'' + StringUtils.CarriageReturn +\r\n@'',//comment after comma'' + StringUtils.CarriageReturnLineFeed + \r\n@''''''ExpiryDate''''://comment''  + StringUtils.LineFeed + \r\n@''new '' + StringUtils.LineFeed +\r\n@''Date\r\n(//comment\r\nnull//comment\r\n),\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': //comment\r\n[//comment\r\n\r\n          ''''Small''''//comment\r\n]//comment\r\n}//comment \r\n//comment 1 ''", span="2835-2853", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1924 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", span="2833-2833", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JTokenWriterTest.cs"];
m49_1383 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", span="2131-2131", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JTokenWriterTest.cs"];
m49_1387 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2138-2138", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JTokenWriterTest.cs"];
m49_1389 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2141-2141", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JTokenWriterTest.cs"];
m49_1391 [label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2144-2144", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JTokenWriterTest.cs"];
m49_1392 [label="Assert.AreEqual(11806310474565, reader.Value)", span="2145-2145", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JTokenWriterTest.cs"];
m49_1394 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2148-2148", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JTokenWriterTest.cs"];
m49_1386 [label="Assert.IsTrue(reader.Read())", span="2137-2137", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JTokenWriterTest.cs"];
m49_1388 [label="Assert.IsTrue(reader.Read())", span="2140-2140", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JTokenWriterTest.cs"];
m49_1390 [label="Assert.IsTrue(reader.Read())", span="2143-2143", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JTokenWriterTest.cs"];
m49_1393 [label="Assert.IsTrue(reader.Read())", span="2147-2147", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JTokenWriterTest.cs"];
m49_1385 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2135-2135", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JTokenWriterTest.cs"];
m49_1384 [label="string json = @''{''''text'''':0xabcdef12345}''", span="2133-2133", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JTokenWriterTest.cs"];
m49_1395 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", span="2131-2131", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JTokenWriterTest.cs"];
m49_1101 [label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="882-882", cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JTokenWriterTest.cs"];
m49_96 [label="Entry System.Guid.Guid(string)", span="0-0", cluster="System.Guid.Guid(string)", file="JTokenWriterTest.cs"];
m49_2023 [label="Entry System.Convert.ToDouble(string, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToDouble(string, System.IFormatProvider)", file="JTokenWriterTest.cs"];
m49_1233 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="JTokenWriterTest.cs"];
m49_1467 [label="Entry System.TimeSpan.FromMinutes(double)", span="0-0", cluster="System.TimeSpan.FromMinutes(double)", file="JTokenWriterTest.cs"];
m49_180 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", span="314-314", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JTokenWriterTest.cs"];
m49_184 [label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", span="323-323", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JTokenWriterTest.cs"];
m49_186 [label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="326-326", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JTokenWriterTest.cs"];
m49_190 [label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", span="337-337", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JTokenWriterTest.cs"];
m49_183 [label="Assert.IsTrue(jsonTextReader.Read())", span="322-322", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JTokenWriterTest.cs"];
m49_185 [label="Assert.IsTrue(jsonTextReader.Read())", span="325-325", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JTokenWriterTest.cs"];
m49_189 [label="Assert.IsTrue(jsonTextReader.Read())", span="336-336", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JTokenWriterTest.cs"];
m49_191 [label="Assert.IsFalse(jsonTextReader.Read())", span="339-339", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JTokenWriterTest.cs"];
m49_182 [label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="320-320", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JTokenWriterTest.cs"];
m49_187 [label="jsonTextReader.ReadAsBytes()", span="330-330", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JTokenWriterTest.cs"];
m49_188 [label=FormatException, span="332-332", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JTokenWriterTest.cs"];
m49_181 [label="string json = @''{\r\n    ChildId: '123'\r\n}''", span="316-318", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JTokenWriterTest.cs"];
m49_192 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", span="314-314", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JTokenWriterTest.cs"];
m49_1980 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", span="3054-3054", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JTokenWriterTest.cs"];
m49_1983 [label="Assert.AreEqual(''6,0221418E+23'', d.ToString(new CultureInfo(''fr-FR'')))", span="3060-3060", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JTokenWriterTest.cs"];
m49_1984 [label="Assert.AreEqual(''602214180000000000000000'', d.ToString(''0.#############################################################################''))", span="3061-3061", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JTokenWriterTest.cs"];
m49_1989 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3070-3070", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JTokenWriterTest.cs"];
m49_1990 [label="Assert.AreEqual(0d, reader.Value)", span="3071-3071", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JTokenWriterTest.cs"];
m49_1992 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3074-3074", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JTokenWriterTest.cs"];
m49_1993 [label="Assert.AreEqual(0d, reader.Value)", span="3075-3075", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JTokenWriterTest.cs"];
m49_1995 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3078-3078", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JTokenWriterTest.cs"];
m49_1996 [label="Assert.AreEqual(0.0000025d, reader.Value)", span="3079-3079", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JTokenWriterTest.cs"];
m49_1998 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3082-3082", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JTokenWriterTest.cs"];
m49_1999 [label="Assert.AreEqual(3000000000d, reader.Value)", span="3083-3083", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JTokenWriterTest.cs"];
m49_2001 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3086-3086", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JTokenWriterTest.cs"];
m49_2002 [label="Assert.AreEqual(602214180000000000000000d, reader.Value)", span="3087-3087", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JTokenWriterTest.cs"];
m49_2007 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3097-3097", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JTokenWriterTest.cs"];
m49_2008 [label="Assert.AreEqual(0m, reader.Value)", span="3098-3098", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JTokenWriterTest.cs"];
m49_2010 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3101-3101", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JTokenWriterTest.cs"];
m49_2011 [label="Assert.AreEqual(0m, reader.Value)", span="3102-3102", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JTokenWriterTest.cs"];
m49_2013 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3105-3105", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JTokenWriterTest.cs"];
m49_2014 [label="Assert.AreEqual(0.0000025m, reader.Value)", span="3106-3106", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JTokenWriterTest.cs"];
m49_2016 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3109-3109", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JTokenWriterTest.cs"];
m49_2017 [label="Assert.AreEqual(3000000000m, reader.Value)", span="3110-3110", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JTokenWriterTest.cs"];
m49_2019 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3113-3113", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JTokenWriterTest.cs"];
m49_2020 [label="Assert.AreEqual(602214180000000000000000m, reader.Value)", span="3114-3114", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JTokenWriterTest.cs"];
m49_1987 [label="reader.Read()", span="3067-3067", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JTokenWriterTest.cs"];
m49_1988 [label="reader.Read()", span="3069-3069", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JTokenWriterTest.cs"];
m49_1991 [label="reader.Read()", span="3073-3073", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JTokenWriterTest.cs"];
m49_1994 [label="reader.Read()", span="3077-3077", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JTokenWriterTest.cs"];
m49_1997 [label="reader.Read()", span="3081-3081", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JTokenWriterTest.cs"];
m49_2000 [label="reader.Read()", span="3085-3085", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JTokenWriterTest.cs"];
m49_2003 [label="reader.Read()", span="3089-3089", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JTokenWriterTest.cs"];
m49_2005 [label="reader.Read()", span="3094-3094", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JTokenWriterTest.cs"];
m49_2021 [label="reader.Read()", span="3116-3116", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JTokenWriterTest.cs"];
m49_1986 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3065-3065", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JTokenWriterTest.cs"];
m49_2004 [label="reader = new JsonTextReader(new StringReader(json))", span="3092-3092", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JTokenWriterTest.cs"];
m49_1982 [label="d = Convert.ToDouble(''6.0221418e23'', CultureInfo.InvariantCulture)", span="3058-3058", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JTokenWriterTest.cs"];
m49_1985 [label="string json = @''[0e-10,0E-10,0.25e-5,0.3e10,6.0221418e23]''", span="3063-3063", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JTokenWriterTest.cs"];
m49_2006 [label="reader.ReadAsDecimal()", span="3096-3096", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JTokenWriterTest.cs"];
m49_2009 [label="reader.ReadAsDecimal()", span="3100-3100", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JTokenWriterTest.cs"];
m49_2012 [label="reader.ReadAsDecimal()", span="3104-3104", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JTokenWriterTest.cs"];
m49_2015 [label="reader.ReadAsDecimal()", span="3108-3108", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JTokenWriterTest.cs"];
m49_2018 [label="reader.ReadAsDecimal()", span="3112-3112", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JTokenWriterTest.cs"];
m49_1981 [label="double d", span="3056-3056", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JTokenWriterTest.cs"];
m49_2022 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", span="3054-3054", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JTokenWriterTest.cs"];
m49_1087 [label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0", cluster="System.Text.StringBuilder.StringBuilder()", file="JTokenWriterTest.cs"];
m49_1468 [label="Entry System.TimeSpan.Add(System.TimeSpan)", span="0-0", cluster="System.TimeSpan.Add(System.TimeSpan)", file="JTokenWriterTest.cs"];
m49_1427 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", span="2197-2197", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JTokenWriterTest.cs"];
m49_1431 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2204-2204", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JTokenWriterTest.cs"];
m49_1433 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2207-2207", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JTokenWriterTest.cs"];
m49_1430 [label="Assert.IsTrue(reader.Read())", span="2203-2203", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JTokenWriterTest.cs"];
m49_1432 [label="Assert.IsTrue(reader.Read())", span="2206-2206", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JTokenWriterTest.cs"];
m49_1429 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2201-2201", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JTokenWriterTest.cs"];
m49_1434 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDateTimeOffset(); }, ''Could not convert string to DateTimeOffset: blablahbla. Path 'Offset', line 1, position 22.'')", span="2209-2209", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JTokenWriterTest.cs"];
m49_1428 [label="string json = @''{''''Offset'''':''''blablahbla''''}''", span="2199-2199", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JTokenWriterTest.cs"];
m49_1435 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", span="2197-2197", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JTokenWriterTest.cs"];
m49_2233 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", span="3407-3407", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JTokenWriterTest.cs"];
m49_2237 [label="Assert.AreEqual(1, r.LineNumber)", span="3414-3414", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JTokenWriterTest.cs"];
m49_2238 [label="Assert.AreEqual(1, r.LinePosition)", span="3415-3415", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JTokenWriterTest.cs"];
m49_2240 [label="Assert.AreEqual(1, r.LineNumber)", span="3418-3418", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JTokenWriterTest.cs"];
m49_2241 [label="Assert.AreEqual(5, r.LinePosition)", span="3419-3419", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JTokenWriterTest.cs"];
m49_2243 [label="Assert.AreEqual(1, r.LineNumber)", span="3422-3422", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JTokenWriterTest.cs"];
m49_2244 [label="Assert.AreEqual(9, r.LinePosition)", span="3423-3423", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JTokenWriterTest.cs"];
m49_2246 [label="Assert.AreEqual(1, r.LineNumber)", span="3426-3426", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JTokenWriterTest.cs"];
m49_2247 [label="Assert.AreEqual(10, r.LinePosition)", span="3427-3427", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JTokenWriterTest.cs"];
m49_2252 [label="Assert.AreEqual(2, r.LineNumber)", span="3436-3436", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JTokenWriterTest.cs"];
m49_2253 [label="Assert.AreEqual(1, r.LinePosition)", span="3437-3437", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JTokenWriterTest.cs"];
m49_2255 [label="Assert.AreEqual(2, r.LineNumber)", span="3440-3440", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JTokenWriterTest.cs"];
m49_2256 [label="Assert.AreEqual(5, r.LinePosition)", span="3441-3441", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JTokenWriterTest.cs"];
m49_2258 [label="Assert.AreEqual(2, r.LineNumber)", span="3444-3444", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JTokenWriterTest.cs"];
m49_2259 [label="Assert.AreEqual(9, r.LinePosition)", span="3445-3445", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JTokenWriterTest.cs"];
m49_2261 [label="Assert.AreEqual(2, r.LineNumber)", span="3448-3448", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JTokenWriterTest.cs"];
m49_2262 [label="Assert.AreEqual(10, r.LinePosition)", span="3449-3449", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JTokenWriterTest.cs"];
m49_2236 [label="Assert.IsTrue(r.Read())", span="3413-3413", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JTokenWriterTest.cs"];
m49_2239 [label="Assert.IsTrue(r.Read())", span="3417-3417", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JTokenWriterTest.cs"];
m49_2242 [label="Assert.IsTrue(r.Read())", span="3421-3421", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JTokenWriterTest.cs"];
m49_2245 [label="Assert.IsTrue(r.Read())", span="3425-3425", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JTokenWriterTest.cs"];
m49_2248 [label="Assert.IsFalse(r.Read())", span="3429-3429", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JTokenWriterTest.cs"];
m49_2251 [label="Assert.IsTrue(r.Read())", span="3435-3435", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JTokenWriterTest.cs"];
m49_2254 [label="Assert.IsTrue(r.Read())", span="3439-3439", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JTokenWriterTest.cs"];
m49_2257 [label="Assert.IsTrue(r.Read())", span="3443-3443", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JTokenWriterTest.cs"];
m49_2260 [label="Assert.IsTrue(r.Read())", span="3447-3447", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JTokenWriterTest.cs"];
m49_2263 [label="Assert.IsFalse(r.Read())", span="3451-3451", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JTokenWriterTest.cs"];
m49_2235 [label="JsonTextReader r = new JsonTextReader(new StringReader(json1))", span="3411-3411", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JTokenWriterTest.cs"];
m49_2250 [label="r = new JsonTextReader(new StringReader(json2))", span="3433-3433", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JTokenWriterTest.cs"];
m49_2249 [label="string json2 = ''\n{'a':'bc'}''", span="3431-3431", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JTokenWriterTest.cs"];
m49_2234 [label="string json1 = ''{'a':'bc'}''", span="3409-3409", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JTokenWriterTest.cs"];
m49_2264 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", span="3407-3407", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JTokenWriterTest.cs"];
m49_765 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.FakeBufferPool.FakeBufferPool()", span="1176-1176", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FakeBufferPool.FakeBufferPool()", file="JTokenWriterTest.cs"];
m49_84 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", span="177-177", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", file="JTokenWriterTest.cs"];
m49_88 [label="CollectionAssert.AreEqual(expected, data)", span="183-183", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", file="JTokenWriterTest.cs"];
m49_92 [label="CollectionAssert.AreEqual(expected, data)", span="189-189", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", file="JTokenWriterTest.cs"];
m49_85 [label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader('''AAAAAAAAAAAAAAAAAAAAAAAAAAABAAAA'''))", span="179-179", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", file="JTokenWriterTest.cs"];
m49_89 [label="jsonTextReader = new JsonTextReader(new StringReader('''AAAAAAAA-AAAA-AAAA-AAAA-AAAAAAABAAAA'''))", span="185-185", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", file="JTokenWriterTest.cs"];
m49_86 [label="byte[] data = jsonTextReader.ReadAsBytes()", span="180-180", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", file="JTokenWriterTest.cs"];
m49_87 [label="byte[] expected = Convert.FromBase64String(''AAAAAAAAAAAAAAAAAAAAAAAAAAABAAAA'')", span="181-181", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", file="JTokenWriterTest.cs"];
m49_90 [label="data = jsonTextReader.ReadAsBytes()", span="186-186", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", file="JTokenWriterTest.cs"];
m49_91 [label="expected = new Guid(''AAAAAAAA-AAAA-AAAA-AAAA-AAAAAAABAAAA'').ToByteArray()", span="187-187", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", file="JTokenWriterTest.cs"];
m49_93 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", span="177-177", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", file="JTokenWriterTest.cs"];
m49_1605 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", span="2450-2450", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JTokenWriterTest.cs"];
m49_1613 [label="Assert.AreEqual(new DateTime(631136448000000000), reader.Value)", span="2476-2476", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JTokenWriterTest.cs"];
m49_1610 [label="reader.Read()", span="2472-2472", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JTokenWriterTest.cs"];
m49_1612 [label="Assert.IsTrue(reader.Read())", span="2475-2475", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JTokenWriterTest.cs"];
m49_1607 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2465-2465", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JTokenWriterTest.cs"];
m49_1609 [label="i < 13", span="2470-2470", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JTokenWriterTest.cs"];
m49_1611 [label="i++", span="2470-2470", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JTokenWriterTest.cs"];
m49_1606 [label="string json = @''[\r\n  {\r\n    ''''Name'''': ''''Jim'''',\r\n    ''''BirthDate'''': ''''\/Date(978048000000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(978048000000)\/''''\r\n  },\r\n  {\r\n    ''''Name'''': ''''Jim'''',\r\n    ''''BirthDate'''': ''''\/Date(978048000000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(978048000000)\/''''\r\n  }\r\n]''", span="2452-2463", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JTokenWriterTest.cs"];
m49_1608 [label="int i = 0", span="2470-2470", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JTokenWriterTest.cs"];
m49_1614 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", span="2450-2450", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JTokenWriterTest.cs"];
m49_136 [label="Entry Unk.IsFalse", span="", cluster="Unk.IsFalse", file="JTokenWriterTest.cs"];
m49_668 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", span="1081-1081", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JTokenWriterTest.cs"];
m49_673 [label="Assert.AreEqual(i, reader.Value)", span="1088-1088", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JTokenWriterTest.cs"];
m49_672 [label="Assert.AreEqual(typeof(long), reader.ValueType)", span="1087-1087", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JTokenWriterTest.cs"];
m49_671 [label="reader.Read()", span="1086-1086", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JTokenWriterTest.cs"];
m49_670 [label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="1085-1085", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JTokenWriterTest.cs"];
m49_669 [label="long i = int.MinValue", span="1083-1083", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JTokenWriterTest.cs"];
m49_674 [label="int j = 1", span="1090-1090", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JTokenWriterTest.cs"];
m49_677 [label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n                {\r\n                    reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)));\r\n                    reader.ReadAsInt32();\r\n                }, ''JSON integer '' + total + '' is too large or small for an Int32. Path '', line 1, position 11.'')", span="1093-1097", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JTokenWriterTest.cs"];
m49_676 [label="long total = -j + i", span="1092-1092", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JTokenWriterTest.cs"];
m49_675 [label="j < 1000", span="1090-1090", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JTokenWriterTest.cs"];
m49_678 [label="j++", span="1090-1090", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JTokenWriterTest.cs"];
m49_679 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", span="1081-1081", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JTokenWriterTest.cs"];
m49_1235 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", span="1917-1917", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JTokenWriterTest.cs"];
m49_1239 [label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="1923-1923", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JTokenWriterTest.cs"];
m49_1241 [label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1926-1926", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JTokenWriterTest.cs"];
m49_1242 [label="Assert.AreEqual(250L, jsonReader.Value)", span="1927-1927", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JTokenWriterTest.cs"];
m49_1244 [label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1930-1930", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JTokenWriterTest.cs"];
m49_1245 [label="Assert.AreEqual(250L, jsonReader.Value)", span="1931-1931", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JTokenWriterTest.cs"];
m49_1247 [label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1934-1934", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JTokenWriterTest.cs"];
m49_1248 [label="Assert.AreEqual(250L, jsonReader.Value)", span="1935-1935", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JTokenWriterTest.cs"];
m49_1250 [label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="1938-1938", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JTokenWriterTest.cs"];
m49_1238 [label="Assert.IsTrue(jsonReader.Read())", span="1922-1922", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JTokenWriterTest.cs"];
m49_1240 [label="Assert.IsTrue(jsonReader.Read())", span="1925-1925", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JTokenWriterTest.cs"];
m49_1243 [label="Assert.IsTrue(jsonReader.Read())", span="1929-1929", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JTokenWriterTest.cs"];
m49_1246 [label="Assert.IsTrue(jsonReader.Read())", span="1933-1933", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JTokenWriterTest.cs"];
m49_1249 [label="Assert.IsTrue(jsonReader.Read())", span="1937-1937", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JTokenWriterTest.cs"];
m49_1251 [label="Assert.IsFalse(jsonReader.Read())", span="1940-1940", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JTokenWriterTest.cs"];
m49_1237 [label="JsonTextReader jsonReader = new JsonTextReader(s)", span="1920-1920", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JTokenWriterTest.cs"];
m49_1236 [label="StringReader s = new StringReader(@''[0372, 0xFA, 0XFA]'')", span="1919-1919", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JTokenWriterTest.cs"];
m49_1252 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", span="1917-1917", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JTokenWriterTest.cs"];
m49_79 [label="Assert.IsTrue(jsonTextReader.Read())", span="169-169", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JTokenWriterTest.cs"];
m49_137 [label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="371-371", cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="JTokenWriterTest.cs"];
m49_800 [label="Entry System.Convert.ToBase64String(byte[])", span="0-0", cluster="System.Convert.ToBase64String(byte[])", file="JTokenWriterTest.cs"];
m49_351 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", span="574-574", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="JTokenWriterTest.cs"];
m49_353 [label="JsonReader jsonReader = new JsonTextReader(new StringReader(input))", span="597-597", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="JTokenWriterTest.cs"];
m49_352 [label="string input = @''{\r\n''''matches'''' : [\r\n{''''t'''':''''C'''', ''''n'''':''''Citigroup Inc.'''', ''''e'''':''''NYSE'''', ''''id'''':''''662713''''}\r\n,{''''t'''':''''CHL'''', ''''n'''':''''China Mobile Ltd. (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''660998''''}\r\n,{''''t'''':''''PTR'''', ''''n'''':''''PetroChina Company Limited (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''664536''''}\r\n,{''''t'''':''''RIO'''', ''''n'''':''''Companhia Vale do Rio Doce (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''671472''''}\r\n,{''''t'''':''''RIOPR'''', ''''n'''':''''Companhia Vale do Rio Doce (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''3512643''''}\r\n,{''''t'''':''''CSCO'''', ''''n'''':''''Cisco Systems, Inc.'''', ''''e'''':''''NASDAQ'''', ''''id'''':''''99624''''}\r\n,{''''t'''':''''CVX'''', ''''n'''':''''Chevron Corporation'''', ''''e'''':''''NYSE'''', ''''id'''':''''667226''''}\r\n,{''''t'''':''''TM'''', ''''n'''':''''Toyota Motor Corporation (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''655880''''}\r\n,{''''t'''':''''JPM'''', ''''n'''':''''JPMorgan Chase \\x26 Co.'''', ''''e'''':''''NYSE'''', ''''id'''':''''665639''''}\r\n,{''''t'''':''''COP'''', ''''n'''':''''ConocoPhillips'''', ''''e'''':''''NYSE'''', ''''id'''':''''1691168''''}\r\n,{''''t'''':''''LFC'''', ''''n'''':''''China Life Insurance Company Ltd. (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''688679''''}\r\n,{''''t'''':''''NOK'''', ''''n'''':''''Nokia Corporation (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''657729''''}\r\n,{''''t'''':''''KO'''', ''''n'''':''''The Coca-Cola Company'''', ''''e'''':''''NYSE'''', ''''id'''':''''6550''''}\r\n,{''''t'''':''''VZ'''', ''''n'''':''''Verizon Communications Inc.'''', ''''e'''':''''NYSE'''', ''''id'''':''''664887''''}\r\n,{''''t'''':''''AMX'''', ''''n'''':''''America Movil S.A.B de C.V. (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''665834''''}],\r\n''''all'''' : false\r\n}\r\n''", span="576-595", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="JTokenWriterTest.cs"];
m49_354 [label="jsonReader.Read()", span="599-599", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="JTokenWriterTest.cs"];
m49_355 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", span="574-574", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="JTokenWriterTest.cs"];
m49_207 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", span="368-368", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JTokenWriterTest.cs"];
m49_209 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="372-372", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JTokenWriterTest.cs"];
m49_211 [label="reader = new JsonTextReader(new StringReader(json))", span="376-376", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JTokenWriterTest.cs"];
m49_213 [label="reader = new JsonTextReader(new StringReader(json))", span="380-380", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JTokenWriterTest.cs"];
m49_208 [label="string json = ''0aq2dun13.hod''", span="370-370", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JTokenWriterTest.cs"];
m49_210 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected character encountered while parsing number: q. Path '', line 1, position 2.'')", span="374-374", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JTokenWriterTest.cs"];
m49_212 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDecimal(); }, ''Unexpected character encountered while parsing number: q. Path '', line 1, position 2.'')", span="378-378", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JTokenWriterTest.cs"];
m49_214 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsInt32(); }, ''Unexpected character encountered while parsing number: q. Path '', line 1, position 2.'')", span="382-382", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JTokenWriterTest.cs"];
m49_215 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", span="368-368", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JTokenWriterTest.cs"];
m49_2025 [label="Entry double.ToString(string)", span="0-0", cluster="double.ToString(string)", file="JTokenWriterTest.cs"];
m49_299 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", span="489-489", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JTokenWriterTest.cs"];
m49_305 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="499-499", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JTokenWriterTest.cs"];
m49_307 [label="Assert.AreEqual(2, s.Length)", span="502-502", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JTokenWriterTest.cs"];
m49_309 [label="Assert.AreEqual(1, stringInfo.LengthInTextElements)", span="505-505", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JTokenWriterTest.cs"];
m49_302 [label="Assert.IsTrue(reader.Read())", span="495-495", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JTokenWriterTest.cs"];
m49_303 [label="Assert.IsTrue(reader.Read())", span="496-496", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JTokenWriterTest.cs"];
m49_304 [label="Assert.IsTrue(reader.Read())", span="498-498", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JTokenWriterTest.cs"];
m49_301 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="493-493", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JTokenWriterTest.cs"];
m49_306 [label="string s = reader.Value.ToString()", span="501-501", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JTokenWriterTest.cs"];
m49_308 [label="StringInfo stringInfo = new StringInfo(s)", span="504-504", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JTokenWriterTest.cs"];
m49_300 [label="string json = @''{ ''''MATHEMATICAL ITALIC CAPITAL ALPHA'''': ''''\uD835\uDEE2'''' }''", span="491-491", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JTokenWriterTest.cs"];
m49_310 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", span="489-489", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JTokenWriterTest.cs"];
m49_1737 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", span="2676-2676", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JTokenWriterTest.cs"];
m49_1741 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2682-2682", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JTokenWriterTest.cs"];
m49_1743 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2685-2685", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JTokenWriterTest.cs"];
m49_1740 [label="Assert.IsTrue(reader.Read())", span="2681-2681", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JTokenWriterTest.cs"];
m49_1742 [label="Assert.IsTrue(reader.Read())", span="2684-2684", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JTokenWriterTest.cs"];
m49_1739 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2679-2679", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JTokenWriterTest.cs"];
m49_1738 [label="string json = ''[]''", span="2678-2678", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JTokenWriterTest.cs"];
m49_1744 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", span="2676-2676", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JTokenWriterTest.cs"];
m49_1590 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", span="2427-2427", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JTokenWriterTest.cs"];
m49_1595 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2435-2435", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JTokenWriterTest.cs"];
m49_1597 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2438-2438", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JTokenWriterTest.cs"];
m49_1599 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2441-2441", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JTokenWriterTest.cs"];
m49_1600 [label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="2442-2442", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JTokenWriterTest.cs"];
m49_1603 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2446-2446", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JTokenWriterTest.cs"];
m49_1601 [label="Assert.AreEqual(9.99m, d)", span="2443-2443", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JTokenWriterTest.cs"];
m49_1594 [label="Assert.IsTrue(reader.Read())", span="2434-2434", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JTokenWriterTest.cs"];
m49_1596 [label="Assert.IsTrue(reader.Read())", span="2437-2437", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JTokenWriterTest.cs"];
m49_1602 [label="Assert.IsTrue(reader.Read())", span="2445-2445", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JTokenWriterTest.cs"];
m49_1592 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2431-2431", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JTokenWriterTest.cs"];
m49_1598 [label="decimal? d = reader.ReadAsDecimal()", span="2440-2440", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JTokenWriterTest.cs"];
m49_1593 [label="reader.Culture = new CultureInfo(''fr-FR'')", span="2432-2432", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JTokenWriterTest.cs"];
m49_1591 [label="string json = @''{''''decimal'''':''''9,99''''}''", span="2429-2429", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JTokenWriterTest.cs"];
m49_1604 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", span="2427-2427", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JTokenWriterTest.cs"];
m49_767 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", span="1249-1249", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="JTokenWriterTest.cs"];
m49_770 [label="Assert.AreEqual(''h\0i'', reader.Value)", span="1254-1254", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="JTokenWriterTest.cs"];
m49_769 [label="Assert.IsTrue(reader.Read())", span="1252-1252", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="JTokenWriterTest.cs"];
m49_768 [label="JsonReader reader = new JsonTextReader(new StringReader('''h\0i'''))", span="1251-1251", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="JTokenWriterTest.cs"];
m49_771 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", span="1249-1249", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="JTokenWriterTest.cs"];
m49_1102 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", span="1716-1716", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JTokenWriterTest.cs"];
m49_1107 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.StartArray)", span="1729-1729", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JTokenWriterTest.cs"];
m49_1109 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.Float)", span="1732-1732", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JTokenWriterTest.cs"];
m49_1110 [label="Assert.AreEqual(jsonReader.Value, double.NaN)", span="1733-1733", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JTokenWriterTest.cs"];
m49_1112 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.Float)", span="1736-1736", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JTokenWriterTest.cs"];
m49_1113 [label="Assert.AreEqual(jsonReader.Value, double.PositiveInfinity)", span="1737-1737", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JTokenWriterTest.cs"];
m49_1115 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.Float)", span="1740-1740", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JTokenWriterTest.cs"];
m49_1116 [label="Assert.AreEqual(jsonReader.Value, double.NegativeInfinity)", span="1741-1741", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JTokenWriterTest.cs"];
m49_1118 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.EndArray)", span="1744-1744", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JTokenWriterTest.cs"];
m49_1105 [label="JsonReader jsonReader = new JsonTextReader(sr)", span="1726-1726", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JTokenWriterTest.cs"];
m49_1104 [label="StringReader sr = new StringReader(input)", span="1724-1724", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JTokenWriterTest.cs"];
m49_1106 [label="jsonReader.Read()", span="1728-1728", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JTokenWriterTest.cs"];
m49_1108 [label="jsonReader.Read()", span="1731-1731", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JTokenWriterTest.cs"];
m49_1111 [label="jsonReader.Read()", span="1735-1735", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JTokenWriterTest.cs"];
m49_1114 [label="jsonReader.Read()", span="1739-1739", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JTokenWriterTest.cs"];
m49_1117 [label="jsonReader.Read()", span="1743-1743", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JTokenWriterTest.cs"];
m49_1103 [label="string input = @''[\r\n  NaN,\r\n  Infinity,\r\n  -Infinity\r\n]''", span="1718-1722", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JTokenWriterTest.cs"];
m49_1119 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", span="1716-1716", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JTokenWriterTest.cs"];
m49_336 [label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0", cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="JTokenWriterTest.cs"];
m49_1800 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", span="2768-2768", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JTokenWriterTest.cs"];
m49_1804 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2782-2782", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JTokenWriterTest.cs"];
m49_1806 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2785-2785", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JTokenWriterTest.cs"];
m49_1808 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2788-2788", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JTokenWriterTest.cs"];
m49_1810 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2791-2791", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JTokenWriterTest.cs"];
m49_1811 [label="Assert.AreEqual(''Name'', reader.Value)", span="2792-2792", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JTokenWriterTest.cs"];
m49_1813 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2795-2795", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JTokenWriterTest.cs"];
m49_1815 [label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="2798-2798", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JTokenWriterTest.cs"];
m49_1816 [label="Assert.AreEqual(true, reader.Value)", span="2799-2799", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JTokenWriterTest.cs"];
m49_1818 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2802-2802", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JTokenWriterTest.cs"];
m49_1820 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2805-2805", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JTokenWriterTest.cs"];
m49_1822 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2808-2808", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JTokenWriterTest.cs"];
m49_1823 [label="Assert.AreEqual(''ExpiryDate'', reader.Value)", span="2809-2809", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JTokenWriterTest.cs"];
m49_1825 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2812-2812", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JTokenWriterTest.cs"];
m49_1827 [label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2815-2815", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JTokenWriterTest.cs"];
m49_1828 [label="Assert.AreEqual(5, reader.LineNumber)", span="2816-2816", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JTokenWriterTest.cs"];
m49_1829 [label="Assert.AreEqual(''Date'', reader.Value)", span="2817-2817", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JTokenWriterTest.cs"];
m49_1831 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2820-2820", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JTokenWriterTest.cs"];
m49_1833 [label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="2823-2823", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JTokenWriterTest.cs"];
m49_1835 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2826-2826", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JTokenWriterTest.cs"];
m49_1837 [label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2829-2829", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JTokenWriterTest.cs"];
m49_1803 [label="Assert.IsTrue(reader.Read())", span="2781-2781", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JTokenWriterTest.cs"];
m49_1805 [label="Assert.IsTrue(reader.Read())", span="2784-2784", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JTokenWriterTest.cs"];
m49_1807 [label="Assert.IsTrue(reader.Read())", span="2787-2787", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JTokenWriterTest.cs"];
m49_1809 [label="Assert.IsTrue(reader.Read())", span="2790-2790", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JTokenWriterTest.cs"];
m49_1812 [label="Assert.IsTrue(reader.Read())", span="2794-2794", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JTokenWriterTest.cs"];
m49_1814 [label="Assert.IsTrue(reader.Read())", span="2797-2797", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JTokenWriterTest.cs"];
m49_1817 [label="Assert.IsTrue(reader.Read())", span="2801-2801", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JTokenWriterTest.cs"];
m49_1819 [label="Assert.IsTrue(reader.Read())", span="2804-2804", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JTokenWriterTest.cs"];
m49_1821 [label="Assert.IsTrue(reader.Read())", span="2807-2807", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JTokenWriterTest.cs"];
m49_1824 [label="Assert.IsTrue(reader.Read())", span="2811-2811", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JTokenWriterTest.cs"];
m49_1826 [label="Assert.IsTrue(reader.Read())", span="2814-2814", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JTokenWriterTest.cs"];
m49_1830 [label="Assert.IsTrue(reader.Read())", span="2819-2819", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JTokenWriterTest.cs"];
m49_1832 [label="Assert.IsTrue(reader.Read())", span="2822-2822", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JTokenWriterTest.cs"];
m49_1834 [label="Assert.IsTrue(reader.Read())", span="2825-2825", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JTokenWriterTest.cs"];
m49_1836 [label="Assert.IsTrue(reader.Read())", span="2828-2828", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JTokenWriterTest.cs"];
m49_1802 [label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2779-2779", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JTokenWriterTest.cs"];
m49_1801 [label="string json = @''/*comment*/{/*comment*/Name:/*comment*/true/*comment*/,/*comment*/\r\n        ''''ExpiryDate'''':/*comment*/new\r\n'' + StringUtils.LineFeed +\r\n                          @''Date\r\n(/*comment*/null/*comment*/),\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''':/*comment*/[/*comment*/\r\n          ''''Small''''/*comment*/]/*comment*/}/*comment*/''", span="2770-2777", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JTokenWriterTest.cs"];
m49_1838 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", span="2768-2768", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JTokenWriterTest.cs"];
m49_1484 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", span="2279-2279", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JTokenWriterTest.cs"];
m49_1489 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2287-2287", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JTokenWriterTest.cs"];
m49_1491 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2290-2290", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JTokenWriterTest.cs"];
m49_1493 [label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2293-2293", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JTokenWriterTest.cs"];
m49_1494 [label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2294-2294", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JTokenWriterTest.cs"];
m49_1498 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2300-2300", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JTokenWriterTest.cs"];
m49_1496 [label="Assert.AreEqual(new DateTime(2011, 1, 30, 0, 0, 0, DateTimeKind.Unspecified), dt.DateTime)", span="2297-2297", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JTokenWriterTest.cs"];
m49_1488 [label="Assert.IsTrue(reader.Read())", span="2286-2286", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JTokenWriterTest.cs"];
m49_1490 [label="Assert.IsTrue(reader.Read())", span="2289-2289", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JTokenWriterTest.cs"];
m49_1497 [label="Assert.IsTrue(reader.Read())", span="2299-2299", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JTokenWriterTest.cs"];
m49_1486 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2283-2283", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JTokenWriterTest.cs"];
m49_1492 [label="reader.ReadAsDateTimeOffset()", span="2292-2292", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JTokenWriterTest.cs"];
m49_1495 [label="DateTimeOffset dt = (DateTimeOffset)reader.Value", span="2296-2296", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JTokenWriterTest.cs"];
m49_1487 [label="reader.Culture = new CultureInfo(''en-US'')", span="2284-2284", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JTokenWriterTest.cs"];
m49_1485 [label="string json = @''{''''Offset'''':''''1/30/2011''''}''", span="2281-2281", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JTokenWriterTest.cs"];
m49_1499 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", span="2279-2279", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JTokenWriterTest.cs"];
m49_1095 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(decimal)", span="994-994", cluster="Newtonsoft.Json.JsonWriter.WriteValue(decimal)", file="JTokenWriterTest.cs"];
m49_2273 [label="Entry System.IO.TextReader.Read(char[], int, int)", span="0-0", cluster="System.IO.TextReader.Read(char[], int, int)", file="JTokenWriterTest.cs"];
m49_2035 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", span="3135-3135", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JTokenWriterTest.cs"];
m49_2039 [label="Assert.AreEqual(0, reader.Depth)", span="3145-3145", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JTokenWriterTest.cs"];
m49_2041 [label="Assert.AreEqual(1, reader.Depth)", span="3148-3148", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JTokenWriterTest.cs"];
m49_2043 [label="Assert.AreEqual(2, reader.Depth)", span="3151-3151", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JTokenWriterTest.cs"];
m49_2045 [label="Assert.AreEqual(3, reader.Depth)", span="3154-3154", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JTokenWriterTest.cs"];
m49_2047 [label="Assert.AreEqual(3, reader.Depth)", span="3157-3157", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JTokenWriterTest.cs"];
m49_2049 [label="Assert.AreEqual(2, reader.Depth)", span="3160-3160", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JTokenWriterTest.cs"];
m49_2051 [label="Assert.AreEqual(1, reader.Depth)", span="3163-3163", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JTokenWriterTest.cs"];
m49_2053 [label="Assert.AreEqual(1, reader.Depth)", span="3166-3166", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JTokenWriterTest.cs"];
m49_2055 [label="Assert.AreEqual(2, reader.Depth)", span="3169-3169", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JTokenWriterTest.cs"];
m49_2057 [label="Assert.AreEqual(2, reader.Depth)", span="3172-3172", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JTokenWriterTest.cs"];
m49_2059 [label="Assert.AreEqual(1, reader.Depth)", span="3175-3175", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JTokenWriterTest.cs"];
m49_2061 [label="Assert.AreEqual(0, reader.Depth)", span="3178-3178", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JTokenWriterTest.cs"];
m49_2038 [label="Assert.IsTrue(reader.Read())", span="3144-3144", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JTokenWriterTest.cs"];
m49_2042 [label="Assert.IsTrue(reader.Read())", span="3150-3150", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JTokenWriterTest.cs"];
m49_2044 [label="Assert.IsTrue(reader.Read())", span="3153-3153", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JTokenWriterTest.cs"];
m49_2046 [label="Assert.IsTrue(reader.Read())", span="3156-3156", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JTokenWriterTest.cs"];
m49_2048 [label="Assert.IsTrue(reader.Read())", span="3159-3159", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JTokenWriterTest.cs"];
m49_2050 [label="Assert.IsTrue(reader.Read())", span="3162-3162", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JTokenWriterTest.cs"];
m49_2054 [label="Assert.IsTrue(reader.Read())", span="3168-3168", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JTokenWriterTest.cs"];
m49_2056 [label="Assert.IsTrue(reader.Read())", span="3171-3171", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JTokenWriterTest.cs"];
m49_2058 [label="Assert.IsTrue(reader.Read())", span="3174-3174", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JTokenWriterTest.cs"];
m49_2060 [label="Assert.IsTrue(reader.Read())", span="3177-3177", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JTokenWriterTest.cs"];
m49_2062 [label="Assert.IsFalse(reader.Read())", span="3180-3180", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JTokenWriterTest.cs"];
m49_2037 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                MaxDepth = 1\r\n            }", span="3139-3142", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JTokenWriterTest.cs"];
m49_2040 [label="ExceptionAssert.Throws<JsonReaderException>(() => { Assert.IsTrue(reader.Read()); }, ''The reader's MaxDepth of 1 has been exceeded. Path '[0]', line 1, position 2.'')", span="3147-3147", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JTokenWriterTest.cs"];
m49_2052 [label="ExceptionAssert.Throws<JsonReaderException>(() => { Assert.IsTrue(reader.Read()); }, ''The reader's MaxDepth of 1 has been exceeded. Path '[1]', line 1, position 9.'')", span="3165-3165", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JTokenWriterTest.cs"];
m49_2036 [label="string json = ''[[[[]]],[[]]]''", span="3137-3137", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JTokenWriterTest.cs"];
m49_2063 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", span="3135-3135", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JTokenWriterTest.cs"];
m49_804 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", span="1293-1293", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JTokenWriterTest.cs"];
m49_808 [label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1299-1299", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JTokenWriterTest.cs"];
m49_806 [label="Assert.IsTrue(reader.Read())", span="1296-1296", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JTokenWriterTest.cs"];
m49_805 [label="JsonReader reader = new JsonTextReader(new StringReader(@''[  ''))", span="1295-1295", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JTokenWriterTest.cs"];
m49_807 [label="Assert.IsNull(reader.ReadAsBytes())", span="1298-1298", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JTokenWriterTest.cs"];
m49_809 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", span="1293-1293", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JTokenWriterTest.cs"];
m49_56 [label="jsonWriter.WriteStartObject()", span="89-89", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="JTokenWriterTest.cs"];
m49_1099 [label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="445-445", cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JTokenWriterTest.cs"];
m49_564 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", span="923-923", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", file="JTokenWriterTest.cs"];
m49_565 [label="ExceptionAssert.Throws<ArgumentNullException> (\r\n                () => { new JsonTextReader (null); },\r\n                new string[] { \r\n                    ''Value cannot be null.'' + Environment.NewLine + ''Parameter name: reader'',\r\n                    ''Argument cannot be null.'' + Environment.NewLine + ''Parameter name: reader'' // Mono\r\n                })", span="925-930", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", file="JTokenWriterTest.cs"];
m49_566 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", span="923-923", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", file="JTokenWriterTest.cs"];
m49_384 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", span="651-651", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JTokenWriterTest.cs"];
m49_388 [label="Assert.AreEqual(1, reader.LineNumber)", span="665-665", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JTokenWriterTest.cs"];
m49_390 [label="Assert.AreEqual(2, reader.LineNumber)", span="668-668", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JTokenWriterTest.cs"];
m49_392 [label="Assert.AreEqual(3, reader.LineNumber)", span="671-671", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JTokenWriterTest.cs"];
m49_394 [label="Assert.AreEqual(4, reader.LineNumber)", span="674-674", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JTokenWriterTest.cs"];
m49_396 [label="Assert.AreEqual(5, reader.LineNumber)", span="677-677", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JTokenWriterTest.cs"];
m49_387 [label="reader.Read()", span="664-664", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JTokenWriterTest.cs"];
m49_389 [label="reader.Read()", span="667-667", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JTokenWriterTest.cs"];
m49_391 [label="reader.Read()", span="670-670", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JTokenWriterTest.cs"];
m49_393 [label="reader.Read()", span="673-673", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JTokenWriterTest.cs"];
m49_395 [label="reader.Read()", span="676-676", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JTokenWriterTest.cs"];
m49_386 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="659-659", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JTokenWriterTest.cs"];
m49_397 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Additional text encountered after finished reading JSON content: c. Path '', line 5, position 1.'')", span="679-679", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JTokenWriterTest.cs"];
m49_385 [label="string json = @''[\r\n''''Small'''',\r\n''''Medium'''',\r\n''''Large''''\r\n]content''", span="653-657", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JTokenWriterTest.cs"];
m49_398 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", span="651-651", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JTokenWriterTest.cs"];
m49_1706 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", span="2635-2635", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JTokenWriterTest.cs"];
m49_1709 [label="Assert.IsTrue(reader.Read())", span="2640-2640", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JTokenWriterTest.cs"];
m49_1710 [label="Assert.IsTrue(reader.Read())", span="2641-2641", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JTokenWriterTest.cs"];
m49_1711 [label="Assert.IsFalse(reader.Read())", span="2642-2642", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JTokenWriterTest.cs"];
m49_1708 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2638-2638", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JTokenWriterTest.cs"];
m49_1707 [label="string json = ''[true ''", span="2637-2637", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JTokenWriterTest.cs"];
m49_1712 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", span="2635-2635", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JTokenWriterTest.cs"];
m49_1253 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", span="1944-1944", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JTokenWriterTest.cs"];
m49_1257 [label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="1950-1950", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JTokenWriterTest.cs"];
m49_1259 [label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1953-1953", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JTokenWriterTest.cs"];
m49_1260 [label="Assert.AreEqual(typeof(long), jsonReader.ValueType)", span="1954-1954", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JTokenWriterTest.cs"];
m49_1261 [label="Assert.AreEqual((long)250, (long)jsonReader.Value)", span="1955-1955", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JTokenWriterTest.cs"];
m49_1263 [label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1958-1958", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JTokenWriterTest.cs"];
m49_1264 [label="Assert.AreEqual(typeof(long), jsonReader.ValueType)", span="1959-1959", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JTokenWriterTest.cs"];
m49_1265 [label="Assert.AreEqual((long)250, (long)jsonReader.Value)", span="1960-1960", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JTokenWriterTest.cs"];
m49_1267 [label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1963-1963", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JTokenWriterTest.cs"];
m49_1268 [label="Assert.AreEqual(typeof(long), jsonReader.ValueType)", span="1964-1964", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JTokenWriterTest.cs"];
m49_1269 [label="Assert.AreEqual((long)250, (long)jsonReader.Value)", span="1965-1965", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JTokenWriterTest.cs"];
m49_1271 [label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="1968-1968", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JTokenWriterTest.cs"];
m49_1256 [label="Assert.IsTrue(jsonReader.Read())", span="1949-1949", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JTokenWriterTest.cs"];
m49_1258 [label="jsonReader.Read()", span="1952-1952", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JTokenWriterTest.cs"];
m49_1262 [label="jsonReader.Read()", span="1957-1957", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JTokenWriterTest.cs"];
m49_1266 [label="jsonReader.Read()", span="1962-1962", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JTokenWriterTest.cs"];
m49_1270 [label="Assert.IsTrue(jsonReader.Read())", span="1967-1967", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JTokenWriterTest.cs"];
m49_1272 [label="Assert.IsFalse(jsonReader.Read())", span="1970-1970", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JTokenWriterTest.cs"];
m49_1255 [label="JsonTextReader jsonReader = new JsonTextReader(s)", span="1947-1947", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JTokenWriterTest.cs"];
m49_1254 [label="StringReader s = new StringReader(@''[0372, 0xFA, 0XFA]'')", span="1946-1946", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JTokenWriterTest.cs"];
m49_1273 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", span="1944-1944", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JTokenWriterTest.cs"];
m49_81 [label="Assert.IsTrue(jsonTextReader.Read())", span="172-172", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JTokenWriterTest.cs"];
m49_376 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", span="632-632", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="JTokenWriterTest.cs"];
m49_378 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="640-640", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="JTokenWriterTest.cs"];
m49_377 [label="string json = @''[\r\n''''Small'''',\r\n''''Medium'''',\r\n''''Large''''\r\n],''", span="634-638", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="JTokenWriterTest.cs"];
m49_379 [label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                while (reader.Read())\r\n                {\r\n                }\r\n            }, ''Additional text encountered after finished reading JSON content: ,. Path '', line 5, position 1.'')", span="642-647", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="JTokenWriterTest.cs"];
m49_380 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", span="632-632", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="JTokenWriterTest.cs"];
m49_1274 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", span="1974-1974", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JTokenWriterTest.cs"];
m49_1278 [label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="1980-1980", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JTokenWriterTest.cs"];
m49_1280 [label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1983-1983", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JTokenWriterTest.cs"];
m49_1281 [label="Assert.AreEqual(typeof(int), jsonReader.ValueType)", span="1984-1984", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JTokenWriterTest.cs"];
m49_1282 [label="Assert.AreEqual(250, jsonReader.Value)", span="1985-1985", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JTokenWriterTest.cs"];
m49_1284 [label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1988-1988", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JTokenWriterTest.cs"];
m49_1285 [label="Assert.AreEqual(typeof(int), jsonReader.ValueType)", span="1989-1989", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JTokenWriterTest.cs"];
m49_1286 [label="Assert.AreEqual(250, jsonReader.Value)", span="1990-1990", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JTokenWriterTest.cs"];
m49_1288 [label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1993-1993", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JTokenWriterTest.cs"];
m49_1289 [label="Assert.AreEqual(typeof(int), jsonReader.ValueType)", span="1994-1994", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JTokenWriterTest.cs"];
m49_1290 [label="Assert.AreEqual(250, jsonReader.Value)", span="1995-1995", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JTokenWriterTest.cs"];
m49_1292 [label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="1998-1998", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JTokenWriterTest.cs"];
m49_1277 [label="Assert.IsTrue(jsonReader.Read())", span="1979-1979", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JTokenWriterTest.cs"];
m49_1291 [label="Assert.IsTrue(jsonReader.Read())", span="1997-1997", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JTokenWriterTest.cs"];
m49_1293 [label="Assert.IsFalse(jsonReader.Read())", span="2000-2000", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JTokenWriterTest.cs"];
m49_1276 [label="JsonTextReader jsonReader = new JsonTextReader(s)", span="1977-1977", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JTokenWriterTest.cs"];
m49_1275 [label="StringReader s = new StringReader(@''[0372, 0xFA, 0XFA]'')", span="1976-1976", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JTokenWriterTest.cs"];
m49_1279 [label="jsonReader.ReadAsInt32()", span="1982-1982", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JTokenWriterTest.cs"];
m49_1283 [label="jsonReader.ReadAsInt32()", span="1987-1987", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JTokenWriterTest.cs"];
m49_1287 [label="jsonReader.ReadAsInt32()", span="1992-1992", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JTokenWriterTest.cs"];
m49_1294 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", span="1974-1974", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JTokenWriterTest.cs"];
m49_415 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", span="715-715", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JTokenWriterTest.cs"];
m49_419 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.None)", span="733-733", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JTokenWriterTest.cs"];
m49_420 [label="Assert.AreEqual(0, jsonReader.LineNumber)", span="734-734", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JTokenWriterTest.cs"];
m49_421 [label="Assert.AreEqual(0, jsonReader.LinePosition)", span="735-735", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JTokenWriterTest.cs"];
m49_423 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.StartObject)", span="738-738", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JTokenWriterTest.cs"];
m49_424 [label="Assert.AreEqual(1, jsonReader.LineNumber)", span="739-739", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JTokenWriterTest.cs"];
m49_425 [label="Assert.AreEqual(1, jsonReader.LinePosition)", span="740-740", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JTokenWriterTest.cs"];
m49_427 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.PropertyName)", span="743-743", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JTokenWriterTest.cs"];
m49_428 [label="Assert.AreEqual(jsonReader.Value, ''CPU'')", span="744-744", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JTokenWriterTest.cs"];
m49_429 [label="Assert.AreEqual(2, jsonReader.LineNumber)", span="745-745", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JTokenWriterTest.cs"];
m49_430 [label="Assert.AreEqual(6, jsonReader.LinePosition)", span="746-746", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JTokenWriterTest.cs"];
m49_432 [label="Assert.AreEqual(JsonToken.String, jsonReader.TokenType)", span="749-749", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JTokenWriterTest.cs"];
m49_433 [label="Assert.AreEqual(''Intel'', jsonReader.Value)", span="750-750", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JTokenWriterTest.cs"];
m49_434 [label="Assert.AreEqual(2, jsonReader.LineNumber)", span="751-751", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JTokenWriterTest.cs"];
m49_435 [label="Assert.AreEqual(14, jsonReader.LinePosition)", span="752-752", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JTokenWriterTest.cs"];
m49_437 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.PropertyName)", span="755-755", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JTokenWriterTest.cs"];
m49_438 [label="Assert.AreEqual(jsonReader.Value, ''Drives'')", span="756-756", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JTokenWriterTest.cs"];
m49_439 [label="Assert.AreEqual(3, jsonReader.LineNumber)", span="757-757", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JTokenWriterTest.cs"];
m49_440 [label="Assert.AreEqual(9, jsonReader.LinePosition)", span="758-758", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JTokenWriterTest.cs"];
m49_442 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.StartArray)", span="761-761", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JTokenWriterTest.cs"];
m49_443 [label="Assert.AreEqual(3, jsonReader.LineNumber)", span="762-762", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JTokenWriterTest.cs"];
m49_444 [label="Assert.AreEqual(11, jsonReader.LinePosition)", span="763-763", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JTokenWriterTest.cs"];
m49_446 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.String)", span="766-766", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JTokenWriterTest.cs"];
m49_447 [label="Assert.AreEqual(jsonReader.Value, ''DVD read/writer'')", span="767-767", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JTokenWriterTest.cs"];
m49_448 [label="Assert.AreEqual(jsonReader.QuoteChar, '\'')", span="768-768", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JTokenWriterTest.cs"];
m49_449 [label="Assert.AreEqual(4, jsonReader.LineNumber)", span="769-769", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JTokenWriterTest.cs"];
m49_450 [label="Assert.AreEqual(21, jsonReader.LinePosition)", span="770-770", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JTokenWriterTest.cs"];
m49_452 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.String)", span="773-773", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JTokenWriterTest.cs"];
m49_453 [label="Assert.AreEqual(jsonReader.Value, ''500 gigabyte hard drive'')", span="774-774", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JTokenWriterTest.cs"];
m49_454 [label="Assert.AreEqual(jsonReader.QuoteChar, '''')", span="775-775", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JTokenWriterTest.cs"];
m49_455 [label="Assert.AreEqual(5, jsonReader.LineNumber)", span="776-776", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JTokenWriterTest.cs"];
m49_456 [label="Assert.AreEqual(29, jsonReader.LinePosition)", span="777-777", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JTokenWriterTest.cs"];
m49_458 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.EndArray)", span="780-780", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JTokenWriterTest.cs"];
m49_459 [label="Assert.AreEqual(6, jsonReader.LineNumber)", span="781-781", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JTokenWriterTest.cs"];
m49_460 [label="Assert.AreEqual(3, jsonReader.LinePosition)", span="782-782", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JTokenWriterTest.cs"];
m49_462 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.EndObject)", span="785-785", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JTokenWriterTest.cs"];
m49_463 [label="Assert.AreEqual(7, jsonReader.LineNumber)", span="786-786", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JTokenWriterTest.cs"];
m49_464 [label="Assert.AreEqual(1, jsonReader.LinePosition)", span="787-787", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JTokenWriterTest.cs"];
m49_422 [label="jsonReader.Read()", span="737-737", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JTokenWriterTest.cs"];
m49_426 [label="jsonReader.Read()", span="742-742", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JTokenWriterTest.cs"];
m49_431 [label="jsonReader.Read()", span="748-748", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JTokenWriterTest.cs"];
m49_436 [label="jsonReader.Read()", span="754-754", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JTokenWriterTest.cs"];
m49_441 [label="jsonReader.Read()", span="760-760", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JTokenWriterTest.cs"];
m49_445 [label="jsonReader.Read()", span="765-765", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JTokenWriterTest.cs"];
m49_451 [label="jsonReader.Read()", span="772-772", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JTokenWriterTest.cs"];
m49_457 [label="jsonReader.Read()", span="779-779", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JTokenWriterTest.cs"];
m49_461 [label="jsonReader.Read()", span="784-784", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JTokenWriterTest.cs"];
m49_465 [label="Assert.IsFalse(jsonReader.Read())", span="789-789", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JTokenWriterTest.cs"];
m49_418 [label="JsonTextReader jsonReader = new JsonTextReader(sr)", span="727-727", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JTokenWriterTest.cs"];
m49_417 [label="StringReader sr = new StringReader(input)", span="725-725", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JTokenWriterTest.cs"];
m49_416 [label="string input = @''{\r\n  CPU: 'Intel',\r\n  Drives: [\r\n    'DVD read/writer',\r\n    ''''500 gigabyte hard drive''''\r\n  ]\r\n}''", span="717-723", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JTokenWriterTest.cs"];
m49_466 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", span="715-715", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JTokenWriterTest.cs"];
m49_864 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", span="1403-1403", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JTokenWriterTest.cs"];
m49_868 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1408-1408", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JTokenWriterTest.cs"];
m49_869 [label="Assert.AreEqual(''hi\r\nbye'', reader.Value)", span="1409-1409", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JTokenWriterTest.cs"];
m49_871 [label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1411-1411", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JTokenWriterTest.cs"];
m49_872 [label="Assert.AreEqual(1L, reader.Value)", span="1412-1412", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JTokenWriterTest.cs"];
m49_874 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1414-1414", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JTokenWriterTest.cs"];
m49_866 [label="Assert.IsTrue(reader.Read())", span="1406-1406", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JTokenWriterTest.cs"];
m49_867 [label="Assert.IsTrue(reader.Read())", span="1407-1407", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JTokenWriterTest.cs"];
m49_870 [label="Assert.IsTrue(reader.Read())", span="1410-1410", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JTokenWriterTest.cs"];
m49_873 [label="Assert.IsTrue(reader.Read())", span="1413-1413", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JTokenWriterTest.cs"];
m49_865 [label="JsonReader reader = new JsonTextReader(new StringReader(@''{'hi\r\nbye':1}''))", span="1405-1405", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JTokenWriterTest.cs"];
m49_875 [label="Assert.IsFalse(reader.Read())", span="1415-1415", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JTokenWriterTest.cs"];
m49_876 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", span="1403-1403", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JTokenWriterTest.cs"];
m49_2024 [label="Entry double.ToString(System.IFormatProvider)", span="0-0", cluster="double.ToString(System.IFormatProvider)", file="JTokenWriterTest.cs"];
m49_2224 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", span="567-567", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", file="JTokenWriterTest.cs"];
m49_1576 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", span="2405-2405", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JTokenWriterTest.cs"];
m49_1580 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2412-2412", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JTokenWriterTest.cs"];
m49_1582 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2415-2415", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JTokenWriterTest.cs"];
m49_1584 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2418-2418", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JTokenWriterTest.cs"];
m49_1585 [label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="2419-2419", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JTokenWriterTest.cs"];
m49_1588 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2423-2423", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JTokenWriterTest.cs"];
m49_1586 [label="Assert.AreEqual(-79228162514264300000000000000m, d)", span="2420-2420", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JTokenWriterTest.cs"];
m49_1579 [label="Assert.IsTrue(reader.Read())", span="2411-2411", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JTokenWriterTest.cs"];
m49_1581 [label="Assert.IsTrue(reader.Read())", span="2414-2414", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JTokenWriterTest.cs"];
m49_1587 [label="Assert.IsTrue(reader.Read())", span="2422-2422", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JTokenWriterTest.cs"];
m49_1578 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2409-2409", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JTokenWriterTest.cs"];
m49_1583 [label="decimal? d = reader.ReadAsDecimal()", span="2417-2417", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JTokenWriterTest.cs"];
m49_1577 [label="string json = @''{''''decimal'''':-7.92281625142643E+28}''", span="2407-2407", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JTokenWriterTest.cs"];
m49_1589 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", span="2405-2405", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JTokenWriterTest.cs"];
m49_268 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", span="443-443", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JTokenWriterTest.cs"];
m49_273 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="451-451", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JTokenWriterTest.cs"];
m49_272 [label="Assert.IsTrue(reader.Read())", span="450-450", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JTokenWriterTest.cs"];
m49_270 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="447-447", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JTokenWriterTest.cs"];
m49_274 [label="ExceptionAssert.Throws<JsonReaderException>(() => reader.Read(), ''Cannot read NaN as a decimal.'')", span="453-453", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JTokenWriterTest.cs"];
m49_271 [label="reader.FloatParseHandling = Json.FloatParseHandling.Decimal", span="448-448", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JTokenWriterTest.cs"];
m49_269 [label="string json = ''[NaN]''", span="445-445", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JTokenWriterTest.cs"];
m49_275 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", span="443-443", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JTokenWriterTest.cs"];
m49_819 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", span="1312-1312", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JTokenWriterTest.cs"];
m49_831 [label="Assert.AreEqual(newLinesText + ''name1'' + newLinesText, reader.Value)", span="1357-1357", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JTokenWriterTest.cs"];
m49_846 [label="Assert.AreEqual(newLinesText + ''blah comment'' + newLinesText, reader.Value)", span="1377-1377", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JTokenWriterTest.cs"];
m49_828 [label="Assert.AreEqual(7, reader.LineNumber)", span="1353-1353", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JTokenWriterTest.cs"];
m49_830 [label="Assert.AreEqual(31, reader.LineNumber)", span="1356-1356", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JTokenWriterTest.cs"];
m49_833 [label="Assert.AreEqual(37, reader.LineNumber)", span="1360-1360", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JTokenWriterTest.cs"];
m49_835 [label="Assert.AreEqual(55, reader.LineNumber)", span="1363-1363", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JTokenWriterTest.cs"];
m49_836 [label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="1364-1364", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JTokenWriterTest.cs"];
m49_837 [label="Assert.AreEqual(''Date'', reader.Value)", span="1365-1365", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JTokenWriterTest.cs"];
m49_839 [label="Assert.AreEqual(61, reader.LineNumber)", span="1368-1368", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JTokenWriterTest.cs"];
m49_840 [label="Assert.AreEqual(1L, reader.Value)", span="1369-1369", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JTokenWriterTest.cs"];
m49_842 [label="Assert.AreEqual(73, reader.LineNumber)", span="1372-1372", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JTokenWriterTest.cs"];
m49_843 [label="Assert.AreEqual(null, reader.Value)", span="1373-1373", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JTokenWriterTest.cs"];
m49_845 [label="Assert.AreEqual(91, reader.LineNumber)", span="1376-1376", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JTokenWriterTest.cs"];
m49_848 [label="Assert.AreEqual(97, reader.LineNumber)", span="1380-1380", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JTokenWriterTest.cs"];
m49_850 [label="Assert.AreEqual(109, reader.LineNumber)", span="1383-1383", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JTokenWriterTest.cs"];
m49_852 [label="Assert.AreEqual(115, reader.LineNumber)", span="1386-1386", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JTokenWriterTest.cs"];
m49_854 [label="Assert.AreEqual(133, reader.LineNumber)", span="1389-1389", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JTokenWriterTest.cs"];
m49_855 [label="Assert.AreEqual(''name2'', reader.Value)", span="1390-1390", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JTokenWriterTest.cs"];
m49_857 [label="Assert.AreEqual(139, reader.LineNumber)", span="1393-1393", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JTokenWriterTest.cs"];
m49_859 [label="Assert.AreEqual(145, reader.LineNumber)", span="1396-1396", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JTokenWriterTest.cs"];
m49_861 [label="Assert.AreEqual(151, reader.LineNumber)", span="1399-1399", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JTokenWriterTest.cs"];
m49_827 [label="Assert.IsTrue(reader.Read())", span="1352-1352", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JTokenWriterTest.cs"];
m49_829 [label="Assert.IsTrue(reader.Read())", span="1355-1355", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JTokenWriterTest.cs"];
m49_832 [label="Assert.IsTrue(reader.Read())", span="1359-1359", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JTokenWriterTest.cs"];
m49_834 [label="Assert.IsTrue(reader.Read())", span="1362-1362", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JTokenWriterTest.cs"];
m49_838 [label="Assert.IsTrue(reader.Read())", span="1367-1367", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JTokenWriterTest.cs"];
m49_841 [label="Assert.IsTrue(reader.Read())", span="1371-1371", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JTokenWriterTest.cs"];
m49_844 [label="Assert.IsTrue(reader.Read())", span="1375-1375", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JTokenWriterTest.cs"];
m49_847 [label="Assert.IsTrue(reader.Read())", span="1379-1379", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JTokenWriterTest.cs"];
m49_849 [label="Assert.IsTrue(reader.Read())", span="1382-1382", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JTokenWriterTest.cs"];
m49_851 [label="Assert.IsTrue(reader.Read())", span="1385-1385", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JTokenWriterTest.cs"];
m49_853 [label="Assert.IsTrue(reader.Read())", span="1388-1388", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JTokenWriterTest.cs"];
m49_856 [label="Assert.IsTrue(reader.Read())", span="1392-1392", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JTokenWriterTest.cs"];
m49_858 [label="Assert.IsTrue(reader.Read())", span="1395-1395", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JTokenWriterTest.cs"];
m49_860 [label="Assert.IsTrue(reader.Read())", span="1398-1398", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JTokenWriterTest.cs"];
m49_826 [label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="1351-1351", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JTokenWriterTest.cs"];
m49_823 [label="StringReader sr = new StringReader(newLinesText)", span="1345-1345", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JTokenWriterTest.cs"];
m49_820 [label="string newLinesText = StringUtils.CarriageReturn + StringUtils.CarriageReturnLineFeed + StringUtils.LineFeed + StringUtils.CarriageReturnLineFeed + '' '' + StringUtils.CarriageReturn + StringUtils.CarriageReturnLineFeed", span="1314-1314", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JTokenWriterTest.cs"];
m49_821 [label="string json =\r\n                newLinesText\r\n                + ''{'' + newLinesText\r\n                + ''''' + newLinesText\r\n                + ''name1'' + newLinesText\r\n                + ''''' + newLinesText\r\n                + '':'' + newLinesText\r\n                + ''['' + newLinesText\r\n                + ''new'' + newLinesText\r\n                + ''Date'' + newLinesText\r\n                + ''('' + newLinesText\r\n                + ''1'' + newLinesText\r\n                + '','' + newLinesText\r\n                + ''null'' + newLinesText\r\n                + ''/*'' + newLinesText\r\n                + ''blah comment'' + newLinesText\r\n                + ''*/'' + newLinesText\r\n                + '')'' + newLinesText\r\n                + '','' + newLinesText\r\n                + ''1.1111'' + newLinesText\r\n                + '']'' + newLinesText\r\n                + '','' + newLinesText\r\n                + ''name2'' + newLinesText\r\n                + '':'' + newLinesText\r\n                + ''{'' + newLinesText\r\n                + ''}'' + newLinesText\r\n                + ''}'' + newLinesText", span="1316-1342", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JTokenWriterTest.cs"];
m49_824 [label="sr.ReadLine() != null", span="1346-1346", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JTokenWriterTest.cs"];
m49_822 [label="int count = 0", span="1344-1344", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JTokenWriterTest.cs"];
m49_825 [label="count++", span="1348-1348", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JTokenWriterTest.cs"];
m49_862 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", span="1312-1312", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JTokenWriterTest.cs"];
m49_1713 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", span="2646-2646", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="JTokenWriterTest.cs"];
m49_1715 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2649-2649", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="JTokenWriterTest.cs"];
m49_1714 [label="string json = ''new Dat''", span="2648-2648", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="JTokenWriterTest.cs"];
m49_1716 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected end while parsing constructor. Path '', line 1, position 7.'')", span="2651-2651", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="JTokenWriterTest.cs"];
m49_1717 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", span="2646-2646", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="JTokenWriterTest.cs"];
m49_1562 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", span="2389-2389", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="JTokenWriterTest.cs"];
m49_1563 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''/* sdf''))", span="2391-2391", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="JTokenWriterTest.cs"];
m49_1564 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected end while parsing comment. Path '', line 1, position 6.'')", span="2393-2393", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="JTokenWriterTest.cs"];
m49_1565 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", span="2389-2389", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="JTokenWriterTest.cs"];
m49_374 [label="Entry Newtonsoft.Json.Tests.SlowStream.SlowStream(string, System.Text.Encoding, int)", span="3489-3489", cluster="Newtonsoft.Json.Tests.SlowStream.SlowStream(string, System.Text.Encoding, int)", file="JTokenWriterTest.cs"];
m49_2279 [label="Exit Newtonsoft.Json.Tests.SlowStream.SlowStream(string, System.Text.Encoding, int)", span="3489-3489", cluster="Newtonsoft.Json.Tests.SlowStream.SlowStream(string, System.Text.Encoding, int)", file="JTokenWriterTest.cs"];
m49_313 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", span="509-509", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JTokenWriterTest.cs"];
m49_314 [label="Assert.AreEqual(''ABC \ud800\udc00 DEF'', ReadString(''ABC \\ud800\\udc00 DEF''))", span="512-512", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JTokenWriterTest.cs"];
m49_315 [label="Assert.AreEqual(''ABC \ufffd\ufffd DEF'', ReadString(''ABC \\ud800\\ud800 DEF''))", span="515-515", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JTokenWriterTest.cs"];
m49_316 [label="Assert.AreEqual(''ABC \ufffd\ufffd\u1234 DEF'', ReadString(''ABC \\ud800\\ud800\\u1234 DEF''))", span="518-518", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JTokenWriterTest.cs"];
m49_317 [label="Assert.AreEqual(''ABC \ufffd\ufffd\ufffd DEF'', ReadString(''ABC \\ud800\\ud800\\ud800 DEF''))", span="521-521", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JTokenWriterTest.cs"];
m49_318 [label="Assert.AreEqual(''ABC \ufffd\ud800\udc00 DEF'', ReadString(''ABC \\ud800\\ud800\\udc00 DEF''))", span="524-524", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JTokenWriterTest.cs"];
m49_319 [label="Assert.AreEqual(''ABC \ufffd'', ReadString(''ABC \\ud800''))", span="527-527", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JTokenWriterTest.cs"];
m49_320 [label="Assert.AreEqual(''ABC \ufffd DEF'', ReadString(''ABC \\ud800 DEF''))", span="530-530", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JTokenWriterTest.cs"];
m49_321 [label="Assert.AreEqual(''ABC \ufffd\ufffd DEF'', ReadString(''ABC \\udc00\\ud800 DEF''))", span="533-533", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JTokenWriterTest.cs"];
m49_322 [label="Assert.AreEqual(''\ufffd\ufffd\ufffd'', ReadString(''\udc00\ud800\ud800''))", span="536-536", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JTokenWriterTest.cs"];
m49_323 [label="Assert.AreEqual(''ABC \ufffd\b'', ReadString(''ABC \\ud800\\b''))", span="538-538", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JTokenWriterTest.cs"];
m49_324 [label="Assert.AreEqual(''ABC \ufffd '', ReadString(''ABC \\ud800 ''))", span="539-539", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JTokenWriterTest.cs"];
m49_325 [label="Assert.AreEqual(''ABC \b\ufffd'', ReadString(''ABC \\b\\ud800''))", span="540-540", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JTokenWriterTest.cs"];
m49_326 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", span="509-509", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JTokenWriterTest.cs"];
m49_779 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", span="1266-1266", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="JTokenWriterTest.cs"];
m49_780 [label="JsonReader reader = new JsonTextReader(new StringReader(@'''h\''))", span="1268-1268", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="JTokenWriterTest.cs"];
m49_781 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unterminated string. Expected delimiter: '. Path '', line 1, position 3.'')", span="1270-1270", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="JTokenWriterTest.cs"];
m49_782 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", span="1266-1266", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="JTokenWriterTest.cs"];
m49_98 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", span="193-193", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", file="JTokenWriterTest.cs"];
m49_104 [label="Assert.AreEqual(@''Forest's Bakery And Cafe'', jsonTextReader.Value)", span="202-202", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", file="JTokenWriterTest.cs"];
m49_101 [label="jsonTextReader.Read()", span="198-198", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", file="JTokenWriterTest.cs"];
m49_102 [label="jsonTextReader.Read()", span="199-199", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", file="JTokenWriterTest.cs"];
m49_103 [label="jsonTextReader.Read()", span="200-200", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", file="JTokenWriterTest.cs"];
m49_100 [label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="197-197", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", file="JTokenWriterTest.cs"];
m49_99 [label="string json = @''{''''NameOfStore'''':''''Forest's Bakery And Cafe''''}''", span="195-195", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", file="JTokenWriterTest.cs"];
m49_105 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", span="193-193", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", file="JTokenWriterTest.cs"];
m49_1093 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(int)", span="882-882", cluster="Newtonsoft.Json.JsonWriter.WriteValue(int)", file="JTokenWriterTest.cs"];
m49_193 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", span="343-343", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JTokenWriterTest.cs"];
m49_197 [label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", span="352-352", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JTokenWriterTest.cs"];
m49_199 [label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="355-355", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JTokenWriterTest.cs"];
m49_201 [label="Assert.AreEqual(JsonToken.String, jsonTextReader.TokenType)", span="358-358", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JTokenWriterTest.cs"];
m49_202 [label="Assert.AreEqual(@''/Date(9467082_PIE_340000-0631)/'', jsonTextReader.Value)", span="359-359", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JTokenWriterTest.cs"];
m49_204 [label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", span="362-362", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JTokenWriterTest.cs"];
m49_196 [label="Assert.IsTrue(jsonTextReader.Read())", span="351-351", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JTokenWriterTest.cs"];
m49_198 [label="Assert.IsTrue(jsonTextReader.Read())", span="354-354", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JTokenWriterTest.cs"];
m49_200 [label="Assert.IsTrue(jsonTextReader.Read())", span="357-357", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JTokenWriterTest.cs"];
m49_203 [label="Assert.IsTrue(jsonTextReader.Read())", span="361-361", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JTokenWriterTest.cs"];
m49_205 [label="Assert.IsFalse(jsonTextReader.Read())", span="364-364", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JTokenWriterTest.cs"];
m49_195 [label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="349-349", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JTokenWriterTest.cs"];
m49_194 [label="string json = @''{\r\n    ChildId: '\/Date(9467082_PIE_340000-0631)\/'\r\n}''", span="345-347", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JTokenWriterTest.cs"];
m49_206 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", span="343-343", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JTokenWriterTest.cs"];
m49_611 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", span="978-978", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JTokenWriterTest.cs"];
m49_615 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="984-984", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JTokenWriterTest.cs"];
m49_617 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="987-987", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JTokenWriterTest.cs"];
m49_619 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="990-990", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JTokenWriterTest.cs"];
m49_621 [label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="993-993", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JTokenWriterTest.cs"];
m49_623 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="996-996", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JTokenWriterTest.cs"];
m49_625 [label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="999-999", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JTokenWriterTest.cs"];
m49_627 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="1002-1002", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JTokenWriterTest.cs"];
m49_629 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1005-1005", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JTokenWriterTest.cs"];
m49_631 [label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="1008-1008", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JTokenWriterTest.cs"];
m49_633 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1011-1011", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JTokenWriterTest.cs"];
m49_635 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="1014-1014", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JTokenWriterTest.cs"];
m49_636 [label="Assert.AreEqual(''\0sd\0f\0'', reader.Value)", span="1015-1015", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JTokenWriterTest.cs"];
m49_638 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="1018-1018", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JTokenWriterTest.cs"];
m49_639 [label="Assert.AreEqual(''\0sd\0f\0'', reader.Value)", span="1019-1019", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JTokenWriterTest.cs"];
m49_614 [label="Assert.IsTrue(reader.Read())", span="983-983", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JTokenWriterTest.cs"];
m49_616 [label="Assert.IsTrue(reader.Read())", span="986-986", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JTokenWriterTest.cs"];
m49_618 [label="Assert.IsTrue(reader.Read())", span="989-989", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JTokenWriterTest.cs"];
m49_620 [label="Assert.IsTrue(reader.Read())", span="992-992", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JTokenWriterTest.cs"];
m49_622 [label="Assert.IsTrue(reader.Read())", span="995-995", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JTokenWriterTest.cs"];
m49_624 [label="Assert.IsTrue(reader.Read())", span="998-998", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JTokenWriterTest.cs"];
m49_626 [label="Assert.IsTrue(reader.Read())", span="1001-1001", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JTokenWriterTest.cs"];
m49_628 [label="Assert.IsTrue(reader.Read())", span="1004-1004", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JTokenWriterTest.cs"];
m49_630 [label="Assert.IsTrue(reader.Read())", span="1007-1007", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JTokenWriterTest.cs"];
m49_632 [label="Assert.IsTrue(reader.Read())", span="1010-1010", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JTokenWriterTest.cs"];
m49_634 [label="Assert.IsTrue(reader.Read())", span="1013-1013", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JTokenWriterTest.cs"];
m49_637 [label="Assert.IsTrue(reader.Read())", span="1017-1017", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JTokenWriterTest.cs"];
m49_640 [label="Assert.IsFalse(reader.Read())", span="1021-1021", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JTokenWriterTest.cs"];
m49_613 [label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="981-981", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JTokenWriterTest.cs"];
m49_612 [label="string json = ''\0{\0'\0h\0i\0'\0:\0[\01\0,\0'\0'\0\0,\0null\0]\0,\0do\0:true\0}\0\0/*\0sd\0f\0*/\0/*\0sd\0f\0*/ \0''", span="980-980", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JTokenWriterTest.cs"];
m49_641 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", span="978-978", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JTokenWriterTest.cs"];
m49_968 [label="Entry long.ToString()", span="0-0", cluster="long.ToString()", file="JTokenWriterTest.cs"];
m49_766 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="JTokenWriterTest.cs"];
m49_1368 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", span="2104-2104", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JTokenWriterTest.cs"];
m49_1372 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2114-2114", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JTokenWriterTest.cs"];
m49_1374 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2117-2117", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JTokenWriterTest.cs"];
m49_1375 [label="Assert.AreEqual(''Message'', reader.Value)", span="2118-2118", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JTokenWriterTest.cs"];
m49_1377 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="2121-2121", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JTokenWriterTest.cs"];
m49_1378 [label="Assert.AreEqual(@''Hi,I'' + '\u0092' + ''ve send you smth'', reader.Value)", span="2122-2122", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JTokenWriterTest.cs"];
m49_1380 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2125-2125", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JTokenWriterTest.cs"];
m49_1371 [label="Assert.IsTrue(reader.Read())", span="2113-2113", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JTokenWriterTest.cs"];
m49_1373 [label="Assert.IsTrue(reader.Read())", span="2116-2116", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JTokenWriterTest.cs"];
m49_1376 [label="Assert.IsTrue(reader.Read())", span="2120-2120", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JTokenWriterTest.cs"];
m49_1379 [label="Assert.IsTrue(reader.Read())", span="2124-2124", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JTokenWriterTest.cs"];
m49_1381 [label="Assert.IsFalse(reader.Read())", span="2127-2127", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JTokenWriterTest.cs"];
m49_1370 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2108-2108", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JTokenWriterTest.cs"];
m49_1369 [label="string json = @''{''''Message'''':''''Hi,I\u0092ve send you smth''''}''", span="2106-2106", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JTokenWriterTest.cs"];
m49_1382 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", span="2104-2104", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JTokenWriterTest.cs"];
m49_2188 [label="Entry Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", span="3462-3462", cluster="Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", file="JTokenWriterTest.cs"];
m49_2265 [label="_inner = inner", span="3464-3464", cluster="Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", file="JTokenWriterTest.cs"];
m49_2266 [label="Exit Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", span="3462-3462", cluster="Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", file="JTokenWriterTest.cs"];
m49_1090 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(bool)", span="938-938", cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool)", file="JTokenWriterTest.cs"];
m49_334 [label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0", cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="JTokenWriterTest.cs"];
m49_793 [label="Entry Newtonsoft.Json.JsonReader.ReadAsBytes()", span="423-423", cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JTokenWriterTest.cs"];
m49_1773 [label="Entry Unk.>", span="", cluster="Unk.>", file="JTokenWriterTest.cs"];
m49_697 [label="Entry BigInteger.cstr", span="", cluster="BigInteger.cstr", file="JTokenWriterTest.cs"];
m49_967 [label="Entry int.ToString()", span="0-0", cluster="int.ToString()", file="JTokenWriterTest.cs"];
m49_684 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", span="1103-1103", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JTokenWriterTest.cs"];
m49_688 [label="Assert.AreEqual(typeof(long), reader.ValueType)", span="1109-1109", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JTokenWriterTest.cs"];
m49_694 [label="Assert.AreEqual(typeof(BigInteger), reader.ValueType)", span="1118-1118", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JTokenWriterTest.cs"];
m49_687 [label="reader.Read()", span="1108-1108", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JTokenWriterTest.cs"];
m49_693 [label="reader.Read()", span="1116-1116", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JTokenWriterTest.cs"];
m49_686 [label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="1107-1107", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JTokenWriterTest.cs"];
m49_692 [label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="1115-1115", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JTokenWriterTest.cs"];
m49_689 [label="int j = 1", span="1111-1111", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JTokenWriterTest.cs"];
m49_695 [label="j++", span="1111-1111", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JTokenWriterTest.cs"];
m49_685 [label="BigInteger i = new BigInteger(long.MaxValue)", span="1105-1105", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JTokenWriterTest.cs"];
m49_691 [label="BigInteger total = i + j", span="1113-1113", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JTokenWriterTest.cs"];
m49_690 [label="j < 1000", span="1111-1111", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JTokenWriterTest.cs"];
m49_696 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", span="1103-1103", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JTokenWriterTest.cs"];
m49_350 [label="Entry Newtonsoft.Json.JsonTextReader.Close()", span="1748-1748", cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JTokenWriterTest.cs"];
m49_60 [label="jsonWriter.WriteValue(''Intel'')", span="95-95", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="JTokenWriterTest.cs"];
m49_713 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", span="1144-1144", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JTokenWriterTest.cs"];
m49_721 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1172-1172", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JTokenWriterTest.cs"];
m49_722 [label="Assert.AreEqual(''type'', reader.Value)", span="1173-1173", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JTokenWriterTest.cs"];
m49_718 [label="Assert.IsTrue(reader.Read())", span="1168-1168", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JTokenWriterTest.cs"];
m49_720 [label="Assert.IsTrue(reader.Read())", span="1171-1171", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JTokenWriterTest.cs"];
m49_715 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1161-1161", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JTokenWriterTest.cs"];
m49_717 [label="i < 14", span="1166-1166", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JTokenWriterTest.cs"];
m49_719 [label="i++", span="1166-1166", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JTokenWriterTest.cs"];
m49_714 [label="string json = @''\r\n{\r\n  ''''description'''': ''''A person'''',\r\n  ''''type'''': ''''object'''',\r\n  ''''properties'''':\r\n  {\r\n    ''''name'''': {''''type'''':''''string''''},\r\n    ''''hobbies'''': {\r\n      ''''type'''': ''''array'''',\r\n      ''''items'''': {''''type'''':''''string''''}\r\n    }\r\n  }\r\n}\r\n''", span="1146-1159", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JTokenWriterTest.cs"];
m49_716 [label="int i = 0", span="1166-1166", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JTokenWriterTest.cs"];
m49_723 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", span="1144-1144", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JTokenWriterTest.cs"];
m49_1100 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", span="672-672", cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", file="JTokenWriterTest.cs"];
m49_97 [label="Entry System.Guid.ToByteArray()", span="0-0", cluster="System.Guid.ToByteArray()", file="JTokenWriterTest.cs"];
m49_242 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", span="408-408", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JTokenWriterTest.cs"];
m49_247 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="416-416", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JTokenWriterTest.cs"];
m49_249 [label="Assert.AreEqual(1.0m, reader.Value)", span="419-419", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JTokenWriterTest.cs"];
m49_250 [label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="420-420", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JTokenWriterTest.cs"];
m49_251 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="421-421", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JTokenWriterTest.cs"];
m49_253 [label="Assert.AreEqual(1L, reader.Value)", span="424-424", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JTokenWriterTest.cs"];
m49_254 [label="Assert.AreEqual(typeof(long), reader.ValueType)", span="425-425", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JTokenWriterTest.cs"];
m49_255 [label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="426-426", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JTokenWriterTest.cs"];
m49_257 [label="Assert.AreEqual(9.9m, reader.Value)", span="429-429", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JTokenWriterTest.cs"];
m49_258 [label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="430-430", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JTokenWriterTest.cs"];
m49_259 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="431-431", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JTokenWriterTest.cs"];
m49_261 [label="Assert.AreEqual(Convert.ToDecimal(1E-06), reader.Value)", span="434-434", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JTokenWriterTest.cs"];
m49_262 [label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="435-435", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JTokenWriterTest.cs"];
m49_263 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="436-436", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JTokenWriterTest.cs"];
m49_265 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="439-439", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JTokenWriterTest.cs"];
m49_246 [label="Assert.IsTrue(reader.Read())", span="415-415", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JTokenWriterTest.cs"];
m49_248 [label="Assert.IsTrue(reader.Read())", span="418-418", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JTokenWriterTest.cs"];
m49_252 [label="Assert.IsTrue(reader.Read())", span="423-423", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JTokenWriterTest.cs"];
m49_256 [label="Assert.IsTrue(reader.Read())", span="428-428", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JTokenWriterTest.cs"];
m49_260 [label="Assert.IsTrue(reader.Read())", span="433-433", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JTokenWriterTest.cs"];
m49_264 [label="Assert.IsTrue(reader.Read())", span="438-438", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JTokenWriterTest.cs"];
m49_244 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="412-412", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JTokenWriterTest.cs"];
m49_245 [label="reader.FloatParseHandling = Json.FloatParseHandling.Decimal", span="413-413", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JTokenWriterTest.cs"];
m49_243 [label="string json = ''[1.0,1,9.9,1E-06]''", span="410-410", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JTokenWriterTest.cs"];
m49_266 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", span="408-408", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JTokenWriterTest.cs"];
m49_1097 [label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="835-835", cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="JTokenWriterTest.cs"];
m49_1149 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", span="1795-1795", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JTokenWriterTest.cs"];
m49_1153 [label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="1803-1803", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JTokenWriterTest.cs"];
m49_1155 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1806-1806", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JTokenWriterTest.cs"];
m49_1156 [label="Assert.AreEqual(0.0, jsonReader.Value)", span="1807-1807", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JTokenWriterTest.cs"];
m49_1158 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1810-1810", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JTokenWriterTest.cs"];
m49_1159 [label="Assert.AreEqual(0.0, jsonReader.Value)", span="1811-1811", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JTokenWriterTest.cs"];
m49_1161 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1814-1814", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JTokenWriterTest.cs"];
m49_1162 [label="Assert.AreEqual(0.1, jsonReader.Value)", span="1815-1815", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JTokenWriterTest.cs"];
m49_1164 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1818-1818", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JTokenWriterTest.cs"];
m49_1165 [label="Assert.AreEqual(1.0, jsonReader.Value)", span="1819-1819", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JTokenWriterTest.cs"];
m49_1167 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1822-1822", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JTokenWriterTest.cs"];
m49_1168 [label="Assert.AreEqual(1.000001, jsonReader.Value)", span="1823-1823", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JTokenWriterTest.cs"];
m49_1170 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1826-1826", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JTokenWriterTest.cs"];
m49_1171 [label="Assert.AreEqual(1E-06, jsonReader.Value)", span="1827-1827", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JTokenWriterTest.cs"];
m49_1173 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1830-1830", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JTokenWriterTest.cs"];
m49_1174 [label="Assert.AreEqual(4.94065645841247E-324, jsonReader.Value)", span="1831-1831", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JTokenWriterTest.cs"];
m49_1176 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1834-1834", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JTokenWriterTest.cs"];
m49_1177 [label="Assert.AreEqual(double.PositiveInfinity, jsonReader.Value)", span="1835-1835", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JTokenWriterTest.cs"];
m49_1179 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1838-1838", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JTokenWriterTest.cs"];
m49_1180 [label="Assert.AreEqual(double.NegativeInfinity, jsonReader.Value)", span="1839-1839", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JTokenWriterTest.cs"];
m49_1182 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1842-1842", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JTokenWriterTest.cs"];
m49_1183 [label="Assert.AreEqual(double.NaN, jsonReader.Value)", span="1843-1843", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JTokenWriterTest.cs"];
m49_1185 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1846-1846", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JTokenWriterTest.cs"];
m49_1186 [label="Assert.AreEqual(double.MaxValue, jsonReader.Value)", span="1847-1847", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JTokenWriterTest.cs"];
m49_1188 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1850-1850", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JTokenWriterTest.cs"];
m49_1189 [label="Assert.AreEqual(double.MinValue, jsonReader.Value)", span="1851-1851", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JTokenWriterTest.cs"];
m49_1191 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1854-1854", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JTokenWriterTest.cs"];
m49_1192 [label="Assert.AreEqual(double.PositiveInfinity, jsonReader.Value)", span="1855-1855", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JTokenWriterTest.cs"];
m49_1194 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1858-1858", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JTokenWriterTest.cs"];
m49_1195 [label="Assert.AreEqual(double.NegativeInfinity, jsonReader.Value)", span="1859-1859", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JTokenWriterTest.cs"];
m49_1197 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1862-1862", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JTokenWriterTest.cs"];
m49_1198 [label="Assert.AreEqual(double.NaN, jsonReader.Value)", span="1863-1863", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JTokenWriterTest.cs"];
m49_1200 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1866-1866", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JTokenWriterTest.cs"];
m49_1201 [label="Assert.AreEqual(0d, jsonReader.Value)", span="1867-1867", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JTokenWriterTest.cs"];
m49_1203 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1870-1870", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JTokenWriterTest.cs"];
m49_1204 [label="Assert.AreEqual(0.0000025d, jsonReader.Value)", span="1871-1871", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JTokenWriterTest.cs"];
m49_1206 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1874-1874", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JTokenWriterTest.cs"];
m49_1207 [label="Assert.AreEqual(3000000000d, jsonReader.Value)", span="1875-1875", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JTokenWriterTest.cs"];
m49_1209 [label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="1878-1878", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JTokenWriterTest.cs"];
m49_1151 [label="JsonReader jsonReader = new JsonTextReader(new StringReader(json))", span="1800-1800", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JTokenWriterTest.cs"];
m49_1152 [label="jsonReader.Read()", span="1802-1802", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JTokenWriterTest.cs"];
m49_1154 [label="jsonReader.Read()", span="1805-1805", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JTokenWriterTest.cs"];
m49_1157 [label="jsonReader.Read()", span="1809-1809", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JTokenWriterTest.cs"];
m49_1160 [label="jsonReader.Read()", span="1813-1813", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JTokenWriterTest.cs"];
m49_1163 [label="jsonReader.Read()", span="1817-1817", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JTokenWriterTest.cs"];
m49_1166 [label="jsonReader.Read()", span="1821-1821", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JTokenWriterTest.cs"];
m49_1169 [label="jsonReader.Read()", span="1825-1825", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JTokenWriterTest.cs"];
m49_1172 [label="jsonReader.Read()", span="1829-1829", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JTokenWriterTest.cs"];
m49_1175 [label="jsonReader.Read()", span="1833-1833", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JTokenWriterTest.cs"];
m49_1178 [label="jsonReader.Read()", span="1837-1837", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JTokenWriterTest.cs"];
m49_1181 [label="jsonReader.Read()", span="1841-1841", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JTokenWriterTest.cs"];
m49_1184 [label="jsonReader.Read()", span="1845-1845", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JTokenWriterTest.cs"];
m49_1187 [label="jsonReader.Read()", span="1849-1849", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JTokenWriterTest.cs"];
m49_1190 [label="jsonReader.Read()", span="1853-1853", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JTokenWriterTest.cs"];
m49_1193 [label="jsonReader.Read()", span="1857-1857", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JTokenWriterTest.cs"];
m49_1196 [label="jsonReader.Read()", span="1861-1861", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JTokenWriterTest.cs"];
m49_1199 [label="jsonReader.Read()", span="1865-1865", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JTokenWriterTest.cs"];
m49_1202 [label="jsonReader.Read()", span="1869-1869", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JTokenWriterTest.cs"];
m49_1205 [label="jsonReader.Read()", span="1873-1873", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JTokenWriterTest.cs"];
m49_1208 [label="jsonReader.Read()", span="1877-1877", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JTokenWriterTest.cs"];
m49_1150 [label="string json =\r\n                @''[0.0,0.0,0.1,1.0,1.000001,1E-06,4.94065645841247E-324,Infinity,-Infinity,NaN,1.7976931348623157E+308,-1.7976931348623157E+308,Infinity,-Infinity,NaN,0e-10,0.25e-5,0.3e10]''", span="1797-1798", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JTokenWriterTest.cs"];
m49_1210 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", span="1795-1795", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JTokenWriterTest.cs"];
m49_1410 [label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", file="JTokenWriterTest.cs"];
m49_1933 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", span="2984-2984", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="JTokenWriterTest.cs"];
m49_1935 [label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2988-2988", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="JTokenWriterTest.cs"];
m49_1934 [label="string json = @''/''", span="2986-2986", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="JTokenWriterTest.cs"];
m49_1936 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected end while parsing comment. Path '', line 1, position 1.'')", span="2990-2990", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="JTokenWriterTest.cs"];
m49_1937 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", span="2984-2984", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="JTokenWriterTest.cs"];
m49_1347 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", span="2077-2077", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JTokenWriterTest.cs"];
m49_1350 [label="Assert.AreEqual(2, data.Length)", span="2082-2082", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JTokenWriterTest.cs"];
m49_1351 [label="Assert.AreEqual(1, data[0])", span="2083-2083", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JTokenWriterTest.cs"];
m49_1352 [label="Assert.AreEqual(2, data[1])", span="2084-2084", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JTokenWriterTest.cs"];
m49_1348 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[/*hi*/1/*hi*/,2/*hi*/]''))", span="2079-2079", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JTokenWriterTest.cs"];
m49_1349 [label="byte[] data = reader.ReadAsBytes()", span="2081-2081", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JTokenWriterTest.cs"];
m49_1353 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", span="2077-2077", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JTokenWriterTest.cs"];
m49_58 [label="jsonWriter.WritePropertyName(''CPU'')", span="92-92", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="JTokenWriterTest.cs"];
m49_1308 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", span="2023-2023", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="JTokenWriterTest.cs"];
m49_1311 [label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="2028-2028", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="JTokenWriterTest.cs"];
m49_1309 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''''))", span="2025-2025", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="JTokenWriterTest.cs"];
m49_1310 [label="Assert.IsNull(reader.ReadAsBytes())", span="2027-2027", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="JTokenWriterTest.cs"];
m49_1312 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", span="2023-2023", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="JTokenWriterTest.cs"];
m49_1320 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", span="2041-2041", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="JTokenWriterTest.cs"];
m49_1323 [label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="2046-2046", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="JTokenWriterTest.cs"];
m49_1321 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''''))", span="2043-2043", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="JTokenWriterTest.cs"];
m49_1322 [label="Assert.IsNull(reader.ReadAsDateTimeOffset())", span="2045-2045", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="JTokenWriterTest.cs"];
m49_1324 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", span="2041-2041", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="JTokenWriterTest.cs"];
m49_652 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", span="1061-1061", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JTokenWriterTest.cs"];
m49_656 [label="Assert.AreEqual(typeof(long), reader.ValueType)", span="1067-1067", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JTokenWriterTest.cs"];
m49_655 [label="reader.Read()", span="1066-1066", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JTokenWriterTest.cs"];
m49_654 [label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="1065-1065", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JTokenWriterTest.cs"];
m49_657 [label="int j = 1", span="1069-1069", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JTokenWriterTest.cs"];
m49_653 [label="long i = int.MaxValue", span="1063-1063", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JTokenWriterTest.cs"];
m49_660 [label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n                {\r\n                    reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)));\r\n                    reader.ReadAsInt32();\r\n                }, ''JSON integer '' + total + '' is too large or small for an Int32. Path '', line 1, position 10.'')", span="1072-1076", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JTokenWriterTest.cs"];
m49_659 [label="long total = j + i", span="1071-1071", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JTokenWriterTest.cs"];
m49_658 [label="j < 1000", span="1069-1069", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JTokenWriterTest.cs"];
m49_661 [label="j++", span="1069-1069", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JTokenWriterTest.cs"];
m49_662 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", span="1061-1061", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JTokenWriterTest.cs"];
m49_2111 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", span="3243-3243", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JTokenWriterTest.cs"];
m49_2117 [label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="3252-3252", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JTokenWriterTest.cs"];
m49_2118 [label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="3253-3253", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JTokenWriterTest.cs"];
m49_2120 [label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="3255-3255", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JTokenWriterTest.cs"];
m49_2121 [label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="3256-3256", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JTokenWriterTest.cs"];
m49_2127 [label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="3265-3265", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JTokenWriterTest.cs"];
m49_2128 [label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="3266-3266", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JTokenWriterTest.cs"];
m49_2130 [label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="3268-3268", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JTokenWriterTest.cs"];
m49_2131 [label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="3269-3269", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JTokenWriterTest.cs"];
m49_2137 [label="Assert.AreEqual(@''1970-01-01T00:00:00Z'', reader.Value)", span="3278-3278", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JTokenWriterTest.cs"];
m49_2138 [label="Assert.AreEqual(typeof(string), reader.ValueType)", span="3279-3279", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JTokenWriterTest.cs"];
m49_2140 [label="Assert.AreEqual(@''/Date(0)/'', reader.Value)", span="3281-3281", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JTokenWriterTest.cs"];
m49_2141 [label="Assert.AreEqual(typeof(string), reader.ValueType)", span="3282-3282", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JTokenWriterTest.cs"];
m49_2147 [label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="3291-3291", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JTokenWriterTest.cs"];
m49_2148 [label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="3292-3292", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JTokenWriterTest.cs"];
m49_2150 [label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="3294-3294", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JTokenWriterTest.cs"];
m49_2151 [label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="3295-3295", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JTokenWriterTest.cs"];
m49_2157 [label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="3304-3304", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JTokenWriterTest.cs"];
m49_2158 [label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="3305-3305", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JTokenWriterTest.cs"];
m49_2160 [label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="3307-3307", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JTokenWriterTest.cs"];
m49_2161 [label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="3308-3308", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JTokenWriterTest.cs"];
m49_2115 [label="Assert.IsTrue(reader.Read())", span="3250-3250", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JTokenWriterTest.cs"];
m49_2116 [label="Assert.IsTrue(reader.Read())", span="3251-3251", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JTokenWriterTest.cs"];
m49_2119 [label="Assert.IsTrue(reader.Read())", span="3254-3254", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JTokenWriterTest.cs"];
m49_2122 [label="Assert.IsTrue(reader.Read())", span="3257-3257", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JTokenWriterTest.cs"];
m49_2125 [label="Assert.IsTrue(reader.Read())", span="3263-3263", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JTokenWriterTest.cs"];
m49_2126 [label="Assert.IsTrue(reader.Read())", span="3264-3264", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JTokenWriterTest.cs"];
m49_2129 [label="Assert.IsTrue(reader.Read())", span="3267-3267", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JTokenWriterTest.cs"];
m49_2132 [label="Assert.IsTrue(reader.Read())", span="3270-3270", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JTokenWriterTest.cs"];
m49_2135 [label="Assert.IsTrue(reader.Read())", span="3276-3276", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JTokenWriterTest.cs"];
m49_2136 [label="Assert.IsTrue(reader.Read())", span="3277-3277", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JTokenWriterTest.cs"];
m49_2139 [label="Assert.IsTrue(reader.Read())", span="3280-3280", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JTokenWriterTest.cs"];
m49_2142 [label="Assert.IsTrue(reader.Read())", span="3283-3283", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JTokenWriterTest.cs"];
m49_2145 [label="Assert.IsTrue(reader.Read())", span="3289-3289", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JTokenWriterTest.cs"];
m49_2152 [label="Assert.IsTrue(reader.Read())", span="3296-3296", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JTokenWriterTest.cs"];
m49_2155 [label="Assert.IsTrue(reader.Read())", span="3302-3302", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JTokenWriterTest.cs"];
m49_2162 [label="Assert.IsTrue(reader.Read())", span="3309-3309", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JTokenWriterTest.cs"];
m49_2113 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3247-3247", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JTokenWriterTest.cs"];
m49_2123 [label="reader = new JsonTextReader(new StringReader(json))", span="3260-3260", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JTokenWriterTest.cs"];
m49_2133 [label="reader = new JsonTextReader(new StringReader(json))", span="3273-3273", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JTokenWriterTest.cs"];
m49_2143 [label="reader = new JsonTextReader(new StringReader(json))", span="3286-3286", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JTokenWriterTest.cs"];
m49_2153 [label="reader = new JsonTextReader(new StringReader(json))", span="3299-3299", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JTokenWriterTest.cs"];
m49_2146 [label="reader.ReadAsDateTimeOffset()", span="3290-3290", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JTokenWriterTest.cs"];
m49_2149 [label="reader.ReadAsDateTimeOffset()", span="3293-3293", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JTokenWriterTest.cs"];
m49_2156 [label="reader.ReadAsDateTime()", span="3303-3303", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JTokenWriterTest.cs"];
m49_2159 [label="reader.ReadAsDateTime()", span="3306-3306", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JTokenWriterTest.cs"];
m49_2114 [label="reader.DateParseHandling = Json.DateParseHandling.DateTime", span="3248-3248", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JTokenWriterTest.cs"];
m49_2124 [label="reader.DateParseHandling = Json.DateParseHandling.DateTimeOffset", span="3261-3261", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JTokenWriterTest.cs"];
m49_2134 [label="reader.DateParseHandling = Json.DateParseHandling.None", span="3274-3274", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JTokenWriterTest.cs"];
m49_2144 [label="reader.DateParseHandling = Json.DateParseHandling.DateTime", span="3287-3287", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JTokenWriterTest.cs"];
m49_2154 [label="reader.DateParseHandling = Json.DateParseHandling.DateTimeOffset", span="3300-3300", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JTokenWriterTest.cs"];
m49_2112 [label="string json = @''[''''1970-01-01T00:00:00Z'''',''''\/Date(0)\/'''']''", span="3245-3245", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JTokenWriterTest.cs"];
m49_2163 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", span="3243-3243", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JTokenWriterTest.cs"];
m49_1616 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", span="2480-2480", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JTokenWriterTest.cs"];
m49_1624 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2504-2504", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JTokenWriterTest.cs"];
m49_1621 [label="Assert.IsTrue(reader.Read())", span="2500-2500", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JTokenWriterTest.cs"];
m49_1623 [label="Assert.IsTrue(reader.Read())", span="2503-2503", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JTokenWriterTest.cs"];
m49_1625 [label="Assert.IsFalse(reader.Read())", span="2506-2506", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JTokenWriterTest.cs"];
m49_1618 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2493-2493", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JTokenWriterTest.cs"];
m49_1620 [label="i < 26", span="2498-2498", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JTokenWriterTest.cs"];
m49_1622 [label="i++", span="2498-2498", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JTokenWriterTest.cs"];
m49_1617 [label="string json = @''/*comment*/ { /*comment*/\r\n        ''''Name'''': /*comment*/ ''''Apple'''' /*comment*/, /*comment*/\r\n        ''''ExpiryDate'''': ''''\/Date(1230422400000)\/'''',\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': /*comment*/ [ /*comment*/\r\n          ''''Small'''', /*comment*/\r\n          ''''Medium'''' /*comment*/,\r\n          /*comment*/ ''''Large''''\r\n        /*comment*/ ] /*comment*/\r\n      } /*comment*/''", span="2482-2491", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JTokenWriterTest.cs"];
m49_1619 [label="int i = 0", span="2498-2498", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JTokenWriterTest.cs"];
m49_1626 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", span="2480-2480", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JTokenWriterTest.cs"];
m49_607 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteStartArray()", span="196-196", cluster="Newtonsoft.Json.JsonTextWriter.WriteStartArray()", file="JTokenWriterTest.cs"];
m49_1295 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", span="2004-2004", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="JTokenWriterTest.cs"];
m49_1297 [label="reader.Read()", span="2008-2008", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="JTokenWriterTest.cs"];
m49_1296 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[}''))", span="2006-2006", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="JTokenWriterTest.cs"];
m49_1298 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected character encountered while parsing value: }. Path '', line 1, position 1.'')", span="2010-2010", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="JTokenWriterTest.cs"];
m49_1299 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", span="2004-2004", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="JTokenWriterTest.cs"];
m49_1092 [label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="454-454", cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="JTokenWriterTest.cs"];
m49_76 [label="Assert.IsTrue(jsonTextReader.Read())", span="165-165", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JTokenWriterTest.cs"];
m49_1469 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", span="2257-2257", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JTokenWriterTest.cs"];
m49_1473 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2264-2264", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JTokenWriterTest.cs"];
m49_1475 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2267-2267", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JTokenWriterTest.cs"];
m49_1477 [label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2270-2270", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JTokenWriterTest.cs"];
m49_1478 [label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2271-2271", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JTokenWriterTest.cs"];
m49_1479 [label="Assert.AreEqual(new DateTimeOffset(new DateTime(2011, 8, 1, 21, 25, 0, DateTimeKind.Utc), TimeSpan.Zero), reader.Value)", span="2272-2272", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JTokenWriterTest.cs"];
m49_1481 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2275-2275", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JTokenWriterTest.cs"];
m49_1472 [label="Assert.IsTrue(reader.Read())", span="2263-2263", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JTokenWriterTest.cs"];
m49_1474 [label="Assert.IsTrue(reader.Read())", span="2266-2266", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JTokenWriterTest.cs"];
m49_1480 [label="Assert.IsTrue(reader.Read())", span="2274-2274", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JTokenWriterTest.cs"];
m49_1471 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2261-2261", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JTokenWriterTest.cs"];
m49_1476 [label="reader.ReadAsDateTimeOffset()", span="2269-2269", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JTokenWriterTest.cs"];
m49_1470 [label="string json = @''{''''Offset'''':''''2011-08-01T21:25Z''''}''", span="2259-2259", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JTokenWriterTest.cs"];
m49_1482 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", span="2257-2257", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JTokenWriterTest.cs"];
m49_335 [label="Entry System.Text.Encoding.GetBytes(string)", span="0-0", cluster="System.Text.Encoding.GetBytes(string)", file="JTokenWriterTest.cs"];
m49_1088 [label="Entry System.IO.StringWriter.StringWriter(System.Text.StringBuilder)", span="0-0", cluster="System.IO.StringWriter.StringWriter(System.Text.StringBuilder)", file="JTokenWriterTest.cs"];
m49_135 [label="Entry Unk.Parse", span="", cluster="Unk.Parse", file="JTokenWriterTest.cs"];
m49_154 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsInt32()", span="394-394", cluster="Newtonsoft.Json.JsonTextReader.ReadAsInt32()", file="JTokenWriterTest.cs"];
m49_940 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", span="1537-1537", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JTokenWriterTest.cs"];
m49_943 [label="Assert.AreEqual(1, reader.ReadAsInt32())", span="1542-1542", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JTokenWriterTest.cs"];
m49_945 [label="Assert.AreEqual(-1, reader.ReadAsInt32())", span="1545-1545", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JTokenWriterTest.cs"];
m49_947 [label="Assert.AreEqual(0, reader.ReadAsInt32())", span="1548-1548", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JTokenWriterTest.cs"];
m49_949 [label="Assert.AreEqual(0, reader.ReadAsInt32())", span="1551-1551", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JTokenWriterTest.cs"];
m49_951 [label="Assert.AreEqual(int.MaxValue, reader.ReadAsInt32())", span="1554-1554", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JTokenWriterTest.cs"];
m49_953 [label="Assert.AreEqual(int.MinValue, reader.ReadAsInt32())", span="1557-1557", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JTokenWriterTest.cs"];
m49_963 [label="Assert.AreEqual(null, reader.ReadAsInt32())", span="1572-1572", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JTokenWriterTest.cs"];
m49_942 [label="reader = new JsonTextReader(new StringReader(''1''))", span="1541-1541", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JTokenWriterTest.cs"];
m49_944 [label="reader = new JsonTextReader(new StringReader(''-1''))", span="1544-1544", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JTokenWriterTest.cs"];
m49_946 [label="reader = new JsonTextReader(new StringReader(''0''))", span="1547-1547", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JTokenWriterTest.cs"];
m49_948 [label="reader = new JsonTextReader(new StringReader(''-0''))", span="1550-1550", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JTokenWriterTest.cs"];
m49_950 [label="reader = new JsonTextReader(new StringReader(int.MaxValue.ToString()))", span="1553-1553", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JTokenWriterTest.cs"];
m49_952 [label="reader = new JsonTextReader(new StringReader(int.MinValue.ToString()))", span="1556-1556", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JTokenWriterTest.cs"];
m49_954 [label="reader = new JsonTextReader(new StringReader(long.MaxValue.ToString()))", span="1559-1559", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JTokenWriterTest.cs"];
m49_956 [label="reader = new JsonTextReader(new StringReader(''9999999999999999999999999999999999999999999999999999999999999999999999999999asdasdasd''))", span="1562-1562", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JTokenWriterTest.cs"];
m49_958 [label="reader = new JsonTextReader(new StringReader(''1E-06''))", span="1565-1565", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JTokenWriterTest.cs"];
m49_960 [label="reader = new JsonTextReader(new StringReader(''1.1''))", span="1568-1568", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JTokenWriterTest.cs"];
m49_962 [label="reader = new JsonTextReader(new StringReader(''''))", span="1571-1571", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JTokenWriterTest.cs"];
m49_964 [label="reader = new JsonTextReader(new StringReader(''-''))", span="1574-1574", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JTokenWriterTest.cs"];
m49_941 [label="JsonTextReader reader = null", span="1539-1539", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JTokenWriterTest.cs"];
m49_955 [label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsInt32(), ''JSON integer 9223372036854775807 is too large or small for an Int32. Path '', line 1, position 19.'')", span="1560-1560", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JTokenWriterTest.cs"];
m49_957 [label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsInt32(), ''Unexpected character encountered while parsing number: s. Path '', line 1, position 77.'')", span="1563-1563", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JTokenWriterTest.cs"];
m49_959 [label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsInt32(), ''Input string '1E-06' is not a valid integer. Path '', line 1, position 5.'')", span="1566-1566", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JTokenWriterTest.cs"];
m49_961 [label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsInt32(), ''Input string '1.1' is not a valid integer. Path '', line 1, position 3.'')", span="1569-1569", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JTokenWriterTest.cs"];
m49_965 [label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsInt32(), ''Input string '-' is not a valid integer. Path '', line 1, position 1.'')", span="1575-1575", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JTokenWriterTest.cs"];
m49_966 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", span="1537-1537", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JTokenWriterTest.cs"];
m49_78 [label="Assert.AreEqual(''test'', jsonTextReader.Value)", span="167-167", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JTokenWriterTest.cs"];
m49_751 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", span="1213-1213", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JTokenWriterTest.cs"];
m49_762 [label="Assert.AreEqual(0, bufferPool.UsedBuffers.Count)", span="1244-1244", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JTokenWriterTest.cs"];
m49_763 [label="Assert.AreEqual(6, bufferPool.FreeBuffers.Count)", span="1245-1245", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JTokenWriterTest.cs"];
m49_758 [label="reader.Read()", span="1233-1233", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JTokenWriterTest.cs"];
m49_756 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1229-1229", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JTokenWriterTest.cs"];
m49_753 [label="FakeBufferPool bufferPool = new FakeBufferPool()", span="1225-1225", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JTokenWriterTest.cs"];
m49_755 [label="i < 1000", span="1227-1227", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JTokenWriterTest.cs"];
m49_757 [label="reader.BufferPool = bufferPool", span="1231-1231", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JTokenWriterTest.cs"];
m49_759 [label="(i + 1) % 100 == 0", span="1238-1238", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JTokenWriterTest.cs"];
m49_752 [label="string json = @''{\r\n              ''''CPU'''': ''''Intel'''',\r\n              ''''Description'''': ''''Amazing!\nBuy now!'''',\r\n              ''''Drives'''': [\r\n                ''''DVD read/writer'''',\r\n                ''''500 gigabyte hard drive'''',\r\n                ''''Amazing Drive'' + new string('!', 9000) + @''''''\r\n              ]\r\n            }''", span="1215-1223", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JTokenWriterTest.cs"];
m49_754 [label="int i = 0", span="1227-1227", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JTokenWriterTest.cs"];
m49_760 [label="Console.WriteLine(''Allocated buffers: '' + bufferPool.FreeBuffers.Count)", span="1240-1240", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JTokenWriterTest.cs"];
m49_761 [label="i++", span="1227-1227", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JTokenWriterTest.cs"];
m49_764 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", span="1213-1213", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JTokenWriterTest.cs"];
m49_2166 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", span="412-412", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", file="JTokenWriterTest.cs"];
m49_1303 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", span="2014-2014", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="JTokenWriterTest.cs"];
m49_1306 [label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="2019-2019", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="JTokenWriterTest.cs"];
m49_1304 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''''))", span="2016-2016", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="JTokenWriterTest.cs"];
m49_1305 [label="Assert.IsNull(reader.ReadAsDecimal())", span="2018-2018", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="JTokenWriterTest.cs"];
m49_1307 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", span="2014-2014", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="JTokenWriterTest.cs"];
m49_1413 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", span="2175-2175", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JTokenWriterTest.cs"];
m49_1417 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2182-2182", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JTokenWriterTest.cs"];
m49_1419 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2185-2185", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JTokenWriterTest.cs"];
m49_1421 [label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2188-2188", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JTokenWriterTest.cs"];
m49_1422 [label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2189-2189", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JTokenWriterTest.cs"];
m49_1423 [label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(-6)), reader.Value)", span="2190-2190", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JTokenWriterTest.cs"];
m49_1425 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2193-2193", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JTokenWriterTest.cs"];
m49_1416 [label="Assert.IsTrue(reader.Read())", span="2181-2181", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JTokenWriterTest.cs"];
m49_1418 [label="Assert.IsTrue(reader.Read())", span="2184-2184", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JTokenWriterTest.cs"];
m49_1424 [label="Assert.IsTrue(reader.Read())", span="2192-2192", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JTokenWriterTest.cs"];
m49_1415 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2179-2179", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JTokenWriterTest.cs"];
m49_1420 [label="reader.ReadAsDateTimeOffset()", span="2187-2187", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JTokenWriterTest.cs"];
m49_1414 [label="string json = @''{''''Offset'''':''''\/Date(946706400000-0600)\/''''}''", span="2177-2177", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JTokenWriterTest.cs"];
m49_1426 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", span="2175-2175", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JTokenWriterTest.cs"];
m49_583 [label="Entry string.String(char, int)", span="0-0", cluster="string.String(char, int)", file="JTokenWriterTest.cs"];
m49_1015 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", span="1613-1613", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JTokenWriterTest.cs"];
m49_1019 [label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1619-1619", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JTokenWriterTest.cs"];
m49_1020 [label="Assert.AreEqual(1.1d, reader.Value)", span="1620-1620", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JTokenWriterTest.cs"];
m49_1023 [label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1624-1624", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JTokenWriterTest.cs"];
m49_1024 [label="Assert.AreEqual(-1.1d, reader.Value)", span="1625-1625", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JTokenWriterTest.cs"];
m49_1027 [label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1629-1629", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JTokenWriterTest.cs"];
m49_1028 [label="Assert.AreEqual(0.0d, reader.Value)", span="1630-1630", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JTokenWriterTest.cs"];
m49_1031 [label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1634-1634", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JTokenWriterTest.cs"];
m49_1032 [label="Assert.AreEqual(-0.0d, reader.Value)", span="1635-1635", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JTokenWriterTest.cs"];
m49_1037 [label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1642-1642", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JTokenWriterTest.cs"];
m49_1038 [label="Assert.AreEqual(0.000001d, reader.Value)", span="1643-1643", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JTokenWriterTest.cs"];
m49_1018 [label="Assert.IsTrue(reader.Read())", span="1618-1618", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JTokenWriterTest.cs"];
m49_1022 [label="Assert.IsTrue(reader.Read())", span="1623-1623", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JTokenWriterTest.cs"];
m49_1026 [label="Assert.IsTrue(reader.Read())", span="1628-1628", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JTokenWriterTest.cs"];
m49_1030 [label="Assert.IsTrue(reader.Read())", span="1633-1633", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JTokenWriterTest.cs"];
m49_1036 [label="Assert.IsTrue(reader.Read())", span="1641-1641", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JTokenWriterTest.cs"];
m49_1040 [label="Assert.IsFalse(reader.Read())", span="1646-1646", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JTokenWriterTest.cs"];
m49_1017 [label="reader = new JsonTextReader(new StringReader(''1.1''))", span="1617-1617", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JTokenWriterTest.cs"];
m49_1021 [label="reader = new JsonTextReader(new StringReader(''-1.1''))", span="1622-1622", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JTokenWriterTest.cs"];
m49_1025 [label="reader = new JsonTextReader(new StringReader(''0.0''))", span="1627-1627", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JTokenWriterTest.cs"];
m49_1029 [label="reader = new JsonTextReader(new StringReader(''-0.0''))", span="1632-1632", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JTokenWriterTest.cs"];
m49_1033 [label="reader = new JsonTextReader(new StringReader(''9999999999999999999999999999999999999999999999999999999999999999999999999999asdasdasd''))", span="1637-1637", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JTokenWriterTest.cs"];
m49_1035 [label="reader = new JsonTextReader(new StringReader(''1E-06''))", span="1640-1640", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JTokenWriterTest.cs"];
m49_1039 [label="reader = new JsonTextReader(new StringReader(''''))", span="1645-1645", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JTokenWriterTest.cs"];
m49_1041 [label="reader = new JsonTextReader(new StringReader(''-''))", span="1648-1648", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JTokenWriterTest.cs"];
m49_1016 [label="JsonTextReader reader = null", span="1615-1615", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JTokenWriterTest.cs"];
m49_1034 [label="ExceptionAssert.Throws<JsonReaderException>(() => reader.Read(), ''Unexpected character encountered while parsing number: s. Path '', line 1, position 77.'')", span="1638-1638", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JTokenWriterTest.cs"];
m49_1042 [label="ExceptionAssert.Throws<JsonReaderException>(() => reader.Read(), ''Input string '-' is not a valid number. Path '', line 1, position 1.'')", span="1649-1649", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JTokenWriterTest.cs"];
m49_1043 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", span="1613-1613", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JTokenWriterTest.cs"];
m49_226 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", span="386-386", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JTokenWriterTest.cs"];
m49_230 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="393-393", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JTokenWriterTest.cs"];
m49_232 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="396-396", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JTokenWriterTest.cs"];
m49_234 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="399-399", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JTokenWriterTest.cs"];
m49_236 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="402-402", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JTokenWriterTest.cs"];
m49_229 [label="Assert.IsTrue(reader.Read())", span="392-392", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JTokenWriterTest.cs"];
m49_231 [label="Assert.IsTrue(reader.Read())", span="395-395", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JTokenWriterTest.cs"];
m49_233 [label="Assert.IsTrue(reader.Read())", span="398-398", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JTokenWriterTest.cs"];
m49_235 [label="Assert.IsTrue(reader.Read())", span="401-401", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JTokenWriterTest.cs"];
m49_228 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="390-390", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JTokenWriterTest.cs"];
m49_237 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected content while parsing JSON. Path 'u', line 1, position 27.'')", span="404-404", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JTokenWriterTest.cs"];
m49_227 [label="string json = @''{ ''''ItemName'''': ''''value'''', ''''u'''':netanelsalinger,''''r'''':9 }''", span="388-388", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JTokenWriterTest.cs"];
m49_238 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", span="386-386", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JTokenWriterTest.cs"];
m49_892 [label="Entry Unk.AreEquivalent", span="", cluster="Unk.AreEquivalent", file="JTokenWriterTest.cs"];
m49_57 [label="Assert.AreEqual(WriteState.Object, jsonWriter.WriteState)", span="90-90", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="JTokenWriterTest.cs"];
m49_2070 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", span="3184-3184", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JTokenWriterTest.cs"];
m49_2075 [label="Assert.AreEqual(false, reader.Value)", span="3193-3193", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JTokenWriterTest.cs"];
m49_2077 [label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="3196-3196", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JTokenWriterTest.cs"];
m49_2078 [label="Assert.AreEqual(true, reader.Value)", span="3197-3197", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JTokenWriterTest.cs"];
m49_2080 [label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="3200-3200", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JTokenWriterTest.cs"];
m49_2081 [label="Assert.AreEqual(true, reader.Value)", span="3201-3201", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JTokenWriterTest.cs"];
m49_2083 [label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="3204-3204", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JTokenWriterTest.cs"];
m49_2084 [label="Assert.AreEqual(false, reader.Value)", span="3205-3205", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JTokenWriterTest.cs"];
m49_2086 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="3208-3208", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JTokenWriterTest.cs"];
m49_2087 [label="Assert.AreEqual(''test!'', reader.Value)", span="3209-3209", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JTokenWriterTest.cs"];
m49_2089 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3212-3212", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JTokenWriterTest.cs"];
m49_2090 [label="Assert.AreEqual(1.11d, reader.Value)", span="3213-3213", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JTokenWriterTest.cs"];
m49_2092 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3216-3216", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JTokenWriterTest.cs"];
m49_2093 [label="Assert.AreEqual(0d, reader.Value)", span="3217-3217", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JTokenWriterTest.cs"];
m49_2095 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3220-3220", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JTokenWriterTest.cs"];
m49_2096 [label="Assert.AreEqual(0d, reader.Value)", span="3221-3221", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JTokenWriterTest.cs"];
m49_2098 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3224-3224", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JTokenWriterTest.cs"];
m49_2099 [label="Assert.AreEqual(0.0000025d, reader.Value)", span="3225-3225", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JTokenWriterTest.cs"];
m49_2101 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3228-3228", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JTokenWriterTest.cs"];
m49_2102 [label="Assert.AreEqual(3000000000d, reader.Value)", span="3229-3229", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JTokenWriterTest.cs"];
m49_2104 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3232-3232", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JTokenWriterTest.cs"];
m49_2105 [label="Assert.AreEqual(602214180000000000000000d, reader.Value)", span="3233-3233", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JTokenWriterTest.cs"];
m49_2107 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="3236-3236", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JTokenWriterTest.cs"];
m49_2108 [label="Assert.AreEqual(reader.Value, ''Purple\r \n monkey's:\tdishwasher'')", span="3237-3237", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JTokenWriterTest.cs"];
m49_2073 [label="Assert.IsTrue(reader.Read())", span="3190-3190", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JTokenWriterTest.cs"];
m49_2074 [label="Assert.IsTrue(reader.Read())", span="3192-3192", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JTokenWriterTest.cs"];
m49_2076 [label="Assert.IsTrue(reader.Read())", span="3195-3195", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JTokenWriterTest.cs"];
m49_2079 [label="Assert.IsTrue(reader.Read())", span="3199-3199", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JTokenWriterTest.cs"];
m49_2082 [label="Assert.IsTrue(reader.Read())", span="3203-3203", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JTokenWriterTest.cs"];
m49_2085 [label="Assert.IsTrue(reader.Read())", span="3207-3207", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JTokenWriterTest.cs"];
m49_2088 [label="Assert.IsTrue(reader.Read())", span="3211-3211", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JTokenWriterTest.cs"];
m49_2091 [label="Assert.IsTrue(reader.Read())", span="3215-3215", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JTokenWriterTest.cs"];
m49_2094 [label="Assert.IsTrue(reader.Read())", span="3219-3219", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JTokenWriterTest.cs"];
m49_2097 [label="Assert.IsTrue(reader.Read())", span="3223-3223", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JTokenWriterTest.cs"];
m49_2100 [label="Assert.IsTrue(reader.Read())", span="3227-3227", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JTokenWriterTest.cs"];
m49_2103 [label="Assert.IsTrue(reader.Read())", span="3231-3231", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JTokenWriterTest.cs"];
m49_2106 [label="Assert.IsTrue(reader.Read())", span="3235-3235", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JTokenWriterTest.cs"];
m49_2109 [label="Assert.IsTrue(reader.Read())", span="3239-3239", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JTokenWriterTest.cs"];
m49_2072 [label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="3188-3188", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JTokenWriterTest.cs"];
m49_2071 [label="string json = ''[false, true, true, false, 'test!', 1.11, 0e-10, 0E-10, 0.25e-5, 0.3e10, 6.0221418e23, 'Purple\\r \\n monkey\\'s:\\tdishwasher']''", span="3186-3186", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JTokenWriterTest.cs"];
m49_2110 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", span="3184-3184", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JTokenWriterTest.cs"];
m49_1615 [label="Entry System.DateTime.DateTime(long)", span="0-0", cluster="System.DateTime.DateTime(long)", file="JTokenWriterTest.cs"];
m49_642 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", span="1025-1025", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JTokenWriterTest.cs"];
m49_650 [label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="1057-1057", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JTokenWriterTest.cs"];
m49_647 [label="reader.Read()", span="1053-1053", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JTokenWriterTest.cs"];
m49_649 [label="reader.Read()", span="1056-1056", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JTokenWriterTest.cs"];
m49_644 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1046-1046", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JTokenWriterTest.cs"];
m49_646 [label="i < 15", span="1051-1051", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JTokenWriterTest.cs"];
m49_648 [label="i++", span="1051-1051", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JTokenWriterTest.cs"];
m49_643 [label="string json = @''[\r\n  {\r\n    ''''$id'''': ''''1'''',\r\n    ''''Name'''': ''''e1'''',\r\n    ''''Manager'''': null\r\n  },\r\n  {\r\n    ''''$id'''': ''''2'''',\r\n    ''''Name'''': ''''e2'''',\r\n    ''''Manager'''': null\r\n  },\r\n  {\r\n    ''''$ref'''': ''''1''''\r\n  },\r\n  {\r\n    ''''$ref'''': ''''2''''\r\n  }\r\n]''", span="1027-1044", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JTokenWriterTest.cs"];
m49_645 [label="int i = 0", span="1051-1051", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JTokenWriterTest.cs"];
m49_651 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", span="1025-1025", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JTokenWriterTest.cs"];
m49_1412 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="JTokenWriterTest.cs"];
m49_311 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()", file="JTokenWriterTest.cs"];
m49_1453 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", span="2235-2235", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JTokenWriterTest.cs"];
m49_1457 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2242-2242", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JTokenWriterTest.cs"];
m49_1459 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2245-2245", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JTokenWriterTest.cs"];
m49_1461 [label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2248-2248", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JTokenWriterTest.cs"];
m49_1462 [label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2249-2249", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JTokenWriterTest.cs"];
m49_1463 [label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(-6).Add(TimeSpan.FromMinutes(-31))), reader.Value)", span="2250-2250", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JTokenWriterTest.cs"];
m49_1465 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2253-2253", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JTokenWriterTest.cs"];
m49_1456 [label="Assert.IsTrue(reader.Read())", span="2241-2241", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JTokenWriterTest.cs"];
m49_1458 [label="Assert.IsTrue(reader.Read())", span="2244-2244", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JTokenWriterTest.cs"];
m49_1464 [label="Assert.IsTrue(reader.Read())", span="2252-2252", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JTokenWriterTest.cs"];
m49_1455 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2239-2239", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JTokenWriterTest.cs"];
m49_1460 [label="reader.ReadAsDateTimeOffset()", span="2247-2247", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JTokenWriterTest.cs"];
m49_1454 [label="string json = @''{''''Offset'''':''''\/Date(946708260000-0631)\/''''}''", span="2237-2237", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JTokenWriterTest.cs"];
m49_1466 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", span="2235-2235", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JTokenWriterTest.cs"];
m49_910 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", span="1461-1461", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JTokenWriterTest.cs"];
m49_914 [label="Assert.AreEqual(0, jsonReader.Depth)", span="1469-1469", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JTokenWriterTest.cs"];
m49_916 [label="Assert.AreEqual(JsonToken.StartObject, jsonReader.TokenType)", span="1472-1472", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JTokenWriterTest.cs"];
m49_917 [label="Assert.AreEqual(0, jsonReader.Depth)", span="1473-1473", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JTokenWriterTest.cs"];
m49_919 [label="Assert.AreEqual(JsonToken.PropertyName, jsonReader.TokenType)", span="1476-1476", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JTokenWriterTest.cs"];
m49_920 [label="Assert.AreEqual(1, jsonReader.Depth)", span="1477-1477", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JTokenWriterTest.cs"];
m49_922 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.String)", span="1480-1480", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JTokenWriterTest.cs"];
m49_923 [label="Assert.AreEqual(''Purple\r \n monkey's:\tdishwasher'', jsonReader.Value)", span="1481-1481", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JTokenWriterTest.cs"];
m49_924 [label="Assert.AreEqual('\'', jsonReader.QuoteChar)", span="1482-1482", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JTokenWriterTest.cs"];
m49_925 [label="Assert.AreEqual(1, jsonReader.Depth)", span="1483-1483", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JTokenWriterTest.cs"];
m49_927 [label="Assert.AreEqual(JsonToken.EndObject, jsonReader.TokenType)", span="1486-1486", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JTokenWriterTest.cs"];
m49_928 [label="Assert.AreEqual(0, jsonReader.Depth)", span="1487-1487", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JTokenWriterTest.cs"];
m49_913 [label="JsonReader jsonReader = new JsonTextReader(sr)", span="1467-1467", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JTokenWriterTest.cs"];
m49_912 [label="StringReader sr = new StringReader(input)", span="1465-1465", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JTokenWriterTest.cs"];
m49_915 [label="jsonReader.Read()", span="1471-1471", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JTokenWriterTest.cs"];
m49_918 [label="jsonReader.Read()", span="1475-1475", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JTokenWriterTest.cs"];
m49_921 [label="jsonReader.Read()", span="1479-1479", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JTokenWriterTest.cs"];
m49_926 [label="jsonReader.Read()", span="1485-1485", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JTokenWriterTest.cs"];
m49_911 [label="string input = ''{value:'Purple\\r \\n monkey\\'s:\\tdishwasher'}''", span="1463-1463", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JTokenWriterTest.cs"];
m49_929 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", span="1461-1461", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JTokenWriterTest.cs"];
m49_1777 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", span="2732-2732", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JTokenWriterTest.cs"];
m49_1781 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2738-2738", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JTokenWriterTest.cs"];
m49_1783 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2741-2741", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JTokenWriterTest.cs"];
m49_1785 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2744-2744", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JTokenWriterTest.cs"];
m49_1787 [label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="2747-2747", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JTokenWriterTest.cs"];
m49_1789 [label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2750-2750", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JTokenWriterTest.cs"];
m49_1791 [label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2753-2753", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JTokenWriterTest.cs"];
m49_1793 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2756-2756", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JTokenWriterTest.cs"];
m49_1795 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2759-2759", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JTokenWriterTest.cs"];
m49_1797 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2762-2762", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JTokenWriterTest.cs"];
m49_1780 [label="Assert.IsTrue(reader.Read())", span="2737-2737", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JTokenWriterTest.cs"];
m49_1782 [label="Assert.IsTrue(reader.Read())", span="2740-2740", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JTokenWriterTest.cs"];
m49_1784 [label="Assert.IsTrue(reader.Read())", span="2743-2743", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JTokenWriterTest.cs"];
m49_1786 [label="Assert.IsTrue(reader.Read())", span="2746-2746", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JTokenWriterTest.cs"];
m49_1788 [label="Assert.IsTrue(reader.Read())", span="2749-2749", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JTokenWriterTest.cs"];
m49_1790 [label="Assert.IsTrue(reader.Read())", span="2752-2752", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JTokenWriterTest.cs"];
m49_1792 [label="Assert.IsTrue(reader.Read())", span="2755-2755", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JTokenWriterTest.cs"];
m49_1794 [label="Assert.IsTrue(reader.Read())", span="2758-2758", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JTokenWriterTest.cs"];
m49_1796 [label="Assert.IsTrue(reader.Read())", span="2761-2761", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JTokenWriterTest.cs"];
m49_1798 [label="Assert.IsFalse(reader.Read())", span="2764-2764", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JTokenWriterTest.cs"];
m49_1779 [label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2735-2735", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JTokenWriterTest.cs"];
m49_1778 [label="string json = ''\x00a0{\x00a0'h\x00a0i\x00a0'\x00a0:\x00a0[\x00a0true\x00a0,\x00a0new\x00a0Date\x00a0(\x00a0)\x00a0]\x00a0/*\x00a0comment\x00a0*/\x00a0}\x00a0''", span="2734-2734", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JTokenWriterTest.cs"];
m49_1799 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", span="2732-2732", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JTokenWriterTest.cs"];
m49_1548 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", span="2373-2373", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="JTokenWriterTest.cs"];
m49_1549 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''nulz''))", span="2375-2375", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="JTokenWriterTest.cs"];
m49_1550 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Error parsing null value. Path '', line 0, position 0.'')", span="2377-2377", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="JTokenWriterTest.cs"];
m49_1551 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", span="2373-2373", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="JTokenWriterTest.cs"];
m49_810 [label="Entry Unk.IsNull", span="", cluster="Unk.IsNull", file="JTokenWriterTest.cs"];
m49_1135 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", span="1772-1772", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JTokenWriterTest.cs"];
m49_1139 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="1782-1782", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JTokenWriterTest.cs"];
m49_1141 [label="Assert.AreEqual(''<'', reader.Value)", span="1785-1785", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JTokenWriterTest.cs"];
m49_1143 [label="Assert.AreEqual(24352, Convert.ToInt32(Convert.ToChar((string)reader.Value)))", span="1788-1788", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JTokenWriterTest.cs"];
m49_1145 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="1791-1791", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JTokenWriterTest.cs"];
m49_1138 [label="reader.Read()", span="1781-1781", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JTokenWriterTest.cs"];
m49_1140 [label="reader.Read()", span="1784-1784", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JTokenWriterTest.cs"];
m49_1142 [label="reader.Read()", span="1787-1787", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JTokenWriterTest.cs"];
m49_1144 [label="reader.Read()", span="1790-1790", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JTokenWriterTest.cs"];
m49_1137 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1776-1776", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JTokenWriterTest.cs"];
m49_1136 [label="string json = @''[''''\u003c'''',''''\u5f20'''']''", span="1774-1774", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JTokenWriterTest.cs"];
m49_1146 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", span="1772-1772", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JTokenWriterTest.cs"];
m49_59 [label="Assert.AreEqual(WriteState.Property, jsonWriter.WriteState)", span="93-93", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="JTokenWriterTest.cs"];
m49_113 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", span="224-224", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JTokenWriterTest.cs"];
m49_117 [label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", span="234-234", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JTokenWriterTest.cs"];
m49_119 [label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="237-237", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JTokenWriterTest.cs"];
m49_121 [label="Assert.AreEqual(JsonToken.Integer, jsonTextReader.TokenType)", span="240-240", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JTokenWriterTest.cs"];
m49_123 [label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="243-243", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JTokenWriterTest.cs"];
m49_125 [label="Assert.AreEqual(JsonToken.Integer, jsonTextReader.TokenType)", span="246-246", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JTokenWriterTest.cs"];
m49_126 [label="Assert.AreEqual(typeof(BigInteger), jsonTextReader.ValueType)", span="247-247", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JTokenWriterTest.cs"];
m49_127 [label="Assert.AreEqual(BigInteger.Parse(''333333333333333333333333333333333333333''), jsonTextReader.Value)", span="248-248", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JTokenWriterTest.cs"];
m49_129 [label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", span="251-251", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JTokenWriterTest.cs"];
m49_133 [label="Assert.AreEqual(BigInteger.Parse(''333333333333333333333333333333333333333''), i)", span="257-257", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JTokenWriterTest.cs"];
m49_116 [label="Assert.IsTrue(jsonTextReader.Read())", span="233-233", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JTokenWriterTest.cs"];
m49_118 [label="Assert.IsTrue(jsonTextReader.Read())", span="236-236", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JTokenWriterTest.cs"];
m49_120 [label="Assert.IsTrue(jsonTextReader.Read())", span="239-239", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JTokenWriterTest.cs"];
m49_122 [label="Assert.IsTrue(jsonTextReader.Read())", span="242-242", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JTokenWriterTest.cs"];
m49_124 [label="Assert.IsTrue(jsonTextReader.Read())", span="245-245", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JTokenWriterTest.cs"];
m49_128 [label="Assert.IsTrue(jsonTextReader.Read())", span="250-250", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JTokenWriterTest.cs"];
m49_130 [label="Assert.IsFalse(jsonTextReader.Read())", span="253-253", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JTokenWriterTest.cs"];
m49_115 [label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="231-231", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JTokenWriterTest.cs"];
m49_132 [label="var i = (BigInteger)((JValue)o[''ChildId'']).Value", span="256-256", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JTokenWriterTest.cs"];
m49_131 [label="JObject o = JObject.Parse(json)", span="255-255", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JTokenWriterTest.cs"];
m49_114 [label="string json = @''{\r\n    ParentId: 1,\r\n    ChildId: 333333333333333333333333333333333333333,\r\n}''", span="226-229", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JTokenWriterTest.cs"];
m49_134 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", span="224-224", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JTokenWriterTest.cs"];
m49_2225 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedPathInExceptionMessage()", span="3380-3380", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedPathInExceptionMessage()", file="JTokenWriterTest.cs"];
m49_2226 [label="string json = @''{\r\n  ''''frameworks'''': {\r\n    ''''dnxcore50'''': {\r\n      ''''dependencies'''': {\r\n        ''''System.Xml.ReaderWriter'''': {\r\n          ''''source'''': !!! !!!\r\n        }\r\n      }\r\n    }\r\n  }\r\n}''", span="3382-3392", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedPathInExceptionMessage()", file="JTokenWriterTest.cs"];
m49_2227 [label="ExceptionAssert.Throws<JsonReaderException>(\r\n                () =>\r\n                {\r\n                    JsonTextReader reader = new JsonTextReader(new StringReader(json));\r\n                    while (reader.Read())\r\n                    {\r\n                    }\r\n                },\r\n                ''Unexpected character encountered while parsing value: !. Path 'frameworks.dnxcore50.dependencies['System.Xml.ReaderWriter'].source', line 6, position 20.'')", span="3394-3402", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedPathInExceptionMessage()", file="JTokenWriterTest.cs"];
m49_2228 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedPathInExceptionMessage()", span="3380-3380", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedPathInExceptionMessage()", file="JTokenWriterTest.cs"];
m49_1627 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", span="2510-2510", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JTokenWriterTest.cs"];
m49_1631 [label="Assert.AreEqual(''Date'', reader.Value)", span="2519-2519", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JTokenWriterTest.cs"];
m49_1632 [label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2520-2520", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JTokenWriterTest.cs"];
m49_1634 [label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2523-2523", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JTokenWriterTest.cs"];
m49_1630 [label="Assert.IsTrue(reader.Read())", span="2518-2518", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JTokenWriterTest.cs"];
m49_1633 [label="Assert.IsTrue(reader.Read())", span="2522-2522", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JTokenWriterTest.cs"];
m49_1629 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2513-2513", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JTokenWriterTest.cs"];
m49_1628 [label="string json = ''new Date\0()''", span="2512-2512", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JTokenWriterTest.cs"];
m49_1635 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", span="2510-2510", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JTokenWriterTest.cs"];
m49_1211 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", span="1883-1883", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JTokenWriterTest.cs"];
m49_1215 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1892-1892", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JTokenWriterTest.cs"];
m49_1217 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1895-1895", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JTokenWriterTest.cs"];
m49_1219 [label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="1898-1898", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JTokenWriterTest.cs"];
m49_1214 [label="reader.Read()", span="1891-1891", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JTokenWriterTest.cs"];
m49_1216 [label="reader.Read()", span="1894-1894", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JTokenWriterTest.cs"];
m49_1218 [label="reader.Read()", span="1897-1897", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JTokenWriterTest.cs"];
m49_1213 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1889-1889", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JTokenWriterTest.cs"];
m49_1220 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, @''Invalid character after parsing property name. Expected ':' but got: ''''. Path 'A', line 3, position 8.'')", span="1900-1900", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JTokenWriterTest.cs"];
m49_1212 [label="string json = @''{\r\n    ''''A'''' : true,\r\n    ''''B'''' ''''''", span="1885-1887", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JTokenWriterTest.cs"];
m49_1221 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", span="1883-1883", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JTokenWriterTest.cs"];
m49_1663 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", span="2569-2569", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JTokenWriterTest.cs"];
m49_1667 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2575-2575", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JTokenWriterTest.cs"];
m49_1669 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2578-2578", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JTokenWriterTest.cs"];
m49_1671 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2581-2581", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JTokenWriterTest.cs"];
m49_1673 [label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2584-2584", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JTokenWriterTest.cs"];
m49_1675 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2587-2587", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JTokenWriterTest.cs"];
m49_1677 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2590-2590", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JTokenWriterTest.cs"];
m49_1679 [label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2593-2593", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JTokenWriterTest.cs"];
m49_1681 [label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2596-2596", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JTokenWriterTest.cs"];
m49_1683 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="2599-2599", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JTokenWriterTest.cs"];
m49_1685 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2602-2602", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JTokenWriterTest.cs"];
m49_1687 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2605-2605", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JTokenWriterTest.cs"];
m49_1689 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2608-2608", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JTokenWriterTest.cs"];
m49_1691 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2611-2611", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JTokenWriterTest.cs"];
m49_1693 [label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="2614-2614", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JTokenWriterTest.cs"];
m49_1695 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2617-2617", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JTokenWriterTest.cs"];
m49_1697 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2620-2620", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JTokenWriterTest.cs"];
m49_1699 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2623-2623", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JTokenWriterTest.cs"];
m49_1701 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2626-2626", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JTokenWriterTest.cs"];
m49_1703 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2629-2629", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JTokenWriterTest.cs"];
m49_1666 [label="Assert.IsTrue(reader.Read())", span="2574-2574", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JTokenWriterTest.cs"];
m49_1668 [label="Assert.IsTrue(reader.Read())", span="2577-2577", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JTokenWriterTest.cs"];
m49_1670 [label="Assert.IsTrue(reader.Read())", span="2580-2580", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JTokenWriterTest.cs"];
m49_1672 [label="Assert.IsTrue(reader.Read())", span="2583-2583", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JTokenWriterTest.cs"];
m49_1674 [label="Assert.IsTrue(reader.Read())", span="2586-2586", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JTokenWriterTest.cs"];
m49_1676 [label="Assert.IsTrue(reader.Read())", span="2589-2589", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JTokenWriterTest.cs"];
m49_1678 [label="Assert.IsTrue(reader.Read())", span="2592-2592", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JTokenWriterTest.cs"];
m49_1680 [label="Assert.IsTrue(reader.Read())", span="2595-2595", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JTokenWriterTest.cs"];
m49_1682 [label="Assert.IsTrue(reader.Read())", span="2598-2598", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JTokenWriterTest.cs"];
m49_1684 [label="Assert.IsTrue(reader.Read())", span="2601-2601", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JTokenWriterTest.cs"];
m49_1686 [label="Assert.IsTrue(reader.Read())", span="2604-2604", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JTokenWriterTest.cs"];
m49_1688 [label="Assert.IsTrue(reader.Read())", span="2607-2607", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JTokenWriterTest.cs"];
m49_1690 [label="Assert.IsTrue(reader.Read())", span="2610-2610", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JTokenWriterTest.cs"];
m49_1692 [label="Assert.IsTrue(reader.Read())", span="2613-2613", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JTokenWriterTest.cs"];
m49_1694 [label="Assert.IsTrue(reader.Read())", span="2616-2616", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JTokenWriterTest.cs"];
m49_1696 [label="Assert.IsTrue(reader.Read())", span="2619-2619", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JTokenWriterTest.cs"];
m49_1698 [label="Assert.IsTrue(reader.Read())", span="2622-2622", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JTokenWriterTest.cs"];
m49_1700 [label="Assert.IsTrue(reader.Read())", span="2625-2625", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JTokenWriterTest.cs"];
m49_1702 [label="Assert.IsTrue(reader.Read())", span="2628-2628", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JTokenWriterTest.cs"];
m49_1704 [label="Assert.IsFalse(reader.Read())", span="2631-2631", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JTokenWriterTest.cs"];
m49_1664 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''{'prop1':[1]} 1 2 ''''name'''' [][]null {}{} 1.1''))", span="2571-2571", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JTokenWriterTest.cs"];
m49_1665 [label="reader.SupportMultipleContent = true", span="2572-2572", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JTokenWriterTest.cs"];
m49_1705 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", span="2569-2569", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JTokenWriterTest.cs"];
m49_2167 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", span="3314-3314", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JTokenWriterTest.cs"];
m49_2176 [label="Assert.AreEqual(''first'', jsonTextReader.Value)", span="3329-3329", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JTokenWriterTest.cs"];
m49_2181 [label="Assert.AreEqual(1L, jsonTextReader.Value)", span="3338-3338", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JTokenWriterTest.cs"];
m49_2170 [label="Assert.IsTrue(jsonTextReader.Read())", span="3319-3319", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JTokenWriterTest.cs"];
m49_2175 [label="Assert.IsTrue(jsonTextReader.Read())", span="3328-3328", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JTokenWriterTest.cs"];
m49_2180 [label="Assert.IsTrue(jsonTextReader.Read())", span="3337-3337", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JTokenWriterTest.cs"];
m49_2169 [label="JsonTextReader jsonTextReader = new JsonTextReader(toggleReaderError)", span="3317-3317", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JTokenWriterTest.cs"];
m49_2168 [label="ToggleReaderError toggleReaderError = new ToggleReaderError(new StringReader(''{'first':1,'second':2,'third':3}''))", span="3316-3316", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JTokenWriterTest.cs"];
m49_2177 [label="toggleReaderError.Error = true", span="3331-3331", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JTokenWriterTest.cs"];
m49_2182 [label="toggleReaderError.Error = true", span="3340-3340", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JTokenWriterTest.cs"];
m49_2171 [label="toggleReaderError.Error = true", span="3321-3321", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JTokenWriterTest.cs"];
m49_2174 [label="toggleReaderError.Error = false", span="3326-3326", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JTokenWriterTest.cs"];
m49_2179 [label="toggleReaderError.Error = false", span="3335-3335", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JTokenWriterTest.cs"];
m49_2172 [label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="3323-3323", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JTokenWriterTest.cs"];
m49_2173 [label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="3324-3324", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JTokenWriterTest.cs"];
m49_2178 [label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="3333-3333", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JTokenWriterTest.cs"];
m49_2183 [label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="3342-3342", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JTokenWriterTest.cs"];
m49_2184 [label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="3343-3343", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JTokenWriterTest.cs"];
m49_2185 [label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="3344-3344", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JTokenWriterTest.cs"];
m49_2186 [label="toggleReaderError.Error = false", span="3346-3346", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JTokenWriterTest.cs"];
m49_2187 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", span="3314-3314", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JTokenWriterTest.cs"];
m49_1439 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", span="2213-2213", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JTokenWriterTest.cs"];
m49_1443 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2220-2220", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JTokenWriterTest.cs"];
m49_1445 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2223-2223", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JTokenWriterTest.cs"];
m49_1447 [label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2226-2226", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JTokenWriterTest.cs"];
m49_1448 [label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2227-2227", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JTokenWriterTest.cs"];
m49_1449 [label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), reader.Value)", span="2228-2228", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JTokenWriterTest.cs"];
m49_1451 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2231-2231", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JTokenWriterTest.cs"];
m49_1442 [label="Assert.IsTrue(reader.Read())", span="2219-2219", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JTokenWriterTest.cs"];
m49_1444 [label="Assert.IsTrue(reader.Read())", span="2222-2222", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JTokenWriterTest.cs"];
m49_1450 [label="Assert.IsTrue(reader.Read())", span="2230-2230", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JTokenWriterTest.cs"];
m49_1441 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2217-2217", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JTokenWriterTest.cs"];
m49_1446 [label="reader.ReadAsDateTimeOffset()", span="2225-2225", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JTokenWriterTest.cs"];
m49_1440 [label="string json = ''{\''Offset\'':\''\\/Date(946663200000+06)\\/\''}''", span="2215-2215", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JTokenWriterTest.cs"];
m49_1452 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", span="2213-2213", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JTokenWriterTest.cs"];
m49_1234 [label="Entry System.Text.Encoding.GetString(byte[], int, int)", span="0-0", cluster="System.Text.Encoding.GetString(byte[], int, int)", file="JTokenWriterTest.cs"];
m49_327 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", span="543-543", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JTokenWriterTest.cs"];
m49_330 [label="reader.Read()", span="548-548", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JTokenWriterTest.cs"];
m49_329 [label="JsonTextReader reader = new JsonTextReader(new StreamReader(ms))", span="547-547", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JTokenWriterTest.cs"];
m49_331 [label="string s = (string)reader.Value", span="550-550", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JTokenWriterTest.cs"];
m49_328 [label="MemoryStream ms = new MemoryStream(Encoding.UTF8.GetBytes(@'''''''' + input + @''''''''))", span="545-545", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JTokenWriterTest.cs"];
m49_332 [label="return s;", span="552-552", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JTokenWriterTest.cs"];
m49_333 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", span="543-543", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JTokenWriterTest.cs"];
m49_407 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", span="700-700", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="JTokenWriterTest.cs"];
m49_409 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="704-704", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="JTokenWriterTest.cs"];
m49_408 [label="string json = @'''hi' a''", span="702-702", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="JTokenWriterTest.cs"];
m49_410 [label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                while (reader.Read())\r\n                {\r\n                }\r\n            }, ''Additional text encountered after finished reading JSON content: a. Path '', line 1, position 5.'')", span="706-711", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="JTokenWriterTest.cs"];
m49_411 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", span="700-700", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="JTokenWriterTest.cs"];
m49_1955 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", span="3018-3018", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JTokenWriterTest.cs"];
m49_1959 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="3025-3025", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JTokenWriterTest.cs"];
m49_1961 [label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="3028-3028", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JTokenWriterTest.cs"];
m49_1963 [label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="3031-3031", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JTokenWriterTest.cs"];
m49_1965 [label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="3034-3034", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JTokenWriterTest.cs"];
m49_1967 [label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="3037-3037", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JTokenWriterTest.cs"];
m49_1969 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="3040-3040", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JTokenWriterTest.cs"];
m49_1958 [label="reader.Read()", span="3024-3024", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JTokenWriterTest.cs"];
m49_1960 [label="reader.Read()", span="3027-3027", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JTokenWriterTest.cs"];
m49_1962 [label="reader.Read()", span="3030-3030", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JTokenWriterTest.cs"];
m49_1964 [label="reader.Read()", span="3033-3033", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JTokenWriterTest.cs"];
m49_1966 [label="reader.Read()", span="3036-3036", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JTokenWriterTest.cs"];
m49_1968 [label="reader.Read()", span="3039-3039", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JTokenWriterTest.cs"];
m49_1957 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3022-3022", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JTokenWriterTest.cs"];
m49_1956 [label="string json = @''[0,1,2 , 3]''", span="3020-3020", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JTokenWriterTest.cs"];
m49_1970 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", span="3018-3018", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JTokenWriterTest.cs"];
m49_155 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", span="285-285", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JTokenWriterTest.cs"];
m49_159 [label="Assert.AreEqual(JsonToken.StartArray, jsonTextReader.TokenType)", span="297-297", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JTokenWriterTest.cs"];
m49_165 [label="Assert.AreEqual(JsonToken.EndArray, jsonTextReader.TokenType)", span="308-308", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JTokenWriterTest.cs"];
m49_158 [label="Assert.IsTrue(jsonTextReader.Read())", span="296-296", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JTokenWriterTest.cs"];
m49_164 [label="Assert.IsTrue(jsonTextReader.Read())", span="307-307", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JTokenWriterTest.cs"];
m49_166 [label="Assert.IsFalse(jsonTextReader.Read())", span="310-310", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JTokenWriterTest.cs"];
m49_157 [label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="294-294", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JTokenWriterTest.cs"];
m49_160 [label="ExceptionAssert.Throws<JsonReaderException>(() => jsonTextReader.ReadAsInt32(), ''JSON integer 333333333333333333333333333333333333333 is too large or small for an Int32. Path '[0]', line 2, position 41.'')", span="299-299", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JTokenWriterTest.cs"];
m49_163 [label="ExceptionAssert.Throws<JsonReaderException>(() => jsonTextReader.ReadAsInt32(), ''Input string '0f' is not a valid integer. Path '[3]', line 5, position 4.'')", span="305-305", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JTokenWriterTest.cs"];
m49_156 [label="string json = @''[\r\n  333333333333333333333333333333333333333,\r\n  3.3,\r\n  ,\r\n  0f\r\n]''", span="287-292", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JTokenWriterTest.cs"];
m49_161 [label="ExceptionAssert.Throws<JsonReaderException>(() => jsonTextReader.ReadAsInt32(), ''Input string '3.3' is not a valid integer. Path '[1]', line 3, position 5.'')", span="301-301", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JTokenWriterTest.cs"];
m49_162 [label="ExceptionAssert.Throws<JsonReaderException>(() => jsonTextReader.ReadAsInt32(), ''Error reading integer. Unexpected token: Undefined. Path '[2]', line 4, position 2.'')", span="303-303", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JTokenWriterTest.cs"];
m49_167 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", span="285-285", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JTokenWriterTest.cs"];
m49_61 [label="Assert.AreEqual(WriteState.Object, jsonWriter.WriteState)", span="96-96", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="JTokenWriterTest.cs"];
m49_62 [label="jsonWriter.WritePropertyName(''Drives'')", span="98-98", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", color=green, community=0, file="JTokenWriterTest.cs"];
m49_63 [label="Assert.AreEqual(WriteState.Property, jsonWriter.WriteState)", span="99-99", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", color=green, community=0, file="JTokenWriterTest.cs"];
m49_64 [label="jsonWriter.WriteStartArray()", span="101-101", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", color=green, community=0, file="JTokenWriterTest.cs"];
m49_65 [label="Assert.AreEqual(WriteState.Array, jsonWriter.WriteState)", span="102-102", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", color=green, community=0, file="JTokenWriterTest.cs"];
m49_66 [label="jsonWriter.WriteValue(''DVD read/writer'')", span="104-104", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", color=green, community=0, file="JTokenWriterTest.cs"];
m49_67 [label="Assert.AreEqual(WriteState.Array, jsonWriter.WriteState)", span="105-105", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", color=green, community=0, file="JTokenWriterTest.cs"];
m49_68 [label="jsonWriter.WriteValue(new byte[0])", span="107-107", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", color=green, community=0, file="JTokenWriterTest.cs"];
m49_69 [label="Assert.AreEqual(WriteState.Array, jsonWriter.WriteState)", span="108-108", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", color=green, community=0, file="JTokenWriterTest.cs"];
m49_70 [label="jsonWriter.WriteEnd()", span="110-110", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", color=green, community=0, file="JTokenWriterTest.cs"];
m49_71 [label="Assert.AreEqual(WriteState.Object, jsonWriter.WriteState)", span="111-111", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", color=green, community=0, file="JTokenWriterTest.cs"];
m49_72 [label="jsonWriter.WriteEndObject()", span="113-113", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", color=green, community=0, file="JTokenWriterTest.cs"];
m49_73 [label="Assert.AreEqual(WriteState.Start, jsonWriter.WriteState)", span="114-114", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", color=green, community=0, file="JTokenWriterTest.cs"];
m49_74 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", span="83-83", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", color=green, community=0, file="JTokenWriterTest.cs"];
m49_82 [label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", span="173-173", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JTokenWriterTest.cs"];
m49_83 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", span="137-137", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JTokenWriterTest.cs"];
m49_1501 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", span="2304-2304", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JTokenWriterTest.cs"];
m49_1506 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2312-2312", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JTokenWriterTest.cs"];
m49_1508 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2315-2315", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JTokenWriterTest.cs"];
m49_1510 [label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2318-2318", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JTokenWriterTest.cs"];
m49_1511 [label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2319-2319", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JTokenWriterTest.cs"];
m49_1515 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2325-2325", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JTokenWriterTest.cs"];
m49_1513 [label="Assert.AreEqual(new DateTime(2011, 1, 30, 0, 0, 0, DateTimeKind.Unspecified), dt.DateTime)", span="2322-2322", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JTokenWriterTest.cs"];
m49_1505 [label="Assert.IsTrue(reader.Read())", span="2311-2311", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JTokenWriterTest.cs"];
m49_1507 [label="Assert.IsTrue(reader.Read())", span="2314-2314", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JTokenWriterTest.cs"];
m49_1514 [label="Assert.IsTrue(reader.Read())", span="2324-2324", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JTokenWriterTest.cs"];
m49_1503 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2308-2308", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JTokenWriterTest.cs"];
m49_1509 [label="reader.ReadAsDateTimeOffset()", span="2317-2317", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JTokenWriterTest.cs"];
m49_1512 [label="DateTimeOffset dt = (DateTimeOffset)reader.Value", span="2321-2321", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JTokenWriterTest.cs"];
m49_1504 [label="reader.Culture = new CultureInfo(''en-NZ'')", span="2309-2309", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JTokenWriterTest.cs"];
m49_1502 [label="string json = @''{''''Offset'''':''''30/1/2011''''}''", span="2306-2306", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JTokenWriterTest.cs"];
m49_1516 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", span="2304-2304", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JTokenWriterTest.cs"];
m49_1925 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", span="2970-2970", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JTokenWriterTest.cs"];
m49_1929 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2977-2977", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JTokenWriterTest.cs"];
m49_1930 [label="Assert.AreEqual(''comment'', reader.Value)", span="2978-2978", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JTokenWriterTest.cs"];
m49_1928 [label="Assert.IsTrue(reader.Read())", span="2976-2976", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JTokenWriterTest.cs"];
m49_1931 [label="Assert.IsFalse(reader.Read())", span="2980-2980", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JTokenWriterTest.cs"];
m49_1927 [label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2974-2974", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JTokenWriterTest.cs"];
m49_1926 [label="string json = @''//comment''", span="2972-2972", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JTokenWriterTest.cs"];
m49_1932 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", span="2970-2970", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JTokenWriterTest.cs"];
m49_1313 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", span="2032-2032", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="JTokenWriterTest.cs"];
m49_1314 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''{''))", span="2034-2034", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="JTokenWriterTest.cs"];
m49_1315 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Unexpected end when reading bytes. Path '', line 1, position 1.'')", span="2036-2036", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="JTokenWriterTest.cs"];
m49_1316 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", span="2032-2032", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="JTokenWriterTest.cs"];
m49_577 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", span="942-942", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="JTokenWriterTest.cs"];
m49_581 [label="Assert.AreEqual(s, reader.Value)", span="948-948", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="JTokenWriterTest.cs"];
m49_579 [label="JsonReader reader = new JsonTextReader(new StringReader(''''' + s + '''''))", span="945-945", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="JTokenWriterTest.cs"];
m49_578 [label="string s = new string('a', 10000)", span="944-944", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="JTokenWriterTest.cs"];
m49_580 [label="reader.Read()", span="946-946", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="JTokenWriterTest.cs"];
m49_582 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", span="942-942", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="JTokenWriterTest.cs"];
m49_794 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", span="1282-1282", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JTokenWriterTest.cs"];
m49_797 [label="JsonReader reader = new JsonTextReader(new StringReader(@''''' + Convert.ToBase64String(helloWorldData)))", span="1287-1287", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JTokenWriterTest.cs"];
m49_796 [label="byte[] helloWorldData = Encoding.UTF8.GetBytes(helloWorld)", span="1285-1285", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JTokenWriterTest.cs"];
m49_798 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Unterminated string. Expected delimiter: '. Path '', line 1, position 17.'')", span="1289-1289", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JTokenWriterTest.cs"];
m49_795 [label="string helloWorld = ''Hello world!''", span="1284-1284", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JTokenWriterTest.cs"];
m49_799 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", span="1282-1282", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JTokenWriterTest.cs"];
m49_2164 [label="Entry System.DateTime.DateTime(long, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(long, System.DateTimeKind)", file="JTokenWriterTest.cs"];
m49_2026 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", span="3120-3120", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JTokenWriterTest.cs"];
m49_2029 [label="Assert.IsTrue(reader.Read())", span="3129-3129", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JTokenWriterTest.cs"];
m49_2028 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                MaxDepth = 1\r\n            }", span="3124-3127", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JTokenWriterTest.cs"];
m49_2030 [label="ExceptionAssert.Throws<JsonReaderException>(() => { Assert.IsTrue(reader.Read()); }, ''The reader's MaxDepth of 1 has been exceeded. Path '[0]', line 1, position 2.'')", span="3131-3131", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JTokenWriterTest.cs"];
m49_2027 [label="string json = ''[[]]''", span="3122-3122", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JTokenWriterTest.cs"];
m49_2031 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", span="3120-3120", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JTokenWriterTest.cs"];
m49_786 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", span="1274-1274", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="JTokenWriterTest.cs"];
m49_787 [label="JsonReader reader = new JsonTextReader(new StringReader(@''true''))", span="1276-1276", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="JTokenWriterTest.cs"];
m49_788 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Error reading bytes. Unexpected token: Boolean. Path '', line 1, position 4.'')", span="1278-1278", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="JTokenWriterTest.cs"];
m49_789 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", span="1274-1274", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="JTokenWriterTest.cs"];
m49_699 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="JTokenWriterTest.cs"];
m49_150 [label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="358-358", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="JTokenWriterTest.cs"];
m49_357 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", span="606-606", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JTokenWriterTest.cs"];
m49_363 [label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="615-615", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JTokenWriterTest.cs"];
m49_364 [label="Assert.AreEqual(''Date'', reader.Value)", span="616-616", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JTokenWriterTest.cs"];
m49_366 [label="Assert.AreEqual(0L, reader.Value)", span="619-619", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JTokenWriterTest.cs"];
m49_368 [label="Assert.AreEqual(''hi'', reader.Value)", span="622-622", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JTokenWriterTest.cs"];
m49_370 [label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="625-625", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JTokenWriterTest.cs"];
m49_372 [label="Assert.AreEqual(''MemberConverter'', reader.Value)", span="628-628", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JTokenWriterTest.cs"];
m49_360 [label="Assert.IsTrue(reader.Read())", span="612-612", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JTokenWriterTest.cs"];
m49_361 [label="Assert.IsTrue(reader.Read())", span="613-613", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JTokenWriterTest.cs"];
m49_362 [label="Assert.IsTrue(reader.Read())", span="614-614", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JTokenWriterTest.cs"];
m49_365 [label="Assert.IsTrue(reader.Read())", span="618-618", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JTokenWriterTest.cs"];
m49_367 [label="Assert.IsTrue(reader.Read())", span="621-621", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JTokenWriterTest.cs"];
m49_369 [label="Assert.IsTrue(reader.Read())", span="624-624", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JTokenWriterTest.cs"];
m49_371 [label="Assert.IsTrue(reader.Read())", span="627-627", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JTokenWriterTest.cs"];
m49_359 [label="JsonReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="610-610", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JTokenWriterTest.cs"];
m49_358 [label="string json = @''{''''DefaultConverter'''':new Date(0, ''''hi''''),''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}''", span="608-608", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JTokenWriterTest.cs"];
m49_373 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", span="606-606", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JTokenWriterTest.cs"];
m49_1636 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", span="2527-2527", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JTokenWriterTest.cs"];
m49_1640 [label="Assert.AreEqual(''Date'', reader.Value)", span="2533-2533", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JTokenWriterTest.cs"];
m49_1641 [label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2534-2534", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JTokenWriterTest.cs"];
m49_1643 [label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2537-2537", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JTokenWriterTest.cs"];
m49_1639 [label="Assert.IsTrue(reader.Read())", span="2532-2532", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JTokenWriterTest.cs"];
m49_1642 [label="Assert.IsTrue(reader.Read())", span="2536-2536", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JTokenWriterTest.cs"];
m49_1638 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2530-2530", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JTokenWriterTest.cs"];
m49_1637 [label="string json = ''new Date\n()''", span="2529-2529", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JTokenWriterTest.cs"];
m49_1644 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", span="2527-2527", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JTokenWriterTest.cs"];
m49_267 [label="Entry System.Convert.ToDecimal(double)", span="0-0", cluster="System.Convert.ToDecimal(double)", file="JTokenWriterTest.cs"];
m49_1517 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", span="2330-2330", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JTokenWriterTest.cs"];
m49_1521 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2337-2337", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JTokenWriterTest.cs"];
m49_1523 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2340-2340", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JTokenWriterTest.cs"];
m49_1525 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2343-2343", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JTokenWriterTest.cs"];
m49_1526 [label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="2344-2344", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JTokenWriterTest.cs"];
m49_1527 [label="Assert.AreEqual(1m, reader.Value)", span="2345-2345", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JTokenWriterTest.cs"];
m49_1520 [label="Assert.IsTrue(reader.Read())", span="2336-2336", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JTokenWriterTest.cs"];
m49_1522 [label="Assert.IsTrue(reader.Read())", span="2339-2339", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JTokenWriterTest.cs"];
m49_1519 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2334-2334", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JTokenWriterTest.cs"];
m49_1524 [label="reader.ReadAsDecimal()", span="2342-2342", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JTokenWriterTest.cs"];
m49_1518 [label="string json = @''{''''Name'''':1}''", span="2332-2332", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JTokenWriterTest.cs"];
m49_1528 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", span="2330-2330", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JTokenWriterTest.cs"];
m49_1555 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", span="2381-2381", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", file="JTokenWriterTest.cs"];
m49_1556 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''nullz''))", span="2383-2383", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", file="JTokenWriterTest.cs"];
m49_1557 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Error parsing null value. Path '', line 1, position 4.'')", span="2385-2385", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", file="JTokenWriterTest.cs"];
m49_1558 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", span="2381-2381", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", file="JTokenWriterTest.cs"];
m49_356 [label="Entry Newtonsoft.Json.JsonReader.Read()", span="405-405", cluster="Newtonsoft.Json.JsonReader.Read()", file="JTokenWriterTest.cs"];
m49_1120 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", span="1749-1749", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JTokenWriterTest.cs"];
m49_1125 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="1757-1757", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JTokenWriterTest.cs"];
m49_1127 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1760-1760", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JTokenWriterTest.cs"];
m49_1128 [label="Assert.AreEqual(typeof(string), reader.ValueType)", span="1761-1761", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JTokenWriterTest.cs"];
m49_1129 [label="Assert.AreEqual(20000, reader.Value.ToString().Length)", span="1762-1762", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JTokenWriterTest.cs"];
m49_1131 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="1765-1765", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JTokenWriterTest.cs"];
m49_1133 [label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1768-1768", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JTokenWriterTest.cs"];
m49_1124 [label="reader.Read()", span="1756-1756", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JTokenWriterTest.cs"];
m49_1126 [label="reader.Read()", span="1759-1759", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JTokenWriterTest.cs"];
m49_1130 [label="Assert.IsTrue(reader.Read())", span="1764-1764", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JTokenWriterTest.cs"];
m49_1132 [label="Assert.IsFalse(reader.Read())", span="1767-1767", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JTokenWriterTest.cs"];
m49_1123 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1754-1754", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JTokenWriterTest.cs"];
m49_1122 [label="string json = @''['''''' + new string(' ', length) + @'''''']''", span="1752-1752", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JTokenWriterTest.cs"];
m49_1121 [label="int length = 20000", span="1751-1751", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JTokenWriterTest.cs"];
m49_1134 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", span="1749-1749", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JTokenWriterTest.cs"];
m49_1483 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JTokenWriterTest.cs"];
m49_1760 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", span="2710-2710", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JTokenWriterTest.cs"];
m49_1764 [label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2716-2716", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JTokenWriterTest.cs"];
m49_1766 [label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2719-2719", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JTokenWriterTest.cs"];
m49_1763 [label="Assert.IsTrue(reader.Read())", span="2715-2715", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JTokenWriterTest.cs"];
m49_1765 [label="Assert.IsTrue(reader.Read())", span="2718-2718", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JTokenWriterTest.cs"];
m49_1762 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2713-2713", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JTokenWriterTest.cs"];
m49_1761 [label="string json = ''new Date()''", span="2712-2712", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JTokenWriterTest.cs"];
m49_1767 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", span="2710-2710", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JTokenWriterTest.cs"];
m49_222 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", span="385-385", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="JTokenWriterTest.cs"];
m49_1147 [label="Entry System.Convert.ToChar(string)", span="0-0", cluster="System.Convert.ToChar(string)", file="JTokenWriterTest.cs"];
m49_610 [label="Entry System.IO.StringWriter.ToString()", span="0-0", cluster="System.IO.StringWriter.ToString()", file="JTokenWriterTest.cs"];
m49_1225 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", span="1904-1904", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JTokenWriterTest.cs"];
m49_1231 [label="Assert.AreEqual(''Hello world.'', text)", span="1913-1913", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JTokenWriterTest.cs"];
m49_1227 [label="JsonTextReader reader = new JsonTextReader(s)", span="1907-1907", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JTokenWriterTest.cs"];
m49_1226 [label="StringReader s = new StringReader(@''''''SGVsbG8gd29ybGQu'''''')", span="1906-1906", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JTokenWriterTest.cs"];
m49_1230 [label="string text = Encoding.UTF8.GetString(data, 0, data.Length)", span="1912-1912", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JTokenWriterTest.cs"];
m49_1228 [label="byte[] data = reader.ReadAsBytes()", span="1909-1909", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JTokenWriterTest.cs"];
m49_1229 [label="Assert.IsNotNull(data)", span="1910-1910", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JTokenWriterTest.cs"];
m49_1232 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", span="1904-1904", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JTokenWriterTest.cs"];
m49_1340 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", span="2068-2068", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="JTokenWriterTest.cs"];
m49_1341 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''new Date()''))", span="2070-2070", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="JTokenWriterTest.cs"];
m49_1342 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDateTimeOffset(); }, ''Error reading date. Unexpected token: StartConstructor. Path '', line 1, position 9.'')", span="2072-2072", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="JTokenWriterTest.cs"];
m49_1343 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", span="2068-2068", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="JTokenWriterTest.cs"];
m49_94 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsBytes()", span="376-376", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JTokenWriterTest.cs"];
m49_2307 [label="Newtonsoft.Json.Tests.JsonTextReaderTest", span="", file="JTokenWriterTest.cs"];
m49_2304 [label=reader, span="", file="JTokenWriterTest.cs"];
m49_2305 [label=reader, span="", file="JTokenWriterTest.cs"];
m49_2306 [label=reader, span="", file="JTokenWriterTest.cs"];
m49_2308 [label=reader, span="", file="JTokenWriterTest.cs"];
m49_2309 [label=reader, span="", file="JTokenWriterTest.cs"];
m49_2310 [label=reader, span="", file="JTokenWriterTest.cs"];
m49_2322 [label=reader, span="", file="JTokenWriterTest.cs"];
m49_2323 [label=reader, span="", file="JTokenWriterTest.cs"];
m49_2324 [label=reader, span="", file="JTokenWriterTest.cs"];
m49_2325 [label=reader, span="", file="JTokenWriterTest.cs"];
m49_2334 [label=reader, span="", file="JTokenWriterTest.cs"];
m49_2335 [label=reader, span="", file="JTokenWriterTest.cs"];
m49_2336 [label=reader, span="", file="JTokenWriterTest.cs"];
m49_2337 [label=reader, span="", file="JTokenWriterTest.cs"];
m49_2338 [label=reader, span="", file="JTokenWriterTest.cs"];
m49_2339 [label=reader, span="", file="JTokenWriterTest.cs"];
m49_2340 [label=reader, span="", file="JTokenWriterTest.cs"];
m49_2341 [label=reader, span="", file="JTokenWriterTest.cs"];
m49_2342 [label=reader, span="", file="JTokenWriterTest.cs"];
m49_2343 [label=reader, span="", file="JTokenWriterTest.cs"];
m49_2345 [label=reader, span="", file="JTokenWriterTest.cs"];
m49_2346 [label=reader, span="", file="JTokenWriterTest.cs"];
m49_2347 [label=jsonTextReader, span="", file="JTokenWriterTest.cs"];
m49_2312 [label=total, span="", file="JTokenWriterTest.cs"];
m49_2313 [label=total, span="", file="JTokenWriterTest.cs"];
m49_2348 [label=json, span="", file="JTokenWriterTest.cs"];
m49_2302 [label=jsonTextReader, span="", file="JTokenWriterTest.cs"];
m49_2303 [label=jsonTextReader, span="", file="JTokenWriterTest.cs"];
m49_2311 [label=reader, span="", file="JTokenWriterTest.cs"];
m49_2316 [label=reader, span="", file="JTokenWriterTest.cs"];
m49_2317 [label=reader, span="", file="JTokenWriterTest.cs"];
m49_2318 [label=reader, span="", file="JTokenWriterTest.cs"];
m49_2319 [label=reader, span="", file="JTokenWriterTest.cs"];
m49_2320 [label=reader, span="", file="JTokenWriterTest.cs"];
m49_2321 [label=reader, span="", file="JTokenWriterTest.cs"];
m49_2326 [label=reader, span="", file="JTokenWriterTest.cs"];
m49_2327 [label=reader, span="", file="JTokenWriterTest.cs"];
m49_2328 [label=reader, span="", file="JTokenWriterTest.cs"];
m49_2329 [label=reader, span="", file="JTokenWriterTest.cs"];
m49_2330 [label=reader, span="", file="JTokenWriterTest.cs"];
m49_2331 [label=reader, span="", file="JTokenWriterTest.cs"];
m49_2332 [label=reader, span="", file="JTokenWriterTest.cs"];
m49_2333 [label=reader, span="", file="JTokenWriterTest.cs"];
m49_2344 [label=reader, span="", file="JTokenWriterTest.cs"];
m49_2349 [label="Newtonsoft.Json.Tests.ToggleReaderError", span="", file="JTokenWriterTest.cs"];
m50_0 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Schema.SaveJsonSchemaToFile.Example()", span="11-11", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.SaveJsonSchemaToFile.Example()", file="JValue.cs"];
m50_1 [label="JsonSchema schema = new JsonSchema\r\n            {\r\n                Type = JsonSchemaType.Object\r\n            }", span="14-17", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.SaveJsonSchemaToFile.Example()", file="JValue.cs"];
m50_2 [label="File.WriteAllText(@''c:\schema.json'', schema.ToString())", span="20-20", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.SaveJsonSchemaToFile.Example()", file="JValue.cs"];
m50_5 [label="schema.WriteTo(writer)", span="26-26", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.SaveJsonSchemaToFile.Example()", file="JValue.cs"];
m50_3 [label="StreamWriter file = File.CreateText(@''c:\schema.json'')", span="23-23", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.SaveJsonSchemaToFile.Example()", file="JValue.cs"];
m50_4 [label="JsonTextWriter writer = new JsonTextWriter(file)", span="24-24", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.SaveJsonSchemaToFile.Example()", file="JValue.cs"];
m50_6 [label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Schema.SaveJsonSchemaToFile.Example()", span="11-11", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.SaveJsonSchemaToFile.Example()", file="JValue.cs"];
m50_12 [label="Entry Newtonsoft.Json.Schema.JsonSchema.WriteTo(Newtonsoft.Json.JsonWriter)", span="313-313", cluster="Newtonsoft.Json.Schema.JsonSchema.WriteTo(Newtonsoft.Json.JsonWriter)", file="JValue.cs"];
m50_7 [label="Entry Newtonsoft.Json.Schema.JsonSchema.JsonSchema()", span="252-252", cluster="Newtonsoft.Json.Schema.JsonSchema.JsonSchema()", file="JValue.cs"];
m50_11 [label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="124-124", cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JValue.cs"];
m50_10 [label="Entry Newtonsoft.Json.Tests.Documentation.File.CreateText(string)", span="63-63", cluster="Newtonsoft.Json.Tests.Documentation.File.CreateText(string)", file="JValue.cs"];
m50_8 [label="Entry Newtonsoft.Json.Schema.JsonSchema.ToString()", span="338-338", cluster="Newtonsoft.Json.Schema.JsonSchema.ToString()", file="JValue.cs"];
m50_9 [label="Entry Newtonsoft.Json.Tests.Documentation.File.WriteAllText(string, string)", span="68-68", cluster="Newtonsoft.Json.Tests.Documentation.File.WriteAllText(string, string)", file="JValue.cs"];
m51_15 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="LateBoundDelegateFactory.cs"];
m51_0 [label="Entry Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.ThreadSafeStore(System.Func<TKey, TValue>)", span="11-11", cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.ThreadSafeStore(System.Func<TKey, TValue>)", file="LateBoundDelegateFactory.cs"];
m51_1 [label="creator == null", span="13-13", cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.ThreadSafeStore(System.Func<TKey, TValue>)", file="LateBoundDelegateFactory.cs"];
m51_3 [label="_creator = creator", span="16-16", cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.ThreadSafeStore(System.Func<TKey, TValue>)", file="LateBoundDelegateFactory.cs"];
m51_2 [label="throw new ArgumentNullException(''creator'');", span="14-14", cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.ThreadSafeStore(System.Func<TKey, TValue>)", file="LateBoundDelegateFactory.cs"];
m51_4 [label="Exit Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.ThreadSafeStore(System.Func<TKey, TValue>)", span="11-11", cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.ThreadSafeStore(System.Func<TKey, TValue>)", file="LateBoundDelegateFactory.cs"];
m51_14 [label="Entry Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.AddValue(TKey)", span="31-31", cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.AddValue(TKey)", file="LateBoundDelegateFactory.cs"];
m51_16 [label="TValue value = _creator(key)", span="33-33", cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.AddValue(TKey)", file="LateBoundDelegateFactory.cs"];
m51_20 [label="_store[key] = value", span="40-40", cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.AddValue(TKey)", file="LateBoundDelegateFactory.cs"];
m51_22 [label="_store.TryGetValue(key, out checkValue)", span="46-46", cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.AddValue(TKey)", file="LateBoundDelegateFactory.cs"];
m51_25 [label="newStore[key] = value", span="50-50", cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.AddValue(TKey)", file="LateBoundDelegateFactory.cs"];
m51_17 [label=_lock, span="35-35", cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.AddValue(TKey)", file="LateBoundDelegateFactory.cs"];
m51_27 [label="return value;", span="55-55", cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.AddValue(TKey)", file="LateBoundDelegateFactory.cs"];
m51_18 [label="_store == null", span="37-37", cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.AddValue(TKey)", file="LateBoundDelegateFactory.cs"];
m51_19 [label="_store = new Dictionary<TKey, TValue>()", span="39-39", cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.AddValue(TKey)", file="LateBoundDelegateFactory.cs"];
m51_21 [label="TValue checkValue", span="45-45", cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.AddValue(TKey)", file="LateBoundDelegateFactory.cs"];
m51_23 [label="return checkValue;", span="47-47", cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.AddValue(TKey)", file="LateBoundDelegateFactory.cs"];
m51_24 [label="Dictionary<TKey, TValue> newStore = new Dictionary<TKey, TValue>(_store)", span="49-49", cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.AddValue(TKey)", file="LateBoundDelegateFactory.cs"];
m51_26 [label="_store = newStore", span="52-52", cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.AddValue(TKey)", file="LateBoundDelegateFactory.cs"];
m51_28 [label="Exit Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.AddValue(TKey)", span="31-31", cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.AddValue(TKey)", file="LateBoundDelegateFactory.cs"];
m51_29 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="LateBoundDelegateFactory.cs"];
m51_5 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="LateBoundDelegateFactory.cs"];
m51_31 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="LateBoundDelegateFactory.cs"];
m51_6 [label="Entry Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)", span="19-19", cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)", file="LateBoundDelegateFactory.cs"];
m51_7 [label="_store == null", span="21-21", cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)", file="LateBoundDelegateFactory.cs"];
m51_8 [label="return AddValue(key);", span="22-22", cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)", file="LateBoundDelegateFactory.cs"];
m51_10 [label="!_store.TryGetValue(key, out value)", span="25-25", cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)", file="LateBoundDelegateFactory.cs"];
m51_11 [label="return AddValue(key);", span="26-26", cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)", file="LateBoundDelegateFactory.cs"];
m51_9 [label="TValue value", span="24-24", cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)", file="LateBoundDelegateFactory.cs"];
m51_12 [label="return value;", span="28-28", cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)", file="LateBoundDelegateFactory.cs"];
m51_13 [label="Exit Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)", span="19-19", cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)", file="LateBoundDelegateFactory.cs"];
m51_30 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="LateBoundDelegateFactory.cs"];
m51_32 [label="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>", span="", file="LateBoundDelegateFactory.cs"];
m53_9 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.ReferenceLoopHandlingIgnore.Employee.Employee()", span="42-42", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.ReferenceLoopHandlingIgnore.Employee.Employee()", file="PerformanceTests.cs"];
m53_12 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="PerformanceTests.cs"];
m53_11 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="606-606", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="PerformanceTests.cs"];
m53_0 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.ReferenceLoopHandlingIgnore.Example()", span="50-50", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.ReferenceLoopHandlingIgnore.Example()", file="PerformanceTests.cs"];
m53_1 [label="Employee joe = new Employee { Name = ''Joe User'' }", span="53-53", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.ReferenceLoopHandlingIgnore.Example()", color=green, community=0, file="PerformanceTests.cs"];
m53_2 [label="Employee mike = new Employee { Name = ''Mike Manager'' }", span="54-54", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.ReferenceLoopHandlingIgnore.Example()", color=red, community=0, file="PerformanceTests.cs"];
m53_3 [label="joe.Manager = mike", span="55-55", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.ReferenceLoopHandlingIgnore.Example()", color=green, community=0, file="PerformanceTests.cs"];
m53_5 [label="string json = JsonConvert.SerializeObject(joe, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                ReferenceLoopHandling = ReferenceLoopHandling.Ignore\r\n            })", span="58-61", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.ReferenceLoopHandlingIgnore.Example()", color=green, community=0, file="PerformanceTests.cs"];
m53_4 [label="mike.Manager = mike", span="56-56", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.ReferenceLoopHandlingIgnore.Example()", color=red, community=0, file="PerformanceTests.cs"];
m53_6 [label="Console.WriteLine(json)", span="63-63", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.ReferenceLoopHandlingIgnore.Example()", file="PerformanceTests.cs", color=green, community=0];
m53_7 [label="Assert.AreEqual(@''{\r\n  ''''Name'''': ''''Joe User'''',\r\n  ''''Manager'''': {\r\n    ''''Name'''': ''''Mike Manager''''\r\n  }\r\n}'', json)", span="72-77", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.ReferenceLoopHandlingIgnore.Example()", color=green, community=0, file="PerformanceTests.cs"];
m53_8 [label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Serializer.ReferenceLoopHandlingIgnore.Example()", span="50-50", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.ReferenceLoopHandlingIgnore.Example()", file="PerformanceTests.cs"];
m53_13 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="PerformanceTests.cs"];
m53_10 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="390-390", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="PerformanceTests.cs"];
m54_3 [label="Entry Newtonsoft.Json.Tests.TestObjects.WagePerson.WagePerson()", span="7-7", cluster="Newtonsoft.Json.Tests.TestObjects.WagePerson.WagePerson()", file="PersonPropertyClass.cs"];
m54_0 [label="Entry Newtonsoft.Json.Tests.TestObjects.PersonPropertyClass.PersonPropertyClass()", span="11-11", cluster="Newtonsoft.Json.Tests.TestObjects.PersonPropertyClass.PersonPropertyClass()", file="PersonPropertyClass.cs"];
m54_1 [label="Person = new WagePerson()", span="13-13", cluster="Newtonsoft.Json.Tests.TestObjects.PersonPropertyClass.PersonPropertyClass()", color=green, community=0, file="PersonPropertyClass.cs"];
m54_2 [label="Exit Newtonsoft.Json.Tests.TestObjects.PersonPropertyClass.PersonPropertyClass()", span="11-11", cluster="Newtonsoft.Json.Tests.TestObjects.PersonPropertyClass.PersonPropertyClass()", file="PersonPropertyClass.cs"];
m54_4 [label="Newtonsoft.Json.Tests.TestObjects.PersonPropertyClass", span="", file="PersonPropertyClass.cs"];
m56_22 [label="Entry Newtonsoft.Json.Tests.TestObjects.Product.Product()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.Product.Product()", file="PopulateTests.cs"];
m56_20 [label="Entry Newtonsoft.Json.Tests.TestObjects.Store.Store()", span="46-46", cluster="Newtonsoft.Json.Tests.TestObjects.Store.Store()", file="PopulateTests.cs"];
m56_34 [label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="269-269", cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="PopulateTests.cs"];
m56_37 [label="Entry Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulateDictionary()", span="123-123", cluster="Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulateDictionary()", file="PopulateTests.cs"];
m56_38 [label="Dictionary<string, string> p = new Dictionary<string, string>()", span="125-125", cluster="Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulateDictionary()", file="PopulateTests.cs"];
m56_39 [label="JsonSerializer serializer = new JsonSerializer()", span="127-127", cluster="Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulateDictionary()", file="PopulateTests.cs"];
m56_40 [label="serializer.Populate(new StringReader(@''{''''Name'''':''''James''''}''), p)", span="128-128", cluster="Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulateDictionary()", file="PopulateTests.cs"];
m56_41 [label="Assert.AreEqual(1, p.Count)", span="130-130", cluster="Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulateDictionary()", file="PopulateTests.cs"];
m56_42 [label="Assert.AreEqual(''James'', p[''Name''])", span="131-131", cluster="Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulateDictionary()", file="PopulateTests.cs"];
m56_43 [label="Exit Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulateDictionary()", span="123-123", cluster="Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulateDictionary()", file="PopulateTests.cs"];
m56_6 [label="Entry Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", span="644-644", cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", file="PopulateTests.cs"];
m56_26 [label="Entry Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulateListOfPeople()", span="110-110", cluster="Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulateListOfPeople()", file="PopulateTests.cs"];
m56_27 [label="List<Person> p = new List<Person>()", span="112-112", cluster="Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulateListOfPeople()", file="PopulateTests.cs"];
m56_28 [label="JsonSerializer serializer = new JsonSerializer()", span="114-114", cluster="Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulateListOfPeople()", file="PopulateTests.cs"];
m56_29 [label="serializer.Populate(new StringReader(@''[{''''Name'''':''''James''''},{''''Name'''':''''Jim''''}]''), p)", span="115-115", cluster="Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulateListOfPeople()", file="PopulateTests.cs"];
m56_30 [label="Assert.AreEqual(2, p.Count)", span="117-117", cluster="Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulateListOfPeople()", file="PopulateTests.cs"];
m56_31 [label="Assert.AreEqual(''James'', p[0].Name)", span="118-118", cluster="Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulateListOfPeople()", file="PopulateTests.cs"];
m56_32 [label="Assert.AreEqual(''Jim'', p[1].Name)", span="119-119", cluster="Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulateListOfPeople()", file="PopulateTests.cs"];
m56_33 [label="Exit Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulateListOfPeople()", span="110-110", cluster="Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulateListOfPeople()", file="PopulateTests.cs"];
m56_5 [label="Entry Newtonsoft.Json.Tests.TestObjects.Person.Person()", span="34-34", cluster="Newtonsoft.Json.Tests.TestObjects.Person.Person()", file="PopulateTests.cs"];
m56_23 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="PopulateTests.cs"];
m56_21 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="PopulateTests.cs"];
m56_25 [label="Entry Newtonsoft.Json.JsonConvert.PopulateObject(string, object, Newtonsoft.Json.JsonSerializerSettings)", span="659-659", cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object, Newtonsoft.Json.JsonSerializerSettings)", file="PopulateTests.cs"];
m56_35 [label="Entry System.IO.StringReader.StringReader(string)", span="0-0", cluster="System.IO.StringReader.StringReader(string)", file="PopulateTests.cs"];
m56_36 [label="Entry Newtonsoft.Json.JsonSerializer.Populate(System.IO.TextReader, object)", span="324-324", cluster="Newtonsoft.Json.JsonSerializer.Populate(System.IO.TextReader, object)", file="PopulateTests.cs"];
m56_0 [label="Entry Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulatePerson()", span="38-38", cluster="Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulatePerson()", file="PopulateTests.cs"];
m56_1 [label="Person p = new Person()", span="40-40", cluster="Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulatePerson()", file="PopulateTests.cs"];
m56_2 [label="JsonConvert.PopulateObject(@''{''''Name'''':''''James''''}'', p)", span="42-42", cluster="Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulatePerson()", file="PopulateTests.cs"];
m56_3 [label="Assert.AreEqual(''James'', p.Name)", span="44-44", cluster="Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulatePerson()", file="PopulateTests.cs"];
m56_4 [label="Exit Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulatePerson()", span="38-38", cluster="Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulatePerson()", file="PopulateTests.cs"];
m56_44 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="PopulateTests.cs"];
m56_8 [label="Entry Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulateStore()", span="48-48", cluster="Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulateStore()", file="PopulateTests.cs"];
m56_9 [label="Store s = new Store()", span="50-50", cluster="Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulateStore()", file="PopulateTests.cs"];
m56_10 [label="s.Color = StoreColor.Red", span="51-51", cluster="Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulateStore()", file="PopulateTests.cs"];
m56_11 [label="s.product = new List<Product>\r\n        {\r\n          new Product\r\n            {\r\n              ExpiryDate = new DateTime(2000, 12, 3, 0, 0, 0, DateTimeKind.Utc),\r\n              Name = ''ProductName!'',\r\n              Price = 9.9m\r\n            }\r\n        }", span="52-60", cluster="Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulateStore()", file="PopulateTests.cs"];
m56_12 [label="s.Width = 99.99d", span="61-61", cluster="Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulateStore()", file="PopulateTests.cs"];
m56_13 [label="s.Mottos = new List<string> { ''Can do!'', ''We deliver!'' }", span="62-62", cluster="Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulateStore()", file="PopulateTests.cs"];
m56_15 [label="JsonConvert.PopulateObject(json, s, new JsonSerializerSettings\r\n        {\r\n          ObjectCreationHandling = ObjectCreationHandling.Replace\r\n        })", span="97-100", cluster="Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulateStore()", file="PopulateTests.cs"];
m56_16 [label="Assert.AreEqual(1, s.Mottos.Count)", span="102-102", cluster="Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulateStore()", file="PopulateTests.cs"];
m56_17 [label="Assert.AreEqual(''Fail whale'', s.Mottos[0])", span="103-103", cluster="Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulateStore()", file="PopulateTests.cs"];
m56_18 [label="Assert.AreEqual(1, s.product.Count)", span="104-104", cluster="Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulateStore()", file="PopulateTests.cs"];
m56_14 [label="string json = @''{\r\n  ''''Color'''': 2,\r\n  ''''Establised'''': ''''\/Date(1264122061000+0000)\/'''',\r\n  ''''Width'''': 99.99,\r\n  ''''Employees'''': 999,\r\n  ''''RoomsPerFloor'''': [\r\n    1,\r\n    2,\r\n    3,\r\n    4,\r\n    5,\r\n    6,\r\n    7,\r\n    8,\r\n    9\r\n  ],\r\n  ''''Open'''': false,\r\n  ''''Symbol'''': ''''@'''',\r\n  ''''Mottos'''': [\r\n    ''''Fail whale''''\r\n  ],\r\n  ''''Cost'''': 100980.1,\r\n  ''''Escape'''': ''''\r\n\t\f\b?{\\r\\n\''''''''',\r\n  ''''product'''': [\r\n    {\r\n      ''''Name'''': ''''ProductName!'''',\r\n      ''''ExpiryDate'''': ''''\/Date(975801600000)\/'''',\r\n      ''''Price'''': 9.9,\r\n      ''''Sizes'''': null\r\n    }\r\n  ]\r\n}''", span="64-95", cluster="Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulateStore()", file="PopulateTests.cs"];
m56_19 [label="Exit Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulateStore()", span="48-48", cluster="Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulateStore()", file="PopulateTests.cs"];
m56_7 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="PopulateTests.cs"];
m56_24 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="96-96", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="PopulateTests.cs"];
m57_0 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Xml.ConvertXmlToJson.Example()", span="10-10", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Xml.ConvertXmlToJson.Example()", file="ReflectionUtils.cs"];
m57_1 [label="string xml = @''<?xml version='1.0' standalone='no'?>\r\n            <root>\r\n              <person id='1'>\r\n              <name>Alan</name>\r\n              <url>http://www.google.com</url>\r\n              </person>\r\n              <person id='2'>\r\n              <name>Louis</name>\r\n              <url>http://www.yahoo.com</url>\r\n              </person>\r\n            </root>''", span="13-23", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Xml.ConvertXmlToJson.Example()", file="ReflectionUtils.cs"];
m57_2 [label="XmlDocument doc = new XmlDocument()", span="25-25", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Xml.ConvertXmlToJson.Example()", file="ReflectionUtils.cs"];
m57_3 [label="doc.LoadXml(xml)", span="26-26", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Xml.ConvertXmlToJson.Example()", file="ReflectionUtils.cs"];
m57_4 [label="string json = JsonConvert.SerializeXmlNode(doc)", span="28-28", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Xml.ConvertXmlToJson.Example()", file="ReflectionUtils.cs"];
m57_5 [label="Console.WriteLine(json)", span="30-30", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Xml.ConvertXmlToJson.Example()", file="ReflectionUtils.cs"];
m57_6 [label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Xml.ConvertXmlToJson.Example()", span="10-10", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Xml.ConvertXmlToJson.Example()", file="ReflectionUtils.cs"];
m57_10 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="ReflectionUtils.cs"];
m57_9 [label="Entry Unk.SerializeXmlNode", span="", cluster="Unk.SerializeXmlNode", file="ReflectionUtils.cs"];
m57_8 [label="Entry Unk.LoadXml", span="", cluster="Unk.LoadXml", file="ReflectionUtils.cs"];
m57_7 [label="Entry XmlDocument.cstr", span="", cluster="XmlDocument.cstr", file="ReflectionUtils.cs"];
m59_6 [label="Entry Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", span="162-162", cluster="Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", file="StringBuffer.cs"];
m59_7 [label="ContractType = JsonContractType.Object", span="165-165", cluster="Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", color=green, community=0, file="StringBuffer.cs"];
m59_8 [label="Properties = new JsonPropertyCollection(UnderlyingType)", span="167-167", cluster="Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", file="StringBuffer.cs"];
m59_9 [label="Exit Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", span="162-162", cluster="Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", file="StringBuffer.cs"];
m59_10 [label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(System.Type)", span="46-46", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(System.Type)", file="StringBuffer.cs"];
m59_3 [label="Entry Newtonsoft.Json.Utilities.StringBuffer.StringBuffer(int)", span="50-50", cluster="Newtonsoft.Json.Utilities.StringBuffer.StringBuffer(int)", file="StringBuffer.cs"];
m59_0 [label="Entry Newtonsoft.Json.Utilities.StringBuffer.StringBuffer()", span="45-45", cluster="Newtonsoft.Json.Utilities.StringBuffer.StringBuffer()", file="StringBuffer.cs"];
m59_1 [label="_buffer = _emptyBuffer", span="47-47", cluster="Newtonsoft.Json.Utilities.StringBuffer.StringBuffer()", file="StringBuffer.cs"];
m59_2 [label="Exit Newtonsoft.Json.Utilities.StringBuffer.StringBuffer()", span="45-45", cluster="Newtonsoft.Json.Utilities.StringBuffer.StringBuffer()", file="StringBuffer.cs"];
m59_4 [label="_buffer = new char[initalSize]", span="52-52", cluster="Newtonsoft.Json.Utilities.StringBuffer.StringBuffer(int)", file="StringBuffer.cs"];
m59_5 [label="Exit Newtonsoft.Json.Utilities.StringBuffer.StringBuffer(int)", span="50-50", cluster="Newtonsoft.Json.Utilities.StringBuffer.StringBuffer(int)", file="StringBuffer.cs"];
m59_24 [label="Entry Newtonsoft.Json.Utilities.StringBuffer.ToString(int, int)", span="87-87", cluster="Newtonsoft.Json.Utilities.StringBuffer.ToString(int, int)", file="StringBuffer.cs"];
m59_25 [label="return new string(_buffer, start, length);", span="90-90", cluster="Newtonsoft.Json.Utilities.StringBuffer.ToString(int, int)", file="StringBuffer.cs"];
m59_26 [label="Exit Newtonsoft.Json.Utilities.StringBuffer.ToString(int, int)", span="87-87", cluster="Newtonsoft.Json.Utilities.StringBuffer.ToString(int, int)", file="StringBuffer.cs"];
m59_28 [label="Entry Newtonsoft.Json.Utilities.StringBuffer.GetInternalBuffer()", span="93-93", cluster="Newtonsoft.Json.Utilities.StringBuffer.GetInternalBuffer()", file="StringBuffer.cs"];
m59_29 [label="return _buffer;", span="95-95", cluster="Newtonsoft.Json.Utilities.StringBuffer.GetInternalBuffer()", file="StringBuffer.cs"];
m59_30 [label="Exit Newtonsoft.Json.Utilities.StringBuffer.GetInternalBuffer()", span="93-93", cluster="Newtonsoft.Json.Utilities.StringBuffer.GetInternalBuffer()", file="StringBuffer.cs"];
m59_27 [label="Entry string.String(char[], int, int)", span="0-0", cluster="string.String(char[], int, int)", file="StringBuffer.cs"];
m59_12 [label="Entry Newtonsoft.Json.Utilities.StringBuffer.Clear()", span="67-67", cluster="Newtonsoft.Json.Utilities.StringBuffer.Clear()", file="StringBuffer.cs"];
m59_13 [label="_buffer = _emptyBuffer", span="69-69", cluster="Newtonsoft.Json.Utilities.StringBuffer.Clear()", file="StringBuffer.cs"];
m59_14 [label="_position = 0", span="70-70", cluster="Newtonsoft.Json.Utilities.StringBuffer.Clear()", file="StringBuffer.cs"];
m59_15 [label="Exit Newtonsoft.Json.Utilities.StringBuffer.Clear()", span="67-67", cluster="Newtonsoft.Json.Utilities.StringBuffer.Clear()", file="StringBuffer.cs"];
m59_20 [label="Entry System.Array.Copy(System.Array, System.Array, int)", span="0-0", cluster="System.Array.Copy(System.Array, System.Array, int)", file="StringBuffer.cs"];
m59_11 [label="Newtonsoft.Json.Serialization.JsonObjectContract", span="", cluster="Newtonsoft.Json.Utilities.StringBuffer.EnsureSize(int)", file="StringBuffer.cs"];
m59_16 [label="char[] newBuffer = new char[(_position + appendLength) * 2]", span="75-75", cluster="Newtonsoft.Json.Utilities.StringBuffer.EnsureSize(int)", file="StringBuffer.cs"];
m59_17 [label="Array.Copy(_buffer, newBuffer, _position)", span="77-77", cluster="Newtonsoft.Json.Utilities.StringBuffer.EnsureSize(int)", file="StringBuffer.cs"];
m59_18 [label="_buffer = newBuffer", span="79-79", cluster="Newtonsoft.Json.Utilities.StringBuffer.EnsureSize(int)", file="StringBuffer.cs"];
m59_19 [label="Exit Newtonsoft.Json.Utilities.StringBuffer.EnsureSize(int)", span="73-73", cluster="Newtonsoft.Json.Utilities.StringBuffer.EnsureSize(int)", file="StringBuffer.cs"];
m59_21 [label="Entry Newtonsoft.Json.Utilities.StringBuffer.ToString()", span="82-82", cluster="Newtonsoft.Json.Utilities.StringBuffer.ToString()", file="StringBuffer.cs"];
m59_22 [label="return ToString(0, _position);", span="84-84", cluster="Newtonsoft.Json.Utilities.StringBuffer.ToString()", file="StringBuffer.cs"];
m59_23 [label="Exit Newtonsoft.Json.Utilities.StringBuffer.ToString()", span="82-82", cluster="Newtonsoft.Json.Utilities.StringBuffer.ToString()", file="StringBuffer.cs"];
m59_31 [label="Newtonsoft.Json.Utilities.StringBuffer", span="", file="StringBuffer.cs"];
m61_2 [label="Entry Newtonsoft.Json.Tests.TestFixtureBase.WriteEscapedJson(string)", span="53-53", cluster="Newtonsoft.Json.Tests.TestFixtureBase.WriteEscapedJson(string)", file="TestFixtureBase.cs"];
m61_3 [label="Console.WriteLine(EscapeJson(json))", span="55-55", cluster="Newtonsoft.Json.Tests.TestFixtureBase.WriteEscapedJson(string)", file="TestFixtureBase.cs"];
m61_4 [label="Exit Newtonsoft.Json.Tests.TestFixtureBase.WriteEscapedJson(string)", span="53-53", cluster="Newtonsoft.Json.Tests.TestFixtureBase.WriteEscapedJson(string)", file="TestFixtureBase.cs"];
m61_6 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="TestFixtureBase.cs"];
m61_9 [label="Entry string.Replace(string, string)", span="0-0", cluster="string.Replace(string, string)", file="TestFixtureBase.cs"];
m61_5 [label="Entry Newtonsoft.Json.Tests.TestFixtureBase.EscapeJson(string)", span="58-58", cluster="Newtonsoft.Json.Tests.TestFixtureBase.EscapeJson(string)", file="TestFixtureBase.cs"];
m61_7 [label="return @''@'''''' + json.Replace(@'''''''', @'''''''''''') + @'''''''';", span="60-60", cluster="Newtonsoft.Json.Tests.TestFixtureBase.EscapeJson(string)", file="TestFixtureBase.cs"];
m61_8 [label="Exit Newtonsoft.Json.Tests.TestFixtureBase.EscapeJson(string)", span="58-58", cluster="Newtonsoft.Json.Tests.TestFixtureBase.EscapeJson(string)", file="TestFixtureBase.cs"];
m61_0 [label="Entry Newtonsoft.Json.Tests.TestFixtureBase.TestSetup()", span="39-39", cluster="Newtonsoft.Json.Tests.TestFixtureBase.TestSetup()", file="TestFixtureBase.cs"];
m61_1 [label="Exit Newtonsoft.Json.Tests.TestFixtureBase.TestSetup()", span="39-39", cluster="Newtonsoft.Json.Tests.TestFixtureBase.TestSetup()", file="TestFixtureBase.cs"];
m61_10 [label="Newtonsoft.Json.Tests.TestFixtureBase", span="", file="TestFixtureBase.cs"];
m63_4 [label="Entry Newtonsoft.Json.Tests.Documentation.LogEventInfo.LogEventInfo()", span="59-59", cluster="Newtonsoft.Json.Tests.Documentation.LogEventInfo.LogEventInfo()", file="XmlNodeConverter.cs"];
m63_5 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomTraceWriter.NLogTraceWriter.GetLogLevel(System.Diagnostics.TraceLevel)", span="35-35", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomTraceWriter.NLogTraceWriter.GetLogLevel(System.Diagnostics.TraceLevel)", file="XmlNodeConverter.cs"];
m63_7 [label=level, span="37-37", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomTraceWriter.NLogTraceWriter.GetLogLevel(System.Diagnostics.TraceLevel)", file="XmlNodeConverter.cs"];
m63_8 [label="TraceLevel.Error", span="39-39", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomTraceWriter.NLogTraceWriter.GetLogLevel(System.Diagnostics.TraceLevel)", file="XmlNodeConverter.cs"];
m63_10 [label="TraceLevel.Warning", span="41-41", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomTraceWriter.NLogTraceWriter.GetLogLevel(System.Diagnostics.TraceLevel)", file="XmlNodeConverter.cs"];
m63_12 [label="TraceLevel.Info", span="43-43", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomTraceWriter.NLogTraceWriter.GetLogLevel(System.Diagnostics.TraceLevel)", file="XmlNodeConverter.cs"];
m63_14 [label="TraceLevel.Off", span="45-45", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomTraceWriter.NLogTraceWriter.GetLogLevel(System.Diagnostics.TraceLevel)", file="XmlNodeConverter.cs"];
m63_16 [label="return LogLevel.Trace;", span="48-48", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomTraceWriter.NLogTraceWriter.GetLogLevel(System.Diagnostics.TraceLevel)", file="XmlNodeConverter.cs"];
m63_9 [label="return LogLevel.Error;", span="40-40", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomTraceWriter.NLogTraceWriter.GetLogLevel(System.Diagnostics.TraceLevel)", file="XmlNodeConverter.cs"];
m63_11 [label="return LogLevel.Warn;", span="42-42", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomTraceWriter.NLogTraceWriter.GetLogLevel(System.Diagnostics.TraceLevel)", file="XmlNodeConverter.cs"];
m63_13 [label="return LogLevel.Info;", span="44-44", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomTraceWriter.NLogTraceWriter.GetLogLevel(System.Diagnostics.TraceLevel)", file="XmlNodeConverter.cs"];
m63_15 [label="return LogLevel.Off;", span="46-46", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomTraceWriter.NLogTraceWriter.GetLogLevel(System.Diagnostics.TraceLevel)", file="XmlNodeConverter.cs"];
m63_17 [label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomTraceWriter.NLogTraceWriter.GetLogLevel(System.Diagnostics.TraceLevel)", span="35-35", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomTraceWriter.NLogTraceWriter.GetLogLevel(System.Diagnostics.TraceLevel)", file="XmlNodeConverter.cs"];
m63_27 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="XmlNodeConverter.cs"];
m63_6 [label="Entry Newtonsoft.Json.Tests.Documentation.Logger.Log(Newtonsoft.Json.Tests.Documentation.LogEventInfo)", span="77-77", cluster="Newtonsoft.Json.Tests.Documentation.Logger.Log(Newtonsoft.Json.Tests.Documentation.LogEventInfo)", file="XmlNodeConverter.cs"];
m63_25 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomTraceWriter.NLogTraceWriter.NLogTraceWriter()", span="12-12", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomTraceWriter.NLogTraceWriter.NLogTraceWriter()", file="XmlNodeConverter.cs"];
m63_26 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="606-606", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="XmlNodeConverter.cs"];
m63_23 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="XmlNodeConverter.cs"];
m63_0 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomTraceWriter.NLogTraceWriter.Trace(System.Diagnostics.TraceLevel, string, System.Exception)", span="22-22", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomTraceWriter.NLogTraceWriter.Trace(System.Diagnostics.TraceLevel, string, System.Exception)", file="XmlNodeConverter.cs"];
m63_1 [label="LogEventInfo logEvent = new LogEventInfo\r\n                {\r\n                    Message = message,\r\n                    Level = GetLogLevel(level),\r\n                    Exception = ex\r\n                }", span="24-29", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomTraceWriter.NLogTraceWriter.Trace(System.Diagnostics.TraceLevel, string, System.Exception)", color=red, community=0, file="XmlNodeConverter.cs"];
m63_2 [label="Logger.Log(logEvent)", span="32-32", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomTraceWriter.NLogTraceWriter.Trace(System.Diagnostics.TraceLevel, string, System.Exception)", file="XmlNodeConverter.cs"];
m63_3 [label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomTraceWriter.NLogTraceWriter.Trace(System.Diagnostics.TraceLevel, string, System.Exception)", span="22-22", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomTraceWriter.NLogTraceWriter.Trace(System.Diagnostics.TraceLevel, string, System.Exception)", file="XmlNodeConverter.cs"];
m63_18 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomTraceWriter.Example()", span="54-54", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomTraceWriter.Example()", file="XmlNodeConverter.cs"];
m63_19 [label="IList<string> countries = new List<string>\r\n            {\r\n                ''New Zealand'',\r\n                ''Australia'',\r\n                ''Denmark'',\r\n                ''China''\r\n            }", span="57-63", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomTraceWriter.Example()", file="XmlNodeConverter.cs"];
m63_20 [label="string json = JsonConvert.SerializeObject(countries, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                TraceWriter = new NLogTraceWriter()\r\n            })", span="65-68", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomTraceWriter.Example()", file="XmlNodeConverter.cs"];
m63_21 [label="Console.WriteLine(json)", span="70-70", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomTraceWriter.Example()", file="XmlNodeConverter.cs"];
m63_22 [label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomTraceWriter.Example()", span="54-54", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomTraceWriter.Example()", file="XmlNodeConverter.cs"];
m63_24 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="359-359", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="XmlNodeConverter.cs"];
m63_28 [label="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomTraceWriter.NLogTraceWriter", span="", file="XmlNodeConverter.cs"];
m0_47 -> m0_48  [key=0, style=solid, color=red];
m0_47 -> m0_50  [key=3, color=darkorchid, style=bold, label="method methodReturn bool CanConvert"];
m0_47 -> m0_53  [key=3, color=darkorchid, style=bold, label="method methodReturn bool CanConvert"];
m0_48 -> m0_49  [key=0, style=solid, color=red];
m0_48 -> m0_40  [key=2, style=dotted, color=red];
m0_48 -> m0_41  [key=2, style=dotted, color=red];
m0_48 -> m0_51  [key=1, style=dashed, color=red, label=t];
m0_49 -> m0_50  [key=0, style=solid, color=red];
m0_49 -> m0_51  [key=0, style=solid, color=red];
m0_49 -> m0_20  [key=2, style=dotted, color=red];
m0_51 -> m0_52  [key=0, style=solid, color=red];
m0_51 -> m0_53  [key=0, style=solid, color=red];
m0_50 -> m0_54  [key=0, style=solid];
m0_52 -> m0_54  [key=0, style=solid];
m0_53 -> m0_54  [key=0, style=solid];
m0_54 -> m0_47  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_0  [key=0, style=bold, color=blue];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_26  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m0_24 -> m0_27  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_24 -> m0_28  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_24 -> m0_30  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m0_24 -> m0_31  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m0_24 -> m0_32  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m0_24 -> m0_38  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_24 -> m0_29  [key=3, color=darkorchid, style=bold, label="method methodReturn object ReadJson"];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_40  [key=2, style=dotted];
m0_25 -> m0_41  [key=2, style=dotted];
m0_25 -> m0_34  [key=1, style=dashed, color=darkseagreen4, label=t];
m0_25 -> m0_35  [key=1, style=dashed, color=darkseagreen4, label=t];
m0_25 -> m0_36  [key=1, style=dashed, color=darkseagreen4, label=t];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_30  [key=0, style=solid];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_29  [key=0, style=solid];
m0_27 -> m0_42  [key=2, style=dotted];
m0_28 -> m0_39  [key=0, style=solid];
m0_28 -> m0_22  [key=2, style=dotted];
m0_28 -> m0_23  [key=2, style=dotted];
m0_30 -> m0_31  [key=0, style=solid];
m0_30 -> m0_32  [key=0, style=solid];
m0_31 -> m0_39  [key=0, style=solid];
m0_31 -> m0_22  [key=2, style=dotted];
m0_31 -> m0_23  [key=2, style=dotted];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_43  [key=2, style=dotted];
m0_38 -> m0_39  [key=0, style=solid];
m0_38 -> m0_22  [key=2, style=dotted];
m0_38 -> m0_23  [key=2, style=dotted];
m0_34 -> m0_35  [key=0, style=solid];
m0_34 -> m0_36  [key=0, style=solid];
m0_34 -> m0_20  [key=2, style=dotted];
m0_35 -> m0_39  [key=0, style=solid];
m0_35 -> m0_45  [key=2, style=dotted];
m0_36 -> m0_37  [key=0, style=solid];
m0_36 -> m0_38  [key=0, style=solid];
m0_29 -> m0_39  [key=0, style=solid];
m0_33 -> m0_34  [key=0, style=solid];
m0_33 -> m0_44  [key=2, style=dotted];
m0_33 -> m0_35  [key=1, style=dashed, color=darkseagreen4, label=data];
m0_33 -> m0_37  [key=1, style=dashed, color=darkseagreen4, label=data];
m0_37 -> m0_39  [key=0, style=solid];
m0_37 -> m0_46  [key=2, style=dotted];
m0_39 -> m0_24  [key=0, style=bold, color=blue];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_4  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_2 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_2 -> m0_7  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_6  [key=0, style=solid];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_9  [key=2, style=dotted];
m0_6 -> m0_7  [key=0, style=solid];
m0_6 -> m0_10  [key=2, style=dotted];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_11  [key=2, style=dotted];
m0_5 -> m0_8  [key=0, style=solid];
m0_8 -> m0_2  [key=0, style=bold, color=blue];
m0_10 -> m0_12  [key=0, style=solid];
m0_10 -> m0_13  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_10 -> m0_15  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_10 -> m0_16  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_10 -> m0_17  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_10 -> m0_2  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m0_10 -> m0_0  [key=3, color=darkorchid, style=bold, label="method methodReturn byte[] GetByteArray"];
m0_12 -> m0_13  [key=0, style=solid];
m0_12 -> m0_15  [key=0, style=solid];
m0_12 -> m0_19  [key=2, style=dotted];
m0_12 -> m0_20  [key=2, style=dotted];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_21  [key=2, style=dotted];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_17  [key=0, style=solid];
m0_16 -> m0_18  [key=0, style=solid];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_22  [key=2, style=dotted];
m0_17 -> m0_19  [key=2, style=dotted];
m0_17 -> m0_23  [key=2, style=dotted];
m0_14 -> m0_18  [key=0, style=solid];
m0_14 -> m0_0  [key=2, style=dotted];
m0_18 -> m0_10  [key=0, style=bold, color=blue];
m0_55 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.BinaryConverter"];
m2_20 -> m2_244  [key=0, style=solid];
m2_20 -> m2_21  [key=0, style=solid];
m2_244 -> m2_245  [key=0, style=solid];
m2_244 -> m2_264  [key=2, style=dotted];
m2_249 -> m2_250  [key=0, style=solid];
m2_249 -> m2_251  [key=0, style=solid];
m2_249 -> m2_181  [key=2, style=dotted];
m2_250 -> m2_249  [key=0, style=solid];
m2_250 -> m2_250  [key=1, style=dashed, color=darkseagreen4, label=byteCount];
m2_250 -> m2_251  [key=1, style=dashed, color=darkseagreen4, label=byteCount];
m2_250 -> m2_252  [key=1, style=dashed, color=darkseagreen4, label=byteCount];
m2_250 -> m2_253  [key=1, style=dashed, color=darkseagreen4, label=byteCount];
m2_250 -> m2_259  [key=1, style=dashed, color=darkseagreen4, label=byteCount];
m2_252 -> m2_253  [key=0, style=solid];
m2_252 -> m2_265  [key=2, style=dotted];
m2_252 -> m2_255  [key=1, style=dashed, color=darkseagreen4, label=length];
m2_252 -> m2_258  [key=1, style=dashed, color=darkseagreen4, label=length];
m2_254 -> m2_255  [key=0, style=solid];
m2_254 -> m2_167  [key=2, style=dotted];
m2_255 -> m2_263  [key=0, style=solid];
m2_255 -> m2_266  [key=2, style=dotted];
m2_258 -> m2_259  [key=0, style=solid];
m2_258 -> m2_268  [key=2, style=dotted];
m2_260 -> m2_261  [key=0, style=solid];
m2_260 -> m2_167  [key=2, style=dotted];
m2_245 -> m2_258  [key=1, style=dashed, color=darkseagreen4, label=builder];
m2_245 -> m2_245  [key=3, color=darkorchid, style=bold, label="Local variable System.Text.StringBuilder builder"];
m2_245 -> m2_246  [key=0, style=solid];
m2_245 -> m2_253  [key=1, style=dashed, color=darkseagreen4, label=builder];
m2_245 -> m2_256  [key=1, style=dashed, color=darkseagreen4, label=builder];
m2_245 -> m2_261  [key=1, style=dashed, color=darkseagreen4, label=builder];
m2_247 -> m2_249  [key=1, style=dashed, color=darkseagreen4, label=byteCount];
m2_247 -> m2_250  [key=1, style=dashed, color=darkseagreen4, label=byteCount];
m2_247 -> m2_252  [key=1, style=dashed, color=darkseagreen4, label=byteCount];
m2_247 -> m2_248  [key=0, style=solid];
m2_247 -> m2_251  [key=1, style=dashed, color=darkseagreen4, label=byteCount];
m2_247 -> m2_253  [key=1, style=dashed, color=darkseagreen4, label=byteCount];
m2_247 -> m2_259  [key=1, style=dashed, color=darkseagreen4, label=byteCount];
m2_247 -> m2_246  [key=3, color=darkorchid, style=bold, label="Local variable int byteCount"];
m2_248 -> m2_249  [key=0, style=solid];
m2_251 -> m2_252  [key=0, style=solid];
m2_251 -> m2_254  [key=1, style=dashed, color=darkseagreen4, label=totalBytesRead];
m2_251 -> m2_260  [key=1, style=dashed, color=darkseagreen4, label=totalBytesRead];
m2_251 -> m2_251  [key=1, style=dashed, color=darkseagreen4, label=totalBytesRead];
m2_253 -> m2_254  [key=0, style=solid];
m2_253 -> m2_256  [key=0, style=solid];
m2_259 -> m2_260  [key=0, style=solid];
m2_259 -> m2_262  [key=0, style=solid];
m2_256 -> m2_258  [key=0, style=solid];
m2_256 -> m2_257  [key=0, style=solid];
m2_257 -> m2_258  [key=0, style=solid];
m2_257 -> m2_267  [key=2, style=dotted];
m2_257 -> m2_261  [key=1, style=dashed, color=darkseagreen4, label=builder];
m2_261 -> m2_263  [key=0, style=solid];
m2_261 -> m2_269  [key=2, style=dotted];
m2_246 -> m2_247  [key=0, style=solid];
m2_246 -> m2_251  [key=1, style=dashed, color=darkseagreen4, label=totalBytesRead];
m2_246 -> m2_246  [key=3, color=darkorchid, style=bold, label="Local variable int totalBytesRead"];
m2_262 -> m2_263  [key=0, style=solid];
m2_262 -> m2_246  [key=0, style=solid];
m2_263 -> m2_20  [key=0, style=bold, color=blue];
m2_166 -> m2_168  [key=0, style=solid, color=green];
m2_168 -> m2_169  [key=0, style=solid, color=green];
m2_168 -> m2_173  [key=2, style=dotted, color=green];
m2_169 -> m2_170  [key=0, style=solid, color=green];
m2_169 -> m2_171  [key=0, style=solid, color=green];
m2_170 -> m2_172  [key=0, style=solid, color=green];
m2_171 -> m2_172  [key=0, style=solid, color=green];
m2_172 -> m2_166  [key=0, style=bold, color=blue];
m2_264 -> m2_298  [key=0, style=solid];
m2_298 -> m2_299  [key=0, style=solid];
m2_298 -> m2_300  [key=0, style=solid];
m2_299 -> m2_300  [key=0, style=solid];
m2_300 -> m2_301  [key=0, style=solid];
m2_300 -> m2_303  [key=0, style=solid];
m2_302 -> m2_303  [key=0, style=solid];
m2_301 -> m2_302  [key=0, style=solid];
m2_301 -> m2_304  [key=2, style=dotted];
m2_303 -> m2_264  [key=0, style=bold, color=blue];
m2_47 -> m2_113  [key=0, style=solid];
m2_47 -> m2_54  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ReadNormal"];
m2_47 -> m2_45  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ReadNormal"];
m2_135 -> m2_136  [key=0, style=solid, color=green];
m2_113 -> m2_135  [key=0, style=solid, color=green];
m2_113 -> m2_114  [key=0, style=solid];
m2_113 -> m2_122  [key=0, style=solid];
m2_113 -> m2_125  [key=0, style=solid];
m2_113 -> m2_128  [key=0, style=solid];
m2_113 -> m2_131  [key=0, style=solid];
m2_113 -> m2_157  [key=0, style=solid];
m2_113 -> m2_158  [key=0, style=solid];
m2_113 -> m2_159  [key=0, style=solid];
m2_113 -> m2_160  [key=0, style=solid];
m2_113 -> m2_161  [key=0, style=solid];
m2_136 -> m2_137  [key=0, style=solid];
m2_136 -> m2_139  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_136 -> m2_140  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_136 -> m2_141  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_136 -> m2_147  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_136 -> m2_152  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_136 -> m2_153  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_118 -> m2_119  [key=0, style=solid, color=green];
m2_118 -> m2_0  [key=2, style=dotted, color=green];
m2_118 -> m2_120  [key=1, style=dashed, color=green, label=newContext];
m2_116 -> m2_118  [key=1, style=dashed, color=green, label=type];
m2_116 -> m2_117  [key=0, style=solid];
m2_117 -> m2_118  [key=0, style=solid, color=green];
m2_117 -> m2_84  [key=2, style=dotted];
m2_119 -> m2_85  [key=2, style=dotted];
m2_119 -> m2_120  [key=0, style=solid];
m2_120 -> m2_121  [key=0, style=solid];
m2_120 -> m2_82  [key=2, style=dotted];
m2_150 -> m2_151  [key=0, style=solid, color=green];
m2_150 -> m2_166  [key=2, style=dotted, color=green];
m2_148 -> m2_150  [key=0, style=solid, color=green];
m2_148 -> m2_149  [key=0, style=solid];
m2_148 -> m2_165  [key=2, style=dotted];
m2_151 -> m2_152  [key=0, style=solid];
m2_151 -> m2_153  [key=0, style=solid];
m2_114 -> m2_115  [key=0, style=solid];
m2_122 -> m2_123  [key=0, style=solid];
m2_125 -> m2_126  [key=0, style=solid];
m2_128 -> m2_129  [key=0, style=solid];
m2_131 -> m2_132  [key=0, style=solid];
m2_157 -> m2_162  [key=0, style=solid];
m2_158 -> m2_162  [key=0, style=solid];
m2_159 -> m2_162  [key=0, style=solid];
m2_160 -> m2_162  [key=0, style=solid];
m2_161 -> m2_163  [key=0, style=solid];
m2_161 -> m2_86  [key=2, style=dotted];
m2_137 -> m2_138  [key=0, style=solid];
m2_137 -> m2_139  [key=0, style=solid];
m2_139 -> m2_140  [key=0, style=solid];
m2_139 -> m2_147  [key=1, style=dashed, color=darkseagreen4, label=lengthMinusEnd];
m2_140 -> m2_141  [key=0, style=solid];
m2_140 -> m2_147  [key=0, style=solid];
m2_141 -> m2_142  [key=0, style=solid];
m2_141 -> m2_145  [key=0, style=solid];
m2_147 -> m2_148  [key=0, style=solid];
m2_147 -> m2_156  [key=0, style=solid];
m2_152 -> m2_153  [key=0, style=solid];
m2_152 -> m2_167  [key=2, style=dotted];
m2_153 -> m2_154  [key=0, style=solid];
m2_115 -> m2_116  [key=0, style=solid];
m2_115 -> m2_117  [key=1, style=dashed, color=darkseagreen4, label=token];
m2_121 -> m2_163  [key=0, style=solid];
m2_123 -> m2_124  [key=0, style=solid];
m2_123 -> m2_14  [key=2, style=dotted];
m2_123 -> m2_81  [key=2, style=dotted];
m2_129 -> m2_130  [key=0, style=solid];
m2_129 -> m2_164  [key=2, style=dotted];
m2_132 -> m2_133  [key=0, style=solid];
m2_132 -> m2_14  [key=2, style=dotted];
m2_133 -> m2_134  [key=0, style=solid];
m2_133 -> m2_164  [key=2, style=dotted];
m2_142 -> m2_143  [key=0, style=solid];
m2_142 -> m2_14  [key=2, style=dotted];
m2_143 -> m2_144  [key=0, style=solid];
m2_143 -> m2_164  [key=2, style=dotted];
m2_145 -> m2_146  [key=0, style=solid];
m2_145 -> m2_14  [key=2, style=dotted];
m2_145 -> m2_81  [key=2, style=dotted];
m2_154 -> m2_84  [key=2, style=dotted];
m2_154 -> m2_155  [key=0, style=solid];
m2_149 -> m2_163  [key=0, style=solid];
m2_149 -> m2_28  [key=2, style=dotted];
m2_126 -> m2_127  [key=0, style=solid];
m2_162 -> m2_163  [key=0, style=solid];
m2_138 -> m2_163  [key=0, style=solid];
m2_156 -> m2_163  [key=0, style=solid];
m2_156 -> m2_28  [key=2, style=dotted];
m2_124 -> m2_163  [key=0, style=solid];
m2_130 -> m2_163  [key=0, style=solid];
m2_134 -> m2_163  [key=0, style=solid];
m2_144 -> m2_163  [key=0, style=solid];
m2_146 -> m2_163  [key=0, style=solid];
m2_155 -> m2_163  [key=0, style=solid];
m2_127 -> m2_163  [key=0, style=solid];
m2_163 -> m2_47  [key=0, style=bold, color=blue];
m2_167 -> m2_64  [key=3, color=darkorchid, style=bold, label="Parameter variable int count"];
m2_167 -> m2_52  [key=3, color=darkorchid, style=bold, label="Parameter variable int count"];
m2_167 -> m2_184  [key=3, color=darkorchid, style=bold, label="Parameter variable int count"];
m2_167 -> m2_270  [key=3, color=darkorchid, style=bold, label="Parameter variable int count"];
m2_167 -> m2_321  [key=0, style=solid];
m2_167 -> m2_112  [key=3, color=darkorchid, style=bold, label="Parameter variable int count"];
m2_321 -> m2_322  [key=0, style=solid];
m2_322 -> m2_167  [key=0, style=bold, color=blue];
m2_237 -> m2_313  [key=0, style=solid];
m2_313 -> m2_314  [key=0, style=solid];
m2_313 -> m2_167  [key=2, style=dotted];
m2_314 -> m2_315  [key=0, style=solid];
m2_314 -> m2_316  [key=2, style=dotted];
m2_315 -> m2_237  [key=0, style=bold, color=blue];
m2_5 -> m2_7  [key=1, style=dashed, color=darkseagreen4, label="System.IO.Stream"];
m2_5 -> m2_9  [key=1, style=dashed, color=darkseagreen4, label=bool];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_0  [key=0, style=bold, color=blue];
m2_7 -> m2_8  [key=0, style=solid, color=red];
m2_7 -> m2_12  [key=2, style=dotted];
m2_8 -> m2_9  [key=0, style=solid];
m2_8 -> m2_13  [key=2, style=dotted];
m2_8 -> m2_6  [key=0, style=bold, color=blue];
m2_9 -> m2_10  [key=0, style=solid, color=red];
m2_6 -> m2_7  [key=0, style=solid, color=red];
m2_6 -> m2_11  [key=2, style=dotted];
m2_10 -> m2_5  [key=0, style=bold, color=blue];
m2_10 -> m2_11  [key=0, style=solid, color=red];
m2_14 -> m2_15  [key=0, style=solid];
m2_14 -> m2_16  [key=3, color=darkorchid, style=bold, label="method methodReturn string ReadElement"];
m2_14 -> m2_12  [key=0, style=bold, color=blue];
m2_15 -> m2_16  [key=0, style=solid];
m2_15 -> m2_19  [key=2, style=dotted];
m2_16 -> m2_17  [key=0, style=solid];
m2_16 -> m2_20  [key=2, style=dotted];
m2_17 -> m2_18  [key=0, style=solid];
m2_17 -> m2_15  [key=0, style=bold, color=blue];
m2_18 -> m2_14  [key=0, style=bold, color=blue];
m2_18 -> m2_19  [key=0, style=solid];
m2_18 -> m2_20  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorContext"];
m2_11 -> m2_9  [key=0, style=bold, color=blue];
m2_21 -> m2_22  [key=0, style=solid];
m2_21 -> m2_18  [key=0, style=bold, color=blue];
m2_22 -> m2_23  [key=0, style=solid];
m2_22 -> m2_27  [key=2, style=dotted];
m2_22 -> m2_1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.SerializationEventTestObject"];
m2_22 -> m2_2  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.SerializationEventTestObject"];
m2_22 -> m2_3  [key=1, style=dashed, color=red, label="Newtonsoft.Json.Tests.TestObjects.SerializationEventTestObject"];
m2_22 -> m2_4  [key=1, style=dashed, color=red, label="Newtonsoft.Json.Tests.TestObjects.SerializationEventTestObject"];
m2_22 -> m2_7  [key=1, style=dashed, color=red, label="Newtonsoft.Json.Tests.TestObjects.SerializationEventTestObject"];
m2_22 -> m2_10  [key=1, style=dashed, color=red, label="Newtonsoft.Json.Tests.TestObjects.SerializationEventTestObject"];
m2_22 -> m2_13  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.SerializationEventTestObject"];
m2_22 -> m2_16  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.SerializationEventTestObject"];
m2_22 -> m2_19  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.SerializationEventTestObject"];
m2_23 -> m2_24  [key=0, style=solid];
m2_23 -> m2_25  [key=0, style=solid];
m2_24 -> m2_26  [key=0, style=solid];
m2_24 -> m2_28  [key=2, style=dotted];
m2_24 -> m2_29  [key=2, style=dotted];
m2_25 -> m2_26  [key=0, style=solid];
m2_26 -> m2_21  [key=0, style=bold, color=blue];
m2_12 -> m2_13  [key=0, style=solid];
m2_13 -> m2_14  [key=0, style=solid];
m2_165 -> m2_178  [key=0, style=solid];
m2_178 -> m2_179  [key=0, style=solid];
m2_178 -> m2_167  [key=2, style=dotted];
m2_179 -> m2_180  [key=0, style=solid];
m2_179 -> m2_181  [key=2, style=dotted];
m2_180 -> m2_165  [key=0, style=bold, color=blue];
m2_164 -> m2_182  [key=0, style=solid];
m2_164 -> m2_232  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonType"];
m2_190 -> m2_191  [key=0, style=solid, color=green];
m2_190 -> m2_0  [key=2, style=dotted, color=green];
m2_190 -> m2_192  [key=1, style=dashed, color=green, label=newContext];
m2_189 -> m2_190  [key=0, style=solid, color=green];
m2_189 -> m2_84  [key=2, style=dotted];
m2_191 -> m2_85  [key=2, style=dotted];
m2_191 -> m2_192  [key=0, style=solid];
m2_192 -> m2_233  [key=0, style=solid];
m2_192 -> m2_82  [key=2, style=dotted];
m2_195 -> m2_196  [key=0, style=solid, color=green];
m2_195 -> m2_0  [key=2, style=dotted, color=green];
m2_195 -> m2_197  [key=1, style=dashed, color=green, label=newContext];
m2_194 -> m2_195  [key=0, style=solid, color=green];
m2_194 -> m2_84  [key=2, style=dotted];
m2_196 -> m2_85  [key=2, style=dotted];
m2_196 -> m2_197  [key=0, style=solid];
m2_197 -> m2_233  [key=0, style=solid];
m2_197 -> m2_82  [key=2, style=dotted];
m2_184 -> m2_233  [key=0, style=solid];
m2_184 -> m2_234  [key=2, style=dotted];
m2_184 -> m2_81  [key=2, style=dotted];
m2_187 -> m2_233  [key=0, style=solid];
m2_187 -> m2_83  [key=2, style=dotted];
m2_187 -> m2_81  [key=2, style=dotted];
m2_199 -> m2_233  [key=0, style=solid];
m2_199 -> m2_235  [key=2, style=dotted];
m2_199 -> m2_81  [key=2, style=dotted];
m2_201 -> m2_84  [key=2, style=dotted];
m2_201 -> m2_233  [key=0, style=solid];
m2_203 -> m2_204  [key=0, style=solid];
m2_203 -> m2_112  [key=2, style=dotted];
m2_204 -> m2_233  [key=0, style=solid];
m2_204 -> m2_81  [key=2, style=dotted];
m2_206 -> m2_207  [key=0, style=solid];
m2_206 -> m2_165  [key=2, style=dotted];
m2_206 -> m2_236  [key=2, style=dotted];
m2_207 -> m2_233  [key=0, style=solid];
m2_207 -> m2_81  [key=2, style=dotted];
m2_209 -> m2_210  [key=0, style=solid];
m2_209 -> m2_237  [key=2, style=dotted];
m2_211 -> m2_233  [key=0, style=solid];
m2_211 -> m2_81  [key=2, style=dotted];
m2_213 -> m2_84  [key=2, style=dotted];
m2_213 -> m2_233  [key=0, style=solid];
m2_215 -> m2_216  [key=0, style=solid];
m2_215 -> m2_20  [key=2, style=dotted];
m2_215 -> m2_217  [key=1, style=dashed, color=darkseagreen4, label=expression];
m2_216 -> m2_217  [key=0, style=solid];
m2_216 -> m2_20  [key=2, style=dotted];
m2_218 -> m2_233  [key=0, style=solid];
m2_218 -> m2_81  [key=2, style=dotted];
m2_220 -> m2_84  [key=2, style=dotted];
m2_220 -> m2_221  [key=0, style=solid];
m2_221 -> m2_233  [key=0, style=solid];
m2_223 -> m2_233  [key=0, style=solid];
m2_223 -> m2_83  [key=2, style=dotted];
m2_223 -> m2_81  [key=2, style=dotted];
m2_225 -> m2_84  [key=2, style=dotted];
m2_225 -> m2_226  [key=0, style=solid];
m2_226 -> m2_233  [key=0, style=solid];
m2_228 -> m2_82  [key=2, style=dotted];
m2_228 -> m2_233  [key=0, style=solid];
m2_228 -> m2_81  [key=2, style=dotted];
m2_231 -> m2_233  [key=0, style=solid];
m2_231 -> m2_237  [key=2, style=dotted];
m2_231 -> m2_81  [key=2, style=dotted];
m2_188 -> m2_189  [key=0, style=solid];
m2_193 -> m2_194  [key=0, style=solid];
m2_183 -> m2_184  [key=0, style=solid];
m2_186 -> m2_187  [key=0, style=solid];
m2_198 -> m2_199  [key=0, style=solid];
m2_200 -> m2_201  [key=0, style=solid];
m2_202 -> m2_203  [key=0, style=solid];
m2_205 -> m2_206  [key=0, style=solid];
m2_208 -> m2_209  [key=0, style=solid];
m2_210 -> m2_211  [key=0, style=solid];
m2_210 -> m2_238  [key=2, style=dotted];
m2_212 -> m2_213  [key=0, style=solid];
m2_214 -> m2_215  [key=0, style=solid];
m2_217 -> m2_218  [key=0, style=solid];
m2_219 -> m2_220  [key=0, style=solid];
m2_222 -> m2_223  [key=0, style=solid];
m2_224 -> m2_225  [key=0, style=solid];
m2_227 -> m2_228  [key=0, style=solid];
m2_230 -> m2_231  [key=0, style=solid];
m2_182 -> m2_188  [key=0, style=solid];
m2_182 -> m2_193  [key=0, style=solid];
m2_182 -> m2_183  [key=0, style=solid];
m2_182 -> m2_198  [key=0, style=solid];
m2_182 -> m2_200  [key=0, style=solid];
m2_182 -> m2_202  [key=0, style=solid];
m2_182 -> m2_205  [key=0, style=solid];
m2_182 -> m2_208  [key=0, style=solid];
m2_182 -> m2_212  [key=0, style=solid];
m2_182 -> m2_214  [key=0, style=solid];
m2_182 -> m2_219  [key=0, style=solid];
m2_182 -> m2_222  [key=0, style=solid];
m2_182 -> m2_224  [key=0, style=solid];
m2_182 -> m2_227  [key=0, style=solid];
m2_182 -> m2_185  [key=0, style=solid];
m2_182 -> m2_229  [key=0, style=solid];
m2_182 -> m2_232  [key=0, style=solid];
m2_232 -> m2_233  [key=0, style=solid];
m2_232 -> m2_239  [key=2, style=dotted];
m2_185 -> m2_186  [key=0, style=solid];
m2_229 -> m2_230  [key=0, style=solid];
m2_233 -> m2_164  [key=0, style=bold, color=blue];
m2_19 -> m2_317  [key=0, style=solid];
m2_19 -> m2_20  [key=0, style=solid];
m2_317 -> m2_318  [key=0, style=solid];
m2_317 -> m2_167  [key=2, style=dotted];
m2_318 -> m2_319  [key=0, style=solid];
m2_318 -> m2_320  [key=2, style=dotted];
m2_319 -> m2_19  [key=0, style=bold, color=blue];
m2_276 -> m2_277  [key=0, style=solid];
m2_276 -> m2_282  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_276 -> m2_287  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_276 -> m2_290  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_276 -> m2_293  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_279 -> m2_280  [key=0, style=solid];
m2_279 -> m2_264  [key=2, style=dotted];
m2_283 -> m2_284  [key=0, style=solid];
m2_283 -> m2_296  [key=2, style=dotted];
m2_283 -> m2_286  [key=1, style=dashed, color=darkseagreen4, label=byteCount];
m2_283 -> m2_287  [key=1, style=dashed, color=darkseagreen4, label=byteCount];
m2_283 -> m2_292  [key=1, style=dashed, color=darkseagreen4, label=byteCount];
m2_286 -> m2_287  [key=0, style=solid];
m2_286 -> m2_265  [key=2, style=dotted];
m2_286 -> m2_288  [key=1, style=dashed, color=darkseagreen4, label=charCount];
m2_286 -> m2_291  [key=1, style=dashed, color=darkseagreen4, label=charCount];
m2_288 -> m2_295  [key=0, style=solid];
m2_288 -> m2_266  [key=2, style=dotted];
m2_291 -> m2_292  [key=0, style=solid];
m2_291 -> m2_268  [key=2, style=dotted];
m2_277 -> m2_279  [key=0, style=solid];
m2_277 -> m2_278  [key=0, style=solid];
m2_280 -> m2_291  [key=1, style=dashed, color=darkseagreen4, label=builder];
m2_280 -> m2_245  [key=3, color=darkorchid, style=bold, label="Local variable System.Text.StringBuilder builder"];
m2_280 -> m2_281  [key=0, style=solid];
m2_280 -> m2_289  [key=1, style=dashed, color=darkseagreen4, label=builder];
m2_280 -> m2_294  [key=1, style=dashed, color=darkseagreen4, label=builder];
m2_282 -> m2_283  [key=0, style=solid];
m2_281 -> m2_283  [key=3, color=darkorchid, style=bold, label="Local variable int totalBytesRead"];
m2_281 -> m2_282  [key=0, style=solid];
m2_281 -> m2_287  [key=1, style=dashed, color=darkseagreen4, label=totalBytesRead];
m2_281 -> m2_292  [key=1, style=dashed, color=darkseagreen4, label=totalBytesRead];
m2_281 -> m2_246  [key=3, color=darkorchid, style=bold, label="Local variable int totalBytesRead"];
m2_284 -> m2_286  [key=0, style=solid];
m2_284 -> m2_285  [key=0, style=solid];
m2_287 -> m2_288  [key=0, style=solid];
m2_287 -> m2_289  [key=0, style=solid];
m2_292 -> m2_292  [key=1, style=dashed, color=darkseagreen4, label=totalBytesRead];
m2_292 -> m2_293  [key=0, style=solid];
m2_290 -> m2_291  [key=0, style=solid];
m2_290 -> m2_267  [key=2, style=dotted];
m2_290 -> m2_294  [key=1, style=dashed, color=darkseagreen4, label=builder];
m2_289 -> m2_291  [key=0, style=solid];
m2_289 -> m2_290  [key=0, style=solid];
m2_293 -> m2_281  [key=0, style=solid];
m2_293 -> m2_294  [key=0, style=solid];
m2_278 -> m2_295  [key=0, style=solid];
m2_294 -> m2_295  [key=0, style=solid];
m2_294 -> m2_269  [key=2, style=dotted];
m2_285 -> m2_295  [key=0, style=solid];
m2_285 -> m2_297  [key=2, style=dotted];
m2_295 -> m2_276  [key=0, style=bold, color=blue];
m2_234 -> m2_305  [key=0, style=solid];
m2_305 -> m2_306  [key=0, style=solid];
m2_305 -> m2_167  [key=2, style=dotted];
m2_306 -> m2_307  [key=0, style=solid];
m2_306 -> m2_308  [key=2, style=dotted];
m2_307 -> m2_234  [key=0, style=bold, color=blue];
m2_112 -> m2_201  [key=3, color=darkorchid, style=bold, label="Parameter variable int count"];
m2_112 -> m2_240  [key=3, color=darkorchid, style=bold, label="Parameter variable int count"];
m2_112 -> m2_323  [key=0, style=solid];
m2_112 -> m2_324  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_323 -> m2_324  [key=0, style=solid];
m2_323 -> m2_167  [key=2, style=dotted];
m2_324 -> m2_325  [key=0, style=solid];
m2_324 -> m2_326  [key=2, style=dotted];
m2_325 -> m2_112  [key=0, style=bold, color=blue];
m2_49 -> m2_50  [key=0, style=solid];
m2_49 -> m2_71  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ReadCodeWScope"];
m2_49 -> m2_54  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ReadCodeWScope"];
m2_66 -> m2_67  [key=0, style=solid, color=green];
m2_66 -> m2_0  [key=2, style=dotted, color=green];
m2_66 -> m2_68  [key=1, style=dashed, color=green, label=newContext];
m2_65 -> m2_66  [key=0, style=solid, color=green];
m2_67 -> m2_85  [key=2, style=dotted];
m2_67 -> m2_68  [key=0, style=solid];
m2_68 -> m2_69  [key=0, style=solid];
m2_68 -> m2_82  [key=2, style=dotted];
m2_64 -> m2_65  [key=0, style=solid];
m2_64 -> m2_84  [key=2, style=dotted];
m2_69 -> m2_80  [key=0, style=solid];
m2_50 -> m2_51  [key=0, style=solid];
m2_50 -> m2_55  [key=0, style=solid];
m2_50 -> m2_60  [key=0, style=solid];
m2_50 -> m2_70  [key=0, style=solid];
m2_50 -> m2_75  [key=0, style=solid];
m2_50 -> m2_79  [key=0, style=solid];
m2_52 -> m2_53  [key=0, style=solid];
m2_52 -> m2_81  [key=2, style=dotted];
m2_53 -> m2_54  [key=0, style=solid];
m2_56 -> m2_82  [key=2, style=dotted];
m2_56 -> m2_57  [key=0, style=solid];
m2_57 -> m2_58  [key=0, style=solid];
m2_57 -> m2_83  [key=2, style=dotted];
m2_57 -> m2_81  [key=2, style=dotted];
m2_58 -> m2_59  [key=0, style=solid];
m2_61 -> m2_64  [key=0, style=solid];
m2_61 -> m2_62  [key=0, style=solid];
m2_62 -> m2_63  [key=0, style=solid];
m2_62 -> m2_81  [key=2, style=dotted];
m2_71 -> m2_47  [key=2, style=dotted];
m2_71 -> m2_72  [key=0, style=solid];
m2_71 -> m2_74  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_72 -> m2_73  [key=0, style=solid];
m2_72 -> m2_74  [key=0, style=solid];
m2_73 -> m2_74  [key=0, style=solid];
m2_76 -> m2_84  [key=2, style=dotted];
m2_76 -> m2_77  [key=0, style=solid];
m2_77 -> m2_78  [key=0, style=solid];
m2_54 -> m2_80  [key=0, style=solid];
m2_51 -> m2_52  [key=0, style=solid];
m2_55 -> m2_56  [key=0, style=solid];
m2_60 -> m2_61  [key=0, style=solid];
m2_70 -> m2_71  [key=0, style=solid];
m2_75 -> m2_76  [key=0, style=solid];
m2_79 -> m2_80  [key=0, style=solid];
m2_79 -> m2_86  [key=2, style=dotted];
m2_59 -> m2_80  [key=0, style=solid];
m2_63 -> m2_80  [key=0, style=solid];
m2_74 -> m2_80  [key=0, style=solid];
m2_78 -> m2_80  [key=0, style=solid];
m2_80 -> m2_49  [key=0, style=bold, color=blue];
m2_48 -> m2_87  [key=0, style=solid];
m2_48 -> m2_54  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ReadReference"];
m2_87 -> m2_88  [key=0, style=solid];
m2_87 -> m2_92  [key=0, style=solid];
m2_87 -> m2_100  [key=0, style=solid];
m2_87 -> m2_110  [key=0, style=solid];
m2_89 -> m2_90  [key=0, style=solid];
m2_89 -> m2_81  [key=2, style=dotted];
m2_90 -> m2_91  [key=0, style=solid];
m2_93 -> m2_94  [key=0, style=solid];
m2_93 -> m2_96  [key=0, style=solid];
m2_94 -> m2_95  [key=0, style=solid];
m2_94 -> m2_83  [key=2, style=dotted];
m2_94 -> m2_81  [key=2, style=dotted];
m2_96 -> m2_97  [key=0, style=solid];
m2_96 -> m2_99  [key=0, style=solid];
m2_97 -> m2_98  [key=0, style=solid];
m2_97 -> m2_112  [key=2, style=dotted];
m2_97 -> m2_81  [key=2, style=dotted];
m2_99 -> m2_111  [key=0, style=solid];
m2_99 -> m2_28  [key=2, style=dotted];
m2_101 -> m2_102  [key=0, style=solid];
m2_101 -> m2_105  [key=0, style=solid];
m2_102 -> m2_103  [key=0, style=solid];
m2_102 -> m2_81  [key=2, style=dotted];
m2_103 -> m2_104  [key=0, style=solid];
m2_105 -> m2_106  [key=0, style=solid];
m2_105 -> m2_109  [key=0, style=solid];
m2_106 -> m2_84  [key=2, style=dotted];
m2_106 -> m2_107  [key=0, style=solid];
m2_107 -> m2_108  [key=0, style=solid];
m2_109 -> m2_111  [key=0, style=solid];
m2_109 -> m2_28  [key=2, style=dotted];
m2_110 -> m2_111  [key=0, style=solid];
m2_110 -> m2_28  [key=2, style=dotted];
m2_88 -> m2_89  [key=0, style=solid];
m2_92 -> m2_93  [key=0, style=solid];
m2_100 -> m2_101  [key=0, style=solid];
m2_91 -> m2_111  [key=0, style=solid];
m2_95 -> m2_111  [key=0, style=solid];
m2_98 -> m2_111  [key=0, style=solid];
m2_104 -> m2_111  [key=0, style=solid];
m2_108 -> m2_111  [key=0, style=solid];
m2_111 -> m2_48  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_2 -> m2_3  [key=0, style=solid, color=red];
m2_2 -> m2_0  [key=0, style=bold, color=blue];
m2_3 -> m2_4  [key=0, style=solid, color=red];
m2_4 -> m2_5  [key=0, style=solid, color=red];
m2_83 -> m2_270  [key=0, style=solid];
m2_83 -> m2_272  [key=3, color=darkorchid, style=bold, label="method methodReturn string ReadLengthString"];
m2_270 -> m2_82  [key=2, style=dotted];
m2_270 -> m2_271  [key=0, style=solid];
m2_270 -> m2_272  [key=1, style=dashed, color=darkseagreen4, label=length];
m2_271 -> m2_272  [key=0, style=solid];
m2_271 -> m2_167  [key=2, style=dotted];
m2_272 -> m2_273  [key=0, style=solid];
m2_272 -> m2_276  [key=2, style=dotted];
m2_272 -> m2_274  [key=1, style=dashed, color=darkseagreen4, label=s];
m2_273 -> m2_274  [key=0, style=solid];
m2_273 -> m2_181  [key=2, style=dotted];
m2_274 -> m2_275  [key=0, style=solid];
m2_275 -> m2_83  [key=0, style=bold, color=blue];
m2_82 -> m2_309  [key=0, style=solid];
m2_309 -> m2_310  [key=0, style=solid];
m2_309 -> m2_167  [key=2, style=dotted];
m2_310 -> m2_311  [key=0, style=solid];
m2_310 -> m2_312  [key=2, style=dotted];
m2_311 -> m2_82  [key=0, style=bold, color=blue];
m2_85 -> m2_66  [key=3, color=green, style=bold, label="Parameter variable Newtonsoft.Json.Bson.BsonReader.ContainerContext newContext"];
m2_85 -> m2_118  [key=3, color=green, style=bold, label="Parameter variable Newtonsoft.Json.Bson.BsonReader.ContainerContext newContext"];
m2_85 -> m2_174  [key=0, style=solid, color=green];
m2_85 -> m2_175  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Bson.BsonReader.ContainerContext"];
m2_85 -> m2_190  [key=3, color=green, style=bold, label="Parameter variable Newtonsoft.Json.Bson.BsonReader.ContainerContext newContext"];
m2_85 -> m2_195  [key=3, color=green, style=bold, label="Parameter variable Newtonsoft.Json.Bson.BsonReader.ContainerContext newContext"];
m2_174 -> m2_175  [key=0, style=solid, color=green];
m2_174 -> m2_177  [key=2, style=dotted, color=green];
m2_175 -> m2_176  [key=0, style=solid, color=green];
m2_176 -> m2_85  [key=0, style=bold, color=blue];
m2_29 -> m2_28  [key=3, color=darkorchid, style=bold, label="Field variable Newtonsoft.Json.Bson.BsonReader.BsonReaderState _bsonReaderState"];
m2_27 -> m2_47  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Read"];
m2_27 -> m2_30  [key=0, style=solid];
m2_27 -> m2_48  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Read"];
m2_27 -> m2_49  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Read"];
m2_27 -> m2_45  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Read"];
m2_30 -> m2_31  [key=0, style=solid];
m2_30 -> m2_33  [key=0, style=solid];
m2_30 -> m2_37  [key=0, style=solid];
m2_30 -> m2_43  [key=0, style=solid];
m2_32 -> m2_47  [key=2, style=dotted];
m2_32 -> m2_46  [key=0, style=solid];
m2_36 -> m2_46  [key=0, style=solid];
m2_36 -> m2_48  [key=2, style=dotted];
m2_42 -> m2_46  [key=0, style=solid];
m2_42 -> m2_49  [key=2, style=dotted];
m2_43 -> m2_46  [key=0, style=solid];
m2_43 -> m2_28  [key=2, style=dotted];
m2_43 -> m2_29  [key=2, style=dotted];
m2_45 -> m2_46  [key=0, style=solid];
m2_31 -> m2_32  [key=0, style=solid];
m2_33 -> m2_34  [key=0, style=solid];
m2_37 -> m2_38  [key=0, style=solid];
m2_35 -> m2_36  [key=0, style=solid];
m2_41 -> m2_42  [key=0, style=solid];
m2_44 -> m2_45  [key=0, style=solid];
m2_34 -> m2_35  [key=0, style=solid];
m2_38 -> m2_39  [key=0, style=solid];
m2_40 -> m2_41  [key=0, style=solid];
m2_39 -> m2_40  [key=0, style=solid];
m2_46 -> m2_27  [key=0, style=bold, color=blue];
m2_235 -> m2_240  [key=0, style=solid];
m2_235 -> m2_112  [key=3, color=darkorchid, style=bold, label="method methodReturn byte[] ReadBinary"];
m2_240 -> m2_82  [key=2, style=dotted];
m2_240 -> m2_241  [key=0, style=solid];
m2_240 -> m2_242  [key=1, style=dashed, color=darkseagreen4, label=dataLength];
m2_241 -> m2_242  [key=0, style=solid];
m2_241 -> m2_165  [key=2, style=dotted];
m2_242 -> m2_243  [key=0, style=solid];
m2_242 -> m2_112  [key=2, style=dotted];
m2_243 -> m2_235  [key=0, style=bold, color=blue];
m2_328 -> m2_150  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_168  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_169  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_170  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_171  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_174  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_175  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_65  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_67  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_68  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_113  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_136  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_116  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_117  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_119  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_120  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_7  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_8  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_9  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_15  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_16  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_22  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_23  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_24  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_25  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_30  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_32  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_36  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_42  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_43  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_50  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_52  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_53  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_56  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_57  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_58  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_61  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_62  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_64  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_71  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_72  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_73  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_76  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_77  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_87  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_89  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_90  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_93  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_94  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_96  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_97  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_99  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_101  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_102  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_103  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_105  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_106  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_107  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_109  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_110  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_115  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_123  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_129  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_132  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_133  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_142  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_143  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_145  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_148  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_151  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_152  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_154  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_178  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_179  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_184  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_187  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_189  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_191  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_192  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_194  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_196  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_197  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_199  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_201  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_203  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_204  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_206  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_207  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_209  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_211  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_213  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_215  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_216  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_218  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_220  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_221  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_223  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_225  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_226  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_228  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_231  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_240  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_241  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_242  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_244  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_249  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_250  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_252  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_254  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_255  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_258  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_260  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_270  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_271  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_272  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_273  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_279  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_283  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_286  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_288  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_291  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_298  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_299  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_300  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_302  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_305  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_306  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_309  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_310  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_313  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_314  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_317  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_318  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_321  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_323  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_328 -> m2_324  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
m2_327 -> m2_1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader.ContainerContext"];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_1  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_2 -> m4_3  [key=0, style=solid];
m4_2 -> m4_6  [key=2, style=dotted];
m4_2 -> m4_4  [key=1, style=dashed, color=darkseagreen4, label=account];
m4_3 -> m4_4  [key=0, style=solid];
m4_3 -> m4_7  [key=2, style=dotted];
m4_4 -> m4_5  [key=0, style=solid];
m4_4 -> m4_8  [key=2, style=dotted];
m4_5 -> m4_0  [key=0, style=bold, color=blue];
m5_38 -> m5_39  [key=0, style=solid];
m5_39 -> m5_40  [key=0, style=solid];
m5_39 -> m5_6  [key=2, style=dotted];
m5_40 -> m5_41  [key=0, style=solid];
m5_40 -> m5_43  [key=2, style=dotted];
m5_41 -> m5_42  [key=0, style=solid];
m5_41 -> m5_28  [key=2, style=dotted];
m5_41 -> m5_44  [key=2, style=dotted];
m5_42 -> m5_38  [key=0, style=bold, color=blue];
m5_17 -> m5_18  [key=0, style=solid];
m5_18 -> m5_19  [key=0, style=solid];
m5_18 -> m5_22  [key=1, style=dashed, color=darkseagreen4, label=schemaJson];
m5_18 -> m5_18  [key=3, color=darkorchid, style=bold, label="Local variable string schemaJson"];
m5_19 -> m5_20  [key=0, style=solid];
m5_19 -> m5_3  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_22 -> m5_23  [key=0, style=solid];
m5_22 -> m5_6  [key=2, style=dotted];
m5_20 -> m5_21  [key=0, style=solid];
m5_20 -> m5_28  [key=2, style=dotted];
m5_20 -> m5_29  [key=2, style=dotted];
m5_21 -> m5_22  [key=0, style=solid];
m5_21 -> m5_30  [key=2, style=dotted];
m5_21 -> m5_24  [key=1, style=dashed, color=darkseagreen4, label=validatingReader];
m5_21 -> m5_26  [key=1, style=dashed, color=darkseagreen4, label=validatingReader];
m5_24 -> m5_25  [key=0, style=solid];
m5_24 -> m5_35  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.ValidationEventArgs"];
m5_26 -> m5_27  [key=0, style=solid];
m5_26 -> m5_33  [key=2, style=dotted];
m5_23 -> m5_24  [key=0, style=solid];
m5_23 -> m5_31  [key=2, style=dotted];
m5_23 -> m5_35  [key=1, style=dashed, color=darkseagreen4, label=messages];
m5_25 -> m5_26  [key=0, style=solid];
m5_25 -> m5_32  [key=2, style=dotted];
m5_27 -> m5_17  [key=0, style=bold, color=blue];
m5_9 -> m5_10  [key=0, style=solid];
m5_10 -> m5_11  [key=0, style=solid];
m5_10 -> m5_10  [key=3, color=darkorchid, style=bold, label="Local variable string schemaJson"];
m5_11 -> m5_12  [key=0, style=solid];
m5_11 -> m5_6  [key=2, style=dotted];
m5_11 -> m5_14  [key=1, style=dashed, color=darkseagreen4, label=schema];
m5_12 -> m5_13  [key=0, style=solid];
m5_12 -> m5_7  [key=2, style=dotted];
m5_12 -> m5_14  [key=1, style=dashed, color=darkseagreen4, label=person];
m5_14 -> m5_15  [key=0, style=solid];
m5_14 -> m5_16  [key=2, style=dotted];
m5_13 -> m5_14  [key=0, style=solid];
m5_15 -> m5_9  [key=0, style=bold, color=blue];
m5_34 -> m5_35  [key=0, style=solid];
m5_35 -> m5_36  [key=0, style=solid];
m5_35 -> m5_37  [key=2, style=dotted];
m5_36 -> m5_34  [key=0, style=bold, color=blue];
m5_45 -> m5_46  [key=0, style=solid];
m5_46 -> m5_47  [key=0, style=solid];
m5_46 -> m5_53  [key=2, style=dotted];
m5_46 -> m5_48  [key=1, style=dashed, color=darkseagreen4, label=schema];
m5_46 -> m5_50  [key=1, style=dashed, color=darkseagreen4, label=schema];
m5_47 -> m5_48  [key=0, style=solid];
m5_48 -> m5_49  [key=0, style=solid];
m5_48 -> m5_54  [key=2, style=dotted];
m5_48 -> m5_53  [key=2, style=dotted];
m5_48 -> m5_31  [key=2, style=dotted];
m5_50 -> m5_51  [key=0, style=solid];
m5_50 -> m5_8  [key=2, style=dotted];
m5_49 -> m5_50  [key=0, style=solid];
m5_49 -> m5_7  [key=2, style=dotted];
m5_51 -> m5_52  [key=0, style=solid];
m5_51 -> m5_55  [key=2, style=dotted];
m5_52 -> m5_45  [key=0, style=bold, color=blue];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_1  [key=3, color=darkorchid, style=bold, label="Local variable string schemaJson"];
m5_2 -> m5_3  [key=0, style=solid];
m5_2 -> m5_6  [key=2, style=dotted];
m5_2 -> m5_4  [key=1, style=dashed, color=darkseagreen4, label=schema];
m5_3 -> m5_4  [key=0, style=solid];
m5_3 -> m5_7  [key=2, style=dotted];
m5_4 -> m5_5  [key=0, style=solid];
m5_4 -> m5_8  [key=2, style=dotted];
m5_5 -> m5_0  [key=0, style=bold, color=blue];
m5_56 -> m5_35  [key=1, style=dashed, color=darkseagreen4, label=messages];
m7_0 -> m7_1  [key=0, style=solid, color=green];
m7_0 -> m7_2  [key=1, style=dashed, color=green, label=int];
m7_1 -> m7_2  [key=0, style=solid, color=green];
m7_2 -> m7_3  [key=0, style=solid, color=green];
m7_3 -> m7_0  [key=0, style=bold, color=blue];
m7_4 -> m7_1  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Tests.TestObjects.ConstructorReadonlyFields"];
m7_4 -> m7_2  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Tests.TestObjects.ConstructorReadonlyFields"];
m8_4 -> m8_5  [key=0, style=solid];
m8_5 -> m8_6  [key=0, style=solid];
m8_6 -> m8_7  [key=0, style=solid];
m8_6 -> m8_11  [key=2, style=dotted];
m8_6 -> m8_12  [key=2, style=dotted];
m8_6 -> m8_8  [key=1, style=dashed, color=darkseagreen4, label=person];
m8_7 -> m8_8  [key=0, style=solid];
m8_7 -> m8_13  [key=2, style=dotted];
m8_7 -> m8_14  [key=2, style=dotted];
m8_8 -> m8_9  [key=0, style=solid];
m8_9 -> m8_10  [key=0, style=solid];
m8_9 -> m8_14  [key=2, style=dotted];
m8_10 -> m8_4  [key=0, style=bold, color=blue];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_2  [key=0, style=solid];
m8_1 -> m8_3  [key=2, style=dotted];
m8_2 -> m8_0  [key=0, style=bold, color=blue];
m9_27 -> m9_28  [key=0, style=solid];
m9_18 -> m9_19  [key=0, style=solid];
m9_21 -> m9_22  [key=0, style=solid];
m9_24 -> m9_25  [key=0, style=solid];
m9_19 -> m9_20  [key=0, style=solid];
m9_20 -> m9_18  [key=0, style=bold, color=blue];
m9_22 -> m9_23  [key=0, style=solid];
m9_22 -> m9_10  [key=2, style=dotted];
m9_23 -> m9_21  [key=0, style=bold, color=blue];
m9_25 -> m9_26  [key=0, style=solid];
m9_26 -> m9_24  [key=0, style=bold, color=blue];
m9_28 -> m9_29  [key=0, style=solid];
m9_28 -> m9_10  [key=2, style=dotted];
m9_29 -> m9_27  [key=0, style=bold, color=blue];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_2  [key=0, style=solid];
m9_1 -> m9_9  [key=2, style=dotted];
m9_1 -> m9_4  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_1 -> m9_6  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_1 -> m9_1  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m9_2 -> m9_3  [key=0, style=solid];
m9_2 -> m9_10  [key=2, style=dotted];
m9_2 -> m9_11  [key=2, style=dotted];
m9_2 -> m9_12  [key=2, style=dotted];
m9_2 -> m9_18  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_4 -> m9_5  [key=0, style=solid];
m9_4 -> m9_11  [key=2, style=dotted];
m9_4 -> m9_15  [key=2, style=dotted];
m9_4 -> m9_12  [key=2, style=dotted];
m9_4 -> m9_21  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_4 -> m9_24  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_6 -> m9_7  [key=0, style=solid];
m9_6 -> m9_16  [key=2, style=dotted];
m9_6 -> m9_27  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_3 -> m9_4  [key=0, style=solid];
m9_3 -> m9_13  [key=2, style=dotted];
m9_3 -> m9_14  [key=2, style=dotted];
m9_5 -> m9_6  [key=0, style=solid];
m9_5 -> m9_13  [key=2, style=dotted];
m9_5 -> m9_14  [key=2, style=dotted];
m9_7 -> m9_8  [key=0, style=solid];
m9_7 -> m9_17  [key=2, style=dotted];
m9_8 -> m9_0  [key=0, style=bold, color=blue];
m10_28 -> m10_29  [key=0, style=solid];
m10_29 -> m10_30  [key=0, style=solid];
m10_30 -> m10_28  [key=0, style=bold, color=blue];
m10_0 -> m10_1  [key=0, style=solid];
m10_0 -> m10_3  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m10_0 -> m10_5  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m10_0 -> m10_6  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m10_0 -> m10_7  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m10_1 -> m10_2  [key=0, style=solid];
m10_1 -> m10_4  [key=1, style=dashed, color=darkseagreen4, label=dataSet];
m10_3 -> m10_4  [key=0, style=solid];
m10_3 -> m10_10  [key=2, style=dotted];
m10_5 -> m10_6  [key=0, style=solid];
m10_5 -> m10_11  [key=2, style=dotted];
m10_6 -> m10_4  [key=0, style=solid];
m10_6 -> m10_12  [key=2, style=dotted];
m10_7 -> m10_8  [key=0, style=solid];
m10_7 -> m10_13  [key=2, style=dotted];
m10_2 -> m10_3  [key=0, style=solid];
m10_2 -> m10_9  [key=2, style=dotted];
m10_2 -> m10_6  [key=1, style=dashed, color=darkseagreen4, label=converter];
m10_4 -> m10_5  [key=0, style=solid];
m10_4 -> m10_7  [key=0, style=solid];
m10_4 -> m10_6  [key=1, style=dashed, color=darkseagreen4, label=table];
m10_8 -> m10_0  [key=0, style=bold, color=blue];
m10_14 -> m10_15  [key=0, style=solid];
m10_14 -> m10_17  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_14 -> m10_18  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_14 -> m10_19  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_14 -> m10_21  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_15 -> m10_16  [key=0, style=solid];
m10_15 -> m10_24  [key=2, style=dotted];
m10_15 -> m10_20  [key=1, style=dashed, color=darkseagreen4, label=ds];
m10_15 -> m10_22  [key=1, style=dashed, color=darkseagreen4, label=ds];
m10_17 -> m10_18  [key=0, style=solid];
m10_17 -> m10_25  [key=2, style=dotted];
m10_18 -> m10_19  [key=0, style=solid];
m10_18 -> m10_21  [key=0, style=solid];
m10_19 -> m10_20  [key=0, style=solid];
m10_19 -> m10_26  [key=2, style=dotted];
m10_21 -> m10_22  [key=0, style=solid];
m10_21 -> m10_25  [key=2, style=dotted];
m10_16 -> m10_17  [key=0, style=solid];
m10_16 -> m10_9  [key=2, style=dotted];
m10_16 -> m10_19  [key=1, style=dashed, color=darkseagreen4, label=converter];
m10_20 -> m10_18  [key=0, style=solid];
m10_20 -> m10_27  [key=2, style=dotted];
m10_22 -> m10_23  [key=0, style=solid];
m10_23 -> m10_14  [key=0, style=bold, color=blue];
m11_41 -> m11_42  [key=0, style=solid];
m11_42 -> m11_43  [key=0, style=solid, color=red];
m11_42 -> m11_31  [key=2, style=dotted];
m11_42 -> m11_44  [key=1, style=dashed, color=green, label=ds];
m11_42 -> m11_45  [key=1, style=dashed, color=darkseagreen4, label=ds];
m11_43 -> m11_44  [key=0, style=solid, color=green];
m11_43 -> m11_48  [key=2, style=dotted, color=red];
m11_43 -> m11_34  [key=2, style=dotted, color=red];
m11_44 -> m11_45  [key=0, style=solid, color=green];
m11_44 -> m11_48  [key=2, style=dotted, color=green];
m11_44 -> m11_34  [key=2, style=dotted, color=green];
m11_45 -> m11_46  [key=0, style=solid, color=green];
m11_45 -> m11_49  [key=2, style=dotted];
m11_45 -> m11_37  [key=2, style=dotted];
m11_46 -> m11_47  [key=0, style=solid, color=green];
m11_46 -> m11_38  [key=2, style=dotted, color=green];
m11_47 -> m11_41  [key=0, style=bold, color=blue];
m11_50 -> m11_51  [key=0, style=solid, color=green];
m11_51 -> m11_52  [key=0, style=solid, color=green];
m11_51 -> m11_51  [key=3, color=green, style=bold, label="Local variable string json"];
m11_52 -> m11_53  [key=0, style=solid];
m11_52 -> m11_49  [key=2, style=dotted];
m11_52 -> m11_73  [key=2, style=dotted];
m11_52 -> m11_54  [key=1, style=dashed, color=darkseagreen4, label=ds];
m11_52 -> m11_55  [key=1, style=dashed, color=darkseagreen4, label=ds];
m11_52 -> m11_56  [key=1, style=dashed, color=green, label=ds];
m11_52 -> m11_57  [key=1, style=dashed, color=darkseagreen4, label=ds];
m11_52 -> m11_70  [key=1, style=dashed, color=darkseagreen4, label=ds];
m11_52 -> m11_71  [key=1, style=dashed, color=darkseagreen4, label=ds];
m11_53 -> m11_54  [key=0, style=solid];
m11_53 -> m11_40  [key=2, style=dotted];
m11_54 -> m11_55  [key=0, style=solid];
m11_54 -> m11_38  [key=2, style=dotted];
m11_55 -> m11_56  [key=0, style=solid, color=green];
m11_55 -> m11_38  [key=2, style=dotted];
m11_56 -> m11_57  [key=0, style=solid, color=green];
m11_56 -> m11_38  [key=2, style=dotted, color=green];
m11_57 -> m11_58  [key=0, style=solid, color=green];
m11_57 -> m11_59  [key=1, style=dashed, color=darkseagreen4, label=dt];
m11_57 -> m11_60  [key=1, style=dashed, color=darkseagreen4, label=dt];
m11_57 -> m11_61  [key=1, style=dashed, color=darkseagreen4, label=dt];
m11_57 -> m11_62  [key=1, style=dashed, color=darkseagreen4, label=dt];
m11_57 -> m11_63  [key=1, style=dashed, color=green, label=dt];
m11_57 -> m11_64  [key=1, style=dashed, color=green, label=dt];
m11_57 -> m11_65  [key=1, style=dashed, color=green, label=dt];
m11_57 -> m11_66  [key=1, style=dashed, color=darkseagreen4, label=dt];
m11_57 -> m11_67  [key=1, style=dashed, color=darkseagreen4, label=dt];
m11_57 -> m11_68  [key=1, style=dashed, color=darkseagreen4, label=dt];
m11_57 -> m11_69  [key=1, style=dashed, color=darkseagreen4, label=dt];
m11_70 -> m11_71  [key=0, style=solid];
m11_70 -> m11_38  [key=2, style=dotted];
m11_71 -> m11_72  [key=0, style=solid];
m11_71 -> m11_38  [key=2, style=dotted];
m11_58 -> m11_59  [key=0, style=solid, color=green];
m11_58 -> m11_38  [key=2, style=dotted, color=green];
m11_59 -> m11_60  [key=0, style=solid];
m11_59 -> m11_38  [key=2, style=dotted];
m11_60 -> m11_61  [key=0, style=solid];
m11_60 -> m11_38  [key=2, style=dotted];
m11_61 -> m11_62  [key=0, style=solid];
m11_61 -> m11_38  [key=2, style=dotted];
m11_62 -> m11_63  [key=0, style=solid, color=green];
m11_62 -> m11_38  [key=2, style=dotted];
m11_63 -> m11_64  [key=0, style=solid, color=green];
m11_63 -> m11_38  [key=2, style=dotted, color=green];
m11_64 -> m11_65  [key=0, style=solid, color=green];
m11_64 -> m11_38  [key=2, style=dotted, color=green];
m11_65 -> m11_66  [key=0, style=solid, color=green];
m11_65 -> m11_38  [key=2, style=dotted, color=green];
m11_66 -> m11_67  [key=0, style=solid];
m11_66 -> m11_38  [key=2, style=dotted];
m11_67 -> m11_68  [key=0, style=solid];
m11_67 -> m11_38  [key=2, style=dotted];
m11_68 -> m11_69  [key=0, style=solid];
m11_68 -> m11_38  [key=2, style=dotted];
m11_69 -> m11_70  [key=0, style=solid];
m11_69 -> m11_38  [key=2, style=dotted];
m11_72 -> m11_50  [key=0, style=bold, color=blue];
m11_0 -> m11_1  [key=0, style=solid];
m11_1 -> m11_2  [key=0, style=solid];
m11_1 -> m11_31  [key=2, style=dotted];
m11_2 -> m11_3  [key=0, style=solid];
m11_2 -> m11_2  [key=1, style=dashed, color=darkseagreen4, label=dataSet];
m11_2 -> m11_9  [key=1, style=dashed, color=darkseagreen4, label=dataSet];
m11_2 -> m11_16  [key=1, style=dashed, color=darkseagreen4, label=dataSet];
m11_2 -> m11_17  [key=1, style=dashed, color=darkseagreen4, label=dataSet];
m11_3 -> m11_4  [key=0, style=solid];
m11_3 -> m11_32  [key=2, style=dotted];
m11_3 -> m11_7  [key=1, style=dashed, color=darkseagreen4, label=table];
m11_3 -> m11_8  [key=1, style=dashed, color=darkseagreen4, label=table];
m11_3 -> m11_9  [key=1, style=dashed, color=darkseagreen4, label=table];
m11_3 -> m11_12  [key=1, style=dashed, color=darkseagreen4, label=table];
m11_3 -> m11_14  [key=1, style=dashed, color=darkseagreen4, label=table];
m11_9 -> m11_10  [key=0, style=solid];
m11_9 -> m11_34  [key=2, style=dotted];
m11_16 -> m11_17  [key=0, style=solid];
m11_16 -> m11_36  [key=2, style=dotted];
m11_17 -> m11_18  [key=0, style=solid];
m11_17 -> m11_37  [key=2, style=dotted];
m11_17 -> m11_19  [key=1, style=dashed, color=darkseagreen4, label=json];
m11_4 -> m11_5  [key=0, style=solid];
m11_4 -> m11_33  [key=2, style=dotted];
m11_7 -> m11_8  [key=0, style=solid];
m11_7 -> m11_34  [key=2, style=dotted];
m11_8 -> m11_9  [key=0, style=solid];
m11_8 -> m11_34  [key=2, style=dotted];
m11_12 -> m11_13  [key=0, style=solid];
m11_12 -> m11_35  [key=2, style=dotted];
m11_12 -> m11_14  [key=1, style=dashed, color=darkseagreen4, label=newRow];
m11_14 -> m11_15  [key=0, style=solid];
m11_14 -> m11_34  [key=2, style=dotted];
m11_5 -> m11_6  [key=0, style=solid];
m11_5 -> m11_5  [key=1, style=dashed, color=darkseagreen4, label=idColumn];
m11_5 -> m11_7  [key=1, style=dashed, color=darkseagreen4, label=idColumn];
m11_6 -> m11_7  [key=0, style=solid];
m11_6 -> m11_33  [key=2, style=dotted];
m11_6 -> m11_8  [key=1, style=dashed, color=darkseagreen4, label=itemColumn];
m11_10 -> m11_11  [key=0, style=solid];
m11_10 -> m11_13  [key=1, style=dashed, color=darkseagreen4, label=i];
m11_10 -> m11_15  [key=1, style=dashed, color=darkseagreen4, label=i];
m11_10 -> m11_10  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m11_11 -> m11_12  [key=0, style=solid];
m11_11 -> m11_16  [key=0, style=solid];
m11_13 -> m11_14  [key=0, style=solid];
m11_15 -> m11_11  [key=0, style=solid];
m11_15 -> m11_15  [key=1, style=dashed, color=darkseagreen4, label=i];
m11_18 -> m11_19  [key=0, style=solid];
m11_18 -> m11_38  [key=2, style=dotted];
m11_19 -> m11_20  [key=0, style=solid];
m11_19 -> m11_39  [key=2, style=dotted];
m11_19 -> m11_21  [key=1, style=dashed, color=darkseagreen4, label=deserializedDataSet];
m11_19 -> m11_22  [key=1, style=dashed, color=darkseagreen4, label=deserializedDataSet];
m11_20 -> m11_21  [key=0, style=solid];
m11_20 -> m11_40  [key=2, style=dotted];
m11_21 -> m11_22  [key=0, style=solid];
m11_21 -> m11_38  [key=2, style=dotted];
m11_22 -> m11_23  [key=0, style=solid];
m11_22 -> m11_24  [key=1, style=dashed, color=darkseagreen4, label=dt];
m11_22 -> m11_25  [key=1, style=dashed, color=darkseagreen4, label=dt];
m11_22 -> m11_26  [key=1, style=dashed, color=darkseagreen4, label=dt];
m11_22 -> m11_27  [key=1, style=dashed, color=darkseagreen4, label=dt];
m11_22 -> m11_28  [key=1, style=dashed, color=darkseagreen4, label=dt];
m11_22 -> m11_29  [key=1, style=dashed, color=darkseagreen4, label=dt];
m11_23 -> m11_24  [key=0, style=solid];
m11_23 -> m11_38  [key=2, style=dotted];
m11_24 -> m11_25  [key=0, style=solid];
m11_24 -> m11_38  [key=2, style=dotted];
m11_25 -> m11_26  [key=0, style=solid];
m11_25 -> m11_38  [key=2, style=dotted];
m11_26 -> m11_27  [key=0, style=solid];
m11_26 -> m11_38  [key=2, style=dotted];
m11_27 -> m11_28  [key=0, style=solid];
m11_27 -> m11_38  [key=2, style=dotted];
m11_28 -> m11_29  [key=0, style=solid];
m11_28 -> m11_38  [key=2, style=dotted];
m11_29 -> m11_30  [key=0, style=solid];
m11_29 -> m11_38  [key=2, style=dotted];
m11_30 -> m11_0  [key=0, style=bold, color=blue];
m11_48 -> m11_44  [key=3, color=red, style=bold, label="Parameter variable string dataTableName"];
m11_48 -> m11_74  [key=0, style=solid, color=green];
m11_48 -> m11_43  [key=3, color=red, style=bold, label="Parameter variable string dataTableName"];
m11_74 -> m11_75  [key=0, style=solid, color=green];
m11_74 -> m11_32  [key=2, style=dotted, color=green];
m11_74 -> m11_77  [key=1, style=dashed, color=green, label=myTable];
m11_74 -> m11_80  [key=1, style=dashed, color=green, label=myTable];
m11_74 -> m11_83  [key=1, style=dashed, color=green, label=myTable];
m11_74 -> m11_86  [key=1, style=dashed, color=green, label=myTable];
m11_74 -> m11_90  [key=1, style=dashed, color=green, label=myTable];
m11_74 -> m11_93  [key=1, style=dashed, color=green, label=myTable];
m11_74 -> m11_94  [key=1, style=dashed, color=green, label=myTable];
m11_74 -> m11_101  [key=1, style=dashed, color=green, label=myTable];
m11_74 -> m11_102  [key=1, style=dashed, color=green, label=myTable];
m11_75 -> m11_76  [key=0, style=solid];
m11_75 -> m11_33  [key=2, style=dotted];
m11_77 -> m11_78  [key=0, style=solid];
m11_77 -> m11_34  [key=2, style=dotted];
m11_80 -> m11_81  [key=0, style=solid];
m11_80 -> m11_34  [key=2, style=dotted];
m11_83 -> m11_84  [key=0, style=solid];
m11_83 -> m11_34  [key=2, style=dotted];
m11_86 -> m11_87  [key=0, style=solid];
m11_86 -> m11_34  [key=2, style=dotted];
m11_90 -> m11_91  [key=0, style=solid];
m11_90 -> m11_34  [key=2, style=dotted];
m11_93 -> m11_94  [key=0, style=solid, color=red];
m11_93 -> m11_34  [key=2, style=dotted];
m11_94 -> m11_95  [key=0, style=solid, color=red];
m11_94 -> m11_35  [key=2, style=dotted, color=red];
m11_94 -> m11_96  [key=1, style=dashed, color=darkseagreen4, label=myNewRow];
m11_94 -> m11_97  [key=1, style=dashed, color=darkseagreen4, label=myNewRow];
m11_94 -> m11_98  [key=1, style=dashed, color=darkseagreen4, label=myNewRow];
m11_94 -> m11_99  [key=1, style=dashed, color=darkseagreen4, label=myNewRow];
m11_94 -> m11_100  [key=1, style=dashed, color=darkseagreen4, label=myNewRow];
m11_94 -> m11_101  [key=1, style=dashed, color=darkseagreen4, label=myNewRow];
m11_101 -> m11_102  [key=0, style=solid, color=red];
m11_101 -> m11_34  [key=2, style=dotted, color=red];
m11_102 -> m11_103  [key=0, style=solid];
m11_76 -> m11_77  [key=0, style=solid];
m11_76 -> m11_76  [key=1, style=dashed, color=darkseagreen4, label=colString];
m11_78 -> m11_79  [key=0, style=solid];
m11_78 -> m11_33  [key=2, style=dotted];
m11_79 -> m11_80  [key=0, style=solid];
m11_79 -> m11_79  [key=1, style=dashed, color=darkseagreen4, label=colInt32];
m11_81 -> m11_82  [key=0, style=solid];
m11_81 -> m11_33  [key=2, style=dotted];
m11_82 -> m11_83  [key=0, style=solid];
m11_82 -> m11_82  [key=1, style=dashed, color=darkseagreen4, label=colBoolean];
m11_84 -> m11_85  [key=0, style=solid];
m11_84 -> m11_33  [key=2, style=dotted];
m11_85 -> m11_86  [key=0, style=solid];
m11_85 -> m11_85  [key=1, style=dashed, color=darkseagreen4, label=colTimeSpan];
m11_87 -> m11_88  [key=0, style=solid];
m11_87 -> m11_33  [key=2, style=dotted];
m11_88 -> m11_89  [key=0, style=solid];
m11_88 -> m11_88  [key=1, style=dashed, color=darkseagreen4, label=colDateTime];
m11_89 -> m11_90  [key=0, style=solid];
m11_89 -> m11_89  [key=1, style=dashed, color=darkseagreen4, label=colDateTime];
m11_91 -> m11_92  [key=0, style=solid];
m11_91 -> m11_33  [key=2, style=dotted];
m11_92 -> m11_93  [key=0, style=solid];
m11_92 -> m11_92  [key=1, style=dashed, color=darkseagreen4, label=colDecimal];
m11_95 -> m11_96  [key=0, style=solid, color=red];
m11_96 -> m11_97  [key=0, style=solid, color=red];
m11_97 -> m11_98  [key=0, style=solid, color=red];
m11_98 -> m11_99  [key=0, style=solid, color=red];
m11_98 -> m11_104  [key=2, style=dotted, color=red];
m11_99 -> m11_100  [key=0, style=solid, color=red];
m11_99 -> m11_105  [key=2, style=dotted, color=red];
m11_100 -> m11_101  [key=0, style=solid, color=red];
m11_103 -> m11_48  [key=0, style=bold, color=blue];
m11_106 -> m11_43  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.DataSetConverterTests"];
m11_106 -> m11_44  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Tests.Converters.DataSetConverterTests"];
m12_17 -> m12_18  [key=0, style=solid];
m12_17 -> m12_19  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m12_17 -> m12_20  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m12_17 -> m12_21  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m12_17 -> m12_23  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m12_17 -> m12_24  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m12_17 -> m12_26  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m12_17 -> m12_27  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m12_17 -> m12_28  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m12_17 -> m12_29  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m12_17 -> m12_31  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m12_17 -> m12_33  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m12_17 -> m12_34  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m12_17 -> m12_37  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m12_17 -> m12_38  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m12_18 -> m12_19  [key=0, style=solid];
m12_19 -> m12_20  [key=0, style=solid];
m12_19 -> m12_22  [key=0, style=solid];
m12_20 -> m12_21  [key=0, style=solid];
m12_20 -> m12_41  [key=2, style=dotted];
m12_20 -> m12_25  [key=1, style=dashed, color=darkseagreen4, label=dt];
m12_20 -> m12_30  [key=1, style=dashed, color=darkseagreen4, label=dt];
m12_20 -> m12_32  [key=1, style=dashed, color=darkseagreen4, label=dt];
m12_20 -> m12_36  [key=1, style=dashed, color=darkseagreen4, label=dt];
m12_20 -> m12_39  [key=1, style=dashed, color=darkseagreen4, label=dt];
m12_21 -> m12_23  [key=0, style=solid];
m12_21 -> m12_42  [key=2, style=dotted];
m12_23 -> m12_24  [key=0, style=solid];
m12_23 -> m12_42  [key=2, style=dotted];
m12_24 -> m12_25  [key=0, style=solid];
m12_24 -> m12_38  [key=0, style=solid];
m12_26 -> m12_27  [key=0, style=solid];
m12_26 -> m12_42  [key=2, style=dotted];
m12_27 -> m12_28  [key=0, style=solid];
m12_27 -> m12_35  [key=0, style=solid];
m12_28 -> m12_29  [key=0, style=solid];
m12_28 -> m12_30  [key=1, style=dashed, color=darkseagreen4, label=columnName];
m12_28 -> m12_32  [key=1, style=dashed, color=darkseagreen4, label=columnName];
m12_28 -> m12_33  [key=1, style=dashed, color=darkseagreen4, label=columnName];
m12_29 -> m12_30  [key=0, style=solid];
m12_29 -> m12_42  [key=2, style=dotted];
m12_31 -> m12_32  [key=0, style=solid];
m12_31 -> m12_45  [key=2, style=dotted];
m12_33 -> m12_34  [key=0, style=solid];
m12_34 -> m12_27  [key=0, style=solid];
m12_34 -> m12_42  [key=2, style=dotted];
m12_37 -> m12_24  [key=0, style=solid];
m12_37 -> m12_42  [key=2, style=dotted];
m12_38 -> m12_39  [key=0, style=solid];
m12_38 -> m12_42  [key=2, style=dotted];
m12_22 -> m12_23  [key=0, style=solid];
m12_22 -> m12_41  [key=2, style=dotted];
m12_22 -> m12_25  [key=1, style=dashed, color=darkseagreen4, label=dt];
m12_22 -> m12_30  [key=1, style=dashed, color=darkseagreen4, label=dt];
m12_22 -> m12_32  [key=1, style=dashed, color=darkseagreen4, label=dt];
m12_22 -> m12_36  [key=1, style=dashed, color=darkseagreen4, label=dt];
m12_22 -> m12_39  [key=1, style=dashed, color=darkseagreen4, label=dt];
m12_25 -> m12_26  [key=0, style=solid];
m12_25 -> m12_43  [key=2, style=dotted];
m12_25 -> m12_33  [key=1, style=dashed, color=darkseagreen4, label=dr];
m12_25 -> m12_35  [key=1, style=dashed, color=darkseagreen4, label=dr];
m12_25 -> m12_36  [key=1, style=dashed, color=darkseagreen4, label=dr];
m12_30 -> m12_31  [key=0, style=solid];
m12_30 -> m12_33  [key=0, style=solid];
m12_30 -> m12_44  [key=2, style=dotted];
m12_32 -> m12_33  [key=0, style=solid];
m12_32 -> m12_46  [key=2, style=dotted];
m12_32 -> m12_47  [key=2, style=dotted];
m12_36 -> m12_37  [key=0, style=solid];
m12_36 -> m12_47  [key=2, style=dotted];
m12_39 -> m12_40  [key=0, style=solid];
m12_35 -> m12_36  [key=0, style=solid];
m12_35 -> m12_48  [key=2, style=dotted];
m12_40 -> m12_17  [key=0, style=bold, color=blue];
m12_45 -> m12_49  [key=0, style=solid];
m12_49 -> m12_50  [key=0, style=solid];
m12_49 -> m12_52  [key=0, style=solid];
m12_49 -> m12_54  [key=0, style=solid];
m12_49 -> m12_58  [key=0, style=solid];
m12_49 -> m12_60  [key=0, style=solid];
m12_49 -> m12_62  [key=0, style=solid];
m12_50 -> m12_51  [key=0, style=solid];
m12_52 -> m12_53  [key=0, style=solid];
m12_54 -> m12_55  [key=0, style=solid];
m12_58 -> m12_59  [key=0, style=solid];
m12_60 -> m12_61  [key=0, style=solid];
m12_62 -> m12_63  [key=0, style=solid];
m12_62 -> m12_64  [key=2, style=dotted];
m12_51 -> m12_63  [key=0, style=solid];
m12_53 -> m12_63  [key=0, style=solid];
m12_55 -> m12_56  [key=0, style=solid];
m12_56 -> m12_57  [key=0, style=solid];
m12_57 -> m12_63  [key=0, style=solid];
m12_59 -> m12_63  [key=0, style=solid];
m12_61 -> m12_63  [key=0, style=solid];
m12_63 -> m12_45  [key=0, style=bold, color=blue];
m12_0 -> m12_1  [key=0, style=solid];
m12_0 -> m12_2  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m12_0 -> m12_4  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m12_0 -> m12_6  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m12_0 -> m12_7  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m12_0 -> m12_8  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m12_0 -> m12_9  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m12_1 -> m12_2  [key=0, style=solid];
m12_1 -> m12_3  [key=1, style=dashed, color=darkseagreen4, label=table];
m12_2 -> m12_3  [key=0, style=solid];
m12_2 -> m12_11  [key=2, style=dotted];
m12_4 -> m12_5  [key=0, style=solid];
m12_4 -> m12_12  [key=2, style=dotted];
m12_6 -> m12_7  [key=0, style=solid];
m12_6 -> m12_13  [key=2, style=dotted];
m12_7 -> m12_5  [key=0, style=solid];
m12_7 -> m12_14  [key=2, style=dotted];
m12_8 -> m12_3  [key=0, style=solid];
m12_8 -> m12_15  [key=2, style=dotted];
m12_9 -> m12_10  [key=0, style=solid];
m12_9 -> m12_16  [key=2, style=dotted];
m12_3 -> m12_4  [key=0, style=solid];
m12_3 -> m12_9  [key=0, style=solid];
m12_3 -> m12_5  [key=1, style=dashed, color=darkseagreen4, label=row];
m12_3 -> m12_7  [key=1, style=dashed, color=darkseagreen4, label=row];
m12_5 -> m12_6  [key=0, style=solid];
m12_5 -> m12_8  [key=0, style=solid];
m12_5 -> m12_7  [key=1, style=dashed, color=darkseagreen4, label=column];
m12_10 -> m12_0  [key=0, style=bold, color=blue];
m12_65 -> m12_66  [key=0, style=solid];
m12_66 -> m12_67  [key=0, style=solid];
m12_67 -> m12_65  [key=0, style=bold, color=blue];
m14_174 -> m14_175  [key=0, style=solid];
m14_174 -> m14_171  [key=0, style=solid];
m14_174 -> m14_180  [key=2, style=dotted];
m14_175 -> m14_176  [key=0, style=solid];
m14_175 -> m14_177  [key=2, style=dotted];
m14_175 -> m14_178  [key=2, style=dotted];
m14_176 -> m14_174  [key=0, style=bold, color=blue];
m14_176 -> m14_58  [key=0, style=bold, color=blue];
m14_35 -> m14_37  [key=0, style=solid];
m14_35 -> m14_38  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m14_35 -> m14_40  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m14_37 -> m14_38  [key=0, style=solid];
m14_37 -> m14_39  [key=0, style=solid];
m14_38 -> m14_39  [key=0, style=solid];
m14_38 -> m14_43  [key=2, style=dotted];
m14_38 -> m14_38  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m14_38 -> m14_40  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m14_38 -> m14_42  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ShouldSerializeEntityMember"];
m14_40 -> m14_39  [key=0, style=solid];
m14_40 -> m14_44  [key=2, style=dotted];
m14_40 -> m14_45  [key=2, style=dotted];
m14_40 -> m14_43  [key=0, style=solid];
m14_40 -> m14_41  [key=0, style=solid];
m14_39 -> m14_40  [key=0, style=solid];
m14_39 -> m14_41  [key=0, style=solid];
m14_41 -> m14_42  [key=0, style=solid];
m14_41 -> m14_46  [key=2, style=dotted];
m14_41 -> m14_43  [key=0, style=solid];
m14_41 -> m14_45  [key=2, style=dotted];
m14_42 -> m14_35  [key=0, style=bold, color=blue];
m14_42 -> m14_44  [key=0, style=solid];
m14_148 -> m14_150  [key=0, style=solid];
m14_148 -> m14_149  [key=0, style=solid];
m14_438 -> m14_440  [key=0, style=solid];
m14_440 -> m14_441  [key=0, style=solid];
m14_440 -> m14_99  [key=2, style=dotted];
m14_440 -> m14_236  [key=2, style=dotted];
m14_440 -> m14_120  [key=2, style=dotted];
m14_441 -> m14_438  [key=0, style=bold, color=blue];
m14_110 -> m14_111  [key=0, style=solid];
m14_110 -> m14_113  [key=1, style=dashed, color=darkseagreen4, label=ulong];
m14_110 -> m14_114  [key=1, style=dashed, color=darkseagreen4, label=ulong];
m14_110 -> m14_122  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type objectType"];
m14_111 -> m14_112  [key=0, style=solid];
m14_111 -> m14_76  [key=2, style=dotted];
m14_111 -> m14_114  [key=1, style=dashed, color=darkseagreen4, label=task];
m14_111 -> m14_115  [key=2, style=dotted];
m14_111 -> m14_113  [key=1, style=dashed, color=darkseagreen4, label=contract];
m14_113 -> m14_115  [key=0, style=solid];
m14_113 -> m14_103  [key=2, style=dotted];
m14_113 -> m14_114  [key=0, style=solid];
m14_114 -> m14_115  [key=0, style=solid];
m14_114 -> m14_116  [key=2, style=dotted];
m14_114 -> m14_110  [key=0, style=bold, color=blue];
m14_112 -> m14_113  [key=0, style=solid];
m14_112 -> m14_114  [key=0, style=solid];
m14_112 -> m14_56  [key=2, style=dotted];
m14_115 -> m14_110  [key=0, style=bold, color=blue];
m14_33 -> m14_34  [key=0, style=solid];
m14_33 -> m14_35  [key=2, style=dotted];
m14_33 -> m14_36  [key=2, style=dotted];
m14_64 -> m14_65  [key=0, style=solid];
m14_64 -> m14_66  [key=1, style=dashed, color=darkseagreen4, label=int];
m14_64 -> m14_67  [key=1, style=dashed, color=darkseagreen4, label=int];
m14_65 -> m14_66  [key=0, style=solid];
m14_65 -> m14_69  [key=2, style=dotted];
m14_65 -> m14_63  [key=2, style=dotted];
m14_65 -> m14_45  [key=2, style=dotted];
m14_65 -> m14_60  [key=0, style=bold, color=blue];
m14_66 -> m14_67  [key=0, style=solid];
m14_66 -> m14_68  [key=0, style=solid];
m14_66 -> m14_66  [key=1, style=dashed, color=darkseagreen4, label=int];
m14_67 -> m14_66  [key=0, style=solid];
m14_67 -> m14_69  [key=2, style=dotted];
m14_67 -> m14_63  [key=2, style=dotted];
m14_67 -> m14_45  [key=2, style=dotted];
m14_67 -> m14_68  [key=0, style=solid];
m14_67 -> m14_91  [key=2, style=dotted];
m14_68 -> m14_64  [key=0, style=bold, color=blue];
m14_68 -> m14_69  [key=0, style=solid];
m14_68 -> m14_70  [key=0, style=solid];
m14_489 -> m14_490  [key=0, style=solid];
m14_490 -> m14_491  [key=0, style=solid];
m14_490 -> m14_492  [key=2, style=dotted];
m14_490 -> m14_493  [key=2, style=dotted];
m14_491 -> m14_489  [key=0, style=bold, color=blue];
m14_17 -> m14_18  [key=0, style=solid];
m14_17 -> m14_22  [key=1, style=dashed, color=darkseagreen4, label=member];
m14_17 -> m14_24  [key=0, style=solid];
m14_17 -> m14_19  [key=1, style=dashed, color=darkseagreen4, label=member];
m14_17 -> m14_20  [key=1, style=dashed, color=darkseagreen4, label=member];
m14_17 -> m14_21  [key=1, style=dashed, color=darkseagreen4, label=member];
m14_17 -> m14_23  [key=1, style=dashed, color=darkseagreen4, label=member];
m14_18 -> m14_19  [key=0, style=solid];
m14_18 -> m14_20  [key=2, style=dotted];
m14_18 -> m14_21  [key=2, style=dotted];
m14_18 -> m14_32  [key=2, style=dotted];
m14_19 -> m14_17  [key=0, style=solid, color=blue];
m14_19 -> m14_33  [key=2, style=dotted];
m14_184 -> m14_185  [key=0, style=solid];
m14_184 -> m14_220  [key=2, style=dotted];
m14_185 -> m14_186  [key=0, style=solid];
m14_185 -> m14_45  [key=2, style=dotted];
m14_185 -> m14_29  [key=2, style=dotted];
m14_185 -> m14_187  [key=1, style=dashed, color=darkseagreen4, label=dataContractAttribute];
m14_186 -> m14_187  [key=0, style=solid];
m14_186 -> m14_143  [key=2, style=dotted];
m14_186 -> m14_45  [key=2, style=dotted];
m14_187 -> m14_184  [key=0, style=bold, color=blue];
m14_187 -> m14_188  [key=0, style=solid];
m14_187 -> m14_189  [key=0, style=solid];
m14_129 -> m14_130  [key=0, style=solid, color=green];
m14_129 -> m14_131  [key=0, style=solid, color=green];
m14_129 -> m14_138  [key=2, style=dotted, color=green];
m14_130 -> m14_131  [key=0, style=solid];
m14_130 -> m14_132  [key=2, style=dotted];
m14_130 -> m14_134  [key=0, style=solid, color=green];
m14_130 -> m14_104  [key=2, style=dotted, color=green];
m14_131 -> m14_129  [key=0, style=bold, color=blue];
m14_131 -> m14_132  [key=0, style=solid, color=green];
m14_131 -> m14_133  [key=0, style=solid, color=green];
m14_131 -> m14_139  [key=2, style=dotted, color=green];
m14_46 -> m14_122  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type objectType"];
m14_46 -> m14_47  [key=0, style=solid];
m14_46 -> m14_49  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m14_46 -> m14_52  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m14_201 -> m14_203  [key=0, style=solid];
m14_201 -> m14_205  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m14_201 -> m14_206  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m14_201 -> m14_202  [key=0, style=solid, color=green];
m14_203 -> m14_204  [key=0, style=solid];
m14_203 -> m14_76  [key=2, style=dotted];
m14_203 -> m14_206  [key=1, style=dashed, color=darkseagreen4, label=task];
m14_205 -> m14_207  [key=0, style=solid];
m14_205 -> m14_77  [key=2, style=dotted];
m14_205 -> m14_206  [key=0, style=solid];
m14_205 -> m14_222  [key=2, style=dotted];
m14_206 -> m14_207  [key=0, style=solid];
m14_206 -> m14_208  [key=2, style=dotted];
m14_206 -> m14_223  [key=2, style=dotted];
m14_204 -> m14_205  [key=0, style=solid];
m14_204 -> m14_206  [key=0, style=solid];
m14_207 -> m14_201  [key=0, style=bold, color=blue];
m14_207 -> m14_208  [key=0, style=solid];
m14_207 -> m14_218  [key=2, style=dotted];
m14_207 -> m14_220  [key=2, style=dotted];
m14_49 -> m14_50  [key=0, style=solid];
m14_49 -> m14_57  [key=2, style=dotted];
m14_387 -> m14_389  [key=0, style=solid];
m14_389 -> m14_390  [key=0, style=solid];
m14_389 -> m14_99  [key=2, style=dotted];
m14_389 -> m14_236  [key=2, style=dotted];
m14_389 -> m14_120  [key=2, style=dotted];
m14_390 -> m14_387  [key=0, style=bold, color=blue];
m14_177 -> m14_179  [key=0, style=solid];
m14_177 -> m14_181  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m14_177 -> m14_182  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m14_179 -> m14_180  [key=0, style=solid];
m14_179 -> m14_169  [key=2, style=dotted];
m14_179 -> m14_182  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m14_179 -> m14_181  [key=0, style=solid];
m14_179 -> m14_188  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m14_179 -> m14_204  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract"];
m14_179 -> m14_185  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m14_179 -> m14_183  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m14_179 -> m14_184  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m14_179 -> m14_190  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m14_179 -> m14_191  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m14_179 -> m14_197  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m14_179 -> m14_205  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m14_179 -> m14_206  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m14_179 -> m14_207  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m14_179 -> m14_208  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m14_179 -> m14_58  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonObjectContract contract"];
m14_179 -> m14_171  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.MemberInfo member"];
m14_181 -> m14_183  [key=0, style=solid];
m14_181 -> m14_16  [key=2, style=dotted];
m14_181 -> m14_202  [key=1, style=dashed, color=green, label=property];
m14_181 -> m14_182  [key=0, style=solid];
m14_181 -> m14_217  [key=2, style=dotted];
m14_181 -> m14_184  [key=1, style=dashed, color=darkseagreen4, label=property];
m14_181 -> m14_198  [key=1, style=dashed, color=darkseagreen4, label=property];
m14_181 -> m14_200  [key=1, style=dashed, color=darkseagreen4, label=property];
m14_181 -> m14_203  [key=1, style=dashed, color=darkseagreen4, label=property];
m14_181 -> m14_204  [key=1, style=dashed, color=darkseagreen4, label=property];
m14_181 -> m14_205  [key=1, style=dashed, color=darkseagreen4, label=property];
m14_181 -> m14_206  [key=1, style=dashed, color=darkseagreen4, label=property];
m14_181 -> m14_207  [key=1, style=dashed, color=darkseagreen4, label=property];
m14_181 -> m14_209  [key=1, style=dashed, color=darkseagreen4, label=property];
m14_181 -> m14_210  [key=1, style=dashed, color=darkseagreen4, label=property];
m14_181 -> m14_211  [key=1, style=dashed, color=darkseagreen4, label=property];
m14_181 -> m14_212  [key=1, style=dashed, color=darkseagreen4, label=property];
m14_181 -> m14_213  [key=1, style=dashed, color=darkseagreen4, label=property];
m14_181 -> m14_214  [key=1, style=dashed, color=darkseagreen4, label=property];
m14_181 -> m14_215  [key=1, style=dashed, color=darkseagreen4, label=property];
m14_182 -> m14_183  [key=0, style=solid];
m14_182 -> m14_184  [key=2, style=dotted];
m14_182 -> m14_218  [key=2, style=dotted];
m14_180 -> m14_181  [key=0, style=solid];
m14_180 -> m14_182  [key=0, style=solid];
m14_183 -> m14_177  [key=0, style=bold, color=blue];
m14_183 -> m14_184  [key=0, style=solid];
m14_183 -> m14_219  [key=2, style=dotted];
m14_85 -> m14_87  [key=0, style=solid];
m14_85 -> m14_86  [key=0, style=solid];
m14_87 -> m14_88  [key=0, style=solid];
m14_87 -> m14_16  [key=2, style=dotted];
m14_88 -> m14_85  [key=0, style=bold, color=blue];
m14_88 -> m14_76  [key=0, style=solid];
m14_88 -> m14_97  [key=2, style=dotted];
m14_88 -> m14_88  [key=1, style=dashed, color=darkseagreen4, label=prevAttributeType];
m14_88 -> m14_89  [key=0, style=solid];
m14_78 -> m14_79  [key=0, style=solid];
m14_78 -> m14_80  [key=1, style=dashed, color=darkseagreen4, label=prevAttributeType];
m14_78 -> m14_64  [key=3, color=darkorchid, style=bold, label="Local variable System.Type prevAttributeType"];
m14_79 -> m14_80  [key=0, style=solid];
m14_79 -> m14_45  [key=2, style=dotted];
m14_79 -> m14_82  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m14_79 -> m14_84  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m14_79 -> m14_86  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m14_79 -> m14_88  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m14_79 -> m14_96  [key=2, style=dotted];
m14_80 -> m14_81  [key=0, style=solid];
m14_80 -> m14_77  [key=2, style=dotted];
m14_80 -> m14_45  [key=2, style=dotted];
m14_80 -> m14_97  [key=2, style=dotted];
m14_80 -> m14_80  [key=1, style=dashed, color=darkseagreen4, label=prevAttributeType];
m14_80 -> m14_82  [key=0, style=solid];
m14_81 -> m14_78  [key=0, style=bold, color=blue];
m14_81 -> m14_82  [key=0, style=solid];
m14_86 -> m14_97  [key=2, style=dotted];
m14_86 -> m14_86  [key=1, style=dashed, color=darkseagreen4, label=prevAttributeType];
m14_86 -> m14_87  [key=0, style=solid];
m14_86 -> m14_88  [key=0, style=solid];
m14_76 -> m14_77  [key=0, style=solid];
m14_76 -> m14_90  [key=0, style=solid];
m14_76 -> m14_95  [key=2, style=dotted];
m14_76 -> m14_79  [key=1, style=dashed, color=darkseagreen4, label=method];
m14_76 -> m14_80  [key=1, style=dashed, color=darkseagreen4, label=method];
m14_76 -> m14_81  [key=1, style=dashed, color=darkseagreen4, label=method];
m14_76 -> m14_82  [key=1, style=dashed, color=darkseagreen4, label=method];
m14_76 -> m14_83  [key=1, style=dashed, color=darkseagreen4, label=method];
m14_76 -> m14_84  [key=1, style=dashed, color=darkseagreen4, label=method];
m14_76 -> m14_85  [key=1, style=dashed, color=darkseagreen4, label=method];
m14_76 -> m14_86  [key=1, style=dashed, color=darkseagreen4, label=method];
m14_76 -> m14_87  [key=1, style=dashed, color=darkseagreen4, label=method];
m14_76 -> m14_88  [key=1, style=dashed, color=darkseagreen4, label=method];
m14_76 -> m14_89  [key=1, style=dashed, color=darkseagreen4, label=method];
m14_380 -> m14_381  [key=0, style=solid];
m14_381 -> m14_382  [key=0, style=solid];
m14_381 -> m14_120  [key=2, style=dotted];
m14_381 -> m14_383  [key=2, style=dotted];
m14_382 -> m14_380  [key=0, style=bold, color=blue];
m14_142 -> m14_144  [key=0, style=solid, color=green];
m14_142 -> m14_143  [key=0, style=solid];
m14_144 -> m14_145  [key=0, style=solid, color=green];
m14_144 -> m14_146  [key=0, style=solid, color=green];
m14_145 -> m14_146  [key=0, style=solid];
m14_145 -> m14_147  [key=2, style=dotted];
m14_145 -> m14_148  [key=2, style=dotted];
m14_145 -> m14_157  [key=0, style=solid, color=green];
m14_145 -> m14_159  [key=2, style=dotted, color=green];
m14_145 -> m14_160  [key=2, style=dotted, color=green];
m14_145 -> m14_161  [key=2, style=dotted, color=green];
m14_146 -> m14_144  [key=0, style=bold, color=blue];
m14_146 -> m14_147  [key=0, style=solid];
m14_146 -> m14_148  [key=0, style=solid];
m14_159 -> m14_160  [key=0, style=solid];
m14_241 -> m14_242  [key=0, style=solid];
m14_242 -> m14_243  [key=0, style=solid];
m14_242 -> m14_244  [key=2, style=dotted];
m14_242 -> m14_245  [key=2, style=dotted];
m14_243 -> m14_241  [key=0, style=bold, color=blue];
m14_264 -> m14_266  [key=0, style=solid];
m14_266 -> m14_267  [key=0, style=solid];
m14_266 -> m14_268  [key=2, style=dotted];
m14_266 -> m14_70  [key=2, style=dotted];
m14_267 -> m14_264  [key=0, style=bold, color=blue];
m14_215 -> m14_217  [key=0, style=solid];
m14_215 -> m14_218  [key=1, style=dashed, color=darkseagreen4, label=string];
m14_215 -> m14_216  [key=0, style=solid];
m14_217 -> m14_218  [key=0, style=solid];
m14_217 -> m14_220  [key=2, style=dotted];
m14_218 -> m14_219  [key=0, style=solid];
m14_218 -> m14_77  [key=2, style=dotted];
m14_219 -> m14_215  [key=0, style=bold, color=blue];
m14_474 -> m14_475  [key=0, style=solid];
m14_475 -> m14_476  [key=0, style=solid];
m14_475 -> m14_120  [key=2, style=dotted];
m14_475 -> m14_477  [key=2, style=dotted];
m14_476 -> m14_474  [key=0, style=bold, color=blue];
m14_224 -> m14_226  [key=0, style=solid];
m14_224 -> m14_225  [key=0, style=solid];
m14_226 -> m14_227  [key=0, style=solid];
m14_226 -> m14_228  [key=2, style=dotted];
m14_226 -> m14_70  [key=2, style=dotted];
m14_226 -> m14_126  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m14_226 -> m14_128  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m14_226 -> m14_130  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m14_226 -> m14_132  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m14_226 -> m14_133  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m14_226 -> m14_14  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m14_226 -> m14_1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m14_226 -> m14_2  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m14_226 -> m14_8  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m14_226 -> m14_26  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m14_226 -> m14_48  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m14_226 -> m14_50  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m14_226 -> m14_52  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m14_226 -> m14_100  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m14_226 -> m14_106  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m14_226 -> m14_112  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m14_226 -> m14_118  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m14_226 -> m14_124  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m14_226 -> m14_167  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m14_226 -> m14_172  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m14_226 -> m14_198  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m14_227 -> m14_224  [key=0, style=bold, color=blue];
m14_541 -> m14_542  [key=0, style=solid];
m14_542 -> m14_543  [key=0, style=solid];
m14_542 -> m14_535  [key=2, style=dotted];
m14_542 -> m14_544  [key=2, style=dotted];
m14_543 -> m14_541  [key=0, style=bold, color=blue];
m14_166 -> m14_168  [key=0, style=solid];
m14_166 -> m14_16  [key=2, style=dotted];
m14_7 -> m14_9  [key=0, style=solid];
m14_7 -> m14_10  [key=2, style=dotted];
m14_0 -> m14_1  [key=0, style=solid];
m14_1 -> m14_2  [key=0, style=solid];
m14_1 -> m14_3  [key=2, style=dotted];
m14_1 -> m14_4  [key=2, style=dotted];
m14_2 -> m14_0  [key=0, style=bold, color=blue];
m14_2 -> m14_3  [key=0, style=solid];
m14_2 -> m14_4  [key=2, style=dotted];
m14_32 -> m14_33  [key=0, style=solid];
m14_398 -> m14_400  [key=0, style=solid];
m14_400 -> m14_401  [key=0, style=solid];
m14_400 -> m14_99  [key=2, style=dotted];
m14_400 -> m14_236  [key=2, style=dotted];
m14_400 -> m14_120  [key=2, style=dotted];
m14_401 -> m14_398  [key=0, style=bold, color=blue];
m14_384 -> m14_385  [key=0, style=solid];
m14_385 -> m14_386  [key=0, style=solid];
m14_385 -> m14_387  [key=2, style=dotted];
m14_385 -> m14_388  [key=2, style=dotted];
m14_386 -> m14_384  [key=0, style=bold, color=blue];
m14_12 -> m14_13  [key=0, style=solid, color=green];
m14_12 -> m14_14  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m14_12 -> m14_15  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m14_12 -> m14_25  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m14_12 -> m14_16  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.List<System.Reflection.MemberInfo> GetSerializableMembers"];
m14_13 -> m14_14  [key=0, style=solid, color=green];
m14_13 -> m14_29  [key=2, style=dotted, color=green];
m14_13 -> m14_22  [key=1, style=dashed, color=green, label=dataContractAttribute];
m14_14 -> m14_15  [key=0, style=solid];
m14_14 -> m14_30  [key=2, style=dotted];
m14_14 -> m14_18  [key=1, style=dashed, color=darkseagreen4, label=defaultMembers];
m14_14 -> m14_16  [key=2, style=dotted];
m14_22 -> m14_23  [key=0, style=solid];
m14_22 -> m14_17  [key=0, style=solid];
m14_22 -> m14_34  [key=2, style=dotted];
m14_22 -> m14_25  [key=0, style=solid];
m14_22 -> m14_27  [key=0, style=solid];
m14_22 -> m14_29  [key=0, style=solid];
m14_15 -> m14_16  [key=0, style=solid];
m14_15 -> m14_30  [key=2, style=dotted];
m14_15 -> m14_17  [key=1, style=dashed, color=darkseagreen4, label=allMembers];
m14_15 -> m14_12  [key=0, style=bold, color=blue];
m14_25 -> m14_26  [key=0, style=solid];
m14_25 -> m14_27  [key=0, style=solid];
m14_25 -> m14_35  [key=2, style=dotted];
m14_16 -> m14_17  [key=0, style=solid];
m14_16 -> m14_31  [key=2, style=dotted];
m14_16 -> m14_19  [key=1, style=dashed, color=darkseagreen4, label=serializableMembers];
m14_16 -> m14_21  [key=1, style=dashed, color=darkseagreen4, label=serializableMembers];
m14_16 -> m14_23  [key=1, style=dashed, color=darkseagreen4, label=serializableMembers];
m14_16 -> m14_26  [key=1, style=dashed, color=darkseagreen4, label=serializableMembers];
m14_16 -> m14_27  [key=1, style=dashed, color=darkseagreen4, label=serializableMembers];
m14_20 -> m14_22  [key=0, style=solid];
m14_20 -> m14_21  [key=0, style=solid];
m14_20 -> m14_34  [key=2, style=dotted];
m14_20 -> m14_24  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m14_20 -> m14_26  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m14_20 -> m14_28  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m14_20 -> m14_29  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonToken"];
m14_23 -> m14_17  [key=0, style=solid];
m14_23 -> m14_33  [key=2, style=dotted];
m14_23 -> m14_24  [key=0, style=solid];
m14_26 -> m14_26  [key=1, style=dashed, color=darkseagreen4, label=serializableMembers];
m14_26 -> m14_27  [key=0, style=solid];
m14_26 -> m14_36  [key=2, style=dotted];
m14_26 -> m14_37  [key=2, style=dotted];
m14_26 -> m14_30  [key=0, style=solid];
m14_26 -> m14_16  [key=2, style=dotted];
m14_27 -> m14_28  [key=0, style=solid];
m14_24 -> m14_25  [key=0, style=solid];
m14_24 -> m14_30  [key=0, style=solid];
m14_24 -> m14_16  [key=2, style=dotted];
m14_21 -> m14_17  [key=0, style=solid];
m14_21 -> m14_33  [key=2, style=dotted];
m14_28 -> m14_12  [key=0, style=bold, color=blue];
m14_28 -> m14_30  [key=0, style=solid];
m14_28 -> m14_16  [key=2, style=dotted];
m14_562 -> m14_563  [key=0, style=solid];
m14_562 -> m14_567  [key=1, style=dashed, color=darkseagreen4, label=int];
m14_562 -> m14_568  [key=1, style=dashed, color=darkseagreen4, label=int];
m14_562 -> m14_570  [key=1, style=dashed, color=darkseagreen4, label=int];
m14_562 -> m14_571  [key=1, style=dashed, color=darkseagreen4, label=int];
m14_562 -> m14_572  [key=1, style=dashed, color=darkseagreen4, label=int];
m14_563 -> m14_564  [key=0, style=solid];
m14_563 -> m14_565  [key=0, style=solid];
m14_567 -> m14_576  [key=0, style=solid];
m14_567 -> m14_577  [key=2, style=dotted];
m14_568 -> m14_569  [key=0, style=solid];
m14_568 -> m14_570  [key=0, style=solid];
m14_570 -> m14_571  [key=0, style=solid];
m14_570 -> m14_577  [key=2, style=dotted];
m14_570 -> m14_572  [key=1, style=dashed, color=darkseagreen4, label=newBuffer];
m14_570 -> m14_574  [key=1, style=dashed, color=darkseagreen4, label=newBuffer];
m14_570 -> m14_575  [key=1, style=dashed, color=darkseagreen4, label=newBuffer];
m14_571 -> m14_572  [key=0, style=solid];
m14_571 -> m14_573  [key=0, style=solid];
m14_572 -> m14_573  [key=0, style=solid];
m14_572 -> m14_578  [key=2, style=dotted];
m14_564 -> m14_565  [key=0, style=solid];
m14_564 -> m14_567  [key=1, style=dashed, color=darkseagreen4, label=int];
m14_564 -> m14_568  [key=1, style=dashed, color=darkseagreen4, label=int];
m14_564 -> m14_570  [key=1, style=dashed, color=darkseagreen4, label=int];
m14_565 -> m14_566  [key=0, style=solid];
m14_565 -> m14_568  [key=1, style=dashed, color=darkseagreen4, label=buffer];
m14_565 -> m14_569  [key=1, style=dashed, color=darkseagreen4, label=buffer];
m14_565 -> m14_572  [key=1, style=dashed, color=darkseagreen4, label=buffer];
m14_565 -> m14_573  [key=1, style=dashed, color=darkseagreen4, label=buffer];
m14_566 -> m14_567  [key=0, style=solid];
m14_566 -> m14_568  [key=0, style=solid];
m14_569 -> m14_576  [key=0, style=solid];
m14_573 -> m14_574  [key=0, style=solid];
m14_573 -> m14_579  [key=2, style=dotted];
m14_574 -> m14_575  [key=0, style=solid];
m14_575 -> m14_576  [key=0, style=solid];
m14_576 -> m14_562  [key=0, style=bold, color=blue];
m14_524 -> m14_526  [key=0, style=solid];
m14_524 -> m14_527  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m14_524 -> m14_528  [key=1, style=dashed, color=darkseagreen4, label=string];
m14_524 -> m14_529  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m14_526 -> m14_527  [key=0, style=solid];
m14_526 -> m14_531  [key=2, style=dotted];
m14_526 -> m14_45  [key=2, style=dotted];
m14_527 -> m14_528  [key=0, style=solid];
m14_527 -> m14_77  [key=2, style=dotted];
m14_527 -> m14_45  [key=2, style=dotted];
m14_528 -> m14_529  [key=0, style=solid];
m14_528 -> m14_77  [key=2, style=dotted];
m14_528 -> m14_45  [key=2, style=dotted];
m14_529 -> m14_530  [key=0, style=solid];
m14_529 -> m14_77  [key=2, style=dotted];
m14_529 -> m14_45  [key=2, style=dotted];
m14_530 -> m14_524  [key=0, style=bold, color=blue];
m14_481 -> m14_483  [key=0, style=solid];
m14_483 -> m14_484  [key=0, style=solid];
m14_483 -> m14_99  [key=2, style=dotted];
m14_483 -> m14_236  [key=2, style=dotted];
m14_483 -> m14_120  [key=2, style=dotted];
m14_484 -> m14_481  [key=0, style=bold, color=blue];
m14_229 -> m14_230  [key=0, style=solid];
m14_230 -> m14_231  [key=0, style=solid];
m14_230 -> m14_232  [key=2, style=dotted];
m14_230 -> m14_233  [key=2, style=dotted];
m14_231 -> m14_229  [key=0, style=bold, color=blue];
m14_251 -> m14_253  [key=0, style=solid];
m14_251 -> m14_255  [key=1, style=dashed, color=darkseagreen4, label="byte[]"];
m14_251 -> m14_256  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m14_253 -> m14_254  [key=0, style=solid];
m14_253 -> m14_76  [key=2, style=dotted];
m14_253 -> m14_45  [key=2, style=dotted];
m14_255 -> m14_256  [key=0, style=solid];
m14_255 -> m14_259  [key=2, style=dotted];
m14_255 -> m14_45  [key=2, style=dotted];
m14_256 -> m14_257  [key=0, style=solid];
m14_256 -> m14_260  [key=2, style=dotted];
m14_256 -> m14_45  [key=2, style=dotted];
m14_254 -> m14_255  [key=0, style=solid];
m14_254 -> m14_143  [key=2, style=dotted];
m14_254 -> m14_45  [key=2, style=dotted];
m14_257 -> m14_258  [key=0, style=solid];
m14_257 -> m14_143  [key=2, style=dotted];
m14_257 -> m14_45  [key=2, style=dotted];
m14_258 -> m14_251  [key=0, style=bold, color=blue];
m14_223 -> m14_221  [key=0, style=bold, color=blue];
m14_521 -> m14_522  [key=0, style=solid];
m14_522 -> m14_523  [key=0, style=solid];
m14_522 -> m14_524  [key=2, style=dotted];
m14_522 -> m14_525  [key=2, style=dotted];
m14_523 -> m14_521  [key=0, style=bold, color=blue];
m14_188 -> m14_189  [key=0, style=solid];
m14_188 -> m14_202  [key=1, style=dashed, color=green, label=dataMemberAttribute];
m14_188 -> m14_190  [key=0, style=solid];
m14_188 -> m14_34  [key=2, style=dotted];
m14_188 -> m14_195  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m14_188 -> m14_196  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m14_188 -> m14_201  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m14_188 -> m14_204  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m14_189 -> m14_190  [key=0, style=solid];
m14_189 -> m14_191  [key=2, style=dotted];
m14_189 -> m14_192  [key=2, style=dotted];
m14_189 -> m14_202  [key=1, style=dashed, color=green, label=dataMemberAttribute];
m14_189 -> m14_195  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m14_189 -> m14_196  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m14_189 -> m14_201  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m14_189 -> m14_204  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m14_190 -> m14_188  [key=0, style=bold, color=blue];
m14_190 -> m14_204  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m14_190 -> m14_34  [key=2, style=dotted];
m14_190 -> m14_200  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m14_190 -> m14_210  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m14_190 -> m14_211  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m14_190 -> m14_212  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m14_190 -> m14_213  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m14_190 -> m14_214  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m14_190 -> m14_191  [key=0, style=solid];
m14_190 -> m14_193  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m14_190 -> m14_194  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m14_190 -> m14_199  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m14_10 -> m14_11  [key=0, style=solid];
m14_10 -> m14_12  [key=2, style=dotted];
m14_10 -> m14_13  [key=2, style=dotted];
m14_136 -> m14_138  [key=0, style=solid];
m14_136 -> m14_139  [key=1, style=dashed, color=darkseagreen4, label=string];
m14_116 -> m14_122  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type objectType"];
m14_116 -> m14_117  [key=0, style=solid];
m14_116 -> m14_118  [key=1, style=dashed, color=darkseagreen4, label=ulong];
m14_118 -> m14_56  [key=2, style=dotted];
m14_118 -> m14_119  [key=0, style=solid];
m14_118 -> m14_103  [key=2, style=dotted];
m14_118 -> m14_45  [key=2, style=dotted];
m14_117 -> m14_118  [key=0, style=solid];
m14_117 -> m14_121  [key=2, style=dotted];
m14_117 -> m14_119  [key=1, style=dashed, color=darkseagreen4, label=contract];
m14_117 -> m14_45  [key=2, style=dotted];
m14_119 -> m14_120  [key=0, style=solid];
m14_119 -> m14_116  [key=0, style=bold, color=blue];
m14_120 -> m14_116  [key=0, style=bold, color=blue];
m14_120 -> m14_121  [key=0, style=solid];
m14_120 -> m14_123  [key=1, style=dashed, color=darkseagreen4, label=long];
m14_120 -> m14_124  [key=1, style=dashed, color=darkseagreen4, label=long];
m14_30 -> m14_20  [key=0, style=bold, color=blue];
m14_202 -> m14_204  [key=0, style=solid, color=green];
m14_496 -> m14_497  [key=0, style=solid];
m14_497 -> m14_498  [key=0, style=solid];
m14_497 -> m14_96  [key=2, style=dotted];
m14_497 -> m14_499  [key=2, style=dotted];
m14_497 -> m14_500  [key=2, style=dotted];
m14_498 -> m14_496  [key=0, style=bold, color=blue];
m14_92 -> m14_94  [key=0, style=solid];
m14_94 -> m14_95  [key=0, style=solid];
m14_94 -> m14_77  [key=2, style=dotted];
m14_95 -> m14_92  [key=0, style=bold, color=blue];
m14_77 -> m14_76  [key=0, style=solid];
m14_77 -> m14_78  [key=0, style=solid];
m14_29 -> m14_30  [key=0, style=solid];
m14_29 -> m14_31  [key=2, style=dotted];
m14_459 -> m14_461  [key=0, style=solid];
m14_459 -> m14_462  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m14_459 -> m14_463  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m14_459 -> m14_464  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m14_461 -> m14_462  [key=0, style=solid];
m14_461 -> m14_76  [key=2, style=dotted];
m14_461 -> m14_45  [key=2, style=dotted];
m14_462 -> m14_463  [key=0, style=solid];
m14_462 -> m14_16  [key=2, style=dotted];
m14_462 -> m14_45  [key=2, style=dotted];
m14_463 -> m14_464  [key=0, style=solid];
m14_463 -> m14_466  [key=2, style=dotted];
m14_463 -> m14_77  [key=2, style=dotted];
m14_463 -> m14_45  [key=2, style=dotted];
m14_463 -> m14_463  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m14_464 -> m14_465  [key=0, style=solid];
m14_464 -> m14_16  [key=2, style=dotted];
m14_464 -> m14_45  [key=2, style=dotted];
m14_465 -> m14_459  [key=0, style=bold, color=blue];
m14_485 -> m14_486  [key=0, style=solid];
m14_486 -> m14_487  [key=0, style=solid];
m14_486 -> m14_126  [key=2, style=dotted];
m14_486 -> m14_488  [key=2, style=dotted];
m14_487 -> m14_485  [key=0, style=bold, color=blue];
m14_69 -> m14_73  [key=0, style=solid, color=green];
m14_162 -> m14_164  [key=0, style=solid];
m14_162 -> m14_166  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m14_162 -> m14_167  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m14_162 -> m14_163  [key=0, style=solid];
m14_164 -> m14_165  [key=0, style=solid];
m14_164 -> m14_169  [key=2, style=dotted];
m14_164 -> m14_167  [key=1, style=dashed, color=darkseagreen4, label=task];
m14_164 -> m14_166  [key=2, style=dotted];
m14_167 -> m14_168  [key=0, style=solid];
m14_167 -> m14_170  [key=2, style=dotted];
m14_167 -> m14_12  [key=2, style=dotted];
m14_167 -> m14_171  [key=1, style=dashed, color=darkseagreen4, label=members];
m14_165 -> m14_166  [key=0, style=solid];
m14_165 -> m14_167  [key=0, style=solid];
m14_165 -> m14_160  [key=0, style=bold, color=blue];
m14_168 -> m14_162  [key=0, style=bold, color=blue];
m14_168 -> m14_169  [key=0, style=solid];
m14_168 -> m14_170  [key=0, style=solid];
m14_103 -> m14_104  [key=0, style=solid];
m14_103 -> m14_105  [key=1, style=dashed, color=darkseagreen4, label=ulong];
m14_103 -> m14_106  [key=1, style=dashed, color=darkseagreen4, label=ulong];
m14_103 -> m14_107  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m14_221 -> m14_221  [key=3, color=darkorchid, style=bold, label="method methodReturn string ResolvePropertyName"];
m14_221 -> m14_224  [key=0, style=solid];
m14_221 -> m14_192  [key=3, color=darkorchid, style=bold, label="Parameter variable string propertyName"];
m14_221 -> m14_222  [key=0, style=solid];
m14_225 -> m14_221  [key=0, style=bold, color=blue];
m14_48 -> m14_56  [key=2, style=dotted];
m14_48 -> m14_49  [key=0, style=solid];
m14_48 -> m14_44  [key=0, style=bold, color=blue];
m14_47 -> m14_48  [key=0, style=solid];
m14_47 -> m14_55  [key=2, style=dotted];
m14_47 -> m14_49  [key=1, style=dashed, color=darkseagreen4, label=contract];
m14_47 -> m14_50  [key=1, style=dashed, color=darkseagreen4, label=contract];
m14_47 -> m14_51  [key=1, style=dashed, color=darkseagreen4, label=contract];
m14_47 -> m14_52  [key=1, style=dashed, color=darkseagreen4, label=contract];
m14_47 -> m14_53  [key=1, style=dashed, color=darkseagreen4, label=contract];
m14_50 -> m14_51  [key=0, style=solid];
m14_50 -> m14_58  [key=2, style=dotted];
m14_50 -> m14_59  [key=2, style=dotted];
m14_52 -> m14_53  [key=0, style=solid];
m14_52 -> m14_60  [key=2, style=dotted];
m14_52 -> m14_54  [key=2, style=dotted];
m14_52 -> m14_55  [key=2, style=dotted];
m14_51 -> m14_52  [key=0, style=solid];
m14_51 -> m14_53  [key=0, style=solid];
m14_53 -> m14_54  [key=0, style=solid];
m14_53 -> m14_51  [key=0, style=bold, color=blue];
m14_54 -> m14_46  [key=0, style=bold, color=blue];
m14_54 -> m14_56  [key=0, style=solid];
m14_54 -> m14_59  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m14_54 -> m14_60  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m14_510 -> m14_511  [key=0, style=solid];
m14_511 -> m14_512  [key=0, style=solid];
m14_511 -> m14_120  [key=2, style=dotted];
m14_511 -> m14_513  [key=2, style=dotted];
m14_512 -> m14_510  [key=0, style=bold, color=blue];
m14_43 -> m14_44  [key=0, style=solid];
m14_402 -> m14_403  [key=0, style=solid];
m14_403 -> m14_404  [key=0, style=solid];
m14_403 -> m14_405  [key=2, style=dotted];
m14_403 -> m14_406  [key=2, style=dotted];
m14_404 -> m14_402  [key=0, style=bold, color=blue];
m14_126 -> m14_127  [key=0, style=solid];
m14_126 -> m14_134  [key=0, style=solid, color=green];
m14_126 -> m14_46  [key=2, style=dotted, color=green];
m14_127 -> m14_128  [key=0, style=solid, color=green];
m14_127 -> m14_110  [key=2, style=dotted];
m14_127 -> m14_129  [key=0, style=solid, color=green];
m14_127 -> m14_137  [key=2, style=dotted, color=green];
m14_128 -> m14_126  [key=0, style=bold, color=blue];
m14_128 -> m14_134  [key=0, style=solid, color=green];
m14_128 -> m14_98  [key=2, style=dotted, color=green];
m14_492 -> m14_494  [key=0, style=solid];
m14_494 -> m14_495  [key=0, style=solid];
m14_494 -> m14_99  [key=2, style=dotted];
m14_494 -> m14_236  [key=2, style=dotted];
m14_494 -> m14_126  [key=2, style=dotted];
m14_495 -> m14_492  [key=0, style=bold, color=blue];
m14_57 -> m14_58  [key=0, style=solid];
m14_57 -> m14_62  [key=2, style=dotted];
m14_57 -> m14_59  [key=1, style=dashed, color=darkseagreen4, label=newLineLen];
m14_57 -> m14_60  [key=1, style=dashed, color=darkseagreen4, label=newLineLen];
m14_122 -> m14_125  [key=1, style=dashed, color=green, label="System.Type"];
m14_122 -> m14_126  [key=1, style=dashed, color=green, label="System.Type"];
m14_122 -> m14_127  [key=1, style=dashed, color=green, label="System.Type"];
m14_122 -> m14_128  [key=1, style=dashed, color=green, label="System.Type"];
m14_122 -> m14_129  [key=1, style=dashed, color=green, label="System.Type"];
m14_122 -> m14_130  [key=1, style=dashed, color=green, label="System.Type"];
m14_122 -> m14_131  [key=1, style=dashed, color=green, label="System.Type"];
m14_122 -> m14_132  [key=1, style=dashed, color=green, label="System.Type"];
m14_122 -> m14_133  [key=1, style=dashed, color=green, label="System.Type"];
m14_122 -> m14_123  [key=0, style=solid];
m14_122 -> m14_124  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m14_122 -> m14_110  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Serialization.JsonContract CreateContract"];
m14_122 -> m14_46  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Serialization.JsonContract CreateContract"];
m14_122 -> m14_98  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Serialization.JsonContract CreateContract"];
m14_122 -> m14_104  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Serialization.JsonContract CreateContract"];
m14_122 -> m14_116  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Serialization.JsonContract CreateContract"];
m14_125 -> m14_126  [key=0, style=solid, color=green];
m14_125 -> m14_127  [key=0, style=solid, color=green];
m14_125 -> m14_136  [key=2, style=dotted, color=green];
m14_125 -> m14_120  [key=0, style=bold, color=blue];
m14_123 -> m14_125  [key=0, style=solid, color=green];
m14_123 -> m14_124  [key=0, style=solid];
m14_123 -> m14_135  [key=2, style=dotted];
m14_123 -> m14_123  [key=1, style=dashed, color=darkseagreen4, label=long];
m14_132 -> m14_134  [key=0, style=solid, color=green];
m14_132 -> m14_116  [key=2, style=dotted, color=green];
m14_133 -> m14_134  [key=0, style=solid, color=green];
m14_133 -> m14_46  [key=2, style=dotted, color=green];
m14_124 -> m14_134  [key=0, style=solid];
m14_124 -> m14_110  [key=2, style=dotted];
m14_124 -> m14_125  [key=0, style=solid];
m14_134 -> m14_122  [key=0, style=bold, color=blue];
m14_134 -> m14_135  [key=0, style=solid];
m14_134 -> m14_136  [key=2, style=dotted];
m14_134 -> m14_137  [key=2, style=dotted];
m14_301 -> m14_302  [key=0, style=solid];
m14_302 -> m14_303  [key=0, style=solid];
m14_302 -> m14_304  [key=2, style=dotted];
m14_302 -> m14_305  [key=2, style=dotted];
m14_303 -> m14_301  [key=0, style=bold, color=blue];
m14_294 -> m14_295  [key=0, style=solid];
m14_295 -> m14_296  [key=0, style=solid];
m14_295 -> m14_297  [key=2, style=dotted];
m14_295 -> m14_298  [key=2, style=dotted];
m14_296 -> m14_294  [key=0, style=bold, color=blue];
m14_365 -> m14_367  [key=0, style=solid];
m14_365 -> m14_369  [key=1, style=dashed, color=darkseagreen4, label="System.Guid"];
m14_367 -> m14_368  [key=0, style=solid];
m14_367 -> m14_76  [key=2, style=dotted];
m14_367 -> m14_45  [key=2, style=dotted];
m14_369 -> m14_370  [key=0, style=solid];
m14_369 -> m14_372  [key=2, style=dotted];
m14_369 -> m14_77  [key=2, style=dotted];
m14_369 -> m14_45  [key=2, style=dotted];
m14_369 -> m14_369  [key=1, style=dashed, color=darkseagreen4, label="System.Guid"];
m14_368 -> m14_369  [key=0, style=solid];
m14_368 -> m14_143  [key=2, style=dotted];
m14_368 -> m14_45  [key=2, style=dotted];
m14_370 -> m14_371  [key=0, style=solid];
m14_370 -> m14_143  [key=2, style=dotted];
m14_370 -> m14_45  [key=2, style=dotted];
m14_371 -> m14_365  [key=0, style=bold, color=blue];
m14_452 -> m14_453  [key=0, style=solid];
m14_452 -> m14_454  [key=1, style=dashed, color=darkseagreen4, label=string];
m14_453 -> m14_454  [key=0, style=solid];
m14_453 -> m14_45  [key=2, style=dotted];
m14_454 -> m14_455  [key=0, style=solid];
m14_454 -> m14_77  [key=2, style=dotted];
m14_454 -> m14_129  [key=2, style=dotted];
m14_454 -> m14_45  [key=2, style=dotted];
m14_455 -> m14_452  [key=0, style=bold, color=blue];
m14_316 -> m14_317  [key=0, style=solid];
m14_317 -> m14_318  [key=0, style=solid];
m14_317 -> m14_319  [key=2, style=dotted];
m14_317 -> m14_320  [key=2, style=dotted];
m14_318 -> m14_316  [key=0, style=bold, color=blue];
m14_362 -> m14_363  [key=0, style=solid];
m14_363 -> m14_364  [key=0, style=solid];
m14_363 -> m14_365  [key=2, style=dotted];
m14_363 -> m14_366  [key=2, style=dotted];
m14_364 -> m14_362  [key=0, style=bold, color=blue];
m14_373 -> m14_374  [key=0, style=solid];
m14_374 -> m14_375  [key=0, style=solid];
m14_374 -> m14_376  [key=2, style=dotted];
m14_374 -> m14_377  [key=2, style=dotted];
m14_375 -> m14_373  [key=0, style=bold, color=blue];
m14_261 -> m14_262  [key=0, style=solid];
m14_262 -> m14_263  [key=0, style=solid];
m14_262 -> m14_264  [key=2, style=dotted];
m14_262 -> m14_265  [key=2, style=dotted];
m14_263 -> m14_261  [key=0, style=bold, color=blue];
m14_269 -> m14_270  [key=0, style=solid];
m14_270 -> m14_271  [key=0, style=solid];
m14_270 -> m14_272  [key=2, style=dotted];
m14_270 -> m14_273  [key=2, style=dotted];
m14_271 -> m14_269  [key=0, style=bold, color=blue];
m14_517 -> m14_519  [key=0, style=solid];
m14_519 -> m14_520  [key=0, style=solid];
m14_519 -> m14_99  [key=2, style=dotted];
m14_519 -> m14_236  [key=2, style=dotted];
m14_519 -> m14_120  [key=2, style=dotted];
m14_520 -> m14_517  [key=0, style=bold, color=blue];
m14_216 -> m14_179  [key=0, style=bold, color=blue];
m14_158 -> m14_147  [key=0, style=bold, color=blue];
m14_346 -> m14_347  [key=0, style=solid];
m14_347 -> m14_348  [key=0, style=solid];
m14_347 -> m14_236  [key=2, style=dotted];
m14_347 -> m14_341  [key=2, style=dotted];
m14_347 -> m14_96  [key=2, style=dotted];
m14_347 -> m14_349  [key=2, style=dotted];
m14_348 -> m14_346  [key=0, style=bold, color=blue];
m14_8 -> m14_9  [key=0, style=solid];
m14_8 -> m14_11  [key=2, style=dotted];
m14_537 -> m14_538  [key=0, style=solid];
m14_538 -> m14_539  [key=0, style=solid];
m14_538 -> m14_535  [key=2, style=dotted];
m14_538 -> m14_540  [key=2, style=dotted];
m14_539 -> m14_537  [key=0, style=bold, color=blue];
m14_341 -> m14_343  [key=0, style=solid];
m14_343 -> m14_344  [key=0, style=solid];
m14_343 -> m14_345  [key=2, style=dotted];
m14_343 -> m14_70  [key=2, style=dotted];
m14_344 -> m14_341  [key=0, style=bold, color=blue];
m14_545 -> m14_546  [key=0, style=solid];
m14_546 -> m14_547  [key=0, style=solid];
m14_546 -> m14_548  [key=2, style=dotted];
m14_546 -> m14_549  [key=2, style=dotted];
m14_547 -> m14_545  [key=0, style=bold, color=blue];
m14_139 -> m14_140  [key=0, style=solid];
m14_139 -> m14_129  [key=2, style=dotted];
m14_139 -> m14_45  [key=2, style=dotted];
m14_104 -> m14_122  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type objectType"];
m14_104 -> m14_105  [key=0, style=solid];
m14_104 -> m14_106  [key=0, style=solid];
m14_106 -> m14_56  [key=2, style=dotted];
m14_106 -> m14_107  [key=0, style=solid];
m14_106 -> m14_109  [key=2, style=dotted];
m14_105 -> m14_106  [key=0, style=solid];
m14_105 -> m14_109  [key=2, style=dotted];
m14_105 -> m14_107  [key=1, style=dashed, color=darkseagreen4, label=contract];
m14_105 -> m14_108  [key=0, style=solid];
m14_105 -> m14_16  [key=2, style=dotted];
m14_107 -> m14_108  [key=0, style=solid];
m14_107 -> m14_63  [key=2, style=dotted];
m14_108 -> m14_104  [key=0, style=bold, color=blue];
m14_108 -> m14_103  [key=0, style=bold, color=blue];
m14_420 -> m14_421  [key=0, style=solid];
m14_421 -> m14_422  [key=0, style=solid];
m14_421 -> m14_120  [key=2, style=dotted];
m14_421 -> m14_423  [key=2, style=dotted];
m14_422 -> m14_420  [key=0, style=bold, color=blue];
m14_44 -> m14_38  [key=0, style=bold, color=blue];
m14_44 -> m14_47  [key=0, style=solid];
m14_9 -> m14_10  [key=0, style=solid];
m14_9 -> m14_5  [key=0, style=bold, color=blue];
m14_11 -> m14_9  [key=0, style=bold, color=blue];
m14_63 -> m14_65  [key=0, style=solid];
m14_121 -> m14_122  [key=0, style=solid];
m14_121 -> m14_124  [key=1, style=dashed, color=darkseagreen4, label=negative];
m14_237 -> m14_238  [key=0, style=solid];
m14_238 -> m14_239  [key=0, style=solid];
m14_238 -> m14_120  [key=2, style=dotted];
m14_238 -> m14_240  [key=2, style=dotted];
m14_239 -> m14_237  [key=0, style=bold, color=blue];
m14_350 -> m14_351  [key=0, style=solid];
m14_351 -> m14_352  [key=0, style=solid];
m14_351 -> m14_353  [key=2, style=dotted];
m14_351 -> m14_354  [key=2, style=dotted];
m14_352 -> m14_350  [key=0, style=bold, color=blue];
m14_319 -> m14_321  [key=0, style=solid];
m14_321 -> m14_322  [key=0, style=solid];
m14_321 -> m14_99  [key=2, style=dotted];
m14_321 -> m14_236  [key=2, style=dotted];
m14_321 -> m14_304  [key=2, style=dotted];
m14_322 -> m14_319  [key=0, style=bold, color=blue];
m14_3 -> m14_5  [key=0, style=solid];
m14_3 -> m14_0  [key=0, style=bold, color=blue];
m14_5 -> m14_6  [key=0, style=solid];
m14_5 -> m14_7  [key=2, style=dotted];
m14_5 -> m14_8  [key=2, style=dotted];
m14_6 -> m14_3  [key=0, style=bold, color=blue];
m14_6 -> m14_8  [key=0, style=solid];
m14_6 -> m14_7  [key=0, style=solid];
m14_98 -> m14_122  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type objectType"];
m14_98 -> m14_99  [key=0, style=solid];
m14_98 -> m14_96  [key=0, style=bold, color=blue];
m14_100 -> m14_56  [key=2, style=dotted];
m14_100 -> m14_101  [key=0, style=solid];
m14_99 -> m14_100  [key=0, style=solid];
m14_99 -> m14_103  [key=2, style=dotted];
m14_99 -> m14_101  [key=1, style=dashed, color=darkseagreen4, label=contract];
m14_101 -> m14_102  [key=0, style=solid];
m14_101 -> m14_70  [key=2, style=dotted];
m14_102 -> m14_98  [key=0, style=bold, color=blue];
m14_102 -> m14_99  [key=0, style=bold, color=blue];
m14_338 -> m14_339  [key=0, style=solid];
m14_339 -> m14_340  [key=0, style=solid];
m14_339 -> m14_341  [key=2, style=dotted];
m14_339 -> m14_342  [key=2, style=dotted];
m14_340 -> m14_338  [key=0, style=bold, color=blue];
m14_506 -> m14_507  [key=0, style=solid];
m14_506 -> m14_508  [key=1, style=dashed, color=darkseagreen4, label="System.Uri"];
m14_507 -> m14_508  [key=0, style=solid];
m14_507 -> m14_45  [key=2, style=dotted];
m14_508 -> m14_509  [key=0, style=solid];
m14_508 -> m14_129  [key=2, style=dotted];
m14_508 -> m14_45  [key=2, style=dotted];
m14_509 -> m14_506  [key=0, style=bold, color=blue];
m14_160 -> m14_161  [key=0, style=solid];
m14_160 -> m14_162  [key=2, style=dotted];
m14_160 -> m14_163  [key=2, style=dotted];
m14_160 -> m14_164  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m14_161 -> m14_159  [key=0, style=bold, color=blue];
m14_353 -> m14_355  [key=0, style=solid];
m14_355 -> m14_356  [key=0, style=solid];
m14_355 -> m14_357  [key=2, style=dotted];
m14_355 -> m14_70  [key=2, style=dotted];
m14_356 -> m14_353  [key=0, style=bold, color=blue];
m14_244 -> m14_246  [key=0, style=solid];
m14_246 -> m14_247  [key=0, style=solid];
m14_246 -> m14_99  [key=2, style=dotted];
m14_246 -> m14_236  [key=2, style=dotted];
m14_246 -> m14_120  [key=2, style=dotted];
m14_247 -> m14_244  [key=0, style=bold, color=blue];
m14_532 -> m14_533  [key=0, style=solid];
m14_533 -> m14_534  [key=0, style=solid];
m14_533 -> m14_535  [key=2, style=dotted];
m14_533 -> m14_536  [key=2, style=dotted];
m14_534 -> m14_532  [key=0, style=bold, color=blue];
m14_147 -> m14_149  [key=0, style=solid];
m14_147 -> m14_150  [key=1, style=dashed, color=darkseagreen4, label=bool];
m14_147 -> m14_151  [key=1, style=dashed, color=darkseagreen4, label=string];
m14_147 -> m14_154  [key=1, style=dashed, color=darkseagreen4, label=string];
m14_147 -> m14_157  [key=0, style=solid];
m14_147 -> m14_159  [key=2, style=dotted];
m14_147 -> m14_160  [key=2, style=dotted];
m14_147 -> m14_161  [key=2, style=dotted];
m14_149 -> m14_150  [key=0, style=solid];
m14_149 -> m14_142  [key=2, style=dotted];
m14_149 -> m14_45  [key=2, style=dotted];
m14_149 -> m14_157  [key=0, style=solid];
m14_149 -> m14_159  [key=2, style=dotted];
m14_149 -> m14_160  [key=2, style=dotted];
m14_149 -> m14_161  [key=2, style=dotted];
m14_150 -> m14_151  [key=0, style=solid];
m14_150 -> m14_152  [key=0, style=solid];
m14_150 -> m14_153  [key=0, style=solid, color=green];
m14_151 -> m14_157  [key=0, style=solid];
m14_151 -> m14_129  [key=2, style=dotted];
m14_151 -> m14_45  [key=2, style=dotted];
m14_151 -> m14_155  [key=0, style=solid];
m14_151 -> m14_152  [key=0, style=solid];
m14_154 -> m14_155  [key=0, style=solid];
m14_154 -> m14_77  [key=2, style=dotted];
m14_154 -> m14_45  [key=2, style=dotted];
m14_154 -> m14_157  [key=0, style=solid, color=green];
m14_154 -> m14_159  [key=2, style=dotted, color=green];
m14_154 -> m14_160  [key=2, style=dotted, color=green];
m14_154 -> m14_161  [key=2, style=dotted, color=green];
m14_152 -> m14_153  [key=0, style=solid];
m14_152 -> m14_154  [key=0, style=solid];
m14_152 -> m14_157  [key=0, style=solid];
m14_152 -> m14_159  [key=2, style=dotted];
m14_152 -> m14_160  [key=2, style=dotted];
m14_152 -> m14_161  [key=2, style=dotted];
m14_153 -> m14_154  [key=0, style=solid, color=green];
m14_153 -> m14_143  [key=2, style=dotted];
m14_153 -> m14_45  [key=2, style=dotted];
m14_153 -> m14_155  [key=0, style=solid, color=green];
m14_155 -> m14_156  [key=0, style=solid];
m14_155 -> m14_157  [key=0, style=solid];
m14_156 -> m14_157  [key=0, style=solid];
m14_156 -> m14_143  [key=2, style=dotted];
m14_156 -> m14_45  [key=2, style=dotted];
m14_157 -> m14_158  [key=0, style=solid];
m14_157 -> m14_143  [key=2, style=dotted];
m14_157 -> m14_45  [key=2, style=dotted];
m14_157 -> m14_97  [key=0, style=bold, color=blue];
m14_34 -> m14_32  [key=0, style=bold, color=blue];
m14_138 -> m14_139  [key=0, style=solid];
m14_138 -> m14_142  [key=2, style=dotted];
m14_138 -> m14_45  [key=2, style=dotted];
m14_192 -> m14_193  [key=0, style=solid];
m14_62 -> m14_64  [key=0, style=solid];
m14_62 -> m14_63  [key=0, style=solid];
m14_58 -> m14_167  [key=0, style=solid];
m14_58 -> m14_47  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonObjectContract contract"];
m14_58 -> m14_172  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract"];
m14_58 -> m14_170  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract"];
m14_58 -> m14_59  [key=0, style=solid];
m14_58 -> m14_60  [key=0, style=solid];
m14_172 -> m14_173  [key=0, style=solid];
m14_172 -> m14_179  [key=2, style=dotted];
m14_172 -> m14_174  [key=1, style=dashed, color=darkseagreen4, label=property];
m14_172 -> m14_143  [key=2, style=dotted];
m14_172 -> m14_45  [key=2, style=dotted];
m14_171 -> m14_172  [key=0, style=solid];
m14_171 -> m14_175  [key=0, style=solid];
m14_171 -> m14_45  [key=2, style=dotted];
m14_173 -> m14_171  [key=0, style=solid];
m14_173 -> m14_174  [key=0, style=solid];
m14_173 -> m14_170  [key=0, style=bold, color=blue];
m14_170 -> m14_171  [key=0, style=solid];
m14_170 -> m14_174  [key=1, style=dashed, color=darkseagreen4, label=properties];
m14_170 -> m14_178  [key=2, style=dotted];
m14_170 -> m14_175  [key=1, style=dashed, color=darkseagreen4, label=properties];
m14_169 -> m14_176  [key=0, style=solid];
m14_169 -> m14_177  [key=2, style=dotted];
m14_276 -> m14_277  [key=0, style=solid];
m14_277 -> m14_278  [key=0, style=solid];
m14_277 -> m14_279  [key=2, style=dotted];
m14_277 -> m14_280  [key=2, style=dotted];
m14_278 -> m14_276  [key=0, style=bold, color=blue];
m14_198 -> m14_199  [key=0, style=solid];
m14_198 -> m14_221  [key=2, style=dotted];
m14_199 -> m14_200  [key=0, style=solid];
m14_199 -> m14_201  [key=2, style=dotted];
m14_199 -> m14_202  [key=2, style=dotted];
m14_200 -> m14_198  [key=0, style=bold, color=blue];
m14_200 -> m14_204  [key=0, style=solid];
m14_548 -> m14_550  [key=0, style=solid];
m14_548 -> m14_551  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m14_548 -> m14_553  [key=1, style=dashed, color=darkseagreen4, label=string];
m14_548 -> m14_554  [key=1, style=dashed, color=darkseagreen4, label=string];
m14_550 -> m14_551  [key=0, style=solid];
m14_550 -> m14_556  [key=2, style=dotted];
m14_551 -> m14_552  [key=0, style=solid];
m14_551 -> m14_557  [key=2, style=dotted];
m14_551 -> m14_554  [key=1, style=dashed, color=darkseagreen4, label=task];
m14_553 -> m14_555  [key=0, style=solid];
m14_553 -> m14_89  [key=2, style=dotted];
m14_554 -> m14_555  [key=0, style=solid];
m14_554 -> m14_558  [key=2, style=dotted];
m14_552 -> m14_553  [key=0, style=solid];
m14_552 -> m14_554  [key=0, style=solid];
m14_555 -> m14_548  [key=0, style=bold, color=blue];
m14_135 -> m14_133  [key=0, style=bold, color=blue];
m14_334 -> m14_336  [key=0, style=solid];
m14_336 -> m14_337  [key=0, style=solid];
m14_336 -> m14_99  [key=2, style=dotted];
m14_336 -> m14_236  [key=2, style=dotted];
m14_336 -> m14_326  [key=2, style=dotted];
m14_337 -> m14_334  [key=0, style=bold, color=blue];
m14_395 -> m14_396  [key=0, style=solid];
m14_396 -> m14_397  [key=0, style=solid];
m14_396 -> m14_398  [key=2, style=dotted];
m14_396 -> m14_399  [key=2, style=dotted];
m14_397 -> m14_395  [key=0, style=bold, color=blue];
m14_56 -> m14_57  [key=0, style=solid];
m14_56 -> m14_58  [key=1, style=dashed, color=darkseagreen4, label=currentIndentCount];
m14_56 -> m14_59  [key=1, style=dashed, color=darkseagreen4, label=currentIndentCount];
m14_56 -> m14_60  [key=1, style=dashed, color=darkseagreen4, label=currentIndentCount];
m14_56 -> m14_72  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Serialization.JsonContract"];
m14_56 -> m14_73  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Serialization.JsonContract"];
m14_56 -> m14_74  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Serialization.JsonContract"];
m14_56 -> m14_67  [key=0, style=solid];
m14_56 -> m14_69  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m14_56 -> m14_70  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m14_56 -> m14_75  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m14_56 -> m14_76  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m14_56 -> m14_80  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m14_56 -> m14_81  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m14_56 -> m14_82  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m14_56 -> m14_83  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m14_56 -> m14_84  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m14_56 -> m14_85  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m14_56 -> m14_86  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m14_56 -> m14_87  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m14_56 -> m14_88  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m14_56 -> m14_89  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m14_56 -> m14_47  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract"];
m14_56 -> m14_99  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract"];
m14_56 -> m14_105  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract"];
m14_56 -> m14_111  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract"];
m14_56 -> m14_117  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract"];
m14_59 -> m14_61  [key=0, style=solid];
m14_59 -> m14_63  [key=2, style=dotted];
m14_60 -> m14_61  [key=0, style=solid];
m14_60 -> m14_64  [key=2, style=dotted];
m14_60 -> m14_46  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type objectType"];
m14_61 -> m14_54  [key=0, style=bold, color=blue];
m14_61 -> m14_62  [key=0, style=solid];
m14_61 -> m14_66  [key=2, style=dotted];
m14_61 -> m14_63  [key=1, style=dashed, color=darkseagreen4, label=constructors];
m14_478 -> m14_479  [key=0, style=solid];
m14_479 -> m14_480  [key=0, style=solid];
m14_479 -> m14_481  [key=2, style=dotted];
m14_479 -> m14_482  [key=2, style=dotted];
m14_480 -> m14_478  [key=0, style=bold, color=blue];
m14_91 -> m14_89  [key=0, style=bold, color=blue];
m14_323 -> m14_324  [key=0, style=solid];
m14_324 -> m14_325  [key=0, style=solid];
m14_324 -> m14_326  [key=2, style=dotted];
m14_324 -> m14_327  [key=2, style=dotted];
m14_325 -> m14_323  [key=0, style=bold, color=blue];
m14_467 -> m14_468  [key=0, style=solid];
m14_468 -> m14_469  [key=0, style=solid];
m14_468 -> m14_470  [key=2, style=dotted];
m14_468 -> m14_471  [key=2, style=dotted];
m14_469 -> m14_467  [key=0, style=bold, color=blue];
m14_96 -> m14_97  [key=0, style=solid];
m14_279 -> m14_281  [key=0, style=solid];
m14_279 -> m14_282  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m14_279 -> m14_285  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m14_279 -> m14_287  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m14_281 -> m14_282  [key=0, style=solid];
m14_281 -> m14_76  [key=2, style=dotted];
m14_281 -> m14_45  [key=2, style=dotted];
m14_282 -> m14_283  [key=0, style=solid];
m14_282 -> m14_290  [key=2, style=dotted];
m14_282 -> m14_282  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m14_282 -> m14_284  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m14_282 -> m14_287  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m14_285 -> m14_289  [key=0, style=solid];
m14_285 -> m14_63  [key=2, style=dotted];
m14_285 -> m14_45  [key=2, style=dotted];
m14_287 -> m14_288  [key=0, style=solid];
m14_287 -> m14_293  [key=2, style=dotted];
m14_287 -> m14_77  [key=2, style=dotted];
m14_287 -> m14_45  [key=2, style=dotted];
m14_283 -> m14_284  [key=0, style=solid];
m14_283 -> m14_286  [key=0, style=solid];
m14_283 -> m14_291  [key=2, style=dotted];
m14_284 -> m14_285  [key=0, style=solid];
m14_284 -> m14_292  [key=2, style=dotted];
m14_286 -> m14_287  [key=0, style=solid];
m14_286 -> m14_143  [key=2, style=dotted];
m14_286 -> m14_45  [key=2, style=dotted];
m14_288 -> m14_289  [key=0, style=solid];
m14_288 -> m14_143  [key=2, style=dotted];
m14_288 -> m14_45  [key=2, style=dotted];
m14_289 -> m14_279  [key=0, style=bold, color=blue];
m14_442 -> m14_443  [key=0, style=solid];
m14_443 -> m14_444  [key=0, style=solid];
m14_443 -> m14_445  [key=2, style=dotted];
m14_443 -> m14_446  [key=2, style=dotted];
m14_444 -> m14_442  [key=0, style=bold, color=blue];
m14_514 -> m14_515  [key=0, style=solid];
m14_515 -> m14_516  [key=0, style=solid];
m14_515 -> m14_517  [key=2, style=dotted];
m14_515 -> m14_518  [key=2, style=dotted];
m14_516 -> m14_514  [key=0, style=bold, color=blue];
m14_558 -> m14_559  [key=0, style=solid];
m14_558 -> m14_560  [key=1, style=dashed, color=darkseagreen4, label=string];
m14_559 -> m14_560  [key=0, style=solid];
m14_559 -> m14_45  [key=2, style=dotted];
m14_560 -> m14_561  [key=0, style=solid];
m14_560 -> m14_89  [key=2, style=dotted];
m14_560 -> m14_45  [key=2, style=dotted];
m14_561 -> m14_558  [key=0, style=bold, color=blue];
m14_89 -> m14_90  [key=0, style=solid];
m14_89 -> m14_76  [key=0, style=solid];
m14_90 -> m14_91  [key=0, style=solid];
m14_90 -> m14_92  [key=2, style=dotted];
m14_90 -> m14_93  [key=2, style=dotted];
m14_90 -> m14_56  [key=0, style=bold, color=blue];
m14_163 -> m14_165  [key=0, style=solid];
m14_376 -> m14_378  [key=0, style=solid];
m14_378 -> m14_379  [key=0, style=solid];
m14_378 -> m14_99  [key=2, style=dotted];
m14_378 -> m14_236  [key=2, style=dotted];
m14_378 -> m14_365  [key=2, style=dotted];
m14_379 -> m14_376  [key=0, style=bold, color=blue];
m14_445 -> m14_447  [key=0, style=solid];
m14_445 -> m14_449  [key=1, style=dashed, color=darkseagreen4, label=string];
m14_445 -> m14_450  [key=1, style=dashed, color=darkseagreen4, label=string];
m14_447 -> m14_448  [key=0, style=solid];
m14_447 -> m14_76  [key=2, style=dotted];
m14_447 -> m14_450  [key=1, style=dashed, color=darkseagreen4, label=task];
m14_449 -> m14_451  [key=0, style=solid];
m14_449 -> m14_77  [key=2, style=dotted];
m14_449 -> m14_129  [key=2, style=dotted];
m14_450 -> m14_451  [key=0, style=solid];
m14_450 -> m14_452  [key=2, style=dotted];
m14_448 -> m14_449  [key=0, style=solid];
m14_448 -> m14_450  [key=0, style=solid];
m14_451 -> m14_445  [key=0, style=bold, color=blue];
m14_407 -> m14_408  [key=0, style=solid];
m14_407 -> m14_409  [key=1, style=dashed, color=darkseagreen4, label=object];
m14_407 -> m14_410  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m14_407 -> m14_411  [key=1, style=dashed, color=darkseagreen4, label=object];
m14_407 -> m14_412  [key=1, style=dashed, color=darkseagreen4, label=object];
m14_407 -> m14_413  [key=1, style=dashed, color=darkseagreen4, label=object];
m14_407 -> m14_414  [key=1, style=dashed, color=darkseagreen4, label=object];
m14_408 -> m14_409  [key=0, style=solid];
m14_408 -> m14_414  [key=0, style=solid];
m14_409 -> m14_410  [key=0, style=solid];
m14_409 -> m14_411  [key=0, style=solid];
m14_410 -> m14_415  [key=0, style=solid];
m14_410 -> m14_96  [key=2, style=dotted];
m14_411 -> m14_412  [key=0, style=solid];
m14_411 -> m14_413  [key=0, style=solid];
m14_412 -> m14_415  [key=0, style=solid];
m14_412 -> m14_402  [key=2, style=dotted];
m14_413 -> m14_415  [key=0, style=solid];
m14_413 -> m14_416  [key=2, style=dotted];
m14_413 -> m14_417  [key=2, style=dotted];
m14_413 -> m14_418  [key=2, style=dotted];
m14_414 -> m14_415  [key=0, style=solid];
m14_414 -> m14_419  [key=2, style=dotted];
m14_415 -> m14_407  [key=0, style=bold, color=blue];
m14_72 -> m14_73  [key=0, style=solid, color=green];
m14_72 -> m14_74  [key=0, style=solid];
m14_71 -> m14_72  [key=0, style=solid, color=green];
m14_71 -> m14_73  [key=0, style=solid, color=green];
m14_71 -> m14_76  [key=2, style=dotted];
m14_71 -> m14_74  [key=1, style=dashed, color=darkseagreen4, label=task];
m14_73 -> m14_74  [key=0, style=solid, color=green];
m14_73 -> m14_76  [key=0, style=solid, color=green];
m14_73 -> m14_92  [key=2, style=dotted, color=green];
m14_73 -> m14_75  [key=0, style=solid];
m14_73 -> m14_77  [key=2, style=dotted];
m14_74 -> m14_75  [key=0, style=solid, color=green];
m14_74 -> m14_93  [key=2, style=dotted, color=green];
m14_74 -> m14_78  [key=2, style=dotted];
m14_75 -> m14_76  [key=0, style=solid];
m14_75 -> m14_94  [key=2, style=dotted];
m14_75 -> m14_70  [key=0, style=bold, color=blue];
m14_70 -> m14_71  [key=0, style=solid, color=green];
m14_70 -> m14_29  [key=2, style=dotted];
m14_70 -> m14_73  [key=1, style=dashed, color=darkseagreen4, label=string];
m14_70 -> m14_74  [key=1, style=dashed, color=darkseagreen4, label=string];
m14_82 -> m14_97  [key=2, style=dotted];
m14_82 -> m14_82  [key=1, style=dashed, color=darkseagreen4, label=prevAttributeType];
m14_82 -> m14_83  [key=0, style=solid];
m14_82 -> m14_84  [key=0, style=solid];
m14_83 -> m14_84  [key=0, style=solid];
m14_83 -> m14_85  [key=2, style=dotted];
m14_83 -> m14_86  [key=2, style=dotted];
m14_84 -> m14_97  [key=2, style=dotted];
m14_84 -> m14_84  [key=1, style=dashed, color=darkseagreen4, label=prevAttributeType];
m14_84 -> m14_85  [key=0, style=solid];
m14_84 -> m14_86  [key=0, style=solid];
m14_84 -> m14_82  [key=0, style=bold, color=blue];
m14_358 -> m14_359  [key=0, style=solid];
m14_359 -> m14_360  [key=0, style=solid];
m14_359 -> m14_236  [key=2, style=dotted];
m14_359 -> m14_353  [key=2, style=dotted];
m14_359 -> m14_96  [key=2, style=dotted];
m14_359 -> m14_361  [key=2, style=dotted];
m14_360 -> m14_358  [key=0, style=bold, color=blue];
m14_209 -> m14_210  [key=0, style=solid];
m14_209 -> m14_45  [key=2, style=dotted];
m14_210 -> m14_211  [key=0, style=solid];
m14_210 -> m14_77  [key=2, style=dotted];
m14_210 -> m14_45  [key=2, style=dotted];
m14_211 -> m14_212  [key=0, style=solid];
m14_211 -> m14_208  [key=0, style=bold, color=blue];
m14_212 -> m14_213  [key=0, style=solid];
m14_213 -> m14_214  [key=0, style=solid];
m14_213 -> m14_215  [key=2, style=dotted];
m14_213 -> m14_216  [key=2, style=dotted];
m14_214 -> m14_215  [key=0, style=solid];
m14_214 -> m14_212  [key=0, style=bold, color=blue];
m14_195 -> m14_196  [key=0, style=solid];
m14_195 -> m14_197  [key=0, style=solid];
m14_195 -> m14_77  [key=2, style=dotted];
m14_195 -> m14_45  [key=2, style=dotted];
m14_196 -> m14_198  [key=0, style=solid];
m14_196 -> m14_197  [key=0, style=solid];
m14_196 -> m14_143  [key=2, style=dotted];
m14_196 -> m14_45  [key=2, style=dotted];
m14_191 -> m14_204  [key=1, style=dashed, color=darkseagreen4, label=hasIgnoreAttribute];
m14_191 -> m14_34  [key=2, style=dotted];
m14_191 -> m14_192  [key=0, style=solid];
m14_191 -> m14_193  [key=0, style=solid];
m14_191 -> m14_194  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m14_191 -> m14_195  [key=1, style=dashed, color=darkseagreen4, label=string];
m14_208 -> m14_34  [key=2, style=dotted];
m14_208 -> m14_209  [key=0, style=solid];
m14_208 -> m14_210  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m14_197 -> m14_198  [key=0, style=solid];
m14_197 -> m14_191  [key=0, style=bold, color=blue];
m14_194 -> m14_198  [key=0, style=solid];
m14_194 -> m14_195  [key=0, style=solid];
m14_194 -> m14_77  [key=2, style=dotted];
m14_194 -> m14_45  [key=2, style=dotted];
m14_193 -> m14_195  [key=0, style=solid];
m14_193 -> m14_194  [key=0, style=solid];
m14_193 -> m14_169  [key=2, style=dotted];
m14_193 -> m14_45  [key=2, style=dotted];
m14_97 -> m14_140  [key=0, style=solid, color=green];
m14_97 -> m14_144  [key=1, style=dashed, color=green, label="ref System.Type"];
m14_97 -> m14_145  [key=1, style=dashed, color=green, label="System.Reflection.MethodInfo"];
m14_97 -> m14_153  [key=1, style=dashed, color=green, label="System.Reflection.ParameterInfo[]"];
m14_97 -> m14_154  [key=1, style=dashed, color=green, label="System.Reflection.MethodInfo"];
m14_97 -> m14_76  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.MethodInfo method"];
m14_97 -> m14_97  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type prevAttributeType"];
m14_97 -> m14_142  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m14_97 -> m14_143  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m14_97 -> m14_146  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m14_97 -> m14_147  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m14_97 -> m14_148  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m14_97 -> m14_149  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m14_97 -> m14_150  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m14_97 -> m14_151  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.ParameterInfo[]"];
m14_97 -> m14_152  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m14_97 -> m14_155  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m14_97 -> m14_79  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.ParameterInfo[] parameters"];
m14_97 -> m14_78  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type prevAttributeType"];
m14_97 -> m14_42  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsValidCallback"];
m14_97 -> m14_43  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsValidCallback"];
m14_97 -> m14_98  [key=0, style=solid];
m14_97 -> m14_99  [key=2, style=dotted];
m14_97 -> m14_100  [key=2, style=dotted];
m14_140 -> m14_141  [key=0, style=solid, color=green];
m14_140 -> m14_142  [key=0, style=solid, color=green];
m14_140 -> m14_158  [key=2, style=dotted, color=green];
m14_140 -> m14_143  [key=2, style=dotted];
m14_140 -> m14_45  [key=2, style=dotted];
m14_141 -> m14_157  [key=0, style=solid, color=green];
m14_141 -> m14_136  [key=0, style=bold, color=blue];
m14_143 -> m14_157  [key=0, style=solid];
m14_143 -> m14_159  [key=2, style=dotted];
m14_143 -> m14_160  [key=2, style=dotted];
m14_143 -> m14_161  [key=2, style=dotted];
m14_431 -> m14_432  [key=0, style=solid];
m14_432 -> m14_433  [key=0, style=solid];
m14_432 -> m14_120  [key=2, style=dotted];
m14_432 -> m14_434  [key=2, style=dotted];
m14_433 -> m14_431  [key=0, style=bold, color=blue];
m14_424 -> m14_425  [key=0, style=solid];
m14_425 -> m14_426  [key=0, style=solid];
m14_425 -> m14_427  [key=2, style=dotted];
m14_425 -> m14_428  [key=2, style=dotted];
m14_426 -> m14_424  [key=0, style=bold, color=blue];
m14_232 -> m14_234  [key=0, style=solid];
m14_234 -> m14_235  [key=0, style=solid];
m14_234 -> m14_99  [key=2, style=dotted];
m14_234 -> m14_236  [key=2, style=dotted];
m14_234 -> m14_224  [key=2, style=dotted];
m14_235 -> m14_232  [key=0, style=bold, color=blue];
m14_248 -> m14_249  [key=0, style=solid];
m14_249 -> m14_250  [key=0, style=solid];
m14_249 -> m14_96  [key=2, style=dotted];
m14_249 -> m14_251  [key=2, style=dotted];
m14_249 -> m14_252  [key=2, style=dotted];
m14_250 -> m14_248  [key=0, style=bold, color=blue];
m14_304 -> m14_306  [key=0, style=solid];
m14_304 -> m14_308  [key=1, style=dashed, color=darkseagreen4, label="System.DateTimeOffset"];
m14_304 -> m14_309  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m14_304 -> m14_311  [key=1, style=dashed, color=darkseagreen4, label="System.DateTimeOffset"];
m14_306 -> m14_307  [key=0, style=solid];
m14_306 -> m14_76  [key=2, style=dotted];
m14_306 -> m14_45  [key=2, style=dotted];
m14_308 -> m14_309  [key=0, style=solid];
m14_308 -> m14_314  [key=2, style=dotted];
m14_309 -> m14_313  [key=0, style=solid];
m14_309 -> m14_63  [key=2, style=dotted];
m14_309 -> m14_45  [key=2, style=dotted];
m14_311 -> m14_312  [key=0, style=solid];
m14_311 -> m14_315  [key=2, style=dotted];
m14_311 -> m14_77  [key=2, style=dotted];
m14_311 -> m14_45  [key=2, style=dotted];
m14_311 -> m14_311  [key=1, style=dashed, color=darkseagreen4, label="System.DateTimeOffset"];
m14_307 -> m14_308  [key=0, style=solid];
m14_307 -> m14_310  [key=0, style=solid];
m14_307 -> m14_291  [key=2, style=dotted];
m14_310 -> m14_311  [key=0, style=solid];
m14_310 -> m14_143  [key=2, style=dotted];
m14_310 -> m14_45  [key=2, style=dotted];
m14_312 -> m14_313  [key=0, style=solid];
m14_312 -> m14_143  [key=2, style=dotted];
m14_312 -> m14_45  [key=2, style=dotted];
m14_313 -> m14_304  [key=0, style=bold, color=blue];
m14_456 -> m14_457  [key=0, style=solid];
m14_457 -> m14_458  [key=0, style=solid];
m14_457 -> m14_459  [key=2, style=dotted];
m14_457 -> m14_460  [key=2, style=dotted];
m14_458 -> m14_456  [key=0, style=bold, color=blue];
m14_470 -> m14_472  [key=0, style=solid];
m14_472 -> m14_473  [key=0, style=solid];
m14_472 -> m14_99  [key=2, style=dotted];
m14_472 -> m14_236  [key=2, style=dotted];
m14_472 -> m14_459  [key=2, style=dotted];
m14_473 -> m14_470  [key=0, style=bold, color=blue];
m14_435 -> m14_436  [key=0, style=solid];
m14_436 -> m14_437  [key=0, style=solid];
m14_436 -> m14_438  [key=2, style=dotted];
m14_436 -> m14_439  [key=2, style=dotted];
m14_437 -> m14_435  [key=0, style=bold, color=blue];
m14_326 -> m14_328  [key=0, style=solid];
m14_328 -> m14_329  [key=0, style=solid];
m14_328 -> m14_330  [key=2, style=dotted];
m14_328 -> m14_70  [key=2, style=dotted];
m14_329 -> m14_326  [key=0, style=bold, color=blue];
m14_427 -> m14_429  [key=0, style=solid];
m14_429 -> m14_430  [key=0, style=solid];
m14_429 -> m14_99  [key=2, style=dotted];
m14_429 -> m14_236  [key=2, style=dotted];
m14_429 -> m14_120  [key=2, style=dotted];
m14_430 -> m14_427  [key=0, style=bold, color=blue];
m14_391 -> m14_392  [key=0, style=solid];
m14_392 -> m14_393  [key=0, style=solid];
m14_392 -> m14_120  [key=2, style=dotted];
m14_392 -> m14_394  [key=2, style=dotted];
m14_393 -> m14_391  [key=0, style=bold, color=blue];
m14_499 -> m14_501  [key=0, style=solid];
m14_499 -> m14_503  [key=1, style=dashed, color=darkseagreen4, label="System.Uri"];
m14_499 -> m14_504  [key=1, style=dashed, color=darkseagreen4, label="System.Uri"];
m14_501 -> m14_502  [key=0, style=solid];
m14_501 -> m14_76  [key=2, style=dotted];
m14_501 -> m14_504  [key=1, style=dashed, color=darkseagreen4, label=task];
m14_503 -> m14_505  [key=0, style=solid];
m14_503 -> m14_129  [key=2, style=dotted];
m14_504 -> m14_505  [key=0, style=solid];
m14_504 -> m14_506  [key=2, style=dotted];
m14_502 -> m14_503  [key=0, style=solid];
m14_502 -> m14_504  [key=0, style=solid];
m14_505 -> m14_499  [key=0, style=bold, color=blue];
m14_222 -> m14_223  [key=0, style=solid];
m14_222 -> m14_224  [key=2, style=dotted];
m14_222 -> m14_225  [key=2, style=dotted];
m14_272 -> m14_274  [key=0, style=solid];
m14_274 -> m14_275  [key=0, style=solid];
m14_274 -> m14_99  [key=2, style=dotted];
m14_274 -> m14_236  [key=2, style=dotted];
m14_274 -> m14_264  [key=2, style=dotted];
m14_275 -> m14_272  [key=0, style=bold, color=blue];
m14_297 -> m14_299  [key=0, style=solid];
m14_299 -> m14_300  [key=0, style=solid];
m14_299 -> m14_99  [key=2, style=dotted];
m14_299 -> m14_236  [key=2, style=dotted];
m14_299 -> m14_279  [key=2, style=dotted];
m14_300 -> m14_297  [key=0, style=bold, color=blue];
m14_331 -> m14_332  [key=0, style=solid];
m14_332 -> m14_333  [key=0, style=solid];
m14_332 -> m14_334  [key=2, style=dotted];
m14_332 -> m14_335  [key=2, style=dotted];
m14_333 -> m14_331  [key=0, style=bold, color=blue];
m14_580 -> m14_1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_5  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_10  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_14  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_18  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_24  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_26  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_28  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_29  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_33  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_37  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_39  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_40  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_41  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_47  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_52  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_56  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_57  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_59  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_60  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_65  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_67  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_71  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_73  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_74  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_80  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_83  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_87  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_90  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_94  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_97  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_101  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_105  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_106  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_107  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_111  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_113  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_114  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_118  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_124  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_127  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_130  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_134  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_138  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_139  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_140  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_145  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_149  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_151  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_152  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_153  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_154  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_155  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_156  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_157  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_160  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_164  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_166  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_167  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_172  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_175  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_179  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_181  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_182  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_186  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_189  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_193  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_194  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_195  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_196  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_199  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_203  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_205  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_206  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_210  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_213  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_217  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_218  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_222  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_226  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_230  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_234  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_238  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_242  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_246  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_249  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_253  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_254  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_255  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_256  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_257  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_262  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_266  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_270  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_274  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_277  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_281  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_282  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_283  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_284  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_285  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_286  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_287  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_288  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_295  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_299  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_302  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_306  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_307  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_308  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_309  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_310  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_311  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_312  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_317  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_321  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_324  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_328  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_332  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_336  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_339  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_343  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_347  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_351  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_355  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_359  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_363  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_367  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_368  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_369  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_370  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_374  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_378  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_381  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_385  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_389  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_392  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_396  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_400  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_403  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_408  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_410  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_412  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_413  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_414  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_421  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_425  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_429  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_432  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_436  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_440  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_443  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_447  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_449  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_450  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_454  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_457  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_461  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_462  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_463  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_464  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_468  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_472  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_475  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_479  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_483  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_486  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_490  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_494  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_497  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_501  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_503  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_504  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_508  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_511  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_515  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_519  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_522  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_526  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_527  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_528  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_529  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_533  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_538  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_542  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_546  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_550  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_551  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_553  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_554  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_560  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_565  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_567  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_570  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_573  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m14_580 -> m14_574  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m15_0 -> m15_1  [key=0, style=solid];
m15_0 -> m15_2  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m15_1 -> m15_2  [key=0, style=solid];
m15_1 -> m15_4  [key=2, style=dotted];
m15_2 -> m15_3  [key=0, style=solid];
m15_3 -> m15_0  [key=0, style=bold, color=blue];
m15_5 -> m15_6  [key=0, style=solid];
m15_5 -> m15_8  [key=1, style=dashed, color=darkseagreen4, label=object];
m15_5 -> m15_10  [key=1, style=dashed, color=darkseagreen4, label=object];
m15_6 -> m15_7  [key=0, style=solid];
m15_6 -> m15_8  [key=0, style=solid];
m15_8 -> m15_9  [key=0, style=solid];
m15_8 -> m15_11  [key=0, style=solid];
m15_8 -> m15_13  [key=2, style=dotted];
m15_10 -> m15_11  [key=0, style=solid];
m15_10 -> m15_14  [key=2, style=dotted];
m15_10 -> m15_15  [key=2, style=dotted];
m15_10 -> m15_16  [key=2, style=dotted];
m15_7 -> m15_8  [key=0, style=solid];
m15_7 -> m15_12  [key=2, style=dotted];
m15_9 -> m15_10  [key=0, style=solid];
m15_11 -> m15_5  [key=0, style=bold, color=blue];
m15_17 -> m15_18  [key=0, style=solid];
m15_17 -> m15_20  [key=1, style=dashed, color=darkseagreen4, label=object];
m15_17 -> m15_22  [key=1, style=dashed, color=darkseagreen4, label=object];
m15_18 -> m15_19  [key=0, style=solid];
m15_18 -> m15_20  [key=0, style=solid];
m15_20 -> m15_23  [key=0, style=solid];
m15_20 -> m15_25  [key=2, style=dotted];
m15_22 -> m15_23  [key=0, style=solid];
m15_22 -> m15_14  [key=2, style=dotted];
m15_22 -> m15_15  [key=2, style=dotted];
m15_22 -> m15_16  [key=2, style=dotted];
m15_19 -> m15_20  [key=0, style=solid];
m15_19 -> m15_24  [key=2, style=dotted];
m15_21 -> m15_22  [key=0, style=solid];
m15_23 -> m15_17  [key=0, style=bold, color=blue];
m15_26 -> m15_2  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DynamicValueProvider"];
m15_26 -> m15_6  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DynamicValueProvider"];
m15_26 -> m15_7  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DynamicValueProvider"];
m15_26 -> m15_8  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DynamicValueProvider"];
m15_26 -> m15_10  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DynamicValueProvider"];
m15_26 -> m15_18  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DynamicValueProvider"];
m15_26 -> m15_19  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DynamicValueProvider"];
m15_26 -> m15_20  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DynamicValueProvider"];
m15_26 -> m15_22  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DynamicValueProvider"];
m16_39 -> m16_40  [key=0, style=solid];
m16_39 -> m16_41  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m16_39 -> m16_42  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m16_39 -> m16_43  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m16_39 -> m16_44  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m16_39 -> m16_45  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m16_39 -> m16_46  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m16_39 -> m16_48  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m16_39 -> m16_49  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m16_39 -> m16_50  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m16_39 -> m16_51  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m16_40 -> m16_41  [key=0, style=solid];
m16_40 -> m16_54  [key=2, style=dotted];
m16_40 -> m16_17  [key=2, style=dotted];
m16_40 -> m16_43  [key=1, style=dashed, color=darkseagreen4, label=entityKeyMember];
m16_40 -> m16_50  [key=1, style=dashed, color=darkseagreen4, label=entityKeyMember];
m16_40 -> m16_52  [key=1, style=dashed, color=darkseagreen4, label=entityKeyMember];
m16_41 -> m16_42  [key=0, style=solid];
m16_41 -> m16_26  [key=2, style=dotted];
m16_42 -> m16_43  [key=0, style=solid];
m16_42 -> m16_31  [key=2, style=dotted];
m16_43 -> m16_44  [key=0, style=solid];
m16_43 -> m16_32  [key=2, style=dotted];
m16_44 -> m16_45  [key=0, style=solid];
m16_44 -> m16_26  [key=2, style=dotted];
m16_45 -> m16_46  [key=0, style=solid];
m16_45 -> m16_31  [key=2, style=dotted];
m16_46 -> m16_47  [key=0, style=solid];
m16_46 -> m16_32  [key=2, style=dotted];
m16_48 -> m16_49  [key=0, style=solid];
m16_48 -> m16_26  [key=2, style=dotted];
m16_49 -> m16_50  [key=0, style=solid];
m16_49 -> m16_31  [key=2, style=dotted];
m16_50 -> m16_51  [key=0, style=solid];
m16_50 -> m16_56  [key=2, style=dotted];
m16_51 -> m16_52  [key=0, style=solid];
m16_51 -> m16_31  [key=2, style=dotted];
m16_52 -> m16_53  [key=0, style=solid];
m16_52 -> m16_57  [key=2, style=dotted];
m16_47 -> m16_48  [key=0, style=solid];
m16_47 -> m16_55  [key=2, style=dotted];
m16_47 -> m16_50  [key=1, style=dashed, color=darkseagreen4, label=t];
m16_53 -> m16_39  [key=0, style=bold, color=blue];
m16_0 -> m16_1  [key=0, style=solid];
m16_0 -> m16_3  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m16_0 -> m16_4  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m16_0 -> m16_5  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m16_0 -> m16_6  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m16_0 -> m16_7  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m16_0 -> m16_8  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m16_0 -> m16_12  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m16_0 -> m16_13  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m16_0 -> m16_14  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m16_0 -> m16_15  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m16_1 -> m16_2  [key=0, style=solid];
m16_1 -> m16_17  [key=2, style=dotted];
m16_1 -> m16_5  [key=1, style=dashed, color=darkseagreen4, label=entityKeyMember];
m16_1 -> m16_11  [key=1, style=dashed, color=darkseagreen4, label=entityKeyMember];
m16_1 -> m16_13  [key=1, style=dashed, color=darkseagreen4, label=entityKeyMember];
m16_3 -> m16_4  [key=0, style=solid];
m16_3 -> m16_19  [key=2, style=dotted];
m16_4 -> m16_5  [key=0, style=solid];
m16_4 -> m16_20  [key=2, style=dotted];
m16_5 -> m16_6  [key=0, style=solid];
m16_5 -> m16_21  [key=2, style=dotted];
m16_6 -> m16_7  [key=0, style=solid];
m16_6 -> m16_20  [key=2, style=dotted];
m16_7 -> m16_8  [key=0, style=solid];
m16_7 -> m16_21  [key=2, style=dotted];
m16_8 -> m16_9  [key=0, style=solid];
m16_8 -> m16_20  [key=2, style=dotted];
m16_12 -> m16_15  [key=0, style=solid];
m16_12 -> m16_21  [key=2, style=dotted];
m16_13 -> m16_15  [key=0, style=solid];
m16_13 -> m16_23  [key=2, style=dotted];
m16_14 -> m16_15  [key=0, style=solid];
m16_14 -> m16_24  [key=2, style=dotted];
m16_15 -> m16_16  [key=0, style=solid];
m16_15 -> m16_25  [key=2, style=dotted];
m16_2 -> m16_3  [key=0, style=solid];
m16_2 -> m16_18  [key=2, style=dotted];
m16_2 -> m16_7  [key=1, style=dashed, color=darkseagreen4, label=keyType];
m16_2 -> m16_9  [key=1, style=dashed, color=darkseagreen4, label=keyType];
m16_2 -> m16_11  [key=1, style=dashed, color=darkseagreen4, label=keyType];
m16_11 -> m16_12  [key=0, style=solid];
m16_11 -> m16_13  [key=0, style=solid];
m16_11 -> m16_22  [key=2, style=dotted];
m16_9 -> m16_10  [key=0, style=solid];
m16_9 -> m16_14  [key=0, style=solid];
m16_10 -> m16_11  [key=0, style=solid];
m16_16 -> m16_0  [key=0, style=bold, color=blue];
m16_58 -> m16_59  [key=0, style=solid];
m16_59 -> m16_60  [key=0, style=solid];
m16_59 -> m16_61  [key=2, style=dotted];
m16_60 -> m16_58  [key=0, style=bold, color=blue];
m16_31 -> m16_35  [key=0, style=solid];
m16_31 -> m16_26  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonReader reader"];
m16_31 -> m16_39  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonReader reader"];
m16_35 -> m16_36  [key=0, style=solid];
m16_35 -> m16_37  [key=0, style=solid];
m16_35 -> m16_38  [key=2, style=dotted];
m16_36 -> m16_37  [key=0, style=solid];
m16_36 -> m16_33  [key=2, style=dotted];
m16_37 -> m16_31  [key=0, style=bold, color=blue];
m16_33 -> m16_33  [key=3, color=darkorchid, style=bold, label="Field variable string EntityKeyMemberFullTypeName"];
m16_26 -> m16_27  [key=0, style=solid];
m16_26 -> m16_28  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m16_26 -> m16_29  [key=1, style=dashed, color=darkseagreen4, label=string];
m16_26 -> m16_39  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonReader reader"];
m16_26 -> m16_4  [key=3, color=darkorchid, style=bold, label="Parameter variable string propertyName"];
m16_26 -> m16_6  [key=3, color=darkorchid, style=bold, label="Parameter variable string propertyName"];
m16_26 -> m16_8  [key=3, color=darkorchid, style=bold, label="Parameter variable string propertyName"];
m16_27 -> m16_28  [key=0, style=solid];
m16_27 -> m16_31  [key=2, style=dotted];
m16_28 -> m16_29  [key=0, style=solid];
m16_28 -> m16_30  [key=0, style=solid];
m16_28 -> m16_32  [key=2, style=dotted];
m16_29 -> m16_30  [key=0, style=solid];
m16_29 -> m16_33  [key=2, style=dotted];
m16_29 -> m16_34  [key=2, style=dotted];
m16_30 -> m16_26  [key=0, style=bold, color=blue];
m17_0 -> m17_1  [key=0, style=solid, color=green];
m17_1 -> m17_2  [key=0, style=solid, color=green];
m17_1 -> m17_3  [key=2, style=dotted, color=green];
m17_2 -> m17_0  [key=0, style=bold, color=blue];
m17_4 -> m17_1  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Tests.TestObjects.Foo"];
m18_5 -> m18_6  [key=0, style=solid];
m18_6 -> m18_7  [key=0, style=solid];
m18_7 -> m18_5  [key=0, style=bold, color=blue];
m18_0 -> m18_1  [key=0, style=solid];
m18_1 -> m18_2  [key=0, style=solid];
m18_1 -> m18_3  [key=2, style=dotted];
m18_1 -> m18_4  [key=2, style=dotted];
m18_2 -> m18_0  [key=0, style=bold, color=blue];
m18_8 -> m18_9  [key=0, style=solid];
m18_9 -> m18_10  [key=0, style=solid];
m18_9 -> m18_11  [key=2, style=dotted];
m18_10 -> m18_8  [key=0, style=bold, color=blue];
m19_23 -> m19_24  [key=0, style=solid];
m19_23 -> m19_25  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m19_23 -> m19_26  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m19_23 -> m19_27  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m19_23 -> m19_28  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m19_23 -> m19_30  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m19_23 -> m19_31  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m19_23 -> m19_32  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m19_23 -> m19_29  [key=3, color=darkorchid, style=bold, label="method methodReturn object ReadJson"];
m19_24 -> m19_25  [key=0, style=solid];
m19_24 -> m19_43  [key=2, style=dotted];
m19_24 -> m19_33  [key=1, style=dashed, color=darkseagreen4, label=nullable];
m19_25 -> m19_26  [key=0, style=solid];
m19_25 -> m19_44  [key=2, style=dotted];
m19_25 -> m19_35  [key=1, style=dashed, color=darkseagreen4, label=t];
m19_26 -> m19_27  [key=0, style=solid];
m19_26 -> m19_30  [key=0, style=solid];
m19_27 -> m19_28  [key=0, style=solid];
m19_27 -> m19_29  [key=0, style=solid];
m19_27 -> m19_43  [key=2, style=dotted];
m19_28 -> m19_42  [key=0, style=solid];
m19_28 -> m19_19  [key=2, style=dotted];
m19_28 -> m19_21  [key=2, style=dotted];
m19_30 -> m19_31  [key=0, style=solid];
m19_30 -> m19_32  [key=0, style=solid];
m19_31 -> m19_42  [key=0, style=solid];
m19_31 -> m19_19  [key=2, style=dotted];
m19_31 -> m19_21  [key=2, style=dotted];
m19_32 -> m19_33  [key=0, style=solid];
m19_32 -> m19_45  [key=2, style=dotted];
m19_32 -> m19_37  [key=1, style=dashed, color=darkseagreen4, label=dateText];
m19_32 -> m19_38  [key=1, style=dashed, color=darkseagreen4, label=dateText];
m19_32 -> m19_40  [key=1, style=dashed, color=darkseagreen4, label=dateText];
m19_32 -> m19_41  [key=1, style=dashed, color=darkseagreen4, label=dateText];
m19_33 -> m19_34  [key=0, style=solid];
m19_33 -> m19_35  [key=0, style=solid];
m19_33 -> m19_46  [key=2, style=dotted];
m19_35 -> m19_36  [key=0, style=solid];
m19_35 -> m19_39  [key=0, style=solid];
m19_29 -> m19_42  [key=0, style=solid];
m19_37 -> m19_42  [key=0, style=solid];
m19_37 -> m19_47  [key=2, style=dotted];
m19_38 -> m19_42  [key=0, style=solid];
m19_38 -> m19_48  [key=2, style=dotted];
m19_40 -> m19_42  [key=0, style=solid];
m19_40 -> m19_49  [key=2, style=dotted];
m19_41 -> m19_42  [key=0, style=solid];
m19_41 -> m19_50  [key=2, style=dotted];
m19_34 -> m19_42  [key=0, style=solid];
m19_36 -> m19_37  [key=0, style=solid];
m19_36 -> m19_38  [key=0, style=solid];
m19_36 -> m19_46  [key=2, style=dotted];
m19_39 -> m19_40  [key=0, style=solid];
m19_39 -> m19_41  [key=0, style=solid];
m19_39 -> m19_46  [key=2, style=dotted];
m19_42 -> m19_23  [key=0, style=bold, color=blue];
m19_51 -> m19_52  [key=0, style=solid, color=red];
m19_51 -> m19_54  [key=3, color=red, style=bold, label="method methodReturn bool CanConvert"];
m19_51 -> m19_57  [key=3, color=red, style=bold, label="method methodReturn bool CanConvert"];
m19_52 -> m19_53  [key=0, style=solid, color=red];
m19_52 -> m19_43  [key=2, style=dotted, color=red];
m19_52 -> m19_44  [key=2, style=dotted, color=red];
m19_52 -> m19_55  [key=1, style=dashed, color=red, label=t];
m19_53 -> m19_54  [key=0, style=solid, color=red];
m19_53 -> m19_55  [key=0, style=solid, color=red];
m19_55 -> m19_56  [key=0, style=solid, color=red];
m19_55 -> m19_57  [key=0, style=solid, color=red];
m19_54 -> m19_58  [key=0, style=solid, color=red];
m19_56 -> m19_58  [key=0, style=solid, color=red];
m19_57 -> m19_58  [key=0, style=solid, color=red];
m19_58 -> m19_51  [key=0, style=bold, color=blue];
m19_0 -> m19_1  [key=0, style=solid];
m19_0 -> m19_2  [key=1, style=dashed, color=darkseagreen4, label=object];
m19_0 -> m19_3  [key=1, style=dashed, color=darkseagreen4, label=object];
m19_0 -> m19_7  [key=1, style=dashed, color=darkseagreen4, label=object];
m19_0 -> m19_8  [key=1, style=dashed, color=darkseagreen4, label=object];
m19_0 -> m19_12  [key=1, style=dashed, color=darkseagreen4, label=object];
m19_0 -> m19_13  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m19_1 -> m19_2  [key=0, style=solid];
m19_1 -> m19_13  [key=1, style=dashed, color=darkseagreen4, label=text];
m19_2 -> m19_3  [key=0, style=solid];
m19_2 -> m19_7  [key=0, style=solid];
m19_3 -> m19_4  [key=0, style=solid];
m19_3 -> m19_5  [key=1, style=dashed, color=darkseagreen4, label=dateTime];
m19_3 -> m19_6  [key=1, style=dashed, color=darkseagreen4, label=dateTime];
m19_7 -> m19_8  [key=0, style=solid];
m19_7 -> m19_12  [key=0, style=solid];
m19_8 -> m19_9  [key=0, style=solid];
m19_8 -> m19_10  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m19_8 -> m19_11  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m19_12 -> m19_14  [key=0, style=solid];
m19_12 -> m19_19  [key=2, style=dotted];
m19_12 -> m19_20  [key=2, style=dotted];
m19_12 -> m19_21  [key=2, style=dotted];
m19_13 -> m19_14  [key=0, style=solid];
m19_13 -> m19_22  [key=2, style=dotted];
m19_4 -> m19_5  [key=0, style=solid];
m19_4 -> m19_6  [key=0, style=solid];
m19_5 -> m19_6  [key=0, style=solid];
m19_5 -> m19_15  [key=2, style=dotted];
m19_5 -> m19_5  [key=1, style=dashed, color=darkseagreen4, label=dateTime];
m19_6 -> m19_13  [key=0, style=solid];
m19_6 -> m19_16  [key=2, style=dotted];
m19_9 -> m19_10  [key=0, style=solid];
m19_9 -> m19_11  [key=0, style=solid];
m19_10 -> m19_11  [key=0, style=solid];
m19_10 -> m19_17  [key=2, style=dotted];
m19_10 -> m19_10  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m19_11 -> m19_13  [key=0, style=solid];
m19_11 -> m19_18  [key=2, style=dotted];
m19_11 -> m19_11  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m19_14 -> m19_0  [key=0, style=bold, color=blue];
m19_59 -> m19_4  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IsoDateTimeConverter"];
m19_59 -> m19_6  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IsoDateTimeConverter"];
m19_59 -> m19_9  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IsoDateTimeConverter"];
m19_59 -> m19_11  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IsoDateTimeConverter"];
m19_59 -> m19_36  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IsoDateTimeConverter"];
m19_59 -> m19_37  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IsoDateTimeConverter"];
m19_59 -> m19_38  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IsoDateTimeConverter"];
m19_59 -> m19_39  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IsoDateTimeConverter"];
m19_59 -> m19_40  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IsoDateTimeConverter"];
m19_59 -> m19_41  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IsoDateTimeConverter"];
m20_13 -> m20_14  [key=0, style=solid];
m20_13 -> m20_10  [key=2, style=dotted];
m20_13 -> m20_16  [key=1, style=dashed, color=darkseagreen4, label=converter];
m20_13 -> m20_18  [key=1, style=dashed, color=darkseagreen4, label=converter];
m20_13 -> m20_20  [key=1, style=dashed, color=darkseagreen4, label=converter];
m20_40 -> m20_41  [key=0, style=solid];
m20_40 -> m20_40  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m20_46 -> m20_47  [key=0, style=solid];
m20_46 -> m20_11  [key=2, style=dotted];
m20_47 -> m20_48  [key=0, style=solid, color=green];
m20_47 -> m20_10  [key=2, style=dotted];
m20_47 -> m20_57  [key=2, style=dotted];
m20_47 -> m20_50  [key=1, style=dashed, color=darkseagreen4, label=converter];
m20_47 -> m20_52  [key=1, style=dashed, color=darkseagreen4, label=converter];
m20_47 -> m20_54  [key=1, style=dashed, color=darkseagreen4, label=converter];
m20_47 -> m20_49  [key=1, style=dashed, color=green, label=exception];
m20_47 -> m20_53  [key=2, style=dotted];
m20_47 -> m20_14  [key=2, style=dotted];
m20_48 -> m20_49  [key=0, style=solid, color=green];
m20_48 -> m20_23  [key=2, style=dotted];
m20_48 -> m20_50  [key=1, style=dashed, color=darkseagreen4, label=d];
m20_48 -> m20_52  [key=1, style=dashed, color=darkseagreen4, label=d];
m20_48 -> m20_11  [key=2, style=dotted, color=green];
m20_50 -> m20_51  [key=0, style=solid];
m20_50 -> m20_24  [key=2, style=dotted];
m20_50 -> m20_52  [key=1, style=dashed, color=darkseagreen4, label=result];
m20_50 -> m20_41  [key=0, style=bold, color=blue];
m20_52 -> m20_53  [key=0, style=solid];
m20_52 -> m20_25  [key=2, style=dotted];
m20_52 -> m20_11  [key=2, style=dotted];
m20_54 -> m20_55  [key=0, style=solid];
m20_54 -> m20_24  [key=2, style=dotted];
m20_49 -> m20_50  [key=0, style=solid, color=green];
m20_49 -> m20_11  [key=2, style=dotted, color=green];
m20_51 -> m20_52  [key=0, style=solid];
m20_51 -> m20_11  [key=2, style=dotted];
m20_53 -> m20_54  [key=0, style=solid];
m20_53 -> m20_23  [key=2, style=dotted];
m20_55 -> m20_56  [key=0, style=solid];
m20_55 -> m20_11  [key=2, style=dotted];
m20_56 -> m20_46  [key=0, style=bold, color=blue];
m20_153 -> m20_154  [key=0, style=solid];
m20_154 -> m20_155  [key=0, style=solid];
m20_154 -> m20_158  [key=2, style=dotted];
m20_154 -> m20_159  [key=2, style=dotted];
m20_154 -> m20_160  [key=2, style=dotted];
m20_155 -> m20_156  [key=0, style=solid];
m20_155 -> m20_10  [key=2, style=dotted];
m20_155 -> m20_24  [key=2, style=dotted];
m20_156 -> m20_157  [key=0, style=solid];
m20_156 -> m20_161  [key=2, style=dotted];
m20_157 -> m20_153  [key=0, style=bold, color=blue];
m20_23 -> m20_11  [key=2, style=dotted];
m20_23 -> m20_24  [key=0, style=solid];
m20_27 -> m20_28  [key=0, style=solid];
m20_28 -> m20_29  [key=0, style=solid];
m20_28 -> m20_10  [key=2, style=dotted];
m20_28 -> m20_31  [key=1, style=dashed, color=darkseagreen4, label=converter];
m20_28 -> m20_33  [key=1, style=dashed, color=darkseagreen4, label=converter];
m20_28 -> m20_35  [key=1, style=dashed, color=darkseagreen4, label=converter];
m20_29 -> m20_30  [key=0, style=solid];
m20_29 -> m20_23  [key=2, style=dotted];
m20_29 -> m20_31  [key=1, style=dashed, color=darkseagreen4, label=d];
m20_29 -> m20_33  [key=1, style=dashed, color=darkseagreen4, label=d];
m20_29 -> m20_38  [key=2, style=dotted];
m20_31 -> m20_32  [key=0, style=solid];
m20_31 -> m20_24  [key=2, style=dotted];
m20_31 -> m20_33  [key=1, style=dashed, color=darkseagreen4, label=exception];
m20_31 -> m20_39  [key=2, style=dotted];
m20_33 -> m20_34  [key=0, style=solid];
m20_33 -> m20_25  [key=2, style=dotted];
m20_33 -> m20_11  [key=2, style=dotted];
m20_35 -> m20_36  [key=0, style=solid];
m20_35 -> m20_24  [key=2, style=dotted];
m20_35 -> m20_11  [key=2, style=dotted];
m20_30 -> m20_31  [key=0, style=solid];
m20_30 -> m20_11  [key=2, style=dotted];
m20_32 -> m20_33  [key=0, style=solid];
m20_32 -> m20_11  [key=2, style=dotted];
m20_34 -> m20_35  [key=0, style=solid];
m20_34 -> m20_23  [key=2, style=dotted];
m20_34 -> m20_14  [key=2, style=dotted];
m20_34 -> m20_36  [key=1, style=dashed, color=darkseagreen4, label=exception];
m20_34 -> m20_40  [key=2, style=dotted];
m20_36 -> m20_37  [key=0, style=solid];
m20_36 -> m20_11  [key=2, style=dotted];
m20_37 -> m20_27  [key=0, style=bold, color=blue];
m20_37 -> m20_28  [key=0, style=bold, color=blue];
m20_139 -> m20_140  [key=0, style=solid];
m20_140 -> m20_141  [key=0, style=solid];
m20_140 -> m20_10  [key=2, style=dotted];
m20_140 -> m20_25  [key=2, style=dotted];
m20_141 -> m20_139  [key=0, style=bold, color=blue];
m20_15 -> m20_16  [key=0, style=solid];
m20_17 -> m20_11  [key=2, style=dotted];
m20_17 -> m20_18  [key=0, style=solid];
m20_19 -> m20_11  [key=2, style=dotted];
m20_19 -> m20_20  [key=0, style=solid];
m20_19 -> m20_23  [key=2, style=dotted];
m20_19 -> m20_21  [key=1, style=dashed, color=darkseagreen4, label=d];
m20_20 -> m20_11  [key=2, style=dotted];
m20_20 -> m20_21  [key=0, style=solid];
m20_20 -> m20_24  [key=2, style=dotted];
m20_22 -> m20_11  [key=2, style=dotted];
m20_22 -> m20_23  [key=0, style=solid];
m20_22 -> m20_12  [key=0, style=bold, color=blue];
m20_21 -> m20_14  [key=2, style=dotted];
m20_21 -> m20_22  [key=0, style=solid];
m20_21 -> m20_23  [key=1, style=dashed, color=darkseagreen4, label=exception];
m20_21 -> m20_27  [key=2, style=dotted];
m20_21 -> m20_26  [key=2, style=dotted];
m20_21 -> m20_11  [key=2, style=dotted];
m20_16 -> m20_17  [key=0, style=solid];
m20_16 -> m20_25  [key=2, style=dotted];
m20_16 -> m20_24  [key=2, style=dotted];
m20_16 -> m20_18  [key=1, style=dashed, color=darkseagreen4, label=result];
m20_18 -> m20_19  [key=0, style=solid];
m20_18 -> m20_20  [key=1, style=dashed, color=darkseagreen4, label=exception];
m20_18 -> m20_26  [key=2, style=dotted];
m20_18 -> m20_25  [key=2, style=dotted];
m20_18 -> m20_11  [key=2, style=dotted];
m20_24 -> m20_15  [key=0, style=bold, color=blue];
m20_41 -> m20_42  [key=0, style=solid];
m20_41 -> m20_25  [key=2, style=dotted];
m20_41 -> m20_43  [key=1, style=dashed, color=darkseagreen4, label=d];
m20_41 -> m20_44  [key=1, style=dashed, color=darkseagreen4, label=d];
m20_43 -> m20_11  [key=2, style=dotted];
m20_43 -> m20_44  [key=0, style=solid];
m20_45 -> m20_11  [key=2, style=dotted];
m20_45 -> m20_46  [key=0, style=solid];
m20_45 -> m20_38  [key=0, style=bold, color=blue];
m20_44 -> m20_46  [key=1, style=dashed, color=darkseagreen4, label=exception];
m20_44 -> m20_45  [key=0, style=solid];
m20_44 -> m20_52  [key=2, style=dotted];
m20_44 -> m20_11  [key=2, style=dotted];
m20_42 -> m20_43  [key=0, style=solid];
m20_42 -> m20_51  [key=2, style=dotted];
m20_42 -> m20_11  [key=2, style=dotted];
m20_92 -> m20_93  [key=0, style=solid];
m20_93 -> m20_94  [key=0, style=solid];
m20_93 -> m20_107  [key=2, style=dotted];
m20_93 -> m20_95  [key=1, style=dashed, color=darkseagreen4, label=c];
m20_93 -> m20_96  [key=1, style=dashed, color=darkseagreen4, label=c];
m20_93 -> m20_97  [key=1, style=dashed, color=darkseagreen4, label=c];
m20_93 -> m20_98  [key=1, style=dashed, color=darkseagreen4, label=c];
m20_93 -> m20_100  [key=1, style=dashed, color=darkseagreen4, label=c];
m20_93 -> m20_101  [key=1, style=dashed, color=darkseagreen4, label=c];
m20_93 -> m20_102  [key=1, style=dashed, color=darkseagreen4, label=c];
m20_93 -> m20_103  [key=1, style=dashed, color=darkseagreen4, label=c];
m20_93 -> m20_104  [key=1, style=dashed, color=darkseagreen4, label=c];
m20_94 -> m20_95  [key=0, style=solid];
m20_94 -> m20_23  [key=2, style=dotted];
m20_94 -> m20_91  [key=2, style=dotted];
m20_95 -> m20_96  [key=0, style=solid];
m20_95 -> m20_23  [key=2, style=dotted];
m20_95 -> m20_91  [key=2, style=dotted];
m20_96 -> m20_97  [key=0, style=solid];
m20_97 -> m20_98  [key=0, style=solid];
m20_98 -> m20_99  [key=0, style=solid];
m20_98 -> m20_10  [key=2, style=dotted];
m20_98 -> m20_24  [key=2, style=dotted];
m20_100 -> m20_101  [key=0, style=solid];
m20_101 -> m20_102  [key=0, style=solid];
m20_102 -> m20_103  [key=0, style=solid];
m20_103 -> m20_104  [key=0, style=solid];
m20_104 -> m20_105  [key=0, style=solid];
m20_104 -> m20_10  [key=2, style=dotted];
m20_104 -> m20_24  [key=2, style=dotted];
m20_99 -> m20_100  [key=0, style=solid];
m20_99 -> m20_11  [key=2, style=dotted];
m20_105 -> m20_106  [key=0, style=solid];
m20_105 -> m20_11  [key=2, style=dotted];
m20_106 -> m20_92  [key=0, style=bold, color=blue];
m20_75 -> m20_76  [key=0, style=solid];
m20_76 -> m20_77  [key=0, style=solid];
m20_76 -> m20_90  [key=2, style=dotted];
m20_76 -> m20_78  [key=1, style=dashed, color=darkseagreen4, label=c];
m20_76 -> m20_79  [key=1, style=dashed, color=darkseagreen4, label=c];
m20_76 -> m20_80  [key=1, style=dashed, color=darkseagreen4, label=c];
m20_76 -> m20_81  [key=1, style=dashed, color=darkseagreen4, label=c];
m20_76 -> m20_83  [key=1, style=dashed, color=darkseagreen4, label=c];
m20_76 -> m20_84  [key=1, style=dashed, color=darkseagreen4, label=c];
m20_76 -> m20_85  [key=1, style=dashed, color=darkseagreen4, label=c];
m20_76 -> m20_86  [key=1, style=dashed, color=darkseagreen4, label=c];
m20_76 -> m20_87  [key=1, style=dashed, color=darkseagreen4, label=c];
m20_77 -> m20_78  [key=0, style=solid];
m20_77 -> m20_23  [key=2, style=dotted];
m20_77 -> m20_91  [key=2, style=dotted];
m20_78 -> m20_79  [key=0, style=solid];
m20_78 -> m20_23  [key=2, style=dotted];
m20_78 -> m20_91  [key=2, style=dotted];
m20_79 -> m20_80  [key=0, style=solid];
m20_80 -> m20_81  [key=0, style=solid];
m20_81 -> m20_82  [key=0, style=solid];
m20_81 -> m20_10  [key=2, style=dotted];
m20_81 -> m20_24  [key=2, style=dotted];
m20_83 -> m20_84  [key=0, style=solid];
m20_83 -> m20_23  [key=2, style=dotted];
m20_83 -> m20_91  [key=2, style=dotted];
m20_84 -> m20_85  [key=0, style=solid];
m20_84 -> m20_23  [key=2, style=dotted];
m20_84 -> m20_91  [key=2, style=dotted];
m20_85 -> m20_86  [key=0, style=solid];
m20_86 -> m20_87  [key=0, style=solid];
m20_87 -> m20_88  [key=0, style=solid];
m20_87 -> m20_10  [key=2, style=dotted];
m20_87 -> m20_24  [key=2, style=dotted];
m20_82 -> m20_83  [key=0, style=solid];
m20_82 -> m20_11  [key=2, style=dotted];
m20_88 -> m20_89  [key=0, style=solid];
m20_88 -> m20_11  [key=2, style=dotted];
m20_89 -> m20_75  [key=0, style=bold, color=blue];
m20_39 -> m20_40  [key=0, style=solid, color=red];
m20_39 -> m20_10  [key=2, style=dotted, color=red];
m20_39 -> m20_41  [key=1, style=dashed, color=red, label=converter];
m20_14 -> m20_15  [key=0, style=solid];
m20_14 -> m20_23  [key=2, style=dotted];
m20_14 -> m20_16  [key=1, style=dashed, color=darkseagreen4, label=d];
m20_14 -> m20_18  [key=1, style=dashed, color=darkseagreen4, label=d];
m20_38 -> m20_39  [key=0, style=solid, color=red];
m20_12 -> m20_13  [key=0, style=solid];
m20_142 -> m20_143  [key=0, style=solid];
m20_143 -> m20_144  [key=0, style=solid];
m20_143 -> m20_90  [key=2, style=dotted];
m20_143 -> m20_145  [key=1, style=dashed, color=darkseagreen4, label=c];
m20_143 -> m20_146  [key=1, style=dashed, color=darkseagreen4, label=c];
m20_143 -> m20_147  [key=1, style=dashed, color=darkseagreen4, label=c];
m20_143 -> m20_148  [key=1, style=dashed, color=darkseagreen4, label=c];
m20_143 -> m20_149  [key=1, style=dashed, color=darkseagreen4, label=c];
m20_144 -> m20_145  [key=0, style=solid];
m20_144 -> m20_23  [key=2, style=dotted];
m20_145 -> m20_146  [key=0, style=solid];
m20_146 -> m20_147  [key=0, style=solid];
m20_147 -> m20_148  [key=0, style=solid];
m20_147 -> m20_10  [key=2, style=dotted];
m20_147 -> m20_24  [key=2, style=dotted];
m20_147 -> m20_150  [key=1, style=dashed, color=darkseagreen4, label=json];
m20_148 -> m20_149  [key=0, style=solid];
m20_148 -> m20_23  [key=2, style=dotted];
m20_149 -> m20_150  [key=0, style=solid];
m20_149 -> m20_10  [key=2, style=dotted];
m20_149 -> m20_24  [key=2, style=dotted];
m20_150 -> m20_151  [key=0, style=solid];
m20_150 -> m20_152  [key=2, style=dotted];
m20_151 -> m20_142  [key=0, style=bold, color=blue];
m20_0 -> m20_1  [key=0, style=solid];
m20_2 -> m20_11  [key=2, style=dotted];
m20_2 -> m20_3  [key=0, style=solid];
m20_4 -> m20_11  [key=2, style=dotted];
m20_4 -> m20_5  [key=0, style=solid];
m20_5 -> m20_11  [key=2, style=dotted];
m20_5 -> m20_6  [key=0, style=solid];
m20_5 -> m20_10  [key=2, style=dotted];
m20_5 -> m20_7  [key=1, style=dashed, color=darkseagreen4, label=converter];
m20_5 -> m20_8  [key=1, style=dashed, color=darkseagreen4, label=converter];
m20_7 -> m20_11  [key=2, style=dotted];
m20_7 -> m20_8  [key=0, style=solid];
m20_8 -> m20_11  [key=2, style=dotted];
m20_8 -> m20_9  [key=0, style=solid];
m20_6 -> m20_14  [key=2, style=dotted];
m20_6 -> m20_7  [key=0, style=solid];
m20_6 -> m20_8  [key=1, style=dashed, color=darkseagreen4, label=exception];
m20_6 -> m20_13  [key=2, style=dotted];
m20_6 -> m20_11  [key=2, style=dotted];
m20_1 -> m20_2  [key=0, style=solid];
m20_1 -> m20_10  [key=2, style=dotted];
m20_1 -> m20_3  [key=1, style=dashed, color=darkseagreen4, label=converter];
m20_1 -> m20_4  [key=1, style=dashed, color=darkseagreen4, label=converter];
m20_3 -> m20_4  [key=0, style=solid];
m20_3 -> m20_5  [key=1, style=dashed, color=darkseagreen4, label=exception];
m20_3 -> m20_12  [key=2, style=dotted];
m20_3 -> m20_11  [key=2, style=dotted];
m20_9 -> m20_0  [key=0, style=bold, color=blue];
m20_108 -> m20_109  [key=0, style=solid];
m20_109 -> m20_110  [key=0, style=solid];
m20_109 -> m20_10  [key=2, style=dotted];
m20_109 -> m20_25  [key=2, style=dotted];
m20_109 -> m20_111  [key=1, style=dashed, color=darkseagreen4, label=c];
m20_109 -> m20_112  [key=1, style=dashed, color=darkseagreen4, label=c];
m20_109 -> m20_113  [key=1, style=dashed, color=darkseagreen4, label=c];
m20_110 -> m20_111  [key=0, style=solid];
m20_110 -> m20_23  [key=2, style=dotted];
m20_110 -> m20_91  [key=2, style=dotted];
m20_110 -> m20_11  [key=2, style=dotted];
m20_111 -> m20_112  [key=0, style=solid];
m20_111 -> m20_74  [key=2, style=dotted];
m20_111 -> m20_11  [key=2, style=dotted];
m20_112 -> m20_113  [key=0, style=solid];
m20_112 -> m20_11  [key=2, style=dotted];
m20_113 -> m20_114  [key=0, style=solid];
m20_113 -> m20_11  [key=2, style=dotted];
m20_114 -> m20_115  [key=0, style=solid];
m20_114 -> m20_10  [key=2, style=dotted];
m20_114 -> m20_25  [key=2, style=dotted];
m20_114 -> m20_116  [key=1, style=dashed, color=darkseagreen4, label=c2];
m20_114 -> m20_117  [key=1, style=dashed, color=darkseagreen4, label=c2];
m20_114 -> m20_118  [key=1, style=dashed, color=darkseagreen4, label=c2];
m20_115 -> m20_116  [key=0, style=solid];
m20_115 -> m20_23  [key=2, style=dotted];
m20_115 -> m20_91  [key=2, style=dotted];
m20_115 -> m20_11  [key=2, style=dotted];
m20_116 -> m20_117  [key=0, style=solid];
m20_116 -> m20_74  [key=2, style=dotted];
m20_116 -> m20_11  [key=2, style=dotted];
m20_117 -> m20_118  [key=0, style=solid];
m20_117 -> m20_11  [key=2, style=dotted];
m20_118 -> m20_119  [key=0, style=solid];
m20_118 -> m20_11  [key=2, style=dotted];
m20_119 -> m20_108  [key=0, style=bold, color=blue];
m20_120 -> m20_121  [key=0, style=solid];
m20_121 -> m20_122  [key=0, style=solid];
m20_121 -> m20_10  [key=2, style=dotted];
m20_121 -> m20_25  [key=2, style=dotted];
m20_121 -> m20_123  [key=1, style=dashed, color=darkseagreen4, label=c];
m20_121 -> m20_124  [key=1, style=dashed, color=darkseagreen4, label=c];
m20_121 -> m20_125  [key=1, style=dashed, color=darkseagreen4, label=c];
m20_122 -> m20_123  [key=0, style=solid];
m20_122 -> m20_23  [key=2, style=dotted];
m20_122 -> m20_91  [key=2, style=dotted];
m20_122 -> m20_11  [key=2, style=dotted];
m20_123 -> m20_124  [key=0, style=solid];
m20_123 -> m20_74  [key=2, style=dotted];
m20_123 -> m20_11  [key=2, style=dotted];
m20_124 -> m20_125  [key=0, style=solid];
m20_124 -> m20_11  [key=2, style=dotted];
m20_125 -> m20_126  [key=0, style=solid];
m20_125 -> m20_11  [key=2, style=dotted];
m20_126 -> m20_127  [key=0, style=solid];
m20_126 -> m20_10  [key=2, style=dotted];
m20_126 -> m20_25  [key=2, style=dotted];
m20_126 -> m20_128  [key=1, style=dashed, color=darkseagreen4, label=c2];
m20_126 -> m20_129  [key=1, style=dashed, color=darkseagreen4, label=c2];
m20_126 -> m20_130  [key=1, style=dashed, color=darkseagreen4, label=c2];
m20_127 -> m20_128  [key=0, style=solid];
m20_127 -> m20_11  [key=2, style=dotted];
m20_128 -> m20_129  [key=0, style=solid];
m20_128 -> m20_11  [key=2, style=dotted];
m20_129 -> m20_130  [key=0, style=solid];
m20_129 -> m20_11  [key=2, style=dotted];
m20_130 -> m20_131  [key=0, style=solid];
m20_130 -> m20_11  [key=2, style=dotted];
m20_131 -> m20_120  [key=0, style=bold, color=blue];
m20_58 -> m20_59  [key=0, style=solid];
m20_59 -> m20_60  [key=0, style=solid];
m20_59 -> m20_10  [key=2, style=dotted];
m20_59 -> m20_57  [key=2, style=dotted];
m20_59 -> m20_61  [key=1, style=dashed, color=darkseagreen4, label=converter];
m20_60 -> m20_61  [key=0, style=solid];
m20_60 -> m20_40  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m20_61 -> m20_62  [key=0, style=solid];
m20_61 -> m20_25  [key=2, style=dotted];
m20_61 -> m20_63  [key=1, style=dashed, color=darkseagreen4, label=d];
m20_61 -> m20_64  [key=1, style=dashed, color=darkseagreen4, label=d];
m20_62 -> m20_63  [key=0, style=solid];
m20_62 -> m20_11  [key=2, style=dotted];
m20_63 -> m20_64  [key=0, style=solid];
m20_63 -> m20_11  [key=2, style=dotted];
m20_64 -> m20_65  [key=0, style=solid];
m20_64 -> m20_11  [key=2, style=dotted];
m20_65 -> m20_58  [key=0, style=bold, color=blue];
m20_132 -> m20_133  [key=0, style=solid];
m20_133 -> m20_134  [key=0, style=solid];
m20_133 -> m20_133  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m20_134 -> m20_135  [key=0, style=solid];
m20_134 -> m20_137  [key=2, style=dotted];
m20_134 -> m20_10  [key=2, style=dotted];
m20_134 -> m20_138  [key=2, style=dotted];
m20_135 -> m20_136  [key=0, style=solid];
m20_135 -> m20_11  [key=2, style=dotted];
m20_136 -> m20_132  [key=0, style=bold, color=blue];
m20_66 -> m20_67  [key=0, style=solid];
m20_67 -> m20_68  [key=0, style=solid];
m20_67 -> m20_10  [key=2, style=dotted];
m20_67 -> m20_70  [key=1, style=dashed, color=darkseagreen4, label=converter];
m20_67 -> m20_72  [key=1, style=dashed, color=darkseagreen4, label=converter];
m20_68 -> m20_69  [key=0, style=solid];
m20_68 -> m20_74  [key=2, style=dotted];
m20_68 -> m20_70  [key=1, style=dashed, color=darkseagreen4, label=d];
m20_68 -> m20_72  [key=1, style=dashed, color=darkseagreen4, label=d];
m20_70 -> m20_71  [key=0, style=solid];
m20_70 -> m20_24  [key=2, style=dotted];
m20_70 -> m20_72  [key=1, style=dashed, color=darkseagreen4, label=result];
m20_72 -> m20_73  [key=0, style=solid];
m20_72 -> m20_25  [key=2, style=dotted];
m20_72 -> m20_11  [key=2, style=dotted];
m20_69 -> m20_70  [key=0, style=solid];
m20_71 -> m20_72  [key=0, style=solid];
m20_71 -> m20_11  [key=2, style=dotted];
m20_73 -> m20_66  [key=0, style=bold, color=blue];
m21_50 -> m21_51  [key=0, style=solid, color=red];
m21_51 -> m21_52  [key=0, style=solid, color=red];
m21_51 -> m21_42  [key=2, style=dotted, color=red];
m21_51 -> m21_43  [key=2, style=dotted, color=red];
m21_51 -> m21_54  [key=1, style=dashed, color=red, label=t];
m21_52 -> m21_53  [key=0, style=solid, color=red];
m21_52 -> m21_54  [key=0, style=solid, color=red];
m21_54 -> m21_55  [key=0, style=solid, color=red];
m21_54 -> m21_56  [key=0, style=solid, color=red];
m21_53 -> m21_57  [key=0, style=solid, color=red];
m21_55 -> m21_57  [key=0, style=solid, color=red];
m21_56 -> m21_57  [key=0, style=solid, color=red];
m21_57 -> m21_50  [key=0, style=bold, color=blue];
m21_0 -> m21_1  [key=0, style=solid];
m21_0 -> m21_2  [key=1, style=dashed, color=darkseagreen4, label=object];
m21_0 -> m21_3  [key=1, style=dashed, color=darkseagreen4, label=object];
m21_0 -> m21_6  [key=1, style=dashed, color=darkseagreen4, label=object];
m21_0 -> m21_7  [key=1, style=dashed, color=darkseagreen4, label=object];
m21_0 -> m21_11  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m21_0 -> m21_12  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m21_0 -> m21_13  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m21_1 -> m21_2  [key=0, style=solid];
m21_1 -> m21_12  [key=1, style=dashed, color=darkseagreen4, label=ticks];
m21_2 -> m21_3  [key=0, style=solid];
m21_2 -> m21_6  [key=0, style=solid];
m21_3 -> m21_4  [key=0, style=solid];
m21_6 -> m21_7  [key=0, style=solid];
m21_6 -> m21_10  [key=0, style=solid];
m21_7 -> m21_8  [key=0, style=solid];
m21_11 -> m21_12  [key=0, style=solid];
m21_11 -> m21_19  [key=2, style=dotted];
m21_12 -> m21_13  [key=0, style=solid];
m21_12 -> m21_20  [key=2, style=dotted];
m21_13 -> m21_14  [key=0, style=solid];
m21_13 -> m21_21  [key=2, style=dotted];
m21_4 -> m21_5  [key=0, style=solid];
m21_4 -> m21_15  [key=2, style=dotted];
m21_5 -> m21_11  [key=0, style=solid];
m21_5 -> m21_16  [key=2, style=dotted];
m21_5 -> m21_12  [key=1, style=dashed, color=darkseagreen4, label=ticks];
m21_10 -> m21_14  [key=0, style=solid];
m21_10 -> m21_18  [key=2, style=dotted];
m21_8 -> m21_9  [key=0, style=solid];
m21_8 -> m21_17  [key=2, style=dotted];
m21_8 -> m21_8  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m21_9 -> m21_11  [key=0, style=solid];
m21_9 -> m21_16  [key=2, style=dotted];
m21_9 -> m21_9  [key=1, style=dashed, color=darkseagreen4, label=utcDateTimeOffset];
m21_9 -> m21_12  [key=1, style=dashed, color=darkseagreen4, label=ticks];
m21_14 -> m21_0  [key=0, style=bold, color=blue];
m21_22 -> m21_23  [key=0, style=solid, color=red];
m21_22 -> m21_24  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m21_22 -> m21_25  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m21_22 -> m21_26  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m21_22 -> m21_28  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m21_22 -> m21_29  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m21_22 -> m21_30  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m21_22 -> m21_31  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m21_22 -> m21_32  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m21_22 -> m21_33  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m21_22 -> m21_35  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m21_22 -> m21_36  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m21_22 -> m21_37  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m21_22 -> m21_27  [key=3, color=darkorchid, style=bold, label="method methodReturn object ReadJson"];
m21_22 -> m21_34  [key=3, color=darkorchid, style=bold, label="method methodReturn object ReadJson"];
m21_23 -> m21_24  [key=0, style=solid, color=red];
m21_23 -> m21_42  [key=2, style=dotted, color=red];
m21_23 -> m21_43  [key=2, style=dotted, color=red];
m21_23 -> m21_38  [key=1, style=dashed, color=red, label=t];
m21_24 -> m21_25  [key=0, style=solid];
m21_24 -> m21_28  [key=0, style=solid];
m21_25 -> m21_26  [key=0, style=solid];
m21_25 -> m21_27  [key=0, style=solid];
m21_25 -> m21_42  [key=2, style=dotted];
m21_26 -> m21_41  [key=0, style=solid];
m21_26 -> m21_18  [key=2, style=dotted];
m21_26 -> m21_44  [key=2, style=dotted];
m21_28 -> m21_29  [key=0, style=solid];
m21_28 -> m21_30  [key=0, style=solid];
m21_28 -> m21_45  [key=2, style=dotted];
m21_28 -> m21_46  [key=2, style=dotted];
m21_29 -> m21_41  [key=0, style=solid];
m21_29 -> m21_18  [key=2, style=dotted];
m21_29 -> m21_44  [key=2, style=dotted];
m21_30 -> m21_31  [key=0, style=solid];
m21_30 -> m21_47  [key=2, style=dotted];
m21_31 -> m21_32  [key=0, style=solid];
m21_31 -> m21_33  [key=0, style=solid];
m21_32 -> m21_41  [key=0, style=solid];
m21_32 -> m21_18  [key=2, style=dotted];
m21_32 -> m21_44  [key=2, style=dotted];
m21_33 -> m21_34  [key=0, style=solid];
m21_35 -> m21_36  [key=0, style=solid];
m21_35 -> m21_47  [key=2, style=dotted];
m21_36 -> m21_37  [key=0, style=solid];
m21_36 -> m21_38  [key=0, style=solid];
m21_37 -> m21_41  [key=0, style=solid];
m21_37 -> m21_18  [key=2, style=dotted];
m21_37 -> m21_44  [key=2, style=dotted];
m21_38 -> m21_39  [key=0, style=solid];
m21_38 -> m21_40  [key=0, style=solid];
m21_27 -> m21_41  [key=0, style=solid];
m21_34 -> m21_35  [key=0, style=solid];
m21_34 -> m21_48  [key=2, style=dotted];
m21_34 -> m21_39  [key=1, style=dashed, color=darkseagreen4, label=d];
m21_34 -> m21_40  [key=1, style=dashed, color=darkseagreen4, label=d];
m21_39 -> m21_41  [key=0, style=solid];
m21_39 -> m21_49  [key=2, style=dotted];
m21_40 -> m21_41  [key=0, style=solid];
m21_41 -> m21_22  [key=0, style=bold, color=blue];
m21_42 -> m21_53  [key=3, color=red, style=bold, label="method methodReturn bool CanConvert"];
m21_42 -> m21_56  [key=3, color=red, style=bold, label="method methodReturn bool CanConvert"];
m22_4 -> m22_5  [key=0, style=solid, color=green];
m22_4 -> m22_7  [key=1, style=dashed, color=green, label="Newtonsoft.Json.JsonReader"];
m22_5 -> m22_6  [key=0, style=solid, color=green];
m22_5 -> m22_10  [key=2, style=dotted, color=green];
m22_5 -> m22_8  [key=1, style=dashed, color=green, label=sw];
m22_6 -> m22_7  [key=0, style=solid, color=green];
m22_6 -> m22_11  [key=2, style=dotted, color=green];
m22_8 -> m22_9  [key=0, style=solid, color=green];
m22_8 -> m22_2  [key=2, style=dotted, color=green];
m22_8 -> m22_13  [key=2, style=dotted, color=green];
m22_7 -> m22_8  [key=0, style=solid, color=green];
m22_7 -> m22_12  [key=2, style=dotted, color=green];
m22_9 -> m22_4  [key=0, style=bold, color=blue];
m22_2 -> m22_3  [key=0, style=solid];
m22_3 -> m22_2  [key=0, style=bold, color=blue];
m22_14 -> m22_15  [key=0, style=solid, color=green];
m22_15 -> m22_16  [key=0, style=solid, color=green];
m22_15 -> m22_0  [key=2, style=dotted, color=green];
m22_16 -> m22_14  [key=0, style=bold, color=blue];
m22_0 -> m22_1  [key=0, style=solid];
m22_1 -> m22_0  [key=0, style=bold, color=blue];
m22_17 -> m22_15  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Linq.JRaw"];
m25_0 -> m25_1  [key=0, style=solid];
m25_1 -> m25_2  [key=0, style=solid];
m25_1 -> m25_6  [key=2, style=dotted];
m25_1 -> m25_7  [key=2, style=dotted];
m25_2 -> m25_3  [key=0, style=solid];
m25_2 -> m25_8  [key=2, style=dotted];
m25_3 -> m25_4  [key=0, style=solid];
m25_3 -> m25_9  [key=2, style=dotted];
m25_4 -> m25_5  [key=0, style=solid];
m25_4 -> m25_10  [key=2, style=dotted];
m25_5 -> m25_0  [key=0, style=bold, color=blue];
m26_4 -> m26_5  [key=0, style=solid, color=green];
m26_4 -> m26_7  [key=1, style=dashed, color=green, label="Newtonsoft.Json.JsonReader"];
m26_5 -> m26_6  [key=0, style=solid, color=green];
m26_5 -> m26_10  [key=2, style=dotted, color=green];
m26_5 -> m26_8  [key=1, style=dashed, color=green, label=sw];
m26_6 -> m26_7  [key=0, style=solid, color=green];
m26_6 -> m26_11  [key=2, style=dotted, color=green];
m26_8 -> m26_9  [key=0, style=solid, color=green];
m26_8 -> m26_2  [key=2, style=dotted, color=green];
m26_8 -> m26_13  [key=2, style=dotted, color=green];
m26_7 -> m26_8  [key=0, style=solid, color=green];
m26_7 -> m26_12  [key=2, style=dotted, color=green];
m26_9 -> m26_4  [key=0, style=bold, color=blue];
m26_14 -> m26_15  [key=0, style=solid, color=green];
m26_15 -> m26_16  [key=0, style=solid, color=green];
m26_15 -> m26_0  [key=2, style=dotted, color=green];
m26_16 -> m26_14  [key=0, style=bold, color=blue];
m26_0 -> m26_1  [key=0, style=solid];
m26_1 -> m26_0  [key=0, style=bold, color=blue];
m26_2 -> m26_3  [key=0, style=solid];
m26_3 -> m26_2  [key=0, style=bold, color=blue];
m26_17 -> m26_15  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Linq.JRaw"];
m28_14 -> m28_29  [key=0, style=solid];
m28_14 -> m28_31  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m28_14 -> m28_30  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsTypeGenericCollectionInterface"];
m28_29 -> m28_30  [key=0, style=solid];
m28_29 -> m28_31  [key=0, style=solid];
m28_31 -> m28_32  [key=0, style=solid];
m28_31 -> m28_34  [key=2, style=dotted];
m28_30 -> m28_33  [key=0, style=solid];
m28_32 -> m28_33  [key=0, style=solid];
m28_33 -> m28_14  [key=0, style=bold, color=blue];
m28_16 -> m28_17  [key=0, style=solid];
m28_16 -> m28_18  [key=1, style=dashed, color=darkseagreen4, label=object];
m28_16 -> m28_23  [key=1, style=dashed, color=darkseagreen4, label=object];
m28_17 -> m28_18  [key=0, style=solid];
m28_17 -> m28_19  [key=0, style=solid];
m28_18 -> m28_24  [key=0, style=solid];
m28_18 -> m28_25  [key=2, style=dotted];
m28_23 -> m28_24  [key=0, style=solid];
m28_23 -> m28_28  [key=2, style=dotted];
m28_19 -> m28_20  [key=0, style=solid];
m28_19 -> m28_23  [key=0, style=solid];
m28_20 -> m28_21  [key=0, style=solid];
m28_20 -> m28_15  [key=2, style=dotted];
m28_21 -> m28_22  [key=0, style=solid];
m28_21 -> m28_26  [key=2, style=dotted];
m28_22 -> m28_23  [key=0, style=solid];
m28_22 -> m28_27  [key=2, style=dotted];
m28_24 -> m28_16  [key=0, style=bold, color=blue];
m28_0 -> m28_1  [key=0, style=solid];
m28_1 -> m28_2  [key=0, style=solid];
m28_1 -> m28_3  [key=0, style=solid];
m28_1 -> m28_10  [key=2, style=dotted];
m28_2 -> m28_4  [key=0, style=solid];
m28_2 -> m28_11  [key=2, style=dotted];
m28_3 -> m28_4  [key=0, style=solid];
m28_3 -> m28_12  [key=2, style=dotted];
m28_4 -> m28_5  [key=0, style=solid];
m28_4 -> m28_6  [key=0, style=solid];
m28_5 -> m28_6  [key=0, style=solid];
m28_5 -> m28_13  [key=2, style=dotted];
m28_6 -> m28_7  [key=0, style=solid];
m28_6 -> m28_8  [key=0, style=solid];
m28_6 -> m28_14  [key=2, style=dotted];
m28_7 -> m28_9  [key=0, style=solid];
m28_7 -> m28_15  [key=2, style=dotted];
m28_8 -> m28_9  [key=0, style=solid];
m28_9 -> m28_0  [key=0, style=bold, color=blue];
m28_35 -> m28_1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m28_35 -> m28_2  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m28_35 -> m28_3  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m28_35 -> m28_4  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m28_35 -> m28_5  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m28_35 -> m28_6  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m28_35 -> m28_7  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m28_35 -> m28_8  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m28_35 -> m28_17  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m28_35 -> m28_19  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m28_35 -> m28_20  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m28_35 -> m28_21  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m28_35 -> m28_22  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m28_35 -> m28_23  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m29_3 -> m29_4  [key=0, style=solid];
m29_0 -> m29_1  [key=0, style=solid];
m29_1 -> m29_2  [key=0, style=solid];
m29_2 -> m29_0  [key=0, style=bold, color=blue];
m29_4 -> m29_5  [key=0, style=solid];
m29_5 -> m29_3  [key=0, style=bold, color=blue];
m29_6 -> m29_7  [key=0, style=solid];
m29_7 -> m29_8  [key=0, style=solid];
m29_8 -> m29_9  [key=0, style=solid];
m29_8 -> m29_10  [key=2, style=dotted];
m29_9 -> m29_6  [key=0, style=bold, color=blue];
m29_11 -> m29_1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract"];
m29_11 -> m29_4  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract"];
m29_11 -> m29_7  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract"];
m29_11 -> m29_8  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract"];
m30_17 -> m30_18  [key=0, style=solid];
m30_18 -> m30_19  [key=0, style=solid];
m30_18 -> m30_24  [key=2, style=dotted];
m30_18 -> m30_20  [key=1, style=dashed, color=darkseagreen4, label=binaryClass];
m30_18 -> m30_21  [key=1, style=dashed, color=darkseagreen4, label=binaryClass];
m30_19 -> m30_20  [key=0, style=solid];
m30_19 -> m30_8  [key=2, style=dotted];
m30_20 -> m30_21  [key=0, style=solid];
m30_21 -> m30_22  [key=0, style=solid];
m30_21 -> m30_6  [key=2, style=dotted];
m30_21 -> m30_25  [key=2, style=dotted];
m30_22 -> m30_23  [key=0, style=solid];
m30_22 -> m30_9  [key=2, style=dotted];
m30_23 -> m30_17  [key=0, style=bold, color=blue];
m30_44 -> m30_45  [key=0, style=solid];
m30_45 -> m30_46  [key=0, style=solid];
m30_46 -> m30_47  [key=0, style=solid];
m30_46 -> m30_6  [key=2, style=dotted];
m30_46 -> m30_7  [key=2, style=dotted];
m30_46 -> m30_48  [key=1, style=dashed, color=darkseagreen4, label=sqlBinaryClass];
m30_46 -> m30_49  [key=1, style=dashed, color=darkseagreen4, label=sqlBinaryClass];
m30_47 -> m30_48  [key=0, style=solid];
m30_47 -> m30_43  [key=2, style=dotted];
m30_47 -> m30_9  [key=2, style=dotted];
m30_48 -> m30_49  [key=0, style=solid];
m30_48 -> m30_43  [key=2, style=dotted];
m30_48 -> m30_9  [key=2, style=dotted];
m30_49 -> m30_50  [key=0, style=solid];
m30_49 -> m30_9  [key=2, style=dotted];
m30_50 -> m30_44  [key=0, style=bold, color=blue];
m30_34 -> m30_35  [key=0, style=solid];
m30_35 -> m30_36  [key=0, style=solid];
m30_35 -> m30_42  [key=2, style=dotted];
m30_35 -> m30_37  [key=1, style=dashed, color=darkseagreen4, label=sqlBinaryClass];
m30_35 -> m30_38  [key=1, style=dashed, color=darkseagreen4, label=sqlBinaryClass];
m30_35 -> m30_39  [key=1, style=dashed, color=darkseagreen4, label=sqlBinaryClass];
m30_36 -> m30_37  [key=0, style=solid];
m30_36 -> m30_43  [key=2, style=dotted];
m30_37 -> m30_38  [key=0, style=solid];
m30_37 -> m30_43  [key=2, style=dotted];
m30_38 -> m30_39  [key=0, style=solid];
m30_39 -> m30_40  [key=0, style=solid];
m30_39 -> m30_6  [key=2, style=dotted];
m30_39 -> m30_25  [key=2, style=dotted];
m30_40 -> m30_41  [key=0, style=solid];
m30_40 -> m30_9  [key=2, style=dotted];
m30_41 -> m30_34  [key=0, style=bold, color=blue];
m30_10 -> m30_11  [key=0, style=solid];
m30_11 -> m30_12  [key=0, style=solid];
m30_12 -> m30_13  [key=0, style=solid];
m30_12 -> m30_6  [key=2, style=dotted];
m30_12 -> m30_7  [key=2, style=dotted];
m30_12 -> m30_14  [key=1, style=dashed, color=darkseagreen4, label=binaryClass];
m30_13 -> m30_14  [key=0, style=solid];
m30_13 -> m30_16  [key=2, style=dotted];
m30_13 -> m30_9  [key=2, style=dotted];
m30_14 -> m30_15  [key=0, style=solid];
m30_14 -> m30_9  [key=2, style=dotted];
m30_15 -> m30_10  [key=0, style=bold, color=blue];
m30_0 -> m30_1  [key=0, style=solid];
m30_1 -> m30_2  [key=0, style=solid];
m30_2 -> m30_3  [key=0, style=solid];
m30_2 -> m30_6  [key=2, style=dotted];
m30_2 -> m30_7  [key=2, style=dotted];
m30_2 -> m30_4  [key=1, style=dashed, color=darkseagreen4, label=binaryClass];
m30_3 -> m30_4  [key=0, style=solid];
m30_3 -> m30_8  [key=2, style=dotted];
m30_3 -> m30_9  [key=2, style=dotted];
m30_4 -> m30_5  [key=0, style=solid];
m30_4 -> m30_9  [key=2, style=dotted];
m30_5 -> m30_0  [key=0, style=bold, color=blue];
m30_26 -> m30_27  [key=0, style=solid];
m30_27 -> m30_28  [key=0, style=solid];
m30_27 -> m30_33  [key=2, style=dotted];
m30_27 -> m30_29  [key=1, style=dashed, color=darkseagreen4, label=byteArrayClass];
m30_27 -> m30_30  [key=1, style=dashed, color=darkseagreen4, label=byteArrayClass];
m30_28 -> m30_29  [key=0, style=solid];
m30_29 -> m30_30  [key=0, style=solid];
m30_30 -> m30_31  [key=0, style=solid];
m30_30 -> m30_6  [key=2, style=dotted];
m30_30 -> m30_25  [key=2, style=dotted];
m30_31 -> m30_32  [key=0, style=solid];
m30_31 -> m30_9  [key=2, style=dotted];
m30_32 -> m30_26  [key=0, style=bold, color=blue];
m30_51 -> m30_52  [key=0, style=solid];
m30_52 -> m30_53  [key=0, style=solid];
m30_53 -> m30_54  [key=0, style=solid];
m30_53 -> m30_6  [key=2, style=dotted];
m30_53 -> m30_7  [key=2, style=dotted];
m30_53 -> m30_55  [key=1, style=dashed, color=darkseagreen4, label=byteArrayClass];
m30_54 -> m30_55  [key=0, style=solid];
m30_54 -> m30_57  [key=2, style=dotted];
m30_55 -> m30_56  [key=0, style=solid];
m30_55 -> m30_9  [key=2, style=dotted];
m30_56 -> m30_51  [key=0, style=bold, color=blue];
m30_58 -> m30_59  [key=0, style=solid];
m30_59 -> m30_60  [key=0, style=solid];
m30_60 -> m30_61  [key=0, style=solid];
m30_60 -> m30_65  [key=2, style=dotted];
m30_60 -> m30_62  [key=1, style=dashed, color=darkseagreen4, label=c];
m30_60 -> m30_63  [key=1, style=dashed, color=darkseagreen4, label=c];
m30_61 -> m30_62  [key=0, style=solid];
m30_61 -> m30_66  [key=2, style=dotted];
m30_62 -> m30_63  [key=0, style=solid];
m30_62 -> m30_9  [key=2, style=dotted];
m30_63 -> m30_64  [key=0, style=solid];
m30_63 -> m30_57  [key=2, style=dotted];
m30_64 -> m30_58  [key=0, style=bold, color=blue];
m31_18 -> m31_19  [key=0, style=solid];
m31_18 -> m31_20  [key=1, style=dashed, color=darkseagreen4, label=object];
m31_18 -> m31_25  [key=1, style=dashed, color=darkseagreen4, label=object];
m31_19 -> m31_20  [key=0, style=solid];
m31_19 -> m31_21  [key=0, style=solid];
m31_20 -> m31_26  [key=0, style=solid];
m31_20 -> m31_27  [key=2, style=dotted];
m31_25 -> m31_26  [key=0, style=solid];
m31_25 -> m31_30  [key=2, style=dotted];
m31_21 -> m31_22  [key=0, style=solid];
m31_21 -> m31_25  [key=0, style=solid];
m31_22 -> m31_23  [key=0, style=solid];
m31_22 -> m31_17  [key=2, style=dotted];
m31_23 -> m31_24  [key=0, style=solid];
m31_23 -> m31_28  [key=2, style=dotted];
m31_24 -> m31_25  [key=0, style=solid];
m31_24 -> m31_29  [key=2, style=dotted];
m31_26 -> m31_18  [key=0, style=bold, color=blue];
m31_0 -> m31_1  [key=0, style=solid];
m31_0 -> m31_3  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m31_0 -> m31_11  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m31_1 -> m31_2  [key=0, style=solid];
m31_3 -> m31_4  [key=0, style=solid];
m31_3 -> m31_6  [key=0, style=solid];
m31_3 -> m31_13  [key=2, style=dotted];
m31_11 -> m31_12  [key=0, style=solid];
m31_2 -> m31_3  [key=0, style=solid];
m31_4 -> m31_5  [key=0, style=solid];
m31_4 -> m31_14  [key=2, style=dotted];
m31_4 -> m31_7  [key=1, style=dashed, color=darkseagreen4, label=keyType];
m31_4 -> m31_10  [key=1, style=dashed, color=darkseagreen4, label=keyType];
m31_6 -> m31_7  [key=0, style=solid];
m31_6 -> m31_15  [key=2, style=dotted];
m31_6 -> m31_8  [key=1, style=dashed, color=darkseagreen4, label=valueType];
m31_6 -> m31_10  [key=1, style=dashed, color=darkseagreen4, label=keyType];
m31_5 -> m31_7  [key=0, style=solid];
m31_5 -> m31_14  [key=2, style=dotted];
m31_5 -> m31_8  [key=1, style=dashed, color=darkseagreen4, label=valueType];
m31_5 -> m31_10  [key=1, style=dashed, color=darkseagreen4, label=valueType];
m31_7 -> m31_8  [key=0, style=solid];
m31_7 -> m31_6  [key=3, color=green, style=bold, label="Property variable Newtonsoft.Json.Serialization.IContractResolver Instance"];
m31_10 -> m31_12  [key=0, style=solid];
m31_10 -> m31_17  [key=2, style=dotted];
m31_8 -> m31_9  [key=0, style=solid];
m31_9 -> m31_10  [key=0, style=solid];
m31_9 -> m31_11  [key=0, style=solid];
m31_9 -> m31_16  [key=2, style=dotted];
m31_12 -> m31_0  [key=0, style=bold, color=blue];
m31_16 -> m31_31  [key=0, style=solid];
m31_16 -> m31_33  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m31_16 -> m31_32  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsTypeGenericDictionaryInterface"];
m31_31 -> m31_32  [key=0, style=solid];
m31_31 -> m31_33  [key=0, style=solid];
m31_33 -> m31_34  [key=0, style=solid];
m31_33 -> m31_36  [key=2, style=dotted];
m31_32 -> m31_35  [key=0, style=solid];
m31_34 -> m31_35  [key=0, style=solid];
m31_35 -> m31_16  [key=0, style=bold, color=blue];
m31_37 -> m31_3  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m31_37 -> m31_4  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m31_37 -> m31_5  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m31_37 -> m31_6  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m31_37 -> m31_7  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m31_37 -> m31_8  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m31_37 -> m31_9  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m31_37 -> m31_10  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m31_37 -> m31_11  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m31_37 -> m31_21  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m31_37 -> m31_22  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m31_37 -> m31_23  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m31_37 -> m31_24  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m31_37 -> m31_25  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m32_4 -> m32_5  [key=0, style=solid];
m32_5 -> m32_6  [key=0, style=solid];
m32_5 -> m32_7  [key=2, style=dotted];
m32_6 -> m32_4  [key=0, style=bold, color=blue];
m32_123 -> m32_124  [key=0, style=solid];
m32_123 -> m32_125  [key=1, style=dashed, color=darkseagreen4, label=int];
m32_124 -> m32_125  [key=0, style=solid];
m32_125 -> m32_126  [key=0, style=solid];
m32_126 -> m32_123  [key=0, style=bold, color=blue];
m32_107 -> m32_112  [key=1, style=dashed, color=darkseagreen4, label=string];
m32_107 -> m32_113  [key=1, style=dashed, color=darkseagreen4, label=int];
m32_107 -> m32_85  [key=3, color=darkorchid, style=bold, label="Parameter variable int byteCount"];
m32_107 -> m32_108  [key=0, style=solid];
m32_107 -> m32_111  [key=1, style=dashed, color=darkseagreen4, label=int];
m32_107 -> m32_114  [key=1, style=dashed, color=darkseagreen4, label=string];
m32_109 -> m32_110  [key=0, style=solid];
m32_109 -> m32_111  [key=0, style=solid];
m32_110 -> m32_111  [key=0, style=solid];
m32_112 -> m32_113  [key=0, style=solid];
m32_112 -> m32_117  [key=2, style=dotted];
m32_113 -> m32_116  [key=0, style=solid];
m32_113 -> m32_118  [key=2, style=dotted];
m32_115 -> m32_116  [key=0, style=solid];
m32_115 -> m32_99  [key=2, style=dotted];
m32_108 -> m32_109  [key=0, style=solid];
m32_108 -> m32_116  [key=0, style=solid];
m32_111 -> m32_112  [key=0, style=solid];
m32_111 -> m32_114  [key=0, style=solid];
m32_114 -> m32_115  [key=0, style=solid];
m32_114 -> m32_119  [key=2, style=dotted];
m32_116 -> m32_107  [key=0, style=bold, color=blue];
m32_12 -> m32_13  [key=0, style=solid];
m32_12 -> m32_14  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonToken"];
m32_13 -> m32_14  [key=0, style=solid];
m32_13 -> m32_16  [key=2, style=dotted];
m32_14 -> m32_15  [key=0, style=solid];
m32_14 -> m32_17  [key=2, style=dotted];
m32_15 -> m32_12  [key=0, style=bold, color=blue];
m32_120 -> m32_121  [key=0, style=solid];
m32_121 -> m32_122  [key=0, style=solid];
m32_122 -> m32_120  [key=0, style=bold, color=blue];
m32_0 -> m32_1  [key=0, style=solid, color=green];
m32_0 -> m32_2  [key=1, style=dashed, color=darkseagreen4, label="System.IO.BinaryWriter"];
m32_1 -> m32_2  [key=0, style=solid, color=green];
m32_2 -> m32_3  [key=0, style=solid];
m32_3 -> m32_0  [key=0, style=bold, color=blue];
m32_8 -> m32_9  [key=0, style=solid];
m32_9 -> m32_10  [key=0, style=solid];
m32_9 -> m32_11  [key=2, style=dotted];
m32_10 -> m32_8  [key=0, style=bold, color=blue];
m32_16 -> m32_12  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Bson.BsonToken t"];
m32_16 -> m32_127  [key=0, style=solid];
m32_16 -> m32_129  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonToken"];
m32_16 -> m32_140  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonToken"];
m32_16 -> m32_158  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonToken"];
m32_16 -> m32_171  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonToken"];
m32_16 -> m32_178  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonToken"];
m32_16 -> m32_184  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonToken"];
m32_16 -> m32_143  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Bson.BsonToken t"];
m32_16 -> m32_130  [key=3, color=darkorchid, style=bold, label="method methodReturn int CalculateSize"];
m32_16 -> m32_154  [key=3, color=darkorchid, style=bold, label="method methodReturn int CalculateSize"];
m32_16 -> m32_132  [key=3, color=darkorchid, style=bold, label="method methodReturn int CalculateSize"];
m32_16 -> m32_30  [key=3, color=darkorchid, style=bold, label="method methodReturn int CalculateSize"];
m32_16 -> m32_176  [key=3, color=darkorchid, style=bold, label="method methodReturn int CalculateSize"];
m32_133 -> m32_133  [key=1, style=dashed, color=darkseagreen4, label=size];
m32_133 -> m32_134  [key=0, style=solid];
m32_133 -> m32_16  [key=2, style=dotted];
m32_134 -> m32_134  [key=1, style=dashed, color=darkseagreen4, label=size];
m32_134 -> m32_135  [key=0, style=solid];
m32_134 -> m32_16  [key=2, style=dotted];
m32_145 -> m32_145  [key=1, style=dashed, color=darkseagreen4, label=size];
m32_145 -> m32_146  [key=0, style=solid];
m32_145 -> m32_88  [key=2, style=dotted];
m32_145 -> m32_120  [key=2, style=dotted];
m32_146 -> m32_146  [key=1, style=dashed, color=darkseagreen4, label=size];
m32_146 -> m32_147  [key=0, style=solid];
m32_146 -> m32_16  [key=2, style=dotted];
m32_146 -> m32_148  [key=1, style=dashed, color=darkseagreen4, label=size];
m32_161 -> m32_162  [key=0, style=solid];
m32_161 -> m32_123  [key=2, style=dotted];
m32_180 -> m32_180  [key=1, style=dashed, color=darkseagreen4, label=size];
m32_180 -> m32_181  [key=0, style=solid];
m32_180 -> m32_16  [key=2, style=dotted];
m32_181 -> m32_181  [key=1, style=dashed, color=darkseagreen4, label=size];
m32_181 -> m32_182  [key=0, style=solid];
m32_181 -> m32_16  [key=2, style=dotted];
m32_131 -> m32_133  [key=1, style=dashed, color=darkseagreen4, label=p];
m32_131 -> m32_134  [key=1, style=dashed, color=darkseagreen4, label=p];
m32_131 -> m32_132  [key=0, style=solid];
m32_131 -> m32_136  [key=0, style=solid];
m32_132 -> m32_133  [key=0, style=solid];
m32_132 -> m32_16  [key=3, color=darkorchid, style=bold, label="Local variable int size"];
m32_132 -> m32_132  [key=3, color=darkorchid, style=bold, label="Local variable int size"];
m32_135 -> m32_131  [key=0, style=solid];
m32_135 -> m32_135  [key=1, style=dashed, color=darkseagreen4, label=bases];
m32_135 -> m32_136  [key=1, style=dashed, color=darkseagreen4, label=bases];
m32_142 -> m32_145  [key=1, style=dashed, color=darkseagreen4, label=index];
m32_142 -> m32_30  [key=3, color=darkorchid, style=bold, label="Local variable int index"];
m32_142 -> m32_143  [key=0, style=solid];
m32_142 -> m32_147  [key=1, style=dashed, color=darkseagreen4, label=index];
m32_144 -> m32_145  [key=0, style=solid];
m32_144 -> m32_144  [key=1, style=dashed, color=darkseagreen4, label=size];
m32_143 -> m32_146  [key=1, style=dashed, color=darkseagreen4, label=c];
m32_143 -> m32_144  [key=0, style=solid];
m32_143 -> m32_148  [key=0, style=solid];
m32_147 -> m32_143  [key=0, style=solid];
m32_147 -> m32_147  [key=1, style=dashed, color=darkseagreen4, label=index];
m32_148 -> m32_148  [key=1, style=dashed, color=darkseagreen4, label=size];
m32_148 -> m32_149  [key=0, style=solid];
m32_158 -> m32_161  [key=1, style=dashed, color=darkseagreen4, label=value];
m32_158 -> m32_159  [key=0, style=solid];
m32_158 -> m32_160  [key=1, style=dashed, color=darkseagreen4, label=value];
m32_158 -> m32_162  [key=1, style=dashed, color=darkseagreen4, label=value];
m32_160 -> m32_161  [key=0, style=solid];
m32_160 -> m32_186  [key=2, style=dotted];
m32_162 -> m32_185  [key=0, style=solid];
m32_178 -> m32_180  [key=1, style=dashed, color=darkseagreen4, label=value];
m32_178 -> m32_181  [key=1, style=dashed, color=darkseagreen4, label=value];
m32_178 -> m32_179  [key=0, style=solid];
m32_178 -> m32_182  [key=1, style=dashed, color=darkseagreen4, label=value];
m32_178 -> m32_183  [key=1, style=dashed, color=darkseagreen4, label=value];
m32_179 -> m32_180  [key=0, style=solid];
m32_179 -> m32_16  [key=3, color=darkorchid, style=bold, label="Local variable int size"];
m32_179 -> m32_30  [key=3, color=darkorchid, style=bold, label="Local variable int size"];
m32_182 -> m32_183  [key=0, style=solid];
m32_141 -> m32_16  [key=3, color=darkorchid, style=bold, label="Local variable int size"];
m32_141 -> m32_142  [key=0, style=solid];
m32_141 -> m32_144  [key=1, style=dashed, color=darkseagreen4, label=size];
m32_141 -> m32_120  [key=3, color=darkorchid, style=bold, label="Local variable int size"];
m32_141 -> m32_148  [key=1, style=dashed, color=darkseagreen4, label=size];
m32_141 -> m32_130  [key=3, color=darkorchid, style=bold, label="Local variable int size"];
m32_127 -> m32_128  [key=0, style=solid];
m32_127 -> m32_139  [key=0, style=solid];
m32_127 -> m32_151  [key=0, style=solid];
m32_127 -> m32_153  [key=0, style=solid];
m32_127 -> m32_155  [key=0, style=solid];
m32_127 -> m32_157  [key=0, style=solid];
m32_127 -> m32_163  [key=0, style=solid];
m32_127 -> m32_165  [key=0, style=solid];
m32_127 -> m32_168  [key=0, style=solid];
m32_127 -> m32_170  [key=0, style=solid];
m32_127 -> m32_175  [key=0, style=solid];
m32_127 -> m32_177  [key=0, style=solid];
m32_127 -> m32_184  [key=0, style=solid];
m32_129 -> m32_131  [key=1, style=dashed, color=darkseagreen4, label=value];
m32_129 -> m32_130  [key=0, style=solid];
m32_129 -> m32_137  [key=1, style=dashed, color=darkseagreen4, label=value];
m32_140 -> m32_143  [key=1, style=dashed, color=darkseagreen4, label=value];
m32_140 -> m32_141  [key=0, style=solid];
m32_140 -> m32_149  [key=1, style=dashed, color=darkseagreen4, label=value];
m32_140 -> m32_150  [key=1, style=dashed, color=darkseagreen4, label=value];
m32_171 -> m32_172  [key=0, style=solid];
m32_171 -> m32_173  [key=1, style=dashed, color=darkseagreen4, label=value];
m32_171 -> m32_174  [key=1, style=dashed, color=darkseagreen4, label=value];
m32_184 -> m32_185  [key=0, style=solid];
m32_184 -> m32_100  [key=2, style=dotted];
m32_184 -> m32_101  [key=2, style=dotted];
m32_130 -> m32_131  [key=0, style=solid];
m32_130 -> m32_132  [key=3, color=darkorchid, style=bold, label="Local variable int bases"];
m32_130 -> m32_135  [key=1, style=dashed, color=darkseagreen4, label=bases];
m32_130 -> m32_130  [key=3, color=darkorchid, style=bold, label="Local variable int bases"];
m32_130 -> m32_136  [key=1, style=dashed, color=darkseagreen4, label=bases];
m32_154 -> m32_185  [key=0, style=solid];
m32_176 -> m32_185  [key=0, style=solid];
m32_136 -> m32_136  [key=1, style=dashed, color=darkseagreen4, label=bases];
m32_136 -> m32_137  [key=0, style=solid];
m32_136 -> m32_138  [key=1, style=dashed, color=darkseagreen4, label=bases];
m32_149 -> m32_150  [key=0, style=solid];
m32_157 -> m32_158  [key=0, style=solid];
m32_159 -> m32_160  [key=0, style=solid];
m32_177 -> m32_178  [key=0, style=solid];
m32_183 -> m32_185  [key=0, style=solid];
m32_138 -> m32_185  [key=0, style=solid];
m32_150 -> m32_185  [key=0, style=solid];
m32_152 -> m32_185  [key=0, style=solid];
m32_156 -> m32_185  [key=0, style=solid];
m32_164 -> m32_185  [key=0, style=solid];
m32_167 -> m32_185  [key=0, style=solid];
m32_169 -> m32_185  [key=0, style=solid];
m32_174 -> m32_185  [key=0, style=solid];
m32_128 -> m32_129  [key=0, style=solid];
m32_139 -> m32_140  [key=0, style=solid];
m32_151 -> m32_152  [key=0, style=solid];
m32_153 -> m32_154  [key=0, style=solid];
m32_155 -> m32_156  [key=0, style=solid];
m32_163 -> m32_164  [key=0, style=solid];
m32_165 -> m32_166  [key=0, style=solid];
m32_168 -> m32_169  [key=0, style=solid];
m32_170 -> m32_171  [key=0, style=solid];
m32_175 -> m32_176  [key=0, style=solid];
m32_137 -> m32_138  [key=0, style=solid];
m32_172 -> m32_173  [key=0, style=solid];
m32_173 -> m32_174  [key=0, style=solid];
m32_166 -> m32_167  [key=0, style=solid];
m32_185 -> m32_16  [key=0, style=bold, color=blue];
m32_17 -> m32_12  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Bson.BsonToken t"];
m32_17 -> m32_18  [key=0, style=solid];
m32_17 -> m32_20  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonToken"];
m32_17 -> m32_28  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonToken"];
m32_17 -> m32_38  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonToken"];
m32_17 -> m32_41  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonToken"];
m32_17 -> m32_44  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonToken"];
m32_17 -> m32_47  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonToken"];
m32_17 -> m32_50  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonToken"];
m32_17 -> m32_55  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonToken"];
m32_17 -> m32_68  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonToken"];
m32_17 -> m32_74  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonToken"];
m32_17 -> m32_78  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonToken"];
m32_17 -> m32_81  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonToken"];
m32_17 -> m32_31  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Bson.BsonToken t"];
m32_21 -> m32_22  [key=0, style=solid];
m32_21 -> m32_83  [key=2, style=dotted];
m32_23 -> m32_24  [key=0, style=solid];
m32_23 -> m32_84  [key=2, style=dotted];
m32_24 -> m32_25  [key=0, style=solid];
m32_24 -> m32_85  [key=2, style=dotted];
m32_25 -> m32_22  [key=0, style=solid];
m32_25 -> m32_17  [key=2, style=dotted];
m32_26 -> m32_82  [key=0, style=solid];
m32_26 -> m32_86  [key=2, style=dotted];
m32_29 -> m32_30  [key=0, style=solid];
m32_29 -> m32_83  [key=2, style=dotted];
m32_32 -> m32_33  [key=0, style=solid];
m32_32 -> m32_84  [key=2, style=dotted];
m32_33 -> m32_34  [key=0, style=solid];
m32_33 -> m32_87  [key=2, style=dotted];
m32_33 -> m32_88  [key=2, style=dotted];
m32_33 -> m32_85  [key=2, style=dotted];
m32_34 -> m32_35  [key=0, style=solid];
m32_34 -> m32_17  [key=2, style=dotted];
m32_36 -> m32_82  [key=0, style=solid];
m32_36 -> m32_86  [key=2, style=dotted];
m32_39 -> m32_82  [key=0, style=solid];
m32_39 -> m32_89  [key=2, style=dotted];
m32_39 -> m32_83  [key=2, style=dotted];
m32_42 -> m32_82  [key=0, style=solid];
m32_42 -> m32_90  [key=2, style=dotted];
m32_42 -> m32_91  [key=2, style=dotted];
m32_45 -> m32_82  [key=0, style=solid];
m32_45 -> m32_92  [key=2, style=dotted];
m32_45 -> m32_93  [key=2, style=dotted];
m32_48 -> m32_82  [key=0, style=solid];
m32_48 -> m32_85  [key=2, style=dotted];
m32_51 -> m32_82  [key=0, style=solid];
m32_51 -> m32_94  [key=2, style=dotted];
m32_59 -> m32_60  [key=0, style=solid];
m32_59 -> m32_61  [key=0, style=solid];
m32_61 -> m32_62  [key=0, style=solid];
m32_61 -> m32_63  [key=0, style=solid];
m32_66 -> m32_82  [key=0, style=solid];
m32_66 -> m32_91  [key=2, style=dotted];
m32_70 -> m32_71  [key=0, style=solid];
m32_70 -> m32_83  [key=2, style=dotted];
m32_71 -> m32_72  [key=0, style=solid];
m32_71 -> m32_86  [key=2, style=dotted];
m32_72 -> m32_82  [key=0, style=solid];
m32_72 -> m32_99  [key=2, style=dotted];
m32_76 -> m32_82  [key=0, style=solid];
m32_76 -> m32_99  [key=2, style=dotted];
m32_79 -> m32_80  [key=0, style=solid];
m32_79 -> m32_85  [key=2, style=dotted];
m32_80 -> m32_82  [key=0, style=solid];
m32_80 -> m32_85  [key=2, style=dotted];
m32_20 -> m32_21  [key=0, style=solid];
m32_20 -> m32_22  [key=1, style=dashed, color=darkseagreen4, label=value];
m32_22 -> m32_23  [key=0, style=solid];
m32_22 -> m32_24  [key=1, style=dashed, color=darkseagreen4, label=property];
m32_22 -> m32_25  [key=1, style=dashed, color=darkseagreen4, label=property];
m32_22 -> m32_26  [key=0, style=solid];
m32_28 -> m32_29  [key=0, style=solid];
m32_28 -> m32_31  [key=1, style=dashed, color=darkseagreen4, label=value];
m32_30 -> m32_33  [key=1, style=dashed, color=darkseagreen4, label=index];
m32_30 -> m32_30  [key=3, color=darkorchid, style=bold, label="Local variable int index"];
m32_30 -> m32_31  [key=0, style=solid];
m32_30 -> m32_35  [key=1, style=dashed, color=darkseagreen4, label=index];
m32_31 -> m32_32  [key=0, style=solid];
m32_31 -> m32_34  [key=1, style=dashed, color=darkseagreen4, label=c];
m32_31 -> m32_36  [key=0, style=solid];
m32_35 -> m32_31  [key=0, style=solid];
m32_35 -> m32_35  [key=1, style=dashed, color=darkseagreen4, label=index];
m32_38 -> m32_39  [key=0, style=solid];
m32_41 -> m32_42  [key=0, style=solid];
m32_44 -> m32_45  [key=0, style=solid];
m32_47 -> m32_48  [key=0, style=solid];
m32_50 -> m32_51  [key=0, style=solid];
m32_58 -> m32_59  [key=0, style=solid];
m32_58 -> m32_60  [key=1, style=dashed, color=darkseagreen4, label=dateTime];
m32_58 -> m32_62  [key=1, style=dashed, color=darkseagreen4, label=dateTime];
m32_58 -> m32_63  [key=1, style=dashed, color=darkseagreen4, label=dateTime];
m32_60 -> m32_60  [key=1, style=dashed, color=darkseagreen4, label=dateTime];
m32_60 -> m32_63  [key=0, style=solid];
m32_60 -> m32_95  [key=2, style=dotted];
m32_62 -> m32_62  [key=1, style=dashed, color=darkseagreen4, label=dateTime];
m32_62 -> m32_63  [key=0, style=solid];
m32_62 -> m32_96  [key=2, style=dotted];
m32_63 -> m32_66  [key=0, style=solid];
m32_63 -> m32_97  [key=2, style=dotted];
m32_65 -> m32_66  [key=0, style=solid];
m32_65 -> m32_65  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m32_65 -> m32_98  [key=2, style=dotted];
m32_69 -> m32_70  [key=0, style=solid];
m32_69 -> m32_72  [key=1, style=dashed, color=darkseagreen4, label=data];
m32_75 -> m32_76  [key=0, style=solid];
m32_78 -> m32_79  [key=0, style=solid];
m32_78 -> m32_80  [key=1, style=dashed, color=darkseagreen4, label=value];
m32_18 -> m32_19  [key=0, style=solid];
m32_18 -> m32_27  [key=0, style=solid];
m32_18 -> m32_37  [key=0, style=solid];
m32_18 -> m32_40  [key=0, style=solid];
m32_18 -> m32_43  [key=0, style=solid];
m32_18 -> m32_46  [key=0, style=solid];
m32_18 -> m32_49  [key=0, style=solid];
m32_18 -> m32_52  [key=0, style=solid];
m32_18 -> m32_54  [key=0, style=solid];
m32_18 -> m32_67  [key=0, style=solid];
m32_18 -> m32_73  [key=0, style=solid];
m32_18 -> m32_77  [key=0, style=solid];
m32_18 -> m32_81  [key=0, style=solid];
m32_55 -> m32_58  [key=1, style=dashed, color=darkseagreen4, label=value];
m32_55 -> m32_56  [key=0, style=solid];
m32_55 -> m32_57  [key=1, style=dashed, color=darkseagreen4, label=value];
m32_55 -> m32_64  [key=1, style=dashed, color=darkseagreen4, label=value];
m32_68 -> m32_69  [key=0, style=solid];
m32_74 -> m32_75  [key=0, style=solid];
m32_81 -> m32_82  [key=0, style=solid];
m32_81 -> m32_100  [key=2, style=dotted];
m32_81 -> m32_101  [key=2, style=dotted];
m32_19 -> m32_20  [key=0, style=solid];
m32_53 -> m32_82  [key=0, style=solid];
m32_27 -> m32_28  [key=0, style=solid];
m32_56 -> m32_30  [key=3, color=darkorchid, style=bold, label="Local variable long ticks"];
m32_56 -> m32_57  [key=0, style=solid];
m32_37 -> m32_38  [key=0, style=solid];
m32_40 -> m32_41  [key=0, style=solid];
m32_43 -> m32_44  [key=0, style=solid];
m32_46 -> m32_47  [key=0, style=solid];
m32_49 -> m32_50  [key=0, style=solid];
m32_57 -> m32_58  [key=0, style=solid];
m32_57 -> m32_64  [key=0, style=solid];
m32_64 -> m32_65  [key=0, style=solid];
m32_77 -> m32_78  [key=0, style=solid];
m32_52 -> m32_53  [key=0, style=solid];
m32_54 -> m32_55  [key=0, style=solid];
m32_67 -> m32_68  [key=0, style=solid];
m32_73 -> m32_74  [key=0, style=solid];
m32_82 -> m32_17  [key=0, style=bold, color=blue];
m32_85 -> m32_24  [key=3, color=darkorchid, style=bold, label="Parameter variable int? calculatedlengthPrefix"];
m32_85 -> m32_103  [key=1, style=dashed, color=darkseagreen4, label="int?"];
m32_85 -> m32_104  [key=1, style=dashed, color=darkseagreen4, label=string];
m32_85 -> m32_102  [key=0, style=solid];
m32_103 -> m32_104  [key=0, style=solid];
m32_103 -> m32_83  [key=2, style=dotted];
m32_104 -> m32_105  [key=0, style=solid];
m32_104 -> m32_107  [key=2, style=dotted];
m32_105 -> m32_106  [key=0, style=solid];
m32_105 -> m32_86  [key=2, style=dotted];
m32_102 -> m32_103  [key=0, style=solid];
m32_102 -> m32_104  [key=0, style=solid];
m32_106 -> m32_85  [key=0, style=bold, color=blue];
m32_187 -> m32_1  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m32_187 -> m32_2  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m32_187 -> m32_5  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m32_187 -> m32_9  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m32_187 -> m32_13  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m32_187 -> m32_14  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m32_187 -> m32_21  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m32_187 -> m32_23  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m32_187 -> m32_24  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m32_187 -> m32_25  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m32_187 -> m32_26  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m32_187 -> m32_29  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m32_187 -> m32_32  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m32_187 -> m32_33  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m32_187 -> m32_34  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m32_187 -> m32_36  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m32_187 -> m32_39  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m32_187 -> m32_42  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m32_187 -> m32_45  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m32_187 -> m32_48  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m32_187 -> m32_51  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m32_187 -> m32_59  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m32_187 -> m32_61  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m32_187 -> m32_66  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m32_187 -> m32_70  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m32_187 -> m32_71  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m32_187 -> m32_72  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m32_187 -> m32_76  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m32_187 -> m32_79  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m32_187 -> m32_80  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m32_187 -> m32_103  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m32_187 -> m32_104  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m32_187 -> m32_105  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m32_187 -> m32_109  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m32_187 -> m32_110  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m32_187 -> m32_112  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m32_187 -> m32_113  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m32_187 -> m32_115  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m32_187 -> m32_133  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m32_187 -> m32_134  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m32_187 -> m32_145  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m32_187 -> m32_146  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m32_187 -> m32_161  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m32_187 -> m32_180  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m32_187 -> m32_181  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m33_0 -> m33_1  [key=0, style=solid, color=green];
m33_1 -> m33_2  [key=0, style=solid, color=green];
m33_2 -> m33_0  [key=0, style=bold, color=blue];
m33_3 -> m33_1  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Serialization.JsonPrimitiveContract"];
m35_4 -> m35_25  [key=3, color=red, style=bold, label="method methodReturn bool TryGetClosestMatchProperty"];
m35_4 -> m35_28  [key=3, color=red, style=bold, label="method methodReturn bool TryGetClosestMatchProperty"];
m35_0 -> m35_1  [key=0, style=solid];
m35_0 -> m35_2  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract"];
m35_1 -> m35_2  [key=0, style=solid];
m35_1 -> m35_4  [key=2, style=dotted];
m35_2 -> m35_3  [key=0, style=solid];
m35_3 -> m35_0  [key=0, style=bold, color=blue];
m35_5 -> m35_6  [key=0, style=solid];
m35_6 -> m35_7  [key=0, style=solid];
m35_7 -> m35_5  [key=0, style=bold, color=blue];
m35_30 -> m35_31  [key=0, style=solid];
m35_30 -> m35_32  [key=1, style=dashed, color=red, label=string];
m35_30 -> m35_4  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty matchingProperty"];
m35_30 -> m35_24  [key=3, color=red, style=bold, label="Parameter variable System.StringComparison comparisonType"];
m35_30 -> m35_26  [key=3, color=red, style=bold, label="Parameter variable System.StringComparison comparisonType"];
m35_30 -> m35_25  [key=3, color=red, style=bold, label="method methodReturn bool TryGetProperty"];
m35_30 -> m35_28  [key=3, color=red, style=bold, label="method methodReturn bool TryGetProperty"];
m35_31 -> m35_32  [key=0, style=solid, color=red];
m35_31 -> m35_35  [key=0, style=solid, color=red];
m35_31 -> m35_33  [key=1, style=dashed, color=red, label=property];
m35_32 -> m35_33  [key=0, style=solid, color=red];
m35_32 -> m35_31  [key=0, style=solid, color=red];
m35_32 -> m35_38  [key=2, style=dotted, color=red];
m35_35 -> m35_36  [key=0, style=solid, color=red];
m35_35 -> m35_37  [key=1, style=dashed, color=red, label="out Newtonsoft.Json.Serialization.JsonProperty"];
m35_33 -> m35_34  [key=0, style=solid, color=red];
m35_34 -> m35_37  [key=0, style=solid, color=red];
m35_36 -> m35_37  [key=0, style=solid, color=red];
m35_37 -> m35_30  [key=0, style=bold, color=blue];
m35_23 -> m35_24  [key=0, style=solid, color=red];
m35_23 -> m35_26  [key=1, style=dashed, color=red, label=string];
m35_24 -> m35_25  [key=0, style=solid, color=red];
m35_24 -> m35_26  [key=0, style=solid, color=red];
m35_24 -> m35_30  [key=2, style=dotted, color=red];
m35_26 -> m35_27  [key=0, style=solid, color=red];
m35_26 -> m35_28  [key=0, style=solid, color=red];
m35_26 -> m35_30  [key=2, style=dotted, color=red];
m35_26 -> m35_29  [key=1, style=dashed, color=red, label="out Newtonsoft.Json.Serialization.JsonProperty"];
m35_25 -> m35_29  [key=0, style=solid, color=red];
m35_27 -> m35_29  [key=0, style=solid, color=red];
m35_28 -> m35_29  [key=0, style=solid, color=red];
m35_29 -> m35_23  [key=0, style=bold, color=blue];
m35_8 -> m35_9  [key=0, style=solid];
m35_8 -> m35_10  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m35_8 -> m35_12  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m35_8 -> m35_14  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m35_8 -> m35_16  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m35_9 -> m35_10  [key=0, style=solid];
m35_9 -> m35_16  [key=0, style=solid];
m35_9 -> m35_18  [key=2, style=dotted];
m35_10 -> m35_11  [key=0, style=solid];
m35_10 -> m35_12  [key=0, style=solid];
m35_12 -> m35_13  [key=0, style=solid];
m35_12 -> m35_15  [key=1, style=dashed, color=darkseagreen4, label=existingProperty];
m35_14 -> m35_17  [key=0, style=solid];
m35_14 -> m35_19  [key=2, style=dotted];
m35_14 -> m35_20  [key=2, style=dotted];
m35_16 -> m35_17  [key=0, style=solid];
m35_16 -> m35_22  [key=2, style=dotted];
m35_11 -> m35_17  [key=0, style=solid];
m35_13 -> m35_14  [key=0, style=solid];
m35_13 -> m35_15  [key=0, style=solid];
m35_15 -> m35_16  [key=0, style=solid];
m35_15 -> m35_21  [key=2, style=dotted];
m35_17 -> m35_8  [key=0, style=bold, color=blue];
m35_39 -> m35_2  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonPropertyCollection"];
m35_39 -> m35_9  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonPropertyCollection"];
m35_39 -> m35_12  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonPropertyCollection"];
m35_39 -> m35_14  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonPropertyCollection"];
m35_39 -> m35_15  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonPropertyCollection"];
m35_39 -> m35_16  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonPropertyCollection"];
m35_39 -> m35_24  [key=1, style=dashed, color=red, label="Newtonsoft.Json.Serialization.JsonPropertyCollection"];
m35_39 -> m35_26  [key=1, style=dashed, color=red, label="Newtonsoft.Json.Serialization.JsonPropertyCollection"];
m35_39 -> m35_31  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonPropertyCollection"];
m36_63 -> m36_64  [key=0, style=solid];
m36_63 -> m36_67  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m36_63 -> m36_69  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m36_64 -> m36_65  [key=0, style=solid];
m36_64 -> m36_71  [key=2, style=dotted];
m36_67 -> m36_68  [key=0, style=solid];
m36_67 -> m36_72  [key=2, style=dotted];
m36_69 -> m36_70  [key=0, style=solid];
m36_69 -> m36_73  [key=2, style=dotted];
m36_65 -> m36_66  [key=0, style=solid];
m36_65 -> m36_67  [key=1, style=dashed, color=darkseagreen4, label=i];
m36_65 -> m36_68  [key=1, style=dashed, color=darkseagreen4, label=i];
m36_66 -> m36_67  [key=0, style=solid];
m36_66 -> m36_69  [key=0, style=solid];
m36_68 -> m36_66  [key=0, style=solid];
m36_68 -> m36_68  [key=1, style=dashed, color=darkseagreen4, label=i];
m36_70 -> m36_63  [key=0, style=bold, color=blue];
m36_105 -> m36_106  [key=0, style=solid];
m36_106 -> m36_107  [key=0, style=solid];
m36_106 -> m36_108  [key=2, style=dotted];
m36_107 -> m36_105  [key=0, style=bold, color=blue];
m36_51 -> m36_52  [key=0, style=solid];
m36_52 -> m36_53  [key=0, style=solid];
m36_52 -> m36_54  [key=2, style=dotted];
m36_52 -> m36_55  [key=2, style=dotted];
m36_53 -> m36_51  [key=0, style=bold, color=blue];
m36_89 -> m36_90  [key=0, style=solid];
m36_90 -> m36_91  [key=0, style=solid];
m36_90 -> m36_92  [key=2, style=dotted];
m36_91 -> m36_89  [key=0, style=bold, color=blue];
m36_121 -> m36_122  [key=0, style=solid];
m36_122 -> m36_123  [key=0, style=solid];
m36_122 -> m36_124  [key=2, style=dotted];
m36_123 -> m36_121  [key=0, style=bold, color=blue];
m36_21 -> m36_22  [key=0, style=solid];
m36_21 -> m36_23  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m36_21 -> m36_24  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m36_21 -> m36_25  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m36_21 -> m36_26  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m36_21 -> m36_27  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m36_21 -> m36_29  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m36_21 -> m36_30  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m36_22 -> m36_23  [key=0, style=solid];
m36_22 -> m36_25  [key=0, style=solid];
m36_23 -> m36_24  [key=0, style=solid];
m36_23 -> m36_25  [key=0, style=solid];
m36_23 -> m36_33  [key=2, style=dotted];
m36_24 -> m36_32  [key=0, style=solid];
m36_24 -> m36_34  [key=2, style=dotted];
m36_25 -> m36_26  [key=0, style=solid];
m36_25 -> m36_35  [key=2, style=dotted];
m36_26 -> m36_27  [key=0, style=solid];
m36_26 -> m36_28  [key=0, style=solid];
m36_27 -> m36_32  [key=0, style=solid];
m36_27 -> m36_36  [key=2, style=dotted];
m36_27 -> m36_34  [key=2, style=dotted];
m36_29 -> m36_30  [key=0, style=solid];
m36_29 -> m36_37  [key=2, style=dotted];
m36_30 -> m36_31  [key=0, style=solid];
m36_30 -> m36_38  [key=2, style=dotted];
m36_28 -> m36_29  [key=0, style=solid];
m36_28 -> m36_0  [key=2, style=dotted];
m36_28 -> m36_30  [key=1, style=dashed, color=darkseagreen4, label=a];
m36_28 -> m36_31  [key=1, style=dashed, color=darkseagreen4, label=a];
m36_31 -> m36_32  [key=0, style=solid];
m36_32 -> m36_21  [key=0, style=bold, color=blue];
m36_113 -> m36_114  [key=0, style=solid];
m36_114 -> m36_115  [key=0, style=solid];
m36_114 -> m36_116  [key=2, style=dotted];
m36_115 -> m36_113  [key=0, style=bold, color=blue];
m36_0 -> m36_1  [key=0, style=solid];
m36_1 -> m36_0  [key=0, style=bold, color=blue];
m36_86 -> m36_87  [key=0, style=solid];
m36_87 -> m36_88  [key=0, style=solid];
m36_87 -> m36_74  [key=2, style=dotted];
m36_88 -> m36_86  [key=0, style=bold, color=blue];
m36_55 -> m36_56  [key=0, style=solid];
m36_56 -> m36_57  [key=0, style=solid];
m36_56 -> m36_61  [key=2, style=dotted];
m36_56 -> m36_58  [key=1, style=dashed, color=darkseagreen4, label=token];
m36_56 -> m36_59  [key=1, style=dashed, color=darkseagreen4, label=token];
m36_57 -> m36_58  [key=0, style=solid];
m36_57 -> m36_59  [key=0, style=solid];
m36_58 -> m36_60  [key=0, style=solid];
m36_58 -> m36_62  [key=2, style=dotted];
m36_58 -> m36_36  [key=2, style=dotted];
m36_59 -> m36_60  [key=0, style=solid];
m36_60 -> m36_55  [key=0, style=bold, color=blue];
m36_109 -> m36_110  [key=0, style=solid];
m36_110 -> m36_111  [key=0, style=solid];
m36_110 -> m36_112  [key=2, style=dotted];
m36_111 -> m36_109  [key=0, style=bold, color=blue];
m36_97 -> m36_98  [key=0, style=solid];
m36_98 -> m36_99  [key=0, style=solid];
m36_98 -> m36_100  [key=2, style=dotted];
m36_98 -> m36_101  [key=2, style=dotted];
m36_99 -> m36_97  [key=0, style=bold, color=blue];
m36_102 -> m36_103  [key=0, style=solid];
m36_103 -> m36_104  [key=0, style=solid];
m36_103 -> m36_9  [key=2, style=dotted];
m36_104 -> m36_102  [key=0, style=bold, color=blue];
m36_10 -> m36_11  [key=0, style=solid, color=red];
m36_11 -> m36_12  [key=0, style=solid, color=red];
m36_12 -> m36_13  [key=0, style=solid, color=red];
m36_12 -> m36_14  [key=2, style=dotted, color=red];
m36_13 -> m36_10  [key=0, style=bold, color=blue];
m36_6 -> m36_7  [key=0, style=solid, color=red];
m36_7 -> m36_8  [key=0, style=solid, color=red];
m36_7 -> m36_9  [key=2, style=dotted, color=red];
m36_8 -> m36_6  [key=0, style=bold, color=blue];
m36_2 -> m36_3  [key=0, style=solid];
m36_3 -> m36_2  [key=0, style=bold, color=blue];
m36_117 -> m36_118  [key=0, style=solid];
m36_118 -> m36_119  [key=0, style=solid];
m36_118 -> m36_120  [key=2, style=dotted];
m36_119 -> m36_117  [key=0, style=bold, color=blue];
m36_18 -> m36_19  [key=0, style=solid, color=red];
m36_19 -> m36_20  [key=0, style=solid, color=red];
m36_19 -> m36_21  [key=2, style=dotted, color=red];
m36_20 -> m36_18  [key=0, style=bold, color=blue];
m36_78 -> m36_79  [key=0, style=solid];
m36_78 -> m36_82  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JsonMergeSettings"];
m36_79 -> m36_80  [key=0, style=solid];
m36_79 -> m36_84  [key=2, style=dotted];
m36_79 -> m36_82  [key=1, style=dashed, color=darkseagreen4, label=a];
m36_82 -> m36_83  [key=0, style=solid];
m36_82 -> m36_85  [key=2, style=dotted];
m36_80 -> m36_81  [key=0, style=solid];
m36_80 -> m36_82  [key=0, style=solid];
m36_81 -> m36_83  [key=0, style=solid];
m36_83 -> m36_78  [key=0, style=bold, color=blue];
m36_42 -> m36_43  [key=0, style=solid];
m36_42 -> m36_44  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JsonLoadSettings"];
m36_43 -> m36_44  [key=0, style=solid];
m36_43 -> m36_49  [key=2, style=dotted];
m36_43 -> m36_50  [key=2, style=dotted];
m36_43 -> m36_45  [key=1, style=dashed, color=darkseagreen4, label=reader];
m36_43 -> m36_46  [key=1, style=dashed, color=darkseagreen4, label=reader];
m36_44 -> m36_45  [key=0, style=solid];
m36_44 -> m36_21  [key=2, style=dotted];
m36_44 -> m36_47  [key=1, style=dashed, color=darkseagreen4, label=a];
m36_45 -> m36_46  [key=0, style=solid];
m36_45 -> m36_47  [key=0, style=solid];
m36_45 -> m36_33  [key=2, style=dotted];
m36_46 -> m36_48  [key=0, style=solid];
m36_46 -> m36_34  [key=2, style=dotted];
m36_47 -> m36_48  [key=0, style=solid];
m36_48 -> m36_42  [key=0, style=bold, color=blue];
m36_4 -> m36_5  [key=0, style=solid];
m36_5 -> m36_4  [key=0, style=bold, color=blue];
m36_93 -> m36_94  [key=0, style=solid];
m36_94 -> m36_95  [key=0, style=solid];
m36_94 -> m36_96  [key=2, style=dotted];
m36_95 -> m36_93  [key=0, style=bold, color=blue];
m36_15 -> m36_16  [key=0, style=solid, color=red];
m36_16 -> m36_17  [key=0, style=solid, color=red];
m36_16 -> m36_2  [key=2, style=dotted, color=red];
m36_17 -> m36_15  [key=0, style=bold, color=blue];
m36_74 -> m36_75  [key=0, style=solid];
m36_75 -> m36_76  [key=0, style=solid];
m36_75 -> m36_77  [key=2, style=dotted];
m36_76 -> m36_74  [key=0, style=bold, color=blue];
m36_39 -> m36_40  [key=0, style=solid];
m36_40 -> m36_41  [key=0, style=solid];
m36_40 -> m36_42  [key=2, style=dotted];
m36_41 -> m36_39  [key=0, style=bold, color=blue];
m36_125 -> m36_7  [key=1, style=dashed, color=red, label="Newtonsoft.Json.Linq.JArray"];
m36_125 -> m36_12  [key=1, style=dashed, color=red, label="Newtonsoft.Json.Linq.JArray"];
m36_125 -> m36_16  [key=1, style=dashed, color=red, label="Newtonsoft.Json.Linq.JArray"];
m36_125 -> m36_66  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JArray"];
m36_125 -> m36_67  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JArray"];
m36_125 -> m36_75  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JArray"];
m36_125 -> m36_79  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JArray"];
m36_125 -> m36_82  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JArray"];
m36_125 -> m36_87  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JArray"];
m36_125 -> m36_90  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JArray"];
m36_125 -> m36_94  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JArray"];
m36_125 -> m36_98  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JArray"];
m36_125 -> m36_103  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JArray"];
m36_125 -> m36_106  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JArray"];
m36_125 -> m36_110  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JArray"];
m36_125 -> m36_114  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JArray"];
m36_125 -> m36_118  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JArray"];
m36_125 -> m36_122  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JArray"];
m37_0 -> m37_1  [key=0, style=solid, color=red];
m37_0 -> m37_2  [key=1, style=dashed, color=red, label=int];
m37_0 -> m37_3  [key=1, style=dashed, color=red, label=int];
m37_1 -> m37_2  [key=0, style=solid, color=red];
m37_1 -> m37_9  [key=1, style=dashed, color=red, label="Newtonsoft.Json.Utilities.StringReference"];
m37_2 -> m37_3  [key=0, style=solid, color=red];
m37_2 -> m37_9  [key=1, style=dashed, color=red, label="Newtonsoft.Json.Utilities.StringReference"];
m37_3 -> m37_4  [key=0, style=solid, color=red];
m37_3 -> m37_9  [key=1, style=dashed, color=red, label="Newtonsoft.Json.Utilities.StringReference"];
m37_4 -> m37_0  [key=0, style=bold, color=blue];
m37_5 -> m37_6  [key=0, style=solid, color=red];
m37_6 -> m37_7  [key=0, style=solid, color=red];
m37_6 -> m37_8  [key=2, style=dotted, color=red];
m37_7 -> m37_5  [key=0, style=bold, color=blue];
m37_10 -> m37_6  [key=1, style=dashed, color=red, label="Newtonsoft.Json.Utilities.StringReference"];
m38_31 -> m38_31  [key=0, style=solid];
m38_31 -> m38_32  [key=0, style=solid];
m38_31 -> m38_24  [key=2, style=dotted];
m38_20 -> m38_21  [key=0, style=solid];
m38_20 -> m38_22  [key=0, style=solid, color=green];
m38_21 -> m38_22  [key=0, style=solid];
m38_21 -> m38_23  [key=2, style=dotted];
m38_22 -> m38_20  [key=0, style=bold, color=blue];
m38_22 -> m38_23  [key=0, style=solid, color=green];
m38_0 -> m38_1  [key=0, style=solid];
m38_0 -> m38_2  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m38_1 -> m38_2  [key=0, style=solid];
m38_1 -> m38_4  [key=2, style=dotted];
m38_2 -> m38_3  [key=0, style=solid];
m38_2 -> m38_6  [key=2, style=dotted];
m38_3 -> m38_4  [key=0, style=solid];
m38_3 -> m38_0  [key=0, style=bold, color=blue];
m38_4 -> m38_7  [key=2, style=dotted];
m38_4 -> m38_5  [key=0, style=solid];
m38_5 -> m38_0  [key=0, style=bold, color=blue];
m38_5 -> m38_6  [key=0, style=solid];
m38_16 -> m38_17  [key=0, style=solid, color=green];
m38_17 -> m38_18  [key=0, style=solid, color=green];
m38_17 -> m38_19  [key=2, style=dotted];
m38_18 -> m38_16  [key=0, style=bold, color=blue];
m38_18 -> m38_19  [key=0, style=solid];
m38_80 -> m38_50  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonToken endToken"];
m38_80 -> m38_53  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonToken endToken"];
m38_80 -> m38_56  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonToken endToken"];
m38_80 -> m38_82  [key=0, style=solid];
m38_80 -> m38_83  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonToken"];
m38_80 -> m38_84  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonToken"];
m38_80 -> m38_69  [key=0, style=bold, color=blue];
m38_82 -> m38_83  [key=0, style=solid];
m38_82 -> m38_13  [key=2, style=dotted];
m38_82 -> m38_84  [key=1, style=dashed, color=darkseagreen4, label=currentObject];
m38_82 -> m38_85  [key=1, style=dashed, color=darkseagreen4, label=firstChild];
m38_82 -> m38_86  [key=1, style=dashed, color=darkseagreen4, label=firstChild];
m38_83 -> m38_84  [key=0, style=solid];
m38_83 -> m38_85  [key=0, style=solid];
m38_83 -> m38_86  [key=2, style=dotted];
m38_84 -> m38_85  [key=0, style=solid];
m38_84 -> m38_87  [key=2, style=dotted];
m38_84 -> m38_88  [key=2, style=dotted];
m38_84 -> m38_89  [key=0, style=solid];
m38_84 -> m38_63  [key=2, style=dotted];
m38_85 -> m38_80  [key=0, style=bold, color=blue];
m38_85 -> m38_86  [key=0, style=solid];
m38_85 -> m38_46  [key=2, style=dotted];
m38_136 -> m38_137  [key=0, style=solid];
m38_136 -> m38_138  [key=2, style=dotted];
m38_137 -> m38_138  [key=0, style=solid];
m38_137 -> m38_139  [key=2, style=dotted];
m38_137 -> m38_135  [key=0, style=bold, color=blue];
m38_138 -> m38_136  [key=0, style=bold, color=blue];
m38_138 -> m38_139  [key=0, style=solid];
m38_138 -> m38_107  [key=3, color=darkorchid, style=bold, label="Parameter variable bool disposing"];
m38_45 -> m38_51  [key=0, style=solid];
m38_45 -> m38_53  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m38_45 -> m38_54  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m38_45 -> m38_55  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m38_45 -> m38_57  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m38_45 -> m38_7  [key=2, style=dotted];
m38_45 -> m38_71  [key=0, style=solid];
m38_51 -> m38_52  [key=0, style=solid];
m38_51 -> m38_53  [key=0, style=solid];
m38_51 -> m38_71  [key=0, style=solid];
m38_53 -> m38_54  [key=0, style=solid];
m38_53 -> m38_58  [key=1, style=dashed, color=darkseagreen4, label=next];
m38_53 -> m38_80  [key=2, style=dotted];
m38_54 -> m38_55  [key=0, style=solid];
m38_54 -> m38_58  [key=0, style=solid];
m38_54 -> m38_71  [key=0, style=solid];
m38_55 -> m38_56  [key=0, style=solid];
m38_55 -> m38_57  [key=0, style=solid];
m38_57 -> m38_61  [key=0, style=solid];
m38_57 -> m38_63  [key=2, style=dotted];
m38_57 -> m38_71  [key=0, style=solid];
m38_52 -> m38_61  [key=0, style=solid];
m38_52 -> m38_62  [key=2, style=dotted];
m38_52 -> m38_53  [key=0, style=solid];
m38_58 -> m38_59  [key=0, style=solid];
m38_56 -> m38_61  [key=0, style=solid];
m38_56 -> m38_62  [key=2, style=dotted];
m38_56 -> m38_57  [key=0, style=solid];
m38_56 -> m38_80  [key=2, style=dotted];
m38_59 -> m38_60  [key=0, style=solid];
m38_59 -> m38_46  [key=2, style=dotted];
m38_60 -> m38_61  [key=0, style=solid];
m38_60 -> m38_7  [key=2, style=dotted];
m38_60 -> m38_71  [key=0, style=solid];
m38_61 -> m38_45  [key=0, style=bold, color=blue];
m38_61 -> m38_62  [key=0, style=solid];
m38_146 -> m38_147  [key=0, style=solid];
m38_139 -> m38_140  [key=0, style=solid];
m38_139 -> m38_141  [key=0, style=solid];
m38_140 -> m38_141  [key=0, style=solid];
m38_140 -> m38_142  [key=2, style=dotted];
m38_141 -> m38_138  [key=0, style=bold, color=blue];
m38_141 -> m38_142  [key=0, style=solid];
m38_141 -> m38_143  [key=0, style=solid];
m38_7 -> m38_10  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Linq.JTokenType"];
m38_7 -> m38_8  [key=0, style=solid];
m38_7 -> m38_4  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JTokenType value"];
m38_7 -> m38_42  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JTokenType value"];
m38_7 -> m38_45  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JTokenType value"];
m38_7 -> m38_48  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JTokenType value"];
m38_7 -> m38_60  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JTokenType value"];
m38_7 -> m38_5  [key=0, style=bold, color=blue];
m38_10 -> m38_11  [key=0, style=solid, color=green];
m38_10 -> m38_8  [key=0, style=bold, color=blue];
m38_9 -> m38_10  [key=0, style=solid, color=green];
m38_9 -> m38_11  [key=2, style=dotted];
m38_8 -> m38_9  [key=0, style=solid];
m38_8 -> m38_12  [key=2, style=dotted];
m38_11 -> m38_7  [key=0, style=bold, color=blue];
m38_34 -> m38_35  [key=0, style=solid];
m38_34 -> m38_36  [key=0, style=solid];
m38_68 -> m38_69  [key=0, style=solid];
m38_35 -> m38_36  [key=0, style=solid];
m38_35 -> m38_37  [key=2, style=dotted];
m38_35 -> m38_43  [key=0, style=solid];
m38_36 -> m38_34  [key=0, style=bold, color=blue];
m38_36 -> m38_37  [key=0, style=solid];
m38_36 -> m38_38  [key=1, style=dashed, color=darkseagreen4, label=container];
m38_12 -> m38_13  [key=0, style=solid];
m38_44 -> m38_82  [key=0, style=solid];
m38_44 -> m38_84  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m38_44 -> m38_87  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m38_44 -> m38_45  [key=0, style=solid];
m38_87 -> m38_88  [key=0, style=solid];
m38_86 -> m38_87  [key=0, style=solid];
m38_86 -> m38_42  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Linq.JTokenType GetTypeForCloseToken"];
m38_86 -> m38_45  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Linq.JTokenType GetTypeForCloseToken"];
m38_86 -> m38_48  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Linq.JTokenType GetTypeForCloseToken"];
m38_86 -> m38_126  [key=0, style=solid];
m38_86 -> m38_133  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonToken"];
m38_86 -> m38_80  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonToken token"];
m38_88 -> m38_89  [key=0, style=solid];
m38_89 -> m38_44  [key=0, style=bold, color=blue];
m38_89 -> m38_90  [key=0, style=solid];
m38_24 -> m38_25  [key=0, style=solid];
m38_25 -> m38_26  [key=0, style=solid];
m38_25 -> m38_27  [key=2, style=dotted];
m38_25 -> m38_24  [key=0, style=bold, color=blue];
m38_26 -> m38_24  [key=0, style=bold, color=blue];
m38_62 -> m38_64  [key=0, style=solid];
m38_62 -> m38_63  [key=0, style=solid];
m38_64 -> m38_65  [key=0, style=solid];
m38_65 -> m38_66  [key=0, style=solid];
m38_65 -> m38_68  [key=2, style=dotted];
m38_66 -> m38_67  [key=0, style=solid];
m38_67 -> m38_62  [key=0, style=bold, color=blue];
m38_67 -> m38_68  [key=0, style=solid];
m38_6 -> m38_7  [key=0, style=solid];
m38_125 -> m38_126  [key=0, style=solid];
m38_32 -> m38_33  [key=0, style=solid];
m38_32 -> m38_28  [key=0, style=bold, color=blue];
m38_33 -> m38_34  [key=0, style=solid];
m38_33 -> m38_40  [key=0, style=solid];
m38_33 -> m38_102  [key=0, style=solid];
m38_33 -> m38_123  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonToken"];
m38_33 -> m38_107  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsStartToken"];
m38_33 -> m38_122  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsStartToken"];
m38_40 -> m38_41  [key=0, style=solid];
m38_37 -> m38_38  [key=0, style=solid];
m38_37 -> m38_39  [key=0, style=solid];
m38_37 -> m38_35  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m38_37 -> m38_75  [key=1, style=dashed, color=darkseagreen4, label=object];
m38_37 -> m38_76  [key=1, style=dashed, color=darkseagreen4, label=object];
m38_37 -> m38_34  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonToken newToken"];
m38_37 -> m38_74  [key=1, style=dashed, color=darkseagreen4, label=object];
m38_38 -> m38_43  [key=0, style=solid];
m38_38 -> m38_44  [key=2, style=dotted];
m38_38 -> m38_39  [key=0, style=solid];
m38_39 -> m38_43  [key=0, style=solid];
m38_39 -> m38_45  [key=2, style=dotted];
m38_39 -> m38_40  [key=0, style=solid];
m38_39 -> m38_46  [key=0, style=solid];
m38_39 -> m38_49  [key=0, style=solid];
m38_39 -> m38_52  [key=0, style=solid];
m38_39 -> m38_55  [key=0, style=solid];
m38_39 -> m38_58  [key=0, style=solid];
m38_39 -> m38_61  [key=0, style=solid];
m38_41 -> m38_42  [key=0, style=solid];
m38_41 -> m38_46  [key=2, style=dotted];
m38_42 -> m38_43  [key=0, style=solid];
m38_42 -> m38_7  [key=2, style=dotted];
m38_42 -> m38_71  [key=0, style=solid];
m38_43 -> m38_32  [key=0, style=bold, color=blue];
m38_43 -> m38_44  [key=0, style=solid];
m38_102 -> m38_103  [key=0, style=solid];
m38_102 -> m38_108  [key=0, style=solid];
m38_102 -> m38_123  [key=0, style=solid];
m38_102 -> m38_134  [key=0, style=solid];
m38_102 -> m38_68  [key=2, style=dotted];
m38_123 -> m38_124  [key=0, style=solid];
m38_123 -> m38_125  [key=2, style=dotted];
m38_107 -> m38_124  [key=0, style=solid];
m38_107 -> m38_108  [key=0, style=solid];
m38_122 -> m38_124  [key=0, style=solid];
m38_122 -> m38_134  [key=0, style=solid];
m38_122 -> m38_135  [key=2, style=dotted];
m38_103 -> m38_104  [key=0, style=solid];
m38_108 -> m38_109  [key=0, style=solid];
m38_108 -> m38_134  [key=0, style=solid];
m38_108 -> m38_135  [key=2, style=dotted];
m38_106 -> m38_107  [key=0, style=solid];
m38_106 -> m38_134  [key=0, style=solid];
m38_106 -> m38_135  [key=2, style=dotted];
m38_121 -> m38_122  [key=0, style=solid];
m38_104 -> m38_105  [key=0, style=solid];
m38_104 -> m38_134  [key=0, style=solid];
m38_104 -> m38_135  [key=2, style=dotted];
m38_109 -> m38_110  [key=0, style=solid];
m38_105 -> m38_106  [key=0, style=solid];
m38_120 -> m38_121  [key=0, style=solid];
m38_120 -> m38_134  [key=0, style=solid];
m38_120 -> m38_135  [key=2, style=dotted];
m38_110 -> m38_111  [key=0, style=solid];
m38_110 -> m38_134  [key=0, style=solid];
m38_110 -> m38_135  [key=2, style=dotted];
m38_119 -> m38_120  [key=0, style=solid];
m38_111 -> m38_112  [key=0, style=solid];
m38_118 -> m38_119  [key=0, style=solid];
m38_118 -> m38_134  [key=0, style=solid];
m38_118 -> m38_135  [key=2, style=dotted];
m38_112 -> m38_113  [key=0, style=solid];
m38_112 -> m38_134  [key=0, style=solid];
m38_112 -> m38_135  [key=2, style=dotted];
m38_117 -> m38_118  [key=0, style=solid];
m38_113 -> m38_114  [key=0, style=solid];
m38_116 -> m38_117  [key=0, style=solid];
m38_116 -> m38_134  [key=0, style=solid];
m38_116 -> m38_135  [key=2, style=dotted];
m38_114 -> m38_115  [key=0, style=solid];
m38_114 -> m38_134  [key=0, style=solid];
m38_114 -> m38_135  [key=2, style=dotted];
m38_115 -> m38_116  [key=0, style=solid];
m38_124 -> m38_33  [key=0, style=bold, color=blue];
m38_124 -> m38_134  [key=0, style=solid];
m38_124 -> m38_135  [key=2, style=dotted];
m38_46 -> m38_98  [key=0, style=solid];
m38_46 -> m38_104  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m38_46 -> m38_106  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m38_46 -> m38_108  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m38_46 -> m38_110  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m38_46 -> m38_112  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m38_46 -> m38_114  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m38_46 -> m38_116  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m38_46 -> m38_118  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m38_46 -> m38_120  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m38_46 -> m38_122  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m38_46 -> m38_124  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m38_46 -> m38_126  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m38_46 -> m38_128  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m38_46 -> m38_130  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m38_46 -> m38_132  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m38_46 -> m38_133  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m38_46 -> m38_47  [key=0, style=solid];
m38_98 -> m38_99  [key=0, style=solid];
m38_98 -> m38_101  [key=0, style=solid];
m38_98 -> m38_103  [key=0, style=solid];
m38_98 -> m38_105  [key=0, style=solid];
m38_98 -> m38_107  [key=0, style=solid];
m38_98 -> m38_109  [key=0, style=solid];
m38_98 -> m38_111  [key=0, style=solid];
m38_98 -> m38_113  [key=0, style=solid];
m38_98 -> m38_115  [key=0, style=solid];
m38_98 -> m38_117  [key=0, style=solid];
m38_98 -> m38_119  [key=0, style=solid];
m38_98 -> m38_121  [key=0, style=solid];
m38_98 -> m38_123  [key=0, style=solid];
m38_98 -> m38_125  [key=0, style=solid];
m38_98 -> m38_127  [key=0, style=solid];
m38_98 -> m38_129  [key=0, style=solid];
m38_98 -> m38_131  [key=0, style=solid];
m38_98 -> m38_133  [key=0, style=solid];
m38_126 -> m38_134  [key=0, style=solid];
m38_126 -> m38_135  [key=2, style=dotted];
m38_126 -> m38_127  [key=0, style=solid];
m38_126 -> m38_129  [key=0, style=solid];
m38_126 -> m38_131  [key=0, style=solid];
m38_126 -> m38_133  [key=0, style=solid];
m38_128 -> m38_134  [key=0, style=solid];
m38_128 -> m38_136  [key=2, style=dotted];
m38_128 -> m38_135  [key=2, style=dotted];
m38_130 -> m38_134  [key=0, style=solid];
m38_130 -> m38_136  [key=2, style=dotted];
m38_130 -> m38_135  [key=2, style=dotted];
m38_132 -> m38_134  [key=0, style=solid];
m38_132 -> m38_136  [key=2, style=dotted];
m38_132 -> m38_135  [key=2, style=dotted];
m38_133 -> m38_134  [key=0, style=solid];
m38_133 -> m38_81  [key=2, style=dotted];
m38_133 -> m38_87  [key=2, style=dotted];
m38_99 -> m38_100  [key=0, style=solid];
m38_99 -> m38_101  [key=0, style=solid];
m38_101 -> m38_102  [key=0, style=solid];
m38_101 -> m38_89  [key=0, style=bold, color=blue];
m38_127 -> m38_128  [key=0, style=solid];
m38_129 -> m38_130  [key=0, style=solid];
m38_131 -> m38_132  [key=0, style=solid];
m38_100 -> m38_134  [key=0, style=solid];
m38_100 -> m38_68  [key=2, style=dotted];
m38_100 -> m38_101  [key=0, style=solid];
m38_100 -> m38_87  [key=2, style=dotted];
m38_134 -> m38_46  [key=0, style=bold, color=blue];
m38_134 -> m38_86  [key=0, style=bold, color=blue];
m38_47 -> m38_48  [key=0, style=solid];
m38_48 -> m38_49  [key=0, style=solid];
m38_48 -> m38_7  [key=2, style=dotted];
m38_48 -> m38_71  [key=0, style=solid];
m38_49 -> m38_50  [key=0, style=solid];
m38_49 -> m38_32  [key=2, style=dotted];
m38_50 -> m38_47  [key=0, style=bold, color=blue];
m38_50 -> m38_51  [key=0, style=solid];
m38_50 -> m38_80  [key=2, style=dotted];
m38_15 -> m38_16  [key=0, style=solid];
m38_15 -> m38_21  [key=2, style=dotted];
m38_63 -> m38_90  [key=0, style=solid];
m38_63 -> m38_93  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m38_63 -> m38_94  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m38_63 -> m38_96  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m38_63 -> m38_64  [key=0, style=solid];
m38_90 -> m38_91  [key=0, style=solid];
m38_90 -> m38_69  [key=2, style=dotted];
m38_90 -> m38_92  [key=1, style=dashed, color=darkseagreen4, label=endToken];
m38_90 -> m38_20  [key=2, style=dotted];
m38_90 -> m38_100  [key=1, style=dashed, color=darkseagreen4, label=currentObject];
m38_93 -> m38_94  [key=0, style=solid];
m38_93 -> m38_101  [key=0, style=solid];
m38_94 -> m38_95  [key=0, style=solid];
m38_96 -> m38_97  [key=0, style=solid];
m38_96 -> m38_45  [key=2, style=dotted];
m38_91 -> m38_92  [key=0, style=solid];
m38_91 -> m38_96  [key=0, style=solid];
m38_91 -> m38_94  [key=0, style=solid];
m38_91 -> m38_98  [key=0, style=solid];
m38_91 -> m38_100  [key=0, style=solid];
m38_92 -> m38_93  [key=0, style=solid];
m38_92 -> m38_68  [key=2, style=dotted];
m38_95 -> m38_97  [key=0, style=solid];
m38_95 -> m38_101  [key=0, style=solid];
m38_97 -> m38_63  [key=0, style=bold, color=blue];
m38_97 -> m38_101  [key=0, style=solid];
m38_142 -> m38_143  [key=0, style=solid];
m38_142 -> m38_145  [key=0, style=solid];
m38_143 -> m38_144  [key=0, style=solid];
m38_144 -> m38_145  [key=0, style=solid];
m38_144 -> m38_146  [key=2, style=dotted];
m38_145 -> m38_146  [key=0, style=solid];
m38_145 -> m38_140  [key=0, style=bold, color=blue];
m38_147 -> m38_142  [key=0, style=bold, color=blue];
m38_147 -> m38_2  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenReader"];
m38_147 -> m38_6  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenReader"];
m38_147 -> m38_9  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenReader"];
m38_147 -> m38_13  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenReader"];
m38_147 -> m38_17  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenReader"];
m38_147 -> m38_21  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenReader"];
m38_147 -> m38_25  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenReader"];
m38_147 -> m38_29  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenReader"];
m38_147 -> m38_33  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenReader"];
m38_147 -> m38_34  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenReader"];
m38_147 -> m38_36  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenReader"];
m38_147 -> m38_37  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenReader"];
m38_147 -> m38_38  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenReader"];
m38_147 -> m38_39  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenReader"];
m38_147 -> m38_40  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenReader"];
m38_147 -> m38_41  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenReader"];
m38_147 -> m38_48  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenReader"];
m38_147 -> m38_49  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenReader"];
m38_147 -> m38_51  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenReader"];
m38_147 -> m38_52  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenReader"];
m38_147 -> m38_56  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenReader"];
m38_147 -> m38_57  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenReader"];
m38_147 -> m38_58  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenReader"];
m38_147 -> m38_59  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenReader"];
m38_147 -> m38_64  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenReader"];
m38_147 -> m38_65  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenReader"];
m38_147 -> m38_84  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenReader"];
m38_147 -> m38_85  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenReader"];
m38_147 -> m38_86  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenReader"];
m38_147 -> m38_87  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenReader"];
m38_147 -> m38_90  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenReader"];
m38_147 -> m38_92  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenReader"];
m38_147 -> m38_93  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenReader"];
m38_147 -> m38_94  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenReader"];
m38_147 -> m38_96  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenReader"];
m38_147 -> m38_100  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenReader"];
m38_147 -> m38_102  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenReader"];
m38_147 -> m38_104  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenReader"];
m38_147 -> m38_106  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenReader"];
m38_147 -> m38_108  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenReader"];
m38_147 -> m38_110  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenReader"];
m38_147 -> m38_112  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenReader"];
m38_147 -> m38_114  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenReader"];
m38_147 -> m38_116  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenReader"];
m38_147 -> m38_118  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenReader"];
m38_147 -> m38_120  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenReader"];
m38_147 -> m38_122  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenReader"];
m38_147 -> m38_124  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenReader"];
m38_147 -> m38_126  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenReader"];
m38_147 -> m38_128  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenReader"];
m38_147 -> m38_130  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenReader"];
m38_147 -> m38_132  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenReader"];
m38_147 -> m38_141  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenReader"];
m38_147 -> m38_143  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenReader"];
m38_69 -> m38_70  [key=0, style=solid];
m38_69 -> m38_79  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m38_70 -> m38_71  [key=0, style=solid];
m38_70 -> m38_73  [key=0, style=solid];
m38_70 -> m38_75  [key=0, style=solid];
m38_70 -> m38_77  [key=0, style=solid];
m38_70 -> m38_79  [key=0, style=solid];
m38_79 -> m38_80  [key=0, style=solid];
m38_79 -> m38_81  [key=2, style=dotted];
m38_79 -> m38_37  [key=0, style=bold, color=blue];
m38_71 -> m38_72  [key=0, style=solid];
m38_71 -> m38_20  [key=2, style=dotted];
m38_73 -> m38_74  [key=0, style=solid];
m38_73 -> m38_13  [key=2, style=dotted];
m38_75 -> m38_76  [key=0, style=solid];
m38_77 -> m38_78  [key=0, style=solid];
m38_72 -> m38_80  [key=0, style=solid];
m38_72 -> m38_73  [key=0, style=solid];
m38_72 -> m38_74  [key=0, style=solid];
m38_74 -> m38_80  [key=0, style=solid];
m38_74 -> m38_75  [key=0, style=solid];
m38_74 -> m38_77  [key=0, style=solid];
m38_76 -> m38_80  [key=0, style=solid];
m38_76 -> m38_79  [key=0, style=solid];
m38_76 -> m38_81  [key=2, style=dotted];
m38_78 -> m38_80  [key=0, style=solid];
m38_78 -> m38_79  [key=0, style=solid];
m38_135 -> m38_136  [key=0, style=solid];
m38_28 -> m38_29  [key=0, style=solid];
m38_29 -> m38_30  [key=0, style=solid];
m38_29 -> m38_32  [key=0, style=solid];
m38_29 -> m38_33  [key=2, style=dotted];
m38_29 -> m38_31  [key=2, style=dotted];
m38_30 -> m38_31  [key=0, style=solid];
m38_30 -> m38_28  [key=0, style=bold, color=blue];
m38_19 -> m38_13  [key=0, style=bold, color=blue];
m38_23 -> m38_20  [key=0, style=bold, color=blue];
m38_13 -> m38_14  [key=0, style=solid];
m38_13 -> m38_15  [key=2, style=dotted];
m38_14 -> m38_12  [key=0, style=bold, color=blue];
m38_14 -> m38_18  [key=1, style=dashed, color=darkseagreen4, label=value];
m38_14 -> m38_20  [key=2, style=dotted];
m38_14 -> m38_15  [key=0, style=solid];
m38_148 -> m38_10  [key=1, style=dashed, color=green, label="Newtonsoft.Json.JsonReader"];
m38_148 -> m38_17  [key=1, style=dashed, color=green, label="Newtonsoft.Json.JsonReader"];
m38_148 -> m38_22  [key=1, style=dashed, color=green, label="Newtonsoft.Json.JsonReader"];
m38_148 -> m38_1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m38_148 -> m38_2  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m38_148 -> m38_3  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m38_148 -> m38_4  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m38_148 -> m38_8  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m38_148 -> m38_9  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m38_148 -> m38_14  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m38_148 -> m38_15  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m38_148 -> m38_16  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m38_148 -> m38_29  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m38_148 -> m38_30  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m38_148 -> m38_31  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m38_148 -> m38_35  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m38_148 -> m38_38  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m38_148 -> m38_41  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m38_148 -> m38_42  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m38_148 -> m38_44  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m38_148 -> m38_45  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m38_148 -> m38_47  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m38_148 -> m38_48  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m38_148 -> m38_50  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m38_148 -> m38_51  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m38_148 -> m38_53  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m38_148 -> m38_54  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m38_148 -> m38_56  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m38_148 -> m38_57  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m38_148 -> m38_59  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m38_148 -> m38_60  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m38_148 -> m38_70  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m38_148 -> m38_71  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m38_148 -> m38_72  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m38_148 -> m38_73  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m38_148 -> m38_75  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m38_148 -> m38_76  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m38_148 -> m38_77  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m38_148 -> m38_78  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m38_148 -> m38_82  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m38_148 -> m38_83  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m38_148 -> m38_90  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m38_148 -> m38_93  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m38_148 -> m38_95  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m38_148 -> m38_97  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m38_148 -> m38_99  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m38_148 -> m38_136  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m38_148 -> m38_139  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m38_148 -> m38_140  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m38_148 -> m38_143  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m38_148 -> m38_144  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m38_148 -> m38_145  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m38_148 -> m38_146  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m39_56 -> m39_57  [key=0, style=solid, color=green];
m39_56 -> m39_55  [key=3, color=darkorchid, style=bold, label="method methodReturn object Deserialize"];
m39_56 -> m39_58  [key=1, style=dashed, color=darkseagreen4, label=currentToken];
m39_56 -> m39_59  [key=1, style=dashed, color=darkseagreen4, label=currentToken];
m39_57 -> m39_58  [key=0, style=solid, color=green];
m39_57 -> m39_39  [key=2, style=dotted, color=green];
m39_57 -> m39_55  [key=2, style=dotted, color=green];
m39_57 -> m39_48  [key=0, style=solid];
m39_58 -> m39_56  [key=0, style=bold, color=blue];
m39_58 -> m39_59  [key=0, style=solid];
m39_58 -> m39_60  [key=0, style=solid];
m39_90 -> m39_101  [key=0, style=solid];
m39_90 -> m39_102  [key=2, style=dotted];
m39_43 -> m39_40  [key=3, color=darkorchid, style=bold, label="Parameter variable object target"];
m39_43 -> m39_44  [key=0, style=solid];
m39_43 -> m39_45  [key=1, style=dashed, color=darkseagreen4, label=object];
m39_43 -> m39_47  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m39_43 -> m39_89  [key=2, style=dotted];
m39_43 -> m39_60  [key=1, style=dashed, color=darkseagreen4, label=resolvedSchema];
m39_43 -> m39_62  [key=1, style=dashed, color=darkseagreen4, label=resolvedSchema];
m39_46 -> m39_47  [key=0, style=solid];
m39_46 -> m39_50  [key=2, style=dotted];
m39_46 -> m39_90  [key=2, style=dotted];
m39_46 -> m39_91  [key=2, style=dotted];
m39_46 -> m39_48  [key=1, style=dashed, color=darkseagreen4, label=escapedParts];
m39_45 -> m39_46  [key=0, style=solid];
m39_45 -> m39_49  [key=2, style=dotted];
m39_45 -> m39_60  [key=0, style=solid];
m39_47 -> m39_48  [key=0, style=solid];
m39_47 -> m39_51  [key=2, style=dotted];
m39_47 -> m39_50  [key=1, style=dashed, color=darkseagreen4, label=currentToken];
m39_47 -> m39_52  [key=1, style=dashed, color=darkseagreen4, label=currentToken];
m39_47 -> m39_54  [key=1, style=dashed, color=darkseagreen4, label=currentToken];
m39_47 -> m39_55  [key=1, style=dashed, color=darkseagreen4, label=currentToken];
m39_47 -> m39_57  [key=1, style=dashed, color=darkseagreen4, label=currentToken];
m39_47 -> m39_58  [key=1, style=dashed, color=darkseagreen4, label=currentToken];
m39_47 -> m39_59  [key=1, style=dashed, color=darkseagreen4, label=currentToken];
m39_44 -> m39_45  [key=0, style=solid];
m39_44 -> m39_49  [key=2, style=dotted];
m39_44 -> m39_62  [key=0, style=solid];
m39_48 -> m39_43  [key=0, style=bold, color=blue];
m39_48 -> m39_49  [key=0, style=solid];
m39_48 -> m39_58  [key=0, style=solid];
m39_67 -> m39_68  [key=0, style=solid];
m39_67 -> m39_69  [key=1, style=dashed, color=darkseagreen4, label=i];
m39_67 -> m39_70  [key=1, style=dashed, color=darkseagreen4, label=i];
m39_68 -> m39_69  [key=0, style=solid];
m39_68 -> m39_70  [key=2, style=dotted];
m39_68 -> m39_71  [key=2, style=dotted];
m39_69 -> m39_67  [key=0, style=bold, color=blue];
m39_69 -> m39_70  [key=0, style=solid];
m39_69 -> m39_32  [key=2, style=dotted];
m39_70 -> m39_68  [key=0, style=solid];
m39_70 -> m39_70  [key=1, style=dashed, color=darkseagreen4, label=i];
m39_22 -> m39_23  [key=0, style=solid];
m39_50 -> m39_51  [key=0, style=solid];
m39_50 -> m39_52  [key=0, style=solid];
m39_93 -> m39_93  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m39_93 -> m39_94  [key=0, style=solid];
m39_93 -> m39_99  [key=0, style=solid];
m39_23 -> m39_24  [key=0, style=solid];
m39_24 -> m39_25  [key=0, style=solid];
m39_24 -> m39_30  [key=2, style=dotted];
m39_24 -> m39_26  [key=1, style=dashed, color=darkseagreen4, label=schemaToken];
m39_25 -> m39_26  [key=0, style=solid];
m39_26 -> m39_27  [key=0, style=solid];
m39_26 -> m39_31  [key=2, style=dotted];
m39_26 -> m39_28  [key=1, style=dashed, color=darkseagreen4, label=schema];
m39_27 -> m39_28  [key=0, style=solid];
m39_27 -> m39_32  [key=2, style=dotted];
m39_28 -> m39_29  [key=0, style=solid];
m39_28 -> m39_30  [key=0, style=solid];
m39_29 -> m39_23  [key=0, style=bold, color=blue];
m39_29 -> m39_30  [key=0, style=solid];
m39_88 -> m39_39  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter> converters"];
m39_88 -> m39_89  [key=0, style=solid];
m39_88 -> m39_91  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>"];
m39_88 -> m39_93  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>"];
m39_88 -> m39_94  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>"];
m39_88 -> m39_95  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m39_88 -> m39_81  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonConverter matchingConverter"];
m39_88 -> m39_83  [key=3, color=darkorchid, style=bold, label="method methodReturn bool HasMatchingConverter"];
m39_88 -> m39_86  [key=3, color=darkorchid, style=bold, label="method methodReturn bool HasMatchingConverter"];
m39_102 -> m39_103  [key=0, style=solid];
m39_102 -> m39_118  [key=2, style=dotted];
m39_102 -> m39_104  [key=1, style=dashed, color=darkseagreen4, label=deferredSchema];
m39_186 -> m39_207  [key=0, style=solid];
m39_186 -> m39_208  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m39_186 -> m39_209  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m39_207 -> m39_208  [key=0, style=solid];
m39_207 -> m39_209  [key=0, style=solid];
m39_208 -> m39_210  [key=0, style=solid];
m39_209 -> m39_210  [key=0, style=solid];
m39_209 -> m39_31  [key=2, style=dotted];
m39_210 -> m39_186  [key=0, style=bold, color=blue];
m39_61 -> m39_55  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type objectType"];
m39_61 -> m39_62  [key=0, style=solid];
m39_61 -> m39_64  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m39_61 -> m39_87  [key=0, style=solid];
m39_61 -> m39_94  [key=2, style=dotted];
m39_61 -> m39_95  [key=2, style=dotted];
m39_63 -> m39_64  [key=0, style=solid];
m39_63 -> m39_50  [key=2, style=dotted];
m39_63 -> m39_65  [key=0, style=solid];
m39_62 -> m39_63  [key=0, style=solid];
m39_62 -> m39_49  [key=2, style=dotted];
m39_62 -> m39_64  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchema"];
m39_62 -> m39_65  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchema"];
m39_62 -> m39_66  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchema"];
m39_62 -> m39_68  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchema"];
m39_62 -> m39_69  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchema"];
m39_62 -> m39_71  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchema"];
m39_62 -> m39_73  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchema"];
m39_62 -> m39_74  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchema"];
m39_62 -> m39_76  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchema"];
m39_62 -> m39_77  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchema"];
m39_62 -> m39_78  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchema"];
m39_62 -> m39_79  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchema"];
m39_62 -> m39_80  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchema"];
m39_62 -> m39_81  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchema"];
m39_62 -> m39_82  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchema"];
m39_62 -> m39_83  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchema"];
m39_62 -> m39_84  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchema"];
m39_62 -> m39_85  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchema"];
m39_62 -> m39_86  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchema"];
m39_64 -> m39_65  [key=0, style=solid];
m39_64 -> m39_66  [key=2, style=dotted];
m39_64 -> m39_87  [key=0, style=solid];
m39_65 -> m39_61  [key=0, style=bold, color=blue];
m39_65 -> m39_66  [key=0, style=solid];
m39_66 -> m39_67  [key=0, style=solid];
m39_66 -> m39_71  [key=0, style=solid];
m39_34 -> m39_35  [key=0, style=solid];
m39_34 -> m39_36  [key=2, style=dotted];
m39_34 -> m39_37  [key=2, style=dotted];
m39_184 -> m39_215  [key=0, style=solid];
m39_184 -> m39_216  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m39_184 -> m39_217  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m39_184 -> m39_218  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m39_215 -> m39_216  [key=0, style=solid];
m39_215 -> m39_6  [key=2, style=dotted];
m39_215 -> m39_219  [key=1, style=dashed, color=darkseagreen4, label=properties];
m39_215 -> m39_221  [key=1, style=dashed, color=darkseagreen4, label=properties];
m39_215 -> m39_222  [key=1, style=dashed, color=darkseagreen4, label=properties];
m39_216 -> m39_217  [key=0, style=solid];
m39_216 -> m39_218  [key=0, style=solid];
m39_217 -> m39_223  [key=0, style=solid];
m39_217 -> m39_95  [key=2, style=dotted];
m39_217 -> m39_116  [key=2, style=dotted];
m39_218 -> m39_219  [key=0, style=solid];
m39_218 -> m39_222  [key=0, style=solid];
m39_218 -> m39_220  [key=1, style=dashed, color=darkseagreen4, label=propertyToken];
m39_218 -> m39_221  [key=1, style=dashed, color=darkseagreen4, label=propertyToken];
m39_219 -> m39_220  [key=0, style=solid];
m39_219 -> m39_221  [key=0, style=solid];
m39_219 -> m39_224  [key=2, style=dotted];
m39_221 -> m39_218  [key=0, style=solid];
m39_221 -> m39_31  [key=2, style=dotted];
m39_221 -> m39_14  [key=2, style=dotted];
m39_222 -> m39_223  [key=0, style=solid];
m39_220 -> m39_223  [key=0, style=solid];
m39_220 -> m39_94  [key=2, style=dotted];
m39_220 -> m39_95  [key=2, style=dotted];
m39_223 -> m39_184  [key=0, style=bold, color=blue];
m39_79 -> m39_80  [key=0, style=solid];
m39_79 -> m39_81  [key=0, style=solid];
m39_79 -> m39_96  [key=2, style=dotted];
m39_49 -> m39_50  [key=0, style=solid];
m39_49 -> m39_33  [key=2, style=dotted];
m39_49 -> m39_51  [key=1, style=dashed, color=darkseagreen4, label=part];
m39_49 -> m39_54  [key=1, style=dashed, color=darkseagreen4, label=part];
m39_35 -> m39_33  [key=0, style=bold, color=blue];
m39_80 -> m39_79  [key=0, style=solid];
m39_80 -> m39_32  [key=2, style=dotted];
m39_80 -> m39_80  [key=1, style=dashed, color=darkseagreen4, label=patternProperty];
m39_40 -> m39_41  [key=0, style=solid];
m39_40 -> m39_36  [key=3, color=darkorchid, style=bold, label="Parameter variable object target"];
m39_40 -> m39_88  [key=2, style=dotted];
m39_40 -> m39_45  [key=1, style=dashed, color=darkseagreen4, label=locationReference];
m39_41 -> m39_42  [key=0, style=solid];
m39_41 -> m39_43  [key=2, style=dotted];
m39_42 -> m39_40  [key=0, style=bold, color=blue];
m39_42 -> m39_43  [key=0, style=solid];
m39_42 -> m39_33  [key=2, style=dotted];
m39_42 -> m39_42  [key=1, style=dashed, color=darkseagreen4, label=reference];
m39_15 -> m39_16  [key=0, style=solid, color=red];
m39_15 -> m39_35  [key=2, style=dotted];
m39_16 -> m39_17  [key=0, style=solid, color=red];
m39_16 -> m39_19  [key=1, style=dashed, color=red, label=poppedSchema];
m39_17 -> m39_18  [key=0, style=solid, color=red];
m39_17 -> m39_21  [key=2, style=dotted, color=red];
m39_19 -> m39_20  [key=0, style=solid];
m39_18 -> m39_19  [key=0, style=solid, color=red];
m39_18 -> m39_22  [key=2, style=dotted, color=red];
m39_20 -> m39_15  [key=0, style=bold, color=blue];
m39_20 -> m39_21  [key=0, style=solid];
m39_185 -> m39_225  [key=0, style=solid];
m39_185 -> m39_226  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m39_185 -> m39_228  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m39_185 -> m39_232  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m39_185 -> m39_234  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m39_225 -> m39_226  [key=0, style=solid];
m39_225 -> m39_5  [key=2, style=dotted];
m39_226 -> m39_227  [key=0, style=solid];
m39_226 -> m39_230  [key=0, style=solid];
m39_226 -> m39_234  [key=0, style=solid];
m39_228 -> m39_229  [key=0, style=solid];
m39_228 -> m39_31  [key=2, style=dotted];
m39_228 -> m39_13  [key=2, style=dotted];
m39_232 -> m39_233  [key=0, style=solid];
m39_232 -> m39_235  [key=0, style=solid];
m39_234 -> m39_235  [key=0, style=solid];
m39_234 -> m39_95  [key=2, style=dotted];
m39_234 -> m39_116  [key=2, style=dotted];
m39_227 -> m39_228  [key=0, style=solid];
m39_230 -> m39_231  [key=0, style=solid];
m39_229 -> m39_235  [key=0, style=solid];
m39_231 -> m39_232  [key=0, style=solid];
m39_233 -> m39_232  [key=0, style=solid];
m39_233 -> m39_31  [key=2, style=dotted];
m39_233 -> m39_13  [key=2, style=dotted];
m39_235 -> m39_185  [key=0, style=bold, color=blue];
m39_5 -> m39_6  [key=0, style=solid];
m39_30 -> m39_31  [key=0, style=solid];
m39_30 -> m39_32  [key=0, style=solid];
m39_104 -> m39_105  [key=0, style=solid];
m39_104 -> m39_107  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m39_104 -> m39_115  [key=0, style=solid];
m39_105 -> m39_106  [key=0, style=solid];
m39_105 -> m39_107  [key=1, style=dashed, color=darkseagreen4, label=location];
m39_105 -> m39_37  [key=2, style=dotted];
m39_105 -> m39_108  [key=1, style=dashed, color=darkseagreen4, label=location];
m39_107 -> m39_108  [key=0, style=solid];
m39_107 -> m39_109  [key=2, style=dotted];
m39_107 -> m39_107  [key=1, style=dashed, color=darkseagreen4, label=location];
m39_106 -> m39_107  [key=0, style=solid];
m39_106 -> m39_108  [key=0, style=solid];
m39_106 -> m39_119  [key=2, style=dotted];
m39_108 -> m39_104  [key=0, style=bold, color=blue];
m39_108 -> m39_109  [key=0, style=solid];
m39_108 -> m39_108  [key=1, style=dashed, color=darkseagreen4, label=location];
m39_108 -> m39_110  [key=1, style=dashed, color=darkseagreen4, label=location];
m39_108 -> m39_112  [key=1, style=dashed, color=darkseagreen4, label=location];
m39_103 -> m39_104  [key=0, style=solid];
m39_189 -> m39_201  [key=0, style=solid];
m39_189 -> m39_202  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m39_189 -> m39_204  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m39_201 -> m39_202  [key=0, style=solid];
m39_201 -> m39_203  [key=0, style=solid];
m39_202 -> m39_206  [key=0, style=solid];
m39_202 -> m39_95  [key=2, style=dotted];
m39_202 -> m39_116  [key=2, style=dotted];
m39_204 -> m39_205  [key=0, style=solid];
m39_204 -> m39_206  [key=0, style=solid];
m39_203 -> m39_204  [key=0, style=solid];
m39_203 -> m39_5  [key=2, style=dotted];
m39_205 -> m39_204  [key=0, style=solid];
m39_205 -> m39_188  [key=2, style=dotted];
m39_205 -> m39_13  [key=2, style=dotted];
m39_206 -> m39_189  [key=0, style=bold, color=blue];
m39_36 -> m39_37  [key=0, style=solid];
m39_13 -> m39_14  [key=0, style=solid];
m39_13 -> m39_32  [key=0, style=solid];
m39_190 -> m39_191  [key=0, style=solid];
m39_190 -> m39_192  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m39_190 -> m39_193  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m39_190 -> m39_195  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m39_191 -> m39_192  [key=0, style=solid];
m39_191 -> m39_5  [key=2, style=dotted];
m39_191 -> m39_194  [key=1, style=dashed, color=darkseagreen4, label=schemas];
m39_191 -> m39_197  [key=1, style=dashed, color=darkseagreen4, label=schemas];
m39_191 -> m39_198  [key=1, style=dashed, color=darkseagreen4, label=schemas];
m39_191 -> m39_199  [key=1, style=dashed, color=darkseagreen4, label=schemas];
m39_192 -> m39_193  [key=0, style=solid];
m39_192 -> m39_195  [key=0, style=solid];
m39_193 -> m39_194  [key=0, style=solid];
m39_193 -> m39_198  [key=0, style=solid];
m39_195 -> m39_196  [key=0, style=solid];
m39_195 -> m39_31  [key=2, style=dotted];
m39_195 -> m39_197  [key=1, style=dashed, color=darkseagreen4, label=schema];
m39_194 -> m39_193  [key=0, style=solid];
m39_194 -> m39_31  [key=2, style=dotted];
m39_194 -> m39_13  [key=2, style=dotted];
m39_197 -> m39_198  [key=0, style=solid];
m39_197 -> m39_13  [key=2, style=dotted];
m39_198 -> m39_199  [key=0, style=solid];
m39_198 -> m39_200  [key=0, style=solid];
m39_199 -> m39_200  [key=0, style=solid];
m39_196 -> m39_197  [key=0, style=solid];
m39_196 -> m39_198  [key=0, style=solid];
m39_200 -> m39_190  [key=0, style=bold, color=blue];
m39_109 -> m39_110  [key=0, style=solid];
m39_51 -> m39_57  [key=0, style=solid];
m39_51 -> m39_51  [key=1, style=dashed, color=darkseagreen4, label=currentToken];
m39_51 -> m39_58  [key=1, style=dashed, color=darkseagreen4, label=currentToken];
m39_51 -> m39_59  [key=1, style=dashed, color=darkseagreen4, label=currentToken];
m39_92 -> m39_93  [key=0, style=solid];
m39_92 -> m39_94  [key=1, style=dashed, color=darkseagreen4, label=i];
m39_92 -> m39_98  [key=1, style=dashed, color=darkseagreen4, label=i];
m39_254 -> m39_255  [key=0, style=solid];
m39_254 -> m39_259  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaType"];
m39_255 -> m39_256  [key=0, style=solid];
m39_255 -> m39_257  [key=2, style=dotted];
m39_255 -> m39_258  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m39_256 -> m39_254  [key=0, style=bold, color=blue];
m39_33 -> m39_34  [key=0, style=solid];
m39_33 -> m39_11  [key=0, style=bold, color=blue];
m39_94 -> m39_95  [key=0, style=solid];
m39_94 -> m39_96  [key=1, style=dashed, color=darkseagreen4, label=converter];
m39_52 -> m39_55  [key=3, color=darkorchid, style=bold, label="method methodReturn object Deserialize"];
m39_52 -> m39_53  [key=0, style=solid];
m39_52 -> m39_57  [key=0, style=solid];
m39_53 -> m39_55  [key=2, style=dotted];
m39_53 -> m39_54  [key=0, style=solid];
m39_54 -> m39_52  [key=0, style=bold, color=blue];
m39_54 -> m39_55  [key=0, style=solid];
m39_54 -> m39_56  [key=0, style=solid];
m39_54 -> m39_92  [key=2, style=dotted];
m39_54 -> m39_93  [key=2, style=dotted];
m39_54 -> m39_54  [key=1, style=dashed, color=darkseagreen4, label=index];
m39_39 -> m39_40  [key=0, style=solid];
m39_39 -> m39_42  [key=1, style=dashed, color=darkseagreen4, label=reference];
m39_39 -> m39_43  [key=1, style=dashed, color=darkseagreen4, label=reference];
m39_248 -> m39_249  [key=0, style=solid];
m39_248 -> m39_250  [key=1, style=dashed, color=darkseagreen4, label=string];
m39_248 -> m39_251  [key=1, style=dashed, color=darkseagreen4, label=string];
m39_249 -> m39_250  [key=0, style=solid];
m39_250 -> m39_251  [key=0, style=solid];
m39_250 -> m39_252  [key=0, style=solid];
m39_250 -> m39_120  [key=2, style=dotted];
m39_251 -> m39_253  [key=0, style=solid];
m39_251 -> m39_94  [key=2, style=dotted];
m39_251 -> m39_95  [key=2, style=dotted];
m39_252 -> m39_253  [key=0, style=solid];
m39_253 -> m39_248  [key=0, style=bold, color=blue];
m39_55 -> m39_56  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type objectType"];
m39_55 -> m39_59  [key=0, style=solid];
m39_55 -> m39_52  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonReader reader"];
m39_55 -> m39_53  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type objectType"];
m39_55 -> m39_61  [key=3, color=darkorchid, style=bold, label="method methodReturn object Deserialize"];
m39_55 -> m39_57  [key=0, style=solid];
m39_55 -> m39_55  [key=1, style=dashed, color=darkseagreen4, label=currentToken];
m39_55 -> m39_58  [key=1, style=dashed, color=darkseagreen4, label=currentToken];
m39_59 -> m39_60  [key=0, style=solid];
m39_59 -> m39_61  [key=2, style=dotted];
m39_59 -> m39_31  [key=2, style=dotted];
m39_59 -> m39_62  [key=1, style=dashed, color=darkseagreen4, label=resolvedSchema];
m39_60 -> m39_55  [key=0, style=bold, color=blue];
m39_60 -> m39_61  [key=0, style=solid];
m39_60 -> m39_62  [key=0, style=solid];
m39_0 -> m39_1  [key=0, style=solid];
m39_0 -> m39_3  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaResolver"];
m39_1 -> m39_2  [key=0, style=solid];
m39_1 -> m39_5  [key=2, style=dotted];
m39_2 -> m39_3  [key=0, style=solid];
m39_2 -> m39_6  [key=2, style=dotted];
m39_3 -> m39_4  [key=0, style=solid];
m39_4 -> m39_5  [key=0, style=solid];
m39_4 -> m39_0  [key=0, style=bold, color=blue];
m39_6 -> m39_7  [key=0, style=solid];
m39_7 -> m39_8  [key=0, style=solid, color=red];
m39_7 -> m39_9  [key=1, style=dashed, color=red, label="Newtonsoft.Json.Schema.JsonSchema"];
m39_7 -> m39_10  [key=1, style=dashed, color=red, label="Newtonsoft.Json.Schema.JsonSchema"];
m39_7 -> m39_11  [key=1, style=dashed, color=red, label="Newtonsoft.Json.Schema.JsonSchema"];
m39_8 -> m39_9  [key=0, style=solid, color=red];
m39_9 -> m39_10  [key=0, style=solid, color=red];
m39_9 -> m39_13  [key=2, style=dotted, color=red];
m39_10 -> m39_0  [key=0, style=bold, color=blue];
m39_10 -> m39_11  [key=0, style=solid, color=red];
m39_10 -> m39_13  [key=2, style=dotted, color=red];
m39_258 -> m39_259  [key=0, style=solid];
m39_259 -> m39_260  [key=0, style=solid];
m39_259 -> m39_259  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Schema.JsonSchemaType>"];
m39_260 -> m39_258  [key=0, style=bold, color=blue];
m39_81 -> m39_82  [key=0, style=solid];
m39_81 -> m39_84  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m39_81 -> m39_83  [key=3, color=darkorchid, style=bold, label="method methodReturn bool HasMatchingConverter"];
m39_81 -> m39_86  [key=3, color=darkorchid, style=bold, label="method methodReturn bool HasMatchingConverter"];
m39_82 -> m39_83  [key=0, style=solid];
m39_82 -> m39_84  [key=0, style=solid];
m39_82 -> m39_88  [key=2, style=dotted];
m39_82 -> m39_96  [key=2, style=dotted];
m39_83 -> m39_87  [key=0, style=solid];
m39_83 -> m39_82  [key=0, style=solid];
m39_83 -> m39_32  [key=2, style=dotted];
m39_83 -> m39_83  [key=1, style=dashed, color=darkseagreen4, label=property];
m39_84 -> m39_88  [key=2, style=dotted];
m39_84 -> m39_85  [key=0, style=solid];
m39_84 -> m39_86  [key=0, style=solid];
m39_84 -> m39_87  [key=1, style=dashed, color=darkseagreen4, label="out Newtonsoft.Json.JsonConverter"];
m39_86 -> m39_87  [key=0, style=solid];
m39_85 -> m39_87  [key=0, style=solid];
m39_85 -> m39_86  [key=0, style=solid];
m39_85 -> m39_32  [key=2, style=dotted];
m39_87 -> m39_81  [key=0, style=bold, color=blue];
m39_87 -> m39_32  [key=0, style=bold, color=blue];
m39_14 -> m39_15  [key=0, style=solid];
m39_14 -> m39_16  [key=0, style=solid];
m39_14 -> m39_34  [key=2, style=dotted];
m39_187 -> m39_211  [key=0, style=solid];
m39_187 -> m39_212  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m39_187 -> m39_213  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m39_211 -> m39_212  [key=0, style=solid];
m39_211 -> m39_213  [key=0, style=solid];
m39_212 -> m39_214  [key=0, style=solid];
m39_213 -> m39_214  [key=0, style=solid];
m39_213 -> m39_31  [key=2, style=dotted];
m39_214 -> m39_187  [key=0, style=bold, color=blue];
m39_89 -> m39_90  [key=0, style=solid];
m39_89 -> m39_91  [key=0, style=solid];
m39_74 -> m39_71  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m39_74 -> m39_75  [key=0, style=solid];
m39_74 -> m39_77  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m39_74 -> m39_32  [key=2, style=dotted];
m39_76 -> m39_77  [key=0, style=solid];
m39_76 -> m39_79  [key=2, style=dotted];
m39_76 -> m39_78  [key=0, style=solid];
m39_75 -> m39_76  [key=0, style=solid];
m39_75 -> m39_49  [key=2, style=dotted];
m39_75 -> m39_73  [key=0, style=solid];
m39_75 -> m39_75  [key=1, style=dashed, color=darkseagreen4, label=i];
m39_77 -> m39_78  [key=0, style=solid];
m39_77 -> m39_80  [key=2, style=dotted];
m39_77 -> m39_32  [key=2, style=dotted];
m39_78 -> m39_74  [key=0, style=bold, color=blue];
m39_78 -> m39_79  [key=0, style=solid];
m39_78 -> m39_81  [key=0, style=solid];
m39_37 -> m39_39  [key=2, style=dotted];
m39_37 -> m39_38  [key=0, style=solid];
m39_37 -> m39_40  [key=2, style=dotted];
m39_38 -> m39_36  [key=0, style=bold, color=blue];
m39_38 -> m39_39  [key=0, style=solid];
m39_38 -> m39_63  [key=0, style=solid];
m39_91 -> m39_92  [key=0, style=solid];
m39_91 -> m39_99  [key=0, style=solid];
m39_11 -> m39_12  [key=0, style=solid, color=red];
m39_11 -> m39_14  [key=2, style=dotted, color=red];
m39_11 -> m39_13  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m39_11 -> m39_15  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m39_11 -> m39_16  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m39_11 -> m39_17  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m39_11 -> m39_18  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m39_11 -> m39_19  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m39_11 -> m39_20  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m39_11 -> m39_21  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m39_11 -> m39_22  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m39_11 -> m39_23  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m39_11 -> m39_24  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m39_11 -> m39_25  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m39_11 -> m39_26  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m39_11 -> m39_27  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m39_11 -> m39_28  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m39_11 -> m39_29  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m39_11 -> m39_30  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m39_11 -> m39_31  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m39_12 -> m39_7  [key=0, style=bold, color=blue];
m39_12 -> m39_0  [key=2, style=dotted];
m39_12 -> m39_13  [key=0, style=solid];
m39_12 -> m39_15  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m39_12 -> m39_16  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m39_12 -> m39_17  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m39_12 -> m39_18  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m39_12 -> m39_19  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m39_12 -> m39_20  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m39_12 -> m39_21  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m39_12 -> m39_22  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m39_12 -> m39_23  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m39_12 -> m39_25  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m39_12 -> m39_27  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m39_12 -> m39_29  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m39_12 -> m39_31  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m39_12 -> m39_32  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m39_96 -> m39_97  [key=0, style=solid];
m39_183 -> m39_236  [key=0, style=solid];
m39_183 -> m39_239  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m39_183 -> m39_241  [key=1, style=dashed, color=red, label="Newtonsoft.Json.Linq.JToken"];
m39_183 -> m39_245  [key=1, style=dashed, color=red, label="Newtonsoft.Json.Linq.JToken"];
m39_183 -> m39_246  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m39_236 -> m39_237  [key=0, style=solid];
m39_236 -> m39_244  [key=0, style=solid, color=red];
m39_236 -> m39_246  [key=0, style=solid];
m39_239 -> m39_240  [key=0, style=solid];
m39_239 -> m39_243  [key=0, style=solid, color=red];
m39_239 -> m39_241  [key=1, style=dashed, color=red, label=typeToken];
m39_239 -> m39_242  [key=1, style=dashed, color=red, label=typeToken];
m39_241 -> m39_247  [key=0, style=solid, color=red];
m39_241 -> m39_95  [key=2, style=dotted, color=red];
m39_241 -> m39_116  [key=2, style=dotted, color=red];
m39_245 -> m39_247  [key=0, style=solid, color=red];
m39_245 -> m39_248  [key=2, style=dotted, color=red];
m39_246 -> m39_247  [key=0, style=solid];
m39_246 -> m39_95  [key=2, style=dotted];
m39_246 -> m39_116  [key=2, style=dotted];
m39_237 -> m39_238  [key=0, style=solid];
m39_244 -> m39_245  [key=0, style=solid, color=red];
m39_238 -> m39_239  [key=0, style=solid];
m39_238 -> m39_242  [key=1, style=dashed, color=red, label=type];
m39_238 -> m39_243  [key=1, style=dashed, color=red, label=type];
m39_242 -> m39_239  [key=0, style=solid, color=red];
m39_242 -> m39_248  [key=2, style=dotted, color=red];
m39_242 -> m39_242  [key=1, style=dashed, color=red, label=type];
m39_242 -> m39_243  [key=1, style=dashed, color=red, label=type];
m39_243 -> m39_247  [key=0, style=solid, color=red];
m39_240 -> m39_241  [key=0, style=solid, color=red];
m39_240 -> m39_242  [key=0, style=solid, color=red];
m39_247 -> m39_183  [key=0, style=bold, color=blue];
m39_121 -> m39_122  [key=0, style=solid];
m39_122 -> m39_123  [key=0, style=solid];
m39_122 -> m39_182  [key=0, style=solid];
m39_123 -> m39_124  [key=0, style=solid];
m39_123 -> m39_126  [key=0, style=solid];
m39_123 -> m39_128  [key=0, style=solid];
m39_123 -> m39_130  [key=0, style=solid];
m39_123 -> m39_132  [key=0, style=solid];
m39_123 -> m39_134  [key=0, style=solid];
m39_123 -> m39_136  [key=0, style=solid];
m39_123 -> m39_138  [key=0, style=solid];
m39_123 -> m39_140  [key=0, style=solid];
m39_123 -> m39_142  [key=0, style=solid];
m39_123 -> m39_144  [key=0, style=solid];
m39_123 -> m39_146  [key=0, style=solid];
m39_123 -> m39_148  [key=0, style=solid];
m39_123 -> m39_150  [key=0, style=solid];
m39_123 -> m39_152  [key=0, style=solid];
m39_123 -> m39_154  [key=0, style=solid];
m39_123 -> m39_156  [key=0, style=solid];
m39_123 -> m39_158  [key=0, style=solid];
m39_123 -> m39_160  [key=0, style=solid];
m39_123 -> m39_162  [key=0, style=solid];
m39_123 -> m39_164  [key=0, style=solid];
m39_123 -> m39_166  [key=0, style=solid];
m39_123 -> m39_168  [key=0, style=solid];
m39_123 -> m39_170  [key=0, style=solid];
m39_123 -> m39_172  [key=0, style=solid];
m39_123 -> m39_174  [key=0, style=solid];
m39_123 -> m39_176  [key=0, style=solid];
m39_123 -> m39_178  [key=0, style=solid];
m39_123 -> m39_180  [key=0, style=solid];
m39_123 -> m39_123  [key=1, style=dashed, color=darkseagreen4, label=property];
m39_123 -> m39_125  [key=1, style=dashed, color=darkseagreen4, label=property];
m39_124 -> m39_125  [key=0, style=solid];
m39_126 -> m39_127  [key=0, style=solid];
m39_128 -> m39_129  [key=0, style=solid];
m39_130 -> m39_131  [key=0, style=solid];
m39_132 -> m39_133  [key=0, style=solid];
m39_134 -> m39_135  [key=0, style=solid];
m39_136 -> m39_137  [key=0, style=solid];
m39_138 -> m39_139  [key=0, style=solid];
m39_140 -> m39_141  [key=0, style=solid];
m39_142 -> m39_143  [key=0, style=solid];
m39_144 -> m39_145  [key=0, style=solid];
m39_146 -> m39_147  [key=0, style=solid];
m39_148 -> m39_149  [key=0, style=solid];
m39_150 -> m39_151  [key=0, style=solid];
m39_152 -> m39_153  [key=0, style=solid];
m39_154 -> m39_155  [key=0, style=solid];
m39_156 -> m39_157  [key=0, style=solid];
m39_158 -> m39_159  [key=0, style=solid];
m39_160 -> m39_161  [key=0, style=solid];
m39_162 -> m39_163  [key=0, style=solid];
m39_164 -> m39_165  [key=0, style=solid];
m39_166 -> m39_167  [key=0, style=solid];
m39_168 -> m39_169  [key=0, style=solid];
m39_170 -> m39_171  [key=0, style=solid];
m39_172 -> m39_173  [key=0, style=solid];
m39_174 -> m39_175  [key=0, style=solid];
m39_176 -> m39_177  [key=0, style=solid];
m39_178 -> m39_179  [key=0, style=solid];
m39_180 -> m39_181  [key=0, style=solid];
m39_125 -> m39_122  [key=0, style=solid];
m39_125 -> m39_183  [key=2, style=dotted];
m39_125 -> m39_125  [key=1, style=dashed, color=darkseagreen4, label=property];
m39_125 -> m39_127  [key=1, style=dashed, color=darkseagreen4, label=property];
m39_127 -> m39_122  [key=0, style=solid];
m39_127 -> m39_127  [key=1, style=dashed, color=darkseagreen4, label=property];
m39_127 -> m39_129  [key=1, style=dashed, color=darkseagreen4, label=property];
m39_129 -> m39_122  [key=0, style=solid];
m39_129 -> m39_129  [key=1, style=dashed, color=darkseagreen4, label=property];
m39_129 -> m39_131  [key=1, style=dashed, color=darkseagreen4, label=property];
m39_131 -> m39_122  [key=0, style=solid];
m39_131 -> m39_131  [key=1, style=dashed, color=darkseagreen4, label=property];
m39_131 -> m39_133  [key=1, style=dashed, color=darkseagreen4, label=property];
m39_133 -> m39_122  [key=0, style=solid];
m39_133 -> m39_184  [key=2, style=dotted];
m39_133 -> m39_133  [key=1, style=dashed, color=darkseagreen4, label=property];
m39_133 -> m39_135  [key=1, style=dashed, color=darkseagreen4, label=property];
m39_135 -> m39_122  [key=0, style=solid];
m39_135 -> m39_185  [key=2, style=dotted];
m39_135 -> m39_135  [key=1, style=dashed, color=darkseagreen4, label=property];
m39_135 -> m39_137  [key=1, style=dashed, color=darkseagreen4, label=property];
m39_137 -> m39_122  [key=0, style=solid];
m39_137 -> m39_186  [key=2, style=dotted];
m39_137 -> m39_137  [key=1, style=dashed, color=darkseagreen4, label=property];
m39_137 -> m39_139  [key=1, style=dashed, color=darkseagreen4, label=property];
m39_139 -> m39_122  [key=0, style=solid];
m39_139 -> m39_187  [key=2, style=dotted];
m39_139 -> m39_139  [key=1, style=dashed, color=darkseagreen4, label=property];
m39_139 -> m39_141  [key=1, style=dashed, color=darkseagreen4, label=property];
m39_141 -> m39_122  [key=0, style=solid];
m39_141 -> m39_184  [key=2, style=dotted];
m39_141 -> m39_141  [key=1, style=dashed, color=darkseagreen4, label=property];
m39_141 -> m39_143  [key=1, style=dashed, color=darkseagreen4, label=property];
m39_143 -> m39_122  [key=0, style=solid];
m39_143 -> m39_143  [key=1, style=dashed, color=darkseagreen4, label=property];
m39_143 -> m39_145  [key=1, style=dashed, color=darkseagreen4, label=property];
m39_145 -> m39_122  [key=0, style=solid];
m39_145 -> m39_145  [key=1, style=dashed, color=darkseagreen4, label=property];
m39_145 -> m39_147  [key=1, style=dashed, color=darkseagreen4, label=property];
m39_147 -> m39_122  [key=0, style=solid];
m39_147 -> m39_147  [key=1, style=dashed, color=darkseagreen4, label=property];
m39_147 -> m39_149  [key=1, style=dashed, color=darkseagreen4, label=property];
m39_149 -> m39_122  [key=0, style=solid];
m39_149 -> m39_149  [key=1, style=dashed, color=darkseagreen4, label=property];
m39_149 -> m39_151  [key=1, style=dashed, color=darkseagreen4, label=property];
m39_151 -> m39_122  [key=0, style=solid];
m39_151 -> m39_151  [key=1, style=dashed, color=darkseagreen4, label=property];
m39_151 -> m39_153  [key=1, style=dashed, color=darkseagreen4, label=property];
m39_153 -> m39_122  [key=0, style=solid];
m39_153 -> m39_153  [key=1, style=dashed, color=darkseagreen4, label=property];
m39_153 -> m39_155  [key=1, style=dashed, color=darkseagreen4, label=property];
m39_155 -> m39_122  [key=0, style=solid];
m39_155 -> m39_155  [key=1, style=dashed, color=darkseagreen4, label=property];
m39_155 -> m39_157  [key=1, style=dashed, color=darkseagreen4, label=property];
m39_157 -> m39_122  [key=0, style=solid];
m39_157 -> m39_157  [key=1, style=dashed, color=darkseagreen4, label=property];
m39_157 -> m39_159  [key=1, style=dashed, color=darkseagreen4, label=property];
m39_159 -> m39_122  [key=0, style=solid];
m39_159 -> m39_159  [key=1, style=dashed, color=darkseagreen4, label=property];
m39_159 -> m39_161  [key=1, style=dashed, color=darkseagreen4, label=property];
m39_161 -> m39_122  [key=0, style=solid];
m39_161 -> m39_161  [key=1, style=dashed, color=darkseagreen4, label=property];
m39_161 -> m39_163  [key=1, style=dashed, color=darkseagreen4, label=property];
m39_163 -> m39_122  [key=0, style=solid];
m39_163 -> m39_163  [key=1, style=dashed, color=darkseagreen4, label=property];
m39_163 -> m39_165  [key=1, style=dashed, color=darkseagreen4, label=property];
m39_165 -> m39_122  [key=0, style=solid];
m39_165 -> m39_183  [key=2, style=dotted];
m39_165 -> m39_165  [key=1, style=dashed, color=darkseagreen4, label=property];
m39_165 -> m39_167  [key=1, style=dashed, color=darkseagreen4, label=property];
m39_167 -> m39_122  [key=0, style=solid];
m39_167 -> m39_188  [key=2, style=dotted];
m39_167 -> m39_167  [key=1, style=dashed, color=darkseagreen4, label=property];
m39_167 -> m39_169  [key=1, style=dashed, color=darkseagreen4, label=property];
m39_169 -> m39_122  [key=0, style=solid];
m39_169 -> m39_169  [key=1, style=dashed, color=darkseagreen4, label=property];
m39_169 -> m39_171  [key=1, style=dashed, color=darkseagreen4, label=property];
m39_171 -> m39_122  [key=0, style=solid];
m39_171 -> m39_171  [key=1, style=dashed, color=darkseagreen4, label=property];
m39_171 -> m39_173  [key=1, style=dashed, color=darkseagreen4, label=property];
m39_173 -> m39_122  [key=0, style=solid];
m39_173 -> m39_173  [key=1, style=dashed, color=darkseagreen4, label=property];
m39_173 -> m39_175  [key=1, style=dashed, color=darkseagreen4, label=property];
m39_175 -> m39_122  [key=0, style=solid];
m39_175 -> m39_175  [key=1, style=dashed, color=darkseagreen4, label=property];
m39_175 -> m39_177  [key=1, style=dashed, color=darkseagreen4, label=property];
m39_177 -> m39_122  [key=0, style=solid];
m39_177 -> m39_189  [key=2, style=dotted];
m39_177 -> m39_177  [key=1, style=dashed, color=darkseagreen4, label=property];
m39_177 -> m39_179  [key=1, style=dashed, color=darkseagreen4, label=property];
m39_179 -> m39_122  [key=0, style=solid];
m39_179 -> m39_190  [key=2, style=dotted];
m39_179 -> m39_179  [key=1, style=dashed, color=darkseagreen4, label=property];
m39_179 -> m39_181  [key=1, style=dashed, color=darkseagreen4, label=property];
m39_181 -> m39_122  [key=0, style=solid];
m39_181 -> m39_181  [key=1, style=dashed, color=darkseagreen4, label=property];
m39_182 -> m39_121  [key=0, style=bold, color=blue];
m39_32 -> m39_38  [key=0, style=solid];
m39_32 -> m39_39  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchema"];
m39_32 -> m39_46  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchema"];
m39_32 -> m39_61  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchema"];
m39_32 -> m39_63  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchema"];
m39_32 -> m39_64  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchema"];
m39_32 -> m39_65  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchema"];
m39_32 -> m39_66  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchema"];
m39_32 -> m39_68  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchema"];
m39_32 -> m39_69  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchema"];
m39_32 -> m39_71  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchema"];
m39_32 -> m39_73  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchema"];
m39_32 -> m39_74  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchema"];
m39_32 -> m39_76  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchema"];
m39_32 -> m39_77  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchema"];
m39_32 -> m39_78  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchema"];
m39_32 -> m39_79  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchema"];
m39_32 -> m39_80  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchema"];
m39_32 -> m39_81  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchema"];
m39_32 -> m39_82  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchema"];
m39_32 -> m39_83  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchema"];
m39_32 -> m39_84  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchema"];
m39_32 -> m39_85  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchema"];
m39_32 -> m39_86  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchema"];
m39_32 -> m39_33  [key=0, style=solid];
m39_71 -> m39_72  [key=0, style=solid];
m39_71 -> m39_76  [key=0, style=solid];
m39_71 -> m39_67  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m39_73 -> m39_74  [key=0, style=solid];
m39_73 -> m39_76  [key=0, style=solid];
m39_73 -> m39_71  [key=0, style=bold, color=blue];
m39_72 -> m39_73  [key=0, style=solid];
m39_72 -> m39_74  [key=1, style=dashed, color=darkseagreen4, label=i];
m39_72 -> m39_75  [key=1, style=dashed, color=darkseagreen4, label=i];
m39_95 -> m39_96  [key=0, style=solid];
m39_95 -> m39_98  [key=0, style=solid];
m39_95 -> m39_103  [key=2, style=dotted];
m39_99 -> m39_101  [key=1, style=dashed, color=darkseagreen4, label="out Newtonsoft.Json.JsonConverter"];
m39_99 -> m39_100  [key=0, style=solid];
m39_99 -> m39_115  [key=0, style=solid];
m39_99 -> m39_95  [key=2, style=dotted];
m39_99 -> m39_116  [key=2, style=dotted];
m39_97 -> m39_101  [key=0, style=solid];
m39_97 -> m39_98  [key=0, style=solid];
m39_97 -> m39_113  [key=1, style=dashed, color=darkseagreen4, label=schemaObject];
m39_100 -> m39_101  [key=0, style=solid];
m39_98 -> m39_93  [key=0, style=solid];
m39_98 -> m39_98  [key=1, style=dashed, color=darkseagreen4, label=i];
m39_98 -> m39_99  [key=0, style=solid];
m39_98 -> m39_100  [key=0, style=solid];
m39_101 -> m39_88  [key=0, style=bold, color=blue];
m39_101 -> m39_102  [key=0, style=solid];
m39_101 -> m39_105  [key=0, style=solid];
m39_101 -> m39_117  [key=2, style=dotted];
m39_101 -> m39_103  [key=1, style=dashed, color=darkseagreen4, label=referenceToken];
m39_21 -> m39_22  [key=0, style=solid];
m39_31 -> m39_32  [key=0, style=solid];
m39_31 -> m39_97  [key=0, style=solid];
m39_31 -> m39_99  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m39_31 -> m39_105  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m39_113 -> m39_114  [key=0, style=solid];
m39_113 -> m39_121  [key=2, style=dotted];
m39_110 -> m39_111  [key=0, style=solid];
m39_110 -> m39_112  [key=0, style=solid];
m39_110 -> m39_120  [key=2, style=dotted];
m39_110 -> m39_57  [key=1, style=dashed, color=green, label="Newtonsoft.Json.JsonSerializer"];
m39_110 -> m39_1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m39_110 -> m39_2  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m39_110 -> m39_3  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m39_110 -> m39_4  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m39_110 -> m39_5  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m39_110 -> m39_6  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m39_110 -> m39_7  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m39_110 -> m39_8  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m39_110 -> m39_9  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m39_110 -> m39_37  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m39_110 -> m39_41  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m39_110 -> m39_46  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m39_110 -> m39_53  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m39_110 -> m39_59  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m39_110 -> m39_63  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m39_110 -> m39_68  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m39_110 -> m39_72  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m39_110 -> m39_76  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m39_110 -> m39_82  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m39_110 -> m39_105  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m39_110 -> m39_107  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m39_112 -> m39_113  [key=0, style=solid];
m39_112 -> m39_118  [key=2, style=dotted];
m39_112 -> m39_7  [key=2, style=dotted];
m39_111 -> m39_115  [key=0, style=solid];
m39_114 -> m39_115  [key=0, style=solid];
m39_114 -> m39_15  [key=2, style=dotted];
m39_115 -> m39_31  [key=0, style=bold, color=blue];
m39_261 -> m39_1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_2  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_3  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_8  [key=1, style=dashed, color=red, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_9  [key=1, style=dashed, color=red, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_10  [key=1, style=dashed, color=red, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_11  [key=1, style=dashed, color=red, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_16  [key=1, style=dashed, color=red, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_17  [key=1, style=dashed, color=red, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_18  [key=1, style=dashed, color=red, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_25  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_26  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_27  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_42  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_43  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_47  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_49  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_59  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_69  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_74  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_77  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_80  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_83  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_85  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_110  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_112  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_113  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_114  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_125  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_127  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_129  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_131  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_133  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_135  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_137  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_139  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_141  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_143  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_145  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_147  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_149  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_151  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_153  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_155  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_157  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_159  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_161  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_163  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_165  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_167  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_169  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_171  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_173  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_175  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_177  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_179  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_181  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_194  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_195  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_199  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_203  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_205  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_208  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_209  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_212  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_213  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_221  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_225  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_228  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_229  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_231  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_261 -> m39_233  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaBuilder"];
m39_262 -> m39_259  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaType"];
m41_29 -> m41_30  [key=0, style=solid, color=red];
m41_29 -> m41_31  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m41_29 -> m41_32  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m41_29 -> m41_34  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m41_29 -> m41_35  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m41_29 -> m41_36  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m41_29 -> m41_37  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m41_29 -> m41_39  [key=1, style=dashed, color=red, label="Newtonsoft.Json.JsonReader"];
m41_29 -> m41_41  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m41_29 -> m41_42  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m41_29 -> m41_44  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m41_29 -> m41_45  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m41_30 -> m41_31  [key=0, style=solid, color=red];
m41_30 -> m41_34  [key=0, style=solid, color=red];
m41_31 -> m41_32  [key=0, style=solid];
m41_31 -> m41_33  [key=0, style=solid];
m41_31 -> m41_47  [key=2, style=dotted];
m41_32 -> m41_46  [key=0, style=solid];
m41_32 -> m41_23  [key=2, style=dotted];
m41_32 -> m41_48  [key=2, style=dotted];
m41_34 -> m41_35  [key=0, style=solid];
m41_34 -> m41_47  [key=2, style=dotted];
m41_34 -> m41_38  [key=1, style=dashed, color=red, label=isNullable];
m41_35 -> m41_36  [key=0, style=solid];
m41_35 -> m41_49  [key=2, style=dotted];
m41_35 -> m41_38  [key=1, style=dashed, color=red, label=t];
m41_35 -> m41_42  [key=1, style=dashed, color=darkseagreen4, label=t];
m41_36 -> m41_37  [key=0, style=solid];
m41_36 -> m41_39  [key=0, style=solid, color=red];
m41_37 -> m41_38  [key=0, style=solid, color=red];
m41_37 -> m41_50  [key=2, style=dotted];
m41_39 -> m41_40  [key=0, style=solid, color=red];
m41_39 -> m41_43  [key=0, style=solid, color=red];
m41_39 -> m41_45  [key=0, style=solid, color=red];
m41_41 -> m41_45  [key=0, style=solid];
m41_41 -> m41_23  [key=2, style=dotted];
m41_41 -> m41_48  [key=2, style=dotted];
m41_42 -> m41_46  [key=0, style=solid];
m41_42 -> m41_52  [key=2, style=dotted];
m41_44 -> m41_46  [key=0, style=solid];
m41_44 -> m41_53  [key=2, style=dotted];
m41_44 -> m41_54  [key=2, style=dotted];
m41_44 -> m41_55  [key=2, style=dotted];
m41_45 -> m41_46  [key=0, style=solid];
m41_45 -> m41_23  [key=2, style=dotted];
m41_45 -> m41_48  [key=2, style=dotted];
m41_33 -> m41_46  [key=0, style=solid];
m41_38 -> m41_46  [key=0, style=solid, color=red];
m41_38 -> m41_51  [key=2, style=dotted, color=red];
m41_40 -> m41_41  [key=0, style=solid];
m41_40 -> m41_42  [key=0, style=solid];
m41_43 -> m41_44  [key=0, style=solid];
m41_46 -> m41_29  [key=0, style=bold, color=blue];
m41_3 -> m41_4  [key=0, style=solid, color=red];
m41_4 -> m41_5  [key=0, style=solid, color=red];
m41_5 -> m41_3  [key=0, style=bold, color=blue];
m41_0 -> m41_1  [key=0, style=solid];
m41_1 -> m41_2  [key=0, style=solid];
m41_2 -> m41_0  [key=0, style=bold, color=blue];
m41_6 -> m41_7  [key=0, style=solid];
m41_6 -> m41_8  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m41_6 -> m41_10  [key=1, style=dashed, color=darkseagreen4, label=object];
m41_6 -> m41_14  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m41_6 -> m41_15  [key=1, style=dashed, color=red, label="Newtonsoft.Json.JsonWriter"];
m41_6 -> m41_18  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m41_7 -> m41_8  [key=0, style=solid];
m41_7 -> m41_10  [key=0, style=solid];
m41_8 -> m41_9  [key=0, style=solid, color=red];
m41_8 -> m41_20  [key=2, style=dotted];
m41_10 -> m41_11  [key=0, style=solid];
m41_10 -> m41_16  [key=1, style=dashed, color=darkseagreen4, label=e];
m41_14 -> m41_19  [key=0, style=solid];
m41_14 -> m41_23  [key=2, style=dotted];
m41_14 -> m41_24  [key=2, style=dotted];
m41_15 -> m41_19  [key=0, style=solid, color=red];
m41_15 -> m41_25  [key=2, style=dotted, color=red];
m41_18 -> m41_19  [key=0, style=solid];
m41_18 -> m41_28  [key=2, style=dotted];
m41_9 -> m41_19  [key=0, style=solid, color=red];
m41_11 -> m41_12  [key=0, style=solid];
m41_11 -> m41_21  [key=2, style=dotted];
m41_11 -> m41_14  [key=1, style=dashed, color=darkseagreen4, label=enumName];
m41_11 -> m41_17  [key=1, style=dashed, color=darkseagreen4, label=enumName];
m41_16 -> m41_17  [key=0, style=solid];
m41_16 -> m41_26  [key=2, style=dotted];
m41_12 -> m41_13  [key=0, style=solid];
m41_12 -> m41_16  [key=0, style=solid];
m41_12 -> m41_22  [key=2, style=dotted];
m41_17 -> m41_18  [key=0, style=solid];
m41_17 -> m41_27  [key=2, style=dotted];
m41_13 -> m41_14  [key=0, style=solid];
m41_13 -> m41_15  [key=0, style=solid, color=red];
m41_19 -> m41_6  [key=0, style=bold, color=blue];
m41_56 -> m41_57  [key=0, style=solid, color=red];
m41_57 -> m41_58  [key=0, style=solid, color=red];
m41_57 -> m41_47  [key=2, style=dotted, color=red];
m41_57 -> m41_49  [key=2, style=dotted, color=red];
m41_58 -> m41_59  [key=0, style=solid];
m41_58 -> m41_60  [key=2, style=dotted];
m41_59 -> m41_56  [key=0, style=bold, color=blue];
m41_61 -> m41_1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.StringEnumConverter"];
m41_61 -> m41_4  [key=1, style=dashed, color=red, label="Newtonsoft.Json.Converters.StringEnumConverter"];
m41_61 -> m41_13  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.StringEnumConverter"];
m41_61 -> m41_17  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.StringEnumConverter"];
m41_61 -> m41_38  [key=1, style=dashed, color=red, label="Newtonsoft.Json.Converters.StringEnumConverter"];
m41_61 -> m41_40  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.StringEnumConverter"];
m42_39 -> m42_34  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey other"];
m42_39 -> m42_40  [key=0, style=solid];
m42_40 -> m42_41  [key=0, style=solid];
m42_41 -> m42_39  [key=0, style=bold, color=blue];
m42_0 -> m42_1  [key=0, style=solid];
m42_1 -> m42_2  [key=0, style=solid];
m42_2 -> m42_3  [key=0, style=solid];
m42_2 -> m42_10  [key=2, style=dotted];
m42_2 -> m42_6  [key=1, style=dashed, color=darkseagreen4, label=rss];
m42_3 -> m42_4  [key=0, style=solid];
m42_3 -> m42_3  [key=1, style=dashed, color=darkseagreen4, label=p];
m42_6 -> m42_7  [key=0, style=solid];
m42_6 -> m42_12  [key=2, style=dotted];
m42_6 -> m42_13  [key=2, style=dotted];
m42_6 -> m42_14  [key=2, style=dotted];
m42_6 -> m42_6  [key=1, style=dashed, color=darkseagreen4, label=c];
m42_6 -> m42_4  [key=0, style=bold, color=blue];
m42_4 -> m42_5  [key=0, style=solid, color=green];
m42_4 -> m42_6  [key=0, style=solid];
m42_4 -> m42_152  [key=3, color=darkorchid, style=bold, label="Parameter variable object o"];
m42_5 -> m42_4  [key=0, style=solid];
m42_5 -> m42_11  [key=2, style=dotted];
m42_5 -> m42_6  [key=0, style=solid, color=green];
m42_5 -> m42_7  [key=2, style=dotted, color=green];
m42_7 -> m42_8  [key=0, style=solid];
m42_7 -> m42_9  [key=0, style=solid];
m42_8 -> m42_7  [key=0, style=solid];
m42_8 -> m42_11  [key=2, style=dotted];
m42_9 -> m42_0  [key=0, style=bold, color=blue];
m42_26 -> m42_27  [key=0, style=solid];
m42_26 -> m42_28  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m42_27 -> m42_28  [key=0, style=solid];
m42_27 -> m42_236  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey"];
m42_28 -> m42_29  [key=0, style=solid];
m42_28 -> m42_236  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey"];
m42_29 -> m42_26  [key=0, style=bold, color=blue];
m42_178 -> m42_168  [key=3, color=darkorchid, style=bold, label="method methodReturn object ConvertOrCast"];
m42_178 -> m42_182  [key=1, style=dashed, color=darkseagreen4, label=object];
m42_178 -> m42_178  [key=3, color=darkorchid, style=bold, label="method methodReturn object ConvertOrCast"];
m42_178 -> m42_179  [key=0, style=solid];
m42_178 -> m42_180  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m42_178 -> m42_181  [key=1, style=dashed, color=darkseagreen4, label=object];
m42_178 -> m42_184  [key=1, style=dashed, color=darkseagreen4, label=object];
m42_178 -> m42_186  [key=1, style=dashed, color=darkseagreen4, label=object];
m42_178 -> m42_47  [key=3, color=darkorchid, style=bold, label="method methodReturn object ConvertOrCast"];
m42_182 -> m42_167  [key=2, style=dotted];
m42_182 -> m42_183  [key=0, style=solid];
m42_182 -> m42_184  [key=0, style=solid];
m42_186 -> m42_168  [key=2, style=dotted];
m42_186 -> m42_187  [key=0, style=solid];
m42_186 -> m42_188  [key=2, style=dotted];
m42_184 -> m42_172  [key=2, style=dotted];
m42_184 -> m42_186  [key=0, style=solid];
m42_184 -> m42_185  [key=0, style=solid];
m42_179 -> m42_180  [key=0, style=solid];
m42_180 -> m42_182  [key=0, style=solid];
m42_180 -> m42_181  [key=0, style=solid];
m42_183 -> m42_187  [key=0, style=solid];
m42_181 -> m42_187  [key=0, style=solid];
m42_185 -> m42_187  [key=0, style=solid];
m42_187 -> m42_178  [key=0, style=bold, color=blue];
m42_100 -> m42_137  [key=1, style=dashed, color=green, label=object];
m42_100 -> m42_138  [key=1, style=dashed, color=green, label=object];
m42_100 -> m42_139  [key=1, style=dashed, color=green, label="System.Type"];
m42_100 -> m42_140  [key=1, style=dashed, color=green, label="System.Type"];
m42_100 -> m42_141  [key=1, style=dashed, color=green, label="System.Type"];
m42_100 -> m42_142  [key=1, style=dashed, color=green, label=object];
m42_100 -> m42_143  [key=1, style=dashed, color=green, label=object];
m42_100 -> m42_144  [key=1, style=dashed, color=green, label="System.Type"];
m42_100 -> m42_100  [key=3, color=darkorchid, style=bold, label="method methodReturn object Convert"];
m42_100 -> m42_101  [key=0, style=solid];
m42_100 -> m42_103  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m42_100 -> m42_104  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m42_100 -> m42_105  [key=1, style=dashed, color=darkseagreen4, label=object];
m42_100 -> m42_106  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m42_100 -> m42_107  [key=1, style=dashed, color=darkseagreen4, label=object];
m42_100 -> m42_108  [key=1, style=dashed, color=darkseagreen4, label=object];
m42_100 -> m42_109  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m42_100 -> m42_110  [key=1, style=dashed, color=darkseagreen4, label=object];
m42_100 -> m42_111  [key=1, style=dashed, color=darkseagreen4, label=object];
m42_100 -> m42_112  [key=1, style=dashed, color=darkseagreen4, label=object];
m42_100 -> m42_113  [key=1, style=dashed, color=darkseagreen4, label=object];
m42_100 -> m42_114  [key=1, style=dashed, color=darkseagreen4, label=object];
m42_100 -> m42_115  [key=1, style=dashed, color=darkseagreen4, label=object];
m42_100 -> m42_116  [key=1, style=dashed, color=darkseagreen4, label=object];
m42_100 -> m42_117  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m42_100 -> m42_118  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m42_100 -> m42_119  [key=1, style=dashed, color=darkseagreen4, label=object];
m42_100 -> m42_120  [key=1, style=dashed, color=darkseagreen4, label=object];
m42_100 -> m42_121  [key=1, style=dashed, color=darkseagreen4, label=object];
m42_100 -> m42_122  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m42_100 -> m42_123  [key=1, style=dashed, color=darkseagreen4, label=object];
m42_100 -> m42_124  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m42_100 -> m42_125  [key=1, style=dashed, color=darkseagreen4, label=object];
m42_100 -> m42_126  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m42_100 -> m42_127  [key=1, style=dashed, color=darkseagreen4, label=object];
m42_100 -> m42_128  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m42_100 -> m42_129  [key=1, style=dashed, color=darkseagreen4, label=object];
m42_100 -> m42_130  [key=1, style=dashed, color=darkseagreen4, label=object];
m42_100 -> m42_131  [key=1, style=dashed, color=darkseagreen4, label=object];
m42_100 -> m42_133  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m42_100 -> m42_134  [key=1, style=dashed, color=darkseagreen4, label=object];
m42_100 -> m42_135  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m42_100 -> m42_22  [key=3, color=darkorchid, style=bold, label="method methodReturn object Convert"];
m42_100 -> m42_57  [key=3, color=darkorchid, style=bold, label="method methodReturn object Convert"];
m42_100 -> m42_85  [key=3, color=darkorchid, style=bold, label="method methodReturn object Convert"];
m42_100 -> m42_168  [key=3, color=darkorchid, style=bold, label="method methodReturn object Convert"];
m42_100 -> m42_172  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type targetType"];
m42_137 -> m42_145  [key=0, style=solid, color=green];
m42_137 -> m42_166  [key=2, style=dotted, color=green];
m42_135 -> m42_137  [key=1, style=dashed, color=green, label=fromConverter];
m42_135 -> m42_136  [key=0, style=solid, color=green];
m42_135 -> m42_162  [key=2, style=dotted];
m42_136 -> m42_137  [key=0, style=solid, color=green];
m42_136 -> m42_138  [key=0, style=solid, color=green];
m42_136 -> m42_165  [key=2, style=dotted, color=green];
m42_138 -> m42_139  [key=0, style=solid, color=green];
m42_138 -> m42_142  [key=0, style=solid, color=green];
m42_139 -> m42_140  [key=0, style=solid, color=green];
m42_139 -> m42_141  [key=0, style=solid, color=green];
m42_139 -> m42_167  [key=2, style=dotted, color=green];
m42_142 -> m42_143  [key=0, style=solid, color=green];
m42_142 -> m42_144  [key=0, style=solid, color=green];
m42_104 -> m42_139  [key=1, style=dashed, color=green, label="System.Type"];
m42_104 -> m42_140  [key=1, style=dashed, color=green, label="System.Type"];
m42_104 -> m42_141  [key=1, style=dashed, color=green, label="System.Type"];
m42_104 -> m42_143  [key=1, style=dashed, color=green, label="System.Type"];
m42_104 -> m42_144  [key=1, style=dashed, color=green, label="System.Type"];
m42_104 -> m42_135  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m42_104 -> m42_104  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m42_104 -> m42_105  [key=0, style=solid];
m42_104 -> m42_148  [key=2, style=dotted];
m42_104 -> m42_106  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m42_104 -> m42_108  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m42_104 -> m42_109  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m42_104 -> m42_111  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m42_104 -> m42_113  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m42_104 -> m42_114  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m42_104 -> m42_115  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m42_104 -> m42_117  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m42_104 -> m42_118  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m42_104 -> m42_119  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m42_104 -> m42_122  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m42_104 -> m42_124  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m42_104 -> m42_126  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m42_104 -> m42_128  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m42_104 -> m42_131  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m42_104 -> m42_133  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m42_104 -> m42_134  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m42_140 -> m42_145  [key=0, style=solid, color=green];
m42_140 -> m42_168  [key=2, style=dotted, color=green];
m42_141 -> m42_145  [key=0, style=solid, color=green];
m42_141 -> m42_169  [key=2, style=dotted, color=green];
m42_141 -> m42_170  [key=2, style=dotted, color=green];
m42_105 -> m42_140  [key=1, style=dashed, color=green, label=initialType];
m42_105 -> m42_141  [key=1, style=dashed, color=green, label=initialType];
m42_105 -> m42_143  [key=1, style=dashed, color=green, label=initialType];
m42_105 -> m42_144  [key=1, style=dashed, color=green, label=initialType];
m42_105 -> m42_136  [key=1, style=dashed, color=green, label=initialType];
m42_105 -> m42_106  [key=0, style=solid];
m42_105 -> m42_83  [key=2, style=dotted];
m42_105 -> m42_132  [key=1, style=dashed, color=darkseagreen4, label=initialType];
m42_143 -> m42_145  [key=0, style=solid, color=green];
m42_143 -> m42_171  [key=2, style=dotted, color=green];
m42_143 -> m42_168  [key=2, style=dotted, color=green];
m42_144 -> m42_145  [key=0, style=solid, color=green];
m42_144 -> m42_99  [key=2, style=dotted, color=green];
m42_144 -> m42_170  [key=2, style=dotted, color=green];
m42_101 -> m42_102  [key=0, style=solid];
m42_101 -> m42_103  [key=0, style=solid];
m42_103 -> m42_104  [key=0, style=solid];
m42_103 -> m42_105  [key=0, style=solid];
m42_103 -> m42_147  [key=2, style=dotted];
m42_106 -> m42_107  [key=0, style=solid];
m42_106 -> m42_108  [key=0, style=solid];
m42_107 -> m42_145  [key=0, style=solid];
m42_108 -> m42_15  [key=2, style=dotted];
m42_108 -> m42_18  [key=2, style=dotted];
m42_108 -> m42_109  [key=0, style=solid];
m42_108 -> m42_115  [key=0, style=solid];
m42_109 -> m42_110  [key=0, style=solid];
m42_109 -> m42_114  [key=0, style=solid];
m42_109 -> m42_149  [key=2, style=dotted];
m42_110 -> m42_111  [key=0, style=solid];
m42_110 -> m42_112  [key=0, style=solid];
m42_111 -> m42_145  [key=0, style=solid];
m42_111 -> m42_150  [key=2, style=dotted];
m42_111 -> m42_151  [key=2, style=dotted];
m42_112 -> m42_152  [key=2, style=dotted];
m42_112 -> m42_113  [key=0, style=solid];
m42_112 -> m42_114  [key=0, style=solid];
m42_113 -> m42_145  [key=0, style=solid];
m42_113 -> m42_153  [key=2, style=dotted];
m42_114 -> m42_145  [key=0, style=solid];
m42_114 -> m42_98  [key=2, style=dotted];
m42_115 -> m42_116  [key=0, style=solid];
m42_115 -> m42_117  [key=0, style=solid];
m42_115 -> m42_21  [key=2, style=dotted];
m42_116 -> m42_145  [key=0, style=solid];
m42_116 -> m42_154  [key=2, style=dotted];
m42_117 -> m42_118  [key=0, style=solid];
m42_117 -> m42_119  [key=0, style=solid];
m42_117 -> m42_155  [key=2, style=dotted];
m42_117 -> m42_156  [key=2, style=dotted];
m42_117 -> m42_157  [key=2, style=dotted];
m42_118 -> m42_145  [key=0, style=solid];
m42_118 -> m42_158  [key=2, style=dotted];
m42_118 -> m42_84  [key=2, style=dotted];
m42_119 -> m42_120  [key=0, style=solid];
m42_119 -> m42_121  [key=0, style=solid];
m42_120 -> m42_145  [key=0, style=solid];
m42_120 -> m42_159  [key=2, style=dotted];
m42_121 -> m42_122  [key=0, style=solid];
m42_121 -> m42_128  [key=0, style=solid];
m42_122 -> m42_123  [key=0, style=solid];
m42_122 -> m42_124  [key=0, style=solid];
m42_123 -> m42_145  [key=0, style=solid];
m42_123 -> m42_160  [key=2, style=dotted];
m42_124 -> m42_125  [key=0, style=solid];
m42_124 -> m42_126  [key=0, style=solid];
m42_125 -> m42_145  [key=0, style=solid];
m42_125 -> m42_161  [key=2, style=dotted];
m42_126 -> m42_127  [key=0, style=solid];
m42_126 -> m42_128  [key=0, style=solid];
m42_127 -> m42_145  [key=0, style=solid];
m42_127 -> m42_22  [key=2, style=dotted];
m42_128 -> m42_129  [key=0, style=solid];
m42_128 -> m42_130  [key=0, style=solid];
m42_129 -> m42_145  [key=0, style=solid];
m42_129 -> m42_57  [key=2, style=dotted];
m42_130 -> m42_131  [key=0, style=solid];
m42_130 -> m42_132  [key=0, style=solid];
m42_131 -> m42_145  [key=0, style=solid];
m42_131 -> m42_85  [key=2, style=dotted];
m42_133 -> m42_135  [key=0, style=solid];
m42_133 -> m42_134  [key=0, style=solid];
m42_133 -> m42_163  [key=2, style=dotted];
m42_134 -> m42_145  [key=0, style=solid];
m42_134 -> m42_164  [key=2, style=dotted];
m42_102 -> m42_145  [key=0, style=solid];
m42_102 -> m42_146  [key=2, style=dotted];
m42_132 -> m42_162  [key=2, style=dotted];
m42_132 -> m42_133  [key=0, style=solid];
m42_132 -> m42_134  [key=1, style=dashed, color=darkseagreen4, label=toConverter];
m42_145 -> m42_100  [key=0, style=bold, color=blue];
m42_162 -> m42_100  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type t"];
m42_162 -> m42_105  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type t"];
m42_162 -> m42_221  [key=0, style=solid];
m42_221 -> m42_222  [key=0, style=solid];
m42_221 -> m42_223  [key=2, style=dotted];
m42_222 -> m42_162  [key=0, style=bold, color=blue];
m42_34 -> m42_36  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Equals"];
m42_34 -> m42_35  [key=0, style=solid];
m42_34 -> m42_37  [key=1, style=dashed, color=darkseagreen4, label=object];
m42_34 -> m42_39  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Equals"];
m42_36 -> m42_38  [key=0, style=solid];
m42_35 -> m42_36  [key=0, style=solid];
m42_35 -> m42_37  [key=0, style=solid];
m42_37 -> m42_38  [key=0, style=solid];
m42_37 -> m42_39  [key=2, style=dotted];
m42_37 -> m42_238  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey"];
m42_38 -> m42_34  [key=0, style=bold, color=blue];
m42_30 -> m42_31  [key=0, style=solid];
m42_31 -> m42_32  [key=0, style=solid];
m42_31 -> m42_33  [key=2, style=dotted];
m42_32 -> m42_30  [key=0, style=bold, color=blue];
m42_18 -> m42_100  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type t"];
m42_18 -> m42_19  [key=0, style=solid];
m42_18 -> m42_85  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type t"];
m42_19 -> m42_20  [key=0, style=solid];
m42_19 -> m42_21  [key=2, style=dotted];
m42_20 -> m42_18  [key=0, style=bold, color=blue];
m42_152 -> m42_100  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m42_152 -> m42_224  [key=0, style=solid];
m42_152 -> m42_174  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsInteger"];
m42_152 -> m42_36  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsInteger"];
m42_224 -> m42_4  [key=2, style=dotted];
m42_224 -> m42_225  [key=0, style=solid];
m42_224 -> m42_234  [key=0, style=solid];
m42_225 -> m42_226  [key=0, style=solid];
m42_234 -> m42_235  [key=0, style=solid];
m42_226 -> m42_227  [key=0, style=solid];
m42_233 -> m42_235  [key=0, style=solid];
m42_227 -> m42_228  [key=0, style=solid];
m42_232 -> m42_233  [key=0, style=solid];
m42_228 -> m42_229  [key=0, style=solid];
m42_231 -> m42_232  [key=0, style=solid];
m42_229 -> m42_230  [key=0, style=solid];
m42_230 -> m42_231  [key=0, style=solid];
m42_235 -> m42_152  [key=0, style=bold, color=blue];
m42_53 -> m42_54  [key=0, style=solid];
m42_54 -> m42_55  [key=0, style=solid];
m42_54 -> m42_56  [key=2, style=dotted];
m42_55 -> m42_53  [key=0, style=bold, color=blue];
m42_15 -> m42_100  [key=3, color=darkorchid, style=bold, label="Parameter variable object o"];
m42_15 -> m42_16  [key=0, style=solid];
m42_16 -> m42_17  [key=0, style=solid];
m42_17 -> m42_15  [key=0, style=bold, color=blue];
m42_57 -> m42_100  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m42_57 -> m42_57  [key=3, color=darkorchid, style=bold, label="method methodReturn BigInteger ToBigInteger"];
m42_57 -> m42_58  [key=0, style=solid];
m42_57 -> m42_59  [key=1, style=dashed, color=darkseagreen4, label=object];
m42_57 -> m42_60  [key=1, style=dashed, color=darkseagreen4, label=object];
m42_57 -> m42_61  [key=1, style=dashed, color=darkseagreen4, label=object];
m42_57 -> m42_62  [key=1, style=dashed, color=darkseagreen4, label=object];
m42_57 -> m42_63  [key=1, style=dashed, color=darkseagreen4, label=object];
m42_57 -> m42_64  [key=1, style=dashed, color=darkseagreen4, label=object];
m42_57 -> m42_65  [key=1, style=dashed, color=darkseagreen4, label=object];
m42_57 -> m42_66  [key=1, style=dashed, color=darkseagreen4, label=object];
m42_57 -> m42_67  [key=1, style=dashed, color=darkseagreen4, label=object];
m42_57 -> m42_68  [key=1, style=dashed, color=darkseagreen4, label=object];
m42_57 -> m42_69  [key=1, style=dashed, color=darkseagreen4, label=object];
m42_57 -> m42_70  [key=1, style=dashed, color=darkseagreen4, label=object];
m42_57 -> m42_71  [key=1, style=dashed, color=darkseagreen4, label=object];
m42_57 -> m42_72  [key=1, style=dashed, color=darkseagreen4, label=object];
m42_57 -> m42_73  [key=1, style=dashed, color=darkseagreen4, label=object];
m42_57 -> m42_74  [key=1, style=dashed, color=darkseagreen4, label=object];
m42_57 -> m42_75  [key=1, style=dashed, color=darkseagreen4, label=object];
m42_57 -> m42_76  [key=1, style=dashed, color=darkseagreen4, label=object];
m42_57 -> m42_77  [key=1, style=dashed, color=darkseagreen4, label=object];
m42_57 -> m42_78  [key=1, style=dashed, color=darkseagreen4, label=object];
m42_58 -> m42_59  [key=0, style=solid];
m42_58 -> m42_60  [key=0, style=solid];
m42_59 -> m42_79  [key=0, style=solid];
m42_60 -> m42_61  [key=0, style=solid];
m42_60 -> m42_62  [key=0, style=solid];
m42_61 -> m42_79  [key=0, style=solid];
m42_61 -> m42_80  [key=2, style=dotted];
m42_62 -> m42_63  [key=0, style=solid];
m42_62 -> m42_64  [key=0, style=solid];
m42_63 -> m42_79  [key=0, style=solid];
m42_63 -> m42_81  [key=2, style=dotted];
m42_64 -> m42_65  [key=0, style=solid];
m42_64 -> m42_66  [key=0, style=solid];
m42_65 -> m42_79  [key=0, style=solid];
m42_65 -> m42_81  [key=2, style=dotted];
m42_66 -> m42_67  [key=0, style=solid];
m42_66 -> m42_68  [key=0, style=solid];
m42_67 -> m42_79  [key=0, style=solid];
m42_67 -> m42_81  [key=2, style=dotted];
m42_68 -> m42_69  [key=0, style=solid];
m42_68 -> m42_70  [key=0, style=solid];
m42_69 -> m42_79  [key=0, style=solid];
m42_69 -> m42_81  [key=2, style=dotted];
m42_70 -> m42_71  [key=0, style=solid];
m42_70 -> m42_72  [key=0, style=solid];
m42_71 -> m42_79  [key=0, style=solid];
m42_71 -> m42_81  [key=2, style=dotted];
m42_72 -> m42_73  [key=0, style=solid];
m42_72 -> m42_74  [key=0, style=solid];
m42_73 -> m42_79  [key=0, style=solid];
m42_73 -> m42_81  [key=2, style=dotted];
m42_74 -> m42_75  [key=0, style=solid];
m42_74 -> m42_76  [key=0, style=solid];
m42_75 -> m42_79  [key=0, style=solid];
m42_75 -> m42_81  [key=2, style=dotted];
m42_76 -> m42_77  [key=0, style=solid];
m42_76 -> m42_78  [key=0, style=solid];
m42_77 -> m42_79  [key=0, style=solid];
m42_77 -> m42_81  [key=2, style=dotted];
m42_78 -> m42_83  [key=2, style=dotted];
m42_78 -> m42_79  [key=0, style=solid];
m42_78 -> m42_82  [key=2, style=dotted];
m42_78 -> m42_84  [key=2, style=dotted];
m42_79 -> m42_57  [key=0, style=bold, color=blue];
m42_168 -> m42_100  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type targetType"];
m42_168 -> m42_105  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type initialType"];
m42_168 -> m42_168  [key=3, color=darkorchid, style=bold, label="method methodReturn object EnsureTypeAssignable"];
m42_168 -> m42_189  [key=0, style=solid];
m42_168 -> m42_190  [key=1, style=dashed, color=darkseagreen4, label=object];
m42_168 -> m42_191  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m42_168 -> m42_192  [key=1, style=dashed, color=darkseagreen4, label=object];
m42_168 -> m42_193  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m42_168 -> m42_195  [key=1, style=dashed, color=darkseagreen4, label=object];
m42_168 -> m42_196  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m42_168 -> m42_198  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m42_168 -> m42_47  [key=3, color=darkorchid, style=bold, label="method methodReturn object EnsureTypeAssignable"];
m42_168 -> m42_171  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m42_168 -> m42_178  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type targetType"];
m42_196 -> m42_167  [key=2, style=dotted];
m42_196 -> m42_197  [key=0, style=solid];
m42_196 -> m42_198  [key=0, style=solid];
m42_189 -> m42_83  [key=2, style=dotted];
m42_189 -> m42_190  [key=0, style=solid];
m42_189 -> m42_191  [key=1, style=dashed, color=darkseagreen4, label=valueType];
m42_189 -> m42_193  [key=1, style=dashed, color=darkseagreen4, label=valueType];
m42_190 -> m42_196  [key=0, style=solid];
m42_190 -> m42_191  [key=0, style=solid];
m42_191 -> m42_192  [key=0, style=solid];
m42_191 -> m42_193  [key=0, style=solid];
m42_191 -> m42_21  [key=2, style=dotted];
m42_192 -> m42_199  [key=0, style=solid];
m42_193 -> m42_194  [key=0, style=solid];
m42_193 -> m42_26  [key=2, style=dotted];
m42_193 -> m42_200  [key=2, style=dotted];
m42_193 -> m42_195  [key=1, style=dashed, color=darkseagreen4, label=castConverter];
m42_195 -> m42_199  [key=0, style=solid];
m42_195 -> m42_201  [key=2, style=dotted];
m42_198 -> m42_170  [key=2, style=dotted];
m42_198 -> m42_199  [key=0, style=solid];
m42_198 -> m42_202  [key=2, style=dotted];
m42_198 -> m42_203  [key=2, style=dotted];
m42_197 -> m42_199  [key=0, style=solid];
m42_194 -> m42_195  [key=0, style=solid];
m42_194 -> m42_198  [key=0, style=solid];
m42_199 -> m42_168  [key=0, style=bold, color=blue];
m42_22 -> m42_100  [key=3, color=darkorchid, style=bold, label="Parameter variable string input"];
m42_22 -> m42_23  [key=0, style=solid];
m42_23 -> m42_24  [key=0, style=solid];
m42_23 -> m42_25  [key=2, style=dotted];
m42_24 -> m42_22  [key=0, style=bold, color=blue];
m42_171 -> m42_100  [key=3, color=darkorchid, style=bold, label="Parameter variable INullable nullableValue"];
m42_171 -> m42_204  [key=0, style=solid];
m42_171 -> m42_206  [key=1, style=dashed, color=darkseagreen4, label=INullable];
m42_171 -> m42_207  [key=1, style=dashed, color=darkseagreen4, label=INullable];
m42_171 -> m42_208  [key=1, style=dashed, color=darkseagreen4, label=INullable];
m42_171 -> m42_209  [key=1, style=dashed, color=darkseagreen4, label=INullable];
m42_171 -> m42_210  [key=1, style=dashed, color=darkseagreen4, label=INullable];
m42_171 -> m42_211  [key=1, style=dashed, color=darkseagreen4, label=INullable];
m42_171 -> m42_212  [key=1, style=dashed, color=darkseagreen4, label=INullable];
m42_171 -> m42_213  [key=1, style=dashed, color=darkseagreen4, label=INullable];
m42_171 -> m42_214  [key=1, style=dashed, color=darkseagreen4, label=INullable];
m42_171 -> m42_215  [key=1, style=dashed, color=darkseagreen4, label=INullable];
m42_171 -> m42_216  [key=1, style=dashed, color=darkseagreen4, label=INullable];
m42_171 -> m42_47  [key=3, color=darkorchid, style=bold, label="method methodReturn object ToValue"];
m42_204 -> m42_205  [key=0, style=solid];
m42_204 -> m42_206  [key=0, style=solid];
m42_206 -> m42_207  [key=0, style=solid];
m42_206 -> m42_208  [key=0, style=solid];
m42_207 -> m42_217  [key=0, style=solid];
m42_207 -> m42_218  [key=2, style=dotted];
m42_208 -> m42_209  [key=0, style=solid];
m42_208 -> m42_210  [key=0, style=solid];
m42_209 -> m42_217  [key=0, style=solid];
m42_209 -> m42_218  [key=2, style=dotted];
m42_210 -> m42_211  [key=0, style=solid];
m42_210 -> m42_212  [key=0, style=solid];
m42_211 -> m42_217  [key=0, style=solid];
m42_211 -> m42_218  [key=2, style=dotted];
m42_212 -> m42_213  [key=0, style=solid];
m42_212 -> m42_214  [key=0, style=solid];
m42_213 -> m42_217  [key=0, style=solid];
m42_213 -> m42_218  [key=2, style=dotted];
m42_214 -> m42_215  [key=0, style=solid];
m42_214 -> m42_216  [key=0, style=solid];
m42_215 -> m42_217  [key=0, style=solid];
m42_215 -> m42_218  [key=2, style=dotted];
m42_216 -> m42_217  [key=0, style=solid];
m42_216 -> m42_202  [key=2, style=dotted];
m42_216 -> m42_219  [key=2, style=dotted];
m42_216 -> m42_220  [key=2, style=dotted];
m42_205 -> m42_217  [key=0, style=solid];
m42_217 -> m42_171  [key=0, style=bold, color=blue];
m42_85 -> m42_100  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type targetType"];
m42_85 -> m42_85  [key=3, color=darkorchid, style=bold, label="method methodReturn object FromBigInteger"];
m42_85 -> m42_86  [key=0, style=solid];
m42_85 -> m42_87  [key=1, style=dashed, color=darkseagreen4, label=BigInteger];
m42_85 -> m42_88  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m42_85 -> m42_89  [key=1, style=dashed, color=darkseagreen4, label=BigInteger];
m42_85 -> m42_90  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m42_85 -> m42_91  [key=1, style=dashed, color=darkseagreen4, label=BigInteger];
m42_85 -> m42_92  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m42_85 -> m42_93  [key=1, style=dashed, color=darkseagreen4, label=BigInteger];
m42_85 -> m42_94  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m42_85 -> m42_95  [key=1, style=dashed, color=darkseagreen4, label=BigInteger];
m42_85 -> m42_96  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m42_96 -> m42_99  [key=2, style=dotted];
m42_96 -> m42_97  [key=0, style=solid];
m42_96 -> m42_84  [key=2, style=dotted];
m42_94 -> m42_18  [key=2, style=dotted];
m42_94 -> m42_96  [key=0, style=solid];
m42_94 -> m42_95  [key=0, style=solid];
m42_86 -> m42_87  [key=0, style=solid];
m42_86 -> m42_88  [key=0, style=solid];
m42_87 -> m42_97  [key=0, style=solid];
m42_88 -> m42_89  [key=0, style=solid];
m42_88 -> m42_90  [key=0, style=solid];
m42_89 -> m42_97  [key=0, style=solid];
m42_90 -> m42_91  [key=0, style=solid];
m42_90 -> m42_92  [key=0, style=solid];
m42_91 -> m42_97  [key=0, style=solid];
m42_92 -> m42_94  [key=0, style=solid];
m42_92 -> m42_93  [key=0, style=solid];
m42_93 -> m42_97  [key=0, style=solid];
m42_95 -> m42_97  [key=0, style=solid];
m42_95 -> m42_98  [key=2, style=dotted];
m42_97 -> m42_85  [key=0, style=bold, color=blue];
m42_42 -> m42_47  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Func<object, object> CreateCastConverter"];
m42_42 -> m42_43  [key=0, style=solid];
m42_42 -> m42_49  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Func<object, object> CreateCastConverter"];
m42_47 -> m42_50  [key=0, style=solid];
m42_46 -> m42_47  [key=0, style=solid];
m42_46 -> m42_48  [key=0, style=solid];
m42_43 -> m42_46  [key=1, style=dashed, color=darkseagreen4, label=castMethodInfo];
m42_43 -> m42_43  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey"];
m42_43 -> m42_44  [key=0, style=solid];
m42_43 -> m42_51  [key=2, style=dotted];
m42_43 -> m42_45  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey"];
m42_43 -> m42_48  [key=1, style=dashed, color=darkseagreen4, label=castMethodInfo];
m42_49 -> m42_50  [key=0, style=solid];
m42_49 -> m42_54  [key=1, style=dashed, color=darkseagreen4, label=object];
m42_44 -> m42_46  [key=0, style=solid];
m42_44 -> m42_45  [key=0, style=solid];
m42_45 -> m42_46  [key=0, style=solid];
m42_45 -> m42_45  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey"];
m42_45 -> m42_51  [key=2, style=dotted];
m42_45 -> m42_48  [key=1, style=dashed, color=darkseagreen4, label=castMethodInfo];
m42_48 -> m42_49  [key=0, style=solid];
m42_48 -> m42_52  [key=2, style=dotted];
m42_48 -> m42_54  [key=1, style=dashed, color=darkseagreen4, label=call];
m42_50 -> m42_42  [key=0, style=bold, color=blue];
m42_172 -> m42_100  [key=3, color=darkorchid, style=bold, label="Parameter variable object convertedValue"];
m42_172 -> m42_173  [key=0, style=solid];
m42_172 -> m42_179  [key=3, color=darkorchid, style=bold, label="Parameter variable object convertedValue"];
m42_172 -> m42_174  [key=3, color=darkorchid, style=bold, label="method methodReturn bool TryConvert"];
m42_172 -> m42_36  [key=3, color=darkorchid, style=bold, label="method methodReturn bool TryConvert"];
m42_172 -> m42_178  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type targetType"];
m42_173 -> m42_100  [key=2, style=dotted];
m42_173 -> m42_174  [key=0, style=solid];
m42_174 -> m42_177  [key=0, style=solid];
m42_175 -> m42_177  [key=1, style=dashed, color=darkseagreen4, label="out object"];
m42_175 -> m42_176  [key=0, style=solid];
m42_176 -> m42_177  [key=0, style=solid];
m42_177 -> m42_172  [key=0, style=bold, color=blue];
m42_238 -> m42_38  [key=1, style=dashed, color=darkseagreen4, label="ref Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey"];
m42_237 -> m42_37  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey"];
m42_237 -> m42_40  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey"];
m42_237 -> m42_31  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey"];
m42_239 -> m42_54  [key=1, style=dashed, color=darkseagreen4, label=call];
m45_252 -> m45_221  [key=0, style=bold, color=blue];
m45_277 -> m45_278  [key=0, style=solid];
m45_277 -> m45_281  [key=0, style=solid];
m45_278 -> m45_279  [key=0, style=solid];
m45_278 -> m45_272  [key=2, style=dotted];
m45_278 -> m45_280  [key=1, style=dashed, color=darkseagreen4, label=unmatchedRequiredProperties];
m45_278 -> m45_28  [key=2, style=dotted];
m45_278 -> m45_220  [key=2, style=dotted];
m45_278 -> m45_29  [key=2, style=dotted];
m45_278 -> m45_284  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m45_278 -> m45_287  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m45_279 -> m45_277  [key=0, style=bold, color=blue];
m45_279 -> m45_280  [key=0, style=solid];
m45_279 -> m45_281  [key=0, style=solid];
m45_217 -> m45_219  [key=0, style=solid];
m45_217 -> m45_256  [key=2, style=dotted];
m45_71 -> m45_77  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m45_71 -> m45_72  [key=0, style=solid];
m45_71 -> m45_76  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m45_74 -> m45_75  [key=0, style=solid];
m45_74 -> m45_79  [key=2, style=dotted];
m45_74 -> m45_76  [key=1, style=dashed, color=darkseagreen4, label=currentNodeType];
m45_74 -> m45_77  [key=1, style=dashed, color=darkseagreen4, label=currentNodeType];
m45_77 -> m45_78  [key=0, style=solid];
m45_77 -> m45_81  [key=2, style=dotted];
m45_77 -> m45_48  [key=2, style=dotted];
m45_77 -> m45_100  [key=0, style=solid];
m45_77 -> m45_112  [key=2, style=dotted];
m45_72 -> m45_74  [key=0, style=solid];
m45_72 -> m45_73  [key=0, style=solid];
m45_72 -> m45_110  [key=2, style=dotted];
m45_75 -> m45_76  [key=0, style=solid];
m45_75 -> m45_78  [key=0, style=solid];
m45_75 -> m45_80  [key=1, style=dashed, color=darkseagreen4, label=bytes2];
m45_76 -> m45_77  [key=0, style=solid];
m45_76 -> m45_78  [key=0, style=solid];
m45_76 -> m45_80  [key=2, style=dotted];
m45_73 -> m45_78  [key=0, style=solid];
m45_73 -> m45_100  [key=0, style=solid];
m45_73 -> m45_111  [key=2, style=dotted];
m45_78 -> m45_71  [key=0, style=bold, color=blue];
m45_78 -> m45_79  [key=0, style=solid];
m45_78 -> m45_80  [key=1, style=dashed, color=darkseagreen4, label=bytes1];
m45_53 -> m45_100  [key=0, style=solid];
m45_53 -> m45_103  [key=2, style=dotted];
m45_28 -> m45_29  [key=0, style=solid];
m45_413 -> m45_414  [key=0, style=solid];
m45_413 -> m45_416  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m45_413 -> m45_417  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m45_413 -> m45_418  [key=1, style=dashed, color=darkseagreen4, label=string];
m45_414 -> m45_415  [key=0, style=solid];
m45_414 -> m45_416  [key=0, style=solid];
m45_414 -> m45_422  [key=2, style=dotted];
m45_416 -> m45_417  [key=0, style=solid];
m45_416 -> m45_420  [key=0, style=solid];
m45_417 -> m45_418  [key=0, style=solid];
m45_417 -> m45_420  [key=0, style=solid];
m45_418 -> m45_327  [key=2, style=dotted];
m45_418 -> m45_417  [key=0, style=solid];
m45_418 -> m45_419  [key=0, style=solid];
m45_415 -> m45_421  [key=0, style=solid];
m45_420 -> m45_421  [key=0, style=solid];
m45_419 -> m45_421  [key=0, style=solid];
m45_421 -> m45_413  [key=0, style=bold, color=blue];
m45_29 -> m45_28  [key=0, style=bold, color=blue];
m45_134 -> m45_135  [key=0, style=solid];
m45_134 -> m45_130  [key=0, style=bold, color=blue];
m45_135 -> m45_136  [key=0, style=solid];
m45_135 -> m45_0  [key=2, style=dotted];
m45_136 -> m45_134  [key=0, style=bold, color=blue];
m45_136 -> m45_137  [key=0, style=solid];
m45_27 -> m45_26  [key=0, style=bold, color=blue];
m45_121 -> m45_122  [key=0, style=solid];
m45_0 -> m45_1  [key=0, style=solid];
m45_0 -> m45_2  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>"];
m45_0 -> m45_3  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>"];
m45_0 -> m45_4  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenType"];
m45_1 -> m45_2  [key=0, style=solid];
m45_2 -> m45_3  [key=0, style=solid];
m45_3 -> m45_0  [key=0, style=bold, color=blue];
m45_3 -> m45_4  [key=0, style=solid];
m45_3 -> m45_8  [key=2, style=dotted];
m45_3 -> m45_9  [key=2, style=dotted];
m45_3 -> m45_10  [key=2, style=dotted];
m45_3 -> m45_13  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m45_3 -> m45_16  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m45_146 -> m45_147  [key=0, style=solid];
m45_146 -> m45_149  [key=1, style=dashed, color=darkseagreen4, label=object];
m45_146 -> m45_150  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenType?"];
m45_146 -> m45_151  [key=1, style=dashed, color=darkseagreen4, label=object];
m45_146 -> m45_153  [key=1, style=dashed, color=darkseagreen4, label=object];
m45_146 -> m45_155  [key=1, style=dashed, color=darkseagreen4, label=object];
m45_146 -> m45_157  [key=1, style=dashed, color=darkseagreen4, label=object];
m45_146 -> m45_159  [key=1, style=dashed, color=darkseagreen4, label=object];
m45_146 -> m45_161  [key=1, style=dashed, color=darkseagreen4, label=object];
m45_146 -> m45_163  [key=1, style=dashed, color=darkseagreen4, label=object];
m45_146 -> m45_165  [key=1, style=dashed, color=darkseagreen4, label=object];
m45_146 -> m45_167  [key=1, style=dashed, color=darkseagreen4, label=object];
m45_146 -> m45_169  [key=1, style=dashed, color=darkseagreen4, label=object];
m45_146 -> m45_216  [key=2, style=dotted];
m45_147 -> m45_148  [key=0, style=solid];
m45_147 -> m45_149  [key=0, style=solid];
m45_147 -> m45_217  [key=2, style=dotted];
m45_149 -> m45_150  [key=0, style=solid];
m45_149 -> m45_151  [key=0, style=solid];
m45_149 -> m45_0  [key=2, style=dotted];
m45_149 -> m45_36  [key=2, style=dotted];
m45_150 -> m45_170  [key=0, style=solid];
m45_150 -> m45_171  [key=2, style=dotted];
m45_150 -> m45_151  [key=0, style=solid];
m45_150 -> m45_156  [key=0, style=solid];
m45_150 -> m45_161  [key=0, style=solid];
m45_150 -> m45_165  [key=0, style=solid];
m45_150 -> m45_169  [key=0, style=solid];
m45_150 -> m45_176  [key=0, style=solid];
m45_150 -> m45_181  [key=0, style=solid];
m45_150 -> m45_186  [key=0, style=solid];
m45_150 -> m45_191  [key=0, style=solid];
m45_150 -> m45_196  [key=0, style=solid];
m45_150 -> m45_201  [key=0, style=solid];
m45_150 -> m45_206  [key=0, style=solid];
m45_150 -> m45_209  [key=0, style=solid];
m45_150 -> m45_213  [key=0, style=solid];
m45_150 -> m45_214  [key=0, style=solid];
m45_151 -> m45_152  [key=0, style=solid];
m45_151 -> m45_153  [key=0, style=solid];
m45_153 -> m45_154  [key=0, style=solid];
m45_153 -> m45_155  [key=0, style=solid];
m45_153 -> m45_28  [key=2, style=dotted];
m45_153 -> m45_220  [key=2, style=dotted];
m45_155 -> m45_156  [key=0, style=solid];
m45_155 -> m45_157  [key=0, style=solid];
m45_155 -> m45_215  [key=0, style=solid];
m45_155 -> m45_221  [key=2, style=dotted];
m45_157 -> m45_158  [key=0, style=solid];
m45_157 -> m45_159  [key=0, style=solid];
m45_157 -> m45_219  [key=2, style=dotted];
m45_159 -> m45_160  [key=0, style=solid];
m45_159 -> m45_161  [key=0, style=solid];
m45_159 -> m45_0  [key=2, style=dotted];
m45_159 -> m45_36  [key=2, style=dotted];
m45_161 -> m45_162  [key=0, style=solid];
m45_161 -> m45_163  [key=0, style=solid];
m45_163 -> m45_164  [key=0, style=solid];
m45_163 -> m45_165  [key=0, style=solid];
m45_163 -> m45_0  [key=2, style=dotted];
m45_163 -> m45_36  [key=2, style=dotted];
m45_165 -> m45_166  [key=0, style=solid];
m45_165 -> m45_167  [key=0, style=solid];
m45_167 -> m45_168  [key=0, style=solid];
m45_167 -> m45_169  [key=0, style=solid];
m45_167 -> m45_215  [key=0, style=solid];
m45_169 -> m45_170  [key=0, style=solid];
m45_169 -> m45_112  [key=2, style=dotted];
m45_169 -> m45_172  [key=2, style=dotted];
m45_169 -> m45_120  [key=2, style=dotted];
m45_148 -> m45_170  [key=0, style=solid];
m45_148 -> m45_149  [key=0, style=solid];
m45_148 -> m45_150  [key=0, style=solid];
m45_148 -> m45_218  [key=2, style=dotted];
m45_152 -> m45_170  [key=0, style=solid];
m45_152 -> m45_153  [key=0, style=solid];
m45_152 -> m45_219  [key=2, style=dotted];
m45_154 -> m45_170  [key=0, style=solid];
m45_154 -> m45_155  [key=0, style=solid];
m45_154 -> m45_0  [key=2, style=dotted];
m45_154 -> m45_36  [key=2, style=dotted];
m45_156 -> m45_170  [key=0, style=solid];
m45_156 -> m45_157  [key=0, style=solid];
m45_158 -> m45_170  [key=0, style=solid];
m45_158 -> m45_159  [key=0, style=solid];
m45_158 -> m45_28  [key=2, style=dotted];
m45_158 -> m45_220  [key=2, style=dotted];
m45_160 -> m45_170  [key=0, style=solid];
m45_160 -> m45_215  [key=0, style=solid];
m45_160 -> m45_221  [key=2, style=dotted];
m45_162 -> m45_170  [key=0, style=solid];
m45_162 -> m45_163  [key=0, style=solid];
m45_162 -> m45_219  [key=2, style=dotted];
m45_164 -> m45_170  [key=0, style=solid];
m45_164 -> m45_215  [key=0, style=solid];
m45_164 -> m45_221  [key=2, style=dotted];
m45_166 -> m45_170  [key=0, style=solid];
m45_166 -> m45_167  [key=0, style=solid];
m45_166 -> m45_221  [key=2, style=dotted];
m45_168 -> m45_170  [key=0, style=solid];
m45_168 -> m45_167  [key=0, style=solid];
m45_168 -> m45_222  [key=2, style=dotted];
m45_170 -> m45_146  [key=0, style=bold, color=blue];
m45_170 -> m45_215  [key=0, style=solid];
m45_170 -> m45_219  [key=2, style=dotted];
m45_36 -> m45_37  [key=0, style=solid];
m45_36 -> m45_38  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader.SchemaScope"];
m45_37 -> m45_38  [key=0, style=solid];
m45_37 -> m45_40  [key=2, style=dotted];
m45_37 -> m45_39  [key=0, style=solid];
m45_38 -> m45_39  [key=0, style=solid];
m45_38 -> m45_40  [key=2, style=dotted];
m45_39 -> m45_36  [key=0, style=bold, color=blue];
m45_39 -> m45_32  [key=0, style=bold, color=blue];
m45_140 -> m45_141  [key=0, style=solid];
m45_140 -> m45_143  [key=0, style=solid];
m45_141 -> m45_142  [key=0, style=solid];
m45_141 -> m45_0  [key=2, style=dotted];
m45_141 -> m45_105  [key=2, style=dotted];
m45_142 -> m45_140  [key=0, style=bold, color=blue];
m45_142 -> m45_143  [key=0, style=solid];
m45_304 -> m45_434  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m45_304 -> m45_433  [key=0, style=solid];
m45_118 -> m45_119  [key=0, style=solid];
m45_54 -> m45_100  [key=0, style=solid];
m45_54 -> m45_104  [key=2, style=dotted];
m45_54 -> m45_105  [key=2, style=dotted];
m45_33 -> m45_34  [key=0, style=solid];
m45_33 -> m45_36  [key=1, style=dashed, color=darkseagreen4, label=other];
m45_33 -> m45_38  [key=1, style=dashed, color=darkseagreen4, label=other];
m45_268 -> m45_269  [key=0, style=solid];
m45_265 -> m45_266  [key=0, style=solid];
m45_265 -> m45_268  [key=2, style=dotted];
m45_271 -> m45_272  [key=0, style=solid];
m45_271 -> m45_40  [key=0, style=bold, color=blue];
m45_270 -> m45_268  [key=0, style=bold, color=blue];
m45_270 -> m45_271  [key=0, style=solid];
m45_270 -> m45_41  [key=2, style=dotted];
m45_269 -> m45_270  [key=0, style=solid];
m45_284 -> m45_285  [key=0, style=solid];
m45_284 -> m45_280  [key=0, style=bold, color=blue];
m45_287 -> m45_288  [key=0, style=solid];
m45_287 -> m45_289  [key=0, style=solid];
m45_13 -> m45_14  [key=0, style=solid];
m45_13 -> m45_12  [key=0, style=bold, color=blue];
m45_16 -> m45_17  [key=0, style=solid];
m45_19 -> m45_20  [key=0, style=solid];
m45_19 -> m45_18  [key=0, style=bold, color=blue];
m45_30 -> m45_31  [key=0, style=solid];
m45_267 -> m45_265  [key=0, style=bold, color=blue];
m45_267 -> m45_264  [key=0, style=bold, color=blue];
m45_266 -> m45_267  [key=0, style=solid];
m45_266 -> m45_269  [key=2, style=dotted];
m45_273 -> m45_271  [key=0, style=bold, color=blue];
m45_273 -> m45_274  [key=0, style=solid];
m45_273 -> m45_275  [key=0, style=solid];
m45_272 -> m45_273  [key=0, style=solid];
m45_272 -> m45_275  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m45_286 -> m45_284  [key=0, style=bold, color=blue];
m45_286 -> m45_287  [key=0, style=solid];
m45_286 -> m45_288  [key=0, style=solid];
m45_285 -> m45_286  [key=0, style=solid];
m45_285 -> m45_285  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, bool>"];
m45_289 -> m45_287  [key=0, style=bold, color=blue];
m45_289 -> m45_285  [key=0, style=bold, color=blue];
m45_288 -> m45_289  [key=0, style=solid];
m45_288 -> m45_246  [key=2, style=dotted];
m45_15 -> m45_13  [key=0, style=bold, color=blue];
m45_15 -> m45_14  [key=0, style=bold, color=blue];
m45_14 -> m45_15  [key=0, style=solid];
m45_18 -> m45_16  [key=0, style=bold, color=blue];
m45_18 -> m45_19  [key=0, style=solid];
m45_17 -> m45_18  [key=0, style=solid];
m45_17 -> m45_16  [key=0, style=bold, color=blue];
m45_21 -> m45_19  [key=0, style=bold, color=blue];
m45_21 -> m45_20  [key=0, style=bold, color=blue];
m45_20 -> m45_21  [key=0, style=solid];
m45_32 -> m45_30  [key=0, style=bold, color=blue];
m45_32 -> m45_33  [key=0, style=solid];
m45_31 -> m45_32  [key=0, style=solid];
m45_31 -> m45_31  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Schema.JsonSchemaModel>"];
m45_31 -> m45_30  [key=0, style=bold, color=blue];
m45_34 -> m45_35  [key=0, style=solid];
m45_34 -> m45_36  [key=0, style=solid];
m45_35 -> m45_33  [key=0, style=bold, color=blue];
m45_35 -> m45_39  [key=0, style=solid];
m45_63 -> m45_64  [key=0, style=solid];
m45_63 -> m45_106  [key=2, style=dotted];
m45_70 -> m45_71  [key=0, style=solid];
m45_70 -> m45_73  [key=1, style=dashed, color=darkseagreen4, label=date1];
m45_46 -> m45_47  [key=0, style=solid];
m45_46 -> m45_48  [key=0, style=solid];
m45_220 -> m45_221  [key=0, style=solid];
m45_130 -> m45_131  [key=0, style=solid];
m45_131 -> m45_132  [key=0, style=solid];
m45_131 -> m45_135  [key=2, style=dotted];
m45_131 -> m45_133  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m45_132 -> m45_133  [key=0, style=solid];
m45_132 -> m45_105  [key=2, style=dotted];
m45_132 -> m45_4  [key=2, style=dotted];
m45_133 -> m45_134  [key=0, style=solid];
m45_133 -> m45_131  [key=0, style=bold, color=blue];
m45_245 -> m45_231  [key=0, style=solid];
m45_245 -> m45_246  [key=0, style=solid];
m45_245 -> m45_11  [key=2, style=dotted];
m45_245 -> m45_271  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m45_305 -> m45_306  [key=0, style=solid];
m45_305 -> m45_308  [key=1, style=dashed, color=darkseagreen4, label=object];
m45_305 -> m45_314  [key=1, style=dashed, color=darkseagreen4, label=object];
m45_305 -> m45_307  [key=0, style=solid];
m45_306 -> m45_307  [key=0, style=solid];
m45_306 -> m45_308  [key=0, style=solid];
m45_306 -> m45_310  [key=0, style=solid];
m45_308 -> m45_309  [key=0, style=solid];
m45_308 -> m45_311  [key=1, style=dashed, color=darkseagreen4, label=value];
m45_308 -> m45_312  [key=1, style=dashed, color=darkseagreen4, label=value];
m45_308 -> m45_313  [key=1, style=dashed, color=darkseagreen4, label=value];
m45_308 -> m45_310  [key=0, style=solid];
m45_314 -> m45_315  [key=0, style=solid];
m45_314 -> m45_316  [key=1, style=dashed, color=darkseagreen4, label=otherValue];
m45_314 -> m45_325  [key=0, style=solid];
m45_307 -> m45_317  [key=0, style=solid];
m45_307 -> m45_308  [key=0, style=solid];
m45_307 -> m45_309  [key=0, style=solid];
m45_307 -> m45_304  [key=2, style=dotted];
m45_309 -> m45_310  [key=0, style=solid];
m45_309 -> m45_71  [key=2, style=dotted];
m45_311 -> m45_312  [key=0, style=solid];
m45_311 -> m45_314  [key=0, style=solid];
m45_311 -> m45_313  [key=0, style=solid];
m45_312 -> m45_313  [key=0, style=solid];
m45_312 -> m45_316  [key=1, style=dashed, color=darkseagreen4, label=otherValue];
m45_312 -> m45_325  [key=0, style=solid];
m45_313 -> m45_316  [key=0, style=solid];
m45_313 -> m45_314  [key=0, style=solid];
m45_313 -> m45_315  [key=0, style=solid];
m45_313 -> m45_304  [key=2, style=dotted];
m45_310 -> m45_311  [key=0, style=solid];
m45_310 -> m45_226  [key=0, style=bold, color=blue];
m45_316 -> m45_317  [key=0, style=solid];
m45_316 -> m45_41  [key=2, style=dotted];
m45_316 -> m45_326  [key=2, style=dotted];
m45_316 -> m45_318  [key=1, style=dashed, color=darkseagreen4, label=value];
m45_316 -> m45_319  [key=1, style=dashed, color=darkseagreen4, label=value];
m45_316 -> m45_320  [key=1, style=dashed, color=darkseagreen4, label=value];
m45_316 -> m45_323  [key=1, style=dashed, color=darkseagreen4, label=value];
m45_316 -> m45_324  [key=1, style=dashed, color=darkseagreen4, label=value];
m45_315 -> m45_316  [key=0, style=solid];
m45_315 -> m45_71  [key=2, style=dotted];
m45_317 -> m45_305  [key=0, style=bold, color=blue];
m45_317 -> m45_318  [key=0, style=solid];
m45_317 -> m45_319  [key=0, style=solid];
m45_247 -> m45_246  [key=0, style=solid];
m45_247 -> m45_248  [key=0, style=solid];
m45_10 -> m45_11  [key=0, style=solid];
m45_294 -> m45_295  [key=0, style=solid];
m45_294 -> m45_54  [key=2, style=dotted];
m45_294 -> m45_48  [key=2, style=dotted];
m45_295 -> m45_296  [key=0, style=solid];
m45_295 -> m45_293  [key=2, style=dotted];
m45_295 -> m45_297  [key=0, style=solid];
m45_296 -> m45_294  [key=0, style=bold, color=blue];
m45_296 -> m45_297  [key=0, style=solid];
m45_296 -> m45_54  [key=2, style=dotted];
m45_296 -> m45_48  [key=2, style=dotted];
m45_434 -> m45_435  [key=0, style=solid];
m45_434 -> m45_54  [key=2, style=dotted];
m45_434 -> m45_48  [key=2, style=dotted];
m45_433 -> m45_434  [key=0, style=solid];
m45_433 -> m45_436  [key=0, style=solid];
m45_433 -> m45_80  [key=2, style=dotted];
m45_435 -> m45_437  [key=0, style=solid];
m45_436 -> m45_437  [key=0, style=solid];
m45_437 -> m45_304  [key=0, style=bold, color=blue];
m45_80 -> m45_100  [key=0, style=solid];
m45_80 -> m45_114  [key=2, style=dotted];
m45_110 -> m45_106  [key=0, style=bold, color=blue];
m45_105 -> m45_145  [key=0, style=solid];
m45_145 -> m45_146  [key=0, style=solid];
m45_145 -> m45_150  [key=0, style=solid];
m45_145 -> m45_143  [key=0, style=bold, color=blue];
m45_172 -> m45_173  [key=0, style=solid];
m45_172 -> m45_219  [key=2, style=dotted];
m45_173 -> m45_174  [key=0, style=solid];
m45_173 -> m45_221  [key=2, style=dotted];
m45_173 -> m45_175  [key=0, style=solid];
m45_174 -> m45_175  [key=0, style=solid];
m45_174 -> m45_215  [key=0, style=solid];
m45_174 -> m45_181  [key=0, style=solid];
m45_175 -> m45_174  [key=0, style=solid];
m45_175 -> m45_223  [key=2, style=dotted];
m45_175 -> m45_176  [key=0, style=solid];
m45_175 -> m45_180  [key=0, style=solid];
m45_175 -> m45_182  [key=2, style=dotted];
m45_177 -> m45_178  [key=0, style=solid];
m45_177 -> m45_219  [key=2, style=dotted];
m45_178 -> m45_179  [key=0, style=solid];
m45_178 -> m45_221  [key=2, style=dotted];
m45_179 -> m45_180  [key=0, style=solid];
m45_179 -> m45_215  [key=0, style=solid];
m45_179 -> m45_181  [key=0, style=solid];
m45_179 -> m45_182  [key=2, style=dotted];
m45_180 -> m45_179  [key=0, style=solid];
m45_180 -> m45_224  [key=2, style=dotted];
m45_180 -> m45_181  [key=0, style=solid];
m45_182 -> m45_183  [key=0, style=solid];
m45_182 -> m45_219  [key=2, style=dotted];
m45_183 -> m45_184  [key=0, style=solid];
m45_183 -> m45_221  [key=2, style=dotted];
m45_183 -> m45_185  [key=1, style=dashed, color=darkseagreen4, label="params Newtonsoft.Json.JsonConverter[]"];
m45_183 -> m45_187  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m45_183 -> m45_191  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m45_183 -> m45_194  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m45_183 -> m45_197  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m45_183 -> m45_200  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m45_183 -> m45_204  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m45_183 -> m45_206  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m45_183 -> m45_208  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m45_183 -> m45_209  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m45_183 -> m45_213  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m45_183 -> m45_215  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m45_183 -> m45_217  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m45_183 -> m45_218  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m45_183 -> m45_224  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m45_183 -> m45_227  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m45_183 -> m45_230  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m45_183 -> m45_233  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m45_183 -> m45_236  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m45_183 -> m45_239  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m45_184 -> m45_185  [key=0, style=solid];
m45_184 -> m45_215  [key=0, style=solid];
m45_184 -> m45_189  [key=0, style=solid];
m45_185 -> m45_184  [key=0, style=solid];
m45_185 -> m45_225  [key=2, style=dotted];
m45_185 -> m45_186  [key=0, style=solid];
m45_185 -> m45_172  [key=2, style=dotted];
m45_185 -> m45_243  [key=2, style=dotted];
m45_185 -> m45_187  [key=1, style=dashed, color=darkseagreen4, label=matchingConverter];
m45_187 -> m45_188  [key=0, style=solid];
m45_187 -> m45_219  [key=2, style=dotted];
m45_187 -> m45_244  [key=2, style=dotted];
m45_187 -> m45_245  [key=2, style=dotted];
m45_188 -> m45_189  [key=0, style=solid];
m45_188 -> m45_221  [key=2, style=dotted];
m45_188 -> m45_241  [key=0, style=solid];
m45_189 -> m45_190  [key=0, style=solid];
m45_189 -> m45_215  [key=0, style=solid];
m45_189 -> m45_193  [key=0, style=solid];
m45_189 -> m45_196  [key=0, style=solid];
m45_189 -> m45_199  [key=0, style=solid];
m45_189 -> m45_202  [key=0, style=solid];
m45_189 -> m45_211  [key=0, style=solid];
m45_189 -> m45_220  [key=0, style=solid];
m45_189 -> m45_223  [key=0, style=solid];
m45_189 -> m45_226  [key=0, style=solid];
m45_189 -> m45_229  [key=0, style=solid];
m45_189 -> m45_232  [key=0, style=solid];
m45_189 -> m45_235  [key=0, style=solid];
m45_189 -> m45_238  [key=0, style=solid];
m45_190 -> m45_189  [key=0, style=solid];
m45_190 -> m45_226  [key=2, style=dotted];
m45_190 -> m45_191  [key=0, style=solid];
m45_192 -> m45_193  [key=0, style=solid];
m45_192 -> m45_219  [key=2, style=dotted];
m45_192 -> m45_241  [key=0, style=solid];
m45_193 -> m45_194  [key=0, style=solid];
m45_193 -> m45_221  [key=2, style=dotted];
m45_194 -> m45_195  [key=0, style=solid];
m45_194 -> m45_215  [key=0, style=solid];
m45_194 -> m45_246  [key=2, style=dotted];
m45_194 -> m45_248  [key=2, style=dotted];
m45_195 -> m45_194  [key=0, style=solid];
m45_195 -> m45_227  [key=2, style=dotted];
m45_195 -> m45_241  [key=0, style=solid];
m45_197 -> m45_198  [key=0, style=solid];
m45_197 -> m45_221  [key=2, style=dotted];
m45_197 -> m45_249  [key=2, style=dotted];
m45_198 -> m45_199  [key=0, style=solid];
m45_198 -> m45_200  [key=0, style=solid];
m45_198 -> m45_241  [key=0, style=solid];
m45_199 -> m45_198  [key=0, style=solid];
m45_199 -> m45_228  [key=2, style=dotted];
m45_199 -> m45_200  [key=0, style=solid];
m45_200 -> m45_215  [key=0, style=solid];
m45_200 -> m45_41  [key=2, style=dotted];
m45_200 -> m45_201  [key=0, style=solid];
m45_200 -> m45_250  [key=2, style=dotted];
m45_202 -> m45_203  [key=0, style=solid];
m45_202 -> m45_221  [key=2, style=dotted];
m45_203 -> m45_204  [key=0, style=solid];
m45_203 -> m45_205  [key=0, style=solid];
m45_204 -> m45_203  [key=0, style=solid];
m45_204 -> m45_229  [key=2, style=dotted];
m45_204 -> m45_210  [key=0, style=solid];
m45_204 -> m45_251  [key=2, style=dotted];
m45_205 -> m45_215  [key=0, style=solid];
m45_205 -> m45_41  [key=2, style=dotted];
m45_205 -> m45_206  [key=0, style=solid];
m45_205 -> m45_207  [key=0, style=solid];
m45_207 -> m45_208  [key=0, style=solid];
m45_207 -> m45_221  [key=2, style=dotted];
m45_207 -> m45_209  [key=0, style=solid];
m45_208 -> m45_215  [key=0, style=solid];
m45_208 -> m45_41  [key=2, style=dotted];
m45_208 -> m45_210  [key=0, style=solid];
m45_208 -> m45_253  [key=2, style=dotted];
m45_212 -> m45_215  [key=0, style=solid];
m45_212 -> m45_221  [key=2, style=dotted];
m45_212 -> m45_213  [key=0, style=solid];
m45_212 -> m45_214  [key=0, style=solid];
m45_171 -> m45_172  [key=0, style=solid];
m45_171 -> m45_173  [key=0, style=solid];
m45_171 -> m45_175  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenType?"];
m45_171 -> m45_179  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenType?"];
m45_176 -> m45_177  [key=0, style=solid];
m45_181 -> m45_182  [key=0, style=solid];
m45_181 -> m45_171  [key=0, style=bold, color=blue];
m45_186 -> m45_187  [key=0, style=solid];
m45_186 -> m45_189  [key=0, style=solid];
m45_191 -> m45_192  [key=0, style=solid];
m45_191 -> m45_246  [key=2, style=dotted];
m45_191 -> m45_247  [key=2, style=dotted];
m45_196 -> m45_197  [key=0, style=solid];
m45_201 -> m45_202  [key=0, style=solid];
m45_201 -> m45_241  [key=0, style=solid];
m45_206 -> m45_207  [key=0, style=solid];
m45_206 -> m45_210  [key=0, style=solid];
m45_206 -> m45_252  [key=2, style=dotted];
m45_209 -> m45_210  [key=0, style=solid];
m45_209 -> m45_104  [key=2, style=dotted];
m45_209 -> m45_252  [key=2, style=dotted];
m45_213 -> m45_215  [key=0, style=solid];
m45_213 -> m45_219  [key=0, style=solid];
m45_213 -> m45_254  [key=2, style=dotted];
m45_214 -> m45_215  [key=0, style=solid];
m45_214 -> m45_230  [key=2, style=dotted];
m45_214 -> m45_216  [key=0, style=solid];
m45_211 -> m45_212  [key=0, style=solid];
m45_210 -> m45_211  [key=0, style=solid];
m45_210 -> m45_241  [key=0, style=solid];
m45_215 -> m45_105  [key=0, style=bold, color=blue];
m45_215 -> m45_219  [key=0, style=solid];
m45_215 -> m45_255  [key=2, style=dotted];
m45_224 -> m45_372  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m45_224 -> m45_374  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m45_224 -> m45_378  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m45_224 -> m45_380  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m45_224 -> m45_383  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m45_224 -> m45_385  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m45_224 -> m45_389  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m45_224 -> m45_370  [key=0, style=solid];
m45_224 -> m45_376  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m45_224 -> m45_377  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m45_224 -> m45_379  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m45_224 -> m45_381  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m45_224 -> m45_382  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m45_224 -> m45_384  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m45_224 -> m45_386  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m45_224 -> m45_387  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m45_224 -> m45_225  [key=0, style=solid];
m45_224 -> m45_108  [key=2, style=dotted];
m45_224 -> m45_258  [key=2, style=dotted];
m45_372 -> m45_373  [key=0, style=solid];
m45_372 -> m45_374  [key=0, style=solid];
m45_372 -> m45_304  [key=2, style=dotted];
m45_374 -> m45_375  [key=0, style=solid];
m45_374 -> m45_71  [key=2, style=dotted];
m45_375 -> m45_376  [key=0, style=solid];
m45_375 -> m45_391  [key=2, style=dotted];
m45_375 -> m45_377  [key=1, style=dashed, color=darkseagreen4, label=value];
m45_375 -> m45_378  [key=1, style=dashed, color=darkseagreen4, label=value];
m45_375 -> m45_379  [key=1, style=dashed, color=darkseagreen4, label=value];
m45_375 -> m45_380  [key=1, style=dashed, color=darkseagreen4, label=value];
m45_375 -> m45_382  [key=1, style=dashed, color=darkseagreen4, label=value];
m45_375 -> m45_383  [key=1, style=dashed, color=darkseagreen4, label=value];
m45_375 -> m45_384  [key=1, style=dashed, color=darkseagreen4, label=value];
m45_375 -> m45_385  [key=1, style=dashed, color=darkseagreen4, label=value];
m45_375 -> m45_387  [key=1, style=dashed, color=darkseagreen4, label=value];
m45_375 -> m45_389  [key=1, style=dashed, color=darkseagreen4, label=value];
m45_378 -> m45_379  [key=0, style=solid];
m45_378 -> m45_392  [key=2, style=dotted];
m45_378 -> m45_54  [key=2, style=dotted];
m45_378 -> m45_48  [key=2, style=dotted];
m45_380 -> m45_381  [key=0, style=solid];
m45_380 -> m45_392  [key=2, style=dotted];
m45_380 -> m45_54  [key=2, style=dotted];
m45_380 -> m45_48  [key=2, style=dotted];
m45_383 -> m45_384  [key=0, style=solid];
m45_383 -> m45_392  [key=2, style=dotted];
m45_383 -> m45_54  [key=2, style=dotted];
m45_383 -> m45_48  [key=2, style=dotted];
m45_385 -> m45_386  [key=0, style=solid];
m45_385 -> m45_392  [key=2, style=dotted];
m45_385 -> m45_54  [key=2, style=dotted];
m45_385 -> m45_48  [key=2, style=dotted];
m45_389 -> m45_390  [key=0, style=solid];
m45_389 -> m45_392  [key=2, style=dotted];
m45_389 -> m45_54  [key=2, style=dotted];
m45_389 -> m45_48  [key=2, style=dotted];
m45_370 -> m45_372  [key=0, style=solid];
m45_370 -> m45_371  [key=0, style=solid];
m45_373 -> m45_390  [key=0, style=solid];
m45_376 -> m45_377  [key=0, style=solid];
m45_376 -> m45_381  [key=0, style=solid];
m45_377 -> m45_378  [key=0, style=solid];
m45_377 -> m45_379  [key=0, style=solid];
m45_379 -> m45_380  [key=0, style=solid];
m45_379 -> m45_381  [key=0, style=solid];
m45_382 -> m45_383  [key=0, style=solid];
m45_382 -> m45_384  [key=0, style=solid];
m45_384 -> m45_385  [key=0, style=solid];
m45_384 -> m45_386  [key=0, style=solid];
m45_387 -> m45_388  [key=0, style=solid];
m45_387 -> m45_393  [key=2, style=dotted];
m45_381 -> m45_382  [key=0, style=solid];
m45_381 -> m45_386  [key=0, style=solid];
m45_386 -> m45_387  [key=0, style=solid];
m45_386 -> m45_390  [key=0, style=solid];
m45_388 -> m45_389  [key=0, style=solid];
m45_388 -> m45_390  [key=0, style=solid];
m45_388 -> m45_362  [key=2, style=dotted];
m45_371 -> m45_390  [key=0, style=solid];
m45_390 -> m45_224  [key=0, style=bold, color=blue];
m45_99 -> m45_100  [key=0, style=solid];
m45_99 -> m45_119  [key=2, style=dotted];
m45_99 -> m45_120  [key=2, style=dotted];
m45_99 -> m45_121  [key=2, style=dotted];
m45_100 -> m45_101  [key=0, style=solid];
m45_100 -> m45_104  [key=2, style=dotted];
m45_100 -> m45_102  [key=1, style=dashed, color=darkseagreen4, label=i];
m45_100 -> m45_41  [key=0, style=bold, color=blue];
m45_101 -> m45_102  [key=0, style=solid];
m45_101 -> m45_105  [key=2, style=dotted];
m45_102 -> m45_103  [key=0, style=solid];
m45_103 -> m45_99  [key=0, style=bold, color=blue];
m45_103 -> m45_122  [key=0, style=solid];
m45_103 -> m45_123  [key=1, style=dashed, color=darkseagreen4, label=object];
m45_9 -> m45_8  [key=0, style=bold, color=blue];
m45_40 -> m45_270  [key=0, style=solid];
m45_124 -> m45_125  [key=0, style=solid];
m45_124 -> m45_126  [key=0, style=solid];
m45_124 -> m45_129  [key=2, style=dotted];
m45_125 -> m45_126  [key=0, style=solid];
m45_125 -> m45_129  [key=2, style=dotted];
m45_125 -> m45_127  [key=1, style=dashed, color=darkseagreen4, label=dateTime];
m45_126 -> m45_127  [key=0, style=solid];
m45_126 -> m45_105  [key=2, style=dotted];
m45_126 -> m45_130  [key=2, style=dotted];
m45_127 -> m45_128  [key=0, style=solid];
m45_127 -> m45_103  [key=0, style=bold, color=blue];
m45_128 -> m45_124  [key=0, style=bold, color=blue];
m45_283 -> m45_284  [key=0, style=solid];
m45_283 -> m45_268  [key=2, style=dotted];
m45_69 -> m45_70  [key=0, style=solid];
m45_108 -> m45_109  [key=0, style=solid];
m45_108 -> m45_105  [key=2, style=dotted];
m45_218 -> m45_219  [key=0, style=solid];
m45_218 -> m45_128  [key=2, style=dotted];
m45_218 -> m45_255  [key=2, style=dotted];
m45_219 -> m45_364  [key=0, style=solid];
m45_219 -> m45_241  [key=0, style=solid];
m45_364 -> m45_365  [key=0, style=solid];
m45_364 -> m45_369  [key=0, style=solid];
m45_365 -> m45_366  [key=0, style=solid];
m45_366 -> m45_367  [key=0, style=solid];
m45_366 -> m45_369  [key=0, style=solid];
m45_366 -> m45_368  [key=1, style=dashed, color=darkseagreen4, label=currentSchema];
m45_367 -> m45_366  [key=0, style=solid];
m45_367 -> m45_368  [key=0, style=solid];
m45_368 -> m45_366  [key=0, style=solid];
m45_368 -> m45_81  [key=2, style=dotted];
m45_368 -> m45_48  [key=2, style=dotted];
m45_369 -> m45_219  [key=0, style=bold, color=blue];
m45_119 -> m45_120  [key=0, style=solid];
m45_119 -> m45_123  [key=2, style=dotted];
m45_119 -> m45_121  [key=1, style=dashed, color=darkseagreen4, label=s];
m45_120 -> m45_121  [key=0, style=solid];
m45_120 -> m45_105  [key=2, style=dotted];
m45_122 -> m45_118  [key=0, style=bold, color=blue];
m45_122 -> m45_123  [key=0, style=solid];
m45_122 -> m45_128  [key=2, style=dotted];
m45_122 -> m45_124  [key=1, style=dashed, color=darkseagreen4, label=d1];
m45_122 -> m45_126  [key=1, style=dashed, color=darkseagreen4, label=d1];
m45_109 -> m45_110  [key=0, style=solid];
m45_12 -> m45_13  [key=0, style=solid];
m45_275 -> m45_276  [key=0, style=solid];
m45_275 -> m45_40  [key=2, style=dotted];
m45_275 -> m45_281  [key=0, style=solid];
m45_274 -> m45_276  [key=0, style=solid];
m45_274 -> m45_275  [key=0, style=solid];
m45_276 -> m45_272  [key=0, style=bold, color=blue];
m45_276 -> m45_277  [key=0, style=solid];
m45_276 -> m45_278  [key=1, style=dashed, color=darkseagreen4, label=requiredProperties];
m45_106 -> m45_107  [key=0, style=solid];
m45_107 -> m45_108  [key=0, style=solid];
m45_107 -> m45_111  [key=2, style=dotted];
m45_107 -> m45_109  [key=1, style=dashed, color=darkseagreen4, label=data];
m45_230 -> m45_231  [key=0, style=solid];
m45_230 -> m45_260  [key=2, style=dotted];
m45_56 -> m45_57  [key=0, style=solid];
m45_56 -> m45_59  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaException"];
m45_56 -> m45_60  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaException"];
m45_56 -> m45_58  [key=0, style=solid];
m45_57 -> m45_58  [key=0, style=solid];
m45_57 -> m45_59  [key=1, style=dashed, color=darkseagreen4, label=handler];
m45_57 -> m45_100  [key=0, style=solid];
m45_57 -> m45_101  [key=2, style=dotted];
m45_57 -> m45_102  [key=2, style=dotted];
m45_59 -> m45_61  [key=0, style=solid];
m45_59 -> m45_62  [key=2, style=dotted];
m45_59 -> m45_63  [key=2, style=dotted];
m45_59 -> m45_60  [key=0, style=solid];
m45_58 -> m45_59  [key=0, style=solid];
m45_58 -> m45_60  [key=0, style=solid];
m45_58 -> m45_100  [key=0, style=solid];
m45_58 -> m45_103  [key=2, style=dotted];
m45_60 -> m45_61  [key=0, style=solid];
m45_61 -> m45_56  [key=0, style=bold, color=blue];
m45_61 -> m45_62  [key=0, style=solid];
m45_55 -> m45_56  [key=0, style=solid];
m45_116 -> m45_112  [key=0, style=bold, color=blue];
m45_223 -> m45_330  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m45_223 -> m45_332  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m45_223 -> m45_336  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m45_223 -> m45_338  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m45_223 -> m45_341  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m45_223 -> m45_343  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m45_223 -> m45_354  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m45_223 -> m45_328  [key=0, style=solid];
m45_223 -> m45_334  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m45_223 -> m45_335  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m45_223 -> m45_337  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m45_223 -> m45_339  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m45_223 -> m45_340  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m45_223 -> m45_342  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m45_223 -> m45_344  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m45_223 -> m45_348  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m45_223 -> m45_351  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m45_223 -> m45_352  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m45_223 -> m45_224  [key=0, style=solid];
m45_330 -> m45_331  [key=0, style=solid];
m45_330 -> m45_332  [key=0, style=solid];
m45_330 -> m45_304  [key=2, style=dotted];
m45_332 -> m45_333  [key=0, style=solid];
m45_332 -> m45_71  [key=2, style=dotted];
m45_333 -> m45_334  [key=0, style=solid];
m45_333 -> m45_335  [key=1, style=dashed, color=darkseagreen4, label=value];
m45_333 -> m45_336  [key=1, style=dashed, color=darkseagreen4, label=value];
m45_333 -> m45_337  [key=1, style=dashed, color=darkseagreen4, label=value];
m45_333 -> m45_338  [key=1, style=dashed, color=darkseagreen4, label=value];
m45_333 -> m45_340  [key=1, style=dashed, color=darkseagreen4, label=value];
m45_333 -> m45_341  [key=1, style=dashed, color=darkseagreen4, label=value];
m45_333 -> m45_342  [key=1, style=dashed, color=darkseagreen4, label=value];
m45_333 -> m45_343  [key=1, style=dashed, color=darkseagreen4, label=value];
m45_333 -> m45_346  [key=1, style=dashed, color=darkseagreen4, label=value];
m45_333 -> m45_347  [key=1, style=dashed, color=darkseagreen4, label=value];
m45_333 -> m45_352  [key=1, style=dashed, color=darkseagreen4, label=value];
m45_333 -> m45_354  [key=1, style=dashed, color=darkseagreen4, label=value];
m45_336 -> m45_337  [key=0, style=solid];
m45_336 -> m45_54  [key=2, style=dotted];
m45_336 -> m45_48  [key=2, style=dotted];
m45_338 -> m45_339  [key=0, style=solid];
m45_338 -> m45_54  [key=2, style=dotted];
m45_338 -> m45_48  [key=2, style=dotted];
m45_341 -> m45_342  [key=0, style=solid];
m45_341 -> m45_54  [key=2, style=dotted];
m45_341 -> m45_48  [key=2, style=dotted];
m45_343 -> m45_344  [key=0, style=solid];
m45_343 -> m45_54  [key=2, style=dotted];
m45_343 -> m45_48  [key=2, style=dotted];
m45_354 -> m45_355  [key=0, style=solid];
m45_354 -> m45_363  [key=2, style=dotted];
m45_354 -> m45_54  [key=2, style=dotted];
m45_354 -> m45_48  [key=2, style=dotted];
m45_328 -> m45_330  [key=0, style=solid];
m45_328 -> m45_329  [key=0, style=solid];
m45_331 -> m45_355  [key=0, style=solid];
m45_334 -> m45_335  [key=0, style=solid];
m45_334 -> m45_339  [key=0, style=solid];
m45_335 -> m45_336  [key=0, style=solid];
m45_335 -> m45_337  [key=0, style=solid];
m45_335 -> m45_356  [key=2, style=dotted];
m45_337 -> m45_338  [key=0, style=solid];
m45_337 -> m45_339  [key=0, style=solid];
m45_337 -> m45_356  [key=2, style=dotted];
m45_340 -> m45_341  [key=0, style=solid];
m45_340 -> m45_342  [key=0, style=solid];
m45_340 -> m45_356  [key=2, style=dotted];
m45_342 -> m45_343  [key=0, style=solid];
m45_342 -> m45_344  [key=0, style=solid];
m45_342 -> m45_356  [key=2, style=dotted];
m45_346 -> m45_347  [key=0, style=solid];
m45_346 -> m45_352  [key=0, style=solid];
m45_347 -> m45_348  [key=0, style=solid];
m45_347 -> m45_350  [key=1, style=dashed, color=darkseagreen4, label=i];
m45_347 -> m45_351  [key=1, style=dashed, color=darkseagreen4, label=i];
m45_352 -> m45_353  [key=0, style=solid];
m45_352 -> m45_361  [key=2, style=dotted];
m45_352 -> m45_362  [key=2, style=dotted];
m45_339 -> m45_340  [key=0, style=solid];
m45_339 -> m45_344  [key=0, style=solid];
m45_344 -> m45_345  [key=0, style=solid];
m45_344 -> m45_355  [key=0, style=solid];
m45_353 -> m45_354  [key=0, style=solid];
m45_353 -> m45_355  [key=0, style=solid];
m45_348 -> m45_349  [key=0, style=solid];
m45_348 -> m45_357  [key=2, style=dotted];
m45_348 -> m45_358  [key=2, style=dotted];
m45_348 -> m45_359  [key=2, style=dotted];
m45_351 -> m45_353  [key=0, style=solid];
m45_351 -> m45_360  [key=2, style=dotted];
m45_329 -> m45_355  [key=0, style=solid];
m45_345 -> m45_346  [key=0, style=solid];
m45_350 -> m45_353  [key=0, style=solid];
m45_349 -> m45_351  [key=0, style=solid];
m45_349 -> m45_350  [key=0, style=solid];
m45_355 -> m45_223  [key=0, style=bold, color=blue];
m45_290 -> m45_291  [key=0, style=solid];
m45_290 -> m45_292  [key=0, style=solid];
m45_291 -> m45_292  [key=0, style=solid];
m45_291 -> m45_293  [key=2, style=dotted];
m45_291 -> m45_297  [key=0, style=solid];
m45_292 -> m45_290  [key=0, style=bold, color=blue];
m45_292 -> m45_293  [key=0, style=solid];
m45_292 -> m45_294  [key=1, style=dashed, color=darkseagreen4, label=arrayItemCount];
m45_292 -> m45_295  [key=1, style=dashed, color=darkseagreen4, label=arrayItemCount];
m45_292 -> m45_296  [key=1, style=dashed, color=darkseagreen4, label=arrayItemCount];
m45_428 -> m45_431  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m45_428 -> m45_429  [key=0, style=solid];
m45_431 -> m45_432  [key=0, style=solid];
m45_431 -> m45_304  [key=2, style=dotted];
m45_429 -> m45_431  [key=0, style=solid];
m45_429 -> m45_430  [key=0, style=solid];
m45_430 -> m45_432  [key=0, style=solid];
m45_432 -> m45_428  [key=0, style=bold, color=blue];
m45_221 -> m45_222  [key=0, style=solid];
m45_221 -> m45_246  [key=2, style=dotted];
m45_221 -> m45_257  [key=2, style=dotted];
m45_221 -> m45_231  [key=0, style=solid];
m45_221 -> m45_233  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>"];
m45_221 -> m45_245  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>"];
m45_227 -> m45_228  [key=0, style=solid];
m45_227 -> m45_110  [key=2, style=dotted];
m45_227 -> m45_259  [key=2, style=dotted];
m45_227 -> m45_300  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m45_227 -> m45_302  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m45_227 -> m45_298  [key=0, style=solid];
m45_233 -> m45_234  [key=0, style=solid];
m45_233 -> m45_261  [key=2, style=dotted];
m45_233 -> m45_231  [key=0, style=solid];
m45_233 -> m45_11  [key=2, style=dotted];
m45_233 -> m45_265  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m45_236 -> m45_237  [key=0, style=solid];
m45_236 -> m45_262  [key=2, style=dotted];
m45_236 -> m45_254  [key=2, style=dotted];
m45_239 -> m45_240  [key=0, style=solid];
m45_239 -> m45_263  [key=2, style=dotted];
m45_239 -> m45_244  [key=1, style=dashed, color=darkseagreen4, label=finishedItem];
m45_239 -> m45_242  [key=1, style=dashed, color=darkseagreen4, label=finishedItem];
m45_239 -> m45_248  [key=1, style=dashed, color=darkseagreen4, label=finishedItem];
m45_239 -> m45_250  [key=1, style=dashed, color=darkseagreen4, label=finishedItem];
m45_226 -> m45_227  [key=0, style=solid];
m45_226 -> m45_307  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m45_226 -> m45_309  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m45_226 -> m45_305  [key=0, style=solid];
m45_229 -> m45_230  [key=0, style=solid];
m45_229 -> m45_294  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m45_229 -> m45_296  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m45_229 -> m45_290  [key=0, style=solid];
m45_229 -> m45_293  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m45_229 -> m45_295  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m45_232 -> m45_233  [key=0, style=solid];
m45_232 -> m45_241  [key=1, style=dashed, color=darkseagreen4, label=isInUniqueArray];
m45_235 -> m45_236  [key=0, style=solid];
m45_235 -> m45_231  [key=0, style=solid];
m45_235 -> m45_253  [key=2, style=dotted];
m45_238 -> m45_239  [key=0, style=solid];
m45_238 -> m45_231  [key=0, style=solid];
m45_216 -> m45_217  [key=0, style=solid];
m45_216 -> m45_218  [key=0, style=solid];
m45_222 -> m45_241  [key=0, style=solid];
m45_222 -> m45_406  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m45_222 -> m45_408  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m45_222 -> m45_400  [key=0, style=solid];
m45_222 -> m45_405  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m45_225 -> m45_241  [key=0, style=solid];
m45_225 -> m45_313  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m45_225 -> m45_315  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m45_225 -> m45_318  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m45_225 -> m45_320  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m45_225 -> m45_324  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m45_225 -> m45_311  [key=0, style=solid];
m45_225 -> m45_317  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m45_225 -> m45_319  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m45_225 -> m45_321  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m45_225 -> m45_322  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m45_228 -> m45_241  [key=0, style=solid];
m45_228 -> m45_280  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m45_228 -> m45_274  [key=0, style=solid];
m45_231 -> m45_241  [key=0, style=solid];
m45_231 -> m45_232  [key=0, style=solid];
m45_231 -> m45_252  [key=0, style=solid];
m45_231 -> m45_234  [key=1, style=dashed, color=darkseagreen4, label=schemaScope];
m45_231 -> m45_236  [key=1, style=dashed, color=darkseagreen4, label=schemaScope];
m45_231 -> m45_237  [key=1, style=dashed, color=darkseagreen4, label=schemaScope];
m45_231 -> m45_238  [key=1, style=dashed, color=darkseagreen4, label=schemaScope];
m45_231 -> m45_239  [key=1, style=dashed, color=darkseagreen4, label=schemaScope];
m45_231 -> m45_240  [key=1, style=dashed, color=darkseagreen4, label=schemaScope];
m45_231 -> m45_242  [key=1, style=dashed, color=darkseagreen4, label=schemaScope];
m45_231 -> m45_243  [key=1, style=dashed, color=darkseagreen4, label=schemaScope];
m45_231 -> m45_244  [key=1, style=dashed, color=darkseagreen4, label=schemaScope];
m45_234 -> m45_241  [key=0, style=solid];
m45_234 -> m45_235  [key=0, style=solid];
m45_234 -> m45_237  [key=0, style=solid];
m45_237 -> m45_241  [key=0, style=solid];
m45_237 -> m45_238  [key=0, style=solid];
m45_237 -> m45_255  [key=2, style=dotted];
m45_240 -> m45_241  [key=0, style=solid];
m45_242 -> m45_241  [key=0, style=solid];
m45_242 -> m45_119  [key=2, style=dotted];
m45_242 -> m45_121  [key=2, style=dotted];
m45_242 -> m45_243  [key=0, style=solid];
m45_242 -> m45_244  [key=0, style=solid];
m45_242 -> m45_256  [key=2, style=dotted];
m45_241 -> m45_183  [key=0, style=bold, color=blue];
m45_241 -> m45_245  [key=0, style=solid];
m45_241 -> m45_242  [key=0, style=solid];
m45_8 -> m45_9  [key=0, style=solid];
m45_48 -> m45_49  [key=0, style=solid];
m45_48 -> m45_50  [key=1, style=dashed, color=darkseagreen4, label=string];
m45_48 -> m45_55  [key=0, style=solid];
m45_48 -> m45_59  [key=0, style=solid];
m45_48 -> m45_65  [key=0, style=solid];
m45_48 -> m45_69  [key=0, style=solid];
m45_48 -> m45_74  [key=0, style=solid];
m45_48 -> m45_81  [key=0, style=solid];
m45_48 -> m45_87  [key=0, style=solid];
m45_48 -> m45_93  [key=0, style=solid];
m45_48 -> m45_99  [key=0, style=solid];
m45_49 -> m45_50  [key=0, style=solid];
m45_49 -> m45_51  [key=1, style=dashed, color=darkseagreen4, label=lineInfo];
m45_51 -> m45_52  [key=0, style=solid];
m45_51 -> m45_55  [key=2, style=dotted];
m45_51 -> m45_56  [key=2, style=dotted];
m45_51 -> m45_100  [key=0, style=solid];
m45_51 -> m45_101  [key=2, style=dotted];
m45_51 -> m45_102  [key=2, style=dotted];
m45_50 -> m45_51  [key=0, style=solid];
m45_50 -> m45_53  [key=2, style=dotted];
m45_50 -> m45_54  [key=2, style=dotted];
m45_50 -> m45_52  [key=0, style=solid];
m45_52 -> m45_48  [key=0, style=bold, color=blue];
m45_52 -> m45_53  [key=0, style=solid];
m45_52 -> m45_54  [key=0, style=solid];
m45_402 -> m45_403  [key=0, style=solid];
m45_402 -> m45_411  [key=2, style=dotted];
m45_402 -> m45_404  [key=1, style=dashed, color=darkseagreen4, label=propertyName];
m45_402 -> m45_406  [key=1, style=dashed, color=darkseagreen4, label=propertyName];
m45_402 -> m45_408  [key=1, style=dashed, color=darkseagreen4, label=propertyName];
m45_402 -> m45_409  [key=1, style=dashed, color=darkseagreen4, label=propertyName];
m45_403 -> m45_404  [key=0, style=solid];
m45_403 -> m45_405  [key=0, style=solid];
m45_403 -> m45_412  [key=2, style=dotted];
m45_404 -> m45_405  [key=0, style=solid];
m45_406 -> m45_407  [key=0, style=solid];
m45_406 -> m45_413  [key=2, style=dotted];
m45_408 -> m45_409  [key=0, style=solid];
m45_408 -> m45_81  [key=2, style=dotted];
m45_408 -> m45_48  [key=2, style=dotted];
m45_409 -> m45_410  [key=0, style=solid];
m45_400 -> m45_402  [key=0, style=solid];
m45_400 -> m45_401  [key=0, style=solid];
m45_405 -> m45_406  [key=0, style=solid];
m45_405 -> m45_409  [key=0, style=solid];
m45_407 -> m45_408  [key=0, style=solid];
m45_407 -> m45_409  [key=0, style=solid];
m45_401 -> m45_410  [key=0, style=solid];
m45_410 -> m45_222  [key=0, style=bold, color=blue];
m45_41 -> m45_42  [key=0, style=solid];
m45_41 -> m45_44  [key=1, style=dashed, color=darkseagreen4, label=object];
m45_41 -> m45_46  [key=1, style=dashed, color=darkseagreen4, label=object];
m45_41 -> m45_48  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenType"];
m45_41 -> m45_50  [key=1, style=dashed, color=darkseagreen4, label=object];
m45_41 -> m45_51  [key=1, style=dashed, color=darkseagreen4, label=object];
m45_41 -> m45_52  [key=1, style=dashed, color=darkseagreen4, label=object];
m45_41 -> m45_53  [key=1, style=dashed, color=darkseagreen4, label=object];
m45_41 -> m45_54  [key=1, style=dashed, color=darkseagreen4, label=object];
m45_41 -> m45_56  [key=1, style=dashed, color=darkseagreen4, label=object];
m45_41 -> m45_57  [key=1, style=dashed, color=darkseagreen4, label=object];
m45_41 -> m45_58  [key=1, style=dashed, color=darkseagreen4, label=object];
m45_41 -> m45_62  [key=1, style=dashed, color=darkseagreen4, label=object];
m45_41 -> m45_63  [key=1, style=dashed, color=darkseagreen4, label=object];
m45_41 -> m45_66  [key=1, style=dashed, color=darkseagreen4, label=object];
m45_41 -> m45_67  [key=1, style=dashed, color=darkseagreen4, label=object];
m45_41 -> m45_70  [key=1, style=dashed, color=darkseagreen4, label=object];
m45_41 -> m45_72  [key=1, style=dashed, color=darkseagreen4, label=object];
m45_41 -> m45_75  [key=1, style=dashed, color=darkseagreen4, label=object];
m45_41 -> m45_78  [key=1, style=dashed, color=darkseagreen4, label=object];
m45_41 -> m45_82  [key=1, style=dashed, color=darkseagreen4, label=object];
m45_41 -> m45_84  [key=1, style=dashed, color=darkseagreen4, label=object];
m45_41 -> m45_85  [key=1, style=dashed, color=darkseagreen4, label=object];
m45_41 -> m45_88  [key=1, style=dashed, color=darkseagreen4, label=object];
m45_41 -> m45_91  [key=1, style=dashed, color=darkseagreen4, label=object];
m45_41 -> m45_94  [key=1, style=dashed, color=darkseagreen4, label=object];
m45_41 -> m45_96  [key=1, style=dashed, color=darkseagreen4, label=object];
m45_41 -> m45_97  [key=1, style=dashed, color=darkseagreen4, label=object];
m45_41 -> m45_99  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenType"];
m45_42 -> m45_43  [key=0, style=solid];
m45_42 -> m45_46  [key=2, style=dotted];
m45_42 -> m45_44  [key=1, style=dashed, color=darkseagreen4, label=poppedScope];
m45_43 -> m45_44  [key=0, style=solid];
m45_43 -> m45_47  [key=2, style=dotted];
m45_43 -> m45_100  [key=0, style=solid];
m45_44 -> m45_45  [key=0, style=solid];
m45_44 -> m45_46  [key=0, style=solid];
m45_45 -> m45_41  [key=0, style=bold, color=blue];
m45_45 -> m45_100  [key=0, style=solid];
m45_123 -> m45_124  [key=0, style=solid];
m45_123 -> m45_128  [key=2, style=dotted];
m45_123 -> m45_126  [key=1, style=dashed, color=darkseagreen4, label=d2];
m45_47 -> m45_100  [key=0, style=solid];
m45_251 -> m45_246  [key=0, style=solid];
m45_251 -> m45_264  [key=2, style=dotted];
m45_251 -> m45_81  [key=2, style=dotted];
m45_251 -> m45_48  [key=2, style=dotted];
m45_115 -> m45_116  [key=0, style=solid];
m45_6 -> m45_7  [key=0, style=solid];
m45_6 -> m45_12  [key=2, style=dotted];
m45_7 -> m45_6  [key=0, style=bold, color=blue];
m45_7 -> m45_0  [key=0, style=bold, color=blue];
m45_64 -> m45_65  [key=0, style=solid, color=green];
m45_64 -> m45_66  [key=1, style=dashed, color=green, label="Newtonsoft.Json.JsonReader"];
m45_64 -> m45_100  [key=0, style=solid];
m45_64 -> m45_107  [key=2, style=dotted];
m45_65 -> m45_66  [key=0, style=solid, color=green];
m45_65 -> m45_69  [key=2, style=dotted, color=green];
m45_66 -> m45_67  [key=0, style=solid, color=green];
m45_66 -> m45_108  [key=2, style=dotted];
m45_66 -> m45_68  [key=1, style=dashed, color=darkseagreen4, label=b1];
m45_67 -> m45_68  [key=0, style=solid, color=green];
m45_67 -> m45_70  [key=2, style=dotted, color=green];
m45_67 -> m45_108  [key=2, style=dotted];
m45_68 -> m45_64  [key=0, style=bold, color=blue];
m45_68 -> m45_100  [key=0, style=solid];
m45_68 -> m45_109  [key=2, style=dotted];
m45_244 -> m45_231  [key=0, style=solid];
m45_244 -> m45_259  [key=2, style=dotted];
m45_11 -> m45_10  [key=0, style=bold, color=blue];
m45_26 -> m45_27  [key=0, style=solid];
m45_26 -> m45_22  [key=0, style=bold, color=blue];
m45_280 -> m45_281  [key=0, style=solid];
m45_280 -> m45_282  [key=2, style=dotted];
m45_280 -> m45_283  [key=2, style=dotted];
m45_280 -> m45_81  [key=2, style=dotted];
m45_280 -> m45_48  [key=2, style=dotted];
m45_281 -> m45_228  [key=0, style=bold, color=blue];
m45_281 -> m45_282  [key=0, style=solid];
m45_281 -> m45_283  [key=0, style=solid];
m45_24 -> m45_25  [key=0, style=solid];
m45_24 -> m45_26  [key=0, style=solid];
m45_24 -> m45_27  [key=2, style=dotted];
m45_25 -> m45_24  [key=0, style=bold, color=blue];
m45_25 -> m45_28  [key=2, style=dotted];
m45_25 -> m45_26  [key=0, style=solid];
m45_25 -> m45_29  [key=2, style=dotted];
m45_25 -> m45_30  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m45_25 -> m45_33  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m45_4 -> m45_7  [key=0, style=solid];
m45_4 -> m45_5  [key=0, style=solid];
m45_4 -> m45_11  [key=2, style=dotted];
m45_4 -> m45_19  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m45_5 -> m45_6  [key=0, style=solid];
m45_5 -> m45_4  [key=0, style=bold, color=blue];
m45_249 -> m45_251  [key=1, style=dashed, color=darkseagreen4, label=sw];
m45_249 -> m45_250  [key=0, style=solid];
m45_249 -> m45_261  [key=2, style=dotted];
m45_318 -> m45_319  [key=0, style=solid];
m45_318 -> m45_321  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m45_318 -> m45_322  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m45_318 -> m45_54  [key=2, style=dotted];
m45_318 -> m45_48  [key=2, style=dotted];
m45_319 -> m45_320  [key=0, style=solid];
m45_319 -> m45_321  [key=0, style=solid];
m45_321 -> m45_322  [key=0, style=solid];
m45_321 -> m45_325  [key=0, style=solid];
m45_322 -> m45_323  [key=0, style=solid];
m45_322 -> m45_41  [key=2, style=dotted];
m45_322 -> m45_324  [key=1, style=dashed, color=darkseagreen4, label=pattern];
m45_322 -> m45_325  [key=0, style=solid];
m45_320 -> m45_323  [key=0, style=solid];
m45_320 -> m45_321  [key=0, style=solid];
m45_320 -> m45_54  [key=2, style=dotted];
m45_320 -> m45_48  [key=2, style=dotted];
m45_323 -> m45_318  [key=0, style=bold, color=blue];
m45_323 -> m45_324  [key=0, style=solid];
m45_323 -> m45_322  [key=0, style=solid];
m45_323 -> m45_327  [key=2, style=dotted];
m45_22 -> m45_23  [key=0, style=solid];
m45_22 -> m45_25  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m45_23 -> m45_22  [key=0, style=bold, color=blue];
m45_23 -> m45_25  [key=0, style=solid];
m45_23 -> m45_24  [key=0, style=solid];
m45_250 -> m45_251  [key=0, style=solid];
m45_250 -> m45_262  [key=2, style=dotted];
m45_250 -> m45_263  [key=2, style=dotted];
m45_79 -> m45_82  [key=0, style=solid];
m45_79 -> m45_80  [key=0, style=solid];
m45_79 -> m45_113  [key=2, style=dotted];
m45_82 -> m45_83  [key=0, style=solid];
m45_82 -> m45_85  [key=0, style=solid];
m45_82 -> m45_87  [key=0, style=solid];
m45_82 -> m45_89  [key=0, style=solid];
m45_82 -> m45_91  [key=0, style=solid];
m45_82 -> m45_93  [key=0, style=solid];
m45_82 -> m45_95  [key=0, style=solid];
m45_82 -> m45_97  [key=0, style=solid];
m45_82 -> m45_84  [key=0, style=solid];
m45_83 -> m45_84  [key=0, style=solid];
m45_83 -> m45_100  [key=0, style=solid];
m45_83 -> m45_112  [key=2, style=dotted];
m45_85 -> m45_86  [key=0, style=solid];
m45_87 -> m45_88  [key=0, style=solid];
m45_89 -> m45_90  [key=0, style=solid];
m45_89 -> m45_91  [key=0, style=solid];
m45_91 -> m45_92  [key=0, style=solid];
m45_93 -> m45_94  [key=0, style=solid];
m45_95 -> m45_96  [key=0, style=solid];
m45_95 -> m45_100  [key=0, style=solid];
m45_95 -> m45_112  [key=2, style=dotted];
m45_97 -> m45_98  [key=0, style=solid];
m45_84 -> m45_98  [key=0, style=solid];
m45_84 -> m45_85  [key=0, style=solid];
m45_84 -> m45_86  [key=1, style=dashed, color=darkseagreen4, label=guid1];
m45_86 -> m45_98  [key=0, style=solid];
m45_86 -> m45_100  [key=0, style=solid];
m45_86 -> m45_115  [key=2, style=dotted];
m45_86 -> m45_86  [key=1, style=dashed, color=darkseagreen4, label=guid1];
m45_88 -> m45_98  [key=0, style=solid];
m45_88 -> m45_89  [key=0, style=solid];
m45_88 -> m45_92  [key=1, style=dashed, color=darkseagreen4, label=uri2];
m45_90 -> m45_98  [key=0, style=solid];
m45_90 -> m45_100  [key=0, style=solid];
m45_90 -> m45_112  [key=2, style=dotted];
m45_92 -> m45_98  [key=0, style=solid];
m45_92 -> m45_100  [key=0, style=solid];
m45_92 -> m45_116  [key=2, style=dotted];
m45_92 -> m45_117  [key=2, style=dotted];
m45_94 -> m45_98  [key=0, style=solid];
m45_94 -> m45_95  [key=0, style=solid];
m45_94 -> m45_96  [key=0, style=solid];
m45_96 -> m45_98  [key=0, style=solid];
m45_96 -> m45_97  [key=0, style=solid];
m45_98 -> m45_79  [key=0, style=bold, color=blue];
m45_98 -> m45_100  [key=0, style=solid];
m45_98 -> m45_118  [key=2, style=dotted];
m45_98 -> m45_98  [key=1, style=dashed, color=darkseagreen4, label=ts1];
m45_293 -> m45_297  [key=0, style=solid];
m45_293 -> m45_301  [key=1, style=dashed, color=darkseagreen4, label=string];
m45_293 -> m45_294  [key=0, style=solid];
m45_293 -> m45_295  [key=0, style=solid];
m45_297 -> m45_298  [key=0, style=solid];
m45_297 -> m45_299  [key=0, style=solid];
m45_297 -> m45_229  [key=0, style=bold, color=blue];
m45_301 -> m45_303  [key=0, style=solid];
m45_301 -> m45_304  [key=2, style=dotted];
m45_298 -> m45_303  [key=0, style=solid];
m45_298 -> m45_300  [key=0, style=solid];
m45_298 -> m45_299  [key=0, style=solid];
m45_299 -> m45_300  [key=0, style=solid];
m45_299 -> m45_301  [key=1, style=dashed, color=darkseagreen4, label=formattable];
m45_299 -> m45_303  [key=0, style=solid];
m45_300 -> m45_301  [key=0, style=solid];
m45_300 -> m45_302  [key=0, style=solid];
m45_300 -> m45_304  [key=2, style=dotted];
m45_302 -> m45_303  [key=0, style=solid];
m45_302 -> m45_246  [key=2, style=dotted];
m45_302 -> m45_71  [key=2, style=dotted];
m45_303 -> m45_293  [key=0, style=bold, color=blue];
m45_303 -> m45_227  [key=0, style=bold, color=blue];
m45_423 -> m45_426  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m45_423 -> m45_424  [key=0, style=solid];
m45_426 -> m45_427  [key=0, style=solid];
m45_426 -> m45_304  [key=2, style=dotted];
m45_424 -> m45_426  [key=0, style=solid];
m45_424 -> m45_425  [key=0, style=solid];
m45_425 -> m45_427  [key=0, style=solid];
m45_427 -> m45_423  [key=0, style=bold, color=blue];
m45_62 -> m45_63  [key=0, style=solid];
m45_62 -> m45_106  [key=2, style=dotted];
m45_62 -> m45_64  [key=1, style=dashed, color=darkseagreen4, label=s1];
m45_114 -> m45_115  [key=0, style=solid];
m45_114 -> m45_105  [key=2, style=dotted];
m45_81 -> m45_82  [key=0, style=solid];
m45_393 -> m45_394  [key=0, style=solid];
m45_394 -> m45_395  [key=0, style=solid];
m45_394 -> m45_396  [key=2, style=dotted];
m45_395 -> m45_393  [key=0, style=bold, color=blue];
m45_112 -> m45_113  [key=0, style=solid];
m45_282 -> m45_284  [key=0, style=solid];
m45_362 -> m45_397  [key=0, style=solid];
m45_362 -> m45_398  [key=1, style=dashed, color=darkseagreen4, label=double];
m45_397 -> m45_398  [key=0, style=solid];
m45_398 -> m45_358  [key=2, style=dotted];
m45_398 -> m45_399  [key=0, style=solid];
m45_399 -> m45_362  [key=0, style=bold, color=blue];
m45_243 -> m45_244  [key=0, style=solid];
m45_243 -> m45_81  [key=2, style=dotted];
m45_243 -> m45_257  [key=2, style=dotted];
m45_243 -> m45_258  [key=2, style=dotted];
m45_243 -> m45_268  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m45_248 -> m45_246  [key=0, style=solid];
m45_248 -> m45_249  [key=0, style=solid];
m45_248 -> m45_260  [key=2, style=dotted];
m45_246 -> m45_231  [key=0, style=solid];
m45_246 -> m45_251  [key=1, style=dashed, color=darkseagreen4, label=schema];
m45_246 -> m45_247  [key=0, style=solid];
m45_246 -> m45_248  [key=1, style=dashed, color=darkseagreen4, label=schema];
m45_113 -> m45_114  [key=0, style=solid];
m45_113 -> m45_117  [key=2, style=dotted];
m45_113 -> m45_115  [key=1, style=dashed, color=darkseagreen4, label=d];
m45_137 -> m45_138  [key=0, style=solid];
m45_137 -> m45_139  [key=0, style=solid];
m45_137 -> m45_144  [key=2, style=dotted];
m45_138 -> m45_139  [key=0, style=solid];
m45_138 -> m45_0  [key=2, style=dotted];
m45_138 -> m45_143  [key=0, style=solid];
m45_139 -> m45_137  [key=0, style=bold, color=blue];
m45_139 -> m45_140  [key=0, style=solid];
m45_139 -> m45_141  [key=0, style=solid];
m45_143 -> m45_144  [key=0, style=solid];
m45_143 -> m45_136  [key=0, style=bold, color=blue];
m45_144 -> m45_145  [key=0, style=solid];
m45_144 -> m45_0  [key=2, style=dotted];
m45_438 -> m45_439  [key=0, style=solid];
m45_439 -> m45_440  [key=0, style=solid];
m45_440 -> m45_441  [key=0, style=solid];
m45_440 -> m45_53  [key=2, style=dotted];
m45_441 -> m45_438  [key=0, style=bold, color=blue];
m45_324 -> m45_322  [key=0, style=solid];
m45_324 -> m45_54  [key=2, style=dotted];
m45_324 -> m45_48  [key=2, style=dotted];
m45_324 -> m45_1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m45_324 -> m45_2  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m45_324 -> m45_36  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m45_324 -> m45_38  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m45_324 -> m45_132  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m45_324 -> m45_184  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m45_324 -> m45_185  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m45_324 -> m45_187  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m45_324 -> m45_189  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m45_324 -> m45_191  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m45_324 -> m45_194  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m45_324 -> m45_203  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m45_324 -> m45_204  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m45_324 -> m45_205  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m45_324 -> m45_206  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m45_324 -> m45_207  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m45_324 -> m45_208  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m45_324 -> m45_209  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m45_324 -> m45_212  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m45_324 -> m45_213  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m45_324 -> m45_214  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m45_324 -> m45_215  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m45_324 -> m45_216  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m45_324 -> m45_217  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m45_324 -> m45_218  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m45_324 -> m45_221  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m45_324 -> m45_224  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m45_324 -> m45_227  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m45_324 -> m45_230  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m45_324 -> m45_233  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m45_324 -> m45_236  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m45_324 -> m45_239  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m45_324 -> m45_242  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m45_324 -> m45_265  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m45_324 -> m45_266  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m45_324 -> m45_275  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m45_324 -> m45_278  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m45_324 -> m45_281  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m45_324 -> m45_283  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m45_324 -> m45_286  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m45_324 -> m45_288  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m45_324 -> m45_291  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m45_324 -> m45_295  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m45_324 -> m45_297  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m45_324 -> m45_299  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m45_324 -> m45_302  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m45_324 -> m45_313  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m45_324 -> m45_315  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m45_324 -> m45_316  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m45_324 -> m45_321  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m45_325 -> m45_225  [key=0, style=bold, color=blue];
m45_264 -> m45_265  [key=0, style=solid];
m45_443 -> m45_66  [key=1, style=dashed, color=green, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_67  [key=1, style=dashed, color=green, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_37  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_38  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_42  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_43  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_49  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_51  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_57  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_59  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_74  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_77  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_82  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_100  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_101  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_107  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_108  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_113  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_114  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_119  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_120  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_125  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_126  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_131  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_132  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_137  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_139  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_141  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_145  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_147  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_148  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_149  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_150  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_152  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_153  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_154  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_155  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_157  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_158  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_159  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_160  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_162  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_163  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_164  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_166  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_167  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_168  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_170  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_172  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_173  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_174  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_175  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_177  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_178  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_179  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_180  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_182  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_183  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_184  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_185  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_187  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_188  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_189  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_190  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_192  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_193  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_194  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_195  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_197  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_198  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_199  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_200  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_202  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_203  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_204  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_205  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_207  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_208  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_212  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_231  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_235  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_237  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_238  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_243  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_251  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_276  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_280  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_292  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_294  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_296  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_300  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_302  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_307  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_309  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_313  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_315  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_316  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_318  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_320  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_324  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_330  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_332  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_333  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_336  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_338  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_341  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_343  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_354  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_364  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_365  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_366  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_367  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_368  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_372  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_374  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_375  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_378  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_380  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_383  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_385  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_389  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_402  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_403  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_404  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_406  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_408  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_409  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_426  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_431  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_434  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_443 -> m45_439  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader"];
m45_442 -> m45_1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader.SchemaScope"];
m45_442 -> m45_2  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader.SchemaScope"];
m45_442 -> m45_3  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader.SchemaScope"];
m45_442 -> m45_6  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader.SchemaScope"];
m45_442 -> m45_5  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonValidatingReader.SchemaScope"];
m47_984 -> m47_985  [key=0, style=solid];
m47_987 -> m47_60  [key=2, style=dotted];
m47_987 -> m47_988  [key=0, style=solid];
m47_987 -> m47_222  [key=2, style=dotted];
m47_989 -> m47_60  [key=2, style=dotted];
m47_989 -> m47_990  [key=0, style=solid];
m47_989 -> m47_222  [key=2, style=dotted];
m47_991 -> m47_60  [key=2, style=dotted];
m47_991 -> m47_992  [key=0, style=solid];
m47_991 -> m47_222  [key=2, style=dotted];
m47_993 -> m47_60  [key=2, style=dotted];
m47_993 -> m47_994  [key=0, style=solid];
m47_993 -> m47_222  [key=2, style=dotted];
m47_1000 -> m47_60  [key=2, style=dotted];
m47_1000 -> m47_1001  [key=0, style=solid];
m47_1000 -> m47_222  [key=2, style=dotted];
m47_1002 -> m47_60  [key=2, style=dotted];
m47_1002 -> m47_1003  [key=0, style=solid];
m47_1002 -> m47_222  [key=2, style=dotted];
m47_986 -> m47_56  [key=2, style=dotted];
m47_986 -> m47_57  [key=2, style=dotted];
m47_986 -> m47_987  [key=0, style=solid];
m47_988 -> m47_56  [key=2, style=dotted];
m47_988 -> m47_57  [key=2, style=dotted];
m47_988 -> m47_989  [key=0, style=solid];
m47_990 -> m47_56  [key=2, style=dotted];
m47_990 -> m47_57  [key=2, style=dotted];
m47_990 -> m47_991  [key=0, style=solid];
m47_992 -> m47_56  [key=2, style=dotted];
m47_992 -> m47_57  [key=2, style=dotted];
m47_992 -> m47_993  [key=0, style=solid];
m47_994 -> m47_56  [key=2, style=dotted];
m47_994 -> m47_57  [key=2, style=dotted];
m47_994 -> m47_995  [key=0, style=solid];
m47_994 -> m47_1007  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_996 -> m47_56  [key=2, style=dotted];
m47_996 -> m47_57  [key=2, style=dotted];
m47_996 -> m47_1010  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_996 -> m47_997  [key=0, style=solid];
m47_996 -> m47_998  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_999 -> m47_56  [key=2, style=dotted];
m47_999 -> m47_57  [key=2, style=dotted];
m47_999 -> m47_1000  [key=0, style=solid];
m47_1001 -> m47_56  [key=2, style=dotted];
m47_1001 -> m47_57  [key=2, style=dotted];
m47_1001 -> m47_1002  [key=0, style=solid];
m47_1003 -> m47_56  [key=2, style=dotted];
m47_1003 -> m47_57  [key=2, style=dotted];
m47_1003 -> m47_1004  [key=0, style=solid];
m47_1003 -> m47_1013  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_985 -> m47_986  [key=0, style=solid];
m47_995 -> m47_996  [key=0, style=solid];
m47_995 -> m47_150  [key=2, style=dotted];
m47_995 -> m47_1006  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_997 -> m47_998  [key=0, style=solid];
m47_998 -> m47_999  [key=0, style=solid];
m47_998 -> m47_1009  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_998 -> m47_150  [key=2, style=dotted];
m47_1004 -> m47_1005  [key=0, style=solid];
m47_1004 -> m47_150  [key=2, style=dotted];
m47_1004 -> m47_1012  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_1005 -> m47_984  [key=0, style=bold, color=blue];
m47_1768 -> m47_1769  [key=0, style=solid];
m47_1770 -> m47_56  [key=2, style=dotted];
m47_1770 -> m47_57  [key=2, style=dotted];
m47_1770 -> m47_1775  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1770 -> m47_1771  [key=0, style=solid];
m47_1769 -> m47_1770  [key=0, style=solid];
m47_1771 -> m47_1774  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_1771 -> m47_1772  [key=0, style=solid];
m47_1771 -> m47_1773  [key=2, style=dotted];
m47_1772 -> m47_1768  [key=0, style=bold, color=blue];
m47_1569 -> m47_1570  [key=0, style=solid];
m47_1570 -> m47_56  [key=2, style=dotted];
m47_1570 -> m47_57  [key=2, style=dotted];
m47_1570 -> m47_1574  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1570 -> m47_1571  [key=0, style=solid];
m47_1571 -> m47_1573  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_1571 -> m47_1572  [key=0, style=solid];
m47_1571 -> m47_150  [key=2, style=dotted];
m47_1572 -> m47_1569  [key=0, style=bold, color=blue];
m47_279 -> m47_280  [key=0, style=solid];
m47_283 -> m47_60  [key=2, style=dotted];
m47_283 -> m47_284  [key=0, style=solid];
m47_285 -> m47_60  [key=2, style=dotted];
m47_285 -> m47_286  [key=0, style=solid];
m47_287 -> m47_60  [key=2, style=dotted];
m47_287 -> m47_288  [key=0, style=solid];
m47_289 -> m47_60  [key=2, style=dotted];
m47_289 -> m47_290  [key=0, style=solid];
m47_291 -> m47_60  [key=2, style=dotted];
m47_291 -> m47_292  [key=0, style=solid];
m47_293 -> m47_60  [key=2, style=dotted];
m47_293 -> m47_294  [key=0, style=solid];
m47_294 -> m47_60  [key=2, style=dotted];
m47_294 -> m47_295  [key=0, style=solid];
m47_296 -> m47_60  [key=2, style=dotted];
m47_296 -> m47_297  [key=0, style=solid];
m47_297 -> m47_60  [key=2, style=dotted];
m47_297 -> m47_298  [key=0, style=solid];
m47_282 -> m47_58  [key=2, style=dotted];
m47_282 -> m47_59  [key=2, style=dotted];
m47_282 -> m47_283  [key=0, style=solid];
m47_284 -> m47_58  [key=2, style=dotted];
m47_284 -> m47_59  [key=2, style=dotted];
m47_284 -> m47_285  [key=0, style=solid];
m47_286 -> m47_58  [key=2, style=dotted];
m47_286 -> m47_59  [key=2, style=dotted];
m47_286 -> m47_287  [key=0, style=solid];
m47_288 -> m47_58  [key=2, style=dotted];
m47_288 -> m47_59  [key=2, style=dotted];
m47_288 -> m47_289  [key=0, style=solid];
m47_290 -> m47_58  [key=2, style=dotted];
m47_290 -> m47_59  [key=2, style=dotted];
m47_290 -> m47_291  [key=0, style=solid];
m47_292 -> m47_58  [key=2, style=dotted];
m47_292 -> m47_59  [key=2, style=dotted];
m47_292 -> m47_293  [key=0, style=solid];
m47_295 -> m47_58  [key=2, style=dotted];
m47_295 -> m47_59  [key=2, style=dotted];
m47_295 -> m47_296  [key=0, style=solid];
m47_281 -> m47_56  [key=2, style=dotted];
m47_281 -> m47_57  [key=2, style=dotted];
m47_281 -> m47_283  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_281 -> m47_285  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_281 -> m47_287  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_281 -> m47_289  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_281 -> m47_291  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_281 -> m47_293  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_281 -> m47_294  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_281 -> m47_296  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_281 -> m47_297  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_281 -> m47_282  [key=0, style=solid];
m47_281 -> m47_284  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_281 -> m47_286  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_281 -> m47_288  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_281 -> m47_290  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_281 -> m47_292  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_281 -> m47_295  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_280 -> m47_281  [key=0, style=solid];
m47_298 -> m47_279  [key=0, style=bold, color=blue];
m47_584 -> m47_585  [key=0, style=solid];
m47_600 -> m47_60  [key=2, style=dotted];
m47_600 -> m47_601  [key=0, style=solid];
m47_596 -> m47_58  [key=2, style=dotted];
m47_596 -> m47_59  [key=2, style=dotted];
m47_596 -> m47_597  [key=0, style=solid];
m47_599 -> m47_58  [key=2, style=dotted];
m47_599 -> m47_59  [key=2, style=dotted];
m47_599 -> m47_600  [key=0, style=solid];
m47_602 -> m47_58  [key=2, style=dotted];
m47_602 -> m47_59  [key=2, style=dotted];
m47_602 -> m47_603  [key=0, style=solid];
m47_603 -> m47_58  [key=2, style=dotted];
m47_603 -> m47_604  [key=0, style=solid];
m47_603 -> m47_136  [key=2, style=dotted];
m47_595 -> m47_56  [key=2, style=dotted];
m47_595 -> m47_57  [key=2, style=dotted];
m47_595 -> m47_600  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_595 -> m47_596  [key=0, style=solid];
m47_595 -> m47_599  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_595 -> m47_602  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_595 -> m47_603  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_597 -> m47_600  [key=1, style=dashed, color=darkseagreen4, label=i];
m47_597 -> m47_598  [key=0, style=solid];
m47_597 -> m47_601  [key=1, style=dashed, color=darkseagreen4, label=i];
m47_601 -> m47_601  [key=1, style=dashed, color=darkseagreen4, label=i];
m47_601 -> m47_598  [key=0, style=solid];
m47_598 -> m47_599  [key=0, style=solid];
m47_598 -> m47_602  [key=0, style=solid];
m47_594 -> m47_595  [key=0, style=solid];
m47_594 -> m47_610  [key=2, style=dotted];
m47_585 -> m47_598  [key=1, style=dashed, color=darkseagreen4, label=valueCount];
m47_585 -> m47_586  [key=0, style=solid];
m47_585 -> m47_590  [key=1, style=dashed, color=darkseagreen4, label=valueCount];
m47_586 -> m47_594  [key=1, style=dashed, color=darkseagreen4, label=sw];
m47_586 -> m47_587  [key=0, style=solid];
m47_586 -> m47_605  [key=2, style=dotted];
m47_593 -> m47_594  [key=0, style=solid];
m47_593 -> m47_609  [key=2, style=dotted];
m47_590 -> m47_593  [key=0, style=solid];
m47_590 -> m47_591  [key=0, style=solid];
m47_587 -> m47_593  [key=1, style=dashed, color=darkseagreen4, label=writer];
m47_587 -> m47_606  [key=2, style=dotted];
m47_587 -> m47_588  [key=0, style=solid];
m47_587 -> m47_591  [key=1, style=dashed, color=darkseagreen4, label=writer];
m47_589 -> m47_590  [key=0, style=solid];
m47_589 -> m47_591  [key=1, style=dashed, color=darkseagreen4, label=i];
m47_589 -> m47_592  [key=1, style=dashed, color=darkseagreen4, label=i];
m47_592 -> m47_590  [key=0, style=solid];
m47_592 -> m47_592  [key=1, style=dashed, color=darkseagreen4, label=i];
m47_591 -> m47_592  [key=0, style=solid];
m47_591 -> m47_608  [key=2, style=dotted];
m47_588 -> m47_589  [key=0, style=solid];
m47_588 -> m47_607  [key=2, style=dotted];
m47_604 -> m47_584  [key=0, style=bold, color=blue];
m47_1396 -> m47_1397  [key=0, style=solid];
m47_1400 -> m47_60  [key=2, style=dotted];
m47_1400 -> m47_1401  [key=0, style=solid];
m47_1402 -> m47_60  [key=2, style=dotted];
m47_1402 -> m47_1403  [key=0, style=solid];
m47_1404 -> m47_60  [key=2, style=dotted];
m47_1404 -> m47_1405  [key=0, style=solid];
m47_1405 -> m47_60  [key=2, style=dotted];
m47_1405 -> m47_1406  [key=0, style=solid];
m47_1406 -> m47_60  [key=2, style=dotted];
m47_1406 -> m47_1407  [key=0, style=solid];
m47_1406 -> m47_1410  [key=2, style=dotted];
m47_1406 -> m47_1411  [key=2, style=dotted];
m47_1406 -> m47_1412  [key=2, style=dotted];
m47_1408 -> m47_60  [key=2, style=dotted];
m47_1408 -> m47_1409  [key=0, style=solid];
m47_1399 -> m47_58  [key=2, style=dotted];
m47_1399 -> m47_59  [key=2, style=dotted];
m47_1399 -> m47_1400  [key=0, style=solid];
m47_1401 -> m47_58  [key=2, style=dotted];
m47_1401 -> m47_59  [key=2, style=dotted];
m47_1401 -> m47_1402  [key=0, style=solid];
m47_1407 -> m47_58  [key=2, style=dotted];
m47_1407 -> m47_59  [key=2, style=dotted];
m47_1407 -> m47_1408  [key=0, style=solid];
m47_1398 -> m47_56  [key=2, style=dotted];
m47_1398 -> m47_57  [key=2, style=dotted];
m47_1398 -> m47_1400  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1398 -> m47_1402  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1398 -> m47_1404  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1398 -> m47_1405  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1398 -> m47_1406  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1398 -> m47_1408  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1398 -> m47_1399  [key=0, style=solid];
m47_1398 -> m47_1401  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1398 -> m47_1407  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1398 -> m47_1403  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1403 -> m47_1404  [key=0, style=solid];
m47_1403 -> m47_1325  [key=2, style=dotted];
m47_1397 -> m47_1398  [key=0, style=solid];
m47_1409 -> m47_1396  [key=0, style=bold, color=blue];
m47_811 -> m47_812  [key=0, style=solid];
m47_813 -> m47_59  [key=2, style=dotted];
m47_813 -> m47_814  [key=0, style=solid];
m47_813 -> m47_356  [key=2, style=dotted];
m47_812 -> m47_56  [key=2, style=dotted];
m47_812 -> m47_57  [key=2, style=dotted];
m47_812 -> m47_813  [key=0, style=solid];
m47_812 -> m47_814  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_812 -> m47_817  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_814 -> m47_815  [key=0, style=solid];
m47_814 -> m47_150  [key=2, style=dotted];
m47_814 -> m47_816  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_815 -> m47_811  [key=0, style=bold, color=blue];
m47_0 -> m47_1  [key=0, style=solid];
m47_34 -> m47_35  [key=0, style=solid, color=green];
m47_34 -> m47_60  [key=2, style=dotted, color=green];
m47_30 -> m47_34  [key=1, style=dashed, color=green, label=jsonTextReader];
m47_30 -> m47_36  [key=1, style=dashed, color=green, label=jsonTextReader];
m47_30 -> m47_37  [key=1, style=dashed, color=green, label=jsonTextReader];
m47_30 -> m47_38  [key=1, style=dashed, color=green, label=jsonTextReader];
m47_30 -> m47_39  [key=1, style=dashed, color=green, label=jsonTextReader];
m47_30 -> m47_40  [key=1, style=dashed, color=green, label=jsonTextReader];
m47_30 -> m47_41  [key=1, style=dashed, color=green, label=jsonTextReader];
m47_30 -> m47_42  [key=1, style=dashed, color=green, label=jsonTextReader];
m47_30 -> m47_31  [key=0, style=solid];
m47_30 -> m47_56  [key=2, style=dotted];
m47_30 -> m47_57  [key=2, style=dotted];
m47_30 -> m47_32  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_30 -> m47_33  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_30 -> m47_35  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_30 -> m47_43  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_30 -> m47_44  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_30 -> m47_45  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_30 -> m47_46  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_30 -> m47_47  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_30 -> m47_48  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_30 -> m47_49  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_30 -> m47_50  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_30 -> m47_51  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_30 -> m47_52  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_30 -> m47_53  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_30 -> m47_54  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_33 -> m47_34  [key=0, style=solid, color=green];
m47_33 -> m47_60  [key=2, style=dotted];
m47_35 -> m47_36  [key=0, style=solid, color=green];
m47_35 -> m47_58  [key=2, style=dotted];
m47_35 -> m47_59  [key=2, style=dotted];
m47_36 -> m47_37  [key=0, style=solid, color=green];
m47_36 -> m47_60  [key=2, style=dotted, color=green];
m47_37 -> m47_38  [key=0, style=solid, color=green];
m47_37 -> m47_60  [key=2, style=dotted, color=green];
m47_38 -> m47_39  [key=0, style=solid, color=green];
m47_38 -> m47_60  [key=2, style=dotted, color=green];
m47_39 -> m47_40  [key=0, style=solid, color=green];
m47_39 -> m47_58  [key=2, style=dotted, color=green];
m47_39 -> m47_59  [key=2, style=dotted, color=green];
m47_40 -> m47_41  [key=0, style=solid, color=green];
m47_40 -> m47_60  [key=2, style=dotted, color=green];
m47_41 -> m47_42  [key=0, style=solid, color=green];
m47_41 -> m47_60  [key=2, style=dotted, color=green];
m47_42 -> m47_43  [key=0, style=solid, color=green];
m47_42 -> m47_60  [key=2, style=dotted, color=green];
m47_43 -> m47_58  [key=2, style=dotted];
m47_43 -> m47_59  [key=2, style=dotted];
m47_43 -> m47_44  [key=0, style=solid];
m47_29 -> m47_30  [key=0, style=solid];
m47_31 -> m47_58  [key=2, style=dotted];
m47_31 -> m47_59  [key=2, style=dotted];
m47_31 -> m47_32  [key=0, style=solid];
m47_32 -> m47_33  [key=0, style=solid];
m47_32 -> m47_60  [key=2, style=dotted];
m47_44 -> m47_60  [key=2, style=dotted];
m47_44 -> m47_45  [key=0, style=solid];
m47_45 -> m47_60  [key=2, style=dotted];
m47_45 -> m47_46  [key=0, style=solid];
m47_46 -> m47_60  [key=2, style=dotted];
m47_46 -> m47_47  [key=0, style=solid];
m47_47 -> m47_58  [key=2, style=dotted];
m47_47 -> m47_59  [key=2, style=dotted];
m47_47 -> m47_48  [key=0, style=solid];
m47_48 -> m47_60  [key=2, style=dotted];
m47_48 -> m47_49  [key=0, style=solid];
m47_49 -> m47_60  [key=2, style=dotted];
m47_49 -> m47_50  [key=0, style=solid];
m47_50 -> m47_60  [key=2, style=dotted];
m47_50 -> m47_51  [key=0, style=solid];
m47_51 -> m47_58  [key=2, style=dotted];
m47_51 -> m47_59  [key=2, style=dotted];
m47_51 -> m47_52  [key=0, style=solid];
m47_52 -> m47_60  [key=2, style=dotted];
m47_52 -> m47_53  [key=0, style=solid];
m47_53 -> m47_60  [key=2, style=dotted];
m47_53 -> m47_54  [key=0, style=solid];
m47_54 -> m47_60  [key=2, style=dotted];
m47_54 -> m47_55  [key=0, style=solid];
m47_4 -> m47_60  [key=2, style=dotted];
m47_4 -> m47_5  [key=0, style=solid];
m47_5 -> m47_60  [key=2, style=dotted];
m47_5 -> m47_6  [key=0, style=solid];
m47_5 -> m47_3  [key=0, style=bold, color=blue];
m47_6 -> m47_60  [key=2, style=dotted];
m47_6 -> m47_7  [key=0, style=solid];
m47_8 -> m47_60  [key=2, style=dotted];
m47_8 -> m47_9  [key=0, style=solid];
m47_8 -> m47_10  [key=2, style=dotted];
m47_9 -> m47_60  [key=2, style=dotted];
m47_9 -> m47_10  [key=0, style=solid];
m47_9 -> m47_6  [key=0, style=bold, color=blue];
m47_10 -> m47_60  [key=2, style=dotted];
m47_10 -> m47_11  [key=0, style=solid];
m47_14 -> m47_60  [key=2, style=dotted];
m47_14 -> m47_15  [key=0, style=solid];
m47_15 -> m47_60  [key=2, style=dotted];
m47_15 -> m47_16  [key=0, style=solid];
m47_16 -> m47_60  [key=2, style=dotted];
m47_16 -> m47_17  [key=0, style=solid];
m47_18 -> m47_60  [key=2, style=dotted];
m47_18 -> m47_19  [key=0, style=solid];
m47_19 -> m47_60  [key=2, style=dotted];
m47_19 -> m47_20  [key=0, style=solid];
m47_20 -> m47_60  [key=2, style=dotted];
m47_20 -> m47_21  [key=0, style=solid];
m47_22 -> m47_60  [key=2, style=dotted];
m47_22 -> m47_23  [key=0, style=solid];
m47_23 -> m47_60  [key=2, style=dotted];
m47_23 -> m47_24  [key=0, style=solid];
m47_24 -> m47_60  [key=2, style=dotted];
m47_24 -> m47_25  [key=0, style=solid];
m47_26 -> m47_60  [key=2, style=dotted];
m47_26 -> m47_27  [key=0, style=solid];
m47_27 -> m47_60  [key=2, style=dotted];
m47_27 -> m47_28  [key=0, style=solid];
m47_28 -> m47_60  [key=2, style=dotted];
m47_28 -> m47_29  [key=0, style=solid];
m47_3 -> m47_58  [key=2, style=dotted];
m47_3 -> m47_59  [key=2, style=dotted];
m47_3 -> m47_4  [key=0, style=solid];
m47_7 -> m47_58  [key=2, style=dotted];
m47_7 -> m47_59  [key=2, style=dotted];
m47_7 -> m47_8  [key=0, style=solid];
m47_13 -> m47_58  [key=2, style=dotted];
m47_13 -> m47_59  [key=2, style=dotted];
m47_13 -> m47_14  [key=0, style=solid];
m47_17 -> m47_58  [key=2, style=dotted];
m47_17 -> m47_59  [key=2, style=dotted];
m47_17 -> m47_18  [key=0, style=solid];
m47_21 -> m47_58  [key=2, style=dotted];
m47_21 -> m47_59  [key=2, style=dotted];
m47_21 -> m47_22  [key=0, style=solid];
m47_25 -> m47_58  [key=2, style=dotted];
m47_25 -> m47_59  [key=2, style=dotted];
m47_25 -> m47_26  [key=0, style=solid];
m47_2 -> m47_56  [key=2, style=dotted];
m47_2 -> m47_57  [key=2, style=dotted];
m47_2 -> m47_4  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_2 -> m47_5  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_2 -> m47_6  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_2 -> m47_8  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_2 -> m47_9  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_2 -> m47_10  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_2 -> m47_3  [key=0, style=solid];
m47_2 -> m47_7  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_2 -> m47_0  [key=0, style=bold, color=blue];
m47_12 -> m47_56  [key=2, style=dotted];
m47_12 -> m47_57  [key=2, style=dotted];
m47_12 -> m47_14  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_12 -> m47_15  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_12 -> m47_16  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_12 -> m47_18  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_12 -> m47_19  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_12 -> m47_20  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_12 -> m47_22  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_12 -> m47_23  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_12 -> m47_24  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_12 -> m47_26  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_12 -> m47_27  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_12 -> m47_28  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_12 -> m47_13  [key=0, style=solid];
m47_12 -> m47_17  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_12 -> m47_21  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_12 -> m47_25  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_11 -> m47_12  [key=0, style=solid];
m47_11 -> m47_1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract"];
m47_11 -> m47_4  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract"];
m47_11 -> m47_7  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract"];
m47_11 -> m47_8  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract"];
m47_1 -> m47_2  [key=0, style=solid];
m47_55 -> m47_0  [key=0, style=bold, color=blue];
m47_1753 -> m47_1754  [key=0, style=solid];
m47_1754 -> m47_56  [key=2, style=dotted];
m47_1754 -> m47_57  [key=2, style=dotted];
m47_1754 -> m47_1758  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1754 -> m47_1755  [key=0, style=solid];
m47_1755 -> m47_1757  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_1755 -> m47_1756  [key=0, style=solid];
m47_1755 -> m47_150  [key=2, style=dotted];
m47_1756 -> m47_1753  [key=0, style=bold, color=blue];
m47_1745 -> m47_1746  [key=0, style=solid];
m47_1749 -> m47_60  [key=2, style=dotted];
m47_1749 -> m47_1750  [key=0, style=solid];
m47_1751 -> m47_60  [key=2, style=dotted];
m47_1751 -> m47_1752  [key=0, style=solid];
m47_1748 -> m47_58  [key=2, style=dotted];
m47_1748 -> m47_59  [key=2, style=dotted];
m47_1748 -> m47_1749  [key=0, style=solid];
m47_1750 -> m47_58  [key=2, style=dotted];
m47_1750 -> m47_59  [key=2, style=dotted];
m47_1750 -> m47_1751  [key=0, style=solid];
m47_1747 -> m47_56  [key=2, style=dotted];
m47_1747 -> m47_57  [key=2, style=dotted];
m47_1747 -> m47_1749  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1747 -> m47_1751  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1747 -> m47_1748  [key=0, style=solid];
m47_1747 -> m47_1750  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1746 -> m47_1747  [key=0, style=solid];
m47_1752 -> m47_1745  [key=0, style=bold, color=blue];
m47_1354 -> m47_1355  [key=0, style=solid];
m47_1355 -> m47_56  [key=2, style=dotted];
m47_1355 -> m47_57  [key=2, style=dotted];
m47_1355 -> m47_1356  [key=0, style=solid];
m47_1355 -> m47_1359  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1356 -> m47_1357  [key=0, style=solid];
m47_1356 -> m47_150  [key=2, style=dotted];
m47_1356 -> m47_1358  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_1357 -> m47_1354  [key=0, style=bold, color=blue];
m47_1361 -> m47_1362  [key=0, style=solid];
m47_1362 -> m47_56  [key=2, style=dotted];
m47_1362 -> m47_57  [key=2, style=dotted];
m47_1362 -> m47_1363  [key=0, style=solid];
m47_1362 -> m47_1366  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1363 -> m47_1364  [key=0, style=solid];
m47_1363 -> m47_150  [key=2, style=dotted];
m47_1363 -> m47_1365  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_1364 -> m47_1361  [key=0, style=bold, color=blue];
m47_467 -> m47_468  [key=0, style=solid];
m47_471 -> m47_60  [key=2, style=dotted];
m47_471 -> m47_472  [key=0, style=solid];
m47_473 -> m47_60  [key=2, style=dotted];
m47_473 -> m47_474  [key=0, style=solid];
m47_474 -> m47_60  [key=2, style=dotted];
m47_474 -> m47_475  [key=0, style=solid];
m47_475 -> m47_60  [key=2, style=dotted];
m47_475 -> m47_476  [key=0, style=solid];
m47_477 -> m47_60  [key=2, style=dotted];
m47_477 -> m47_478  [key=0, style=solid];
m47_478 -> m47_60  [key=2, style=dotted];
m47_478 -> m47_479  [key=0, style=solid];
m47_479 -> m47_60  [key=2, style=dotted];
m47_479 -> m47_480  [key=0, style=solid];
m47_481 -> m47_60  [key=2, style=dotted];
m47_481 -> m47_482  [key=0, style=solid];
m47_482 -> m47_60  [key=2, style=dotted];
m47_482 -> m47_483  [key=0, style=solid];
m47_483 -> m47_60  [key=2, style=dotted];
m47_483 -> m47_484  [key=0, style=solid];
m47_484 -> m47_60  [key=2, style=dotted];
m47_484 -> m47_485  [key=0, style=solid];
m47_485 -> m47_60  [key=2, style=dotted];
m47_485 -> m47_486  [key=0, style=solid];
m47_487 -> m47_60  [key=2, style=dotted];
m47_487 -> m47_488  [key=0, style=solid];
m47_488 -> m47_60  [key=2, style=dotted];
m47_488 -> m47_489  [key=0, style=solid];
m47_489 -> m47_60  [key=2, style=dotted];
m47_489 -> m47_490  [key=0, style=solid];
m47_491 -> m47_60  [key=2, style=dotted];
m47_491 -> m47_492  [key=0, style=solid];
m47_492 -> m47_60  [key=2, style=dotted];
m47_492 -> m47_493  [key=0, style=solid];
m47_493 -> m47_60  [key=2, style=dotted];
m47_493 -> m47_494  [key=0, style=solid];
m47_495 -> m47_60  [key=2, style=dotted];
m47_495 -> m47_496  [key=0, style=solid];
m47_496 -> m47_60  [key=2, style=dotted];
m47_496 -> m47_497  [key=0, style=solid];
m47_497 -> m47_60  [key=2, style=dotted];
m47_497 -> m47_498  [key=0, style=solid];
m47_498 -> m47_60  [key=2, style=dotted];
m47_498 -> m47_499  [key=0, style=solid];
m47_500 -> m47_60  [key=2, style=dotted];
m47_500 -> m47_501  [key=0, style=solid];
m47_501 -> m47_60  [key=2, style=dotted];
m47_501 -> m47_502  [key=0, style=solid];
m47_502 -> m47_60  [key=2, style=dotted];
m47_502 -> m47_503  [key=0, style=solid];
m47_503 -> m47_60  [key=2, style=dotted];
m47_503 -> m47_504  [key=0, style=solid];
m47_505 -> m47_60  [key=2, style=dotted];
m47_505 -> m47_506  [key=0, style=solid];
m47_506 -> m47_60  [key=2, style=dotted];
m47_506 -> m47_507  [key=0, style=solid];
m47_507 -> m47_60  [key=2, style=dotted];
m47_507 -> m47_508  [key=0, style=solid];
m47_508 -> m47_60  [key=2, style=dotted];
m47_508 -> m47_509  [key=0, style=solid];
m47_510 -> m47_60  [key=2, style=dotted];
m47_510 -> m47_511  [key=0, style=solid];
m47_511 -> m47_60  [key=2, style=dotted];
m47_511 -> m47_512  [key=0, style=solid];
m47_512 -> m47_60  [key=2, style=dotted];
m47_512 -> m47_513  [key=0, style=solid];
m47_513 -> m47_60  [key=2, style=dotted];
m47_513 -> m47_514  [key=0, style=solid];
m47_515 -> m47_60  [key=2, style=dotted];
m47_515 -> m47_516  [key=0, style=solid];
m47_516 -> m47_60  [key=2, style=dotted];
m47_516 -> m47_517  [key=0, style=solid];
m47_517 -> m47_60  [key=2, style=dotted];
m47_517 -> m47_518  [key=0, style=solid];
m47_518 -> m47_60  [key=2, style=dotted];
m47_518 -> m47_519  [key=0, style=solid];
m47_520 -> m47_60  [key=2, style=dotted];
m47_520 -> m47_521  [key=0, style=solid];
m47_521 -> m47_60  [key=2, style=dotted];
m47_521 -> m47_522  [key=0, style=solid];
m47_522 -> m47_60  [key=2, style=dotted];
m47_522 -> m47_523  [key=0, style=solid];
m47_524 -> m47_60  [key=2, style=dotted];
m47_524 -> m47_525  [key=0, style=solid];
m47_525 -> m47_60  [key=2, style=dotted];
m47_525 -> m47_526  [key=0, style=solid];
m47_526 -> m47_60  [key=2, style=dotted];
m47_526 -> m47_527  [key=0, style=solid];
m47_528 -> m47_60  [key=2, style=dotted];
m47_528 -> m47_529  [key=0, style=solid];
m47_529 -> m47_60  [key=2, style=dotted];
m47_529 -> m47_530  [key=0, style=solid];
m47_530 -> m47_60  [key=2, style=dotted];
m47_530 -> m47_531  [key=0, style=solid];
m47_532 -> m47_60  [key=2, style=dotted];
m47_532 -> m47_533  [key=0, style=solid];
m47_533 -> m47_60  [key=2, style=dotted];
m47_533 -> m47_534  [key=0, style=solid];
m47_534 -> m47_60  [key=2, style=dotted];
m47_534 -> m47_535  [key=0, style=solid];
m47_536 -> m47_60  [key=2, style=dotted];
m47_536 -> m47_537  [key=0, style=solid];
m47_537 -> m47_60  [key=2, style=dotted];
m47_537 -> m47_538  [key=0, style=solid];
m47_538 -> m47_60  [key=2, style=dotted];
m47_538 -> m47_539  [key=0, style=solid];
m47_540 -> m47_60  [key=2, style=dotted];
m47_540 -> m47_541  [key=0, style=solid];
m47_541 -> m47_60  [key=2, style=dotted];
m47_541 -> m47_542  [key=0, style=solid];
m47_542 -> m47_60  [key=2, style=dotted];
m47_542 -> m47_543  [key=0, style=solid];
m47_544 -> m47_60  [key=2, style=dotted];
m47_544 -> m47_545  [key=0, style=solid];
m47_545 -> m47_60  [key=2, style=dotted];
m47_545 -> m47_546  [key=0, style=solid];
m47_546 -> m47_60  [key=2, style=dotted];
m47_546 -> m47_547  [key=0, style=solid];
m47_548 -> m47_60  [key=2, style=dotted];
m47_548 -> m47_549  [key=0, style=solid];
m47_549 -> m47_60  [key=2, style=dotted];
m47_549 -> m47_550  [key=0, style=solid];
m47_550 -> m47_60  [key=2, style=dotted];
m47_550 -> m47_551  [key=0, style=solid];
m47_552 -> m47_60  [key=2, style=dotted];
m47_552 -> m47_553  [key=0, style=solid];
m47_553 -> m47_60  [key=2, style=dotted];
m47_553 -> m47_554  [key=0, style=solid];
m47_554 -> m47_60  [key=2, style=dotted];
m47_554 -> m47_555  [key=0, style=solid];
m47_556 -> m47_60  [key=2, style=dotted];
m47_556 -> m47_557  [key=0, style=solid];
m47_557 -> m47_60  [key=2, style=dotted];
m47_557 -> m47_558  [key=0, style=solid];
m47_558 -> m47_60  [key=2, style=dotted];
m47_558 -> m47_559  [key=0, style=solid];
m47_560 -> m47_60  [key=2, style=dotted];
m47_560 -> m47_561  [key=0, style=solid];
m47_561 -> m47_60  [key=2, style=dotted];
m47_561 -> m47_562  [key=0, style=solid];
m47_562 -> m47_60  [key=2, style=dotted];
m47_562 -> m47_563  [key=0, style=solid];
m47_470 -> m47_56  [key=2, style=dotted];
m47_470 -> m47_471  [key=0, style=solid];
m47_470 -> m47_473  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_474  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_475  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_477  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_478  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_479  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_481  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_482  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_483  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_484  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_485  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_487  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_488  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_489  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_491  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_492  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_493  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_495  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_496  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_497  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_498  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_500  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_501  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_502  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_503  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_505  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_506  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_507  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_508  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_510  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_511  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_512  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_513  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_515  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_516  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_517  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_518  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_520  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_521  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_522  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_524  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_525  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_526  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_528  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_529  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_530  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_532  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_533  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_534  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_536  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_537  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_538  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_540  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_541  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_542  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_544  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_545  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_546  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_548  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_549  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_550  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_552  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_553  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_554  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_556  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_557  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_558  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_560  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_561  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_562  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_472  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_476  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_480  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_486  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_490  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_494  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_499  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_504  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_509  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_514  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_519  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_523  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_527  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_531  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_535  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_539  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_543  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_547  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_551  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_555  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_470 -> m47_559  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_469 -> m47_57  [key=2, style=dotted];
m47_469 -> m47_470  [key=0, style=solid];
m47_472 -> m47_473  [key=0, style=solid];
m47_472 -> m47_356  [key=2, style=dotted];
m47_476 -> m47_477  [key=0, style=solid];
m47_476 -> m47_356  [key=2, style=dotted];
m47_480 -> m47_481  [key=0, style=solid];
m47_480 -> m47_356  [key=2, style=dotted];
m47_486 -> m47_487  [key=0, style=solid];
m47_486 -> m47_356  [key=2, style=dotted];
m47_490 -> m47_491  [key=0, style=solid];
m47_490 -> m47_356  [key=2, style=dotted];
m47_494 -> m47_495  [key=0, style=solid];
m47_494 -> m47_356  [key=2, style=dotted];
m47_499 -> m47_500  [key=0, style=solid];
m47_499 -> m47_356  [key=2, style=dotted];
m47_504 -> m47_505  [key=0, style=solid];
m47_504 -> m47_356  [key=2, style=dotted];
m47_509 -> m47_510  [key=0, style=solid];
m47_509 -> m47_356  [key=2, style=dotted];
m47_514 -> m47_515  [key=0, style=solid];
m47_514 -> m47_356  [key=2, style=dotted];
m47_519 -> m47_520  [key=0, style=solid];
m47_519 -> m47_356  [key=2, style=dotted];
m47_523 -> m47_524  [key=0, style=solid];
m47_523 -> m47_356  [key=2, style=dotted];
m47_527 -> m47_528  [key=0, style=solid];
m47_527 -> m47_356  [key=2, style=dotted];
m47_531 -> m47_532  [key=0, style=solid];
m47_531 -> m47_356  [key=2, style=dotted];
m47_535 -> m47_536  [key=0, style=solid];
m47_535 -> m47_356  [key=2, style=dotted];
m47_539 -> m47_540  [key=0, style=solid];
m47_539 -> m47_356  [key=2, style=dotted];
m47_543 -> m47_544  [key=0, style=solid];
m47_543 -> m47_356  [key=2, style=dotted];
m47_547 -> m47_548  [key=0, style=solid];
m47_547 -> m47_356  [key=2, style=dotted];
m47_551 -> m47_552  [key=0, style=solid];
m47_551 -> m47_356  [key=2, style=dotted];
m47_555 -> m47_556  [key=0, style=solid];
m47_555 -> m47_356  [key=2, style=dotted];
m47_559 -> m47_560  [key=0, style=solid];
m47_559 -> m47_356  [key=2, style=dotted];
m47_468 -> m47_469  [key=0, style=solid];
m47_563 -> m47_467  [key=0, style=bold, color=blue];
m47_700 -> m47_701  [key=0, style=solid];
m47_704 -> m47_60  [key=2, style=dotted];
m47_704 -> m47_705  [key=0, style=solid];
m47_710 -> m47_60  [key=2, style=dotted];
m47_710 -> m47_711  [key=0, style=solid];
m47_703 -> m47_58  [key=2, style=dotted];
m47_703 -> m47_704  [key=0, style=solid];
m47_709 -> m47_58  [key=2, style=dotted];
m47_709 -> m47_710  [key=0, style=solid];
m47_702 -> m47_56  [key=2, style=dotted];
m47_702 -> m47_704  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_702 -> m47_703  [key=0, style=solid];
m47_702 -> m47_698  [key=2, style=dotted];
m47_702 -> m47_699  [key=2, style=dotted];
m47_708 -> m47_56  [key=2, style=dotted];
m47_708 -> m47_710  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_708 -> m47_709  [key=0, style=solid];
m47_708 -> m47_698  [key=2, style=dotted];
m47_708 -> m47_699  [key=2, style=dotted];
m47_705 -> m47_706  [key=0, style=solid];
m47_705 -> m47_707  [key=1, style=dashed, color=darkseagreen4, label=j];
m47_705 -> m47_711  [key=1, style=dashed, color=darkseagreen4, label=j];
m47_711 -> m47_711  [key=1, style=dashed, color=darkseagreen4, label=j];
m47_711 -> m47_706  [key=0, style=solid];
m47_701 -> m47_702  [key=0, style=solid];
m47_701 -> m47_697  [key=2, style=dotted];
m47_701 -> m47_707  [key=1, style=dashed, color=darkseagreen4, label=i];
m47_707 -> m47_708  [key=0, style=solid];
m47_706 -> m47_707  [key=0, style=solid];
m47_706 -> m47_712  [key=0, style=solid];
m47_712 -> m47_700  [key=0, style=bold, color=blue];
m47_1050 -> m47_1051  [key=0, style=solid];
m47_1085 -> m47_60  [key=2, style=dotted];
m47_1085 -> m47_1086  [key=0, style=solid];
m47_1085 -> m47_1098  [key=2, style=dotted];
m47_1080 -> m47_56  [key=2, style=dotted];
m47_1080 -> m47_57  [key=2, style=dotted];
m47_1080 -> m47_1081  [key=0, style=solid];
m47_1080 -> m47_1100  [key=2, style=dotted];
m47_1080 -> m47_1084  [key=1, style=dashed, color=darkseagreen4, label=jsonObject];
m47_1078 -> m47_1085  [key=1, style=dashed, color=darkseagreen4, label=json];
m47_1078 -> m47_1080  [key=1, style=dashed, color=darkseagreen4, label=json];
m47_1078 -> m47_1079  [key=0, style=solid];
m47_1078 -> m47_1098  [key=2, style=dotted];
m47_1084 -> m47_1085  [key=0, style=solid];
m47_1084 -> m47_1101  [key=2, style=dotted];
m47_1081 -> m47_1085  [key=1, style=dashed, color=darkseagreen4, label=sb];
m47_1081 -> m47_1082  [key=0, style=solid];
m47_1081 -> m47_1087  [key=2, style=dotted];
m47_1079 -> m47_1080  [key=0, style=solid];
m47_1079 -> m47_1084  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m47_1079 -> m47_1099  [key=2, style=dotted];
m47_1051 -> m47_1078  [key=1, style=dashed, color=darkseagreen4, label=sb];
m47_1051 -> m47_1052  [key=0, style=solid];
m47_1051 -> m47_1087  [key=2, style=dotted];
m47_1077 -> m47_1078  [key=0, style=solid];
m47_1077 -> m47_609  [key=2, style=dotted];
m47_1083 -> m47_1084  [key=0, style=solid];
m47_1083 -> m47_606  [key=2, style=dotted];
m47_1082 -> m47_1083  [key=0, style=solid];
m47_1082 -> m47_1088  [key=2, style=dotted];
m47_1052 -> m47_1053  [key=0, style=solid];
m47_1052 -> m47_1088  [key=2, style=dotted];
m47_1053 -> m47_1077  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m47_1053 -> m47_1054  [key=0, style=solid];
m47_1053 -> m47_606  [key=2, style=dotted];
m47_1053 -> m47_1055  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m47_1053 -> m47_1056  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m47_1053 -> m47_1057  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m47_1053 -> m47_1058  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m47_1053 -> m47_1059  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m47_1053 -> m47_1060  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m47_1053 -> m47_1061  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m47_1053 -> m47_1062  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m47_1053 -> m47_1065  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m47_1053 -> m47_1067  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m47_1053 -> m47_1068  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m47_1053 -> m47_1069  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m47_1053 -> m47_1070  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m47_1053 -> m47_1071  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m47_1053 -> m47_1072  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m47_1053 -> m47_1073  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m47_1053 -> m47_1074  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m47_1053 -> m47_1075  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m47_1053 -> m47_1076  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m47_1076 -> m47_1077  [key=0, style=solid];
m47_1076 -> m47_1097  [key=2, style=dotted];
m47_1054 -> m47_1055  [key=0, style=solid];
m47_1054 -> m47_1089  [key=2, style=dotted];
m47_1055 -> m47_1056  [key=0, style=solid];
m47_1055 -> m47_1090  [key=2, style=dotted];
m47_1056 -> m47_1057  [key=0, style=solid];
m47_1056 -> m47_1091  [key=2, style=dotted];
m47_1057 -> m47_1058  [key=0, style=solid];
m47_1057 -> m47_1092  [key=2, style=dotted];
m47_1058 -> m47_1059  [key=0, style=solid];
m47_1058 -> m47_1093  [key=2, style=dotted];
m47_1059 -> m47_1060  [key=0, style=solid];
m47_1059 -> m47_1092  [key=2, style=dotted];
m47_1060 -> m47_1061  [key=0, style=solid];
m47_1060 -> m47_1094  [key=2, style=dotted];
m47_1061 -> m47_1062  [key=0, style=solid];
m47_1061 -> m47_1092  [key=2, style=dotted];
m47_1062 -> m47_1063  [key=0, style=solid];
m47_1062 -> m47_1089  [key=2, style=dotted];
m47_1065 -> m47_1066  [key=0, style=solid];
m47_1065 -> m47_1093  [key=2, style=dotted];
m47_1067 -> m47_1068  [key=0, style=solid];
m47_1067 -> m47_1091  [key=2, style=dotted];
m47_1068 -> m47_1069  [key=0, style=solid];
m47_1068 -> m47_1092  [key=2, style=dotted];
m47_1069 -> m47_1070  [key=0, style=solid];
m47_1069 -> m47_1095  [key=2, style=dotted];
m47_1070 -> m47_1071  [key=0, style=solid];
m47_1070 -> m47_1096  [key=2, style=dotted];
m47_1071 -> m47_1072  [key=0, style=solid];
m47_1071 -> m47_1093  [key=2, style=dotted];
m47_1072 -> m47_609  [key=2, style=dotted];
m47_1072 -> m47_1073  [key=0, style=solid];
m47_1073 -> m47_1074  [key=0, style=solid];
m47_1073 -> m47_1096  [key=2, style=dotted];
m47_1074 -> m47_1075  [key=0, style=solid];
m47_1074 -> m47_1094  [key=2, style=dotted];
m47_1075 -> m47_1076  [key=0, style=solid];
m47_1075 -> m47_1097  [key=2, style=dotted];
m47_1063 -> m47_1065  [key=1, style=dashed, color=darkseagreen4, label=i];
m47_1063 -> m47_1064  [key=0, style=solid];
m47_1063 -> m47_1066  [key=1, style=dashed, color=darkseagreen4, label=i];
m47_1064 -> m47_1065  [key=0, style=solid];
m47_1064 -> m47_1067  [key=0, style=solid];
m47_1066 -> m47_1064  [key=0, style=solid];
m47_1066 -> m47_1066  [key=1, style=dashed, color=darkseagreen4, label=i];
m47_1086 -> m47_1050  [key=0, style=bold, color=blue];
m47_1333 -> m47_1334  [key=0, style=solid];
m47_1334 -> m47_56  [key=2, style=dotted];
m47_1334 -> m47_57  [key=2, style=dotted];
m47_1334 -> m47_1335  [key=0, style=solid];
m47_1334 -> m47_1338  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1335 -> m47_1336  [key=0, style=solid];
m47_1335 -> m47_150  [key=2, style=dotted];
m47_1335 -> m47_1337  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_1336 -> m47_1333  [key=0, style=bold, color=blue];
m47_772 -> m47_773  [key=0, style=solid];
m47_773 -> m47_56  [key=2, style=dotted];
m47_773 -> m47_57  [key=2, style=dotted];
m47_773 -> m47_774  [key=0, style=solid];
m47_773 -> m47_777  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_774 -> m47_775  [key=0, style=solid];
m47_774 -> m47_150  [key=2, style=dotted];
m47_774 -> m47_776  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_775 -> m47_772  [key=0, style=bold, color=blue];
m47_1721 -> m47_1722  [key=0, style=solid];
m47_1723 -> m47_56  [key=2, style=dotted];
m47_1723 -> m47_57  [key=2, style=dotted];
m47_1723 -> m47_1727  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1723 -> m47_1724  [key=0, style=solid];
m47_1722 -> m47_1723  [key=0, style=solid];
m47_1724 -> m47_1726  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_1724 -> m47_1725  [key=0, style=solid];
m47_1724 -> m47_150  [key=2, style=dotted];
m47_1725 -> m47_1721  [key=0, style=bold, color=blue];
m47_138 -> m47_139  [key=0, style=solid];
m47_142 -> m47_60  [key=2, style=dotted];
m47_142 -> m47_143  [key=0, style=solid];
m47_144 -> m47_60  [key=2, style=dotted];
m47_144 -> m47_145  [key=0, style=solid];
m47_147 -> m47_60  [key=2, style=dotted];
m47_147 -> m47_148  [key=0, style=solid];
m47_141 -> m47_58  [key=2, style=dotted];
m47_141 -> m47_59  [key=2, style=dotted];
m47_141 -> m47_142  [key=0, style=solid];
m47_143 -> m47_58  [key=2, style=dotted];
m47_143 -> m47_59  [key=2, style=dotted];
m47_143 -> m47_144  [key=0, style=solid];
m47_146 -> m47_58  [key=2, style=dotted];
m47_146 -> m47_59  [key=2, style=dotted];
m47_146 -> m47_147  [key=0, style=solid];
m47_148 -> m47_58  [key=2, style=dotted];
m47_148 -> m47_149  [key=0, style=solid];
m47_148 -> m47_136  [key=2, style=dotted];
m47_140 -> m47_56  [key=2, style=dotted];
m47_140 -> m47_57  [key=2, style=dotted];
m47_140 -> m47_142  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_140 -> m47_144  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_140 -> m47_147  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_140 -> m47_141  [key=0, style=solid];
m47_140 -> m47_143  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_140 -> m47_146  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_140 -> m47_148  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_140 -> m47_145  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_140 -> m47_152  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_145 -> m47_146  [key=0, style=solid];
m47_145 -> m47_150  [key=2, style=dotted];
m47_145 -> m47_151  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_139 -> m47_140  [key=0, style=solid];
m47_149 -> m47_138  [key=0, style=bold, color=blue];
m47_106 -> m47_107  [key=0, style=solid];
m47_110 -> m47_60  [key=2, style=dotted];
m47_110 -> m47_111  [key=0, style=solid];
m47_111 -> m47_60  [key=2, style=dotted];
m47_111 -> m47_112  [key=0, style=solid];
m47_109 -> m47_58  [key=2, style=dotted];
m47_109 -> m47_59  [key=2, style=dotted];
m47_109 -> m47_110  [key=0, style=solid];
m47_108 -> m47_56  [key=2, style=dotted];
m47_108 -> m47_57  [key=2, style=dotted];
m47_108 -> m47_110  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_108 -> m47_111  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_108 -> m47_109  [key=0, style=solid];
m47_107 -> m47_108  [key=0, style=solid];
m47_112 -> m47_106  [key=0, style=bold, color=blue];
m47_1645 -> m47_1646  [key=0, style=solid];
m47_1649 -> m47_60  [key=2, style=dotted];
m47_1649 -> m47_1650  [key=0, style=solid];
m47_1651 -> m47_60  [key=2, style=dotted];
m47_1651 -> m47_1652  [key=0, style=solid];
m47_1653 -> m47_60  [key=2, style=dotted];
m47_1653 -> m47_1654  [key=0, style=solid];
m47_1655 -> m47_60  [key=2, style=dotted];
m47_1655 -> m47_1656  [key=0, style=solid];
m47_1657 -> m47_60  [key=2, style=dotted];
m47_1657 -> m47_1658  [key=0, style=solid];
m47_1659 -> m47_60  [key=2, style=dotted];
m47_1659 -> m47_1660  [key=0, style=solid];
m47_1661 -> m47_60  [key=2, style=dotted];
m47_1661 -> m47_1662  [key=0, style=solid];
m47_1648 -> m47_58  [key=2, style=dotted];
m47_1648 -> m47_59  [key=2, style=dotted];
m47_1648 -> m47_1649  [key=0, style=solid];
m47_1650 -> m47_58  [key=2, style=dotted];
m47_1650 -> m47_59  [key=2, style=dotted];
m47_1650 -> m47_1651  [key=0, style=solid];
m47_1652 -> m47_58  [key=2, style=dotted];
m47_1652 -> m47_59  [key=2, style=dotted];
m47_1652 -> m47_1653  [key=0, style=solid];
m47_1654 -> m47_58  [key=2, style=dotted];
m47_1654 -> m47_59  [key=2, style=dotted];
m47_1654 -> m47_1655  [key=0, style=solid];
m47_1656 -> m47_58  [key=2, style=dotted];
m47_1656 -> m47_59  [key=2, style=dotted];
m47_1656 -> m47_1657  [key=0, style=solid];
m47_1658 -> m47_58  [key=2, style=dotted];
m47_1658 -> m47_59  [key=2, style=dotted];
m47_1658 -> m47_1659  [key=0, style=solid];
m47_1660 -> m47_58  [key=2, style=dotted];
m47_1660 -> m47_59  [key=2, style=dotted];
m47_1660 -> m47_1661  [key=0, style=solid];
m47_1647 -> m47_56  [key=2, style=dotted];
m47_1647 -> m47_57  [key=2, style=dotted];
m47_1647 -> m47_1649  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1647 -> m47_1651  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1647 -> m47_1653  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1647 -> m47_1655  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1647 -> m47_1657  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1647 -> m47_1659  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1647 -> m47_1661  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1647 -> m47_1648  [key=0, style=solid];
m47_1647 -> m47_1650  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1647 -> m47_1652  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1647 -> m47_1654  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1647 -> m47_1656  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1647 -> m47_1658  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1647 -> m47_1660  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1646 -> m47_1647  [key=0, style=solid];
m47_1662 -> m47_1645  [key=0, style=bold, color=blue];
m47_1541 -> m47_1542  [key=0, style=solid];
m47_1542 -> m47_56  [key=2, style=dotted];
m47_1542 -> m47_57  [key=2, style=dotted];
m47_1542 -> m47_1546  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1542 -> m47_1543  [key=0, style=solid];
m47_1543 -> m47_1545  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_1543 -> m47_1544  [key=0, style=solid];
m47_1543 -> m47_150  [key=2, style=dotted];
m47_1544 -> m47_1541  [key=0, style=bold, color=blue];
m47_402 -> m47_403  [key=0, style=solid];
m47_405 -> m47_58  [key=2, style=dotted];
m47_405 -> m47_405  [key=0, style=solid];
m47_405 -> m47_406  [key=0, style=solid];
m47_404 -> m47_56  [key=2, style=dotted];
m47_404 -> m47_57  [key=2, style=dotted];
m47_404 -> m47_405  [key=0, style=solid];
m47_403 -> m47_404  [key=0, style=solid];
m47_406 -> m47_402  [key=0, style=bold, color=blue];
m47_1729 -> m47_1730  [key=0, style=solid];
m47_1732 -> m47_58  [key=2, style=dotted];
m47_1732 -> m47_59  [key=2, style=dotted];
m47_1732 -> m47_1733  [key=0, style=solid];
m47_1733 -> m47_58  [key=2, style=dotted];
m47_1733 -> m47_59  [key=2, style=dotted];
m47_1733 -> m47_1734  [key=0, style=solid];
m47_1734 -> m47_58  [key=2, style=dotted];
m47_1734 -> m47_59  [key=2, style=dotted];
m47_1734 -> m47_1735  [key=0, style=solid];
m47_1735 -> m47_58  [key=2, style=dotted];
m47_1735 -> m47_1736  [key=0, style=solid];
m47_1735 -> m47_136  [key=2, style=dotted];
m47_1731 -> m47_56  [key=2, style=dotted];
m47_1731 -> m47_57  [key=2, style=dotted];
m47_1731 -> m47_1732  [key=0, style=solid];
m47_1731 -> m47_1733  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1731 -> m47_1734  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1731 -> m47_1735  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1730 -> m47_1731  [key=0, style=solid];
m47_1736 -> m47_1729  [key=0, style=bold, color=blue];
m47_570 -> m47_571  [key=0, style=solid];
m47_571 -> m47_56  [key=2, style=dotted];
m47_571 -> m47_57  [key=2, style=dotted];
m47_571 -> m47_572  [key=0, style=solid];
m47_571 -> m47_575  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_572 -> m47_573  [key=0, style=solid];
m47_572 -> m47_150  [key=2, style=dotted];
m47_572 -> m47_574  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_573 -> m47_570  [key=0, style=bold, color=blue];
m47_1971 -> m47_1972  [key=0, style=solid];
m47_1973 -> m47_59  [key=2, style=dotted];
m47_1973 -> m47_1974  [key=0, style=solid];
m47_1973 -> m47_356  [key=2, style=dotted];
m47_1974 -> m47_59  [key=2, style=dotted];
m47_1974 -> m47_1975  [key=0, style=solid];
m47_1974 -> m47_356  [key=2, style=dotted];
m47_1972 -> m47_56  [key=2, style=dotted];
m47_1972 -> m47_57  [key=2, style=dotted];
m47_1972 -> m47_1973  [key=0, style=solid];
m47_1972 -> m47_1974  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1972 -> m47_1975  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1972 -> m47_1978  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1975 -> m47_1976  [key=0, style=solid];
m47_1975 -> m47_150  [key=2, style=dotted];
m47_1975 -> m47_1977  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_1976 -> m47_1971  [key=0, style=bold, color=blue];
m47_2267 -> m47_2268  [key=0, style=solid];
m47_2267 -> m47_2270  [key=1, style=dashed, color=darkseagreen4, label="char[]"];
m47_2268 -> m47_2269  [key=0, style=solid];
m47_2268 -> m47_2270  [key=0, style=solid];
m47_2270 -> m47_2271  [key=0, style=solid];
m47_2270 -> m47_2273  [key=2, style=dotted];
m47_2269 -> m47_2271  [key=0, style=solid];
m47_2269 -> m47_2272  [key=2, style=dotted];
m47_2271 -> m47_2267  [key=0, style=bold, color=blue];
m47_1365 -> m47_1366  [key=0, style=solid];
m47_217 -> m47_58  [key=2, style=dotted];
m47_217 -> m47_218  [key=0, style=solid];
m47_240 -> m47_58  [key=2, style=dotted];
m47_240 -> m47_241  [key=0, style=solid];
m47_277 -> m47_58  [key=2, style=dotted];
m47_277 -> m47_278  [key=0, style=solid];
m47_382 -> m47_58  [key=2, style=dotted];
m47_382 -> m47_382  [key=0, style=solid];
m47_382 -> m47_383  [key=0, style=solid];
m47_400 -> m47_58  [key=2, style=dotted];
m47_400 -> m47_401  [key=0, style=solid];
m47_413 -> m47_58  [key=2, style=dotted];
m47_413 -> m47_413  [key=0, style=solid];
m47_413 -> m47_414  [key=0, style=solid];
m47_1010 -> m47_58  [key=2, style=dotted];
m47_1010 -> m47_1011  [key=0, style=solid];
m47_1045 -> m47_58  [key=2, style=dotted];
m47_1045 -> m47_1046  [key=0, style=solid];
m47_1048 -> m47_58  [key=2, style=dotted];
m47_1048 -> m47_1049  [key=0, style=solid];
m47_1223 -> m47_58  [key=2, style=dotted];
m47_1223 -> m47_1224  [key=0, style=solid];
m47_1301 -> m47_58  [key=2, style=dotted];
m47_1301 -> m47_1302  [key=0, style=solid];
m47_1546 -> m47_58  [key=2, style=dotted];
m47_1546 -> m47_1547  [key=0, style=solid];
m47_1553 -> m47_58  [key=2, style=dotted];
m47_1553 -> m47_1554  [key=0, style=solid];
m47_1560 -> m47_58  [key=2, style=dotted];
m47_1560 -> m47_1561  [key=0, style=solid];
m47_1567 -> m47_58  [key=2, style=dotted];
m47_1567 -> m47_1568  [key=0, style=solid];
m47_1574 -> m47_58  [key=2, style=dotted];
m47_1574 -> m47_1575  [key=0, style=solid];
m47_1719 -> m47_58  [key=2, style=dotted];
m47_1719 -> m47_1720  [key=0, style=solid];
m47_1727 -> m47_58  [key=2, style=dotted];
m47_1727 -> m47_1728  [key=0, style=solid];
m47_1758 -> m47_58  [key=2, style=dotted];
m47_1758 -> m47_1759  [key=0, style=solid];
m47_1775 -> m47_58  [key=2, style=dotted];
m47_1775 -> m47_59  [key=2, style=dotted];
m47_1775 -> m47_1776  [key=0, style=solid];
m47_1939 -> m47_58  [key=2, style=dotted];
m47_1939 -> m47_1940  [key=0, style=solid];
m47_2033 -> m47_58  [key=2, style=dotted];
m47_2033 -> m47_59  [key=2, style=dotted];
m47_2033 -> m47_2034  [key=0, style=solid];
m47_2065 -> m47_58  [key=2, style=dotted];
m47_2065 -> m47_59  [key=2, style=dotted];
m47_2065 -> m47_2066  [key=0, style=solid];
m47_2068 -> m47_58  [key=2, style=dotted];
m47_2068 -> m47_59  [key=2, style=dotted];
m47_2068 -> m47_2069  [key=0, style=solid];
m47_2190 -> m47_58  [key=2, style=dotted];
m47_2190 -> m47_2191  [key=0, style=solid];
m47_2193 -> m47_58  [key=2, style=dotted];
m47_2193 -> m47_2194  [key=0, style=solid];
m47_2196 -> m47_58  [key=2, style=dotted];
m47_2196 -> m47_2197  [key=0, style=solid];
m47_2199 -> m47_58  [key=2, style=dotted];
m47_2199 -> m47_2200  [key=0, style=solid];
m47_2202 -> m47_58  [key=2, style=dotted];
m47_2202 -> m47_2203  [key=0, style=solid];
m47_2205 -> m47_58  [key=2, style=dotted];
m47_2205 -> m47_2206  [key=0, style=solid];
m47_2231 -> m47_58  [key=2, style=dotted];
m47_2231 -> m47_2231  [key=0, style=solid];
m47_2231 -> m47_2232  [key=0, style=solid];
m47_568 -> m47_56  [key=2, style=dotted];
m47_568 -> m47_569  [key=0, style=solid];
m47_665 -> m47_56  [key=2, style=dotted];
m47_665 -> m47_57  [key=2, style=dotted];
m47_665 -> m47_666  [key=0, style=solid];
m47_665 -> m47_663  [key=2, style=dotted];
m47_681 -> m47_56  [key=2, style=dotted];
m47_681 -> m47_57  [key=2, style=dotted];
m47_681 -> m47_682  [key=0, style=solid];
m47_681 -> m47_663  [key=2, style=dotted];
m47_2230 -> m47_56  [key=2, style=dotted];
m47_2230 -> m47_57  [key=2, style=dotted];
m47_2230 -> m47_2231  [key=0, style=solid];
m47_216 -> m47_217  [key=0, style=solid];
m47_218 -> m47_216  [key=0, style=bold, color=blue];
m47_239 -> m47_240  [key=0, style=solid];
m47_241 -> m47_239  [key=0, style=bold, color=blue];
m47_276 -> m47_277  [key=0, style=solid];
m47_278 -> m47_276  [key=0, style=bold, color=blue];
m47_381 -> m47_382  [key=0, style=solid];
m47_383 -> m47_381  [key=0, style=bold, color=blue];
m47_399 -> m47_400  [key=0, style=solid];
m47_401 -> m47_399  [key=0, style=bold, color=blue];
m47_412 -> m47_413  [key=0, style=solid];
m47_414 -> m47_412  [key=0, style=bold, color=blue];
m47_1009 -> m47_1010  [key=0, style=solid];
m47_1011 -> m47_1009  [key=0, style=bold, color=blue];
m47_1044 -> m47_1045  [key=0, style=solid];
m47_1046 -> m47_1044  [key=0, style=bold, color=blue];
m47_1047 -> m47_1048  [key=0, style=solid];
m47_1049 -> m47_1047  [key=0, style=bold, color=blue];
m47_1222 -> m47_1223  [key=0, style=solid];
m47_1224 -> m47_1222  [key=0, style=bold, color=blue];
m47_1300 -> m47_1301  [key=0, style=solid];
m47_1302 -> m47_1300  [key=0, style=bold, color=blue];
m47_1545 -> m47_1546  [key=0, style=solid];
m47_1547 -> m47_1545  [key=0, style=bold, color=blue];
m47_1552 -> m47_1553  [key=0, style=solid];
m47_1554 -> m47_1552  [key=0, style=bold, color=blue];
m47_1559 -> m47_1560  [key=0, style=solid];
m47_1561 -> m47_1559  [key=0, style=bold, color=blue];
m47_1566 -> m47_1567  [key=0, style=solid];
m47_1568 -> m47_1566  [key=0, style=bold, color=blue];
m47_1573 -> m47_1574  [key=0, style=solid];
m47_1575 -> m47_1573  [key=0, style=bold, color=blue];
m47_1718 -> m47_1719  [key=0, style=solid];
m47_1720 -> m47_1718  [key=0, style=bold, color=blue];
m47_1726 -> m47_1727  [key=0, style=solid];
m47_1728 -> m47_1726  [key=0, style=bold, color=blue];
m47_1757 -> m47_1758  [key=0, style=solid];
m47_1759 -> m47_1757  [key=0, style=bold, color=blue];
m47_1774 -> m47_1775  [key=0, style=solid];
m47_1776 -> m47_1774  [key=0, style=bold, color=blue];
m47_1938 -> m47_1939  [key=0, style=solid];
m47_1940 -> m47_1938  [key=0, style=bold, color=blue];
m47_2032 -> m47_2033  [key=0, style=solid];
m47_2034 -> m47_2032  [key=0, style=bold, color=blue];
m47_2064 -> m47_2065  [key=0, style=solid];
m47_2066 -> m47_2064  [key=0, style=bold, color=blue];
m47_2067 -> m47_2068  [key=0, style=solid];
m47_2069 -> m47_2067  [key=0, style=bold, color=blue];
m47_2189 -> m47_2190  [key=0, style=solid];
m47_2191 -> m47_2189  [key=0, style=bold, color=blue];
m47_2192 -> m47_2193  [key=0, style=solid];
m47_2194 -> m47_2192  [key=0, style=bold, color=blue];
m47_2195 -> m47_2196  [key=0, style=solid];
m47_2197 -> m47_2195  [key=0, style=bold, color=blue];
m47_2198 -> m47_2199  [key=0, style=solid];
m47_2200 -> m47_2198  [key=0, style=bold, color=blue];
m47_2201 -> m47_2202  [key=0, style=solid];
m47_2203 -> m47_2201  [key=0, style=bold, color=blue];
m47_2204 -> m47_2205  [key=0, style=solid];
m47_2206 -> m47_2204  [key=0, style=bold, color=blue];
m47_2232 -> m47_2229  [key=0, style=bold, color=blue];
m47_152 -> m47_154  [key=2, style=dotted];
m47_152 -> m47_153  [key=0, style=solid];
m47_169 -> m47_154  [key=2, style=dotted];
m47_169 -> m47_170  [key=0, style=solid];
m47_172 -> m47_154  [key=2, style=dotted];
m47_172 -> m47_173  [key=0, style=solid];
m47_175 -> m47_154  [key=2, style=dotted];
m47_175 -> m47_176  [key=0, style=solid];
m47_178 -> m47_154  [key=2, style=dotted];
m47_178 -> m47_179  [key=0, style=solid];
m47_220 -> m47_222  [key=2, style=dotted];
m47_220 -> m47_221  [key=0, style=solid];
m47_224 -> m47_154  [key=2, style=dotted];
m47_224 -> m47_225  [key=0, style=solid];
m47_567 -> m47_568  [key=0, style=solid];
m47_569 -> m47_567  [key=0, style=bold, color=blue];
m47_575 -> m47_356  [key=2, style=dotted];
m47_575 -> m47_576  [key=0, style=solid];
m47_664 -> m47_665  [key=0, style=solid];
m47_666 -> m47_154  [key=2, style=dotted];
m47_666 -> m47_667  [key=0, style=solid];
m47_680 -> m47_681  [key=0, style=solid];
m47_682 -> m47_154  [key=2, style=dotted];
m47_682 -> m47_683  [key=0, style=solid];
m47_777 -> m47_356  [key=2, style=dotted];
m47_777 -> m47_778  [key=0, style=solid];
m47_784 -> m47_356  [key=2, style=dotted];
m47_784 -> m47_785  [key=0, style=solid];
m47_791 -> m47_792  [key=0, style=solid];
m47_791 -> m47_793  [key=2, style=dotted];
m47_802 -> m47_803  [key=0, style=solid];
m47_802 -> m47_793  [key=2, style=dotted];
m47_817 -> m47_356  [key=2, style=dotted];
m47_817 -> m47_818  [key=0, style=solid];
m47_970 -> m47_154  [key=2, style=dotted];
m47_970 -> m47_971  [key=0, style=solid];
m47_973 -> m47_154  [key=2, style=dotted];
m47_973 -> m47_974  [key=0, style=solid];
m47_976 -> m47_154  [key=2, style=dotted];
m47_976 -> m47_977  [key=0, style=solid];
m47_979 -> m47_154  [key=2, style=dotted];
m47_979 -> m47_980  [key=0, style=solid];
m47_982 -> m47_154  [key=2, style=dotted];
m47_982 -> m47_983  [key=0, style=solid];
m47_1007 -> m47_222  [key=2, style=dotted];
m47_1007 -> m47_1008  [key=0, style=solid];
m47_1013 -> m47_222  [key=2, style=dotted];
m47_1013 -> m47_1014  [key=0, style=solid];
m47_1318 -> m47_1319  [key=0, style=solid];
m47_1318 -> m47_94  [key=2, style=dotted];
m47_1331 -> m47_222  [key=2, style=dotted];
m47_1331 -> m47_1332  [key=0, style=solid];
m47_1338 -> m47_1339  [key=0, style=solid];
m47_1338 -> m47_94  [key=2, style=dotted];
m47_1345 -> m47_1346  [key=0, style=solid];
m47_1345 -> m47_1325  [key=2, style=dotted];
m47_1359 -> m47_1360  [key=0, style=solid];
m47_1359 -> m47_94  [key=2, style=dotted];
m47_1366 -> m47_1367  [key=0, style=solid];
m47_1366 -> m47_94  [key=2, style=dotted];
m47_1437 -> m47_1438  [key=0, style=solid];
m47_1437 -> m47_1325  [key=2, style=dotted];
m47_1539 -> m47_154  [key=2, style=dotted];
m47_1539 -> m47_1540  [key=0, style=solid];
m47_1978 -> m47_356  [key=2, style=dotted];
m47_1978 -> m47_1979  [key=0, style=solid];
m47_2229 -> m47_2230  [key=0, style=solid];
m47_151 -> m47_152  [key=0, style=solid];
m47_168 -> m47_169  [key=0, style=solid];
m47_1436 -> m47_1437  [key=0, style=solid];
m47_1538 -> m47_1539  [key=0, style=solid];
m47_177 -> m47_178  [key=0, style=solid];
m47_816 -> m47_817  [key=0, style=solid];
m47_1977 -> m47_1978  [key=0, style=solid];
m47_153 -> m47_151  [key=0, style=bold, color=blue];
m47_170 -> m47_168  [key=0, style=bold, color=blue];
m47_171 -> m47_172  [key=0, style=solid];
m47_173 -> m47_171  [key=0, style=bold, color=blue];
m47_174 -> m47_175  [key=0, style=solid];
m47_176 -> m47_174  [key=0, style=bold, color=blue];
m47_179 -> m47_177  [key=0, style=bold, color=blue];
m47_219 -> m47_220  [key=0, style=solid];
m47_221 -> m47_219  [key=0, style=bold, color=blue];
m47_223 -> m47_224  [key=0, style=solid];
m47_225 -> m47_223  [key=0, style=bold, color=blue];
m47_574 -> m47_575  [key=0, style=solid];
m47_576 -> m47_574  [key=0, style=bold, color=blue];
m47_667 -> m47_664  [key=0, style=bold, color=blue];
m47_683 -> m47_680  [key=0, style=bold, color=blue];
m47_776 -> m47_777  [key=0, style=solid];
m47_778 -> m47_776  [key=0, style=bold, color=blue];
m47_783 -> m47_784  [key=0, style=solid];
m47_785 -> m47_783  [key=0, style=bold, color=blue];
m47_790 -> m47_791  [key=0, style=solid];
m47_792 -> m47_790  [key=0, style=bold, color=blue];
m47_801 -> m47_802  [key=0, style=solid];
m47_803 -> m47_801  [key=0, style=bold, color=blue];
m47_818 -> m47_816  [key=0, style=bold, color=blue];
m47_969 -> m47_970  [key=0, style=solid];
m47_971 -> m47_969  [key=0, style=bold, color=blue];
m47_972 -> m47_973  [key=0, style=solid];
m47_974 -> m47_972  [key=0, style=bold, color=blue];
m47_975 -> m47_976  [key=0, style=solid];
m47_977 -> m47_975  [key=0, style=bold, color=blue];
m47_978 -> m47_979  [key=0, style=solid];
m47_980 -> m47_978  [key=0, style=bold, color=blue];
m47_981 -> m47_982  [key=0, style=solid];
m47_983 -> m47_981  [key=0, style=bold, color=blue];
m47_1006 -> m47_1007  [key=0, style=solid];
m47_1008 -> m47_1006  [key=0, style=bold, color=blue];
m47_1012 -> m47_1013  [key=0, style=solid];
m47_1014 -> m47_1012  [key=0, style=bold, color=blue];
m47_1317 -> m47_1318  [key=0, style=solid];
m47_1319 -> m47_1317  [key=0, style=bold, color=blue];
m47_1330 -> m47_1331  [key=0, style=solid];
m47_1332 -> m47_1330  [key=0, style=bold, color=blue];
m47_1337 -> m47_1338  [key=0, style=solid];
m47_1339 -> m47_1337  [key=0, style=bold, color=blue];
m47_1344 -> m47_1345  [key=0, style=solid];
m47_1346 -> m47_1344  [key=0, style=bold, color=blue];
m47_1358 -> m47_1359  [key=0, style=solid];
m47_1360 -> m47_1358  [key=0, style=bold, color=blue];
m47_1367 -> m47_1365  [key=0, style=bold, color=blue];
m47_1438 -> m47_1436  [key=0, style=bold, color=blue];
m47_1540 -> m47_1538  [key=0, style=bold, color=blue];
m47_1979 -> m47_1977  [key=0, style=bold, color=blue];
m47_877 -> m47_878  [key=0, style=solid];
m47_882 -> m47_60  [key=2, style=dotted];
m47_882 -> m47_883  [key=0, style=solid];
m47_884 -> m47_60  [key=2, style=dotted];
m47_884 -> m47_885  [key=0, style=solid];
m47_887 -> m47_60  [key=2, style=dotted];
m47_887 -> m47_888  [key=0, style=solid];
m47_889 -> m47_60  [key=2, style=dotted];
m47_889 -> m47_890  [key=0, style=solid];
m47_881 -> m47_59  [key=2, style=dotted];
m47_881 -> m47_882  [key=0, style=solid];
m47_881 -> m47_356  [key=2, style=dotted];
m47_883 -> m47_59  [key=2, style=dotted];
m47_883 -> m47_884  [key=0, style=solid];
m47_883 -> m47_356  [key=2, style=dotted];
m47_888 -> m47_59  [key=2, style=dotted];
m47_888 -> m47_889  [key=0, style=solid];
m47_888 -> m47_356  [key=2, style=dotted];
m47_880 -> m47_56  [key=2, style=dotted];
m47_880 -> m47_57  [key=2, style=dotted];
m47_880 -> m47_882  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_880 -> m47_884  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_880 -> m47_887  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_880 -> m47_889  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_880 -> m47_881  [key=0, style=solid];
m47_880 -> m47_883  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_880 -> m47_888  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_880 -> m47_800  [key=2, style=dotted];
m47_880 -> m47_885  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_880 -> m47_890  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_885 -> m47_886  [key=0, style=solid];
m47_885 -> m47_793  [key=2, style=dotted];
m47_886 -> m47_887  [key=0, style=solid];
m47_886 -> m47_892  [key=2, style=dotted];
m47_890 -> m47_891  [key=0, style=solid];
m47_890 -> m47_356  [key=2, style=dotted];
m47_890 -> m47_136  [key=2, style=dotted];
m47_879 -> m47_880  [key=0, style=solid];
m47_879 -> m47_886  [key=1, style=dashed, color=darkseagreen4, label=helloWorldData];
m47_879 -> m47_335  [key=2, style=dotted];
m47_878 -> m47_879  [key=0, style=solid];
m47_891 -> m47_877  [key=0, style=bold, color=blue];
m47_935 -> m47_936  [key=0, style=solid];
m47_938 -> m47_58  [key=2, style=dotted];
m47_938 -> m47_938  [key=0, style=solid];
m47_938 -> m47_939  [key=0, style=solid];
m47_937 -> m47_56  [key=2, style=dotted];
m47_937 -> m47_57  [key=2, style=dotted];
m47_937 -> m47_938  [key=0, style=solid];
m47_936 -> m47_937  [key=0, style=solid];
m47_939 -> m47_935  [key=0, style=bold, color=blue];
m47_1948 -> m47_1949  [key=0, style=solid];
m47_1952 -> m47_60  [key=2, style=dotted];
m47_1952 -> m47_1953  [key=0, style=solid];
m47_1953 -> m47_60  [key=2, style=dotted];
m47_1953 -> m47_1954  [key=0, style=solid];
m47_1950 -> m47_56  [key=2, style=dotted];
m47_1950 -> m47_57  [key=2, style=dotted];
m47_1950 -> m47_1952  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1950 -> m47_1953  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1950 -> m47_1951  [key=0, style=solid];
m47_1951 -> m47_1952  [key=0, style=solid];
m47_1951 -> m47_222  [key=2, style=dotted];
m47_1949 -> m47_1950  [key=0, style=solid];
m47_1954 -> m47_1948  [key=0, style=bold, color=blue];
m47_2207 -> m47_2208  [key=0, style=solid];
m47_2219 -> m47_60  [key=2, style=dotted];
m47_2219 -> m47_2220  [key=0, style=solid];
m47_2221 -> m47_60  [key=2, style=dotted];
m47_2221 -> m47_2222  [key=0, style=solid];
m47_2217 -> m47_58  [key=2, style=dotted];
m47_2217 -> m47_59  [key=2, style=dotted];
m47_2217 -> m47_2218  [key=0, style=solid];
m47_2222 -> m47_58  [key=2, style=dotted];
m47_2222 -> m47_59  [key=2, style=dotted];
m47_2222 -> m47_2223  [key=0, style=solid];
m47_2216 -> m47_56  [key=2, style=dotted];
m47_2216 -> m47_2217  [key=0, style=solid];
m47_2216 -> m47_2222  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2216 -> m47_2218  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2216 -> m47_2220  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2215 -> m47_57  [key=2, style=dotted];
m47_2215 -> m47_2216  [key=0, style=solid];
m47_2218 -> m47_2219  [key=0, style=solid];
m47_2218 -> m47_222  [key=2, style=dotted];
m47_2220 -> m47_2221  [key=0, style=solid];
m47_2220 -> m47_222  [key=2, style=dotted];
m47_2214 -> m47_2215  [key=0, style=solid];
m47_2214 -> m47_610  [key=2, style=dotted];
m47_2208 -> m47_2214  [key=1, style=dashed, color=darkseagreen4, label=sw];
m47_2208 -> m47_2209  [key=0, style=solid];
m47_2208 -> m47_605  [key=2, style=dotted];
m47_2213 -> m47_2214  [key=0, style=solid];
m47_2213 -> m47_609  [key=2, style=dotted];
m47_2209 -> m47_2213  [key=1, style=dashed, color=darkseagreen4, label=writer];
m47_2209 -> m47_606  [key=2, style=dotted];
m47_2209 -> m47_2210  [key=0, style=solid];
m47_2209 -> m47_2211  [key=1, style=dashed, color=darkseagreen4, label=writer];
m47_2209 -> m47_2212  [key=1, style=dashed, color=darkseagreen4, label=writer];
m47_2212 -> m47_2213  [key=0, style=solid];
m47_2212 -> m47_2224  [key=2, style=dotted];
m47_2210 -> m47_2211  [key=0, style=solid];
m47_2210 -> m47_607  [key=2, style=dotted];
m47_2211 -> m47_2212  [key=0, style=solid];
m47_2211 -> m47_2224  [key=2, style=dotted];
m47_2223 -> m47_2207  [key=0, style=bold, color=blue];
m47_1326 -> m47_1327  [key=0, style=solid];
m47_1327 -> m47_56  [key=2, style=dotted];
m47_1327 -> m47_57  [key=2, style=dotted];
m47_1327 -> m47_1328  [key=0, style=solid];
m47_1327 -> m47_1331  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1328 -> m47_1329  [key=0, style=solid];
m47_1328 -> m47_150  [key=2, style=dotted];
m47_1328 -> m47_1330  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_1329 -> m47_1326  [key=0, style=bold, color=blue];
m47_893 -> m47_894  [key=0, style=solid];
m47_898 -> m47_60  [key=2, style=dotted];
m47_898 -> m47_899  [key=0, style=solid];
m47_901 -> m47_60  [key=2, style=dotted];
m47_901 -> m47_902  [key=0, style=solid];
m47_905 -> m47_60  [key=2, style=dotted];
m47_905 -> m47_906  [key=0, style=solid];
m47_907 -> m47_60  [key=2, style=dotted];
m47_907 -> m47_908  [key=0, style=solid];
m47_897 -> m47_59  [key=2, style=dotted];
m47_897 -> m47_898  [key=0, style=solid];
m47_897 -> m47_356  [key=2, style=dotted];
m47_899 -> m47_59  [key=2, style=dotted];
m47_899 -> m47_900  [key=0, style=solid];
m47_899 -> m47_356  [key=2, style=dotted];
m47_900 -> m47_59  [key=2, style=dotted];
m47_900 -> m47_901  [key=0, style=solid];
m47_900 -> m47_356  [key=2, style=dotted];
m47_902 -> m47_59  [key=2, style=dotted];
m47_902 -> m47_903  [key=0, style=solid];
m47_902 -> m47_356  [key=2, style=dotted];
m47_906 -> m47_59  [key=2, style=dotted];
m47_906 -> m47_907  [key=0, style=solid];
m47_906 -> m47_356  [key=2, style=dotted];
m47_896 -> m47_56  [key=2, style=dotted];
m47_896 -> m47_57  [key=2, style=dotted];
m47_896 -> m47_898  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_896 -> m47_901  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_896 -> m47_905  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_896 -> m47_907  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_896 -> m47_897  [key=0, style=solid];
m47_896 -> m47_899  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_896 -> m47_900  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_896 -> m47_902  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_896 -> m47_906  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_896 -> m47_800  [key=2, style=dotted];
m47_896 -> m47_903  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_896 -> m47_908  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_904 -> m47_905  [key=0, style=solid];
m47_904 -> m47_892  [key=2, style=dotted];
m47_908 -> m47_909  [key=0, style=solid];
m47_908 -> m47_356  [key=2, style=dotted];
m47_908 -> m47_136  [key=2, style=dotted];
m47_903 -> m47_904  [key=0, style=solid];
m47_903 -> m47_793  [key=2, style=dotted];
m47_895 -> m47_896  [key=0, style=solid];
m47_895 -> m47_904  [key=1, style=dashed, color=darkseagreen4, label=helloWorldData];
m47_895 -> m47_335  [key=2, style=dotted];
m47_894 -> m47_895  [key=0, style=solid];
m47_909 -> m47_893  [key=0, style=bold, color=blue];
m47_1529 -> m47_1530  [key=0, style=solid];
m47_1533 -> m47_60  [key=2, style=dotted];
m47_1533 -> m47_1534  [key=0, style=solid];
m47_1535 -> m47_60  [key=2, style=dotted];
m47_1535 -> m47_1536  [key=0, style=solid];
m47_1532 -> m47_58  [key=2, style=dotted];
m47_1532 -> m47_59  [key=2, style=dotted];
m47_1532 -> m47_1533  [key=0, style=solid];
m47_1534 -> m47_58  [key=2, style=dotted];
m47_1534 -> m47_59  [key=2, style=dotted];
m47_1534 -> m47_1535  [key=0, style=solid];
m47_1531 -> m47_56  [key=2, style=dotted];
m47_1531 -> m47_57  [key=2, style=dotted];
m47_1531 -> m47_1533  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1531 -> m47_1535  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1531 -> m47_1532  [key=0, style=solid];
m47_1531 -> m47_1534  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1531 -> m47_1536  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1531 -> m47_1539  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1536 -> m47_1537  [key=0, style=solid];
m47_1536 -> m47_150  [key=2, style=dotted];
m47_1536 -> m47_1538  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_1530 -> m47_1531  [key=0, style=solid];
m47_1537 -> m47_1529  [key=0, style=bold, color=blue];
m47_1941 -> m47_1942  [key=0, style=solid];
m47_1945 -> m47_60  [key=2, style=dotted];
m47_1945 -> m47_1946  [key=0, style=solid];
m47_1946 -> m47_60  [key=2, style=dotted];
m47_1946 -> m47_1947  [key=0, style=solid];
m47_1943 -> m47_56  [key=2, style=dotted];
m47_1943 -> m47_57  [key=2, style=dotted];
m47_1943 -> m47_1945  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1943 -> m47_1946  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1943 -> m47_1944  [key=0, style=solid];
m47_1944 -> m47_1945  [key=0, style=solid];
m47_1944 -> m47_222  [key=2, style=dotted];
m47_1942 -> m47_1943  [key=0, style=solid];
m47_1947 -> m47_1941  [key=0, style=bold, color=blue];
m47_337 -> m47_338  [key=0, style=solid];
m47_340 -> m47_59  [key=2, style=dotted];
m47_340 -> m47_341  [key=0, style=solid];
m47_345 -> m47_59  [key=2, style=dotted];
m47_345 -> m47_346  [key=0, style=solid];
m47_347 -> m47_59  [key=2, style=dotted];
m47_347 -> m47_348  [key=0, style=solid];
m47_339 -> m47_56  [key=2, style=dotted];
m47_339 -> m47_340  [key=0, style=solid];
m47_339 -> m47_336  [key=2, style=dotted];
m47_339 -> m47_341  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_344 -> m47_56  [key=2, style=dotted];
m47_344 -> m47_345  [key=0, style=solid];
m47_344 -> m47_336  [key=2, style=dotted];
m47_344 -> m47_346  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_338 -> m47_340  [key=1, style=dashed, color=darkseagreen4, label=ms];
m47_338 -> m47_339  [key=0, style=solid];
m47_338 -> m47_349  [key=2, style=dotted];
m47_338 -> m47_342  [key=1, style=dashed, color=darkseagreen4, label=ms];
m47_341 -> m47_342  [key=0, style=solid];
m47_341 -> m47_350  [key=2, style=dotted];
m47_343 -> m47_345  [key=1, style=dashed, color=darkseagreen4, label=ms];
m47_343 -> m47_347  [key=1, style=dashed, color=darkseagreen4, label=ms];
m47_343 -> m47_344  [key=0, style=solid];
m47_343 -> m47_349  [key=2, style=dotted];
m47_346 -> m47_347  [key=0, style=solid];
m47_346 -> m47_350  [key=2, style=dotted];
m47_342 -> m47_136  [key=2, style=dotted];
m47_342 -> m47_343  [key=0, style=solid];
m47_348 -> m47_337  [key=0, style=bold, color=blue];
m47_1839 -> m47_1840  [key=0, style=solid];
m47_1843 -> m47_60  [key=2, style=dotted];
m47_1843 -> m47_1844  [key=0, style=solid];
m47_1844 -> m47_60  [key=2, style=dotted];
m47_1844 -> m47_1845  [key=0, style=solid];
m47_1845 -> m47_60  [key=2, style=dotted];
m47_1845 -> m47_1846  [key=0, style=solid];
m47_1847 -> m47_60  [key=2, style=dotted];
m47_1847 -> m47_1848  [key=0, style=solid];
m47_1848 -> m47_60  [key=2, style=dotted];
m47_1848 -> m47_1849  [key=0, style=solid];
m47_1850 -> m47_60  [key=2, style=dotted];
m47_1850 -> m47_1851  [key=0, style=solid];
m47_1851 -> m47_60  [key=2, style=dotted];
m47_1851 -> m47_1852  [key=0, style=solid];
m47_1853 -> m47_60  [key=2, style=dotted];
m47_1853 -> m47_1854  [key=0, style=solid];
m47_1854 -> m47_60  [key=2, style=dotted];
m47_1854 -> m47_1855  [key=0, style=solid];
m47_1855 -> m47_60  [key=2, style=dotted];
m47_1855 -> m47_1856  [key=0, style=solid];
m47_1857 -> m47_60  [key=2, style=dotted];
m47_1857 -> m47_1858  [key=0, style=solid];
m47_1858 -> m47_60  [key=2, style=dotted];
m47_1858 -> m47_1859  [key=0, style=solid];
m47_1860 -> m47_60  [key=2, style=dotted];
m47_1860 -> m47_1861  [key=0, style=solid];
m47_1861 -> m47_60  [key=2, style=dotted];
m47_1861 -> m47_1862  [key=0, style=solid];
m47_1862 -> m47_60  [key=2, style=dotted];
m47_1862 -> m47_1863  [key=0, style=solid];
m47_1864 -> m47_60  [key=2, style=dotted];
m47_1864 -> m47_1865  [key=0, style=solid];
m47_1865 -> m47_60  [key=2, style=dotted];
m47_1865 -> m47_1866  [key=0, style=solid];
m47_1866 -> m47_60  [key=2, style=dotted];
m47_1866 -> m47_1867  [key=0, style=solid];
m47_1868 -> m47_60  [key=2, style=dotted];
m47_1868 -> m47_1869  [key=0, style=solid];
m47_1869 -> m47_60  [key=2, style=dotted];
m47_1869 -> m47_1870  [key=0, style=solid];
m47_1870 -> m47_60  [key=2, style=dotted];
m47_1870 -> m47_1871  [key=0, style=solid];
m47_1872 -> m47_60  [key=2, style=dotted];
m47_1872 -> m47_1873  [key=0, style=solid];
m47_1873 -> m47_60  [key=2, style=dotted];
m47_1873 -> m47_1874  [key=0, style=solid];
m47_1874 -> m47_60  [key=2, style=dotted];
m47_1874 -> m47_1875  [key=0, style=solid];
m47_1876 -> m47_60  [key=2, style=dotted];
m47_1876 -> m47_1877  [key=0, style=solid];
m47_1877 -> m47_60  [key=2, style=dotted];
m47_1877 -> m47_1878  [key=0, style=solid];
m47_1879 -> m47_60  [key=2, style=dotted];
m47_1879 -> m47_1880  [key=0, style=solid];
m47_1880 -> m47_60  [key=2, style=dotted];
m47_1880 -> m47_1881  [key=0, style=solid];
m47_1881 -> m47_60  [key=2, style=dotted];
m47_1881 -> m47_1882  [key=0, style=solid];
m47_1883 -> m47_60  [key=2, style=dotted];
m47_1883 -> m47_1884  [key=0, style=solid];
m47_1885 -> m47_60  [key=2, style=dotted];
m47_1885 -> m47_1886  [key=0, style=solid];
m47_1886 -> m47_60  [key=2, style=dotted];
m47_1886 -> m47_1887  [key=0, style=solid];
m47_1888 -> m47_60  [key=2, style=dotted];
m47_1888 -> m47_1889  [key=0, style=solid];
m47_1889 -> m47_60  [key=2, style=dotted];
m47_1889 -> m47_1890  [key=0, style=solid];
m47_1891 -> m47_60  [key=2, style=dotted];
m47_1891 -> m47_1892  [key=0, style=solid];
m47_1892 -> m47_60  [key=2, style=dotted];
m47_1892 -> m47_1893  [key=0, style=solid];
m47_1894 -> m47_60  [key=2, style=dotted];
m47_1894 -> m47_1895  [key=0, style=solid];
m47_1895 -> m47_60  [key=2, style=dotted];
m47_1895 -> m47_1896  [key=0, style=solid];
m47_1897 -> m47_60  [key=2, style=dotted];
m47_1897 -> m47_1898  [key=0, style=solid];
m47_1899 -> m47_60  [key=2, style=dotted];
m47_1899 -> m47_1900  [key=0, style=solid];
m47_1900 -> m47_60  [key=2, style=dotted];
m47_1900 -> m47_1901  [key=0, style=solid];
m47_1902 -> m47_60  [key=2, style=dotted];
m47_1902 -> m47_1903  [key=0, style=solid];
m47_1904 -> m47_60  [key=2, style=dotted];
m47_1904 -> m47_1905  [key=0, style=solid];
m47_1906 -> m47_60  [key=2, style=dotted];
m47_1906 -> m47_1907  [key=0, style=solid];
m47_1908 -> m47_60  [key=2, style=dotted];
m47_1908 -> m47_1909  [key=0, style=solid];
m47_1910 -> m47_60  [key=2, style=dotted];
m47_1910 -> m47_1911  [key=0, style=solid];
m47_1912 -> m47_60  [key=2, style=dotted];
m47_1912 -> m47_1913  [key=0, style=solid];
m47_1914 -> m47_60  [key=2, style=dotted];
m47_1914 -> m47_1915  [key=0, style=solid];
m47_1916 -> m47_60  [key=2, style=dotted];
m47_1916 -> m47_1917  [key=0, style=solid];
m47_1918 -> m47_60  [key=2, style=dotted];
m47_1918 -> m47_1919  [key=0, style=solid];
m47_1919 -> m47_60  [key=2, style=dotted];
m47_1919 -> m47_1920  [key=0, style=solid];
m47_1921 -> m47_60  [key=2, style=dotted];
m47_1921 -> m47_1922  [key=0, style=solid];
m47_1922 -> m47_60  [key=2, style=dotted];
m47_1922 -> m47_1923  [key=0, style=solid];
m47_1842 -> m47_58  [key=2, style=dotted];
m47_1842 -> m47_59  [key=2, style=dotted];
m47_1842 -> m47_1843  [key=0, style=solid];
m47_1846 -> m47_58  [key=2, style=dotted];
m47_1846 -> m47_59  [key=2, style=dotted];
m47_1846 -> m47_1847  [key=0, style=solid];
m47_1849 -> m47_58  [key=2, style=dotted];
m47_1849 -> m47_59  [key=2, style=dotted];
m47_1849 -> m47_1850  [key=0, style=solid];
m47_1852 -> m47_58  [key=2, style=dotted];
m47_1852 -> m47_59  [key=2, style=dotted];
m47_1852 -> m47_1853  [key=0, style=solid];
m47_1856 -> m47_58  [key=2, style=dotted];
m47_1856 -> m47_59  [key=2, style=dotted];
m47_1856 -> m47_1857  [key=0, style=solid];
m47_1859 -> m47_58  [key=2, style=dotted];
m47_1859 -> m47_59  [key=2, style=dotted];
m47_1859 -> m47_1860  [key=0, style=solid];
m47_1863 -> m47_58  [key=2, style=dotted];
m47_1863 -> m47_59  [key=2, style=dotted];
m47_1863 -> m47_1864  [key=0, style=solid];
m47_1867 -> m47_58  [key=2, style=dotted];
m47_1867 -> m47_59  [key=2, style=dotted];
m47_1867 -> m47_1868  [key=0, style=solid];
m47_1871 -> m47_58  [key=2, style=dotted];
m47_1871 -> m47_59  [key=2, style=dotted];
m47_1871 -> m47_1872  [key=0, style=solid];
m47_1875 -> m47_58  [key=2, style=dotted];
m47_1875 -> m47_59  [key=2, style=dotted];
m47_1875 -> m47_1876  [key=0, style=solid];
m47_1878 -> m47_58  [key=2, style=dotted];
m47_1878 -> m47_59  [key=2, style=dotted];
m47_1878 -> m47_1879  [key=0, style=solid];
m47_1882 -> m47_58  [key=2, style=dotted];
m47_1882 -> m47_59  [key=2, style=dotted];
m47_1882 -> m47_1883  [key=0, style=solid];
m47_1884 -> m47_58  [key=2, style=dotted];
m47_1884 -> m47_59  [key=2, style=dotted];
m47_1884 -> m47_1885  [key=0, style=solid];
m47_1887 -> m47_58  [key=2, style=dotted];
m47_1887 -> m47_59  [key=2, style=dotted];
m47_1887 -> m47_1888  [key=0, style=solid];
m47_1890 -> m47_58  [key=2, style=dotted];
m47_1890 -> m47_59  [key=2, style=dotted];
m47_1890 -> m47_1891  [key=0, style=solid];
m47_1893 -> m47_58  [key=2, style=dotted];
m47_1893 -> m47_59  [key=2, style=dotted];
m47_1893 -> m47_1894  [key=0, style=solid];
m47_1896 -> m47_58  [key=2, style=dotted];
m47_1896 -> m47_59  [key=2, style=dotted];
m47_1896 -> m47_1897  [key=0, style=solid];
m47_1898 -> m47_58  [key=2, style=dotted];
m47_1898 -> m47_59  [key=2, style=dotted];
m47_1898 -> m47_1899  [key=0, style=solid];
m47_1901 -> m47_58  [key=2, style=dotted];
m47_1901 -> m47_59  [key=2, style=dotted];
m47_1901 -> m47_1902  [key=0, style=solid];
m47_1903 -> m47_58  [key=2, style=dotted];
m47_1903 -> m47_59  [key=2, style=dotted];
m47_1903 -> m47_1904  [key=0, style=solid];
m47_1905 -> m47_58  [key=2, style=dotted];
m47_1905 -> m47_59  [key=2, style=dotted];
m47_1905 -> m47_1906  [key=0, style=solid];
m47_1907 -> m47_58  [key=2, style=dotted];
m47_1907 -> m47_59  [key=2, style=dotted];
m47_1907 -> m47_1908  [key=0, style=solid];
m47_1909 -> m47_58  [key=2, style=dotted];
m47_1909 -> m47_59  [key=2, style=dotted];
m47_1909 -> m47_1910  [key=0, style=solid];
m47_1911 -> m47_58  [key=2, style=dotted];
m47_1911 -> m47_59  [key=2, style=dotted];
m47_1911 -> m47_1912  [key=0, style=solid];
m47_1913 -> m47_58  [key=2, style=dotted];
m47_1913 -> m47_59  [key=2, style=dotted];
m47_1913 -> m47_1914  [key=0, style=solid];
m47_1915 -> m47_58  [key=2, style=dotted];
m47_1915 -> m47_59  [key=2, style=dotted];
m47_1915 -> m47_1916  [key=0, style=solid];
m47_1917 -> m47_58  [key=2, style=dotted];
m47_1917 -> m47_59  [key=2, style=dotted];
m47_1917 -> m47_1918  [key=0, style=solid];
m47_1920 -> m47_58  [key=2, style=dotted];
m47_1920 -> m47_59  [key=2, style=dotted];
m47_1920 -> m47_1921  [key=0, style=solid];
m47_1923 -> m47_58  [key=2, style=dotted];
m47_1923 -> m47_1924  [key=0, style=solid];
m47_1923 -> m47_136  [key=2, style=dotted];
m47_1841 -> m47_56  [key=2, style=dotted];
m47_1841 -> m47_1843  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1844  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1845  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1847  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1848  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1850  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1851  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1853  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1854  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1855  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1857  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1858  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1860  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1861  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1862  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1864  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1865  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1866  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1868  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1869  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1870  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1872  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1873  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1874  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1876  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1877  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1879  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1880  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1881  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1883  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1885  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1886  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1888  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1889  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1891  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1892  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1894  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1895  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1897  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1899  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1900  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1902  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1904  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1906  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1908  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1910  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1912  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1914  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1916  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1918  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1919  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1921  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1922  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1842  [key=0, style=solid];
m47_1841 -> m47_1846  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1849  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1852  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1856  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1859  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1863  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1867  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1871  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1875  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1878  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1882  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1884  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1887  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1890  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1893  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1896  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1898  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1901  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1903  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1905  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1907  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1909  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1911  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1913  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1915  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1917  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1920  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_1923  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1841 -> m47_336  [key=2, style=dotted];
m47_1841 -> m47_374  [key=2, style=dotted];
m47_1841 -> m47_375  [key=2, style=dotted];
m47_1840 -> m47_1841  [key=0, style=solid];
m47_1924 -> m47_1839  [key=0, style=bold, color=blue];
m47_1383 -> m47_1384  [key=0, style=solid];
m47_1387 -> m47_60  [key=2, style=dotted];
m47_1387 -> m47_1388  [key=0, style=solid];
m47_1389 -> m47_60  [key=2, style=dotted];
m47_1389 -> m47_1390  [key=0, style=solid];
m47_1391 -> m47_60  [key=2, style=dotted];
m47_1391 -> m47_1392  [key=0, style=solid];
m47_1392 -> m47_60  [key=2, style=dotted];
m47_1392 -> m47_1393  [key=0, style=solid];
m47_1394 -> m47_60  [key=2, style=dotted];
m47_1394 -> m47_1395  [key=0, style=solid];
m47_1386 -> m47_58  [key=2, style=dotted];
m47_1386 -> m47_59  [key=2, style=dotted];
m47_1386 -> m47_1387  [key=0, style=solid];
m47_1388 -> m47_58  [key=2, style=dotted];
m47_1388 -> m47_59  [key=2, style=dotted];
m47_1388 -> m47_1389  [key=0, style=solid];
m47_1390 -> m47_58  [key=2, style=dotted];
m47_1390 -> m47_59  [key=2, style=dotted];
m47_1390 -> m47_1391  [key=0, style=solid];
m47_1393 -> m47_58  [key=2, style=dotted];
m47_1393 -> m47_59  [key=2, style=dotted];
m47_1393 -> m47_1394  [key=0, style=solid];
m47_1385 -> m47_56  [key=2, style=dotted];
m47_1385 -> m47_57  [key=2, style=dotted];
m47_1385 -> m47_1387  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1385 -> m47_1389  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1385 -> m47_1391  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1385 -> m47_1392  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1385 -> m47_1394  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1385 -> m47_1386  [key=0, style=solid];
m47_1385 -> m47_1388  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1385 -> m47_1390  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1385 -> m47_1393  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1384 -> m47_1385  [key=0, style=solid];
m47_1395 -> m47_1383  [key=0, style=bold, color=blue];
m47_180 -> m47_181  [key=0, style=solid];
m47_184 -> m47_60  [key=2, style=dotted];
m47_184 -> m47_185  [key=0, style=solid];
m47_186 -> m47_60  [key=2, style=dotted];
m47_186 -> m47_187  [key=0, style=solid];
m47_190 -> m47_60  [key=2, style=dotted];
m47_190 -> m47_191  [key=0, style=solid];
m47_183 -> m47_58  [key=2, style=dotted];
m47_183 -> m47_59  [key=2, style=dotted];
m47_183 -> m47_184  [key=0, style=solid];
m47_185 -> m47_58  [key=2, style=dotted];
m47_185 -> m47_59  [key=2, style=dotted];
m47_185 -> m47_186  [key=0, style=solid];
m47_189 -> m47_58  [key=2, style=dotted];
m47_189 -> m47_59  [key=2, style=dotted];
m47_189 -> m47_190  [key=0, style=solid];
m47_191 -> m47_58  [key=2, style=dotted];
m47_191 -> m47_192  [key=0, style=solid];
m47_191 -> m47_136  [key=2, style=dotted];
m47_182 -> m47_56  [key=2, style=dotted];
m47_182 -> m47_57  [key=2, style=dotted];
m47_182 -> m47_184  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_182 -> m47_186  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_182 -> m47_190  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_182 -> m47_183  [key=0, style=solid];
m47_182 -> m47_185  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_182 -> m47_189  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_182 -> m47_191  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_182 -> m47_187  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_187 -> m47_189  [key=0, style=solid];
m47_187 -> m47_188  [key=0, style=solid];
m47_187 -> m47_94  [key=2, style=dotted];
m47_188 -> m47_189  [key=0, style=solid];
m47_181 -> m47_182  [key=0, style=solid];
m47_192 -> m47_180  [key=0, style=bold, color=blue];
m47_1980 -> m47_1981  [key=0, style=solid];
m47_1983 -> m47_60  [key=2, style=dotted];
m47_1983 -> m47_1984  [key=0, style=solid];
m47_1983 -> m47_1500  [key=2, style=dotted];
m47_1983 -> m47_2024  [key=2, style=dotted];
m47_1984 -> m47_60  [key=2, style=dotted];
m47_1984 -> m47_1985  [key=0, style=solid];
m47_1984 -> m47_2025  [key=2, style=dotted];
m47_1989 -> m47_60  [key=2, style=dotted];
m47_1989 -> m47_1990  [key=0, style=solid];
m47_1990 -> m47_60  [key=2, style=dotted];
m47_1990 -> m47_1991  [key=0, style=solid];
m47_1992 -> m47_60  [key=2, style=dotted];
m47_1992 -> m47_1993  [key=0, style=solid];
m47_1993 -> m47_60  [key=2, style=dotted];
m47_1993 -> m47_1994  [key=0, style=solid];
m47_1995 -> m47_60  [key=2, style=dotted];
m47_1995 -> m47_1996  [key=0, style=solid];
m47_1996 -> m47_60  [key=2, style=dotted];
m47_1996 -> m47_1997  [key=0, style=solid];
m47_1998 -> m47_60  [key=2, style=dotted];
m47_1998 -> m47_1999  [key=0, style=solid];
m47_1999 -> m47_60  [key=2, style=dotted];
m47_1999 -> m47_2000  [key=0, style=solid];
m47_2001 -> m47_60  [key=2, style=dotted];
m47_2001 -> m47_2002  [key=0, style=solid];
m47_2002 -> m47_60  [key=2, style=dotted];
m47_2002 -> m47_2003  [key=0, style=solid];
m47_2007 -> m47_60  [key=2, style=dotted];
m47_2007 -> m47_2008  [key=0, style=solid];
m47_2008 -> m47_60  [key=2, style=dotted];
m47_2008 -> m47_2009  [key=0, style=solid];
m47_2010 -> m47_60  [key=2, style=dotted];
m47_2010 -> m47_2011  [key=0, style=solid];
m47_2011 -> m47_60  [key=2, style=dotted];
m47_2011 -> m47_2012  [key=0, style=solid];
m47_2013 -> m47_60  [key=2, style=dotted];
m47_2013 -> m47_2014  [key=0, style=solid];
m47_2014 -> m47_60  [key=2, style=dotted];
m47_2014 -> m47_2015  [key=0, style=solid];
m47_2016 -> m47_60  [key=2, style=dotted];
m47_2016 -> m47_2017  [key=0, style=solid];
m47_2017 -> m47_60  [key=2, style=dotted];
m47_2017 -> m47_2018  [key=0, style=solid];
m47_2019 -> m47_60  [key=2, style=dotted];
m47_2019 -> m47_2020  [key=0, style=solid];
m47_2020 -> m47_60  [key=2, style=dotted];
m47_2020 -> m47_2021  [key=0, style=solid];
m47_1987 -> m47_58  [key=2, style=dotted];
m47_1987 -> m47_1988  [key=0, style=solid];
m47_1988 -> m47_58  [key=2, style=dotted];
m47_1988 -> m47_1989  [key=0, style=solid];
m47_1991 -> m47_58  [key=2, style=dotted];
m47_1991 -> m47_1992  [key=0, style=solid];
m47_1994 -> m47_58  [key=2, style=dotted];
m47_1994 -> m47_1995  [key=0, style=solid];
m47_1997 -> m47_58  [key=2, style=dotted];
m47_1997 -> m47_1998  [key=0, style=solid];
m47_2000 -> m47_58  [key=2, style=dotted];
m47_2000 -> m47_2001  [key=0, style=solid];
m47_2003 -> m47_58  [key=2, style=dotted];
m47_2003 -> m47_2004  [key=0, style=solid];
m47_2005 -> m47_58  [key=2, style=dotted];
m47_2005 -> m47_2006  [key=0, style=solid];
m47_2021 -> m47_58  [key=2, style=dotted];
m47_2021 -> m47_2022  [key=0, style=solid];
m47_1986 -> m47_56  [key=2, style=dotted];
m47_1986 -> m47_57  [key=2, style=dotted];
m47_1986 -> m47_1989  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1986 -> m47_1990  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1986 -> m47_1992  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1986 -> m47_1993  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1986 -> m47_1995  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1986 -> m47_1996  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1986 -> m47_1998  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1986 -> m47_1999  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1986 -> m47_2001  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1986 -> m47_2002  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1986 -> m47_1987  [key=0, style=solid];
m47_1986 -> m47_1988  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1986 -> m47_1991  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1986 -> m47_1994  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1986 -> m47_1997  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1986 -> m47_2000  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1986 -> m47_2003  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2004 -> m47_56  [key=2, style=dotted];
m47_2004 -> m47_57  [key=2, style=dotted];
m47_2004 -> m47_2007  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2004 -> m47_2008  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2004 -> m47_2010  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2004 -> m47_2011  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2004 -> m47_2013  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2004 -> m47_2014  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2004 -> m47_2016  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2004 -> m47_2017  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2004 -> m47_2019  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2004 -> m47_2020  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2004 -> m47_2005  [key=0, style=solid];
m47_2004 -> m47_2021  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2004 -> m47_2006  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2004 -> m47_2009  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2004 -> m47_2012  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2004 -> m47_2015  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2004 -> m47_2018  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1982 -> m47_1983  [key=0, style=solid];
m47_1982 -> m47_1984  [key=1, style=dashed, color=darkseagreen4, label=d];
m47_1982 -> m47_2023  [key=2, style=dotted];
m47_1985 -> m47_1986  [key=0, style=solid];
m47_1985 -> m47_2004  [key=1, style=dashed, color=darkseagreen4, label=json];
m47_2006 -> m47_2007  [key=0, style=solid];
m47_2006 -> m47_222  [key=2, style=dotted];
m47_2009 -> m47_2010  [key=0, style=solid];
m47_2009 -> m47_222  [key=2, style=dotted];
m47_2012 -> m47_2013  [key=0, style=solid];
m47_2012 -> m47_222  [key=2, style=dotted];
m47_2015 -> m47_2016  [key=0, style=solid];
m47_2015 -> m47_222  [key=2, style=dotted];
m47_2018 -> m47_2019  [key=0, style=solid];
m47_2018 -> m47_222  [key=2, style=dotted];
m47_1981 -> m47_1982  [key=0, style=solid];
m47_2022 -> m47_1980  [key=0, style=bold, color=blue];
m47_1427 -> m47_1428  [key=0, style=solid];
m47_1431 -> m47_60  [key=2, style=dotted];
m47_1431 -> m47_1432  [key=0, style=solid];
m47_1433 -> m47_60  [key=2, style=dotted];
m47_1433 -> m47_1434  [key=0, style=solid];
m47_1430 -> m47_58  [key=2, style=dotted];
m47_1430 -> m47_59  [key=2, style=dotted];
m47_1430 -> m47_1431  [key=0, style=solid];
m47_1432 -> m47_58  [key=2, style=dotted];
m47_1432 -> m47_59  [key=2, style=dotted];
m47_1432 -> m47_1433  [key=0, style=solid];
m47_1429 -> m47_56  [key=2, style=dotted];
m47_1429 -> m47_57  [key=2, style=dotted];
m47_1429 -> m47_1431  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1429 -> m47_1433  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1429 -> m47_1430  [key=0, style=solid];
m47_1429 -> m47_1432  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1429 -> m47_1434  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1429 -> m47_1437  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1434 -> m47_1435  [key=0, style=solid];
m47_1434 -> m47_150  [key=2, style=dotted];
m47_1434 -> m47_1436  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_1428 -> m47_1429  [key=0, style=solid];
m47_1435 -> m47_1427  [key=0, style=bold, color=blue];
m47_2233 -> m47_2234  [key=0, style=solid];
m47_2237 -> m47_60  [key=2, style=dotted];
m47_2237 -> m47_2238  [key=0, style=solid];
m47_2238 -> m47_60  [key=2, style=dotted];
m47_2238 -> m47_2239  [key=0, style=solid];
m47_2240 -> m47_60  [key=2, style=dotted];
m47_2240 -> m47_2241  [key=0, style=solid];
m47_2241 -> m47_60  [key=2, style=dotted];
m47_2241 -> m47_2242  [key=0, style=solid];
m47_2243 -> m47_60  [key=2, style=dotted];
m47_2243 -> m47_2244  [key=0, style=solid];
m47_2244 -> m47_60  [key=2, style=dotted];
m47_2244 -> m47_2245  [key=0, style=solid];
m47_2246 -> m47_60  [key=2, style=dotted];
m47_2246 -> m47_2247  [key=0, style=solid];
m47_2247 -> m47_60  [key=2, style=dotted];
m47_2247 -> m47_2248  [key=0, style=solid];
m47_2252 -> m47_60  [key=2, style=dotted];
m47_2252 -> m47_2253  [key=0, style=solid];
m47_2253 -> m47_60  [key=2, style=dotted];
m47_2253 -> m47_2254  [key=0, style=solid];
m47_2255 -> m47_60  [key=2, style=dotted];
m47_2255 -> m47_2256  [key=0, style=solid];
m47_2256 -> m47_60  [key=2, style=dotted];
m47_2256 -> m47_2257  [key=0, style=solid];
m47_2258 -> m47_60  [key=2, style=dotted];
m47_2258 -> m47_2259  [key=0, style=solid];
m47_2259 -> m47_60  [key=2, style=dotted];
m47_2259 -> m47_2260  [key=0, style=solid];
m47_2261 -> m47_60  [key=2, style=dotted];
m47_2261 -> m47_2262  [key=0, style=solid];
m47_2262 -> m47_60  [key=2, style=dotted];
m47_2262 -> m47_2263  [key=0, style=solid];
m47_2236 -> m47_58  [key=2, style=dotted];
m47_2236 -> m47_59  [key=2, style=dotted];
m47_2236 -> m47_2237  [key=0, style=solid];
m47_2239 -> m47_58  [key=2, style=dotted];
m47_2239 -> m47_59  [key=2, style=dotted];
m47_2239 -> m47_2240  [key=0, style=solid];
m47_2242 -> m47_58  [key=2, style=dotted];
m47_2242 -> m47_59  [key=2, style=dotted];
m47_2242 -> m47_2243  [key=0, style=solid];
m47_2245 -> m47_58  [key=2, style=dotted];
m47_2245 -> m47_59  [key=2, style=dotted];
m47_2245 -> m47_2246  [key=0, style=solid];
m47_2248 -> m47_58  [key=2, style=dotted];
m47_2248 -> m47_2249  [key=0, style=solid];
m47_2248 -> m47_136  [key=2, style=dotted];
m47_2251 -> m47_58  [key=2, style=dotted];
m47_2251 -> m47_59  [key=2, style=dotted];
m47_2251 -> m47_2252  [key=0, style=solid];
m47_2254 -> m47_58  [key=2, style=dotted];
m47_2254 -> m47_59  [key=2, style=dotted];
m47_2254 -> m47_2255  [key=0, style=solid];
m47_2257 -> m47_58  [key=2, style=dotted];
m47_2257 -> m47_59  [key=2, style=dotted];
m47_2257 -> m47_2258  [key=0, style=solid];
m47_2260 -> m47_58  [key=2, style=dotted];
m47_2260 -> m47_59  [key=2, style=dotted];
m47_2260 -> m47_2261  [key=0, style=solid];
m47_2263 -> m47_58  [key=2, style=dotted];
m47_2263 -> m47_2264  [key=0, style=solid];
m47_2263 -> m47_136  [key=2, style=dotted];
m47_2235 -> m47_56  [key=2, style=dotted];
m47_2235 -> m47_57  [key=2, style=dotted];
m47_2235 -> m47_2237  [key=1, style=dashed, color=darkseagreen4, label=r];
m47_2235 -> m47_2238  [key=1, style=dashed, color=darkseagreen4, label=r];
m47_2235 -> m47_2240  [key=1, style=dashed, color=darkseagreen4, label=r];
m47_2235 -> m47_2241  [key=1, style=dashed, color=darkseagreen4, label=r];
m47_2235 -> m47_2243  [key=1, style=dashed, color=darkseagreen4, label=r];
m47_2235 -> m47_2244  [key=1, style=dashed, color=darkseagreen4, label=r];
m47_2235 -> m47_2246  [key=1, style=dashed, color=darkseagreen4, label=r];
m47_2235 -> m47_2247  [key=1, style=dashed, color=darkseagreen4, label=r];
m47_2235 -> m47_2236  [key=0, style=solid];
m47_2235 -> m47_2239  [key=1, style=dashed, color=darkseagreen4, label=r];
m47_2235 -> m47_2242  [key=1, style=dashed, color=darkseagreen4, label=r];
m47_2235 -> m47_2245  [key=1, style=dashed, color=darkseagreen4, label=r];
m47_2235 -> m47_2248  [key=1, style=dashed, color=darkseagreen4, label=r];
m47_2250 -> m47_56  [key=2, style=dotted];
m47_2250 -> m47_57  [key=2, style=dotted];
m47_2250 -> m47_2252  [key=1, style=dashed, color=darkseagreen4, label=r];
m47_2250 -> m47_2253  [key=1, style=dashed, color=darkseagreen4, label=r];
m47_2250 -> m47_2255  [key=1, style=dashed, color=darkseagreen4, label=r];
m47_2250 -> m47_2256  [key=1, style=dashed, color=darkseagreen4, label=r];
m47_2250 -> m47_2258  [key=1, style=dashed, color=darkseagreen4, label=r];
m47_2250 -> m47_2259  [key=1, style=dashed, color=darkseagreen4, label=r];
m47_2250 -> m47_2261  [key=1, style=dashed, color=darkseagreen4, label=r];
m47_2250 -> m47_2262  [key=1, style=dashed, color=darkseagreen4, label=r];
m47_2250 -> m47_2251  [key=0, style=solid];
m47_2250 -> m47_2254  [key=1, style=dashed, color=darkseagreen4, label=r];
m47_2250 -> m47_2257  [key=1, style=dashed, color=darkseagreen4, label=r];
m47_2250 -> m47_2260  [key=1, style=dashed, color=darkseagreen4, label=r];
m47_2250 -> m47_2263  [key=1, style=dashed, color=darkseagreen4, label=r];
m47_2249 -> m47_2250  [key=0, style=solid];
m47_2234 -> m47_2235  [key=0, style=solid];
m47_2264 -> m47_2233  [key=0, style=bold, color=blue];
m47_84 -> m47_85  [key=0, style=solid];
m47_88 -> m47_60  [key=2, style=dotted];
m47_88 -> m47_89  [key=0, style=solid];
m47_92 -> m47_60  [key=2, style=dotted];
m47_92 -> m47_93  [key=0, style=solid];
m47_85 -> m47_56  [key=2, style=dotted];
m47_85 -> m47_57  [key=2, style=dotted];
m47_85 -> m47_86  [key=0, style=solid];
m47_89 -> m47_56  [key=2, style=dotted];
m47_89 -> m47_57  [key=2, style=dotted];
m47_89 -> m47_90  [key=0, style=solid];
m47_86 -> m47_88  [key=1, style=dashed, color=darkseagreen4, label=data];
m47_86 -> m47_87  [key=0, style=solid];
m47_86 -> m47_94  [key=2, style=dotted];
m47_87 -> m47_88  [key=0, style=solid];
m47_87 -> m47_95  [key=2, style=dotted];
m47_90 -> m47_92  [key=1, style=dashed, color=darkseagreen4, label=data];
m47_90 -> m47_91  [key=0, style=solid];
m47_90 -> m47_94  [key=2, style=dotted];
m47_91 -> m47_92  [key=0, style=solid];
m47_91 -> m47_96  [key=2, style=dotted];
m47_91 -> m47_97  [key=2, style=dotted];
m47_93 -> m47_84  [key=0, style=bold, color=blue];
m47_1605 -> m47_1606  [key=0, style=solid];
m47_1613 -> m47_60  [key=2, style=dotted];
m47_1613 -> m47_1614  [key=0, style=solid];
m47_1613 -> m47_1615  [key=2, style=dotted];
m47_1610 -> m47_58  [key=2, style=dotted];
m47_1610 -> m47_1611  [key=0, style=solid];
m47_1612 -> m47_58  [key=2, style=dotted];
m47_1612 -> m47_59  [key=2, style=dotted];
m47_1612 -> m47_1613  [key=0, style=solid];
m47_1607 -> m47_56  [key=2, style=dotted];
m47_1607 -> m47_57  [key=2, style=dotted];
m47_1607 -> m47_1613  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1607 -> m47_1610  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1607 -> m47_1612  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1607 -> m47_1608  [key=0, style=solid];
m47_1609 -> m47_1610  [key=0, style=solid];
m47_1609 -> m47_1612  [key=0, style=solid];
m47_1611 -> m47_1609  [key=0, style=solid];
m47_1611 -> m47_1611  [key=1, style=dashed, color=darkseagreen4, label=i];
m47_1606 -> m47_1607  [key=0, style=solid];
m47_1608 -> m47_1609  [key=0, style=solid];
m47_1608 -> m47_1611  [key=1, style=dashed, color=darkseagreen4, label=i];
m47_1614 -> m47_1605  [key=0, style=bold, color=blue];
m47_668 -> m47_669  [key=0, style=solid];
m47_673 -> m47_60  [key=2, style=dotted];
m47_673 -> m47_674  [key=0, style=solid];
m47_672 -> m47_60  [key=2, style=dotted];
m47_672 -> m47_673  [key=0, style=solid];
m47_671 -> m47_58  [key=2, style=dotted];
m47_671 -> m47_672  [key=0, style=solid];
m47_670 -> m47_56  [key=2, style=dotted];
m47_670 -> m47_57  [key=2, style=dotted];
m47_670 -> m47_673  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_670 -> m47_672  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_670 -> m47_671  [key=0, style=solid];
m47_670 -> m47_663  [key=2, style=dotted];
m47_670 -> m47_677  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_669 -> m47_673  [key=1, style=dashed, color=darkseagreen4, label=i];
m47_669 -> m47_670  [key=0, style=solid];
m47_669 -> m47_676  [key=1, style=dashed, color=darkseagreen4, label=i];
m47_674 -> m47_675  [key=0, style=solid];
m47_674 -> m47_676  [key=1, style=dashed, color=darkseagreen4, label=j];
m47_674 -> m47_678  [key=1, style=dashed, color=darkseagreen4, label=j];
m47_677 -> m47_678  [key=0, style=solid];
m47_677 -> m47_150  [key=2, style=dotted];
m47_677 -> m47_680  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_676 -> m47_681  [key=1, style=dashed, color=darkseagreen4, label=total];
m47_676 -> m47_677  [key=0, style=solid];
m47_675 -> m47_676  [key=0, style=solid];
m47_675 -> m47_679  [key=0, style=solid];
m47_678 -> m47_675  [key=0, style=solid];
m47_678 -> m47_678  [key=1, style=dashed, color=darkseagreen4, label=j];
m47_679 -> m47_668  [key=0, style=bold, color=blue];
m47_1235 -> m47_1236  [key=0, style=solid];
m47_1239 -> m47_60  [key=2, style=dotted];
m47_1239 -> m47_1240  [key=0, style=solid];
m47_1241 -> m47_60  [key=2, style=dotted];
m47_1241 -> m47_1242  [key=0, style=solid];
m47_1242 -> m47_60  [key=2, style=dotted];
m47_1242 -> m47_1243  [key=0, style=solid];
m47_1244 -> m47_60  [key=2, style=dotted];
m47_1244 -> m47_1245  [key=0, style=solid];
m47_1245 -> m47_60  [key=2, style=dotted];
m47_1245 -> m47_1246  [key=0, style=solid];
m47_1247 -> m47_60  [key=2, style=dotted];
m47_1247 -> m47_1248  [key=0, style=solid];
m47_1248 -> m47_60  [key=2, style=dotted];
m47_1248 -> m47_1249  [key=0, style=solid];
m47_1250 -> m47_60  [key=2, style=dotted];
m47_1250 -> m47_1251  [key=0, style=solid];
m47_1238 -> m47_58  [key=2, style=dotted];
m47_1238 -> m47_59  [key=2, style=dotted];
m47_1238 -> m47_1239  [key=0, style=solid];
m47_1240 -> m47_58  [key=2, style=dotted];
m47_1240 -> m47_59  [key=2, style=dotted];
m47_1240 -> m47_1241  [key=0, style=solid];
m47_1243 -> m47_58  [key=2, style=dotted];
m47_1243 -> m47_59  [key=2, style=dotted];
m47_1243 -> m47_1244  [key=0, style=solid];
m47_1246 -> m47_58  [key=2, style=dotted];
m47_1246 -> m47_59  [key=2, style=dotted];
m47_1246 -> m47_1247  [key=0, style=solid];
m47_1249 -> m47_58  [key=2, style=dotted];
m47_1249 -> m47_59  [key=2, style=dotted];
m47_1249 -> m47_1250  [key=0, style=solid];
m47_1251 -> m47_58  [key=2, style=dotted];
m47_1251 -> m47_1252  [key=0, style=solid];
m47_1251 -> m47_136  [key=2, style=dotted];
m47_1237 -> m47_56  [key=2, style=dotted];
m47_1237 -> m47_1239  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1237 -> m47_1241  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1237 -> m47_1242  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1237 -> m47_1244  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1237 -> m47_1245  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1237 -> m47_1247  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1237 -> m47_1248  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1237 -> m47_1250  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1237 -> m47_1238  [key=0, style=solid];
m47_1237 -> m47_1240  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1237 -> m47_1243  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1237 -> m47_1246  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1237 -> m47_1249  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1237 -> m47_1251  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1236 -> m47_57  [key=2, style=dotted];
m47_1236 -> m47_1237  [key=0, style=solid];
m47_1252 -> m47_1235  [key=0, style=bold, color=blue];
m47_351 -> m47_352  [key=0, style=solid, color=green];
m47_352 -> m47_353  [key=0, style=solid, color=green];
m47_353 -> m47_354  [key=0, style=solid];
m47_353 -> m47_56  [key=2, style=dotted];
m47_353 -> m47_57  [key=2, style=dotted];
m47_354 -> m47_355  [key=0, style=solid];
m47_354 -> m47_354  [key=0, style=solid];
m47_354 -> m47_356  [key=2, style=dotted];
m47_355 -> m47_351  [key=0, style=bold, color=blue];
m47_207 -> m47_208  [key=0, style=solid];
m47_209 -> m47_56  [key=2, style=dotted];
m47_209 -> m47_57  [key=2, style=dotted];
m47_209 -> m47_217  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_209 -> m47_210  [key=0, style=solid];
m47_211 -> m47_56  [key=2, style=dotted];
m47_211 -> m47_57  [key=2, style=dotted];
m47_211 -> m47_212  [key=0, style=solid];
m47_211 -> m47_220  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_213 -> m47_56  [key=2, style=dotted];
m47_213 -> m47_57  [key=2, style=dotted];
m47_213 -> m47_214  [key=0, style=solid];
m47_213 -> m47_224  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_208 -> m47_209  [key=0, style=solid];
m47_208 -> m47_211  [key=1, style=dashed, color=darkseagreen4, label=json];
m47_208 -> m47_213  [key=1, style=dashed, color=darkseagreen4, label=json];
m47_210 -> m47_211  [key=0, style=solid];
m47_210 -> m47_216  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_210 -> m47_150  [key=2, style=dotted];
m47_212 -> m47_213  [key=0, style=solid];
m47_212 -> m47_150  [key=2, style=dotted];
m47_212 -> m47_219  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_214 -> m47_215  [key=0, style=solid];
m47_214 -> m47_150  [key=2, style=dotted];
m47_214 -> m47_223  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_215 -> m47_207  [key=0, style=bold, color=blue];
m47_299 -> m47_300  [key=0, style=solid];
m47_305 -> m47_60  [key=2, style=dotted];
m47_305 -> m47_306  [key=0, style=solid];
m47_307 -> m47_60  [key=2, style=dotted];
m47_307 -> m47_308  [key=0, style=solid];
m47_309 -> m47_60  [key=2, style=dotted];
m47_309 -> m47_310  [key=0, style=solid];
m47_302 -> m47_58  [key=2, style=dotted];
m47_302 -> m47_59  [key=2, style=dotted];
m47_302 -> m47_303  [key=0, style=solid];
m47_303 -> m47_58  [key=2, style=dotted];
m47_303 -> m47_59  [key=2, style=dotted];
m47_303 -> m47_304  [key=0, style=solid];
m47_304 -> m47_58  [key=2, style=dotted];
m47_304 -> m47_59  [key=2, style=dotted];
m47_304 -> m47_305  [key=0, style=solid];
m47_301 -> m47_56  [key=2, style=dotted];
m47_301 -> m47_57  [key=2, style=dotted];
m47_301 -> m47_305  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_301 -> m47_302  [key=0, style=solid];
m47_301 -> m47_303  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_301 -> m47_304  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_301 -> m47_306  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_306 -> m47_307  [key=0, style=solid];
m47_306 -> m47_311  [key=2, style=dotted];
m47_306 -> m47_308  [key=1, style=dashed, color=darkseagreen4, label=s];
m47_308 -> m47_309  [key=0, style=solid];
m47_308 -> m47_312  [key=2, style=dotted];
m47_300 -> m47_301  [key=0, style=solid];
m47_310 -> m47_299  [key=0, style=bold, color=blue];
m47_1737 -> m47_1738  [key=0, style=solid];
m47_1741 -> m47_60  [key=2, style=dotted];
m47_1741 -> m47_1742  [key=0, style=solid];
m47_1743 -> m47_60  [key=2, style=dotted];
m47_1743 -> m47_1744  [key=0, style=solid];
m47_1740 -> m47_58  [key=2, style=dotted];
m47_1740 -> m47_59  [key=2, style=dotted];
m47_1740 -> m47_1741  [key=0, style=solid];
m47_1742 -> m47_58  [key=2, style=dotted];
m47_1742 -> m47_59  [key=2, style=dotted];
m47_1742 -> m47_1743  [key=0, style=solid];
m47_1739 -> m47_56  [key=2, style=dotted];
m47_1739 -> m47_57  [key=2, style=dotted];
m47_1739 -> m47_1741  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1739 -> m47_1743  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1739 -> m47_1740  [key=0, style=solid];
m47_1739 -> m47_1742  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1738 -> m47_1739  [key=0, style=solid];
m47_1744 -> m47_1737  [key=0, style=bold, color=blue];
m47_1590 -> m47_1591  [key=0, style=solid];
m47_1595 -> m47_60  [key=2, style=dotted];
m47_1595 -> m47_1596  [key=0, style=solid];
m47_1597 -> m47_60  [key=2, style=dotted];
m47_1597 -> m47_1598  [key=0, style=solid];
m47_1599 -> m47_60  [key=2, style=dotted];
m47_1599 -> m47_1600  [key=0, style=solid];
m47_1600 -> m47_60  [key=2, style=dotted];
m47_1600 -> m47_1601  [key=0, style=solid];
m47_1603 -> m47_60  [key=2, style=dotted];
m47_1603 -> m47_1604  [key=0, style=solid];
m47_1601 -> m47_60  [key=2, style=dotted];
m47_1601 -> m47_1602  [key=0, style=solid];
m47_1594 -> m47_58  [key=2, style=dotted];
m47_1594 -> m47_59  [key=2, style=dotted];
m47_1594 -> m47_1595  [key=0, style=solid];
m47_1596 -> m47_58  [key=2, style=dotted];
m47_1596 -> m47_59  [key=2, style=dotted];
m47_1596 -> m47_1597  [key=0, style=solid];
m47_1602 -> m47_58  [key=2, style=dotted];
m47_1602 -> m47_59  [key=2, style=dotted];
m47_1602 -> m47_1603  [key=0, style=solid];
m47_1592 -> m47_56  [key=2, style=dotted];
m47_1592 -> m47_57  [key=2, style=dotted];
m47_1592 -> m47_1595  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1592 -> m47_1597  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1592 -> m47_1599  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1592 -> m47_1600  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1592 -> m47_1603  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1592 -> m47_1594  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1592 -> m47_1596  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1592 -> m47_1602  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1592 -> m47_1593  [key=0, style=solid];
m47_1592 -> m47_1598  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1598 -> m47_1599  [key=0, style=solid];
m47_1598 -> m47_1601  [key=1, style=dashed, color=darkseagreen4, label=d];
m47_1598 -> m47_222  [key=2, style=dotted];
m47_1593 -> m47_1594  [key=0, style=solid];
m47_1593 -> m47_1500  [key=2, style=dotted];
m47_1591 -> m47_1592  [key=0, style=solid];
m47_1604 -> m47_1590  [key=0, style=bold, color=blue];
m47_767 -> m47_768  [key=0, style=solid];
m47_770 -> m47_60  [key=2, style=dotted];
m47_770 -> m47_771  [key=0, style=solid];
m47_769 -> m47_59  [key=2, style=dotted];
m47_769 -> m47_770  [key=0, style=solid];
m47_769 -> m47_356  [key=2, style=dotted];
m47_768 -> m47_56  [key=2, style=dotted];
m47_768 -> m47_57  [key=2, style=dotted];
m47_768 -> m47_770  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_768 -> m47_769  [key=0, style=solid];
m47_771 -> m47_767  [key=0, style=bold, color=blue];
m47_1102 -> m47_1103  [key=0, style=solid];
m47_1107 -> m47_60  [key=2, style=dotted];
m47_1107 -> m47_1108  [key=0, style=solid];
m47_1109 -> m47_60  [key=2, style=dotted];
m47_1109 -> m47_1110  [key=0, style=solid];
m47_1110 -> m47_60  [key=2, style=dotted];
m47_1110 -> m47_1111  [key=0, style=solid];
m47_1112 -> m47_60  [key=2, style=dotted];
m47_1112 -> m47_1113  [key=0, style=solid];
m47_1113 -> m47_60  [key=2, style=dotted];
m47_1113 -> m47_1114  [key=0, style=solid];
m47_1115 -> m47_60  [key=2, style=dotted];
m47_1115 -> m47_1116  [key=0, style=solid];
m47_1116 -> m47_60  [key=2, style=dotted];
m47_1116 -> m47_1117  [key=0, style=solid];
m47_1118 -> m47_60  [key=2, style=dotted];
m47_1118 -> m47_1119  [key=0, style=solid];
m47_1105 -> m47_56  [key=2, style=dotted];
m47_1105 -> m47_1107  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1105 -> m47_1109  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1105 -> m47_1110  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1105 -> m47_1112  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1105 -> m47_1113  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1105 -> m47_1115  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1105 -> m47_1116  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1105 -> m47_1118  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1105 -> m47_1106  [key=0, style=solid];
m47_1105 -> m47_1108  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1105 -> m47_1111  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1105 -> m47_1114  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1105 -> m47_1117  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1104 -> m47_57  [key=2, style=dotted];
m47_1104 -> m47_1105  [key=0, style=solid];
m47_1106 -> m47_1107  [key=0, style=solid];
m47_1106 -> m47_356  [key=2, style=dotted];
m47_1108 -> m47_1109  [key=0, style=solid];
m47_1108 -> m47_356  [key=2, style=dotted];
m47_1111 -> m47_1112  [key=0, style=solid];
m47_1111 -> m47_356  [key=2, style=dotted];
m47_1114 -> m47_1115  [key=0, style=solid];
m47_1114 -> m47_356  [key=2, style=dotted];
m47_1117 -> m47_1118  [key=0, style=solid];
m47_1117 -> m47_356  [key=2, style=dotted];
m47_1103 -> m47_1104  [key=0, style=solid];
m47_1119 -> m47_1102  [key=0, style=bold, color=blue];
m47_1800 -> m47_1801  [key=0, style=solid];
m47_1804 -> m47_60  [key=2, style=dotted];
m47_1804 -> m47_1805  [key=0, style=solid];
m47_1806 -> m47_60  [key=2, style=dotted];
m47_1806 -> m47_1807  [key=0, style=solid];
m47_1808 -> m47_60  [key=2, style=dotted];
m47_1808 -> m47_1809  [key=0, style=solid];
m47_1810 -> m47_60  [key=2, style=dotted];
m47_1810 -> m47_1811  [key=0, style=solid];
m47_1811 -> m47_60  [key=2, style=dotted];
m47_1811 -> m47_1812  [key=0, style=solid];
m47_1813 -> m47_60  [key=2, style=dotted];
m47_1813 -> m47_1814  [key=0, style=solid];
m47_1815 -> m47_60  [key=2, style=dotted];
m47_1815 -> m47_1816  [key=0, style=solid];
m47_1816 -> m47_60  [key=2, style=dotted];
m47_1816 -> m47_1817  [key=0, style=solid];
m47_1818 -> m47_60  [key=2, style=dotted];
m47_1818 -> m47_1819  [key=0, style=solid];
m47_1820 -> m47_60  [key=2, style=dotted];
m47_1820 -> m47_1821  [key=0, style=solid];
m47_1822 -> m47_60  [key=2, style=dotted];
m47_1822 -> m47_1823  [key=0, style=solid];
m47_1823 -> m47_60  [key=2, style=dotted];
m47_1823 -> m47_1824  [key=0, style=solid];
m47_1825 -> m47_60  [key=2, style=dotted];
m47_1825 -> m47_1826  [key=0, style=solid];
m47_1827 -> m47_60  [key=2, style=dotted];
m47_1827 -> m47_1828  [key=0, style=solid];
m47_1828 -> m47_60  [key=2, style=dotted];
m47_1828 -> m47_1829  [key=0, style=solid];
m47_1829 -> m47_60  [key=2, style=dotted];
m47_1829 -> m47_1830  [key=0, style=solid];
m47_1831 -> m47_60  [key=2, style=dotted];
m47_1831 -> m47_1832  [key=0, style=solid];
m47_1833 -> m47_60  [key=2, style=dotted];
m47_1833 -> m47_1834  [key=0, style=solid];
m47_1835 -> m47_60  [key=2, style=dotted];
m47_1835 -> m47_1836  [key=0, style=solid];
m47_1837 -> m47_60  [key=2, style=dotted];
m47_1837 -> m47_1838  [key=0, style=solid];
m47_1803 -> m47_58  [key=2, style=dotted];
m47_1803 -> m47_59  [key=2, style=dotted];
m47_1803 -> m47_1804  [key=0, style=solid];
m47_1805 -> m47_58  [key=2, style=dotted];
m47_1805 -> m47_59  [key=2, style=dotted];
m47_1805 -> m47_1806  [key=0, style=solid];
m47_1807 -> m47_58  [key=2, style=dotted];
m47_1807 -> m47_59  [key=2, style=dotted];
m47_1807 -> m47_1808  [key=0, style=solid];
m47_1809 -> m47_58  [key=2, style=dotted];
m47_1809 -> m47_59  [key=2, style=dotted];
m47_1809 -> m47_1810  [key=0, style=solid];
m47_1812 -> m47_58  [key=2, style=dotted];
m47_1812 -> m47_59  [key=2, style=dotted];
m47_1812 -> m47_1813  [key=0, style=solid];
m47_1814 -> m47_58  [key=2, style=dotted];
m47_1814 -> m47_59  [key=2, style=dotted];
m47_1814 -> m47_1815  [key=0, style=solid];
m47_1817 -> m47_58  [key=2, style=dotted];
m47_1817 -> m47_59  [key=2, style=dotted];
m47_1817 -> m47_1818  [key=0, style=solid];
m47_1819 -> m47_58  [key=2, style=dotted];
m47_1819 -> m47_59  [key=2, style=dotted];
m47_1819 -> m47_1820  [key=0, style=solid];
m47_1821 -> m47_58  [key=2, style=dotted];
m47_1821 -> m47_59  [key=2, style=dotted];
m47_1821 -> m47_1822  [key=0, style=solid];
m47_1824 -> m47_58  [key=2, style=dotted];
m47_1824 -> m47_59  [key=2, style=dotted];
m47_1824 -> m47_1825  [key=0, style=solid];
m47_1826 -> m47_58  [key=2, style=dotted];
m47_1826 -> m47_59  [key=2, style=dotted];
m47_1826 -> m47_1827  [key=0, style=solid];
m47_1830 -> m47_58  [key=2, style=dotted];
m47_1830 -> m47_59  [key=2, style=dotted];
m47_1830 -> m47_1831  [key=0, style=solid];
m47_1832 -> m47_58  [key=2, style=dotted];
m47_1832 -> m47_59  [key=2, style=dotted];
m47_1832 -> m47_1833  [key=0, style=solid];
m47_1834 -> m47_58  [key=2, style=dotted];
m47_1834 -> m47_59  [key=2, style=dotted];
m47_1834 -> m47_1835  [key=0, style=solid];
m47_1836 -> m47_58  [key=2, style=dotted];
m47_1836 -> m47_59  [key=2, style=dotted];
m47_1836 -> m47_1837  [key=0, style=solid];
m47_1802 -> m47_56  [key=2, style=dotted];
m47_1802 -> m47_1804  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1802 -> m47_1806  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1802 -> m47_1808  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1802 -> m47_1810  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1802 -> m47_1811  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1802 -> m47_1813  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1802 -> m47_1815  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1802 -> m47_1816  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1802 -> m47_1818  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1802 -> m47_1820  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1802 -> m47_1822  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1802 -> m47_1823  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1802 -> m47_1825  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1802 -> m47_1827  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1802 -> m47_1828  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1802 -> m47_1829  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1802 -> m47_1831  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1802 -> m47_1833  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1802 -> m47_1835  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1802 -> m47_1837  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1802 -> m47_1803  [key=0, style=solid];
m47_1802 -> m47_1805  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1802 -> m47_1807  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1802 -> m47_1809  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1802 -> m47_1812  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1802 -> m47_1814  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1802 -> m47_1817  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1802 -> m47_1819  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1802 -> m47_1821  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1802 -> m47_1824  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1802 -> m47_1826  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1802 -> m47_1830  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1802 -> m47_1832  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1802 -> m47_1834  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1802 -> m47_1836  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1802 -> m47_336  [key=2, style=dotted];
m47_1802 -> m47_374  [key=2, style=dotted];
m47_1802 -> m47_375  [key=2, style=dotted];
m47_1801 -> m47_1802  [key=0, style=solid];
m47_1838 -> m47_1800  [key=0, style=bold, color=blue];
m47_1484 -> m47_1485  [key=0, style=solid];
m47_1489 -> m47_60  [key=2, style=dotted];
m47_1489 -> m47_1490  [key=0, style=solid];
m47_1491 -> m47_60  [key=2, style=dotted];
m47_1491 -> m47_1492  [key=0, style=solid];
m47_1493 -> m47_60  [key=2, style=dotted];
m47_1493 -> m47_1494  [key=0, style=solid];
m47_1494 -> m47_60  [key=2, style=dotted];
m47_1494 -> m47_1495  [key=0, style=solid];
m47_1498 -> m47_60  [key=2, style=dotted];
m47_1498 -> m47_1499  [key=0, style=solid];
m47_1496 -> m47_60  [key=2, style=dotted];
m47_1496 -> m47_1496  [key=1, style=dashed, color=darkseagreen4, label=dt];
m47_1496 -> m47_1497  [key=0, style=solid];
m47_1496 -> m47_1483  [key=2, style=dotted];
m47_1488 -> m47_58  [key=2, style=dotted];
m47_1488 -> m47_59  [key=2, style=dotted];
m47_1488 -> m47_1489  [key=0, style=solid];
m47_1490 -> m47_58  [key=2, style=dotted];
m47_1490 -> m47_59  [key=2, style=dotted];
m47_1490 -> m47_1491  [key=0, style=solid];
m47_1497 -> m47_58  [key=2, style=dotted];
m47_1497 -> m47_59  [key=2, style=dotted];
m47_1497 -> m47_1498  [key=0, style=solid];
m47_1486 -> m47_56  [key=2, style=dotted];
m47_1486 -> m47_57  [key=2, style=dotted];
m47_1486 -> m47_1489  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1486 -> m47_1491  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1486 -> m47_1493  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1486 -> m47_1494  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1486 -> m47_1498  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1486 -> m47_1488  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1486 -> m47_1490  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1486 -> m47_1497  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1486 -> m47_1487  [key=0, style=solid];
m47_1486 -> m47_1492  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1486 -> m47_1495  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1492 -> m47_1493  [key=0, style=solid];
m47_1492 -> m47_1325  [key=2, style=dotted];
m47_1495 -> m47_1496  [key=0, style=solid];
m47_1487 -> m47_1488  [key=0, style=solid];
m47_1487 -> m47_1500  [key=2, style=dotted];
m47_1485 -> m47_1486  [key=0, style=solid];
m47_1499 -> m47_1484  [key=0, style=bold, color=blue];
m47_2035 -> m47_2036  [key=0, style=solid];
m47_2039 -> m47_60  [key=2, style=dotted];
m47_2039 -> m47_2040  [key=0, style=solid];
m47_2041 -> m47_60  [key=2, style=dotted];
m47_2041 -> m47_2042  [key=0, style=solid];
m47_2043 -> m47_60  [key=2, style=dotted];
m47_2043 -> m47_2044  [key=0, style=solid];
m47_2045 -> m47_60  [key=2, style=dotted];
m47_2045 -> m47_2046  [key=0, style=solid];
m47_2047 -> m47_60  [key=2, style=dotted];
m47_2047 -> m47_2048  [key=0, style=solid];
m47_2049 -> m47_60  [key=2, style=dotted];
m47_2049 -> m47_2050  [key=0, style=solid];
m47_2051 -> m47_60  [key=2, style=dotted];
m47_2051 -> m47_2052  [key=0, style=solid];
m47_2053 -> m47_60  [key=2, style=dotted];
m47_2053 -> m47_2054  [key=0, style=solid];
m47_2055 -> m47_60  [key=2, style=dotted];
m47_2055 -> m47_2056  [key=0, style=solid];
m47_2057 -> m47_60  [key=2, style=dotted];
m47_2057 -> m47_2058  [key=0, style=solid];
m47_2059 -> m47_60  [key=2, style=dotted];
m47_2059 -> m47_2060  [key=0, style=solid];
m47_2061 -> m47_60  [key=2, style=dotted];
m47_2061 -> m47_2062  [key=0, style=solid];
m47_2038 -> m47_58  [key=2, style=dotted];
m47_2038 -> m47_59  [key=2, style=dotted];
m47_2038 -> m47_2039  [key=0, style=solid];
m47_2042 -> m47_58  [key=2, style=dotted];
m47_2042 -> m47_59  [key=2, style=dotted];
m47_2042 -> m47_2043  [key=0, style=solid];
m47_2044 -> m47_58  [key=2, style=dotted];
m47_2044 -> m47_59  [key=2, style=dotted];
m47_2044 -> m47_2045  [key=0, style=solid];
m47_2046 -> m47_58  [key=2, style=dotted];
m47_2046 -> m47_59  [key=2, style=dotted];
m47_2046 -> m47_2047  [key=0, style=solid];
m47_2048 -> m47_58  [key=2, style=dotted];
m47_2048 -> m47_59  [key=2, style=dotted];
m47_2048 -> m47_2049  [key=0, style=solid];
m47_2050 -> m47_58  [key=2, style=dotted];
m47_2050 -> m47_59  [key=2, style=dotted];
m47_2050 -> m47_2051  [key=0, style=solid];
m47_2054 -> m47_58  [key=2, style=dotted];
m47_2054 -> m47_59  [key=2, style=dotted];
m47_2054 -> m47_2055  [key=0, style=solid];
m47_2056 -> m47_58  [key=2, style=dotted];
m47_2056 -> m47_59  [key=2, style=dotted];
m47_2056 -> m47_2057  [key=0, style=solid];
m47_2058 -> m47_58  [key=2, style=dotted];
m47_2058 -> m47_59  [key=2, style=dotted];
m47_2058 -> m47_2059  [key=0, style=solid];
m47_2060 -> m47_58  [key=2, style=dotted];
m47_2060 -> m47_59  [key=2, style=dotted];
m47_2060 -> m47_2061  [key=0, style=solid];
m47_2062 -> m47_58  [key=2, style=dotted];
m47_2062 -> m47_2063  [key=0, style=solid];
m47_2062 -> m47_136  [key=2, style=dotted];
m47_2037 -> m47_56  [key=2, style=dotted];
m47_2037 -> m47_57  [key=2, style=dotted];
m47_2037 -> m47_2039  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2037 -> m47_2041  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2037 -> m47_2043  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2037 -> m47_2045  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2037 -> m47_2047  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2037 -> m47_2049  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2037 -> m47_2051  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2037 -> m47_2053  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2037 -> m47_2055  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2037 -> m47_2057  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2037 -> m47_2059  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2037 -> m47_2061  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2037 -> m47_2038  [key=0, style=solid];
m47_2037 -> m47_2065  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2037 -> m47_2042  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2037 -> m47_2044  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2037 -> m47_2046  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2037 -> m47_2048  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2037 -> m47_2050  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2037 -> m47_2068  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2037 -> m47_2054  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2037 -> m47_2056  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2037 -> m47_2058  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2037 -> m47_2060  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2037 -> m47_2062  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2037 -> m47_2040  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2037 -> m47_2052  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2040 -> m47_2041  [key=0, style=solid];
m47_2040 -> m47_1773  [key=2, style=dotted];
m47_2040 -> m47_2064  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_2052 -> m47_2053  [key=0, style=solid];
m47_2052 -> m47_1773  [key=2, style=dotted];
m47_2052 -> m47_2067  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_2036 -> m47_2037  [key=0, style=solid];
m47_2063 -> m47_2035  [key=0, style=bold, color=blue];
m47_804 -> m47_805  [key=0, style=solid];
m47_808 -> m47_60  [key=2, style=dotted];
m47_808 -> m47_809  [key=0, style=solid];
m47_806 -> m47_59  [key=2, style=dotted];
m47_806 -> m47_807  [key=0, style=solid];
m47_806 -> m47_356  [key=2, style=dotted];
m47_805 -> m47_56  [key=2, style=dotted];
m47_805 -> m47_57  [key=2, style=dotted];
m47_805 -> m47_808  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_805 -> m47_806  [key=0, style=solid];
m47_805 -> m47_807  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_807 -> m47_808  [key=0, style=solid];
m47_807 -> m47_793  [key=2, style=dotted];
m47_807 -> m47_810  [key=2, style=dotted];
m47_809 -> m47_804  [key=0, style=bold, color=blue];
m47_564 -> m47_565  [key=0, style=solid];
m47_565 -> m47_567  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_565 -> m47_150  [key=2, style=dotted];
m47_565 -> m47_566  [key=0, style=solid];
m47_566 -> m47_564  [key=0, style=bold, color=blue];
m47_384 -> m47_385  [key=0, style=solid];
m47_388 -> m47_60  [key=2, style=dotted];
m47_388 -> m47_389  [key=0, style=solid];
m47_390 -> m47_60  [key=2, style=dotted];
m47_390 -> m47_391  [key=0, style=solid];
m47_392 -> m47_60  [key=2, style=dotted];
m47_392 -> m47_393  [key=0, style=solid];
m47_394 -> m47_60  [key=2, style=dotted];
m47_394 -> m47_395  [key=0, style=solid];
m47_396 -> m47_60  [key=2, style=dotted];
m47_396 -> m47_397  [key=0, style=solid];
m47_387 -> m47_58  [key=2, style=dotted];
m47_387 -> m47_388  [key=0, style=solid];
m47_389 -> m47_58  [key=2, style=dotted];
m47_389 -> m47_390  [key=0, style=solid];
m47_391 -> m47_58  [key=2, style=dotted];
m47_391 -> m47_392  [key=0, style=solid];
m47_393 -> m47_58  [key=2, style=dotted];
m47_393 -> m47_394  [key=0, style=solid];
m47_395 -> m47_58  [key=2, style=dotted];
m47_395 -> m47_396  [key=0, style=solid];
m47_386 -> m47_56  [key=2, style=dotted];
m47_386 -> m47_57  [key=2, style=dotted];
m47_386 -> m47_388  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_386 -> m47_390  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_386 -> m47_392  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_386 -> m47_394  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_386 -> m47_396  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_386 -> m47_387  [key=0, style=solid];
m47_386 -> m47_389  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_386 -> m47_391  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_386 -> m47_393  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_386 -> m47_395  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_386 -> m47_400  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_386 -> m47_397  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_397 -> m47_398  [key=0, style=solid];
m47_397 -> m47_150  [key=2, style=dotted];
m47_397 -> m47_399  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_385 -> m47_386  [key=0, style=solid];
m47_398 -> m47_384  [key=0, style=bold, color=blue];
m47_1706 -> m47_1707  [key=0, style=solid];
m47_1709 -> m47_58  [key=2, style=dotted];
m47_1709 -> m47_59  [key=2, style=dotted];
m47_1709 -> m47_1710  [key=0, style=solid];
m47_1710 -> m47_58  [key=2, style=dotted];
m47_1710 -> m47_59  [key=2, style=dotted];
m47_1710 -> m47_1711  [key=0, style=solid];
m47_1711 -> m47_58  [key=2, style=dotted];
m47_1711 -> m47_1712  [key=0, style=solid];
m47_1711 -> m47_136  [key=2, style=dotted];
m47_1708 -> m47_56  [key=2, style=dotted];
m47_1708 -> m47_57  [key=2, style=dotted];
m47_1708 -> m47_1709  [key=0, style=solid];
m47_1708 -> m47_1710  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1708 -> m47_1711  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1707 -> m47_1708  [key=0, style=solid];
m47_1712 -> m47_1706  [key=0, style=bold, color=blue];
m47_1253 -> m47_1254  [key=0, style=solid];
m47_1257 -> m47_60  [key=2, style=dotted];
m47_1257 -> m47_1258  [key=0, style=solid];
m47_1259 -> m47_60  [key=2, style=dotted];
m47_1259 -> m47_1260  [key=0, style=solid];
m47_1260 -> m47_60  [key=2, style=dotted];
m47_1260 -> m47_1261  [key=0, style=solid];
m47_1261 -> m47_60  [key=2, style=dotted];
m47_1261 -> m47_1262  [key=0, style=solid];
m47_1263 -> m47_60  [key=2, style=dotted];
m47_1263 -> m47_1264  [key=0, style=solid];
m47_1264 -> m47_60  [key=2, style=dotted];
m47_1264 -> m47_1265  [key=0, style=solid];
m47_1265 -> m47_60  [key=2, style=dotted];
m47_1265 -> m47_1266  [key=0, style=solid];
m47_1267 -> m47_60  [key=2, style=dotted];
m47_1267 -> m47_1268  [key=0, style=solid];
m47_1268 -> m47_60  [key=2, style=dotted];
m47_1268 -> m47_1269  [key=0, style=solid];
m47_1269 -> m47_60  [key=2, style=dotted];
m47_1269 -> m47_1270  [key=0, style=solid];
m47_1271 -> m47_60  [key=2, style=dotted];
m47_1271 -> m47_1272  [key=0, style=solid];
m47_1256 -> m47_58  [key=2, style=dotted];
m47_1256 -> m47_59  [key=2, style=dotted];
m47_1256 -> m47_1257  [key=0, style=solid];
m47_1258 -> m47_58  [key=2, style=dotted];
m47_1258 -> m47_1259  [key=0, style=solid];
m47_1262 -> m47_58  [key=2, style=dotted];
m47_1262 -> m47_1263  [key=0, style=solid];
m47_1266 -> m47_58  [key=2, style=dotted];
m47_1266 -> m47_1267  [key=0, style=solid];
m47_1270 -> m47_58  [key=2, style=dotted];
m47_1270 -> m47_59  [key=2, style=dotted];
m47_1270 -> m47_1271  [key=0, style=solid];
m47_1272 -> m47_58  [key=2, style=dotted];
m47_1272 -> m47_1273  [key=0, style=solid];
m47_1272 -> m47_136  [key=2, style=dotted];
m47_1255 -> m47_56  [key=2, style=dotted];
m47_1255 -> m47_1257  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1255 -> m47_1259  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1255 -> m47_1260  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1255 -> m47_1261  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1255 -> m47_1263  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1255 -> m47_1264  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1255 -> m47_1265  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1255 -> m47_1267  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1255 -> m47_1268  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1255 -> m47_1269  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1255 -> m47_1271  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1255 -> m47_1256  [key=0, style=solid];
m47_1255 -> m47_1258  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1255 -> m47_1262  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1255 -> m47_1266  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1255 -> m47_1270  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1255 -> m47_1272  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1254 -> m47_57  [key=2, style=dotted];
m47_1254 -> m47_1255  [key=0, style=solid];
m47_1273 -> m47_1253  [key=0, style=bold, color=blue];
m47_376 -> m47_377  [key=0, style=solid];
m47_378 -> m47_56  [key=2, style=dotted];
m47_378 -> m47_57  [key=2, style=dotted];
m47_378 -> m47_382  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_378 -> m47_379  [key=0, style=solid];
m47_377 -> m47_378  [key=0, style=solid];
m47_379 -> m47_381  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_379 -> m47_380  [key=0, style=solid];
m47_379 -> m47_150  [key=2, style=dotted];
m47_380 -> m47_376  [key=0, style=bold, color=blue];
m47_1274 -> m47_1275  [key=0, style=solid];
m47_1278 -> m47_60  [key=2, style=dotted];
m47_1278 -> m47_1279  [key=0, style=solid];
m47_1280 -> m47_60  [key=2, style=dotted];
m47_1280 -> m47_1281  [key=0, style=solid];
m47_1281 -> m47_60  [key=2, style=dotted];
m47_1281 -> m47_1282  [key=0, style=solid];
m47_1282 -> m47_60  [key=2, style=dotted];
m47_1282 -> m47_1283  [key=0, style=solid];
m47_1284 -> m47_60  [key=2, style=dotted];
m47_1284 -> m47_1285  [key=0, style=solid];
m47_1285 -> m47_60  [key=2, style=dotted];
m47_1285 -> m47_1286  [key=0, style=solid];
m47_1286 -> m47_60  [key=2, style=dotted];
m47_1286 -> m47_1287  [key=0, style=solid];
m47_1288 -> m47_60  [key=2, style=dotted];
m47_1288 -> m47_1289  [key=0, style=solid];
m47_1289 -> m47_60  [key=2, style=dotted];
m47_1289 -> m47_1290  [key=0, style=solid];
m47_1290 -> m47_60  [key=2, style=dotted];
m47_1290 -> m47_1291  [key=0, style=solid];
m47_1292 -> m47_60  [key=2, style=dotted];
m47_1292 -> m47_1293  [key=0, style=solid];
m47_1277 -> m47_58  [key=2, style=dotted];
m47_1277 -> m47_59  [key=2, style=dotted];
m47_1277 -> m47_1278  [key=0, style=solid];
m47_1291 -> m47_58  [key=2, style=dotted];
m47_1291 -> m47_59  [key=2, style=dotted];
m47_1291 -> m47_1292  [key=0, style=solid];
m47_1293 -> m47_58  [key=2, style=dotted];
m47_1293 -> m47_1294  [key=0, style=solid];
m47_1293 -> m47_136  [key=2, style=dotted];
m47_1276 -> m47_56  [key=2, style=dotted];
m47_1276 -> m47_1278  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1276 -> m47_1280  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1276 -> m47_1281  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1276 -> m47_1282  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1276 -> m47_1284  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1276 -> m47_1285  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1276 -> m47_1286  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1276 -> m47_1288  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1276 -> m47_1289  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1276 -> m47_1290  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1276 -> m47_1292  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1276 -> m47_1277  [key=0, style=solid];
m47_1276 -> m47_1291  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1276 -> m47_1293  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1276 -> m47_1279  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1276 -> m47_1283  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1276 -> m47_1287  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1275 -> m47_57  [key=2, style=dotted];
m47_1275 -> m47_1276  [key=0, style=solid];
m47_1279 -> m47_1280  [key=0, style=solid];
m47_1279 -> m47_154  [key=2, style=dotted];
m47_1283 -> m47_1284  [key=0, style=solid];
m47_1283 -> m47_154  [key=2, style=dotted];
m47_1287 -> m47_1288  [key=0, style=solid];
m47_1287 -> m47_154  [key=2, style=dotted];
m47_1294 -> m47_1274  [key=0, style=bold, color=blue];
m47_415 -> m47_416  [key=0, style=solid];
m47_419 -> m47_60  [key=2, style=dotted];
m47_419 -> m47_420  [key=0, style=solid];
m47_420 -> m47_60  [key=2, style=dotted];
m47_420 -> m47_421  [key=0, style=solid];
m47_421 -> m47_60  [key=2, style=dotted];
m47_421 -> m47_422  [key=0, style=solid];
m47_423 -> m47_60  [key=2, style=dotted];
m47_423 -> m47_424  [key=0, style=solid];
m47_424 -> m47_60  [key=2, style=dotted];
m47_424 -> m47_425  [key=0, style=solid];
m47_425 -> m47_60  [key=2, style=dotted];
m47_425 -> m47_426  [key=0, style=solid];
m47_427 -> m47_60  [key=2, style=dotted];
m47_427 -> m47_428  [key=0, style=solid];
m47_428 -> m47_60  [key=2, style=dotted];
m47_428 -> m47_429  [key=0, style=solid];
m47_429 -> m47_60  [key=2, style=dotted];
m47_429 -> m47_430  [key=0, style=solid];
m47_430 -> m47_60  [key=2, style=dotted];
m47_430 -> m47_431  [key=0, style=solid];
m47_432 -> m47_60  [key=2, style=dotted];
m47_432 -> m47_433  [key=0, style=solid];
m47_433 -> m47_60  [key=2, style=dotted];
m47_433 -> m47_434  [key=0, style=solid];
m47_434 -> m47_60  [key=2, style=dotted];
m47_434 -> m47_435  [key=0, style=solid];
m47_435 -> m47_60  [key=2, style=dotted];
m47_435 -> m47_436  [key=0, style=solid];
m47_437 -> m47_60  [key=2, style=dotted];
m47_437 -> m47_438  [key=0, style=solid];
m47_438 -> m47_60  [key=2, style=dotted];
m47_438 -> m47_439  [key=0, style=solid];
m47_439 -> m47_60  [key=2, style=dotted];
m47_439 -> m47_440  [key=0, style=solid];
m47_440 -> m47_60  [key=2, style=dotted];
m47_440 -> m47_441  [key=0, style=solid];
m47_442 -> m47_60  [key=2, style=dotted];
m47_442 -> m47_443  [key=0, style=solid];
m47_443 -> m47_60  [key=2, style=dotted];
m47_443 -> m47_444  [key=0, style=solid];
m47_444 -> m47_60  [key=2, style=dotted];
m47_444 -> m47_445  [key=0, style=solid];
m47_446 -> m47_60  [key=2, style=dotted];
m47_446 -> m47_447  [key=0, style=solid];
m47_447 -> m47_60  [key=2, style=dotted];
m47_447 -> m47_448  [key=0, style=solid];
m47_448 -> m47_60  [key=2, style=dotted];
m47_448 -> m47_449  [key=0, style=solid];
m47_449 -> m47_60  [key=2, style=dotted];
m47_449 -> m47_450  [key=0, style=solid];
m47_450 -> m47_60  [key=2, style=dotted];
m47_450 -> m47_451  [key=0, style=solid];
m47_452 -> m47_60  [key=2, style=dotted];
m47_452 -> m47_453  [key=0, style=solid];
m47_453 -> m47_60  [key=2, style=dotted];
m47_453 -> m47_454  [key=0, style=solid];
m47_454 -> m47_60  [key=2, style=dotted];
m47_454 -> m47_455  [key=0, style=solid];
m47_455 -> m47_60  [key=2, style=dotted];
m47_455 -> m47_456  [key=0, style=solid];
m47_456 -> m47_60  [key=2, style=dotted];
m47_456 -> m47_457  [key=0, style=solid];
m47_458 -> m47_60  [key=2, style=dotted];
m47_458 -> m47_459  [key=0, style=solid];
m47_459 -> m47_60  [key=2, style=dotted];
m47_459 -> m47_460  [key=0, style=solid];
m47_460 -> m47_60  [key=2, style=dotted];
m47_460 -> m47_461  [key=0, style=solid];
m47_462 -> m47_60  [key=2, style=dotted];
m47_462 -> m47_463  [key=0, style=solid];
m47_463 -> m47_60  [key=2, style=dotted];
m47_463 -> m47_464  [key=0, style=solid];
m47_464 -> m47_60  [key=2, style=dotted];
m47_464 -> m47_465  [key=0, style=solid];
m47_422 -> m47_58  [key=2, style=dotted];
m47_422 -> m47_423  [key=0, style=solid];
m47_426 -> m47_58  [key=2, style=dotted];
m47_426 -> m47_427  [key=0, style=solid];
m47_431 -> m47_58  [key=2, style=dotted];
m47_431 -> m47_432  [key=0, style=solid];
m47_436 -> m47_58  [key=2, style=dotted];
m47_436 -> m47_437  [key=0, style=solid];
m47_441 -> m47_58  [key=2, style=dotted];
m47_441 -> m47_442  [key=0, style=solid];
m47_445 -> m47_58  [key=2, style=dotted];
m47_445 -> m47_446  [key=0, style=solid];
m47_451 -> m47_58  [key=2, style=dotted];
m47_451 -> m47_452  [key=0, style=solid];
m47_457 -> m47_58  [key=2, style=dotted];
m47_457 -> m47_458  [key=0, style=solid];
m47_461 -> m47_58  [key=2, style=dotted];
m47_461 -> m47_462  [key=0, style=solid];
m47_465 -> m47_58  [key=2, style=dotted];
m47_465 -> m47_466  [key=0, style=solid];
m47_465 -> m47_136  [key=2, style=dotted];
m47_418 -> m47_56  [key=2, style=dotted];
m47_418 -> m47_419  [key=0, style=solid];
m47_418 -> m47_420  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_418 -> m47_421  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_418 -> m47_423  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_418 -> m47_424  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_418 -> m47_425  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_418 -> m47_427  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_418 -> m47_428  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_418 -> m47_429  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_418 -> m47_430  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_418 -> m47_432  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_418 -> m47_433  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_418 -> m47_434  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_418 -> m47_435  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_418 -> m47_437  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_418 -> m47_438  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_418 -> m47_439  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_418 -> m47_440  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_418 -> m47_442  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_418 -> m47_443  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_418 -> m47_444  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_418 -> m47_446  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_418 -> m47_447  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_418 -> m47_448  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_418 -> m47_449  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_418 -> m47_450  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_418 -> m47_452  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_418 -> m47_453  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_418 -> m47_454  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_418 -> m47_455  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_418 -> m47_456  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_418 -> m47_458  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_418 -> m47_459  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_418 -> m47_460  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_418 -> m47_462  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_418 -> m47_463  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_418 -> m47_464  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_418 -> m47_422  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_418 -> m47_426  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_418 -> m47_431  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_418 -> m47_436  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_418 -> m47_441  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_418 -> m47_445  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_418 -> m47_451  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_418 -> m47_457  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_418 -> m47_461  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_418 -> m47_465  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_417 -> m47_57  [key=2, style=dotted];
m47_417 -> m47_418  [key=0, style=solid];
m47_416 -> m47_417  [key=0, style=solid];
m47_466 -> m47_415  [key=0, style=bold, color=blue];
m47_864 -> m47_865  [key=0, style=solid];
m47_868 -> m47_60  [key=2, style=dotted];
m47_868 -> m47_869  [key=0, style=solid];
m47_869 -> m47_60  [key=2, style=dotted];
m47_869 -> m47_870  [key=0, style=solid];
m47_871 -> m47_60  [key=2, style=dotted];
m47_871 -> m47_872  [key=0, style=solid];
m47_872 -> m47_60  [key=2, style=dotted];
m47_872 -> m47_873  [key=0, style=solid];
m47_874 -> m47_60  [key=2, style=dotted];
m47_874 -> m47_875  [key=0, style=solid];
m47_866 -> m47_59  [key=2, style=dotted];
m47_866 -> m47_867  [key=0, style=solid];
m47_866 -> m47_356  [key=2, style=dotted];
m47_867 -> m47_59  [key=2, style=dotted];
m47_867 -> m47_868  [key=0, style=solid];
m47_867 -> m47_356  [key=2, style=dotted];
m47_870 -> m47_59  [key=2, style=dotted];
m47_870 -> m47_871  [key=0, style=solid];
m47_870 -> m47_356  [key=2, style=dotted];
m47_873 -> m47_59  [key=2, style=dotted];
m47_873 -> m47_874  [key=0, style=solid];
m47_873 -> m47_356  [key=2, style=dotted];
m47_865 -> m47_56  [key=2, style=dotted];
m47_865 -> m47_57  [key=2, style=dotted];
m47_865 -> m47_868  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_865 -> m47_869  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_865 -> m47_871  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_865 -> m47_872  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_865 -> m47_874  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_865 -> m47_866  [key=0, style=solid];
m47_865 -> m47_867  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_865 -> m47_870  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_865 -> m47_873  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_865 -> m47_875  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_875 -> m47_876  [key=0, style=solid];
m47_875 -> m47_356  [key=2, style=dotted];
m47_875 -> m47_136  [key=2, style=dotted];
m47_876 -> m47_864  [key=0, style=bold, color=blue];
m47_1576 -> m47_1577  [key=0, style=solid];
m47_1580 -> m47_60  [key=2, style=dotted];
m47_1580 -> m47_1581  [key=0, style=solid];
m47_1582 -> m47_60  [key=2, style=dotted];
m47_1582 -> m47_1583  [key=0, style=solid];
m47_1584 -> m47_60  [key=2, style=dotted];
m47_1584 -> m47_1585  [key=0, style=solid];
m47_1585 -> m47_60  [key=2, style=dotted];
m47_1585 -> m47_1586  [key=0, style=solid];
m47_1588 -> m47_60  [key=2, style=dotted];
m47_1588 -> m47_1589  [key=0, style=solid];
m47_1586 -> m47_60  [key=2, style=dotted];
m47_1586 -> m47_1587  [key=0, style=solid];
m47_1579 -> m47_58  [key=2, style=dotted];
m47_1579 -> m47_59  [key=2, style=dotted];
m47_1579 -> m47_1580  [key=0, style=solid];
m47_1581 -> m47_58  [key=2, style=dotted];
m47_1581 -> m47_59  [key=2, style=dotted];
m47_1581 -> m47_1582  [key=0, style=solid];
m47_1587 -> m47_58  [key=2, style=dotted];
m47_1587 -> m47_59  [key=2, style=dotted];
m47_1587 -> m47_1588  [key=0, style=solid];
m47_1578 -> m47_56  [key=2, style=dotted];
m47_1578 -> m47_57  [key=2, style=dotted];
m47_1578 -> m47_1580  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1578 -> m47_1582  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1578 -> m47_1584  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1578 -> m47_1585  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1578 -> m47_1588  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1578 -> m47_1579  [key=0, style=solid];
m47_1578 -> m47_1581  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1578 -> m47_1587  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1578 -> m47_1583  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1583 -> m47_1584  [key=0, style=solid];
m47_1583 -> m47_1586  [key=1, style=dashed, color=darkseagreen4, label=d];
m47_1583 -> m47_222  [key=2, style=dotted];
m47_1577 -> m47_1578  [key=0, style=solid];
m47_1589 -> m47_1576  [key=0, style=bold, color=blue];
m47_268 -> m47_269  [key=0, style=solid];
m47_273 -> m47_60  [key=2, style=dotted];
m47_273 -> m47_274  [key=0, style=solid];
m47_272 -> m47_58  [key=2, style=dotted];
m47_272 -> m47_59  [key=2, style=dotted];
m47_272 -> m47_273  [key=0, style=solid];
m47_270 -> m47_56  [key=2, style=dotted];
m47_270 -> m47_57  [key=2, style=dotted];
m47_270 -> m47_273  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_270 -> m47_272  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_270 -> m47_277  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_270 -> m47_271  [key=0, style=solid];
m47_270 -> m47_274  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_274 -> m47_275  [key=0, style=solid];
m47_274 -> m47_150  [key=2, style=dotted];
m47_274 -> m47_276  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_271 -> m47_272  [key=0, style=solid];
m47_269 -> m47_270  [key=0, style=solid];
m47_275 -> m47_268  [key=0, style=bold, color=blue];
m47_819 -> m47_820  [key=0, style=solid];
m47_831 -> m47_60  [key=2, style=dotted];
m47_831 -> m47_832  [key=0, style=solid];
m47_846 -> m47_60  [key=2, style=dotted];
m47_846 -> m47_847  [key=0, style=solid];
m47_828 -> m47_60  [key=2, style=dotted];
m47_828 -> m47_829  [key=0, style=solid];
m47_830 -> m47_60  [key=2, style=dotted];
m47_830 -> m47_831  [key=0, style=solid];
m47_833 -> m47_60  [key=2, style=dotted];
m47_833 -> m47_834  [key=0, style=solid];
m47_835 -> m47_60  [key=2, style=dotted];
m47_835 -> m47_836  [key=0, style=solid];
m47_836 -> m47_60  [key=2, style=dotted];
m47_836 -> m47_837  [key=0, style=solid];
m47_837 -> m47_60  [key=2, style=dotted];
m47_837 -> m47_838  [key=0, style=solid];
m47_839 -> m47_60  [key=2, style=dotted];
m47_839 -> m47_840  [key=0, style=solid];
m47_840 -> m47_60  [key=2, style=dotted];
m47_840 -> m47_841  [key=0, style=solid];
m47_842 -> m47_60  [key=2, style=dotted];
m47_842 -> m47_843  [key=0, style=solid];
m47_843 -> m47_60  [key=2, style=dotted];
m47_843 -> m47_844  [key=0, style=solid];
m47_845 -> m47_60  [key=2, style=dotted];
m47_845 -> m47_846  [key=0, style=solid];
m47_848 -> m47_60  [key=2, style=dotted];
m47_848 -> m47_849  [key=0, style=solid];
m47_850 -> m47_60  [key=2, style=dotted];
m47_850 -> m47_851  [key=0, style=solid];
m47_852 -> m47_60  [key=2, style=dotted];
m47_852 -> m47_853  [key=0, style=solid];
m47_854 -> m47_60  [key=2, style=dotted];
m47_854 -> m47_855  [key=0, style=solid];
m47_855 -> m47_60  [key=2, style=dotted];
m47_855 -> m47_856  [key=0, style=solid];
m47_857 -> m47_60  [key=2, style=dotted];
m47_857 -> m47_858  [key=0, style=solid];
m47_859 -> m47_60  [key=2, style=dotted];
m47_859 -> m47_860  [key=0, style=solid];
m47_861 -> m47_60  [key=2, style=dotted];
m47_861 -> m47_862  [key=0, style=solid];
m47_827 -> m47_58  [key=2, style=dotted];
m47_827 -> m47_59  [key=2, style=dotted];
m47_827 -> m47_828  [key=0, style=solid];
m47_829 -> m47_58  [key=2, style=dotted];
m47_829 -> m47_59  [key=2, style=dotted];
m47_829 -> m47_830  [key=0, style=solid];
m47_832 -> m47_58  [key=2, style=dotted];
m47_832 -> m47_59  [key=2, style=dotted];
m47_832 -> m47_833  [key=0, style=solid];
m47_834 -> m47_58  [key=2, style=dotted];
m47_834 -> m47_59  [key=2, style=dotted];
m47_834 -> m47_835  [key=0, style=solid];
m47_838 -> m47_58  [key=2, style=dotted];
m47_838 -> m47_59  [key=2, style=dotted];
m47_838 -> m47_839  [key=0, style=solid];
m47_841 -> m47_58  [key=2, style=dotted];
m47_841 -> m47_59  [key=2, style=dotted];
m47_841 -> m47_842  [key=0, style=solid];
m47_844 -> m47_58  [key=2, style=dotted];
m47_844 -> m47_59  [key=2, style=dotted];
m47_844 -> m47_845  [key=0, style=solid];
m47_847 -> m47_58  [key=2, style=dotted];
m47_847 -> m47_59  [key=2, style=dotted];
m47_847 -> m47_848  [key=0, style=solid];
m47_849 -> m47_58  [key=2, style=dotted];
m47_849 -> m47_59  [key=2, style=dotted];
m47_849 -> m47_850  [key=0, style=solid];
m47_851 -> m47_58  [key=2, style=dotted];
m47_851 -> m47_59  [key=2, style=dotted];
m47_851 -> m47_852  [key=0, style=solid];
m47_853 -> m47_58  [key=2, style=dotted];
m47_853 -> m47_59  [key=2, style=dotted];
m47_853 -> m47_854  [key=0, style=solid];
m47_856 -> m47_58  [key=2, style=dotted];
m47_856 -> m47_59  [key=2, style=dotted];
m47_856 -> m47_857  [key=0, style=solid];
m47_858 -> m47_58  [key=2, style=dotted];
m47_858 -> m47_59  [key=2, style=dotted];
m47_858 -> m47_859  [key=0, style=solid];
m47_860 -> m47_58  [key=2, style=dotted];
m47_860 -> m47_59  [key=2, style=dotted];
m47_860 -> m47_861  [key=0, style=solid];
m47_826 -> m47_56  [key=2, style=dotted];
m47_826 -> m47_831  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_826 -> m47_846  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_826 -> m47_828  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_826 -> m47_830  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_826 -> m47_833  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_826 -> m47_835  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_826 -> m47_836  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_826 -> m47_837  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_826 -> m47_839  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_826 -> m47_840  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_826 -> m47_842  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_826 -> m47_843  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_826 -> m47_845  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_826 -> m47_848  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_826 -> m47_850  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_826 -> m47_852  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_826 -> m47_854  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_826 -> m47_855  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_826 -> m47_857  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_826 -> m47_859  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_826 -> m47_861  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_826 -> m47_827  [key=0, style=solid];
m47_826 -> m47_829  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_826 -> m47_832  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_826 -> m47_834  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_826 -> m47_838  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_826 -> m47_841  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_826 -> m47_844  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_826 -> m47_847  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_826 -> m47_849  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_826 -> m47_851  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_826 -> m47_853  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_826 -> m47_856  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_826 -> m47_858  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_826 -> m47_860  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_826 -> m47_336  [key=2, style=dotted];
m47_826 -> m47_374  [key=2, style=dotted];
m47_826 -> m47_375  [key=2, style=dotted];
m47_823 -> m47_57  [key=2, style=dotted];
m47_823 -> m47_824  [key=0, style=solid];
m47_820 -> m47_831  [key=1, style=dashed, color=darkseagreen4, label=newLinesText];
m47_820 -> m47_846  [key=1, style=dashed, color=darkseagreen4, label=newLinesText];
m47_820 -> m47_823  [key=1, style=dashed, color=darkseagreen4, label=newLinesText];
m47_820 -> m47_821  [key=0, style=solid];
m47_821 -> m47_826  [key=1, style=dashed, color=darkseagreen4, label=json];
m47_821 -> m47_822  [key=0, style=solid];
m47_824 -> m47_826  [key=0, style=solid];
m47_824 -> m47_825  [key=0, style=solid];
m47_824 -> m47_863  [key=2, style=dotted];
m47_822 -> m47_823  [key=0, style=solid];
m47_822 -> m47_825  [key=1, style=dashed, color=darkseagreen4, label=count];
m47_825 -> m47_824  [key=0, style=solid];
m47_825 -> m47_825  [key=1, style=dashed, color=darkseagreen4, label=count];
m47_862 -> m47_819  [key=0, style=bold, color=blue];
m47_1713 -> m47_1714  [key=0, style=solid];
m47_1715 -> m47_56  [key=2, style=dotted];
m47_1715 -> m47_57  [key=2, style=dotted];
m47_1715 -> m47_1719  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1715 -> m47_1716  [key=0, style=solid];
m47_1714 -> m47_1715  [key=0, style=solid];
m47_1716 -> m47_1718  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_1716 -> m47_1717  [key=0, style=solid];
m47_1716 -> m47_150  [key=2, style=dotted];
m47_1717 -> m47_1713  [key=0, style=bold, color=blue];
m47_1562 -> m47_1563  [key=0, style=solid];
m47_1563 -> m47_56  [key=2, style=dotted];
m47_1563 -> m47_57  [key=2, style=dotted];
m47_1563 -> m47_1567  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1563 -> m47_1564  [key=0, style=solid];
m47_1564 -> m47_1566  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_1564 -> m47_1565  [key=0, style=solid];
m47_1564 -> m47_150  [key=2, style=dotted];
m47_1565 -> m47_1562  [key=0, style=bold, color=blue];
m47_374 -> m47_2279  [key=0, style=solid];
m47_2279 -> m47_374  [key=0, style=bold, color=blue];
m47_313 -> m47_314  [key=0, style=solid];
m47_314 -> m47_60  [key=2, style=dotted];
m47_314 -> m47_315  [key=0, style=solid];
m47_314 -> m47_327  [key=2, style=dotted];
m47_315 -> m47_60  [key=2, style=dotted];
m47_315 -> m47_316  [key=0, style=solid];
m47_315 -> m47_327  [key=2, style=dotted];
m47_316 -> m47_60  [key=2, style=dotted];
m47_316 -> m47_317  [key=0, style=solid];
m47_316 -> m47_327  [key=2, style=dotted];
m47_317 -> m47_60  [key=2, style=dotted];
m47_317 -> m47_318  [key=0, style=solid];
m47_317 -> m47_327  [key=2, style=dotted];
m47_318 -> m47_60  [key=2, style=dotted];
m47_318 -> m47_319  [key=0, style=solid];
m47_318 -> m47_327  [key=2, style=dotted];
m47_319 -> m47_60  [key=2, style=dotted];
m47_319 -> m47_320  [key=0, style=solid];
m47_319 -> m47_327  [key=2, style=dotted];
m47_320 -> m47_60  [key=2, style=dotted];
m47_320 -> m47_321  [key=0, style=solid];
m47_320 -> m47_327  [key=2, style=dotted];
m47_321 -> m47_60  [key=2, style=dotted];
m47_321 -> m47_322  [key=0, style=solid];
m47_321 -> m47_327  [key=2, style=dotted];
m47_322 -> m47_60  [key=2, style=dotted];
m47_322 -> m47_323  [key=0, style=solid];
m47_322 -> m47_327  [key=2, style=dotted];
m47_323 -> m47_60  [key=2, style=dotted];
m47_323 -> m47_324  [key=0, style=solid];
m47_323 -> m47_327  [key=2, style=dotted];
m47_324 -> m47_60  [key=2, style=dotted];
m47_324 -> m47_325  [key=0, style=solid];
m47_324 -> m47_327  [key=2, style=dotted];
m47_325 -> m47_60  [key=2, style=dotted];
m47_325 -> m47_326  [key=0, style=solid];
m47_325 -> m47_327  [key=2, style=dotted];
m47_326 -> m47_313  [key=0, style=bold, color=blue];
m47_779 -> m47_780  [key=0, style=solid];
m47_780 -> m47_56  [key=2, style=dotted];
m47_780 -> m47_57  [key=2, style=dotted];
m47_780 -> m47_781  [key=0, style=solid];
m47_780 -> m47_784  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_781 -> m47_782  [key=0, style=solid];
m47_781 -> m47_150  [key=2, style=dotted];
m47_781 -> m47_783  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_782 -> m47_779  [key=0, style=bold, color=blue];
m47_98 -> m47_99  [key=0, style=solid];
m47_104 -> m47_60  [key=2, style=dotted];
m47_104 -> m47_105  [key=0, style=solid];
m47_101 -> m47_58  [key=2, style=dotted];
m47_101 -> m47_102  [key=0, style=solid];
m47_102 -> m47_58  [key=2, style=dotted];
m47_102 -> m47_103  [key=0, style=solid];
m47_103 -> m47_58  [key=2, style=dotted];
m47_103 -> m47_104  [key=0, style=solid];
m47_100 -> m47_56  [key=2, style=dotted];
m47_100 -> m47_57  [key=2, style=dotted];
m47_100 -> m47_104  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_100 -> m47_101  [key=0, style=solid];
m47_100 -> m47_102  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_100 -> m47_103  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_99 -> m47_100  [key=0, style=solid];
m47_105 -> m47_98  [key=0, style=bold, color=blue];
m47_193 -> m47_194  [key=0, style=solid];
m47_197 -> m47_60  [key=2, style=dotted];
m47_197 -> m47_198  [key=0, style=solid];
m47_199 -> m47_60  [key=2, style=dotted];
m47_199 -> m47_200  [key=0, style=solid];
m47_201 -> m47_60  [key=2, style=dotted];
m47_201 -> m47_202  [key=0, style=solid];
m47_202 -> m47_60  [key=2, style=dotted];
m47_202 -> m47_203  [key=0, style=solid];
m47_204 -> m47_60  [key=2, style=dotted];
m47_204 -> m47_205  [key=0, style=solid];
m47_196 -> m47_58  [key=2, style=dotted];
m47_196 -> m47_59  [key=2, style=dotted];
m47_196 -> m47_197  [key=0, style=solid];
m47_198 -> m47_58  [key=2, style=dotted];
m47_198 -> m47_59  [key=2, style=dotted];
m47_198 -> m47_199  [key=0, style=solid];
m47_200 -> m47_58  [key=2, style=dotted];
m47_200 -> m47_59  [key=2, style=dotted];
m47_200 -> m47_201  [key=0, style=solid];
m47_203 -> m47_58  [key=2, style=dotted];
m47_203 -> m47_59  [key=2, style=dotted];
m47_203 -> m47_204  [key=0, style=solid];
m47_205 -> m47_58  [key=2, style=dotted];
m47_205 -> m47_206  [key=0, style=solid];
m47_205 -> m47_136  [key=2, style=dotted];
m47_195 -> m47_56  [key=2, style=dotted];
m47_195 -> m47_57  [key=2, style=dotted];
m47_195 -> m47_197  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_195 -> m47_199  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_195 -> m47_201  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_195 -> m47_202  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_195 -> m47_204  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_195 -> m47_196  [key=0, style=solid];
m47_195 -> m47_198  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_195 -> m47_200  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_195 -> m47_203  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_195 -> m47_205  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_194 -> m47_195  [key=0, style=solid];
m47_206 -> m47_193  [key=0, style=bold, color=blue];
m47_611 -> m47_612  [key=0, style=solid];
m47_615 -> m47_60  [key=2, style=dotted];
m47_615 -> m47_616  [key=0, style=solid];
m47_617 -> m47_60  [key=2, style=dotted];
m47_617 -> m47_618  [key=0, style=solid];
m47_619 -> m47_60  [key=2, style=dotted];
m47_619 -> m47_620  [key=0, style=solid];
m47_621 -> m47_60  [key=2, style=dotted];
m47_621 -> m47_622  [key=0, style=solid];
m47_623 -> m47_60  [key=2, style=dotted];
m47_623 -> m47_624  [key=0, style=solid];
m47_625 -> m47_60  [key=2, style=dotted];
m47_625 -> m47_626  [key=0, style=solid];
m47_627 -> m47_60  [key=2, style=dotted];
m47_627 -> m47_628  [key=0, style=solid];
m47_629 -> m47_60  [key=2, style=dotted];
m47_629 -> m47_630  [key=0, style=solid];
m47_631 -> m47_60  [key=2, style=dotted];
m47_631 -> m47_632  [key=0, style=solid];
m47_633 -> m47_60  [key=2, style=dotted];
m47_633 -> m47_634  [key=0, style=solid];
m47_635 -> m47_60  [key=2, style=dotted];
m47_635 -> m47_636  [key=0, style=solid];
m47_636 -> m47_60  [key=2, style=dotted];
m47_636 -> m47_637  [key=0, style=solid];
m47_638 -> m47_60  [key=2, style=dotted];
m47_638 -> m47_639  [key=0, style=solid];
m47_639 -> m47_60  [key=2, style=dotted];
m47_639 -> m47_640  [key=0, style=solid];
m47_614 -> m47_58  [key=2, style=dotted];
m47_614 -> m47_59  [key=2, style=dotted];
m47_614 -> m47_615  [key=0, style=solid];
m47_616 -> m47_58  [key=2, style=dotted];
m47_616 -> m47_59  [key=2, style=dotted];
m47_616 -> m47_617  [key=0, style=solid];
m47_618 -> m47_58  [key=2, style=dotted];
m47_618 -> m47_59  [key=2, style=dotted];
m47_618 -> m47_619  [key=0, style=solid];
m47_620 -> m47_58  [key=2, style=dotted];
m47_620 -> m47_59  [key=2, style=dotted];
m47_620 -> m47_621  [key=0, style=solid];
m47_622 -> m47_58  [key=2, style=dotted];
m47_622 -> m47_59  [key=2, style=dotted];
m47_622 -> m47_623  [key=0, style=solid];
m47_624 -> m47_58  [key=2, style=dotted];
m47_624 -> m47_59  [key=2, style=dotted];
m47_624 -> m47_625  [key=0, style=solid];
m47_626 -> m47_58  [key=2, style=dotted];
m47_626 -> m47_59  [key=2, style=dotted];
m47_626 -> m47_627  [key=0, style=solid];
m47_628 -> m47_58  [key=2, style=dotted];
m47_628 -> m47_59  [key=2, style=dotted];
m47_628 -> m47_629  [key=0, style=solid];
m47_630 -> m47_58  [key=2, style=dotted];
m47_630 -> m47_59  [key=2, style=dotted];
m47_630 -> m47_631  [key=0, style=solid];
m47_632 -> m47_58  [key=2, style=dotted];
m47_632 -> m47_59  [key=2, style=dotted];
m47_632 -> m47_633  [key=0, style=solid];
m47_634 -> m47_58  [key=2, style=dotted];
m47_634 -> m47_59  [key=2, style=dotted];
m47_634 -> m47_635  [key=0, style=solid];
m47_637 -> m47_58  [key=2, style=dotted];
m47_637 -> m47_59  [key=2, style=dotted];
m47_637 -> m47_638  [key=0, style=solid];
m47_640 -> m47_58  [key=2, style=dotted];
m47_640 -> m47_641  [key=0, style=solid];
m47_640 -> m47_136  [key=2, style=dotted];
m47_613 -> m47_56  [key=2, style=dotted];
m47_613 -> m47_615  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_613 -> m47_617  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_613 -> m47_619  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_613 -> m47_621  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_613 -> m47_623  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_613 -> m47_625  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_613 -> m47_627  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_613 -> m47_629  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_613 -> m47_631  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_613 -> m47_633  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_613 -> m47_635  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_613 -> m47_636  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_613 -> m47_638  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_613 -> m47_639  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_613 -> m47_614  [key=0, style=solid];
m47_613 -> m47_616  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_613 -> m47_618  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_613 -> m47_620  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_613 -> m47_622  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_613 -> m47_624  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_613 -> m47_626  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_613 -> m47_628  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_613 -> m47_630  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_613 -> m47_632  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_613 -> m47_634  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_613 -> m47_637  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_613 -> m47_640  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_613 -> m47_336  [key=2, style=dotted];
m47_613 -> m47_374  [key=2, style=dotted];
m47_613 -> m47_375  [key=2, style=dotted];
m47_612 -> m47_613  [key=0, style=solid];
m47_641 -> m47_611  [key=0, style=bold, color=blue];
m47_1368 -> m47_1369  [key=0, style=solid];
m47_1372 -> m47_60  [key=2, style=dotted];
m47_1372 -> m47_1373  [key=0, style=solid];
m47_1374 -> m47_60  [key=2, style=dotted];
m47_1374 -> m47_1375  [key=0, style=solid];
m47_1375 -> m47_60  [key=2, style=dotted];
m47_1375 -> m47_1376  [key=0, style=solid];
m47_1377 -> m47_60  [key=2, style=dotted];
m47_1377 -> m47_1378  [key=0, style=solid];
m47_1378 -> m47_60  [key=2, style=dotted];
m47_1378 -> m47_1379  [key=0, style=solid];
m47_1380 -> m47_60  [key=2, style=dotted];
m47_1380 -> m47_1381  [key=0, style=solid];
m47_1371 -> m47_58  [key=2, style=dotted];
m47_1371 -> m47_59  [key=2, style=dotted];
m47_1371 -> m47_1372  [key=0, style=solid];
m47_1373 -> m47_58  [key=2, style=dotted];
m47_1373 -> m47_59  [key=2, style=dotted];
m47_1373 -> m47_1374  [key=0, style=solid];
m47_1376 -> m47_58  [key=2, style=dotted];
m47_1376 -> m47_59  [key=2, style=dotted];
m47_1376 -> m47_1377  [key=0, style=solid];
m47_1379 -> m47_58  [key=2, style=dotted];
m47_1379 -> m47_59  [key=2, style=dotted];
m47_1379 -> m47_1380  [key=0, style=solid];
m47_1381 -> m47_58  [key=2, style=dotted];
m47_1381 -> m47_1382  [key=0, style=solid];
m47_1381 -> m47_136  [key=2, style=dotted];
m47_1370 -> m47_56  [key=2, style=dotted];
m47_1370 -> m47_57  [key=2, style=dotted];
m47_1370 -> m47_1372  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1370 -> m47_1374  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1370 -> m47_1375  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1370 -> m47_1377  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1370 -> m47_1378  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1370 -> m47_1380  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1370 -> m47_1371  [key=0, style=solid];
m47_1370 -> m47_1373  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1370 -> m47_1376  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1370 -> m47_1379  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1370 -> m47_1381  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1369 -> m47_1370  [key=0, style=solid];
m47_1382 -> m47_1368  [key=0, style=bold, color=blue];
m47_2188 -> m47_2265  [key=0, style=solid];
m47_2265 -> m47_2266  [key=0, style=solid];
m47_2266 -> m47_2188  [key=0, style=bold, color=blue];
m47_684 -> m47_685  [key=0, style=solid];
m47_688 -> m47_60  [key=2, style=dotted];
m47_688 -> m47_689  [key=0, style=solid];
m47_694 -> m47_60  [key=2, style=dotted];
m47_694 -> m47_695  [key=0, style=solid];
m47_687 -> m47_58  [key=2, style=dotted];
m47_687 -> m47_688  [key=0, style=solid];
m47_693 -> m47_58  [key=2, style=dotted];
m47_693 -> m47_694  [key=0, style=solid];
m47_686 -> m47_56  [key=2, style=dotted];
m47_686 -> m47_688  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_686 -> m47_687  [key=0, style=solid];
m47_686 -> m47_698  [key=2, style=dotted];
m47_686 -> m47_699  [key=2, style=dotted];
m47_692 -> m47_56  [key=2, style=dotted];
m47_692 -> m47_694  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_692 -> m47_693  [key=0, style=solid];
m47_692 -> m47_698  [key=2, style=dotted];
m47_692 -> m47_699  [key=2, style=dotted];
m47_689 -> m47_690  [key=0, style=solid];
m47_689 -> m47_691  [key=1, style=dashed, color=darkseagreen4, label=j];
m47_689 -> m47_695  [key=1, style=dashed, color=darkseagreen4, label=j];
m47_695 -> m47_695  [key=1, style=dashed, color=darkseagreen4, label=j];
m47_695 -> m47_690  [key=0, style=solid];
m47_685 -> m47_686  [key=0, style=solid];
m47_685 -> m47_697  [key=2, style=dotted];
m47_685 -> m47_691  [key=1, style=dashed, color=darkseagreen4, label=i];
m47_691 -> m47_692  [key=0, style=solid];
m47_690 -> m47_691  [key=0, style=solid];
m47_690 -> m47_696  [key=0, style=solid];
m47_696 -> m47_684  [key=0, style=bold, color=blue];
m47_713 -> m47_714  [key=0, style=solid];
m47_721 -> m47_60  [key=2, style=dotted];
m47_721 -> m47_722  [key=0, style=solid];
m47_722 -> m47_60  [key=2, style=dotted];
m47_722 -> m47_723  [key=0, style=solid];
m47_718 -> m47_58  [key=2, style=dotted];
m47_718 -> m47_59  [key=2, style=dotted];
m47_718 -> m47_719  [key=0, style=solid];
m47_720 -> m47_58  [key=2, style=dotted];
m47_720 -> m47_59  [key=2, style=dotted];
m47_720 -> m47_721  [key=0, style=solid];
m47_715 -> m47_56  [key=2, style=dotted];
m47_715 -> m47_57  [key=2, style=dotted];
m47_715 -> m47_721  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_715 -> m47_722  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_715 -> m47_718  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_715 -> m47_720  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_715 -> m47_716  [key=0, style=solid];
m47_717 -> m47_718  [key=0, style=solid];
m47_717 -> m47_720  [key=0, style=solid];
m47_719 -> m47_717  [key=0, style=solid];
m47_719 -> m47_719  [key=1, style=dashed, color=darkseagreen4, label=i];
m47_714 -> m47_715  [key=0, style=solid];
m47_716 -> m47_717  [key=0, style=solid];
m47_716 -> m47_719  [key=1, style=dashed, color=darkseagreen4, label=i];
m47_723 -> m47_713  [key=0, style=bold, color=blue];
m47_242 -> m47_243  [key=0, style=solid];
m47_247 -> m47_60  [key=2, style=dotted];
m47_247 -> m47_248  [key=0, style=solid];
m47_249 -> m47_60  [key=2, style=dotted];
m47_249 -> m47_250  [key=0, style=solid];
m47_250 -> m47_60  [key=2, style=dotted];
m47_250 -> m47_251  [key=0, style=solid];
m47_251 -> m47_60  [key=2, style=dotted];
m47_251 -> m47_252  [key=0, style=solid];
m47_253 -> m47_60  [key=2, style=dotted];
m47_253 -> m47_254  [key=0, style=solid];
m47_254 -> m47_60  [key=2, style=dotted];
m47_254 -> m47_255  [key=0, style=solid];
m47_255 -> m47_60  [key=2, style=dotted];
m47_255 -> m47_256  [key=0, style=solid];
m47_257 -> m47_60  [key=2, style=dotted];
m47_257 -> m47_258  [key=0, style=solid];
m47_258 -> m47_60  [key=2, style=dotted];
m47_258 -> m47_259  [key=0, style=solid];
m47_259 -> m47_60  [key=2, style=dotted];
m47_259 -> m47_260  [key=0, style=solid];
m47_261 -> m47_60  [key=2, style=dotted];
m47_261 -> m47_262  [key=0, style=solid];
m47_261 -> m47_267  [key=2, style=dotted];
m47_262 -> m47_60  [key=2, style=dotted];
m47_262 -> m47_263  [key=0, style=solid];
m47_263 -> m47_60  [key=2, style=dotted];
m47_263 -> m47_264  [key=0, style=solid];
m47_265 -> m47_60  [key=2, style=dotted];
m47_265 -> m47_266  [key=0, style=solid];
m47_246 -> m47_58  [key=2, style=dotted];
m47_246 -> m47_59  [key=2, style=dotted];
m47_246 -> m47_247  [key=0, style=solid];
m47_248 -> m47_58  [key=2, style=dotted];
m47_248 -> m47_59  [key=2, style=dotted];
m47_248 -> m47_249  [key=0, style=solid];
m47_252 -> m47_58  [key=2, style=dotted];
m47_252 -> m47_59  [key=2, style=dotted];
m47_252 -> m47_253  [key=0, style=solid];
m47_256 -> m47_58  [key=2, style=dotted];
m47_256 -> m47_59  [key=2, style=dotted];
m47_256 -> m47_257  [key=0, style=solid];
m47_260 -> m47_58  [key=2, style=dotted];
m47_260 -> m47_59  [key=2, style=dotted];
m47_260 -> m47_261  [key=0, style=solid];
m47_264 -> m47_58  [key=2, style=dotted];
m47_264 -> m47_59  [key=2, style=dotted];
m47_264 -> m47_265  [key=0, style=solid];
m47_244 -> m47_56  [key=2, style=dotted];
m47_244 -> m47_57  [key=2, style=dotted];
m47_244 -> m47_247  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_244 -> m47_249  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_244 -> m47_250  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_244 -> m47_251  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_244 -> m47_253  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_244 -> m47_254  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_244 -> m47_255  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_244 -> m47_257  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_244 -> m47_258  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_244 -> m47_259  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_244 -> m47_261  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_244 -> m47_262  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_244 -> m47_263  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_244 -> m47_265  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_244 -> m47_246  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_244 -> m47_248  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_244 -> m47_252  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_244 -> m47_256  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_244 -> m47_260  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_244 -> m47_264  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_244 -> m47_245  [key=0, style=solid];
m47_245 -> m47_246  [key=0, style=solid];
m47_243 -> m47_244  [key=0, style=solid];
m47_266 -> m47_242  [key=0, style=bold, color=blue];
m47_1149 -> m47_1150  [key=0, style=solid];
m47_1153 -> m47_60  [key=2, style=dotted];
m47_1153 -> m47_1154  [key=0, style=solid];
m47_1155 -> m47_60  [key=2, style=dotted];
m47_1155 -> m47_1156  [key=0, style=solid];
m47_1156 -> m47_60  [key=2, style=dotted];
m47_1156 -> m47_1157  [key=0, style=solid];
m47_1158 -> m47_60  [key=2, style=dotted];
m47_1158 -> m47_1159  [key=0, style=solid];
m47_1159 -> m47_60  [key=2, style=dotted];
m47_1159 -> m47_1160  [key=0, style=solid];
m47_1161 -> m47_60  [key=2, style=dotted];
m47_1161 -> m47_1162  [key=0, style=solid];
m47_1162 -> m47_60  [key=2, style=dotted];
m47_1162 -> m47_1163  [key=0, style=solid];
m47_1164 -> m47_60  [key=2, style=dotted];
m47_1164 -> m47_1165  [key=0, style=solid];
m47_1165 -> m47_60  [key=2, style=dotted];
m47_1165 -> m47_1166  [key=0, style=solid];
m47_1167 -> m47_60  [key=2, style=dotted];
m47_1167 -> m47_1168  [key=0, style=solid];
m47_1168 -> m47_60  [key=2, style=dotted];
m47_1168 -> m47_1169  [key=0, style=solid];
m47_1170 -> m47_60  [key=2, style=dotted];
m47_1170 -> m47_1171  [key=0, style=solid];
m47_1171 -> m47_60  [key=2, style=dotted];
m47_1171 -> m47_1172  [key=0, style=solid];
m47_1173 -> m47_60  [key=2, style=dotted];
m47_1173 -> m47_1174  [key=0, style=solid];
m47_1174 -> m47_60  [key=2, style=dotted];
m47_1174 -> m47_1175  [key=0, style=solid];
m47_1176 -> m47_60  [key=2, style=dotted];
m47_1176 -> m47_1177  [key=0, style=solid];
m47_1177 -> m47_60  [key=2, style=dotted];
m47_1177 -> m47_1178  [key=0, style=solid];
m47_1179 -> m47_60  [key=2, style=dotted];
m47_1179 -> m47_1180  [key=0, style=solid];
m47_1180 -> m47_60  [key=2, style=dotted];
m47_1180 -> m47_1181  [key=0, style=solid];
m47_1182 -> m47_60  [key=2, style=dotted];
m47_1182 -> m47_1183  [key=0, style=solid];
m47_1183 -> m47_60  [key=2, style=dotted];
m47_1183 -> m47_1184  [key=0, style=solid];
m47_1185 -> m47_60  [key=2, style=dotted];
m47_1185 -> m47_1186  [key=0, style=solid];
m47_1186 -> m47_60  [key=2, style=dotted];
m47_1186 -> m47_1187  [key=0, style=solid];
m47_1188 -> m47_60  [key=2, style=dotted];
m47_1188 -> m47_1189  [key=0, style=solid];
m47_1189 -> m47_60  [key=2, style=dotted];
m47_1189 -> m47_1190  [key=0, style=solid];
m47_1191 -> m47_60  [key=2, style=dotted];
m47_1191 -> m47_1192  [key=0, style=solid];
m47_1192 -> m47_60  [key=2, style=dotted];
m47_1192 -> m47_1193  [key=0, style=solid];
m47_1194 -> m47_60  [key=2, style=dotted];
m47_1194 -> m47_1195  [key=0, style=solid];
m47_1195 -> m47_60  [key=2, style=dotted];
m47_1195 -> m47_1196  [key=0, style=solid];
m47_1197 -> m47_60  [key=2, style=dotted];
m47_1197 -> m47_1198  [key=0, style=solid];
m47_1198 -> m47_60  [key=2, style=dotted];
m47_1198 -> m47_1199  [key=0, style=solid];
m47_1200 -> m47_60  [key=2, style=dotted];
m47_1200 -> m47_1201  [key=0, style=solid];
m47_1201 -> m47_60  [key=2, style=dotted];
m47_1201 -> m47_1202  [key=0, style=solid];
m47_1203 -> m47_60  [key=2, style=dotted];
m47_1203 -> m47_1204  [key=0, style=solid];
m47_1204 -> m47_60  [key=2, style=dotted];
m47_1204 -> m47_1205  [key=0, style=solid];
m47_1206 -> m47_60  [key=2, style=dotted];
m47_1206 -> m47_1207  [key=0, style=solid];
m47_1207 -> m47_60  [key=2, style=dotted];
m47_1207 -> m47_1208  [key=0, style=solid];
m47_1209 -> m47_60  [key=2, style=dotted];
m47_1209 -> m47_1210  [key=0, style=solid];
m47_1151 -> m47_56  [key=2, style=dotted];
m47_1151 -> m47_57  [key=2, style=dotted];
m47_1151 -> m47_1153  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1151 -> m47_1155  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1151 -> m47_1156  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1151 -> m47_1158  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1151 -> m47_1159  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1151 -> m47_1161  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1151 -> m47_1162  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1151 -> m47_1164  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1151 -> m47_1165  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1151 -> m47_1167  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1151 -> m47_1168  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1151 -> m47_1170  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1151 -> m47_1171  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1151 -> m47_1173  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1151 -> m47_1174  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1151 -> m47_1176  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1151 -> m47_1177  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1151 -> m47_1179  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1151 -> m47_1180  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1151 -> m47_1182  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1151 -> m47_1183  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1151 -> m47_1185  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1151 -> m47_1186  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1151 -> m47_1188  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1151 -> m47_1189  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1151 -> m47_1191  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1151 -> m47_1192  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1151 -> m47_1194  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1151 -> m47_1195  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1151 -> m47_1197  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1151 -> m47_1198  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1151 -> m47_1200  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1151 -> m47_1201  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1151 -> m47_1203  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1151 -> m47_1204  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1151 -> m47_1206  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1151 -> m47_1207  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1151 -> m47_1209  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1151 -> m47_1152  [key=0, style=solid];
m47_1151 -> m47_1154  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1151 -> m47_1157  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1151 -> m47_1160  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1151 -> m47_1163  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1151 -> m47_1166  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1151 -> m47_1169  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1151 -> m47_1172  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1151 -> m47_1175  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1151 -> m47_1178  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1151 -> m47_1181  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1151 -> m47_1184  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1151 -> m47_1187  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1151 -> m47_1190  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1151 -> m47_1193  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1151 -> m47_1196  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1151 -> m47_1199  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1151 -> m47_1202  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1151 -> m47_1205  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1151 -> m47_1208  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_1152 -> m47_1153  [key=0, style=solid];
m47_1152 -> m47_356  [key=2, style=dotted];
m47_1154 -> m47_1155  [key=0, style=solid];
m47_1154 -> m47_356  [key=2, style=dotted];
m47_1157 -> m47_1158  [key=0, style=solid];
m47_1157 -> m47_356  [key=2, style=dotted];
m47_1160 -> m47_1161  [key=0, style=solid];
m47_1160 -> m47_356  [key=2, style=dotted];
m47_1163 -> m47_1164  [key=0, style=solid];
m47_1163 -> m47_356  [key=2, style=dotted];
m47_1166 -> m47_1167  [key=0, style=solid];
m47_1166 -> m47_356  [key=2, style=dotted];
m47_1169 -> m47_1170  [key=0, style=solid];
m47_1169 -> m47_356  [key=2, style=dotted];
m47_1172 -> m47_1173  [key=0, style=solid];
m47_1172 -> m47_356  [key=2, style=dotted];
m47_1175 -> m47_1176  [key=0, style=solid];
m47_1175 -> m47_356  [key=2, style=dotted];
m47_1178 -> m47_1179  [key=0, style=solid];
m47_1178 -> m47_356  [key=2, style=dotted];
m47_1181 -> m47_1182  [key=0, style=solid];
m47_1181 -> m47_356  [key=2, style=dotted];
m47_1184 -> m47_1185  [key=0, style=solid];
m47_1184 -> m47_356  [key=2, style=dotted];
m47_1187 -> m47_1188  [key=0, style=solid];
m47_1187 -> m47_356  [key=2, style=dotted];
m47_1190 -> m47_1191  [key=0, style=solid];
m47_1190 -> m47_356  [key=2, style=dotted];
m47_1193 -> m47_1194  [key=0, style=solid];
m47_1193 -> m47_356  [key=2, style=dotted];
m47_1196 -> m47_1197  [key=0, style=solid];
m47_1196 -> m47_356  [key=2, style=dotted];
m47_1199 -> m47_1200  [key=0, style=solid];
m47_1199 -> m47_356  [key=2, style=dotted];
m47_1202 -> m47_1203  [key=0, style=solid];
m47_1202 -> m47_356  [key=2, style=dotted];
m47_1205 -> m47_1206  [key=0, style=solid];
m47_1205 -> m47_356  [key=2, style=dotted];
m47_1208 -> m47_1209  [key=0, style=solid];
m47_1208 -> m47_356  [key=2, style=dotted];
m47_1150 -> m47_1151  [key=0, style=solid];
m47_1210 -> m47_1149  [key=0, style=bold, color=blue];
m47_1933 -> m47_1934  [key=0, style=solid];
m47_1935 -> m47_56  [key=2, style=dotted];
m47_1935 -> m47_1939  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1935 -> m47_1936  [key=0, style=solid];
m47_1935 -> m47_336  [key=2, style=dotted];
m47_1935 -> m47_374  [key=2, style=dotted];
m47_1935 -> m47_375  [key=2, style=dotted];
m47_1934 -> m47_1935  [key=0, style=solid];
m47_1936 -> m47_1938  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_1936 -> m47_1937  [key=0, style=solid];
m47_1936 -> m47_150  [key=2, style=dotted];
m47_1937 -> m47_1933  [key=0, style=bold, color=blue];
m47_1347 -> m47_1348  [key=0, style=solid];
m47_1350 -> m47_60  [key=2, style=dotted];
m47_1350 -> m47_1351  [key=0, style=solid];
m47_1351 -> m47_60  [key=2, style=dotted];
m47_1351 -> m47_1352  [key=0, style=solid];
m47_1352 -> m47_60  [key=2, style=dotted];
m47_1352 -> m47_1353  [key=0, style=solid];
m47_1348 -> m47_56  [key=2, style=dotted];
m47_1348 -> m47_57  [key=2, style=dotted];
m47_1348 -> m47_1349  [key=0, style=solid];
m47_1349 -> m47_1350  [key=0, style=solid];
m47_1349 -> m47_1351  [key=1, style=dashed, color=darkseagreen4, label=data];
m47_1349 -> m47_1352  [key=1, style=dashed, color=darkseagreen4, label=data];
m47_1349 -> m47_94  [key=2, style=dotted];
m47_1353 -> m47_1347  [key=0, style=bold, color=blue];
m47_1308 -> m47_1309  [key=0, style=solid];
m47_1311 -> m47_60  [key=2, style=dotted];
m47_1311 -> m47_1312  [key=0, style=solid];
m47_1309 -> m47_56  [key=2, style=dotted];
m47_1309 -> m47_57  [key=2, style=dotted];
m47_1309 -> m47_1311  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1309 -> m47_1310  [key=0, style=solid];
m47_1310 -> m47_1311  [key=0, style=solid];
m47_1310 -> m47_94  [key=2, style=dotted];
m47_1310 -> m47_810  [key=2, style=dotted];
m47_1312 -> m47_1308  [key=0, style=bold, color=blue];
m47_1320 -> m47_1321  [key=0, style=solid];
m47_1323 -> m47_60  [key=2, style=dotted];
m47_1323 -> m47_1324  [key=0, style=solid];
m47_1321 -> m47_56  [key=2, style=dotted];
m47_1321 -> m47_57  [key=2, style=dotted];
m47_1321 -> m47_1323  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1321 -> m47_1322  [key=0, style=solid];
m47_1322 -> m47_1323  [key=0, style=solid];
m47_1322 -> m47_1325  [key=2, style=dotted];
m47_1322 -> m47_810  [key=2, style=dotted];
m47_1324 -> m47_1320  [key=0, style=bold, color=blue];
m47_652 -> m47_653  [key=0, style=solid];
m47_656 -> m47_60  [key=2, style=dotted];
m47_656 -> m47_657  [key=0, style=solid];
m47_655 -> m47_58  [key=2, style=dotted];
m47_655 -> m47_656  [key=0, style=solid];
m47_654 -> m47_56  [key=2, style=dotted];
m47_654 -> m47_57  [key=2, style=dotted];
m47_654 -> m47_656  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_654 -> m47_655  [key=0, style=solid];
m47_654 -> m47_663  [key=2, style=dotted];
m47_654 -> m47_660  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_657 -> m47_658  [key=0, style=solid];
m47_657 -> m47_659  [key=1, style=dashed, color=darkseagreen4, label=j];
m47_657 -> m47_661  [key=1, style=dashed, color=darkseagreen4, label=j];
m47_653 -> m47_654  [key=0, style=solid];
m47_653 -> m47_659  [key=1, style=dashed, color=darkseagreen4, label=i];
m47_660 -> m47_661  [key=0, style=solid];
m47_660 -> m47_150  [key=2, style=dotted];
m47_660 -> m47_664  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_659 -> m47_665  [key=1, style=dashed, color=darkseagreen4, label=total];
m47_659 -> m47_660  [key=0, style=solid];
m47_658 -> m47_659  [key=0, style=solid];
m47_658 -> m47_662  [key=0, style=solid];
m47_661 -> m47_658  [key=0, style=solid];
m47_661 -> m47_661  [key=1, style=dashed, color=darkseagreen4, label=j];
m47_662 -> m47_652  [key=0, style=bold, color=blue];
m47_2111 -> m47_2112  [key=0, style=solid];
m47_2117 -> m47_60  [key=2, style=dotted];
m47_2117 -> m47_2118  [key=0, style=solid];
m47_2117 -> m47_2164  [key=2, style=dotted];
m47_2118 -> m47_60  [key=2, style=dotted];
m47_2118 -> m47_2119  [key=0, style=solid];
m47_2120 -> m47_60  [key=2, style=dotted];
m47_2120 -> m47_2121  [key=0, style=solid];
m47_2120 -> m47_2164  [key=2, style=dotted];
m47_2121 -> m47_60  [key=2, style=dotted];
m47_2121 -> m47_2122  [key=0, style=solid];
m47_2127 -> m47_60  [key=2, style=dotted];
m47_2127 -> m47_2128  [key=0, style=solid];
m47_2127 -> m47_2165  [key=2, style=dotted];
m47_2128 -> m47_60  [key=2, style=dotted];
m47_2128 -> m47_2129  [key=0, style=solid];
m47_2130 -> m47_60  [key=2, style=dotted];
m47_2130 -> m47_2131  [key=0, style=solid];
m47_2130 -> m47_2165  [key=2, style=dotted];
m47_2131 -> m47_60  [key=2, style=dotted];
m47_2131 -> m47_2132  [key=0, style=solid];
m47_2137 -> m47_60  [key=2, style=dotted];
m47_2137 -> m47_2138  [key=0, style=solid];
m47_2138 -> m47_60  [key=2, style=dotted];
m47_2138 -> m47_2139  [key=0, style=solid];
m47_2140 -> m47_60  [key=2, style=dotted];
m47_2140 -> m47_2141  [key=0, style=solid];
m47_2141 -> m47_60  [key=2, style=dotted];
m47_2141 -> m47_2142  [key=0, style=solid];
m47_2147 -> m47_60  [key=2, style=dotted];
m47_2147 -> m47_2148  [key=0, style=solid];
m47_2147 -> m47_2165  [key=2, style=dotted];
m47_2148 -> m47_60  [key=2, style=dotted];
m47_2148 -> m47_2149  [key=0, style=solid];
m47_2150 -> m47_60  [key=2, style=dotted];
m47_2150 -> m47_2151  [key=0, style=solid];
m47_2150 -> m47_2165  [key=2, style=dotted];
m47_2151 -> m47_60  [key=2, style=dotted];
m47_2151 -> m47_2152  [key=0, style=solid];
m47_2157 -> m47_60  [key=2, style=dotted];
m47_2157 -> m47_2158  [key=0, style=solid];
m47_2157 -> m47_2164  [key=2, style=dotted];
m47_2158 -> m47_60  [key=2, style=dotted];
m47_2158 -> m47_2159  [key=0, style=solid];
m47_2160 -> m47_60  [key=2, style=dotted];
m47_2160 -> m47_2161  [key=0, style=solid];
m47_2160 -> m47_2164  [key=2, style=dotted];
m47_2161 -> m47_60  [key=2, style=dotted];
m47_2161 -> m47_2162  [key=0, style=solid];
m47_2115 -> m47_58  [key=2, style=dotted];
m47_2115 -> m47_59  [key=2, style=dotted];
m47_2115 -> m47_2116  [key=0, style=solid];
m47_2116 -> m47_58  [key=2, style=dotted];
m47_2116 -> m47_59  [key=2, style=dotted];
m47_2116 -> m47_2117  [key=0, style=solid];
m47_2119 -> m47_58  [key=2, style=dotted];
m47_2119 -> m47_59  [key=2, style=dotted];
m47_2119 -> m47_2120  [key=0, style=solid];
m47_2122 -> m47_58  [key=2, style=dotted];
m47_2122 -> m47_59  [key=2, style=dotted];
m47_2122 -> m47_2123  [key=0, style=solid];
m47_2125 -> m47_58  [key=2, style=dotted];
m47_2125 -> m47_59  [key=2, style=dotted];
m47_2125 -> m47_2126  [key=0, style=solid];
m47_2126 -> m47_58  [key=2, style=dotted];
m47_2126 -> m47_59  [key=2, style=dotted];
m47_2126 -> m47_2127  [key=0, style=solid];
m47_2129 -> m47_58  [key=2, style=dotted];
m47_2129 -> m47_59  [key=2, style=dotted];
m47_2129 -> m47_2130  [key=0, style=solid];
m47_2132 -> m47_58  [key=2, style=dotted];
m47_2132 -> m47_59  [key=2, style=dotted];
m47_2132 -> m47_2133  [key=0, style=solid];
m47_2135 -> m47_58  [key=2, style=dotted];
m47_2135 -> m47_59  [key=2, style=dotted];
m47_2135 -> m47_2136  [key=0, style=solid];
m47_2136 -> m47_58  [key=2, style=dotted];
m47_2136 -> m47_59  [key=2, style=dotted];
m47_2136 -> m47_2137  [key=0, style=solid];
m47_2139 -> m47_58  [key=2, style=dotted];
m47_2139 -> m47_59  [key=2, style=dotted];
m47_2139 -> m47_2140  [key=0, style=solid];
m47_2142 -> m47_58  [key=2, style=dotted];
m47_2142 -> m47_59  [key=2, style=dotted];
m47_2142 -> m47_2143  [key=0, style=solid];
m47_2145 -> m47_58  [key=2, style=dotted];
m47_2145 -> m47_59  [key=2, style=dotted];
m47_2145 -> m47_2146  [key=0, style=solid];
m47_2152 -> m47_58  [key=2, style=dotted];
m47_2152 -> m47_59  [key=2, style=dotted];
m47_2152 -> m47_2153  [key=0, style=solid];
m47_2155 -> m47_58  [key=2, style=dotted];
m47_2155 -> m47_59  [key=2, style=dotted];
m47_2155 -> m47_2156  [key=0, style=solid];
m47_2162 -> m47_58  [key=2, style=dotted];
m47_2162 -> m47_59  [key=2, style=dotted];
m47_2162 -> m47_2163  [key=0, style=solid];
m47_2113 -> m47_56  [key=2, style=dotted];
m47_2113 -> m47_57  [key=2, style=dotted];
m47_2113 -> m47_2117  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2113 -> m47_2118  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2113 -> m47_2120  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2113 -> m47_2121  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2113 -> m47_2115  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2113 -> m47_2116  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2113 -> m47_2119  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2113 -> m47_2122  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2113 -> m47_2114  [key=0, style=solid];
m47_2123 -> m47_56  [key=2, style=dotted];
m47_2123 -> m47_57  [key=2, style=dotted];
m47_2123 -> m47_2127  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2123 -> m47_2128  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2123 -> m47_2130  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2123 -> m47_2131  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2123 -> m47_2125  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2123 -> m47_2126  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2123 -> m47_2129  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2123 -> m47_2132  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2123 -> m47_2124  [key=0, style=solid];
m47_2133 -> m47_56  [key=2, style=dotted];
m47_2133 -> m47_57  [key=2, style=dotted];
m47_2133 -> m47_2137  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2133 -> m47_2138  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2133 -> m47_2140  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2133 -> m47_2141  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2133 -> m47_2135  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2133 -> m47_2136  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2133 -> m47_2139  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2133 -> m47_2142  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2133 -> m47_2134  [key=0, style=solid];
m47_2143 -> m47_56  [key=2, style=dotted];
m47_2143 -> m47_57  [key=2, style=dotted];
m47_2143 -> m47_2147  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2143 -> m47_2148  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2143 -> m47_2150  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2143 -> m47_2151  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2143 -> m47_2145  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2143 -> m47_2152  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2143 -> m47_2144  [key=0, style=solid];
m47_2143 -> m47_2146  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2143 -> m47_2149  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2153 -> m47_56  [key=2, style=dotted];
m47_2153 -> m47_57  [key=2, style=dotted];
m47_2153 -> m47_2157  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2153 -> m47_2158  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2153 -> m47_2160  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2153 -> m47_2161  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2153 -> m47_2155  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2153 -> m47_2162  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2153 -> m47_2154  [key=0, style=solid];
m47_2153 -> m47_2156  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2153 -> m47_2159  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2146 -> m47_2147  [key=0, style=solid];
m47_2146 -> m47_1325  [key=2, style=dotted];
m47_2149 -> m47_2150  [key=0, style=solid];
m47_2149 -> m47_1325  [key=2, style=dotted];
m47_2156 -> m47_2157  [key=0, style=solid];
m47_2156 -> m47_2166  [key=2, style=dotted];
m47_2159 -> m47_2160  [key=0, style=solid];
m47_2159 -> m47_2166  [key=2, style=dotted];
m47_2114 -> m47_2115  [key=0, style=solid];
m47_2124 -> m47_2125  [key=0, style=solid];
m47_2134 -> m47_2135  [key=0, style=solid];
m47_2144 -> m47_2145  [key=0, style=solid];
m47_2154 -> m47_2155  [key=0, style=solid];
m47_2112 -> m47_2113  [key=0, style=solid];
m47_2112 -> m47_2123  [key=1, style=dashed, color=darkseagreen4, label=json];
m47_2112 -> m47_2133  [key=1, style=dashed, color=darkseagreen4, label=json];
m47_2112 -> m47_2143  [key=1, style=dashed, color=darkseagreen4, label=json];
m47_2112 -> m47_2153  [key=1, style=dashed, color=darkseagreen4, label=json];
m47_2163 -> m47_2111  [key=0, style=bold, color=blue];
m47_1616 -> m47_1617  [key=0, style=solid];
m47_1624 -> m47_60  [key=2, style=dotted];
m47_1624 -> m47_1625  [key=0, style=solid];
m47_1621 -> m47_58  [key=2, style=dotted];
m47_1621 -> m47_59  [key=2, style=dotted];
m47_1621 -> m47_1622  [key=0, style=solid];
m47_1623 -> m47_58  [key=2, style=dotted];
m47_1623 -> m47_59  [key=2, style=dotted];
m47_1623 -> m47_1624  [key=0, style=solid];
m47_1625 -> m47_58  [key=2, style=dotted];
m47_1625 -> m47_1626  [key=0, style=solid];
m47_1625 -> m47_136  [key=2, style=dotted];
m47_1618 -> m47_56  [key=2, style=dotted];
m47_1618 -> m47_57  [key=2, style=dotted];
m47_1618 -> m47_1624  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1618 -> m47_1621  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1618 -> m47_1623  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1618 -> m47_1625  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1618 -> m47_1619  [key=0, style=solid];
m47_1620 -> m47_1621  [key=0, style=solid];
m47_1620 -> m47_1623  [key=0, style=solid];
m47_1622 -> m47_1620  [key=0, style=solid];
m47_1622 -> m47_1622  [key=1, style=dashed, color=darkseagreen4, label=i];
m47_1617 -> m47_1618  [key=0, style=solid];
m47_1619 -> m47_1620  [key=0, style=solid];
m47_1619 -> m47_1622  [key=1, style=dashed, color=darkseagreen4, label=i];
m47_1626 -> m47_1616  [key=0, style=bold, color=blue];
m47_1295 -> m47_1296  [key=0, style=solid];
m47_1297 -> m47_58  [key=2, style=dotted];
m47_1297 -> m47_1298  [key=0, style=solid];
m47_1296 -> m47_56  [key=2, style=dotted];
m47_1296 -> m47_57  [key=2, style=dotted];
m47_1296 -> m47_1297  [key=0, style=solid];
m47_1296 -> m47_1301  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1296 -> m47_1298  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1298 -> m47_1299  [key=0, style=solid];
m47_1298 -> m47_150  [key=2, style=dotted];
m47_1298 -> m47_1300  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_1299 -> m47_1295  [key=0, style=bold, color=blue];
m47_1469 -> m47_1470  [key=0, style=solid];
m47_1473 -> m47_60  [key=2, style=dotted];
m47_1473 -> m47_1474  [key=0, style=solid];
m47_1475 -> m47_60  [key=2, style=dotted];
m47_1475 -> m47_1476  [key=0, style=solid];
m47_1477 -> m47_60  [key=2, style=dotted];
m47_1477 -> m47_1478  [key=0, style=solid];
m47_1478 -> m47_60  [key=2, style=dotted];
m47_1478 -> m47_1479  [key=0, style=solid];
m47_1479 -> m47_60  [key=2, style=dotted];
m47_1479 -> m47_1480  [key=0, style=solid];
m47_1479 -> m47_1410  [key=2, style=dotted];
m47_1479 -> m47_1483  [key=2, style=dotted];
m47_1481 -> m47_60  [key=2, style=dotted];
m47_1481 -> m47_1482  [key=0, style=solid];
m47_1472 -> m47_58  [key=2, style=dotted];
m47_1472 -> m47_59  [key=2, style=dotted];
m47_1472 -> m47_1473  [key=0, style=solid];
m47_1474 -> m47_58  [key=2, style=dotted];
m47_1474 -> m47_59  [key=2, style=dotted];
m47_1474 -> m47_1475  [key=0, style=solid];
m47_1480 -> m47_58  [key=2, style=dotted];
m47_1480 -> m47_59  [key=2, style=dotted];
m47_1480 -> m47_1481  [key=0, style=solid];
m47_1471 -> m47_56  [key=2, style=dotted];
m47_1471 -> m47_57  [key=2, style=dotted];
m47_1471 -> m47_1473  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1471 -> m47_1475  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1471 -> m47_1477  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1471 -> m47_1478  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1471 -> m47_1479  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1471 -> m47_1481  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1471 -> m47_1472  [key=0, style=solid];
m47_1471 -> m47_1474  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1471 -> m47_1480  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1471 -> m47_1476  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1476 -> m47_1477  [key=0, style=solid];
m47_1476 -> m47_1325  [key=2, style=dotted];
m47_1470 -> m47_1471  [key=0, style=solid];
m47_1482 -> m47_1469  [key=0, style=bold, color=blue];
m47_940 -> m47_941  [key=0, style=solid];
m47_943 -> m47_60  [key=2, style=dotted];
m47_943 -> m47_944  [key=0, style=solid];
m47_943 -> m47_154  [key=2, style=dotted];
m47_945 -> m47_60  [key=2, style=dotted];
m47_945 -> m47_946  [key=0, style=solid];
m47_945 -> m47_154  [key=2, style=dotted];
m47_947 -> m47_60  [key=2, style=dotted];
m47_947 -> m47_948  [key=0, style=solid];
m47_947 -> m47_154  [key=2, style=dotted];
m47_949 -> m47_60  [key=2, style=dotted];
m47_949 -> m47_950  [key=0, style=solid];
m47_949 -> m47_154  [key=2, style=dotted];
m47_951 -> m47_60  [key=2, style=dotted];
m47_951 -> m47_952  [key=0, style=solid];
m47_951 -> m47_154  [key=2, style=dotted];
m47_953 -> m47_60  [key=2, style=dotted];
m47_953 -> m47_954  [key=0, style=solid];
m47_953 -> m47_154  [key=2, style=dotted];
m47_963 -> m47_60  [key=2, style=dotted];
m47_963 -> m47_964  [key=0, style=solid];
m47_963 -> m47_154  [key=2, style=dotted];
m47_942 -> m47_56  [key=2, style=dotted];
m47_942 -> m47_57  [key=2, style=dotted];
m47_942 -> m47_943  [key=0, style=solid];
m47_944 -> m47_56  [key=2, style=dotted];
m47_944 -> m47_57  [key=2, style=dotted];
m47_944 -> m47_945  [key=0, style=solid];
m47_946 -> m47_56  [key=2, style=dotted];
m47_946 -> m47_57  [key=2, style=dotted];
m47_946 -> m47_947  [key=0, style=solid];
m47_948 -> m47_56  [key=2, style=dotted];
m47_948 -> m47_57  [key=2, style=dotted];
m47_948 -> m47_949  [key=0, style=solid];
m47_950 -> m47_56  [key=2, style=dotted];
m47_950 -> m47_57  [key=2, style=dotted];
m47_950 -> m47_951  [key=0, style=solid];
m47_950 -> m47_967  [key=2, style=dotted];
m47_952 -> m47_56  [key=2, style=dotted];
m47_952 -> m47_57  [key=2, style=dotted];
m47_952 -> m47_953  [key=0, style=solid];
m47_952 -> m47_967  [key=2, style=dotted];
m47_954 -> m47_56  [key=2, style=dotted];
m47_954 -> m47_57  [key=2, style=dotted];
m47_954 -> m47_955  [key=0, style=solid];
m47_954 -> m47_968  [key=2, style=dotted];
m47_954 -> m47_970  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_956 -> m47_56  [key=2, style=dotted];
m47_956 -> m47_57  [key=2, style=dotted];
m47_956 -> m47_957  [key=0, style=solid];
m47_956 -> m47_973  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_958 -> m47_56  [key=2, style=dotted];
m47_958 -> m47_57  [key=2, style=dotted];
m47_958 -> m47_959  [key=0, style=solid];
m47_958 -> m47_976  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_960 -> m47_56  [key=2, style=dotted];
m47_960 -> m47_57  [key=2, style=dotted];
m47_960 -> m47_961  [key=0, style=solid];
m47_960 -> m47_979  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_962 -> m47_56  [key=2, style=dotted];
m47_962 -> m47_57  [key=2, style=dotted];
m47_962 -> m47_963  [key=0, style=solid];
m47_964 -> m47_56  [key=2, style=dotted];
m47_964 -> m47_57  [key=2, style=dotted];
m47_964 -> m47_965  [key=0, style=solid];
m47_964 -> m47_982  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_941 -> m47_942  [key=0, style=solid];
m47_955 -> m47_956  [key=0, style=solid];
m47_955 -> m47_150  [key=2, style=dotted];
m47_955 -> m47_969  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_957 -> m47_958  [key=0, style=solid];
m47_957 -> m47_150  [key=2, style=dotted];
m47_957 -> m47_972  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_959 -> m47_960  [key=0, style=solid];
m47_959 -> m47_150  [key=2, style=dotted];
m47_959 -> m47_975  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_961 -> m47_962  [key=0, style=solid];
m47_961 -> m47_150  [key=2, style=dotted];
m47_961 -> m47_978  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_965 -> m47_966  [key=0, style=solid];
m47_965 -> m47_150  [key=2, style=dotted];
m47_965 -> m47_981  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_966 -> m47_940  [key=0, style=bold, color=blue];
m47_751 -> m47_752  [key=0, style=solid];
m47_762 -> m47_60  [key=2, style=dotted];
m47_762 -> m47_763  [key=0, style=solid];
m47_763 -> m47_60  [key=2, style=dotted];
m47_763 -> m47_764  [key=0, style=solid];
m47_758 -> m47_58  [key=2, style=dotted];
m47_758 -> m47_758  [key=0, style=solid];
m47_758 -> m47_759  [key=0, style=solid];
m47_756 -> m47_56  [key=2, style=dotted];
m47_756 -> m47_57  [key=2, style=dotted];
m47_756 -> m47_758  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_756 -> m47_757  [key=0, style=solid];
m47_753 -> m47_762  [key=1, style=dashed, color=darkseagreen4, label=bufferPool];
m47_753 -> m47_763  [key=1, style=dashed, color=darkseagreen4, label=bufferPool];
m47_753 -> m47_754  [key=0, style=solid];
m47_753 -> m47_765  [key=2, style=dotted];
m47_753 -> m47_757  [key=1, style=dashed, color=darkseagreen4, label=bufferPool];
m47_753 -> m47_760  [key=1, style=dashed, color=darkseagreen4, label=bufferPool];
m47_755 -> m47_762  [key=0, style=solid];
m47_755 -> m47_756  [key=0, style=solid];
m47_757 -> m47_758  [key=0, style=solid];
m47_759 -> m47_760  [key=0, style=solid];
m47_759 -> m47_761  [key=0, style=solid];
m47_752 -> m47_756  [key=1, style=dashed, color=darkseagreen4, label=json];
m47_752 -> m47_753  [key=0, style=solid];
m47_752 -> m47_583  [key=2, style=dotted];
m47_754 -> m47_755  [key=0, style=solid];
m47_754 -> m47_759  [key=1, style=dashed, color=darkseagreen4, label=i];
m47_754 -> m47_761  [key=1, style=dashed, color=darkseagreen4, label=i];
m47_760 -> m47_761  [key=0, style=solid];
m47_760 -> m47_766  [key=2, style=dotted];
m47_761 -> m47_755  [key=0, style=solid];
m47_761 -> m47_761  [key=1, style=dashed, color=darkseagreen4, label=i];
m47_764 -> m47_751  [key=0, style=bold, color=blue];
m47_1303 -> m47_1304  [key=0, style=solid];
m47_1306 -> m47_60  [key=2, style=dotted];
m47_1306 -> m47_1307  [key=0, style=solid];
m47_1304 -> m47_56  [key=2, style=dotted];
m47_1304 -> m47_57  [key=2, style=dotted];
m47_1304 -> m47_1306  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1304 -> m47_1305  [key=0, style=solid];
m47_1305 -> m47_1306  [key=0, style=solid];
m47_1305 -> m47_222  [key=2, style=dotted];
m47_1305 -> m47_810  [key=2, style=dotted];
m47_1307 -> m47_1303  [key=0, style=bold, color=blue];
m47_1413 -> m47_1414  [key=0, style=solid];
m47_1417 -> m47_60  [key=2, style=dotted];
m47_1417 -> m47_1418  [key=0, style=solid];
m47_1419 -> m47_60  [key=2, style=dotted];
m47_1419 -> m47_1420  [key=0, style=solid];
m47_1421 -> m47_60  [key=2, style=dotted];
m47_1421 -> m47_1422  [key=0, style=solid];
m47_1422 -> m47_60  [key=2, style=dotted];
m47_1422 -> m47_1423  [key=0, style=solid];
m47_1423 -> m47_60  [key=2, style=dotted];
m47_1423 -> m47_1424  [key=0, style=solid];
m47_1423 -> m47_1410  [key=2, style=dotted];
m47_1423 -> m47_1411  [key=2, style=dotted];
m47_1423 -> m47_1412  [key=2, style=dotted];
m47_1425 -> m47_60  [key=2, style=dotted];
m47_1425 -> m47_1426  [key=0, style=solid];
m47_1416 -> m47_58  [key=2, style=dotted];
m47_1416 -> m47_59  [key=2, style=dotted];
m47_1416 -> m47_1417  [key=0, style=solid];
m47_1418 -> m47_58  [key=2, style=dotted];
m47_1418 -> m47_59  [key=2, style=dotted];
m47_1418 -> m47_1419  [key=0, style=solid];
m47_1424 -> m47_58  [key=2, style=dotted];
m47_1424 -> m47_59  [key=2, style=dotted];
m47_1424 -> m47_1425  [key=0, style=solid];
m47_1415 -> m47_56  [key=2, style=dotted];
m47_1415 -> m47_57  [key=2, style=dotted];
m47_1415 -> m47_1417  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1415 -> m47_1419  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1415 -> m47_1421  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1415 -> m47_1422  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1415 -> m47_1423  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1415 -> m47_1425  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1415 -> m47_1416  [key=0, style=solid];
m47_1415 -> m47_1418  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1415 -> m47_1424  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1415 -> m47_1420  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1420 -> m47_1421  [key=0, style=solid];
m47_1420 -> m47_1325  [key=2, style=dotted];
m47_1414 -> m47_1415  [key=0, style=solid];
m47_1426 -> m47_1413  [key=0, style=bold, color=blue];
m47_1015 -> m47_1016  [key=0, style=solid];
m47_1019 -> m47_60  [key=2, style=dotted];
m47_1019 -> m47_1020  [key=0, style=solid];
m47_1020 -> m47_60  [key=2, style=dotted];
m47_1020 -> m47_1021  [key=0, style=solid];
m47_1023 -> m47_60  [key=2, style=dotted];
m47_1023 -> m47_1024  [key=0, style=solid];
m47_1024 -> m47_60  [key=2, style=dotted];
m47_1024 -> m47_1025  [key=0, style=solid];
m47_1027 -> m47_60  [key=2, style=dotted];
m47_1027 -> m47_1028  [key=0, style=solid];
m47_1028 -> m47_60  [key=2, style=dotted];
m47_1028 -> m47_1029  [key=0, style=solid];
m47_1031 -> m47_60  [key=2, style=dotted];
m47_1031 -> m47_1032  [key=0, style=solid];
m47_1032 -> m47_60  [key=2, style=dotted];
m47_1032 -> m47_1033  [key=0, style=solid];
m47_1037 -> m47_60  [key=2, style=dotted];
m47_1037 -> m47_1038  [key=0, style=solid];
m47_1038 -> m47_60  [key=2, style=dotted];
m47_1038 -> m47_1039  [key=0, style=solid];
m47_1018 -> m47_58  [key=2, style=dotted];
m47_1018 -> m47_59  [key=2, style=dotted];
m47_1018 -> m47_1019  [key=0, style=solid];
m47_1022 -> m47_58  [key=2, style=dotted];
m47_1022 -> m47_59  [key=2, style=dotted];
m47_1022 -> m47_1023  [key=0, style=solid];
m47_1026 -> m47_58  [key=2, style=dotted];
m47_1026 -> m47_59  [key=2, style=dotted];
m47_1026 -> m47_1027  [key=0, style=solid];
m47_1030 -> m47_58  [key=2, style=dotted];
m47_1030 -> m47_59  [key=2, style=dotted];
m47_1030 -> m47_1031  [key=0, style=solid];
m47_1036 -> m47_58  [key=2, style=dotted];
m47_1036 -> m47_59  [key=2, style=dotted];
m47_1036 -> m47_1037  [key=0, style=solid];
m47_1040 -> m47_58  [key=2, style=dotted];
m47_1040 -> m47_1041  [key=0, style=solid];
m47_1040 -> m47_136  [key=2, style=dotted];
m47_1017 -> m47_56  [key=2, style=dotted];
m47_1017 -> m47_57  [key=2, style=dotted];
m47_1017 -> m47_1019  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1017 -> m47_1020  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1017 -> m47_1018  [key=0, style=solid];
m47_1021 -> m47_56  [key=2, style=dotted];
m47_1021 -> m47_57  [key=2, style=dotted];
m47_1021 -> m47_1023  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1021 -> m47_1024  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1021 -> m47_1022  [key=0, style=solid];
m47_1025 -> m47_56  [key=2, style=dotted];
m47_1025 -> m47_57  [key=2, style=dotted];
m47_1025 -> m47_1027  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1025 -> m47_1028  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1025 -> m47_1026  [key=0, style=solid];
m47_1029 -> m47_56  [key=2, style=dotted];
m47_1029 -> m47_57  [key=2, style=dotted];
m47_1029 -> m47_1031  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1029 -> m47_1032  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1029 -> m47_1030  [key=0, style=solid];
m47_1033 -> m47_56  [key=2, style=dotted];
m47_1033 -> m47_57  [key=2, style=dotted];
m47_1033 -> m47_1045  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1033 -> m47_1034  [key=0, style=solid];
m47_1035 -> m47_56  [key=2, style=dotted];
m47_1035 -> m47_57  [key=2, style=dotted];
m47_1035 -> m47_1037  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1035 -> m47_1038  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1035 -> m47_1036  [key=0, style=solid];
m47_1039 -> m47_56  [key=2, style=dotted];
m47_1039 -> m47_57  [key=2, style=dotted];
m47_1039 -> m47_1040  [key=0, style=solid];
m47_1041 -> m47_56  [key=2, style=dotted];
m47_1041 -> m47_57  [key=2, style=dotted];
m47_1041 -> m47_1048  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1041 -> m47_1042  [key=0, style=solid];
m47_1016 -> m47_1017  [key=0, style=solid];
m47_1034 -> m47_1035  [key=0, style=solid];
m47_1034 -> m47_1044  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_1034 -> m47_150  [key=2, style=dotted];
m47_1042 -> m47_1047  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_1042 -> m47_1043  [key=0, style=solid];
m47_1042 -> m47_150  [key=2, style=dotted];
m47_1043 -> m47_1015  [key=0, style=bold, color=blue];
m47_226 -> m47_227  [key=0, style=solid];
m47_230 -> m47_60  [key=2, style=dotted];
m47_230 -> m47_231  [key=0, style=solid];
m47_232 -> m47_60  [key=2, style=dotted];
m47_232 -> m47_233  [key=0, style=solid];
m47_234 -> m47_60  [key=2, style=dotted];
m47_234 -> m47_235  [key=0, style=solid];
m47_236 -> m47_60  [key=2, style=dotted];
m47_236 -> m47_237  [key=0, style=solid];
m47_229 -> m47_58  [key=2, style=dotted];
m47_229 -> m47_59  [key=2, style=dotted];
m47_229 -> m47_230  [key=0, style=solid];
m47_231 -> m47_58  [key=2, style=dotted];
m47_231 -> m47_59  [key=2, style=dotted];
m47_231 -> m47_232  [key=0, style=solid];
m47_233 -> m47_58  [key=2, style=dotted];
m47_233 -> m47_59  [key=2, style=dotted];
m47_233 -> m47_234  [key=0, style=solid];
m47_235 -> m47_58  [key=2, style=dotted];
m47_235 -> m47_59  [key=2, style=dotted];
m47_235 -> m47_236  [key=0, style=solid];
m47_228 -> m47_56  [key=2, style=dotted];
m47_228 -> m47_57  [key=2, style=dotted];
m47_228 -> m47_230  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_228 -> m47_232  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_228 -> m47_234  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_228 -> m47_236  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_228 -> m47_229  [key=0, style=solid];
m47_228 -> m47_231  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_228 -> m47_233  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_228 -> m47_235  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_228 -> m47_240  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_228 -> m47_237  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_237 -> m47_238  [key=0, style=solid];
m47_237 -> m47_150  [key=2, style=dotted];
m47_237 -> m47_239  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_227 -> m47_228  [key=0, style=solid];
m47_238 -> m47_226  [key=0, style=bold, color=blue];
m47_2070 -> m47_2071  [key=0, style=solid];
m47_2075 -> m47_60  [key=2, style=dotted];
m47_2075 -> m47_2076  [key=0, style=solid];
m47_2077 -> m47_60  [key=2, style=dotted];
m47_2077 -> m47_2078  [key=0, style=solid];
m47_2078 -> m47_60  [key=2, style=dotted];
m47_2078 -> m47_2079  [key=0, style=solid];
m47_2080 -> m47_60  [key=2, style=dotted];
m47_2080 -> m47_2081  [key=0, style=solid];
m47_2081 -> m47_60  [key=2, style=dotted];
m47_2081 -> m47_2082  [key=0, style=solid];
m47_2083 -> m47_60  [key=2, style=dotted];
m47_2083 -> m47_2084  [key=0, style=solid];
m47_2084 -> m47_60  [key=2, style=dotted];
m47_2084 -> m47_2085  [key=0, style=solid];
m47_2086 -> m47_60  [key=2, style=dotted];
m47_2086 -> m47_2087  [key=0, style=solid];
m47_2087 -> m47_60  [key=2, style=dotted];
m47_2087 -> m47_2088  [key=0, style=solid];
m47_2089 -> m47_60  [key=2, style=dotted];
m47_2089 -> m47_2090  [key=0, style=solid];
m47_2090 -> m47_60  [key=2, style=dotted];
m47_2090 -> m47_2091  [key=0, style=solid];
m47_2092 -> m47_60  [key=2, style=dotted];
m47_2092 -> m47_2093  [key=0, style=solid];
m47_2093 -> m47_60  [key=2, style=dotted];
m47_2093 -> m47_2094  [key=0, style=solid];
m47_2095 -> m47_60  [key=2, style=dotted];
m47_2095 -> m47_2096  [key=0, style=solid];
m47_2096 -> m47_60  [key=2, style=dotted];
m47_2096 -> m47_2097  [key=0, style=solid];
m47_2098 -> m47_60  [key=2, style=dotted];
m47_2098 -> m47_2099  [key=0, style=solid];
m47_2099 -> m47_60  [key=2, style=dotted];
m47_2099 -> m47_2100  [key=0, style=solid];
m47_2101 -> m47_60  [key=2, style=dotted];
m47_2101 -> m47_2102  [key=0, style=solid];
m47_2102 -> m47_60  [key=2, style=dotted];
m47_2102 -> m47_2103  [key=0, style=solid];
m47_2104 -> m47_60  [key=2, style=dotted];
m47_2104 -> m47_2105  [key=0, style=solid];
m47_2105 -> m47_60  [key=2, style=dotted];
m47_2105 -> m47_2106  [key=0, style=solid];
m47_2107 -> m47_60  [key=2, style=dotted];
m47_2107 -> m47_2108  [key=0, style=solid];
m47_2108 -> m47_60  [key=2, style=dotted];
m47_2108 -> m47_2109  [key=0, style=solid];
m47_2073 -> m47_58  [key=2, style=dotted];
m47_2073 -> m47_59  [key=2, style=dotted];
m47_2073 -> m47_2074  [key=0, style=solid];
m47_2074 -> m47_58  [key=2, style=dotted];
m47_2074 -> m47_59  [key=2, style=dotted];
m47_2074 -> m47_2075  [key=0, style=solid];
m47_2076 -> m47_58  [key=2, style=dotted];
m47_2076 -> m47_59  [key=2, style=dotted];
m47_2076 -> m47_2077  [key=0, style=solid];
m47_2079 -> m47_58  [key=2, style=dotted];
m47_2079 -> m47_59  [key=2, style=dotted];
m47_2079 -> m47_2080  [key=0, style=solid];
m47_2082 -> m47_58  [key=2, style=dotted];
m47_2082 -> m47_59  [key=2, style=dotted];
m47_2082 -> m47_2083  [key=0, style=solid];
m47_2085 -> m47_58  [key=2, style=dotted];
m47_2085 -> m47_59  [key=2, style=dotted];
m47_2085 -> m47_2086  [key=0, style=solid];
m47_2088 -> m47_58  [key=2, style=dotted];
m47_2088 -> m47_59  [key=2, style=dotted];
m47_2088 -> m47_2089  [key=0, style=solid];
m47_2091 -> m47_58  [key=2, style=dotted];
m47_2091 -> m47_59  [key=2, style=dotted];
m47_2091 -> m47_2092  [key=0, style=solid];
m47_2094 -> m47_58  [key=2, style=dotted];
m47_2094 -> m47_59  [key=2, style=dotted];
m47_2094 -> m47_2095  [key=0, style=solid];
m47_2097 -> m47_58  [key=2, style=dotted];
m47_2097 -> m47_59  [key=2, style=dotted];
m47_2097 -> m47_2098  [key=0, style=solid];
m47_2100 -> m47_58  [key=2, style=dotted];
m47_2100 -> m47_59  [key=2, style=dotted];
m47_2100 -> m47_2101  [key=0, style=solid];
m47_2103 -> m47_58  [key=2, style=dotted];
m47_2103 -> m47_59  [key=2, style=dotted];
m47_2103 -> m47_2104  [key=0, style=solid];
m47_2106 -> m47_58  [key=2, style=dotted];
m47_2106 -> m47_59  [key=2, style=dotted];
m47_2106 -> m47_2107  [key=0, style=solid];
m47_2109 -> m47_58  [key=2, style=dotted];
m47_2109 -> m47_59  [key=2, style=dotted];
m47_2109 -> m47_2110  [key=0, style=solid];
m47_2072 -> m47_56  [key=2, style=dotted];
m47_2072 -> m47_2075  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2072 -> m47_2077  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2072 -> m47_2078  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2072 -> m47_2080  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2072 -> m47_2081  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2072 -> m47_2083  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2072 -> m47_2084  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2072 -> m47_2086  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2072 -> m47_2087  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2072 -> m47_2089  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2072 -> m47_2090  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2072 -> m47_2092  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2072 -> m47_2093  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2072 -> m47_2095  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2072 -> m47_2096  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2072 -> m47_2098  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2072 -> m47_2099  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2072 -> m47_2101  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2072 -> m47_2102  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2072 -> m47_2104  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2072 -> m47_2105  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2072 -> m47_2107  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2072 -> m47_2108  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2072 -> m47_2073  [key=0, style=solid];
m47_2072 -> m47_2074  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2072 -> m47_2076  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2072 -> m47_2079  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2072 -> m47_2082  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2072 -> m47_2085  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2072 -> m47_2088  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2072 -> m47_2091  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2072 -> m47_2094  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2072 -> m47_2097  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2072 -> m47_2100  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2072 -> m47_2103  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2072 -> m47_2106  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2072 -> m47_2109  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2072 -> m47_336  [key=2, style=dotted];
m47_2072 -> m47_374  [key=2, style=dotted];
m47_2072 -> m47_375  [key=2, style=dotted];
m47_2071 -> m47_2072  [key=0, style=solid];
m47_2110 -> m47_2070  [key=0, style=bold, color=blue];
m47_642 -> m47_643  [key=0, style=solid];
m47_650 -> m47_60  [key=2, style=dotted];
m47_650 -> m47_651  [key=0, style=solid];
m47_647 -> m47_58  [key=2, style=dotted];
m47_647 -> m47_648  [key=0, style=solid];
m47_649 -> m47_58  [key=2, style=dotted];
m47_649 -> m47_650  [key=0, style=solid];
m47_644 -> m47_56  [key=2, style=dotted];
m47_644 -> m47_57  [key=2, style=dotted];
m47_644 -> m47_650  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_644 -> m47_647  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_644 -> m47_649  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_644 -> m47_645  [key=0, style=solid];
m47_646 -> m47_647  [key=0, style=solid];
m47_646 -> m47_649  [key=0, style=solid];
m47_648 -> m47_646  [key=0, style=solid];
m47_648 -> m47_648  [key=1, style=dashed, color=darkseagreen4, label=i];
m47_643 -> m47_644  [key=0, style=solid];
m47_645 -> m47_646  [key=0, style=solid];
m47_645 -> m47_648  [key=1, style=dashed, color=darkseagreen4, label=i];
m47_651 -> m47_642  [key=0, style=bold, color=blue];
m47_1453 -> m47_1454  [key=0, style=solid];
m47_1457 -> m47_60  [key=2, style=dotted];
m47_1457 -> m47_1458  [key=0, style=solid];
m47_1459 -> m47_60  [key=2, style=dotted];
m47_1459 -> m47_1460  [key=0, style=solid];
m47_1461 -> m47_60  [key=2, style=dotted];
m47_1461 -> m47_1462  [key=0, style=solid];
m47_1462 -> m47_60  [key=2, style=dotted];
m47_1462 -> m47_1463  [key=0, style=solid];
m47_1463 -> m47_60  [key=2, style=dotted];
m47_1463 -> m47_1464  [key=0, style=solid];
m47_1463 -> m47_1410  [key=2, style=dotted];
m47_1463 -> m47_1411  [key=2, style=dotted];
m47_1463 -> m47_1412  [key=2, style=dotted];
m47_1463 -> m47_1467  [key=2, style=dotted];
m47_1463 -> m47_1468  [key=2, style=dotted];
m47_1465 -> m47_60  [key=2, style=dotted];
m47_1465 -> m47_1466  [key=0, style=solid];
m47_1456 -> m47_58  [key=2, style=dotted];
m47_1456 -> m47_59  [key=2, style=dotted];
m47_1456 -> m47_1457  [key=0, style=solid];
m47_1458 -> m47_58  [key=2, style=dotted];
m47_1458 -> m47_59  [key=2, style=dotted];
m47_1458 -> m47_1459  [key=0, style=solid];
m47_1464 -> m47_58  [key=2, style=dotted];
m47_1464 -> m47_59  [key=2, style=dotted];
m47_1464 -> m47_1465  [key=0, style=solid];
m47_1455 -> m47_56  [key=2, style=dotted];
m47_1455 -> m47_57  [key=2, style=dotted];
m47_1455 -> m47_1457  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1455 -> m47_1459  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1455 -> m47_1461  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1455 -> m47_1462  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1455 -> m47_1463  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1455 -> m47_1465  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1455 -> m47_1456  [key=0, style=solid];
m47_1455 -> m47_1458  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1455 -> m47_1464  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1455 -> m47_1460  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1460 -> m47_1461  [key=0, style=solid];
m47_1460 -> m47_1325  [key=2, style=dotted];
m47_1454 -> m47_1455  [key=0, style=solid];
m47_1466 -> m47_1453  [key=0, style=bold, color=blue];
m47_910 -> m47_911  [key=0, style=solid];
m47_914 -> m47_60  [key=2, style=dotted];
m47_914 -> m47_915  [key=0, style=solid];
m47_916 -> m47_60  [key=2, style=dotted];
m47_916 -> m47_917  [key=0, style=solid];
m47_917 -> m47_60  [key=2, style=dotted];
m47_917 -> m47_918  [key=0, style=solid];
m47_919 -> m47_60  [key=2, style=dotted];
m47_919 -> m47_920  [key=0, style=solid];
m47_920 -> m47_60  [key=2, style=dotted];
m47_920 -> m47_921  [key=0, style=solid];
m47_922 -> m47_60  [key=2, style=dotted];
m47_922 -> m47_923  [key=0, style=solid];
m47_923 -> m47_60  [key=2, style=dotted];
m47_923 -> m47_924  [key=0, style=solid];
m47_924 -> m47_60  [key=2, style=dotted];
m47_924 -> m47_925  [key=0, style=solid];
m47_925 -> m47_60  [key=2, style=dotted];
m47_925 -> m47_926  [key=0, style=solid];
m47_927 -> m47_60  [key=2, style=dotted];
m47_927 -> m47_928  [key=0, style=solid];
m47_928 -> m47_60  [key=2, style=dotted];
m47_928 -> m47_929  [key=0, style=solid];
m47_913 -> m47_56  [key=2, style=dotted];
m47_913 -> m47_914  [key=0, style=solid];
m47_913 -> m47_916  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_913 -> m47_917  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_913 -> m47_919  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_913 -> m47_920  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_913 -> m47_922  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_913 -> m47_923  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_913 -> m47_924  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_913 -> m47_925  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_913 -> m47_927  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_913 -> m47_928  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_913 -> m47_915  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_913 -> m47_918  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_913 -> m47_921  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_913 -> m47_926  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m47_912 -> m47_57  [key=2, style=dotted];
m47_912 -> m47_913  [key=0, style=solid];
m47_915 -> m47_916  [key=0, style=solid];
m47_915 -> m47_356  [key=2, style=dotted];
m47_918 -> m47_919  [key=0, style=solid];
m47_918 -> m47_356  [key=2, style=dotted];
m47_921 -> m47_922  [key=0, style=solid];
m47_921 -> m47_356  [key=2, style=dotted];
m47_926 -> m47_927  [key=0, style=solid];
m47_926 -> m47_356  [key=2, style=dotted];
m47_911 -> m47_912  [key=0, style=solid];
m47_929 -> m47_910  [key=0, style=bold, color=blue];
m47_1777 -> m47_1778  [key=0, style=solid];
m47_1781 -> m47_60  [key=2, style=dotted];
m47_1781 -> m47_1782  [key=0, style=solid];
m47_1783 -> m47_60  [key=2, style=dotted];
m47_1783 -> m47_1784  [key=0, style=solid];
m47_1785 -> m47_60  [key=2, style=dotted];
m47_1785 -> m47_1786  [key=0, style=solid];
m47_1787 -> m47_60  [key=2, style=dotted];
m47_1787 -> m47_1788  [key=0, style=solid];
m47_1789 -> m47_60  [key=2, style=dotted];
m47_1789 -> m47_1790  [key=0, style=solid];
m47_1791 -> m47_60  [key=2, style=dotted];
m47_1791 -> m47_1792  [key=0, style=solid];
m47_1793 -> m47_60  [key=2, style=dotted];
m47_1793 -> m47_1794  [key=0, style=solid];
m47_1795 -> m47_60  [key=2, style=dotted];
m47_1795 -> m47_1796  [key=0, style=solid];
m47_1797 -> m47_60  [key=2, style=dotted];
m47_1797 -> m47_1798  [key=0, style=solid];
m47_1780 -> m47_58  [key=2, style=dotted];
m47_1780 -> m47_59  [key=2, style=dotted];
m47_1780 -> m47_1781  [key=0, style=solid];
m47_1782 -> m47_58  [key=2, style=dotted];
m47_1782 -> m47_59  [key=2, style=dotted];
m47_1782 -> m47_1783  [key=0, style=solid];
m47_1784 -> m47_58  [key=2, style=dotted];
m47_1784 -> m47_59  [key=2, style=dotted];
m47_1784 -> m47_1785  [key=0, style=solid];
m47_1786 -> m47_58  [key=2, style=dotted];
m47_1786 -> m47_59  [key=2, style=dotted];
m47_1786 -> m47_1787  [key=0, style=solid];
m47_1788 -> m47_58  [key=2, style=dotted];
m47_1788 -> m47_59  [key=2, style=dotted];
m47_1788 -> m47_1789  [key=0, style=solid];
m47_1790 -> m47_58  [key=2, style=dotted];
m47_1790 -> m47_59  [key=2, style=dotted];
m47_1790 -> m47_1791  [key=0, style=solid];
m47_1792 -> m47_58  [key=2, style=dotted];
m47_1792 -> m47_59  [key=2, style=dotted];
m47_1792 -> m47_1793  [key=0, style=solid];
m47_1794 -> m47_58  [key=2, style=dotted];
m47_1794 -> m47_59  [key=2, style=dotted];
m47_1794 -> m47_1795  [key=0, style=solid];
m47_1796 -> m47_58  [key=2, style=dotted];
m47_1796 -> m47_59  [key=2, style=dotted];
m47_1796 -> m47_1797  [key=0, style=solid];
m47_1798 -> m47_58  [key=2, style=dotted];
m47_1798 -> m47_1799  [key=0, style=solid];
m47_1798 -> m47_136  [key=2, style=dotted];
m47_1779 -> m47_56  [key=2, style=dotted];
m47_1779 -> m47_1781  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1779 -> m47_1783  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1779 -> m47_1785  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1779 -> m47_1787  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1779 -> m47_1789  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1779 -> m47_1791  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1779 -> m47_1793  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1779 -> m47_1795  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1779 -> m47_1797  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1779 -> m47_1780  [key=0, style=solid];
m47_1779 -> m47_1782  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1779 -> m47_1784  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1779 -> m47_1786  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1779 -> m47_1788  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1779 -> m47_1790  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1779 -> m47_1792  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1779 -> m47_1794  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1779 -> m47_1796  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1779 -> m47_1798  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1779 -> m47_336  [key=2, style=dotted];
m47_1779 -> m47_374  [key=2, style=dotted];
m47_1779 -> m47_375  [key=2, style=dotted];
m47_1778 -> m47_1779  [key=0, style=solid];
m47_1799 -> m47_1777  [key=0, style=bold, color=blue];
m47_1548 -> m47_1549  [key=0, style=solid];
m47_1549 -> m47_56  [key=2, style=dotted];
m47_1549 -> m47_57  [key=2, style=dotted];
m47_1549 -> m47_1553  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1549 -> m47_1550  [key=0, style=solid];
m47_1550 -> m47_1552  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_1550 -> m47_1551  [key=0, style=solid];
m47_1550 -> m47_150  [key=2, style=dotted];
m47_1551 -> m47_1548  [key=0, style=bold, color=blue];
m47_1135 -> m47_1136  [key=0, style=solid];
m47_1139 -> m47_60  [key=2, style=dotted];
m47_1139 -> m47_1140  [key=0, style=solid];
m47_1141 -> m47_60  [key=2, style=dotted];
m47_1141 -> m47_1142  [key=0, style=solid];
m47_1143 -> m47_60  [key=2, style=dotted];
m47_1143 -> m47_1144  [key=0, style=solid];
m47_1143 -> m47_1147  [key=2, style=dotted];
m47_1143 -> m47_1148  [key=2, style=dotted];
m47_1145 -> m47_60  [key=2, style=dotted];
m47_1145 -> m47_1146  [key=0, style=solid];
m47_1138 -> m47_58  [key=2, style=dotted];
m47_1138 -> m47_1139  [key=0, style=solid];
m47_1140 -> m47_58  [key=2, style=dotted];
m47_1140 -> m47_1141  [key=0, style=solid];
m47_1142 -> m47_58  [key=2, style=dotted];
m47_1142 -> m47_1143  [key=0, style=solid];
m47_1144 -> m47_58  [key=2, style=dotted];
m47_1144 -> m47_1145  [key=0, style=solid];
m47_1137 -> m47_56  [key=2, style=dotted];
m47_1137 -> m47_57  [key=2, style=dotted];
m47_1137 -> m47_1139  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1137 -> m47_1141  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1137 -> m47_1143  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1137 -> m47_1145  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1137 -> m47_1138  [key=0, style=solid];
m47_1137 -> m47_1140  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1137 -> m47_1142  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1137 -> m47_1144  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1136 -> m47_1137  [key=0, style=solid];
m47_1146 -> m47_1135  [key=0, style=bold, color=blue];
m47_113 -> m47_114  [key=0, style=solid];
m47_117 -> m47_60  [key=2, style=dotted];
m47_117 -> m47_118  [key=0, style=solid];
m47_119 -> m47_60  [key=2, style=dotted];
m47_119 -> m47_120  [key=0, style=solid];
m47_121 -> m47_60  [key=2, style=dotted];
m47_121 -> m47_122  [key=0, style=solid];
m47_123 -> m47_60  [key=2, style=dotted];
m47_123 -> m47_124  [key=0, style=solid];
m47_125 -> m47_60  [key=2, style=dotted];
m47_125 -> m47_126  [key=0, style=solid];
m47_126 -> m47_60  [key=2, style=dotted];
m47_126 -> m47_127  [key=0, style=solid];
m47_127 -> m47_60  [key=2, style=dotted];
m47_127 -> m47_128  [key=0, style=solid];
m47_127 -> m47_135  [key=2, style=dotted];
m47_129 -> m47_60  [key=2, style=dotted];
m47_129 -> m47_130  [key=0, style=solid];
m47_133 -> m47_60  [key=2, style=dotted];
m47_133 -> m47_134  [key=0, style=solid];
m47_133 -> m47_135  [key=2, style=dotted];
m47_116 -> m47_58  [key=2, style=dotted];
m47_116 -> m47_59  [key=2, style=dotted];
m47_116 -> m47_117  [key=0, style=solid];
m47_118 -> m47_58  [key=2, style=dotted];
m47_118 -> m47_59  [key=2, style=dotted];
m47_118 -> m47_119  [key=0, style=solid];
m47_120 -> m47_58  [key=2, style=dotted];
m47_120 -> m47_59  [key=2, style=dotted];
m47_120 -> m47_121  [key=0, style=solid];
m47_122 -> m47_58  [key=2, style=dotted];
m47_122 -> m47_59  [key=2, style=dotted];
m47_122 -> m47_123  [key=0, style=solid];
m47_124 -> m47_58  [key=2, style=dotted];
m47_124 -> m47_59  [key=2, style=dotted];
m47_124 -> m47_125  [key=0, style=solid];
m47_128 -> m47_58  [key=2, style=dotted];
m47_128 -> m47_59  [key=2, style=dotted];
m47_128 -> m47_129  [key=0, style=solid];
m47_130 -> m47_58  [key=2, style=dotted];
m47_130 -> m47_131  [key=0, style=solid];
m47_130 -> m47_136  [key=2, style=dotted];
m47_115 -> m47_56  [key=2, style=dotted];
m47_115 -> m47_57  [key=2, style=dotted];
m47_115 -> m47_117  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_115 -> m47_119  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_115 -> m47_121  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_115 -> m47_123  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_115 -> m47_125  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_115 -> m47_126  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_115 -> m47_127  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_115 -> m47_129  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_115 -> m47_116  [key=0, style=solid];
m47_115 -> m47_118  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_115 -> m47_120  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_115 -> m47_122  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_115 -> m47_124  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_115 -> m47_128  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_115 -> m47_130  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_132 -> m47_133  [key=0, style=solid];
m47_131 -> m47_132  [key=0, style=solid];
m47_131 -> m47_137  [key=2, style=dotted];
m47_114 -> m47_115  [key=0, style=solid];
m47_114 -> m47_131  [key=1, style=dashed, color=darkseagreen4, label=json];
m47_134 -> m47_113  [key=0, style=bold, color=blue];
m47_2225 -> m47_2226  [key=0, style=solid];
m47_2226 -> m47_2230  [key=1, style=dashed, color=darkseagreen4, label=json];
m47_2226 -> m47_2227  [key=0, style=solid];
m47_2227 -> m47_2229  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_2227 -> m47_150  [key=2, style=dotted];
m47_2227 -> m47_2228  [key=0, style=solid];
m47_2228 -> m47_2225  [key=0, style=bold, color=blue];
m47_1627 -> m47_1628  [key=0, style=solid];
m47_1631 -> m47_60  [key=2, style=dotted];
m47_1631 -> m47_1632  [key=0, style=solid];
m47_1632 -> m47_60  [key=2, style=dotted];
m47_1632 -> m47_1633  [key=0, style=solid];
m47_1634 -> m47_60  [key=2, style=dotted];
m47_1634 -> m47_1635  [key=0, style=solid];
m47_1630 -> m47_58  [key=2, style=dotted];
m47_1630 -> m47_59  [key=2, style=dotted];
m47_1630 -> m47_1631  [key=0, style=solid];
m47_1633 -> m47_58  [key=2, style=dotted];
m47_1633 -> m47_59  [key=2, style=dotted];
m47_1633 -> m47_1634  [key=0, style=solid];
m47_1629 -> m47_56  [key=2, style=dotted];
m47_1629 -> m47_57  [key=2, style=dotted];
m47_1629 -> m47_1631  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1629 -> m47_1632  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1629 -> m47_1634  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1629 -> m47_1630  [key=0, style=solid];
m47_1629 -> m47_1633  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1628 -> m47_1629  [key=0, style=solid];
m47_1635 -> m47_1627  [key=0, style=bold, color=blue];
m47_1211 -> m47_1212  [key=0, style=solid];
m47_1215 -> m47_60  [key=2, style=dotted];
m47_1215 -> m47_1216  [key=0, style=solid];
m47_1217 -> m47_60  [key=2, style=dotted];
m47_1217 -> m47_1218  [key=0, style=solid];
m47_1219 -> m47_60  [key=2, style=dotted];
m47_1219 -> m47_1220  [key=0, style=solid];
m47_1214 -> m47_58  [key=2, style=dotted];
m47_1214 -> m47_1215  [key=0, style=solid];
m47_1216 -> m47_58  [key=2, style=dotted];
m47_1216 -> m47_1217  [key=0, style=solid];
m47_1218 -> m47_58  [key=2, style=dotted];
m47_1218 -> m47_1219  [key=0, style=solid];
m47_1213 -> m47_56  [key=2, style=dotted];
m47_1213 -> m47_57  [key=2, style=dotted];
m47_1213 -> m47_1215  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1213 -> m47_1217  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1213 -> m47_1219  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1213 -> m47_1214  [key=0, style=solid];
m47_1213 -> m47_1216  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1213 -> m47_1218  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1213 -> m47_1223  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1213 -> m47_1220  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1220 -> m47_1221  [key=0, style=solid];
m47_1220 -> m47_150  [key=2, style=dotted];
m47_1220 -> m47_1222  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_1212 -> m47_1213  [key=0, style=solid];
m47_1221 -> m47_1211  [key=0, style=bold, color=blue];
m47_1663 -> m47_1664  [key=0, style=solid];
m47_1667 -> m47_60  [key=2, style=dotted];
m47_1667 -> m47_1668  [key=0, style=solid];
m47_1669 -> m47_60  [key=2, style=dotted];
m47_1669 -> m47_1670  [key=0, style=solid];
m47_1671 -> m47_60  [key=2, style=dotted];
m47_1671 -> m47_1672  [key=0, style=solid];
m47_1673 -> m47_60  [key=2, style=dotted];
m47_1673 -> m47_1674  [key=0, style=solid];
m47_1675 -> m47_60  [key=2, style=dotted];
m47_1675 -> m47_1676  [key=0, style=solid];
m47_1677 -> m47_60  [key=2, style=dotted];
m47_1677 -> m47_1678  [key=0, style=solid];
m47_1679 -> m47_60  [key=2, style=dotted];
m47_1679 -> m47_1680  [key=0, style=solid];
m47_1681 -> m47_60  [key=2, style=dotted];
m47_1681 -> m47_1682  [key=0, style=solid];
m47_1683 -> m47_60  [key=2, style=dotted];
m47_1683 -> m47_1684  [key=0, style=solid];
m47_1685 -> m47_60  [key=2, style=dotted];
m47_1685 -> m47_1686  [key=0, style=solid];
m47_1687 -> m47_60  [key=2, style=dotted];
m47_1687 -> m47_1688  [key=0, style=solid];
m47_1689 -> m47_60  [key=2, style=dotted];
m47_1689 -> m47_1690  [key=0, style=solid];
m47_1691 -> m47_60  [key=2, style=dotted];
m47_1691 -> m47_1692  [key=0, style=solid];
m47_1693 -> m47_60  [key=2, style=dotted];
m47_1693 -> m47_1694  [key=0, style=solid];
m47_1695 -> m47_60  [key=2, style=dotted];
m47_1695 -> m47_1696  [key=0, style=solid];
m47_1697 -> m47_60  [key=2, style=dotted];
m47_1697 -> m47_1698  [key=0, style=solid];
m47_1699 -> m47_60  [key=2, style=dotted];
m47_1699 -> m47_1700  [key=0, style=solid];
m47_1701 -> m47_60  [key=2, style=dotted];
m47_1701 -> m47_1702  [key=0, style=solid];
m47_1703 -> m47_60  [key=2, style=dotted];
m47_1703 -> m47_1704  [key=0, style=solid];
m47_1666 -> m47_58  [key=2, style=dotted];
m47_1666 -> m47_59  [key=2, style=dotted];
m47_1666 -> m47_1667  [key=0, style=solid];
m47_1668 -> m47_58  [key=2, style=dotted];
m47_1668 -> m47_59  [key=2, style=dotted];
m47_1668 -> m47_1669  [key=0, style=solid];
m47_1670 -> m47_58  [key=2, style=dotted];
m47_1670 -> m47_59  [key=2, style=dotted];
m47_1670 -> m47_1671  [key=0, style=solid];
m47_1672 -> m47_58  [key=2, style=dotted];
m47_1672 -> m47_59  [key=2, style=dotted];
m47_1672 -> m47_1673  [key=0, style=solid];
m47_1674 -> m47_58  [key=2, style=dotted];
m47_1674 -> m47_59  [key=2, style=dotted];
m47_1674 -> m47_1675  [key=0, style=solid];
m47_1676 -> m47_58  [key=2, style=dotted];
m47_1676 -> m47_59  [key=2, style=dotted];
m47_1676 -> m47_1677  [key=0, style=solid];
m47_1678 -> m47_58  [key=2, style=dotted];
m47_1678 -> m47_59  [key=2, style=dotted];
m47_1678 -> m47_1679  [key=0, style=solid];
m47_1680 -> m47_58  [key=2, style=dotted];
m47_1680 -> m47_59  [key=2, style=dotted];
m47_1680 -> m47_1681  [key=0, style=solid];
m47_1682 -> m47_58  [key=2, style=dotted];
m47_1682 -> m47_59  [key=2, style=dotted];
m47_1682 -> m47_1683  [key=0, style=solid];
m47_1684 -> m47_58  [key=2, style=dotted];
m47_1684 -> m47_59  [key=2, style=dotted];
m47_1684 -> m47_1685  [key=0, style=solid];
m47_1686 -> m47_58  [key=2, style=dotted];
m47_1686 -> m47_59  [key=2, style=dotted];
m47_1686 -> m47_1687  [key=0, style=solid];
m47_1688 -> m47_58  [key=2, style=dotted];
m47_1688 -> m47_59  [key=2, style=dotted];
m47_1688 -> m47_1689  [key=0, style=solid];
m47_1690 -> m47_58  [key=2, style=dotted];
m47_1690 -> m47_59  [key=2, style=dotted];
m47_1690 -> m47_1691  [key=0, style=solid];
m47_1692 -> m47_58  [key=2, style=dotted];
m47_1692 -> m47_59  [key=2, style=dotted];
m47_1692 -> m47_1693  [key=0, style=solid];
m47_1694 -> m47_58  [key=2, style=dotted];
m47_1694 -> m47_59  [key=2, style=dotted];
m47_1694 -> m47_1695  [key=0, style=solid];
m47_1696 -> m47_58  [key=2, style=dotted];
m47_1696 -> m47_59  [key=2, style=dotted];
m47_1696 -> m47_1697  [key=0, style=solid];
m47_1698 -> m47_58  [key=2, style=dotted];
m47_1698 -> m47_59  [key=2, style=dotted];
m47_1698 -> m47_1699  [key=0, style=solid];
m47_1700 -> m47_58  [key=2, style=dotted];
m47_1700 -> m47_59  [key=2, style=dotted];
m47_1700 -> m47_1701  [key=0, style=solid];
m47_1702 -> m47_58  [key=2, style=dotted];
m47_1702 -> m47_59  [key=2, style=dotted];
m47_1702 -> m47_1703  [key=0, style=solid];
m47_1704 -> m47_58  [key=2, style=dotted];
m47_1704 -> m47_1705  [key=0, style=solid];
m47_1704 -> m47_136  [key=2, style=dotted];
m47_1664 -> m47_56  [key=2, style=dotted];
m47_1664 -> m47_57  [key=2, style=dotted];
m47_1664 -> m47_1667  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1664 -> m47_1669  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1664 -> m47_1671  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1664 -> m47_1673  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1664 -> m47_1675  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1664 -> m47_1677  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1664 -> m47_1679  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1664 -> m47_1681  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1664 -> m47_1683  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1664 -> m47_1685  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1664 -> m47_1687  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1664 -> m47_1689  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1664 -> m47_1691  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1664 -> m47_1693  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1664 -> m47_1695  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1664 -> m47_1697  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1664 -> m47_1699  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1664 -> m47_1701  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1664 -> m47_1703  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1664 -> m47_1666  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1664 -> m47_1668  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1664 -> m47_1670  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1664 -> m47_1672  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1664 -> m47_1674  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1664 -> m47_1676  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1664 -> m47_1678  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1664 -> m47_1680  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1664 -> m47_1682  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1664 -> m47_1684  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1664 -> m47_1686  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1664 -> m47_1688  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1664 -> m47_1690  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1664 -> m47_1692  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1664 -> m47_1694  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1664 -> m47_1696  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1664 -> m47_1698  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1664 -> m47_1700  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1664 -> m47_1702  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1664 -> m47_1704  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1664 -> m47_1665  [key=0, style=solid];
m47_1665 -> m47_1666  [key=0, style=solid];
m47_1705 -> m47_1663  [key=0, style=bold, color=blue];
m47_2167 -> m47_2168  [key=0, style=solid];
m47_2176 -> m47_60  [key=2, style=dotted];
m47_2176 -> m47_2177  [key=0, style=solid];
m47_2181 -> m47_60  [key=2, style=dotted];
m47_2181 -> m47_2182  [key=0, style=solid];
m47_2170 -> m47_58  [key=2, style=dotted];
m47_2170 -> m47_59  [key=2, style=dotted];
m47_2170 -> m47_2171  [key=0, style=solid];
m47_2175 -> m47_58  [key=2, style=dotted];
m47_2175 -> m47_59  [key=2, style=dotted];
m47_2175 -> m47_2176  [key=0, style=solid];
m47_2180 -> m47_58  [key=2, style=dotted];
m47_2180 -> m47_59  [key=2, style=dotted];
m47_2180 -> m47_2181  [key=0, style=solid];
m47_2169 -> m47_56  [key=2, style=dotted];
m47_2169 -> m47_2176  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_2169 -> m47_2181  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_2169 -> m47_2170  [key=0, style=solid];
m47_2169 -> m47_2190  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_2169 -> m47_2193  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_2169 -> m47_2175  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_2169 -> m47_2196  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_2169 -> m47_2180  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_2169 -> m47_2199  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_2169 -> m47_2202  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_2169 -> m47_2205  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_2169 -> m47_2172  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_2169 -> m47_2173  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_2169 -> m47_2178  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_2169 -> m47_2183  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_2169 -> m47_2184  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_2169 -> m47_2185  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_2168 -> m47_57  [key=2, style=dotted];
m47_2168 -> m47_2169  [key=0, style=solid];
m47_2168 -> m47_2188  [key=2, style=dotted];
m47_2168 -> m47_2171  [key=1, style=dashed, color=darkseagreen4, label=toggleReaderError];
m47_2168 -> m47_2174  [key=1, style=dashed, color=darkseagreen4, label=toggleReaderError];
m47_2168 -> m47_2177  [key=1, style=dashed, color=darkseagreen4, label=toggleReaderError];
m47_2168 -> m47_2179  [key=1, style=dashed, color=darkseagreen4, label=toggleReaderError];
m47_2168 -> m47_2182  [key=1, style=dashed, color=darkseagreen4, label=toggleReaderError];
m47_2168 -> m47_2186  [key=1, style=dashed, color=darkseagreen4, label=toggleReaderError];
m47_2177 -> m47_2178  [key=0, style=solid];
m47_2182 -> m47_2183  [key=0, style=solid];
m47_2171 -> m47_2172  [key=0, style=solid];
m47_2174 -> m47_2175  [key=0, style=solid];
m47_2179 -> m47_2180  [key=0, style=solid];
m47_2172 -> m47_2189  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_2172 -> m47_2173  [key=0, style=solid];
m47_2172 -> m47_150  [key=2, style=dotted];
m47_2173 -> m47_2192  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_2173 -> m47_2174  [key=0, style=solid];
m47_2173 -> m47_150  [key=2, style=dotted];
m47_2178 -> m47_2195  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_2178 -> m47_2179  [key=0, style=solid];
m47_2178 -> m47_150  [key=2, style=dotted];
m47_2183 -> m47_2198  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_2183 -> m47_2184  [key=0, style=solid];
m47_2183 -> m47_150  [key=2, style=dotted];
m47_2184 -> m47_2201  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_2184 -> m47_2185  [key=0, style=solid];
m47_2184 -> m47_150  [key=2, style=dotted];
m47_2185 -> m47_2204  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_2185 -> m47_2186  [key=0, style=solid];
m47_2185 -> m47_150  [key=2, style=dotted];
m47_2186 -> m47_2187  [key=0, style=solid];
m47_2187 -> m47_2167  [key=0, style=bold, color=blue];
m47_1439 -> m47_1440  [key=0, style=solid];
m47_1443 -> m47_60  [key=2, style=dotted];
m47_1443 -> m47_1444  [key=0, style=solid];
m47_1445 -> m47_60  [key=2, style=dotted];
m47_1445 -> m47_1446  [key=0, style=solid];
m47_1447 -> m47_60  [key=2, style=dotted];
m47_1447 -> m47_1448  [key=0, style=solid];
m47_1448 -> m47_60  [key=2, style=dotted];
m47_1448 -> m47_1449  [key=0, style=solid];
m47_1449 -> m47_60  [key=2, style=dotted];
m47_1449 -> m47_1450  [key=0, style=solid];
m47_1449 -> m47_1410  [key=2, style=dotted];
m47_1449 -> m47_1411  [key=2, style=dotted];
m47_1449 -> m47_1412  [key=2, style=dotted];
m47_1451 -> m47_60  [key=2, style=dotted];
m47_1451 -> m47_1452  [key=0, style=solid];
m47_1442 -> m47_58  [key=2, style=dotted];
m47_1442 -> m47_59  [key=2, style=dotted];
m47_1442 -> m47_1443  [key=0, style=solid];
m47_1444 -> m47_58  [key=2, style=dotted];
m47_1444 -> m47_59  [key=2, style=dotted];
m47_1444 -> m47_1445  [key=0, style=solid];
m47_1450 -> m47_58  [key=2, style=dotted];
m47_1450 -> m47_59  [key=2, style=dotted];
m47_1450 -> m47_1451  [key=0, style=solid];
m47_1441 -> m47_56  [key=2, style=dotted];
m47_1441 -> m47_57  [key=2, style=dotted];
m47_1441 -> m47_1443  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1441 -> m47_1445  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1441 -> m47_1447  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1441 -> m47_1448  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1441 -> m47_1449  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1441 -> m47_1451  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1441 -> m47_1442  [key=0, style=solid];
m47_1441 -> m47_1444  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1441 -> m47_1450  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1441 -> m47_1446  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1446 -> m47_1447  [key=0, style=solid];
m47_1446 -> m47_1325  [key=2, style=dotted];
m47_1440 -> m47_1441  [key=0, style=solid];
m47_1452 -> m47_1439  [key=0, style=bold, color=blue];
m47_327 -> m47_328  [key=0, style=solid];
m47_330 -> m47_58  [key=2, style=dotted];
m47_330 -> m47_331  [key=0, style=solid];
m47_329 -> m47_56  [key=2, style=dotted];
m47_329 -> m47_330  [key=0, style=solid];
m47_329 -> m47_336  [key=2, style=dotted];
m47_329 -> m47_331  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_331 -> m47_332  [key=0, style=solid];
m47_328 -> m47_329  [key=0, style=solid];
m47_328 -> m47_334  [key=2, style=dotted];
m47_328 -> m47_335  [key=2, style=dotted];
m47_332 -> m47_333  [key=0, style=solid];
m47_333 -> m47_327  [key=0, style=bold, color=blue];
m47_407 -> m47_408  [key=0, style=solid];
m47_409 -> m47_56  [key=2, style=dotted];
m47_409 -> m47_57  [key=2, style=dotted];
m47_409 -> m47_413  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_409 -> m47_410  [key=0, style=solid];
m47_408 -> m47_409  [key=0, style=solid];
m47_410 -> m47_412  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_410 -> m47_411  [key=0, style=solid];
m47_410 -> m47_150  [key=2, style=dotted];
m47_411 -> m47_407  [key=0, style=bold, color=blue];
m47_1955 -> m47_1956  [key=0, style=solid];
m47_1959 -> m47_60  [key=2, style=dotted];
m47_1959 -> m47_1960  [key=0, style=solid];
m47_1961 -> m47_60  [key=2, style=dotted];
m47_1961 -> m47_1962  [key=0, style=solid];
m47_1963 -> m47_60  [key=2, style=dotted];
m47_1963 -> m47_1964  [key=0, style=solid];
m47_1965 -> m47_60  [key=2, style=dotted];
m47_1965 -> m47_1966  [key=0, style=solid];
m47_1967 -> m47_60  [key=2, style=dotted];
m47_1967 -> m47_1968  [key=0, style=solid];
m47_1969 -> m47_60  [key=2, style=dotted];
m47_1969 -> m47_1970  [key=0, style=solid];
m47_1958 -> m47_58  [key=2, style=dotted];
m47_1958 -> m47_1959  [key=0, style=solid];
m47_1960 -> m47_58  [key=2, style=dotted];
m47_1960 -> m47_1961  [key=0, style=solid];
m47_1962 -> m47_58  [key=2, style=dotted];
m47_1962 -> m47_1963  [key=0, style=solid];
m47_1964 -> m47_58  [key=2, style=dotted];
m47_1964 -> m47_1965  [key=0, style=solid];
m47_1966 -> m47_58  [key=2, style=dotted];
m47_1966 -> m47_1967  [key=0, style=solid];
m47_1968 -> m47_58  [key=2, style=dotted];
m47_1968 -> m47_1969  [key=0, style=solid];
m47_1957 -> m47_56  [key=2, style=dotted];
m47_1957 -> m47_57  [key=2, style=dotted];
m47_1957 -> m47_1959  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1957 -> m47_1961  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1957 -> m47_1963  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1957 -> m47_1965  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1957 -> m47_1967  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1957 -> m47_1969  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1957 -> m47_1958  [key=0, style=solid];
m47_1957 -> m47_1960  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1957 -> m47_1962  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1957 -> m47_1964  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1957 -> m47_1966  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1957 -> m47_1968  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1956 -> m47_1957  [key=0, style=solid];
m47_1970 -> m47_1955  [key=0, style=bold, color=blue];
m47_155 -> m47_156  [key=0, style=solid];
m47_159 -> m47_60  [key=2, style=dotted];
m47_159 -> m47_160  [key=0, style=solid];
m47_165 -> m47_60  [key=2, style=dotted];
m47_165 -> m47_166  [key=0, style=solid];
m47_158 -> m47_58  [key=2, style=dotted];
m47_158 -> m47_59  [key=2, style=dotted];
m47_158 -> m47_159  [key=0, style=solid];
m47_164 -> m47_58  [key=2, style=dotted];
m47_164 -> m47_59  [key=2, style=dotted];
m47_164 -> m47_165  [key=0, style=solid];
m47_166 -> m47_58  [key=2, style=dotted];
m47_166 -> m47_167  [key=0, style=solid];
m47_166 -> m47_136  [key=2, style=dotted];
m47_157 -> m47_56  [key=2, style=dotted];
m47_157 -> m47_57  [key=2, style=dotted];
m47_157 -> m47_159  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_157 -> m47_165  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_157 -> m47_158  [key=0, style=solid];
m47_157 -> m47_164  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_157 -> m47_166  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_157 -> m47_160  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_157 -> m47_169  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_157 -> m47_161  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_157 -> m47_172  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_157 -> m47_162  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_157 -> m47_175  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_157 -> m47_163  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_157 -> m47_178  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_160 -> m47_161  [key=0, style=solid];
m47_160 -> m47_150  [key=2, style=dotted];
m47_160 -> m47_168  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_163 -> m47_164  [key=0, style=solid];
m47_163 -> m47_150  [key=2, style=dotted];
m47_163 -> m47_177  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_156 -> m47_157  [key=0, style=solid];
m47_161 -> m47_162  [key=0, style=solid];
m47_161 -> m47_150  [key=2, style=dotted];
m47_161 -> m47_171  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_162 -> m47_163  [key=0, style=solid];
m47_162 -> m47_150  [key=2, style=dotted];
m47_162 -> m47_174  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_167 -> m47_155  [key=0, style=bold, color=blue];
m47_61 -> m47_62  [key=0, style=solid];
m47_65 -> m47_60  [key=2, style=dotted];
m47_65 -> m47_66  [key=0, style=solid];
m47_67 -> m47_60  [key=2, style=dotted];
m47_67 -> m47_68  [key=0, style=solid];
m47_69 -> m47_60  [key=2, style=dotted];
m47_69 -> m47_70  [key=0, style=solid];
m47_71 -> m47_60  [key=2, style=dotted];
m47_71 -> m47_72  [key=0, style=solid];
m47_72 -> m47_60  [key=2, style=dotted];
m47_72 -> m47_73  [key=0, style=solid];
m47_74 -> m47_60  [key=2, style=dotted];
m47_74 -> m47_75  [key=0, style=solid];
m47_75 -> m47_60  [key=2, style=dotted];
m47_75 -> m47_76  [key=0, style=solid];
m47_77 -> m47_60  [key=2, style=dotted];
m47_77 -> m47_78  [key=0, style=solid];
m47_78 -> m47_60  [key=2, style=dotted];
m47_78 -> m47_79  [key=0, style=solid];
m47_80 -> m47_60  [key=2, style=dotted];
m47_80 -> m47_81  [key=0, style=solid];
m47_82 -> m47_60  [key=2, style=dotted];
m47_82 -> m47_83  [key=0, style=solid];
m47_64 -> m47_58  [key=2, style=dotted];
m47_64 -> m47_59  [key=2, style=dotted];
m47_64 -> m47_65  [key=0, style=solid];
m47_66 -> m47_58  [key=2, style=dotted];
m47_66 -> m47_59  [key=2, style=dotted];
m47_66 -> m47_67  [key=0, style=solid];
m47_68 -> m47_58  [key=2, style=dotted];
m47_68 -> m47_59  [key=2, style=dotted];
m47_68 -> m47_69  [key=0, style=solid];
m47_70 -> m47_58  [key=2, style=dotted];
m47_70 -> m47_59  [key=2, style=dotted];
m47_70 -> m47_71  [key=0, style=solid];
m47_73 -> m47_58  [key=2, style=dotted];
m47_73 -> m47_59  [key=2, style=dotted];
m47_73 -> m47_74  [key=0, style=solid];
m47_76 -> m47_58  [key=2, style=dotted];
m47_76 -> m47_59  [key=2, style=dotted];
m47_76 -> m47_77  [key=0, style=solid];
m47_79 -> m47_58  [key=2, style=dotted];
m47_79 -> m47_59  [key=2, style=dotted];
m47_79 -> m47_80  [key=0, style=solid];
m47_81 -> m47_58  [key=2, style=dotted];
m47_81 -> m47_59  [key=2, style=dotted];
m47_81 -> m47_82  [key=0, style=solid];
m47_63 -> m47_56  [key=2, style=dotted];
m47_63 -> m47_57  [key=2, style=dotted];
m47_63 -> m47_65  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_63 -> m47_67  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_63 -> m47_69  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_63 -> m47_71  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_63 -> m47_72  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_63 -> m47_74  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_63 -> m47_75  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_63 -> m47_77  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_63 -> m47_78  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_63 -> m47_80  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_63 -> m47_82  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_63 -> m47_64  [key=0, style=solid];
m47_63 -> m47_66  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_63 -> m47_68  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_63 -> m47_70  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_63 -> m47_73  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_63 -> m47_76  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_63 -> m47_79  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_63 -> m47_81  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_62 -> m47_63  [key=0, style=solid];
m47_83 -> m47_61  [key=0, style=bold, color=blue];
m47_1501 -> m47_1502  [key=0, style=solid];
m47_1506 -> m47_60  [key=2, style=dotted];
m47_1506 -> m47_1507  [key=0, style=solid];
m47_1508 -> m47_60  [key=2, style=dotted];
m47_1508 -> m47_1509  [key=0, style=solid];
m47_1510 -> m47_60  [key=2, style=dotted];
m47_1510 -> m47_1511  [key=0, style=solid];
m47_1511 -> m47_60  [key=2, style=dotted];
m47_1511 -> m47_1512  [key=0, style=solid];
m47_1515 -> m47_60  [key=2, style=dotted];
m47_1515 -> m47_1516  [key=0, style=solid];
m47_1513 -> m47_60  [key=2, style=dotted];
m47_1513 -> m47_1513  [key=1, style=dashed, color=darkseagreen4, label=dt];
m47_1513 -> m47_1514  [key=0, style=solid];
m47_1513 -> m47_1483  [key=2, style=dotted];
m47_1505 -> m47_58  [key=2, style=dotted];
m47_1505 -> m47_59  [key=2, style=dotted];
m47_1505 -> m47_1506  [key=0, style=solid];
m47_1507 -> m47_58  [key=2, style=dotted];
m47_1507 -> m47_59  [key=2, style=dotted];
m47_1507 -> m47_1508  [key=0, style=solid];
m47_1514 -> m47_58  [key=2, style=dotted];
m47_1514 -> m47_59  [key=2, style=dotted];
m47_1514 -> m47_1515  [key=0, style=solid];
m47_1503 -> m47_56  [key=2, style=dotted];
m47_1503 -> m47_57  [key=2, style=dotted];
m47_1503 -> m47_1506  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1503 -> m47_1508  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1503 -> m47_1510  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1503 -> m47_1511  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1503 -> m47_1515  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1503 -> m47_1505  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1503 -> m47_1507  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1503 -> m47_1514  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1503 -> m47_1504  [key=0, style=solid];
m47_1503 -> m47_1509  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1503 -> m47_1512  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1509 -> m47_1510  [key=0, style=solid];
m47_1509 -> m47_1325  [key=2, style=dotted];
m47_1512 -> m47_1513  [key=0, style=solid];
m47_1504 -> m47_1505  [key=0, style=solid];
m47_1504 -> m47_1500  [key=2, style=dotted];
m47_1502 -> m47_1503  [key=0, style=solid];
m47_1516 -> m47_1501  [key=0, style=bold, color=blue];
m47_1925 -> m47_1926  [key=0, style=solid];
m47_1929 -> m47_60  [key=2, style=dotted];
m47_1929 -> m47_1930  [key=0, style=solid];
m47_1930 -> m47_60  [key=2, style=dotted];
m47_1930 -> m47_1931  [key=0, style=solid];
m47_1928 -> m47_58  [key=2, style=dotted];
m47_1928 -> m47_59  [key=2, style=dotted];
m47_1928 -> m47_1929  [key=0, style=solid];
m47_1931 -> m47_58  [key=2, style=dotted];
m47_1931 -> m47_1932  [key=0, style=solid];
m47_1931 -> m47_136  [key=2, style=dotted];
m47_1927 -> m47_56  [key=2, style=dotted];
m47_1927 -> m47_1929  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1927 -> m47_1930  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1927 -> m47_1928  [key=0, style=solid];
m47_1927 -> m47_1931  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1927 -> m47_336  [key=2, style=dotted];
m47_1927 -> m47_374  [key=2, style=dotted];
m47_1927 -> m47_375  [key=2, style=dotted];
m47_1926 -> m47_1927  [key=0, style=solid];
m47_1932 -> m47_1925  [key=0, style=bold, color=blue];
m47_1313 -> m47_1314  [key=0, style=solid];
m47_1314 -> m47_56  [key=2, style=dotted];
m47_1314 -> m47_57  [key=2, style=dotted];
m47_1314 -> m47_1315  [key=0, style=solid];
m47_1314 -> m47_1318  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1315 -> m47_1316  [key=0, style=solid];
m47_1315 -> m47_150  [key=2, style=dotted];
m47_1315 -> m47_1317  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_1316 -> m47_1313  [key=0, style=bold, color=blue];
m47_577 -> m47_578  [key=0, style=solid];
m47_581 -> m47_60  [key=2, style=dotted];
m47_581 -> m47_582  [key=0, style=solid];
m47_579 -> m47_56  [key=2, style=dotted];
m47_579 -> m47_57  [key=2, style=dotted];
m47_579 -> m47_581  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_579 -> m47_580  [key=0, style=solid];
m47_578 -> m47_581  [key=1, style=dashed, color=darkseagreen4, label=s];
m47_578 -> m47_579  [key=0, style=solid];
m47_578 -> m47_583  [key=2, style=dotted];
m47_580 -> m47_581  [key=0, style=solid];
m47_580 -> m47_356  [key=2, style=dotted];
m47_582 -> m47_577  [key=0, style=bold, color=blue];
m47_794 -> m47_795  [key=0, style=solid];
m47_797 -> m47_56  [key=2, style=dotted];
m47_797 -> m47_57  [key=2, style=dotted];
m47_797 -> m47_798  [key=0, style=solid];
m47_797 -> m47_800  [key=2, style=dotted];
m47_797 -> m47_802  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_796 -> m47_797  [key=0, style=solid];
m47_796 -> m47_335  [key=2, style=dotted];
m47_798 -> m47_799  [key=0, style=solid];
m47_798 -> m47_150  [key=2, style=dotted];
m47_798 -> m47_801  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_795 -> m47_796  [key=0, style=solid];
m47_799 -> m47_794  [key=0, style=bold, color=blue];
m47_786 -> m47_787  [key=0, style=solid];
m47_787 -> m47_56  [key=2, style=dotted];
m47_787 -> m47_57  [key=2, style=dotted];
m47_787 -> m47_788  [key=0, style=solid];
m47_787 -> m47_791  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_788 -> m47_789  [key=0, style=solid];
m47_788 -> m47_150  [key=2, style=dotted];
m47_788 -> m47_790  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_789 -> m47_786  [key=0, style=bold, color=blue];
m47_2026 -> m47_2027  [key=0, style=solid];
m47_2029 -> m47_58  [key=2, style=dotted];
m47_2029 -> m47_59  [key=2, style=dotted];
m47_2029 -> m47_2030  [key=0, style=solid];
m47_2028 -> m47_56  [key=2, style=dotted];
m47_2028 -> m47_57  [key=2, style=dotted];
m47_2028 -> m47_2029  [key=0, style=solid];
m47_2028 -> m47_2033  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2028 -> m47_2030  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2030 -> m47_2031  [key=0, style=solid];
m47_2030 -> m47_1773  [key=2, style=dotted];
m47_2030 -> m47_2032  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_2027 -> m47_2028  [key=0, style=solid];
m47_2031 -> m47_2026  [key=0, style=bold, color=blue];
m47_357 -> m47_358  [key=0, style=solid];
m47_363 -> m47_60  [key=2, style=dotted];
m47_363 -> m47_364  [key=0, style=solid];
m47_364 -> m47_60  [key=2, style=dotted];
m47_364 -> m47_365  [key=0, style=solid];
m47_366 -> m47_60  [key=2, style=dotted];
m47_366 -> m47_367  [key=0, style=solid];
m47_368 -> m47_60  [key=2, style=dotted];
m47_368 -> m47_369  [key=0, style=solid];
m47_370 -> m47_60  [key=2, style=dotted];
m47_370 -> m47_371  [key=0, style=solid];
m47_372 -> m47_60  [key=2, style=dotted];
m47_372 -> m47_373  [key=0, style=solid];
m47_360 -> m47_59  [key=2, style=dotted];
m47_360 -> m47_361  [key=0, style=solid];
m47_360 -> m47_356  [key=2, style=dotted];
m47_361 -> m47_59  [key=2, style=dotted];
m47_361 -> m47_362  [key=0, style=solid];
m47_361 -> m47_356  [key=2, style=dotted];
m47_362 -> m47_59  [key=2, style=dotted];
m47_362 -> m47_363  [key=0, style=solid];
m47_362 -> m47_356  [key=2, style=dotted];
m47_365 -> m47_59  [key=2, style=dotted];
m47_365 -> m47_366  [key=0, style=solid];
m47_365 -> m47_356  [key=2, style=dotted];
m47_367 -> m47_59  [key=2, style=dotted];
m47_367 -> m47_368  [key=0, style=solid];
m47_367 -> m47_356  [key=2, style=dotted];
m47_369 -> m47_59  [key=2, style=dotted];
m47_369 -> m47_370  [key=0, style=solid];
m47_369 -> m47_356  [key=2, style=dotted];
m47_371 -> m47_59  [key=2, style=dotted];
m47_371 -> m47_372  [key=0, style=solid];
m47_371 -> m47_356  [key=2, style=dotted];
m47_359 -> m47_56  [key=2, style=dotted];
m47_359 -> m47_363  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_359 -> m47_364  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_359 -> m47_366  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_359 -> m47_368  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_359 -> m47_370  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_359 -> m47_372  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_359 -> m47_360  [key=0, style=solid];
m47_359 -> m47_361  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_359 -> m47_362  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_359 -> m47_365  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_359 -> m47_367  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_359 -> m47_369  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_359 -> m47_371  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_359 -> m47_336  [key=2, style=dotted];
m47_359 -> m47_374  [key=2, style=dotted];
m47_359 -> m47_375  [key=2, style=dotted];
m47_358 -> m47_359  [key=0, style=solid];
m47_373 -> m47_357  [key=0, style=bold, color=blue];
m47_1636 -> m47_1637  [key=0, style=solid];
m47_1640 -> m47_60  [key=2, style=dotted];
m47_1640 -> m47_1641  [key=0, style=solid];
m47_1641 -> m47_60  [key=2, style=dotted];
m47_1641 -> m47_1642  [key=0, style=solid];
m47_1643 -> m47_60  [key=2, style=dotted];
m47_1643 -> m47_1644  [key=0, style=solid];
m47_1639 -> m47_58  [key=2, style=dotted];
m47_1639 -> m47_59  [key=2, style=dotted];
m47_1639 -> m47_1640  [key=0, style=solid];
m47_1642 -> m47_58  [key=2, style=dotted];
m47_1642 -> m47_59  [key=2, style=dotted];
m47_1642 -> m47_1643  [key=0, style=solid];
m47_1638 -> m47_56  [key=2, style=dotted];
m47_1638 -> m47_57  [key=2, style=dotted];
m47_1638 -> m47_1640  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1638 -> m47_1641  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1638 -> m47_1643  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1638 -> m47_1639  [key=0, style=solid];
m47_1638 -> m47_1642  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1637 -> m47_1638  [key=0, style=solid];
m47_1644 -> m47_1636  [key=0, style=bold, color=blue];
m47_1517 -> m47_1518  [key=0, style=solid];
m47_1521 -> m47_60  [key=2, style=dotted];
m47_1521 -> m47_1522  [key=0, style=solid];
m47_1523 -> m47_60  [key=2, style=dotted];
m47_1523 -> m47_1524  [key=0, style=solid];
m47_1525 -> m47_60  [key=2, style=dotted];
m47_1525 -> m47_1526  [key=0, style=solid];
m47_1526 -> m47_60  [key=2, style=dotted];
m47_1526 -> m47_1527  [key=0, style=solid];
m47_1527 -> m47_60  [key=2, style=dotted];
m47_1527 -> m47_1528  [key=0, style=solid];
m47_1520 -> m47_58  [key=2, style=dotted];
m47_1520 -> m47_59  [key=2, style=dotted];
m47_1520 -> m47_1521  [key=0, style=solid];
m47_1522 -> m47_58  [key=2, style=dotted];
m47_1522 -> m47_59  [key=2, style=dotted];
m47_1522 -> m47_1523  [key=0, style=solid];
m47_1519 -> m47_56  [key=2, style=dotted];
m47_1519 -> m47_57  [key=2, style=dotted];
m47_1519 -> m47_1521  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1519 -> m47_1523  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1519 -> m47_1525  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1519 -> m47_1526  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1519 -> m47_1527  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1519 -> m47_1520  [key=0, style=solid];
m47_1519 -> m47_1522  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1519 -> m47_1524  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1524 -> m47_1525  [key=0, style=solid];
m47_1524 -> m47_222  [key=2, style=dotted];
m47_1518 -> m47_1519  [key=0, style=solid];
m47_1528 -> m47_1517  [key=0, style=bold, color=blue];
m47_1555 -> m47_1556  [key=0, style=solid];
m47_1556 -> m47_56  [key=2, style=dotted];
m47_1556 -> m47_57  [key=2, style=dotted];
m47_1556 -> m47_1560  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1556 -> m47_1557  [key=0, style=solid];
m47_1557 -> m47_1559  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_1557 -> m47_1558  [key=0, style=solid];
m47_1557 -> m47_150  [key=2, style=dotted];
m47_1558 -> m47_1555  [key=0, style=bold, color=blue];
m47_1120 -> m47_1121  [key=0, style=solid];
m47_1125 -> m47_60  [key=2, style=dotted];
m47_1125 -> m47_1126  [key=0, style=solid];
m47_1127 -> m47_60  [key=2, style=dotted];
m47_1127 -> m47_1128  [key=0, style=solid];
m47_1128 -> m47_60  [key=2, style=dotted];
m47_1128 -> m47_1129  [key=0, style=solid];
m47_1129 -> m47_60  [key=2, style=dotted];
m47_1129 -> m47_1130  [key=0, style=solid];
m47_1129 -> m47_311  [key=2, style=dotted];
m47_1131 -> m47_60  [key=2, style=dotted];
m47_1131 -> m47_1132  [key=0, style=solid];
m47_1133 -> m47_60  [key=2, style=dotted];
m47_1133 -> m47_1134  [key=0, style=solid];
m47_1124 -> m47_58  [key=2, style=dotted];
m47_1124 -> m47_1125  [key=0, style=solid];
m47_1126 -> m47_58  [key=2, style=dotted];
m47_1126 -> m47_1127  [key=0, style=solid];
m47_1130 -> m47_58  [key=2, style=dotted];
m47_1130 -> m47_59  [key=2, style=dotted];
m47_1130 -> m47_1131  [key=0, style=solid];
m47_1132 -> m47_58  [key=2, style=dotted];
m47_1132 -> m47_1133  [key=0, style=solid];
m47_1132 -> m47_136  [key=2, style=dotted];
m47_1123 -> m47_56  [key=2, style=dotted];
m47_1123 -> m47_57  [key=2, style=dotted];
m47_1123 -> m47_1125  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1123 -> m47_1127  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1123 -> m47_1128  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1123 -> m47_1129  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1123 -> m47_1131  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1123 -> m47_1133  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1123 -> m47_1124  [key=0, style=solid];
m47_1123 -> m47_1126  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1123 -> m47_1130  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1123 -> m47_1132  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1122 -> m47_1123  [key=0, style=solid];
m47_1122 -> m47_583  [key=2, style=dotted];
m47_1121 -> m47_1122  [key=0, style=solid];
m47_1134 -> m47_1120  [key=0, style=bold, color=blue];
m47_1760 -> m47_1761  [key=0, style=solid];
m47_1764 -> m47_60  [key=2, style=dotted];
m47_1764 -> m47_1765  [key=0, style=solid];
m47_1766 -> m47_60  [key=2, style=dotted];
m47_1766 -> m47_1767  [key=0, style=solid];
m47_1763 -> m47_58  [key=2, style=dotted];
m47_1763 -> m47_59  [key=2, style=dotted];
m47_1763 -> m47_1764  [key=0, style=solid];
m47_1765 -> m47_58  [key=2, style=dotted];
m47_1765 -> m47_59  [key=2, style=dotted];
m47_1765 -> m47_1766  [key=0, style=solid];
m47_1762 -> m47_56  [key=2, style=dotted];
m47_1762 -> m47_57  [key=2, style=dotted];
m47_1762 -> m47_1764  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1762 -> m47_1766  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1762 -> m47_1763  [key=0, style=solid];
m47_1762 -> m47_1765  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1761 -> m47_1762  [key=0, style=solid];
m47_1767 -> m47_1760  [key=0, style=bold, color=blue];
m47_1225 -> m47_1226  [key=0, style=solid];
m47_1231 -> m47_60  [key=2, style=dotted];
m47_1231 -> m47_1232  [key=0, style=solid];
m47_1227 -> m47_56  [key=2, style=dotted];
m47_1227 -> m47_1228  [key=0, style=solid];
m47_1226 -> m47_57  [key=2, style=dotted];
m47_1226 -> m47_1227  [key=0, style=solid];
m47_1230 -> m47_1231  [key=0, style=solid];
m47_1230 -> m47_1234  [key=2, style=dotted];
m47_1228 -> m47_1230  [key=1, style=dashed, color=darkseagreen4, label=data];
m47_1228 -> m47_1229  [key=0, style=solid];
m47_1228 -> m47_94  [key=2, style=dotted];
m47_1229 -> m47_1230  [key=0, style=solid];
m47_1229 -> m47_1233  [key=2, style=dotted];
m47_1232 -> m47_1225  [key=0, style=bold, color=blue];
m47_1340 -> m47_1341  [key=0, style=solid];
m47_1341 -> m47_56  [key=2, style=dotted];
m47_1341 -> m47_57  [key=2, style=dotted];
m47_1341 -> m47_1342  [key=0, style=solid];
m47_1341 -> m47_1345  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_1342 -> m47_1343  [key=0, style=solid];
m47_1342 -> m47_150  [key=2, style=dotted];
m47_1342 -> m47_1344  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_1343 -> m47_1340  [key=0, style=bold, color=blue];
m47_2307 -> m47_314  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTest"];
m47_2307 -> m47_315  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTest"];
m47_2307 -> m47_316  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTest"];
m47_2307 -> m47_317  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTest"];
m47_2307 -> m47_318  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTest"];
m47_2307 -> m47_319  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTest"];
m47_2307 -> m47_320  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTest"];
m47_2307 -> m47_321  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTest"];
m47_2307 -> m47_322  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTest"];
m47_2307 -> m47_323  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTest"];
m47_2307 -> m47_324  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTest"];
m47_2307 -> m47_325  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTest"];
m47_2304 -> m47_217  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2304 -> m47_220  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2304 -> m47_224  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2305 -> m47_240  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2306 -> m47_277  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2308 -> m47_382  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2309 -> m47_400  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2310 -> m47_413  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2322 -> m47_1010  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2322 -> m47_1007  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2322 -> m47_1013  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2323 -> m47_1045  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2323 -> m47_1048  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2324 -> m47_1223  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2325 -> m47_1301  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2334 -> m47_1546  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2335 -> m47_1553  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2336 -> m47_1560  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2337 -> m47_1567  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2338 -> m47_1574  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2339 -> m47_1719  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2340 -> m47_1727  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2341 -> m47_1758  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2342 -> m47_1775  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2343 -> m47_1939  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2345 -> m47_2033  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2346 -> m47_2065  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2346 -> m47_2068  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2347 -> m47_2190  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_2347 -> m47_2193  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_2347 -> m47_2196  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_2347 -> m47_2199  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_2347 -> m47_2202  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_2347 -> m47_2205  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_2312 -> m47_665  [key=1, style=dashed, color=darkseagreen4, label=total];
m47_2313 -> m47_681  [key=1, style=dashed, color=darkseagreen4, label=total];
m47_2348 -> m47_2230  [key=1, style=dashed, color=darkseagreen4, label=json];
m47_2302 -> m47_152  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_2303 -> m47_169  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_2303 -> m47_172  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_2303 -> m47_175  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_2303 -> m47_178  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m47_2311 -> m47_575  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2316 -> m47_777  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2317 -> m47_784  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2318 -> m47_791  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2319 -> m47_802  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2320 -> m47_817  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2321 -> m47_970  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2321 -> m47_973  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2321 -> m47_976  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2321 -> m47_979  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2321 -> m47_982  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2326 -> m47_1318  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2327 -> m47_1331  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2328 -> m47_1338  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2329 -> m47_1345  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2330 -> m47_1359  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2331 -> m47_1366  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2332 -> m47_1437  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2333 -> m47_1539  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2344 -> m47_1978  [key=1, style=dashed, color=darkseagreen4, label=reader];
m47_2349 -> m47_2265  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.ToggleReaderError"];
m47_2349 -> m47_2268  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.ToggleReaderError"];
m47_2349 -> m47_2270  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.ToggleReaderError"];
m48_0 -> m48_1  [key=0, style=solid];
m48_1 -> m48_0  [key=0, style=bold, color=blue];
m48_6 -> m48_7  [key=0, style=solid];
m48_7 -> m48_6  [key=0, style=bold, color=blue];
m48_11 -> m48_12  [key=0, style=solid];
m48_12 -> m48_13  [key=0, style=solid];
m48_12 -> m48_14  [key=2, style=dotted];
m48_13 -> m48_11  [key=0, style=bold, color=blue];
m48_2 -> m48_3  [key=0, style=solid];
m48_3 -> m48_2  [key=0, style=bold, color=blue];
m48_4 -> m48_5  [key=0, style=solid];
m48_5 -> m48_4  [key=0, style=bold, color=blue];
m48_8 -> m48_9  [key=0, style=solid];
m48_9 -> m48_10  [key=0, style=solid];
m48_10 -> m48_8  [key=0, style=bold, color=blue];
m48_14 -> m48_15  [key=0, style=solid];
m48_14 -> m48_16  [key=1, style=dashed, color=darkseagreen4, label=string];
m48_15 -> m48_16  [key=0, style=solid];
m48_15 -> m48_18  [key=2, style=dotted];
m48_15 -> m48_15  [key=1, style=dashed, color=darkseagreen4, label=string];
m48_16 -> m48_17  [key=0, style=solid];
m48_16 -> m48_8  [key=2, style=dotted];
m48_17 -> m48_14  [key=0, style=bold, color=blue];
m48_19 -> m48_9  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriterException"];
m49_80 -> m49_60  [key=2, style=dotted];
m49_80 -> m49_81  [key=0, style=solid];
m49_984 -> m49_985  [key=0, style=solid];
m49_987 -> m49_60  [key=2, style=dotted];
m49_987 -> m49_988  [key=0, style=solid];
m49_987 -> m49_222  [key=2, style=dotted];
m49_989 -> m49_60  [key=2, style=dotted];
m49_989 -> m49_990  [key=0, style=solid];
m49_989 -> m49_222  [key=2, style=dotted];
m49_991 -> m49_60  [key=2, style=dotted];
m49_991 -> m49_992  [key=0, style=solid];
m49_991 -> m49_222  [key=2, style=dotted];
m49_993 -> m49_60  [key=2, style=dotted];
m49_993 -> m49_994  [key=0, style=solid];
m49_993 -> m49_222  [key=2, style=dotted];
m49_1000 -> m49_60  [key=2, style=dotted];
m49_1000 -> m49_1001  [key=0, style=solid];
m49_1000 -> m49_222  [key=2, style=dotted];
m49_1002 -> m49_60  [key=2, style=dotted];
m49_1002 -> m49_1003  [key=0, style=solid];
m49_1002 -> m49_222  [key=2, style=dotted];
m49_986 -> m49_56  [key=2, style=dotted];
m49_986 -> m49_57  [key=2, style=dotted];
m49_986 -> m49_987  [key=0, style=solid];
m49_988 -> m49_56  [key=2, style=dotted];
m49_988 -> m49_57  [key=2, style=dotted];
m49_988 -> m49_989  [key=0, style=solid];
m49_990 -> m49_56  [key=2, style=dotted];
m49_990 -> m49_57  [key=2, style=dotted];
m49_990 -> m49_991  [key=0, style=solid];
m49_992 -> m49_56  [key=2, style=dotted];
m49_992 -> m49_57  [key=2, style=dotted];
m49_992 -> m49_993  [key=0, style=solid];
m49_994 -> m49_56  [key=2, style=dotted];
m49_994 -> m49_57  [key=2, style=dotted];
m49_994 -> m49_995  [key=0, style=solid];
m49_994 -> m49_1007  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_996 -> m49_56  [key=2, style=dotted];
m49_996 -> m49_57  [key=2, style=dotted];
m49_996 -> m49_1010  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_996 -> m49_997  [key=0, style=solid];
m49_996 -> m49_998  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_999 -> m49_56  [key=2, style=dotted];
m49_999 -> m49_57  [key=2, style=dotted];
m49_999 -> m49_1000  [key=0, style=solid];
m49_1001 -> m49_56  [key=2, style=dotted];
m49_1001 -> m49_57  [key=2, style=dotted];
m49_1001 -> m49_1002  [key=0, style=solid];
m49_1003 -> m49_56  [key=2, style=dotted];
m49_1003 -> m49_57  [key=2, style=dotted];
m49_1003 -> m49_1004  [key=0, style=solid];
m49_1003 -> m49_1013  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_985 -> m49_986  [key=0, style=solid];
m49_985 -> m49_941  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.JsonTextReader reader"];
m49_995 -> m49_996  [key=0, style=solid];
m49_995 -> m49_150  [key=2, style=dotted];
m49_995 -> m49_1006  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_997 -> m49_998  [key=0, style=solid];
m49_998 -> m49_999  [key=0, style=solid];
m49_998 -> m49_1009  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_998 -> m49_150  [key=2, style=dotted];
m49_1004 -> m49_1005  [key=0, style=solid];
m49_1004 -> m49_150  [key=2, style=dotted];
m49_1004 -> m49_1012  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_1005 -> m49_984  [key=0, style=bold, color=blue];
m49_1768 -> m49_1769  [key=0, style=solid];
m49_1770 -> m49_56  [key=2, style=dotted];
m49_1770 -> m49_57  [key=2, style=dotted];
m49_1770 -> m49_1775  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1770 -> m49_1771  [key=0, style=solid];
m49_1769 -> m49_1770  [key=0, style=solid];
m49_1769 -> m49_1769  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m49_1771 -> m49_1774  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_1771 -> m49_1772  [key=0, style=solid];
m49_1771 -> m49_1773  [key=2, style=dotted];
m49_1772 -> m49_1768  [key=0, style=bold, color=blue];
m49_1569 -> m49_1570  [key=0, style=solid];
m49_1570 -> m49_56  [key=2, style=dotted];
m49_1570 -> m49_57  [key=2, style=dotted];
m49_1570 -> m49_1574  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1570 -> m49_1571  [key=0, style=solid];
m49_1571 -> m49_1573  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_1571 -> m49_1572  [key=0, style=solid];
m49_1571 -> m49_150  [key=2, style=dotted];
m49_1572 -> m49_1569  [key=0, style=bold, color=blue];
m49_50 -> m49_51  [key=0, style=solid, color=green];
m49_50 -> m49_60  [key=2, style=dotted, color=green];
m49_279 -> m49_280  [key=0, style=solid];
m49_283 -> m49_60  [key=2, style=dotted];
m49_283 -> m49_284  [key=0, style=solid];
m49_285 -> m49_60  [key=2, style=dotted];
m49_285 -> m49_286  [key=0, style=solid];
m49_287 -> m49_60  [key=2, style=dotted];
m49_287 -> m49_288  [key=0, style=solid];
m49_289 -> m49_60  [key=2, style=dotted];
m49_289 -> m49_290  [key=0, style=solid];
m49_291 -> m49_60  [key=2, style=dotted];
m49_291 -> m49_292  [key=0, style=solid];
m49_293 -> m49_60  [key=2, style=dotted];
m49_293 -> m49_294  [key=0, style=solid];
m49_294 -> m49_60  [key=2, style=dotted];
m49_294 -> m49_295  [key=0, style=solid];
m49_296 -> m49_60  [key=2, style=dotted];
m49_296 -> m49_297  [key=0, style=solid];
m49_297 -> m49_60  [key=2, style=dotted];
m49_297 -> m49_298  [key=0, style=solid];
m49_282 -> m49_58  [key=2, style=dotted];
m49_282 -> m49_59  [key=2, style=dotted];
m49_282 -> m49_283  [key=0, style=solid];
m49_284 -> m49_58  [key=2, style=dotted];
m49_284 -> m49_59  [key=2, style=dotted];
m49_284 -> m49_285  [key=0, style=solid];
m49_286 -> m49_58  [key=2, style=dotted];
m49_286 -> m49_59  [key=2, style=dotted];
m49_286 -> m49_287  [key=0, style=solid];
m49_288 -> m49_58  [key=2, style=dotted];
m49_288 -> m49_59  [key=2, style=dotted];
m49_288 -> m49_289  [key=0, style=solid];
m49_290 -> m49_58  [key=2, style=dotted];
m49_290 -> m49_59  [key=2, style=dotted];
m49_290 -> m49_291  [key=0, style=solid];
m49_292 -> m49_58  [key=2, style=dotted];
m49_292 -> m49_59  [key=2, style=dotted];
m49_292 -> m49_293  [key=0, style=solid];
m49_295 -> m49_58  [key=2, style=dotted];
m49_295 -> m49_59  [key=2, style=dotted];
m49_295 -> m49_296  [key=0, style=solid];
m49_281 -> m49_56  [key=2, style=dotted];
m49_281 -> m49_57  [key=2, style=dotted];
m49_281 -> m49_283  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_281 -> m49_285  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_281 -> m49_287  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_281 -> m49_289  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_281 -> m49_291  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_281 -> m49_293  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_281 -> m49_294  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_281 -> m49_296  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_281 -> m49_297  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_281 -> m49_282  [key=0, style=solid];
m49_281 -> m49_284  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_281 -> m49_286  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_281 -> m49_288  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_281 -> m49_290  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_281 -> m49_292  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_281 -> m49_295  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_280 -> m49_281  [key=0, style=solid];
m49_280 -> m49_280  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m49_298 -> m49_279  [key=0, style=bold, color=blue];
m49_584 -> m49_585  [key=0, style=solid];
m49_600 -> m49_60  [key=2, style=dotted];
m49_600 -> m49_601  [key=0, style=solid];
m49_596 -> m49_58  [key=2, style=dotted];
m49_596 -> m49_59  [key=2, style=dotted];
m49_596 -> m49_597  [key=0, style=solid];
m49_599 -> m49_58  [key=2, style=dotted];
m49_599 -> m49_59  [key=2, style=dotted];
m49_599 -> m49_600  [key=0, style=solid];
m49_602 -> m49_58  [key=2, style=dotted];
m49_602 -> m49_59  [key=2, style=dotted];
m49_602 -> m49_603  [key=0, style=solid];
m49_603 -> m49_58  [key=2, style=dotted];
m49_603 -> m49_604  [key=0, style=solid];
m49_603 -> m49_136  [key=2, style=dotted];
m49_595 -> m49_56  [key=2, style=dotted];
m49_595 -> m49_57  [key=2, style=dotted];
m49_595 -> m49_600  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_595 -> m49_596  [key=0, style=solid];
m49_595 -> m49_599  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_595 -> m49_602  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_595 -> m49_603  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_597 -> m49_600  [key=1, style=dashed, color=darkseagreen4, label=i];
m49_597 -> m49_598  [key=0, style=solid];
m49_597 -> m49_601  [key=1, style=dashed, color=darkseagreen4, label=i];
m49_601 -> m49_601  [key=1, style=dashed, color=darkseagreen4, label=i];
m49_601 -> m49_598  [key=0, style=solid];
m49_598 -> m49_599  [key=0, style=solid];
m49_598 -> m49_602  [key=0, style=solid];
m49_598 -> m49_590  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m49_594 -> m49_595  [key=0, style=solid];
m49_594 -> m49_610  [key=2, style=dotted];
m49_585 -> m49_598  [key=1, style=dashed, color=darkseagreen4, label=valueCount];
m49_585 -> m49_585  [key=3, color=darkorchid, style=bold, label="Local variable int valueCount"];
m49_585 -> m49_586  [key=0, style=solid];
m49_585 -> m49_590  [key=1, style=dashed, color=darkseagreen4, label=valueCount];
m49_590 -> m49_590  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m49_590 -> m49_591  [key=0, style=solid];
m49_590 -> m49_593  [key=0, style=solid];
m49_586 -> m49_594  [key=1, style=dashed, color=darkseagreen4, label=sw];
m49_586 -> m49_587  [key=0, style=solid];
m49_586 -> m49_605  [key=2, style=dotted];
m49_593 -> m49_594  [key=0, style=solid];
m49_593 -> m49_48  [key=2, style=dotted];
m49_589 -> m49_590  [key=0, style=solid];
m49_589 -> m49_591  [key=1, style=dashed, color=darkseagreen4, label=i];
m49_589 -> m49_592  [key=1, style=dashed, color=darkseagreen4, label=i];
m49_592 -> m49_590  [key=0, style=solid];
m49_592 -> m49_592  [key=1, style=dashed, color=darkseagreen4, label=i];
m49_591 -> m49_592  [key=0, style=solid];
m49_591 -> m49_608  [key=2, style=dotted];
m49_587 -> m49_593  [key=1, style=dashed, color=darkseagreen4, label=writer];
m49_587 -> m49_606  [key=2, style=dotted];
m49_587 -> m49_591  [key=1, style=dashed, color=darkseagreen4, label=writer];
m49_587 -> m49_588  [key=0, style=solid];
m49_588 -> m49_589  [key=0, style=solid];
m49_588 -> m49_607  [key=2, style=dotted];
m49_604 -> m49_584  [key=0, style=bold, color=blue];
m49_1396 -> m49_1397  [key=0, style=solid];
m49_1400 -> m49_60  [key=2, style=dotted];
m49_1400 -> m49_1401  [key=0, style=solid];
m49_1402 -> m49_60  [key=2, style=dotted];
m49_1402 -> m49_1403  [key=0, style=solid];
m49_1404 -> m49_60  [key=2, style=dotted];
m49_1404 -> m49_1405  [key=0, style=solid];
m49_1405 -> m49_60  [key=2, style=dotted];
m49_1405 -> m49_1406  [key=0, style=solid];
m49_1406 -> m49_60  [key=2, style=dotted];
m49_1406 -> m49_1407  [key=0, style=solid];
m49_1406 -> m49_1410  [key=2, style=dotted];
m49_1406 -> m49_1411  [key=2, style=dotted];
m49_1406 -> m49_1412  [key=2, style=dotted];
m49_1408 -> m49_60  [key=2, style=dotted];
m49_1408 -> m49_1409  [key=0, style=solid];
m49_1399 -> m49_58  [key=2, style=dotted];
m49_1399 -> m49_59  [key=2, style=dotted];
m49_1399 -> m49_1400  [key=0, style=solid];
m49_1401 -> m49_58  [key=2, style=dotted];
m49_1401 -> m49_59  [key=2, style=dotted];
m49_1401 -> m49_1402  [key=0, style=solid];
m49_1407 -> m49_58  [key=2, style=dotted];
m49_1407 -> m49_59  [key=2, style=dotted];
m49_1407 -> m49_1408  [key=0, style=solid];
m49_1398 -> m49_56  [key=2, style=dotted];
m49_1398 -> m49_57  [key=2, style=dotted];
m49_1398 -> m49_1400  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1398 -> m49_1402  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1398 -> m49_1404  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1398 -> m49_1405  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1398 -> m49_1406  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1398 -> m49_1408  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1398 -> m49_1399  [key=0, style=solid];
m49_1398 -> m49_1401  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1398 -> m49_1407  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1398 -> m49_1403  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1403 -> m49_1404  [key=0, style=solid];
m49_1403 -> m49_1325  [key=2, style=dotted];
m49_1397 -> m49_1398  [key=0, style=solid];
m49_1397 -> m49_1397  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m49_1409 -> m49_1396  [key=0, style=bold, color=blue];
m49_43 -> m49_44  [key=0, style=solid, color=green];
m49_43 -> m49_58  [key=2, style=dotted, color=green];
m49_43 -> m49_59  [key=2, style=dotted, color=green];
m49_0 -> m49_1  [key=0, style=solid];
m49_40 -> m49_41  [key=0, style=solid, color=green];
m49_40 -> m49_60  [key=2, style=dotted, color=green];
m49_30 -> m49_40  [key=1, style=dashed, color=green, label=jsonTextReader];
m49_30 -> m49_41  [key=1, style=dashed, color=green, label=jsonTextReader];
m49_30 -> m49_42  [key=1, style=dashed, color=green, label=jsonTextReader];
m49_30 -> m49_43  [key=1, style=dashed, color=green, label=jsonTextReader];
m49_30 -> m49_44  [key=1, style=dashed, color=green, label=jsonTextReader];
m49_30 -> m49_45  [key=1, style=dashed, color=green, label=jsonTextReader];
m49_30 -> m49_46  [key=1, style=dashed, color=green, label=jsonTextReader];
m49_30 -> m49_47  [key=1, style=dashed, color=green, label=jsonTextReader];
m49_30 -> m49_48  [key=1, style=dashed, color=green, label=jsonTextReader];
m49_30 -> m49_49  [key=1, style=dashed, color=green, label=jsonTextReader];
m49_30 -> m49_50  [key=1, style=dashed, color=green, label=jsonTextReader];
m49_30 -> m49_51  [key=1, style=dashed, color=green, label=jsonTextReader];
m49_30 -> m49_52  [key=1, style=dashed, color=green, label=jsonTextReader];
m49_30 -> m49_53  [key=1, style=dashed, color=green, label=jsonTextReader];
m49_30 -> m49_54  [key=1, style=dashed, color=green, label=jsonTextReader];
m49_30 -> m49_31  [key=0, style=solid];
m49_30 -> m49_56  [key=2, style=dotted];
m49_30 -> m49_57  [key=2, style=dotted];
m49_30 -> m49_32  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_30 -> m49_33  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_30 -> m49_34  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_30 -> m49_35  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_30 -> m49_36  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_30 -> m49_37  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_30 -> m49_38  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_30 -> m49_39  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_39 -> m49_40  [key=0, style=solid, color=green];
m49_39 -> m49_58  [key=2, style=dotted];
m49_39 -> m49_59  [key=2, style=dotted];
m49_41 -> m49_42  [key=0, style=solid, color=green];
m49_41 -> m49_60  [key=2, style=dotted, color=green];
m49_42 -> m49_43  [key=0, style=solid, color=green];
m49_42 -> m49_60  [key=2, style=dotted, color=green];
m49_44 -> m49_45  [key=0, style=solid, color=green];
m49_44 -> m49_60  [key=2, style=dotted, color=green];
m49_45 -> m49_46  [key=0, style=solid, color=green];
m49_45 -> m49_60  [key=2, style=dotted, color=green];
m49_46 -> m49_47  [key=0, style=solid, color=green];
m49_46 -> m49_60  [key=2, style=dotted, color=green];
m49_47 -> m49_48  [key=0, style=solid, color=green];
m49_47 -> m49_58  [key=2, style=dotted, color=green];
m49_47 -> m49_59  [key=2, style=dotted, color=green];
m49_48 -> m49_49  [key=0, style=solid, color=green];
m49_48 -> m49_60  [key=2, style=dotted, color=green];
m49_49 -> m49_50  [key=0, style=solid, color=green];
m49_49 -> m49_60  [key=2, style=dotted, color=green];
m49_51 -> m49_52  [key=0, style=solid, color=green];
m49_51 -> m49_58  [key=2, style=dotted, color=green];
m49_51 -> m49_59  [key=2, style=dotted, color=green];
m49_52 -> m49_53  [key=0, style=solid, color=green];
m49_52 -> m49_60  [key=2, style=dotted, color=green];
m49_53 -> m49_54  [key=0, style=solid, color=green];
m49_53 -> m49_60  [key=2, style=dotted, color=green];
m49_54 -> m49_55  [key=0, style=solid, color=green];
m49_54 -> m49_60  [key=2, style=dotted, color=green];
m49_54 -> m49_37  [key=2, style=dotted];
m49_54 -> m49_56  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m49_54 -> m49_57  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m49_54 -> m49_58  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m49_54 -> m49_59  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m49_54 -> m49_61  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m49_54 -> m49_62  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m49_54 -> m49_63  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m49_54 -> m49_64  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m49_54 -> m49_65  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m49_54 -> m49_66  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m49_54 -> m49_67  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m49_54 -> m49_68  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m49_54 -> m49_69  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m49_54 -> m49_70  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m49_54 -> m49_71  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m49_54 -> m49_72  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m49_54 -> m49_73  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m49_29 -> m49_30  [key=0, style=solid];
m49_29 -> m49_52  [key=2, style=dotted];
m49_31 -> m49_58  [key=2, style=dotted];
m49_31 -> m49_59  [key=2, style=dotted];
m49_31 -> m49_32  [key=0, style=solid];
m49_31 -> m49_52  [key=2, style=dotted];
m49_32 -> m49_60  [key=2, style=dotted];
m49_32 -> m49_33  [key=0, style=solid];
m49_32 -> m49_52  [key=2, style=dotted];
m49_33 -> m49_60  [key=2, style=dotted];
m49_33 -> m49_34  [key=0, style=solid];
m49_33 -> m49_52  [key=2, style=dotted];
m49_34 -> m49_60  [key=2, style=dotted];
m49_34 -> m49_35  [key=0, style=solid];
m49_34 -> m49_52  [key=2, style=dotted];
m49_35 -> m49_58  [key=2, style=dotted];
m49_35 -> m49_59  [key=2, style=dotted];
m49_35 -> m49_36  [key=0, style=solid];
m49_35 -> m49_0  [key=0, style=bold, color=blue];
m49_36 -> m49_60  [key=2, style=dotted];
m49_36 -> m49_37  [key=0, style=solid];
m49_37 -> m49_60  [key=2, style=dotted];
m49_37 -> m49_38  [key=0, style=solid];
m49_38 -> m49_39  [key=0, style=solid];
m49_38 -> m49_60  [key=2, style=dotted];
m49_4 -> m49_60  [key=2, style=dotted];
m49_4 -> m49_5  [key=0, style=solid];
m49_4 -> m49_38  [key=2, style=dotted];
m49_5 -> m49_60  [key=2, style=dotted];
m49_5 -> m49_6  [key=0, style=solid];
m49_5 -> m49_39  [key=2, style=dotted];
m49_6 -> m49_60  [key=2, style=dotted];
m49_6 -> m49_7  [key=0, style=solid];
m49_6 -> m49_40  [key=2, style=dotted];
m49_8 -> m49_60  [key=2, style=dotted];
m49_8 -> m49_9  [key=0, style=solid];
m49_8 -> m49_42  [key=2, style=dotted];
m49_9 -> m49_60  [key=2, style=dotted];
m49_9 -> m49_10  [key=0, style=solid];
m49_9 -> m49_43  [key=2, style=dotted];
m49_10 -> m49_60  [key=2, style=dotted];
m49_10 -> m49_11  [key=0, style=solid];
m49_10 -> m49_43  [key=2, style=dotted];
m49_14 -> m49_60  [key=2, style=dotted];
m49_14 -> m49_15  [key=0, style=solid];
m49_14 -> m49_40  [key=2, style=dotted];
m49_15 -> m49_60  [key=2, style=dotted];
m49_15 -> m49_16  [key=0, style=solid];
m49_15 -> m49_45  [key=2, style=dotted];
m49_16 -> m49_60  [key=2, style=dotted];
m49_16 -> m49_17  [key=0, style=solid];
m49_16 -> m49_46  [key=2, style=dotted];
m49_18 -> m49_60  [key=2, style=dotted];
m49_18 -> m49_19  [key=0, style=solid];
m49_18 -> m49_48  [key=2, style=dotted];
m49_19 -> m49_60  [key=2, style=dotted];
m49_19 -> m49_20  [key=0, style=solid];
m49_19 -> m49_21  [key=1, style=dashed, color=darkseagreen4, label=root];
m49_19 -> m49_22  [key=1, style=dashed, color=darkseagreen4, label=root];
m49_19 -> m49_23  [key=1, style=dashed, color=darkseagreen4, label=root];
m49_19 -> m49_24  [key=1, style=dashed, color=darkseagreen4, label=root];
m49_19 -> m49_25  [key=1, style=dashed, color=darkseagreen4, label=root];
m49_19 -> m49_26  [key=1, style=dashed, color=darkseagreen4, label=root];
m49_19 -> m49_27  [key=1, style=dashed, color=darkseagreen4, label=root];
m49_19 -> m49_28  [key=1, style=dashed, color=darkseagreen4, label=root];
m49_19 -> m49_29  [key=1, style=dashed, color=darkseagreen4, label=root];
m49_19 -> m49_30  [key=1, style=dashed, color=darkseagreen4, label=root];
m49_19 -> m49_31  [key=1, style=dashed, color=darkseagreen4, label=root];
m49_19 -> m49_32  [key=1, style=dashed, color=darkseagreen4, label=root];
m49_19 -> m49_33  [key=1, style=dashed, color=darkseagreen4, label=root];
m49_19 -> m49_34  [key=1, style=dashed, color=darkseagreen4, label=root];
m49_20 -> m49_60  [key=2, style=dotted];
m49_20 -> m49_21  [key=0, style=solid];
m49_20 -> m49_49  [key=2, style=dotted];
m49_22 -> m49_60  [key=2, style=dotted];
m49_22 -> m49_23  [key=0, style=solid];
m49_22 -> m49_52  [key=2, style=dotted];
m49_23 -> m49_60  [key=2, style=dotted];
m49_23 -> m49_24  [key=0, style=solid];
m49_23 -> m49_52  [key=2, style=dotted];
m49_24 -> m49_60  [key=2, style=dotted];
m49_24 -> m49_25  [key=0, style=solid];
m49_24 -> m49_52  [key=2, style=dotted];
m49_26 -> m49_60  [key=2, style=dotted];
m49_26 -> m49_27  [key=0, style=solid];
m49_26 -> m49_52  [key=2, style=dotted];
m49_27 -> m49_60  [key=2, style=dotted];
m49_27 -> m49_28  [key=0, style=solid];
m49_27 -> m49_52  [key=2, style=dotted];
m49_28 -> m49_60  [key=2, style=dotted];
m49_28 -> m49_29  [key=0, style=solid];
m49_28 -> m49_52  [key=2, style=dotted];
m49_3 -> m49_58  [key=2, style=dotted];
m49_3 -> m49_59  [key=2, style=dotted];
m49_3 -> m49_4  [key=0, style=solid];
m49_3 -> m49_37  [key=2, style=dotted];
m49_3 -> m49_5  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m49_3 -> m49_6  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m49_3 -> m49_7  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m49_3 -> m49_8  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m49_3 -> m49_9  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m49_3 -> m49_10  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m49_3 -> m49_11  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m49_3 -> m49_12  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m49_3 -> m49_13  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m49_3 -> m49_14  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m49_3 -> m49_15  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m49_3 -> m49_16  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m49_3 -> m49_17  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m49_3 -> m49_18  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m49_3 -> m49_19  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m49_7 -> m49_58  [key=2, style=dotted];
m49_7 -> m49_59  [key=2, style=dotted];
m49_7 -> m49_8  [key=0, style=solid];
m49_7 -> m49_41  [key=2, style=dotted];
m49_13 -> m49_58  [key=2, style=dotted];
m49_13 -> m49_59  [key=2, style=dotted];
m49_13 -> m49_14  [key=0, style=solid];
m49_13 -> m49_40  [key=2, style=dotted];
m49_17 -> m49_58  [key=2, style=dotted];
m49_17 -> m49_59  [key=2, style=dotted];
m49_17 -> m49_18  [key=0, style=solid];
m49_17 -> m49_47  [key=2, style=dotted];
m49_21 -> m49_58  [key=2, style=dotted];
m49_21 -> m49_59  [key=2, style=dotted];
m49_21 -> m49_22  [key=0, style=solid];
m49_21 -> m49_50  [key=2, style=dotted];
m49_21 -> m49_51  [key=2, style=dotted];
m49_21 -> m49_52  [key=2, style=dotted];
m49_25 -> m49_58  [key=2, style=dotted];
m49_25 -> m49_59  [key=2, style=dotted];
m49_25 -> m49_26  [key=0, style=solid];
m49_25 -> m49_52  [key=2, style=dotted];
m49_2 -> m49_56  [key=2, style=dotted];
m49_2 -> m49_57  [key=2, style=dotted];
m49_2 -> m49_4  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_2 -> m49_5  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_2 -> m49_6  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_2 -> m49_8  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_2 -> m49_9  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_2 -> m49_10  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_2 -> m49_3  [key=0, style=solid];
m49_2 -> m49_7  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_12 -> m49_56  [key=2, style=dotted];
m49_12 -> m49_57  [key=2, style=dotted];
m49_12 -> m49_14  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_12 -> m49_15  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_12 -> m49_16  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_12 -> m49_18  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_12 -> m49_19  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_12 -> m49_20  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_12 -> m49_22  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_12 -> m49_23  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_12 -> m49_24  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_12 -> m49_26  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_12 -> m49_27  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_12 -> m49_28  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_12 -> m49_13  [key=0, style=solid];
m49_12 -> m49_17  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_12 -> m49_21  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_12 -> m49_25  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_12 -> m49_44  [key=2, style=dotted];
m49_11 -> m49_12  [key=0, style=solid];
m49_11 -> m49_43  [key=2, style=dotted];
m49_1 -> m49_2  [key=0, style=solid];
m49_1 -> m49_1  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m49_1 -> m49_36  [key=2, style=dotted];
m49_1 -> m49_17  [key=1, style=dashed, color=darkseagreen4, label=data];
m49_1 -> m49_34  [key=1, style=dashed, color=darkseagreen4, label=data];
m49_55 -> m49_0  [key=0, style=bold, color=blue];
m49_55 -> m49_56  [key=0, style=solid];
m49_55 -> m49_52  [key=2, style=dotted];
m49_811 -> m49_812  [key=0, style=solid];
m49_813 -> m49_59  [key=2, style=dotted];
m49_813 -> m49_814  [key=0, style=solid];
m49_813 -> m49_356  [key=2, style=dotted];
m49_812 -> m49_56  [key=2, style=dotted];
m49_812 -> m49_57  [key=2, style=dotted];
m49_812 -> m49_813  [key=0, style=solid];
m49_812 -> m49_814  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_812 -> m49_817  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_814 -> m49_815  [key=0, style=solid];
m49_814 -> m49_150  [key=2, style=dotted];
m49_814 -> m49_816  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_815 -> m49_811  [key=0, style=bold, color=blue];
m49_1753 -> m49_1754  [key=0, style=solid];
m49_1754 -> m49_56  [key=2, style=dotted];
m49_1754 -> m49_57  [key=2, style=dotted];
m49_1754 -> m49_1758  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1754 -> m49_1755  [key=0, style=solid];
m49_1755 -> m49_1757  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_1755 -> m49_1756  [key=0, style=solid];
m49_1755 -> m49_150  [key=2, style=dotted];
m49_1756 -> m49_1753  [key=0, style=bold, color=blue];
m49_1745 -> m49_1746  [key=0, style=solid];
m49_1749 -> m49_60  [key=2, style=dotted];
m49_1749 -> m49_1750  [key=0, style=solid];
m49_1751 -> m49_60  [key=2, style=dotted];
m49_1751 -> m49_1752  [key=0, style=solid];
m49_1748 -> m49_58  [key=2, style=dotted];
m49_1748 -> m49_59  [key=2, style=dotted];
m49_1748 -> m49_1749  [key=0, style=solid];
m49_1750 -> m49_58  [key=2, style=dotted];
m49_1750 -> m49_59  [key=2, style=dotted];
m49_1750 -> m49_1751  [key=0, style=solid];
m49_1747 -> m49_56  [key=2, style=dotted];
m49_1747 -> m49_57  [key=2, style=dotted];
m49_1747 -> m49_1749  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1747 -> m49_1751  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1747 -> m49_1748  [key=0, style=solid];
m49_1747 -> m49_1750  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1746 -> m49_1747  [key=0, style=solid];
m49_1746 -> m49_1  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m49_1752 -> m49_1745  [key=0, style=bold, color=blue];
m49_1354 -> m49_1355  [key=0, style=solid];
m49_1355 -> m49_56  [key=2, style=dotted];
m49_1355 -> m49_57  [key=2, style=dotted];
m49_1355 -> m49_1356  [key=0, style=solid];
m49_1355 -> m49_1359  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1356 -> m49_1357  [key=0, style=solid];
m49_1356 -> m49_150  [key=2, style=dotted];
m49_1356 -> m49_1358  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_1357 -> m49_1354  [key=0, style=bold, color=blue];
m49_1361 -> m49_1362  [key=0, style=solid];
m49_1362 -> m49_56  [key=2, style=dotted];
m49_1362 -> m49_57  [key=2, style=dotted];
m49_1362 -> m49_1363  [key=0, style=solid];
m49_1362 -> m49_1366  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1363 -> m49_1364  [key=0, style=solid];
m49_1363 -> m49_150  [key=2, style=dotted];
m49_1363 -> m49_1365  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_1364 -> m49_1361  [key=0, style=bold, color=blue];
m49_467 -> m49_468  [key=0, style=solid];
m49_471 -> m49_60  [key=2, style=dotted];
m49_471 -> m49_472  [key=0, style=solid];
m49_473 -> m49_60  [key=2, style=dotted];
m49_473 -> m49_474  [key=0, style=solid];
m49_474 -> m49_60  [key=2, style=dotted];
m49_474 -> m49_475  [key=0, style=solid];
m49_475 -> m49_60  [key=2, style=dotted];
m49_475 -> m49_476  [key=0, style=solid];
m49_477 -> m49_60  [key=2, style=dotted];
m49_477 -> m49_478  [key=0, style=solid];
m49_478 -> m49_60  [key=2, style=dotted];
m49_478 -> m49_479  [key=0, style=solid];
m49_479 -> m49_60  [key=2, style=dotted];
m49_479 -> m49_480  [key=0, style=solid];
m49_481 -> m49_60  [key=2, style=dotted];
m49_481 -> m49_482  [key=0, style=solid];
m49_482 -> m49_60  [key=2, style=dotted];
m49_482 -> m49_483  [key=0, style=solid];
m49_483 -> m49_60  [key=2, style=dotted];
m49_483 -> m49_484  [key=0, style=solid];
m49_484 -> m49_60  [key=2, style=dotted];
m49_484 -> m49_485  [key=0, style=solid];
m49_485 -> m49_60  [key=2, style=dotted];
m49_485 -> m49_486  [key=0, style=solid];
m49_487 -> m49_60  [key=2, style=dotted];
m49_487 -> m49_488  [key=0, style=solid];
m49_488 -> m49_60  [key=2, style=dotted];
m49_488 -> m49_489  [key=0, style=solid];
m49_489 -> m49_60  [key=2, style=dotted];
m49_489 -> m49_490  [key=0, style=solid];
m49_491 -> m49_60  [key=2, style=dotted];
m49_491 -> m49_492  [key=0, style=solid];
m49_492 -> m49_60  [key=2, style=dotted];
m49_492 -> m49_493  [key=0, style=solid];
m49_493 -> m49_60  [key=2, style=dotted];
m49_493 -> m49_494  [key=0, style=solid];
m49_495 -> m49_60  [key=2, style=dotted];
m49_495 -> m49_496  [key=0, style=solid];
m49_496 -> m49_60  [key=2, style=dotted];
m49_496 -> m49_497  [key=0, style=solid];
m49_497 -> m49_60  [key=2, style=dotted];
m49_497 -> m49_498  [key=0, style=solid];
m49_498 -> m49_60  [key=2, style=dotted];
m49_498 -> m49_499  [key=0, style=solid];
m49_500 -> m49_60  [key=2, style=dotted];
m49_500 -> m49_501  [key=0, style=solid];
m49_501 -> m49_60  [key=2, style=dotted];
m49_501 -> m49_502  [key=0, style=solid];
m49_502 -> m49_60  [key=2, style=dotted];
m49_502 -> m49_503  [key=0, style=solid];
m49_503 -> m49_60  [key=2, style=dotted];
m49_503 -> m49_504  [key=0, style=solid];
m49_505 -> m49_60  [key=2, style=dotted];
m49_505 -> m49_506  [key=0, style=solid];
m49_506 -> m49_60  [key=2, style=dotted];
m49_506 -> m49_507  [key=0, style=solid];
m49_507 -> m49_60  [key=2, style=dotted];
m49_507 -> m49_508  [key=0, style=solid];
m49_508 -> m49_60  [key=2, style=dotted];
m49_508 -> m49_509  [key=0, style=solid];
m49_510 -> m49_60  [key=2, style=dotted];
m49_510 -> m49_511  [key=0, style=solid];
m49_511 -> m49_60  [key=2, style=dotted];
m49_511 -> m49_512  [key=0, style=solid];
m49_512 -> m49_60  [key=2, style=dotted];
m49_512 -> m49_513  [key=0, style=solid];
m49_513 -> m49_60  [key=2, style=dotted];
m49_513 -> m49_514  [key=0, style=solid];
m49_515 -> m49_60  [key=2, style=dotted];
m49_515 -> m49_516  [key=0, style=solid];
m49_516 -> m49_60  [key=2, style=dotted];
m49_516 -> m49_517  [key=0, style=solid];
m49_517 -> m49_60  [key=2, style=dotted];
m49_517 -> m49_518  [key=0, style=solid];
m49_518 -> m49_60  [key=2, style=dotted];
m49_518 -> m49_519  [key=0, style=solid];
m49_520 -> m49_60  [key=2, style=dotted];
m49_520 -> m49_521  [key=0, style=solid];
m49_521 -> m49_60  [key=2, style=dotted];
m49_521 -> m49_522  [key=0, style=solid];
m49_522 -> m49_60  [key=2, style=dotted];
m49_522 -> m49_523  [key=0, style=solid];
m49_524 -> m49_60  [key=2, style=dotted];
m49_524 -> m49_525  [key=0, style=solid];
m49_525 -> m49_60  [key=2, style=dotted];
m49_525 -> m49_526  [key=0, style=solid];
m49_526 -> m49_60  [key=2, style=dotted];
m49_526 -> m49_527  [key=0, style=solid];
m49_528 -> m49_60  [key=2, style=dotted];
m49_528 -> m49_529  [key=0, style=solid];
m49_529 -> m49_60  [key=2, style=dotted];
m49_529 -> m49_530  [key=0, style=solid];
m49_530 -> m49_60  [key=2, style=dotted];
m49_530 -> m49_531  [key=0, style=solid];
m49_532 -> m49_60  [key=2, style=dotted];
m49_532 -> m49_533  [key=0, style=solid];
m49_533 -> m49_60  [key=2, style=dotted];
m49_533 -> m49_534  [key=0, style=solid];
m49_534 -> m49_60  [key=2, style=dotted];
m49_534 -> m49_535  [key=0, style=solid];
m49_536 -> m49_60  [key=2, style=dotted];
m49_536 -> m49_537  [key=0, style=solid];
m49_537 -> m49_60  [key=2, style=dotted];
m49_537 -> m49_538  [key=0, style=solid];
m49_538 -> m49_60  [key=2, style=dotted];
m49_538 -> m49_539  [key=0, style=solid];
m49_540 -> m49_60  [key=2, style=dotted];
m49_540 -> m49_541  [key=0, style=solid];
m49_541 -> m49_60  [key=2, style=dotted];
m49_541 -> m49_542  [key=0, style=solid];
m49_542 -> m49_60  [key=2, style=dotted];
m49_542 -> m49_543  [key=0, style=solid];
m49_544 -> m49_60  [key=2, style=dotted];
m49_544 -> m49_545  [key=0, style=solid];
m49_545 -> m49_60  [key=2, style=dotted];
m49_545 -> m49_546  [key=0, style=solid];
m49_546 -> m49_60  [key=2, style=dotted];
m49_546 -> m49_547  [key=0, style=solid];
m49_548 -> m49_60  [key=2, style=dotted];
m49_548 -> m49_549  [key=0, style=solid];
m49_549 -> m49_60  [key=2, style=dotted];
m49_549 -> m49_550  [key=0, style=solid];
m49_550 -> m49_60  [key=2, style=dotted];
m49_550 -> m49_551  [key=0, style=solid];
m49_552 -> m49_60  [key=2, style=dotted];
m49_552 -> m49_553  [key=0, style=solid];
m49_553 -> m49_60  [key=2, style=dotted];
m49_553 -> m49_554  [key=0, style=solid];
m49_554 -> m49_60  [key=2, style=dotted];
m49_554 -> m49_555  [key=0, style=solid];
m49_556 -> m49_60  [key=2, style=dotted];
m49_556 -> m49_557  [key=0, style=solid];
m49_557 -> m49_60  [key=2, style=dotted];
m49_557 -> m49_558  [key=0, style=solid];
m49_558 -> m49_60  [key=2, style=dotted];
m49_558 -> m49_559  [key=0, style=solid];
m49_560 -> m49_60  [key=2, style=dotted];
m49_560 -> m49_561  [key=0, style=solid];
m49_561 -> m49_60  [key=2, style=dotted];
m49_561 -> m49_562  [key=0, style=solid];
m49_562 -> m49_60  [key=2, style=dotted];
m49_562 -> m49_563  [key=0, style=solid];
m49_470 -> m49_56  [key=2, style=dotted];
m49_470 -> m49_471  [key=0, style=solid];
m49_470 -> m49_473  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_474  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_475  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_477  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_478  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_479  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_481  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_482  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_483  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_484  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_485  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_487  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_488  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_489  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_491  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_492  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_493  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_495  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_496  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_497  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_498  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_500  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_501  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_502  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_503  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_505  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_506  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_507  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_508  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_510  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_511  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_512  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_513  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_515  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_516  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_517  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_518  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_520  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_521  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_522  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_524  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_525  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_526  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_528  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_529  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_530  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_532  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_533  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_534  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_536  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_537  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_538  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_540  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_541  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_542  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_544  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_545  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_546  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_548  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_549  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_550  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_552  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_553  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_554  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_556  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_557  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_558  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_560  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_561  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_562  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_472  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_476  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_480  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_486  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_490  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_494  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_499  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_504  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_509  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_514  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_519  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_523  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_527  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_531  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_535  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_539  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_543  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_547  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_551  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_555  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_470 -> m49_559  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_469 -> m49_57  [key=2, style=dotted];
m49_469 -> m49_470  [key=0, style=solid];
m49_472 -> m49_473  [key=0, style=solid];
m49_472 -> m49_356  [key=2, style=dotted];
m49_476 -> m49_477  [key=0, style=solid];
m49_476 -> m49_356  [key=2, style=dotted];
m49_480 -> m49_481  [key=0, style=solid];
m49_480 -> m49_356  [key=2, style=dotted];
m49_486 -> m49_487  [key=0, style=solid];
m49_486 -> m49_356  [key=2, style=dotted];
m49_490 -> m49_491  [key=0, style=solid];
m49_490 -> m49_356  [key=2, style=dotted];
m49_494 -> m49_495  [key=0, style=solid];
m49_494 -> m49_356  [key=2, style=dotted];
m49_499 -> m49_500  [key=0, style=solid];
m49_499 -> m49_356  [key=2, style=dotted];
m49_504 -> m49_505  [key=0, style=solid];
m49_504 -> m49_356  [key=2, style=dotted];
m49_509 -> m49_510  [key=0, style=solid];
m49_509 -> m49_356  [key=2, style=dotted];
m49_514 -> m49_515  [key=0, style=solid];
m49_514 -> m49_356  [key=2, style=dotted];
m49_519 -> m49_520  [key=0, style=solid];
m49_519 -> m49_356  [key=2, style=dotted];
m49_523 -> m49_524  [key=0, style=solid];
m49_523 -> m49_356  [key=2, style=dotted];
m49_527 -> m49_528  [key=0, style=solid];
m49_527 -> m49_356  [key=2, style=dotted];
m49_531 -> m49_532  [key=0, style=solid];
m49_531 -> m49_356  [key=2, style=dotted];
m49_535 -> m49_536  [key=0, style=solid];
m49_535 -> m49_356  [key=2, style=dotted];
m49_539 -> m49_540  [key=0, style=solid];
m49_539 -> m49_356  [key=2, style=dotted];
m49_543 -> m49_544  [key=0, style=solid];
m49_543 -> m49_356  [key=2, style=dotted];
m49_547 -> m49_548  [key=0, style=solid];
m49_547 -> m49_356  [key=2, style=dotted];
m49_551 -> m49_552  [key=0, style=solid];
m49_551 -> m49_356  [key=2, style=dotted];
m49_555 -> m49_556  [key=0, style=solid];
m49_555 -> m49_356  [key=2, style=dotted];
m49_559 -> m49_560  [key=0, style=solid];
m49_559 -> m49_356  [key=2, style=dotted];
m49_468 -> m49_469  [key=0, style=solid];
m49_468 -> m49_468  [key=3, color=darkorchid, style=bold, label="Local variable string input"];
m49_563 -> m49_467  [key=0, style=bold, color=blue];
m49_700 -> m49_701  [key=0, style=solid];
m49_704 -> m49_60  [key=2, style=dotted];
m49_704 -> m49_705  [key=0, style=solid];
m49_710 -> m49_60  [key=2, style=dotted];
m49_710 -> m49_711  [key=0, style=solid];
m49_703 -> m49_58  [key=2, style=dotted];
m49_703 -> m49_704  [key=0, style=solid];
m49_709 -> m49_58  [key=2, style=dotted];
m49_709 -> m49_710  [key=0, style=solid];
m49_702 -> m49_56  [key=2, style=dotted];
m49_702 -> m49_704  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_702 -> m49_703  [key=0, style=solid];
m49_702 -> m49_698  [key=2, style=dotted];
m49_702 -> m49_699  [key=2, style=dotted];
m49_708 -> m49_56  [key=2, style=dotted];
m49_708 -> m49_710  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_708 -> m49_709  [key=0, style=solid];
m49_708 -> m49_698  [key=2, style=dotted];
m49_708 -> m49_699  [key=2, style=dotted];
m49_705 -> m49_657  [key=3, color=darkorchid, style=bold, label="Local variable int j"];
m49_705 -> m49_706  [key=0, style=solid];
m49_705 -> m49_707  [key=1, style=dashed, color=darkseagreen4, label=j];
m49_705 -> m49_711  [key=1, style=dashed, color=darkseagreen4, label=j];
m49_711 -> m49_711  [key=1, style=dashed, color=darkseagreen4, label=j];
m49_711 -> m49_706  [key=0, style=solid];
m49_701 -> m49_702  [key=0, style=solid];
m49_701 -> m49_697  [key=2, style=dotted];
m49_701 -> m49_707  [key=1, style=dashed, color=darkseagreen4, label=i];
m49_707 -> m49_708  [key=0, style=solid];
m49_706 -> m49_707  [key=0, style=solid];
m49_706 -> m49_712  [key=0, style=solid];
m49_712 -> m49_700  [key=0, style=bold, color=blue];
m49_1050 -> m49_1051  [key=0, style=solid];
m49_1085 -> m49_60  [key=2, style=dotted];
m49_1085 -> m49_1086  [key=0, style=solid];
m49_1085 -> m49_1098  [key=2, style=dotted];
m49_1080 -> m49_56  [key=2, style=dotted];
m49_1080 -> m49_57  [key=2, style=dotted];
m49_1080 -> m49_1081  [key=0, style=solid];
m49_1080 -> m49_1100  [key=2, style=dotted];
m49_1080 -> m49_1084  [key=1, style=dashed, color=darkseagreen4, label=jsonObject];
m49_1078 -> m49_1085  [key=1, style=dashed, color=darkseagreen4, label=json];
m49_1078 -> m49_1080  [key=1, style=dashed, color=darkseagreen4, label=json];
m49_1078 -> m49_1079  [key=0, style=solid];
m49_1078 -> m49_1098  [key=2, style=dotted];
m49_1084 -> m49_1085  [key=0, style=solid];
m49_1084 -> m49_1101  [key=2, style=dotted];
m49_1081 -> m49_1085  [key=1, style=dashed, color=darkseagreen4, label=sb];
m49_1081 -> m49_1082  [key=0, style=solid];
m49_1081 -> m49_1087  [key=2, style=dotted];
m49_1079 -> m49_1080  [key=0, style=solid];
m49_1079 -> m49_1084  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m49_1079 -> m49_1099  [key=2, style=dotted];
m49_1051 -> m49_1078  [key=1, style=dashed, color=darkseagreen4, label=sb];
m49_1051 -> m49_1052  [key=0, style=solid];
m49_1051 -> m49_1087  [key=2, style=dotted];
m49_1077 -> m49_1078  [key=0, style=solid];
m49_1077 -> m49_48  [key=2, style=dotted];
m49_1083 -> m49_1084  [key=0, style=solid];
m49_1083 -> m49_606  [key=2, style=dotted];
m49_1082 -> m49_1083  [key=0, style=solid];
m49_1082 -> m49_1088  [key=2, style=dotted];
m49_1052 -> m49_1053  [key=0, style=solid];
m49_1052 -> m49_1088  [key=2, style=dotted];
m49_1053 -> m49_1077  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m49_1053 -> m49_1054  [key=0, style=solid];
m49_1053 -> m49_606  [key=2, style=dotted];
m49_1053 -> m49_1055  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m49_1053 -> m49_1056  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m49_1053 -> m49_1057  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m49_1053 -> m49_1058  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m49_1053 -> m49_1059  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m49_1053 -> m49_1060  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m49_1053 -> m49_1061  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m49_1053 -> m49_1062  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m49_1053 -> m49_1065  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m49_1053 -> m49_1067  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m49_1053 -> m49_1068  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m49_1053 -> m49_1069  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m49_1053 -> m49_1070  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m49_1053 -> m49_1071  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m49_1053 -> m49_1072  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m49_1053 -> m49_1073  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m49_1053 -> m49_1074  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m49_1053 -> m49_1075  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m49_1053 -> m49_1076  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m49_1076 -> m49_1077  [key=0, style=solid];
m49_1076 -> m49_1097  [key=2, style=dotted];
m49_1063 -> m49_590  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m49_1063 -> m49_1064  [key=0, style=solid];
m49_1063 -> m49_1065  [key=1, style=dashed, color=darkseagreen4, label=i];
m49_1063 -> m49_1066  [key=1, style=dashed, color=darkseagreen4, label=i];
m49_1054 -> m49_1055  [key=0, style=solid];
m49_1054 -> m49_78  [key=2, style=dotted];
m49_1055 -> m49_1056  [key=0, style=solid];
m49_1055 -> m49_1090  [key=2, style=dotted];
m49_1056 -> m49_1057  [key=0, style=solid];
m49_1056 -> m49_75  [key=2, style=dotted];
m49_1057 -> m49_1058  [key=0, style=solid];
m49_1057 -> m49_1092  [key=2, style=dotted];
m49_1058 -> m49_1059  [key=0, style=solid];
m49_1058 -> m49_1093  [key=2, style=dotted];
m49_1059 -> m49_1060  [key=0, style=solid];
m49_1059 -> m49_1092  [key=2, style=dotted];
m49_1060 -> m49_1061  [key=0, style=solid];
m49_1060 -> m49_1094  [key=2, style=dotted];
m49_1061 -> m49_1062  [key=0, style=solid];
m49_1061 -> m49_1092  [key=2, style=dotted];
m49_1062 -> m49_1063  [key=0, style=solid];
m49_1062 -> m49_78  [key=2, style=dotted];
m49_1065 -> m49_1066  [key=0, style=solid];
m49_1065 -> m49_1093  [key=2, style=dotted];
m49_1067 -> m49_1068  [key=0, style=solid];
m49_1067 -> m49_75  [key=2, style=dotted];
m49_1068 -> m49_1069  [key=0, style=solid];
m49_1068 -> m49_1092  [key=2, style=dotted];
m49_1069 -> m49_1070  [key=0, style=solid];
m49_1069 -> m49_1095  [key=2, style=dotted];
m49_1070 -> m49_1071  [key=0, style=solid];
m49_1070 -> m49_81  [key=2, style=dotted];
m49_1071 -> m49_1072  [key=0, style=solid];
m49_1071 -> m49_1093  [key=2, style=dotted];
m49_1072 -> m49_1073  [key=0, style=solid];
m49_1072 -> m49_48  [key=2, style=dotted];
m49_1073 -> m49_1074  [key=0, style=solid];
m49_1073 -> m49_81  [key=2, style=dotted];
m49_1074 -> m49_1075  [key=0, style=solid];
m49_1074 -> m49_1094  [key=2, style=dotted];
m49_1075 -> m49_1076  [key=0, style=solid];
m49_1075 -> m49_1097  [key=2, style=dotted];
m49_1064 -> m49_1065  [key=0, style=solid];
m49_1064 -> m49_1067  [key=0, style=solid];
m49_1066 -> m49_1064  [key=0, style=solid];
m49_1066 -> m49_1066  [key=1, style=dashed, color=darkseagreen4, label=i];
m49_1086 -> m49_1050  [key=0, style=bold, color=blue];
m49_1333 -> m49_1334  [key=0, style=solid];
m49_1334 -> m49_56  [key=2, style=dotted];
m49_1334 -> m49_57  [key=2, style=dotted];
m49_1334 -> m49_1335  [key=0, style=solid];
m49_1334 -> m49_1338  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1335 -> m49_1336  [key=0, style=solid];
m49_1335 -> m49_150  [key=2, style=dotted];
m49_1335 -> m49_1337  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_1336 -> m49_1333  [key=0, style=bold, color=blue];
m49_772 -> m49_773  [key=0, style=solid];
m49_773 -> m49_56  [key=2, style=dotted];
m49_773 -> m49_57  [key=2, style=dotted];
m49_773 -> m49_774  [key=0, style=solid];
m49_773 -> m49_777  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_774 -> m49_775  [key=0, style=solid];
m49_774 -> m49_150  [key=2, style=dotted];
m49_774 -> m49_776  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_775 -> m49_772  [key=0, style=bold, color=blue];
m49_1721 -> m49_1722  [key=0, style=solid];
m49_1723 -> m49_56  [key=2, style=dotted];
m49_1723 -> m49_57  [key=2, style=dotted];
m49_1723 -> m49_1727  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1723 -> m49_1724  [key=0, style=solid];
m49_1722 -> m49_1723  [key=0, style=solid];
m49_1722 -> m49_1722  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m49_1724 -> m49_1726  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_1724 -> m49_1725  [key=0, style=solid];
m49_1724 -> m49_150  [key=2, style=dotted];
m49_1725 -> m49_1721  [key=0, style=bold, color=blue];
m49_138 -> m49_139  [key=0, style=solid];
m49_142 -> m49_60  [key=2, style=dotted];
m49_142 -> m49_143  [key=0, style=solid];
m49_144 -> m49_60  [key=2, style=dotted];
m49_144 -> m49_145  [key=0, style=solid];
m49_147 -> m49_60  [key=2, style=dotted];
m49_147 -> m49_148  [key=0, style=solid];
m49_141 -> m49_58  [key=2, style=dotted];
m49_141 -> m49_59  [key=2, style=dotted];
m49_141 -> m49_142  [key=0, style=solid];
m49_143 -> m49_58  [key=2, style=dotted];
m49_143 -> m49_59  [key=2, style=dotted];
m49_143 -> m49_144  [key=0, style=solid];
m49_146 -> m49_58  [key=2, style=dotted];
m49_146 -> m49_59  [key=2, style=dotted];
m49_146 -> m49_147  [key=0, style=solid];
m49_148 -> m49_58  [key=2, style=dotted];
m49_148 -> m49_149  [key=0, style=solid];
m49_148 -> m49_136  [key=2, style=dotted];
m49_140 -> m49_56  [key=2, style=dotted];
m49_140 -> m49_57  [key=2, style=dotted];
m49_140 -> m49_142  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_140 -> m49_144  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_140 -> m49_147  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_140 -> m49_141  [key=0, style=solid];
m49_140 -> m49_143  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_140 -> m49_146  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_140 -> m49_148  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_140 -> m49_145  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_140 -> m49_152  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_145 -> m49_146  [key=0, style=solid];
m49_145 -> m49_150  [key=2, style=dotted];
m49_145 -> m49_151  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_139 -> m49_140  [key=0, style=solid];
m49_139 -> m49_139  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m49_149 -> m49_138  [key=0, style=bold, color=blue];
m49_106 -> m49_107  [key=0, style=solid];
m49_110 -> m49_60  [key=2, style=dotted];
m49_110 -> m49_111  [key=0, style=solid];
m49_111 -> m49_60  [key=2, style=dotted];
m49_111 -> m49_112  [key=0, style=solid];
m49_109 -> m49_58  [key=2, style=dotted];
m49_109 -> m49_59  [key=2, style=dotted];
m49_109 -> m49_110  [key=0, style=solid];
m49_108 -> m49_56  [key=2, style=dotted];
m49_108 -> m49_57  [key=2, style=dotted];
m49_108 -> m49_110  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_108 -> m49_111  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_108 -> m49_109  [key=0, style=solid];
m49_107 -> m49_108  [key=0, style=solid];
m49_107 -> m49_107  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m49_112 -> m49_106  [key=0, style=bold, color=blue];
m49_1645 -> m49_1646  [key=0, style=solid];
m49_1649 -> m49_60  [key=2, style=dotted];
m49_1649 -> m49_1650  [key=0, style=solid];
m49_1651 -> m49_60  [key=2, style=dotted];
m49_1651 -> m49_1652  [key=0, style=solid];
m49_1653 -> m49_60  [key=2, style=dotted];
m49_1653 -> m49_1654  [key=0, style=solid];
m49_1655 -> m49_60  [key=2, style=dotted];
m49_1655 -> m49_1656  [key=0, style=solid];
m49_1657 -> m49_60  [key=2, style=dotted];
m49_1657 -> m49_1658  [key=0, style=solid];
m49_1659 -> m49_60  [key=2, style=dotted];
m49_1659 -> m49_1660  [key=0, style=solid];
m49_1661 -> m49_60  [key=2, style=dotted];
m49_1661 -> m49_1662  [key=0, style=solid];
m49_1648 -> m49_58  [key=2, style=dotted];
m49_1648 -> m49_59  [key=2, style=dotted];
m49_1648 -> m49_1649  [key=0, style=solid];
m49_1650 -> m49_58  [key=2, style=dotted];
m49_1650 -> m49_59  [key=2, style=dotted];
m49_1650 -> m49_1651  [key=0, style=solid];
m49_1652 -> m49_58  [key=2, style=dotted];
m49_1652 -> m49_59  [key=2, style=dotted];
m49_1652 -> m49_1653  [key=0, style=solid];
m49_1654 -> m49_58  [key=2, style=dotted];
m49_1654 -> m49_59  [key=2, style=dotted];
m49_1654 -> m49_1655  [key=0, style=solid];
m49_1656 -> m49_58  [key=2, style=dotted];
m49_1656 -> m49_59  [key=2, style=dotted];
m49_1656 -> m49_1657  [key=0, style=solid];
m49_1658 -> m49_58  [key=2, style=dotted];
m49_1658 -> m49_59  [key=2, style=dotted];
m49_1658 -> m49_1659  [key=0, style=solid];
m49_1660 -> m49_58  [key=2, style=dotted];
m49_1660 -> m49_59  [key=2, style=dotted];
m49_1660 -> m49_1661  [key=0, style=solid];
m49_1647 -> m49_56  [key=2, style=dotted];
m49_1647 -> m49_57  [key=2, style=dotted];
m49_1647 -> m49_1649  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1647 -> m49_1651  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1647 -> m49_1653  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1647 -> m49_1655  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1647 -> m49_1657  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1647 -> m49_1659  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1647 -> m49_1661  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1647 -> m49_1648  [key=0, style=solid];
m49_1647 -> m49_1650  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1647 -> m49_1652  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1647 -> m49_1654  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1647 -> m49_1656  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1647 -> m49_1658  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1647 -> m49_1660  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1646 -> m49_1647  [key=0, style=solid];
m49_1646 -> m49_1646  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m49_1662 -> m49_1645  [key=0, style=bold, color=blue];
m49_1541 -> m49_1542  [key=0, style=solid];
m49_1542 -> m49_56  [key=2, style=dotted];
m49_1542 -> m49_57  [key=2, style=dotted];
m49_1542 -> m49_1546  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1542 -> m49_1543  [key=0, style=solid];
m49_1543 -> m49_1545  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_1543 -> m49_1544  [key=0, style=solid];
m49_1543 -> m49_150  [key=2, style=dotted];
m49_1544 -> m49_1541  [key=0, style=bold, color=blue];
m49_402 -> m49_403  [key=0, style=solid];
m49_405 -> m49_58  [key=2, style=dotted];
m49_405 -> m49_405  [key=0, style=solid];
m49_405 -> m49_406  [key=0, style=solid];
m49_404 -> m49_56  [key=2, style=dotted];
m49_404 -> m49_57  [key=2, style=dotted];
m49_404 -> m49_405  [key=0, style=solid];
m49_403 -> m49_404  [key=0, style=solid];
m49_403 -> m49_403  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m49_406 -> m49_402  [key=0, style=bold, color=blue];
m49_1729 -> m49_1730  [key=0, style=solid];
m49_1732 -> m49_58  [key=2, style=dotted];
m49_1732 -> m49_59  [key=2, style=dotted];
m49_1732 -> m49_1733  [key=0, style=solid];
m49_1733 -> m49_58  [key=2, style=dotted];
m49_1733 -> m49_59  [key=2, style=dotted];
m49_1733 -> m49_1734  [key=0, style=solid];
m49_1734 -> m49_58  [key=2, style=dotted];
m49_1734 -> m49_59  [key=2, style=dotted];
m49_1734 -> m49_1735  [key=0, style=solid];
m49_1735 -> m49_58  [key=2, style=dotted];
m49_1735 -> m49_1736  [key=0, style=solid];
m49_1735 -> m49_136  [key=2, style=dotted];
m49_1731 -> m49_56  [key=2, style=dotted];
m49_1731 -> m49_57  [key=2, style=dotted];
m49_1731 -> m49_1732  [key=0, style=solid];
m49_1731 -> m49_1733  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1731 -> m49_1734  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1731 -> m49_1735  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1730 -> m49_1731  [key=0, style=solid];
m49_1730 -> m49_1730  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m49_1736 -> m49_1729  [key=0, style=bold, color=blue];
m49_570 -> m49_571  [key=0, style=solid];
m49_571 -> m49_56  [key=2, style=dotted];
m49_571 -> m49_57  [key=2, style=dotted];
m49_571 -> m49_572  [key=0, style=solid];
m49_571 -> m49_575  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_572 -> m49_573  [key=0, style=solid];
m49_572 -> m49_150  [key=2, style=dotted];
m49_572 -> m49_574  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_573 -> m49_570  [key=0, style=bold, color=blue];
m49_1971 -> m49_1972  [key=0, style=solid];
m49_1973 -> m49_59  [key=2, style=dotted];
m49_1973 -> m49_1974  [key=0, style=solid];
m49_1973 -> m49_356  [key=2, style=dotted];
m49_1974 -> m49_59  [key=2, style=dotted];
m49_1974 -> m49_1975  [key=0, style=solid];
m49_1974 -> m49_356  [key=2, style=dotted];
m49_1972 -> m49_56  [key=2, style=dotted];
m49_1972 -> m49_57  [key=2, style=dotted];
m49_1972 -> m49_1973  [key=0, style=solid];
m49_1972 -> m49_1974  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1972 -> m49_1975  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1972 -> m49_1978  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1975 -> m49_1976  [key=0, style=solid];
m49_1975 -> m49_150  [key=2, style=dotted];
m49_1975 -> m49_1977  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_1976 -> m49_1971  [key=0, style=bold, color=blue];
m49_2267 -> m49_2268  [key=0, style=solid];
m49_2267 -> m49_2270  [key=1, style=dashed, color=darkseagreen4, label="char[]"];
m49_2268 -> m49_2269  [key=0, style=solid];
m49_2268 -> m49_2270  [key=0, style=solid];
m49_2270 -> m49_2271  [key=0, style=solid];
m49_2270 -> m49_2273  [key=2, style=dotted];
m49_2269 -> m49_2271  [key=0, style=solid];
m49_2269 -> m49_2272  [key=2, style=dotted];
m49_2271 -> m49_2267  [key=0, style=bold, color=blue];
m49_1365 -> m49_1366  [key=0, style=solid];
m49_217 -> m49_58  [key=2, style=dotted];
m49_217 -> m49_218  [key=0, style=solid];
m49_240 -> m49_58  [key=2, style=dotted];
m49_240 -> m49_241  [key=0, style=solid];
m49_277 -> m49_58  [key=2, style=dotted];
m49_277 -> m49_278  [key=0, style=solid];
m49_382 -> m49_58  [key=2, style=dotted];
m49_382 -> m49_382  [key=0, style=solid];
m49_382 -> m49_383  [key=0, style=solid];
m49_400 -> m49_58  [key=2, style=dotted];
m49_400 -> m49_401  [key=0, style=solid];
m49_413 -> m49_58  [key=2, style=dotted];
m49_413 -> m49_413  [key=0, style=solid];
m49_413 -> m49_414  [key=0, style=solid];
m49_1010 -> m49_58  [key=2, style=dotted];
m49_1010 -> m49_1011  [key=0, style=solid];
m49_1045 -> m49_58  [key=2, style=dotted];
m49_1045 -> m49_1046  [key=0, style=solid];
m49_1048 -> m49_58  [key=2, style=dotted];
m49_1048 -> m49_1049  [key=0, style=solid];
m49_1223 -> m49_58  [key=2, style=dotted];
m49_1223 -> m49_1224  [key=0, style=solid];
m49_1301 -> m49_58  [key=2, style=dotted];
m49_1301 -> m49_1302  [key=0, style=solid];
m49_1546 -> m49_58  [key=2, style=dotted];
m49_1546 -> m49_1547  [key=0, style=solid];
m49_1553 -> m49_58  [key=2, style=dotted];
m49_1553 -> m49_1554  [key=0, style=solid];
m49_1560 -> m49_58  [key=2, style=dotted];
m49_1560 -> m49_1561  [key=0, style=solid];
m49_1567 -> m49_58  [key=2, style=dotted];
m49_1567 -> m49_1568  [key=0, style=solid];
m49_1574 -> m49_58  [key=2, style=dotted];
m49_1574 -> m49_1575  [key=0, style=solid];
m49_1719 -> m49_58  [key=2, style=dotted];
m49_1719 -> m49_1720  [key=0, style=solid];
m49_1727 -> m49_58  [key=2, style=dotted];
m49_1727 -> m49_1728  [key=0, style=solid];
m49_1758 -> m49_58  [key=2, style=dotted];
m49_1758 -> m49_1759  [key=0, style=solid];
m49_1775 -> m49_58  [key=2, style=dotted];
m49_1775 -> m49_59  [key=2, style=dotted];
m49_1775 -> m49_1776  [key=0, style=solid];
m49_1939 -> m49_58  [key=2, style=dotted];
m49_1939 -> m49_1940  [key=0, style=solid];
m49_2033 -> m49_58  [key=2, style=dotted];
m49_2033 -> m49_59  [key=2, style=dotted];
m49_2033 -> m49_2034  [key=0, style=solid];
m49_2065 -> m49_58  [key=2, style=dotted];
m49_2065 -> m49_59  [key=2, style=dotted];
m49_2065 -> m49_2066  [key=0, style=solid];
m49_2068 -> m49_58  [key=2, style=dotted];
m49_2068 -> m49_59  [key=2, style=dotted];
m49_2068 -> m49_2069  [key=0, style=solid];
m49_2190 -> m49_58  [key=2, style=dotted];
m49_2190 -> m49_2191  [key=0, style=solid];
m49_2193 -> m49_58  [key=2, style=dotted];
m49_2193 -> m49_2194  [key=0, style=solid];
m49_2196 -> m49_58  [key=2, style=dotted];
m49_2196 -> m49_2197  [key=0, style=solid];
m49_2199 -> m49_58  [key=2, style=dotted];
m49_2199 -> m49_2200  [key=0, style=solid];
m49_2202 -> m49_58  [key=2, style=dotted];
m49_2202 -> m49_2203  [key=0, style=solid];
m49_2205 -> m49_58  [key=2, style=dotted];
m49_2205 -> m49_2206  [key=0, style=solid];
m49_2231 -> m49_58  [key=2, style=dotted];
m49_2231 -> m49_2231  [key=0, style=solid];
m49_2231 -> m49_2232  [key=0, style=solid];
m49_568 -> m49_56  [key=2, style=dotted];
m49_568 -> m49_569  [key=0, style=solid];
m49_665 -> m49_56  [key=2, style=dotted];
m49_665 -> m49_57  [key=2, style=dotted];
m49_665 -> m49_666  [key=0, style=solid];
m49_665 -> m49_663  [key=2, style=dotted];
m49_681 -> m49_56  [key=2, style=dotted];
m49_681 -> m49_57  [key=2, style=dotted];
m49_681 -> m49_682  [key=0, style=solid];
m49_681 -> m49_663  [key=2, style=dotted];
m49_2230 -> m49_56  [key=2, style=dotted];
m49_2230 -> m49_57  [key=2, style=dotted];
m49_2230 -> m49_2231  [key=0, style=solid];
m49_216 -> m49_217  [key=0, style=solid];
m49_218 -> m49_216  [key=0, style=bold, color=blue];
m49_239 -> m49_240  [key=0, style=solid];
m49_241 -> m49_239  [key=0, style=bold, color=blue];
m49_276 -> m49_277  [key=0, style=solid];
m49_278 -> m49_276  [key=0, style=bold, color=blue];
m49_381 -> m49_382  [key=0, style=solid];
m49_383 -> m49_381  [key=0, style=bold, color=blue];
m49_399 -> m49_400  [key=0, style=solid];
m49_401 -> m49_399  [key=0, style=bold, color=blue];
m49_412 -> m49_413  [key=0, style=solid];
m49_414 -> m49_412  [key=0, style=bold, color=blue];
m49_1009 -> m49_1010  [key=0, style=solid];
m49_1011 -> m49_1009  [key=0, style=bold, color=blue];
m49_1044 -> m49_1045  [key=0, style=solid];
m49_1046 -> m49_1044  [key=0, style=bold, color=blue];
m49_1047 -> m49_1048  [key=0, style=solid];
m49_1049 -> m49_1047  [key=0, style=bold, color=blue];
m49_1222 -> m49_1223  [key=0, style=solid];
m49_1224 -> m49_1222  [key=0, style=bold, color=blue];
m49_1300 -> m49_1301  [key=0, style=solid];
m49_1302 -> m49_1300  [key=0, style=bold, color=blue];
m49_1545 -> m49_1546  [key=0, style=solid];
m49_1547 -> m49_1545  [key=0, style=bold, color=blue];
m49_1552 -> m49_1553  [key=0, style=solid];
m49_1554 -> m49_1552  [key=0, style=bold, color=blue];
m49_1559 -> m49_1560  [key=0, style=solid];
m49_1561 -> m49_1559  [key=0, style=bold, color=blue];
m49_1566 -> m49_1567  [key=0, style=solid];
m49_1568 -> m49_1566  [key=0, style=bold, color=blue];
m49_1573 -> m49_1574  [key=0, style=solid];
m49_1575 -> m49_1573  [key=0, style=bold, color=blue];
m49_1718 -> m49_1719  [key=0, style=solid];
m49_1720 -> m49_1718  [key=0, style=bold, color=blue];
m49_1726 -> m49_1727  [key=0, style=solid];
m49_1728 -> m49_1726  [key=0, style=bold, color=blue];
m49_1757 -> m49_1758  [key=0, style=solid];
m49_1759 -> m49_1757  [key=0, style=bold, color=blue];
m49_1774 -> m49_1775  [key=0, style=solid];
m49_1776 -> m49_1774  [key=0, style=bold, color=blue];
m49_1938 -> m49_1939  [key=0, style=solid];
m49_1940 -> m49_1938  [key=0, style=bold, color=blue];
m49_2032 -> m49_2033  [key=0, style=solid];
m49_2034 -> m49_2032  [key=0, style=bold, color=blue];
m49_2064 -> m49_2065  [key=0, style=solid];
m49_2066 -> m49_2064  [key=0, style=bold, color=blue];
m49_2067 -> m49_2068  [key=0, style=solid];
m49_2069 -> m49_2067  [key=0, style=bold, color=blue];
m49_2189 -> m49_2190  [key=0, style=solid];
m49_2191 -> m49_2189  [key=0, style=bold, color=blue];
m49_2192 -> m49_2193  [key=0, style=solid];
m49_2194 -> m49_2192  [key=0, style=bold, color=blue];
m49_2195 -> m49_2196  [key=0, style=solid];
m49_2197 -> m49_2195  [key=0, style=bold, color=blue];
m49_2198 -> m49_2199  [key=0, style=solid];
m49_2200 -> m49_2198  [key=0, style=bold, color=blue];
m49_2201 -> m49_2202  [key=0, style=solid];
m49_2203 -> m49_2201  [key=0, style=bold, color=blue];
m49_2204 -> m49_2205  [key=0, style=solid];
m49_2206 -> m49_2204  [key=0, style=bold, color=blue];
m49_2232 -> m49_2229  [key=0, style=bold, color=blue];
m49_152 -> m49_154  [key=2, style=dotted];
m49_152 -> m49_153  [key=0, style=solid];
m49_169 -> m49_154  [key=2, style=dotted];
m49_169 -> m49_170  [key=0, style=solid];
m49_172 -> m49_154  [key=2, style=dotted];
m49_172 -> m49_173  [key=0, style=solid];
m49_175 -> m49_154  [key=2, style=dotted];
m49_175 -> m49_176  [key=0, style=solid];
m49_178 -> m49_154  [key=2, style=dotted];
m49_178 -> m49_179  [key=0, style=solid];
m49_220 -> m49_222  [key=2, style=dotted];
m49_220 -> m49_221  [key=0, style=solid];
m49_224 -> m49_154  [key=2, style=dotted];
m49_224 -> m49_225  [key=0, style=solid];
m49_567 -> m49_568  [key=0, style=solid];
m49_569 -> m49_567  [key=0, style=bold, color=blue];
m49_575 -> m49_356  [key=2, style=dotted];
m49_575 -> m49_576  [key=0, style=solid];
m49_664 -> m49_665  [key=0, style=solid];
m49_666 -> m49_154  [key=2, style=dotted];
m49_666 -> m49_667  [key=0, style=solid];
m49_680 -> m49_681  [key=0, style=solid];
m49_682 -> m49_154  [key=2, style=dotted];
m49_682 -> m49_683  [key=0, style=solid];
m49_777 -> m49_356  [key=2, style=dotted];
m49_777 -> m49_778  [key=0, style=solid];
m49_784 -> m49_356  [key=2, style=dotted];
m49_784 -> m49_785  [key=0, style=solid];
m49_791 -> m49_792  [key=0, style=solid];
m49_791 -> m49_793  [key=2, style=dotted];
m49_802 -> m49_803  [key=0, style=solid];
m49_802 -> m49_793  [key=2, style=dotted];
m49_817 -> m49_356  [key=2, style=dotted];
m49_817 -> m49_818  [key=0, style=solid];
m49_970 -> m49_154  [key=2, style=dotted];
m49_970 -> m49_971  [key=0, style=solid];
m49_973 -> m49_154  [key=2, style=dotted];
m49_973 -> m49_974  [key=0, style=solid];
m49_976 -> m49_154  [key=2, style=dotted];
m49_976 -> m49_977  [key=0, style=solid];
m49_979 -> m49_154  [key=2, style=dotted];
m49_979 -> m49_980  [key=0, style=solid];
m49_982 -> m49_154  [key=2, style=dotted];
m49_982 -> m49_983  [key=0, style=solid];
m49_1007 -> m49_222  [key=2, style=dotted];
m49_1007 -> m49_1008  [key=0, style=solid];
m49_1013 -> m49_222  [key=2, style=dotted];
m49_1013 -> m49_1014  [key=0, style=solid];
m49_1318 -> m49_1319  [key=0, style=solid];
m49_1318 -> m49_94  [key=2, style=dotted];
m49_1331 -> m49_222  [key=2, style=dotted];
m49_1331 -> m49_1332  [key=0, style=solid];
m49_1338 -> m49_1339  [key=0, style=solid];
m49_1338 -> m49_94  [key=2, style=dotted];
m49_1345 -> m49_1346  [key=0, style=solid];
m49_1345 -> m49_1325  [key=2, style=dotted];
m49_1359 -> m49_1360  [key=0, style=solid];
m49_1359 -> m49_94  [key=2, style=dotted];
m49_1366 -> m49_1367  [key=0, style=solid];
m49_1366 -> m49_94  [key=2, style=dotted];
m49_1437 -> m49_1438  [key=0, style=solid];
m49_1437 -> m49_1325  [key=2, style=dotted];
m49_1539 -> m49_154  [key=2, style=dotted];
m49_1539 -> m49_1540  [key=0, style=solid];
m49_1978 -> m49_356  [key=2, style=dotted];
m49_1978 -> m49_1979  [key=0, style=solid];
m49_2229 -> m49_2230  [key=0, style=solid];
m49_151 -> m49_152  [key=0, style=solid];
m49_168 -> m49_169  [key=0, style=solid];
m49_1436 -> m49_1437  [key=0, style=solid];
m49_1538 -> m49_1539  [key=0, style=solid];
m49_177 -> m49_178  [key=0, style=solid];
m49_816 -> m49_817  [key=0, style=solid];
m49_1977 -> m49_1978  [key=0, style=solid];
m49_153 -> m49_151  [key=0, style=bold, color=blue];
m49_170 -> m49_168  [key=0, style=bold, color=blue];
m49_171 -> m49_172  [key=0, style=solid];
m49_173 -> m49_171  [key=0, style=bold, color=blue];
m49_174 -> m49_175  [key=0, style=solid];
m49_176 -> m49_174  [key=0, style=bold, color=blue];
m49_179 -> m49_177  [key=0, style=bold, color=blue];
m49_219 -> m49_220  [key=0, style=solid];
m49_221 -> m49_219  [key=0, style=bold, color=blue];
m49_223 -> m49_224  [key=0, style=solid];
m49_225 -> m49_223  [key=0, style=bold, color=blue];
m49_574 -> m49_575  [key=0, style=solid];
m49_576 -> m49_574  [key=0, style=bold, color=blue];
m49_667 -> m49_664  [key=0, style=bold, color=blue];
m49_683 -> m49_680  [key=0, style=bold, color=blue];
m49_776 -> m49_777  [key=0, style=solid];
m49_778 -> m49_776  [key=0, style=bold, color=blue];
m49_783 -> m49_784  [key=0, style=solid];
m49_785 -> m49_783  [key=0, style=bold, color=blue];
m49_790 -> m49_791  [key=0, style=solid];
m49_792 -> m49_790  [key=0, style=bold, color=blue];
m49_801 -> m49_802  [key=0, style=solid];
m49_803 -> m49_801  [key=0, style=bold, color=blue];
m49_818 -> m49_816  [key=0, style=bold, color=blue];
m49_969 -> m49_970  [key=0, style=solid];
m49_971 -> m49_969  [key=0, style=bold, color=blue];
m49_972 -> m49_973  [key=0, style=solid];
m49_974 -> m49_972  [key=0, style=bold, color=blue];
m49_975 -> m49_976  [key=0, style=solid];
m49_977 -> m49_975  [key=0, style=bold, color=blue];
m49_978 -> m49_979  [key=0, style=solid];
m49_980 -> m49_978  [key=0, style=bold, color=blue];
m49_981 -> m49_982  [key=0, style=solid];
m49_983 -> m49_981  [key=0, style=bold, color=blue];
m49_1006 -> m49_1007  [key=0, style=solid];
m49_1008 -> m49_1006  [key=0, style=bold, color=blue];
m49_1012 -> m49_1013  [key=0, style=solid];
m49_1014 -> m49_1012  [key=0, style=bold, color=blue];
m49_1317 -> m49_1318  [key=0, style=solid];
m49_1319 -> m49_1317  [key=0, style=bold, color=blue];
m49_1330 -> m49_1331  [key=0, style=solid];
m49_1332 -> m49_1330  [key=0, style=bold, color=blue];
m49_1337 -> m49_1338  [key=0, style=solid];
m49_1339 -> m49_1337  [key=0, style=bold, color=blue];
m49_1344 -> m49_1345  [key=0, style=solid];
m49_1346 -> m49_1344  [key=0, style=bold, color=blue];
m49_1358 -> m49_1359  [key=0, style=solid];
m49_1360 -> m49_1358  [key=0, style=bold, color=blue];
m49_1367 -> m49_1365  [key=0, style=bold, color=blue];
m49_1438 -> m49_1436  [key=0, style=bold, color=blue];
m49_1540 -> m49_1538  [key=0, style=bold, color=blue];
m49_1979 -> m49_1977  [key=0, style=bold, color=blue];
m49_877 -> m49_878  [key=0, style=solid];
m49_882 -> m49_60  [key=2, style=dotted];
m49_882 -> m49_883  [key=0, style=solid];
m49_884 -> m49_60  [key=2, style=dotted];
m49_884 -> m49_885  [key=0, style=solid];
m49_887 -> m49_60  [key=2, style=dotted];
m49_887 -> m49_888  [key=0, style=solid];
m49_889 -> m49_60  [key=2, style=dotted];
m49_889 -> m49_890  [key=0, style=solid];
m49_881 -> m49_59  [key=2, style=dotted];
m49_881 -> m49_882  [key=0, style=solid];
m49_881 -> m49_356  [key=2, style=dotted];
m49_883 -> m49_59  [key=2, style=dotted];
m49_883 -> m49_884  [key=0, style=solid];
m49_883 -> m49_356  [key=2, style=dotted];
m49_888 -> m49_59  [key=2, style=dotted];
m49_888 -> m49_889  [key=0, style=solid];
m49_888 -> m49_356  [key=2, style=dotted];
m49_880 -> m49_56  [key=2, style=dotted];
m49_880 -> m49_57  [key=2, style=dotted];
m49_880 -> m49_882  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_880 -> m49_884  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_880 -> m49_887  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_880 -> m49_889  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_880 -> m49_881  [key=0, style=solid];
m49_880 -> m49_883  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_880 -> m49_888  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_880 -> m49_800  [key=2, style=dotted];
m49_880 -> m49_885  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_880 -> m49_890  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_885 -> m49_886  [key=0, style=solid];
m49_885 -> m49_793  [key=2, style=dotted];
m49_886 -> m49_887  [key=0, style=solid];
m49_886 -> m49_892  [key=2, style=dotted];
m49_890 -> m49_891  [key=0, style=solid];
m49_890 -> m49_356  [key=2, style=dotted];
m49_890 -> m49_136  [key=2, style=dotted];
m49_879 -> m49_880  [key=0, style=solid];
m49_879 -> m49_886  [key=1, style=dashed, color=darkseagreen4, label=helloWorldData];
m49_879 -> m49_335  [key=2, style=dotted];
m49_878 -> m49_879  [key=0, style=solid];
m49_878 -> m49_795  [key=3, color=darkorchid, style=bold, label="Local variable string helloWorld"];
m49_891 -> m49_877  [key=0, style=bold, color=blue];
m49_935 -> m49_936  [key=0, style=solid];
m49_938 -> m49_58  [key=2, style=dotted];
m49_938 -> m49_938  [key=0, style=solid];
m49_938 -> m49_939  [key=0, style=solid];
m49_937 -> m49_56  [key=2, style=dotted];
m49_937 -> m49_57  [key=2, style=dotted];
m49_937 -> m49_938  [key=0, style=solid];
m49_936 -> m49_937  [key=0, style=solid];
m49_936 -> m49_936  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m49_939 -> m49_935  [key=0, style=bold, color=blue];
m49_1948 -> m49_1949  [key=0, style=solid];
m49_1952 -> m49_60  [key=2, style=dotted];
m49_1952 -> m49_1953  [key=0, style=solid];
m49_1953 -> m49_60  [key=2, style=dotted];
m49_1953 -> m49_1954  [key=0, style=solid];
m49_1950 -> m49_56  [key=2, style=dotted];
m49_1950 -> m49_57  [key=2, style=dotted];
m49_1950 -> m49_1952  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1950 -> m49_1953  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1950 -> m49_1951  [key=0, style=solid];
m49_1951 -> m49_1952  [key=0, style=solid];
m49_1951 -> m49_222  [key=2, style=dotted];
m49_1949 -> m49_1950  [key=0, style=solid];
m49_1949 -> m49_1949  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m49_1954 -> m49_1948  [key=0, style=bold, color=blue];
m49_75 -> m49_76  [key=0, style=solid, color=green];
m49_75 -> m49_60  [key=2, style=dotted, color=green];
m49_2207 -> m49_2208  [key=0, style=solid];
m49_2219 -> m49_60  [key=2, style=dotted];
m49_2219 -> m49_2220  [key=0, style=solid];
m49_2221 -> m49_60  [key=2, style=dotted];
m49_2221 -> m49_2222  [key=0, style=solid];
m49_2217 -> m49_58  [key=2, style=dotted];
m49_2217 -> m49_59  [key=2, style=dotted];
m49_2217 -> m49_2218  [key=0, style=solid];
m49_2222 -> m49_58  [key=2, style=dotted];
m49_2222 -> m49_59  [key=2, style=dotted];
m49_2222 -> m49_2223  [key=0, style=solid];
m49_2216 -> m49_56  [key=2, style=dotted];
m49_2216 -> m49_2217  [key=0, style=solid];
m49_2216 -> m49_2222  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2216 -> m49_2218  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2216 -> m49_2220  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2215 -> m49_57  [key=2, style=dotted];
m49_2215 -> m49_2216  [key=0, style=solid];
m49_2218 -> m49_2219  [key=0, style=solid];
m49_2218 -> m49_222  [key=2, style=dotted];
m49_2220 -> m49_2221  [key=0, style=solid];
m49_2220 -> m49_222  [key=2, style=dotted];
m49_2214 -> m49_2215  [key=0, style=solid];
m49_2214 -> m49_610  [key=2, style=dotted];
m49_2208 -> m49_2214  [key=1, style=dashed, color=darkseagreen4, label=sw];
m49_2208 -> m49_2209  [key=0, style=solid];
m49_2208 -> m49_605  [key=2, style=dotted];
m49_2213 -> m49_2214  [key=0, style=solid];
m49_2213 -> m49_48  [key=2, style=dotted];
m49_2209 -> m49_2213  [key=1, style=dashed, color=darkseagreen4, label=writer];
m49_2209 -> m49_606  [key=2, style=dotted];
m49_2209 -> m49_2210  [key=0, style=solid];
m49_2209 -> m49_2211  [key=1, style=dashed, color=darkseagreen4, label=writer];
m49_2209 -> m49_2212  [key=1, style=dashed, color=darkseagreen4, label=writer];
m49_2212 -> m49_2213  [key=0, style=solid];
m49_2212 -> m49_2224  [key=2, style=dotted];
m49_2210 -> m49_2211  [key=0, style=solid];
m49_2210 -> m49_607  [key=2, style=dotted];
m49_2211 -> m49_2212  [key=0, style=solid];
m49_2211 -> m49_2224  [key=2, style=dotted];
m49_2223 -> m49_2207  [key=0, style=bold, color=blue];
m49_1326 -> m49_1327  [key=0, style=solid];
m49_1327 -> m49_56  [key=2, style=dotted];
m49_1327 -> m49_57  [key=2, style=dotted];
m49_1327 -> m49_1328  [key=0, style=solid];
m49_1327 -> m49_1331  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1328 -> m49_1329  [key=0, style=solid];
m49_1328 -> m49_150  [key=2, style=dotted];
m49_1328 -> m49_1330  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_1329 -> m49_1326  [key=0, style=bold, color=blue];
m49_893 -> m49_894  [key=0, style=solid];
m49_898 -> m49_60  [key=2, style=dotted];
m49_898 -> m49_899  [key=0, style=solid];
m49_901 -> m49_60  [key=2, style=dotted];
m49_901 -> m49_902  [key=0, style=solid];
m49_905 -> m49_60  [key=2, style=dotted];
m49_905 -> m49_906  [key=0, style=solid];
m49_907 -> m49_60  [key=2, style=dotted];
m49_907 -> m49_908  [key=0, style=solid];
m49_897 -> m49_59  [key=2, style=dotted];
m49_897 -> m49_898  [key=0, style=solid];
m49_897 -> m49_356  [key=2, style=dotted];
m49_899 -> m49_59  [key=2, style=dotted];
m49_899 -> m49_900  [key=0, style=solid];
m49_899 -> m49_356  [key=2, style=dotted];
m49_900 -> m49_59  [key=2, style=dotted];
m49_900 -> m49_901  [key=0, style=solid];
m49_900 -> m49_356  [key=2, style=dotted];
m49_902 -> m49_59  [key=2, style=dotted];
m49_902 -> m49_903  [key=0, style=solid];
m49_902 -> m49_356  [key=2, style=dotted];
m49_906 -> m49_59  [key=2, style=dotted];
m49_906 -> m49_907  [key=0, style=solid];
m49_906 -> m49_356  [key=2, style=dotted];
m49_896 -> m49_56  [key=2, style=dotted];
m49_896 -> m49_57  [key=2, style=dotted];
m49_896 -> m49_898  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_896 -> m49_901  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_896 -> m49_905  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_896 -> m49_907  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_896 -> m49_897  [key=0, style=solid];
m49_896 -> m49_899  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_896 -> m49_900  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_896 -> m49_902  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_896 -> m49_906  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_896 -> m49_800  [key=2, style=dotted];
m49_896 -> m49_903  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_896 -> m49_908  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_904 -> m49_905  [key=0, style=solid];
m49_904 -> m49_892  [key=2, style=dotted];
m49_908 -> m49_909  [key=0, style=solid];
m49_908 -> m49_356  [key=2, style=dotted];
m49_908 -> m49_136  [key=2, style=dotted];
m49_903 -> m49_904  [key=0, style=solid];
m49_903 -> m49_793  [key=2, style=dotted];
m49_895 -> m49_896  [key=0, style=solid];
m49_895 -> m49_904  [key=1, style=dashed, color=darkseagreen4, label=helloWorldData];
m49_895 -> m49_335  [key=2, style=dotted];
m49_894 -> m49_895  [key=0, style=solid];
m49_894 -> m49_795  [key=3, color=darkorchid, style=bold, label="Local variable string helloWorld"];
m49_909 -> m49_893  [key=0, style=bold, color=blue];
m49_77 -> m49_60  [key=2, style=dotted];
m49_77 -> m49_78  [key=0, style=solid];
m49_1529 -> m49_1530  [key=0, style=solid];
m49_1533 -> m49_60  [key=2, style=dotted];
m49_1533 -> m49_1534  [key=0, style=solid];
m49_1535 -> m49_60  [key=2, style=dotted];
m49_1535 -> m49_1536  [key=0, style=solid];
m49_1532 -> m49_58  [key=2, style=dotted];
m49_1532 -> m49_59  [key=2, style=dotted];
m49_1532 -> m49_1533  [key=0, style=solid];
m49_1534 -> m49_58  [key=2, style=dotted];
m49_1534 -> m49_59  [key=2, style=dotted];
m49_1534 -> m49_1535  [key=0, style=solid];
m49_1531 -> m49_56  [key=2, style=dotted];
m49_1531 -> m49_57  [key=2, style=dotted];
m49_1531 -> m49_1533  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1531 -> m49_1535  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1531 -> m49_1532  [key=0, style=solid];
m49_1531 -> m49_1534  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1531 -> m49_1536  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1531 -> m49_1539  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1536 -> m49_1537  [key=0, style=solid];
m49_1536 -> m49_150  [key=2, style=dotted];
m49_1536 -> m49_1538  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_1530 -> m49_1531  [key=0, style=solid];
m49_1530 -> m49_1530  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m49_1537 -> m49_1529  [key=0, style=bold, color=blue];
m49_1941 -> m49_1942  [key=0, style=solid];
m49_1945 -> m49_60  [key=2, style=dotted];
m49_1945 -> m49_1946  [key=0, style=solid];
m49_1946 -> m49_60  [key=2, style=dotted];
m49_1946 -> m49_1947  [key=0, style=solid];
m49_1943 -> m49_56  [key=2, style=dotted];
m49_1943 -> m49_57  [key=2, style=dotted];
m49_1943 -> m49_1945  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1943 -> m49_1946  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1943 -> m49_1944  [key=0, style=solid];
m49_1944 -> m49_1945  [key=0, style=solid];
m49_1944 -> m49_222  [key=2, style=dotted];
m49_1942 -> m49_1943  [key=0, style=solid];
m49_1942 -> m49_1942  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m49_1947 -> m49_1941  [key=0, style=bold, color=blue];
m49_337 -> m49_338  [key=0, style=solid];
m49_340 -> m49_59  [key=2, style=dotted];
m49_340 -> m49_341  [key=0, style=solid];
m49_345 -> m49_59  [key=2, style=dotted];
m49_345 -> m49_346  [key=0, style=solid];
m49_347 -> m49_59  [key=2, style=dotted];
m49_347 -> m49_348  [key=0, style=solid];
m49_339 -> m49_56  [key=2, style=dotted];
m49_339 -> m49_340  [key=0, style=solid];
m49_339 -> m49_336  [key=2, style=dotted];
m49_339 -> m49_341  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_344 -> m49_56  [key=2, style=dotted];
m49_344 -> m49_345  [key=0, style=solid];
m49_344 -> m49_336  [key=2, style=dotted];
m49_344 -> m49_346  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_338 -> m49_340  [key=1, style=dashed, color=darkseagreen4, label=ms];
m49_338 -> m49_339  [key=0, style=solid];
m49_338 -> m49_349  [key=2, style=dotted];
m49_338 -> m49_342  [key=1, style=dashed, color=darkseagreen4, label=ms];
m49_341 -> m49_342  [key=0, style=solid];
m49_341 -> m49_350  [key=2, style=dotted];
m49_343 -> m49_345  [key=1, style=dashed, color=darkseagreen4, label=ms];
m49_343 -> m49_347  [key=1, style=dashed, color=darkseagreen4, label=ms];
m49_343 -> m49_344  [key=0, style=solid];
m49_343 -> m49_349  [key=2, style=dotted];
m49_346 -> m49_347  [key=0, style=solid];
m49_346 -> m49_350  [key=2, style=dotted];
m49_342 -> m49_136  [key=2, style=dotted];
m49_342 -> m49_343  [key=0, style=solid];
m49_348 -> m49_337  [key=0, style=bold, color=blue];
m49_1839 -> m49_1840  [key=0, style=solid];
m49_1843 -> m49_60  [key=2, style=dotted];
m49_1843 -> m49_1844  [key=0, style=solid];
m49_1844 -> m49_60  [key=2, style=dotted];
m49_1844 -> m49_1845  [key=0, style=solid];
m49_1845 -> m49_60  [key=2, style=dotted];
m49_1845 -> m49_1846  [key=0, style=solid];
m49_1847 -> m49_60  [key=2, style=dotted];
m49_1847 -> m49_1848  [key=0, style=solid];
m49_1848 -> m49_60  [key=2, style=dotted];
m49_1848 -> m49_1849  [key=0, style=solid];
m49_1850 -> m49_60  [key=2, style=dotted];
m49_1850 -> m49_1851  [key=0, style=solid];
m49_1851 -> m49_60  [key=2, style=dotted];
m49_1851 -> m49_1852  [key=0, style=solid];
m49_1853 -> m49_60  [key=2, style=dotted];
m49_1853 -> m49_1854  [key=0, style=solid];
m49_1854 -> m49_60  [key=2, style=dotted];
m49_1854 -> m49_1855  [key=0, style=solid];
m49_1855 -> m49_60  [key=2, style=dotted];
m49_1855 -> m49_1856  [key=0, style=solid];
m49_1857 -> m49_60  [key=2, style=dotted];
m49_1857 -> m49_1858  [key=0, style=solid];
m49_1858 -> m49_60  [key=2, style=dotted];
m49_1858 -> m49_1859  [key=0, style=solid];
m49_1860 -> m49_60  [key=2, style=dotted];
m49_1860 -> m49_1861  [key=0, style=solid];
m49_1861 -> m49_60  [key=2, style=dotted];
m49_1861 -> m49_1862  [key=0, style=solid];
m49_1862 -> m49_60  [key=2, style=dotted];
m49_1862 -> m49_1863  [key=0, style=solid];
m49_1864 -> m49_60  [key=2, style=dotted];
m49_1864 -> m49_1865  [key=0, style=solid];
m49_1865 -> m49_60  [key=2, style=dotted];
m49_1865 -> m49_1866  [key=0, style=solid];
m49_1866 -> m49_60  [key=2, style=dotted];
m49_1866 -> m49_1867  [key=0, style=solid];
m49_1868 -> m49_60  [key=2, style=dotted];
m49_1868 -> m49_1869  [key=0, style=solid];
m49_1869 -> m49_60  [key=2, style=dotted];
m49_1869 -> m49_1870  [key=0, style=solid];
m49_1870 -> m49_60  [key=2, style=dotted];
m49_1870 -> m49_1871  [key=0, style=solid];
m49_1872 -> m49_60  [key=2, style=dotted];
m49_1872 -> m49_1873  [key=0, style=solid];
m49_1873 -> m49_60  [key=2, style=dotted];
m49_1873 -> m49_1874  [key=0, style=solid];
m49_1874 -> m49_60  [key=2, style=dotted];
m49_1874 -> m49_1875  [key=0, style=solid];
m49_1876 -> m49_60  [key=2, style=dotted];
m49_1876 -> m49_1877  [key=0, style=solid];
m49_1877 -> m49_60  [key=2, style=dotted];
m49_1877 -> m49_1878  [key=0, style=solid];
m49_1879 -> m49_60  [key=2, style=dotted];
m49_1879 -> m49_1880  [key=0, style=solid];
m49_1880 -> m49_60  [key=2, style=dotted];
m49_1880 -> m49_1881  [key=0, style=solid];
m49_1881 -> m49_60  [key=2, style=dotted];
m49_1881 -> m49_1882  [key=0, style=solid];
m49_1883 -> m49_60  [key=2, style=dotted];
m49_1883 -> m49_1884  [key=0, style=solid];
m49_1885 -> m49_60  [key=2, style=dotted];
m49_1885 -> m49_1886  [key=0, style=solid];
m49_1886 -> m49_60  [key=2, style=dotted];
m49_1886 -> m49_1887  [key=0, style=solid];
m49_1888 -> m49_60  [key=2, style=dotted];
m49_1888 -> m49_1889  [key=0, style=solid];
m49_1889 -> m49_60  [key=2, style=dotted];
m49_1889 -> m49_1890  [key=0, style=solid];
m49_1891 -> m49_60  [key=2, style=dotted];
m49_1891 -> m49_1892  [key=0, style=solid];
m49_1892 -> m49_60  [key=2, style=dotted];
m49_1892 -> m49_1893  [key=0, style=solid];
m49_1894 -> m49_60  [key=2, style=dotted];
m49_1894 -> m49_1895  [key=0, style=solid];
m49_1895 -> m49_60  [key=2, style=dotted];
m49_1895 -> m49_1896  [key=0, style=solid];
m49_1897 -> m49_60  [key=2, style=dotted];
m49_1897 -> m49_1898  [key=0, style=solid];
m49_1899 -> m49_60  [key=2, style=dotted];
m49_1899 -> m49_1900  [key=0, style=solid];
m49_1900 -> m49_60  [key=2, style=dotted];
m49_1900 -> m49_1901  [key=0, style=solid];
m49_1902 -> m49_60  [key=2, style=dotted];
m49_1902 -> m49_1903  [key=0, style=solid];
m49_1904 -> m49_60  [key=2, style=dotted];
m49_1904 -> m49_1905  [key=0, style=solid];
m49_1906 -> m49_60  [key=2, style=dotted];
m49_1906 -> m49_1907  [key=0, style=solid];
m49_1908 -> m49_60  [key=2, style=dotted];
m49_1908 -> m49_1909  [key=0, style=solid];
m49_1910 -> m49_60  [key=2, style=dotted];
m49_1910 -> m49_1911  [key=0, style=solid];
m49_1912 -> m49_60  [key=2, style=dotted];
m49_1912 -> m49_1913  [key=0, style=solid];
m49_1914 -> m49_60  [key=2, style=dotted];
m49_1914 -> m49_1915  [key=0, style=solid];
m49_1916 -> m49_60  [key=2, style=dotted];
m49_1916 -> m49_1917  [key=0, style=solid];
m49_1918 -> m49_60  [key=2, style=dotted];
m49_1918 -> m49_1919  [key=0, style=solid];
m49_1919 -> m49_60  [key=2, style=dotted];
m49_1919 -> m49_1920  [key=0, style=solid];
m49_1921 -> m49_60  [key=2, style=dotted];
m49_1921 -> m49_1922  [key=0, style=solid];
m49_1922 -> m49_60  [key=2, style=dotted];
m49_1922 -> m49_1923  [key=0, style=solid];
m49_1842 -> m49_58  [key=2, style=dotted];
m49_1842 -> m49_59  [key=2, style=dotted];
m49_1842 -> m49_1843  [key=0, style=solid];
m49_1846 -> m49_58  [key=2, style=dotted];
m49_1846 -> m49_59  [key=2, style=dotted];
m49_1846 -> m49_1847  [key=0, style=solid];
m49_1849 -> m49_58  [key=2, style=dotted];
m49_1849 -> m49_59  [key=2, style=dotted];
m49_1849 -> m49_1850  [key=0, style=solid];
m49_1852 -> m49_58  [key=2, style=dotted];
m49_1852 -> m49_59  [key=2, style=dotted];
m49_1852 -> m49_1853  [key=0, style=solid];
m49_1856 -> m49_58  [key=2, style=dotted];
m49_1856 -> m49_59  [key=2, style=dotted];
m49_1856 -> m49_1857  [key=0, style=solid];
m49_1859 -> m49_58  [key=2, style=dotted];
m49_1859 -> m49_59  [key=2, style=dotted];
m49_1859 -> m49_1860  [key=0, style=solid];
m49_1863 -> m49_58  [key=2, style=dotted];
m49_1863 -> m49_59  [key=2, style=dotted];
m49_1863 -> m49_1864  [key=0, style=solid];
m49_1867 -> m49_58  [key=2, style=dotted];
m49_1867 -> m49_59  [key=2, style=dotted];
m49_1867 -> m49_1868  [key=0, style=solid];
m49_1871 -> m49_58  [key=2, style=dotted];
m49_1871 -> m49_59  [key=2, style=dotted];
m49_1871 -> m49_1872  [key=0, style=solid];
m49_1875 -> m49_58  [key=2, style=dotted];
m49_1875 -> m49_59  [key=2, style=dotted];
m49_1875 -> m49_1876  [key=0, style=solid];
m49_1878 -> m49_58  [key=2, style=dotted];
m49_1878 -> m49_59  [key=2, style=dotted];
m49_1878 -> m49_1879  [key=0, style=solid];
m49_1882 -> m49_58  [key=2, style=dotted];
m49_1882 -> m49_59  [key=2, style=dotted];
m49_1882 -> m49_1883  [key=0, style=solid];
m49_1884 -> m49_58  [key=2, style=dotted];
m49_1884 -> m49_59  [key=2, style=dotted];
m49_1884 -> m49_1885  [key=0, style=solid];
m49_1887 -> m49_58  [key=2, style=dotted];
m49_1887 -> m49_59  [key=2, style=dotted];
m49_1887 -> m49_1888  [key=0, style=solid];
m49_1890 -> m49_58  [key=2, style=dotted];
m49_1890 -> m49_59  [key=2, style=dotted];
m49_1890 -> m49_1891  [key=0, style=solid];
m49_1893 -> m49_58  [key=2, style=dotted];
m49_1893 -> m49_59  [key=2, style=dotted];
m49_1893 -> m49_1894  [key=0, style=solid];
m49_1896 -> m49_58  [key=2, style=dotted];
m49_1896 -> m49_59  [key=2, style=dotted];
m49_1896 -> m49_1897  [key=0, style=solid];
m49_1898 -> m49_58  [key=2, style=dotted];
m49_1898 -> m49_59  [key=2, style=dotted];
m49_1898 -> m49_1899  [key=0, style=solid];
m49_1901 -> m49_58  [key=2, style=dotted];
m49_1901 -> m49_59  [key=2, style=dotted];
m49_1901 -> m49_1902  [key=0, style=solid];
m49_1903 -> m49_58  [key=2, style=dotted];
m49_1903 -> m49_59  [key=2, style=dotted];
m49_1903 -> m49_1904  [key=0, style=solid];
m49_1905 -> m49_58  [key=2, style=dotted];
m49_1905 -> m49_59  [key=2, style=dotted];
m49_1905 -> m49_1906  [key=0, style=solid];
m49_1907 -> m49_58  [key=2, style=dotted];
m49_1907 -> m49_59  [key=2, style=dotted];
m49_1907 -> m49_1908  [key=0, style=solid];
m49_1909 -> m49_58  [key=2, style=dotted];
m49_1909 -> m49_59  [key=2, style=dotted];
m49_1909 -> m49_1910  [key=0, style=solid];
m49_1911 -> m49_58  [key=2, style=dotted];
m49_1911 -> m49_59  [key=2, style=dotted];
m49_1911 -> m49_1912  [key=0, style=solid];
m49_1913 -> m49_58  [key=2, style=dotted];
m49_1913 -> m49_59  [key=2, style=dotted];
m49_1913 -> m49_1914  [key=0, style=solid];
m49_1915 -> m49_58  [key=2, style=dotted];
m49_1915 -> m49_59  [key=2, style=dotted];
m49_1915 -> m49_1916  [key=0, style=solid];
m49_1917 -> m49_58  [key=2, style=dotted];
m49_1917 -> m49_59  [key=2, style=dotted];
m49_1917 -> m49_1918  [key=0, style=solid];
m49_1920 -> m49_58  [key=2, style=dotted];
m49_1920 -> m49_59  [key=2, style=dotted];
m49_1920 -> m49_1921  [key=0, style=solid];
m49_1923 -> m49_58  [key=2, style=dotted];
m49_1923 -> m49_1924  [key=0, style=solid];
m49_1923 -> m49_136  [key=2, style=dotted];
m49_1841 -> m49_56  [key=2, style=dotted];
m49_1841 -> m49_1843  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1844  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1845  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1847  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1848  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1850  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1851  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1853  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1854  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1855  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1857  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1858  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1860  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1861  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1862  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1864  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1865  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1866  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1868  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1869  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1870  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1872  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1873  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1874  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1876  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1877  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1879  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1880  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1881  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1883  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1885  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1886  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1888  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1889  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1891  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1892  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1894  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1895  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1897  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1899  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1900  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1902  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1904  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1906  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1908  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1910  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1912  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1914  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1916  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1918  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1919  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1921  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1922  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1842  [key=0, style=solid];
m49_1841 -> m49_1846  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1849  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1852  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1856  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1859  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1863  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1867  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1871  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1875  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1878  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1882  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1884  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1887  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1890  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1893  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1896  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1898  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1901  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1903  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1905  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1907  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1909  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1911  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1913  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1915  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1917  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1920  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_1923  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1841 -> m49_336  [key=2, style=dotted];
m49_1841 -> m49_374  [key=2, style=dotted];
m49_1841 -> m49_375  [key=2, style=dotted];
m49_1840 -> m49_1841  [key=0, style=solid];
m49_1924 -> m49_1839  [key=0, style=bold, color=blue];
m49_1383 -> m49_1384  [key=0, style=solid];
m49_1387 -> m49_60  [key=2, style=dotted];
m49_1387 -> m49_1388  [key=0, style=solid];
m49_1389 -> m49_60  [key=2, style=dotted];
m49_1389 -> m49_1390  [key=0, style=solid];
m49_1391 -> m49_60  [key=2, style=dotted];
m49_1391 -> m49_1392  [key=0, style=solid];
m49_1392 -> m49_60  [key=2, style=dotted];
m49_1392 -> m49_1393  [key=0, style=solid];
m49_1394 -> m49_60  [key=2, style=dotted];
m49_1394 -> m49_1395  [key=0, style=solid];
m49_1386 -> m49_58  [key=2, style=dotted];
m49_1386 -> m49_59  [key=2, style=dotted];
m49_1386 -> m49_1387  [key=0, style=solid];
m49_1388 -> m49_58  [key=2, style=dotted];
m49_1388 -> m49_59  [key=2, style=dotted];
m49_1388 -> m49_1389  [key=0, style=solid];
m49_1390 -> m49_58  [key=2, style=dotted];
m49_1390 -> m49_59  [key=2, style=dotted];
m49_1390 -> m49_1391  [key=0, style=solid];
m49_1393 -> m49_58  [key=2, style=dotted];
m49_1393 -> m49_59  [key=2, style=dotted];
m49_1393 -> m49_1394  [key=0, style=solid];
m49_1385 -> m49_56  [key=2, style=dotted];
m49_1385 -> m49_57  [key=2, style=dotted];
m49_1385 -> m49_1387  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1385 -> m49_1389  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1385 -> m49_1391  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1385 -> m49_1392  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1385 -> m49_1394  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1385 -> m49_1386  [key=0, style=solid];
m49_1385 -> m49_1388  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1385 -> m49_1390  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1385 -> m49_1393  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1384 -> m49_1385  [key=0, style=solid];
m49_1384 -> m49_1384  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m49_1395 -> m49_1383  [key=0, style=bold, color=blue];
m49_180 -> m49_181  [key=0, style=solid];
m49_184 -> m49_60  [key=2, style=dotted];
m49_184 -> m49_185  [key=0, style=solid];
m49_186 -> m49_60  [key=2, style=dotted];
m49_186 -> m49_187  [key=0, style=solid];
m49_190 -> m49_60  [key=2, style=dotted];
m49_190 -> m49_191  [key=0, style=solid];
m49_183 -> m49_58  [key=2, style=dotted];
m49_183 -> m49_59  [key=2, style=dotted];
m49_183 -> m49_184  [key=0, style=solid];
m49_185 -> m49_58  [key=2, style=dotted];
m49_185 -> m49_59  [key=2, style=dotted];
m49_185 -> m49_186  [key=0, style=solid];
m49_189 -> m49_58  [key=2, style=dotted];
m49_189 -> m49_59  [key=2, style=dotted];
m49_189 -> m49_190  [key=0, style=solid];
m49_191 -> m49_58  [key=2, style=dotted];
m49_191 -> m49_192  [key=0, style=solid];
m49_191 -> m49_136  [key=2, style=dotted];
m49_182 -> m49_56  [key=2, style=dotted];
m49_182 -> m49_57  [key=2, style=dotted];
m49_182 -> m49_184  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_182 -> m49_186  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_182 -> m49_190  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_182 -> m49_183  [key=0, style=solid];
m49_182 -> m49_185  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_182 -> m49_189  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_182 -> m49_191  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_182 -> m49_187  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_187 -> m49_189  [key=0, style=solid];
m49_187 -> m49_188  [key=0, style=solid];
m49_187 -> m49_94  [key=2, style=dotted];
m49_188 -> m49_189  [key=0, style=solid];
m49_181 -> m49_182  [key=0, style=solid];
m49_181 -> m49_181  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m49_192 -> m49_180  [key=0, style=bold, color=blue];
m49_1980 -> m49_1981  [key=0, style=solid];
m49_1983 -> m49_60  [key=2, style=dotted];
m49_1983 -> m49_1984  [key=0, style=solid];
m49_1983 -> m49_1500  [key=2, style=dotted];
m49_1983 -> m49_2024  [key=2, style=dotted];
m49_1984 -> m49_60  [key=2, style=dotted];
m49_1984 -> m49_1985  [key=0, style=solid];
m49_1984 -> m49_2025  [key=2, style=dotted];
m49_1989 -> m49_60  [key=2, style=dotted];
m49_1989 -> m49_1990  [key=0, style=solid];
m49_1990 -> m49_60  [key=2, style=dotted];
m49_1990 -> m49_1991  [key=0, style=solid];
m49_1992 -> m49_60  [key=2, style=dotted];
m49_1992 -> m49_1993  [key=0, style=solid];
m49_1993 -> m49_60  [key=2, style=dotted];
m49_1993 -> m49_1994  [key=0, style=solid];
m49_1995 -> m49_60  [key=2, style=dotted];
m49_1995 -> m49_1996  [key=0, style=solid];
m49_1996 -> m49_60  [key=2, style=dotted];
m49_1996 -> m49_1997  [key=0, style=solid];
m49_1998 -> m49_60  [key=2, style=dotted];
m49_1998 -> m49_1999  [key=0, style=solid];
m49_1999 -> m49_60  [key=2, style=dotted];
m49_1999 -> m49_2000  [key=0, style=solid];
m49_2001 -> m49_60  [key=2, style=dotted];
m49_2001 -> m49_2002  [key=0, style=solid];
m49_2002 -> m49_60  [key=2, style=dotted];
m49_2002 -> m49_2003  [key=0, style=solid];
m49_2007 -> m49_60  [key=2, style=dotted];
m49_2007 -> m49_2008  [key=0, style=solid];
m49_2008 -> m49_60  [key=2, style=dotted];
m49_2008 -> m49_2009  [key=0, style=solid];
m49_2010 -> m49_60  [key=2, style=dotted];
m49_2010 -> m49_2011  [key=0, style=solid];
m49_2011 -> m49_60  [key=2, style=dotted];
m49_2011 -> m49_2012  [key=0, style=solid];
m49_2013 -> m49_60  [key=2, style=dotted];
m49_2013 -> m49_2014  [key=0, style=solid];
m49_2014 -> m49_60  [key=2, style=dotted];
m49_2014 -> m49_2015  [key=0, style=solid];
m49_2016 -> m49_60  [key=2, style=dotted];
m49_2016 -> m49_2017  [key=0, style=solid];
m49_2017 -> m49_60  [key=2, style=dotted];
m49_2017 -> m49_2018  [key=0, style=solid];
m49_2019 -> m49_60  [key=2, style=dotted];
m49_2019 -> m49_2020  [key=0, style=solid];
m49_2020 -> m49_60  [key=2, style=dotted];
m49_2020 -> m49_2021  [key=0, style=solid];
m49_1987 -> m49_58  [key=2, style=dotted];
m49_1987 -> m49_1988  [key=0, style=solid];
m49_1988 -> m49_58  [key=2, style=dotted];
m49_1988 -> m49_1989  [key=0, style=solid];
m49_1991 -> m49_58  [key=2, style=dotted];
m49_1991 -> m49_1992  [key=0, style=solid];
m49_1994 -> m49_58  [key=2, style=dotted];
m49_1994 -> m49_1995  [key=0, style=solid];
m49_1997 -> m49_58  [key=2, style=dotted];
m49_1997 -> m49_1998  [key=0, style=solid];
m49_2000 -> m49_58  [key=2, style=dotted];
m49_2000 -> m49_2001  [key=0, style=solid];
m49_2003 -> m49_58  [key=2, style=dotted];
m49_2003 -> m49_2004  [key=0, style=solid];
m49_2005 -> m49_58  [key=2, style=dotted];
m49_2005 -> m49_2006  [key=0, style=solid];
m49_2021 -> m49_58  [key=2, style=dotted];
m49_2021 -> m49_2022  [key=0, style=solid];
m49_1986 -> m49_56  [key=2, style=dotted];
m49_1986 -> m49_57  [key=2, style=dotted];
m49_1986 -> m49_1989  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1986 -> m49_1990  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1986 -> m49_1992  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1986 -> m49_1993  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1986 -> m49_1995  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1986 -> m49_1996  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1986 -> m49_1998  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1986 -> m49_1999  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1986 -> m49_2001  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1986 -> m49_2002  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1986 -> m49_1987  [key=0, style=solid];
m49_1986 -> m49_1988  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1986 -> m49_1991  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1986 -> m49_1994  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1986 -> m49_1997  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1986 -> m49_2000  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1986 -> m49_2003  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2004 -> m49_56  [key=2, style=dotted];
m49_2004 -> m49_57  [key=2, style=dotted];
m49_2004 -> m49_2007  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2004 -> m49_2008  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2004 -> m49_2010  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2004 -> m49_2011  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2004 -> m49_2013  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2004 -> m49_2014  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2004 -> m49_2016  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2004 -> m49_2017  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2004 -> m49_2019  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2004 -> m49_2020  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2004 -> m49_2005  [key=0, style=solid];
m49_2004 -> m49_2021  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2004 -> m49_2006  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2004 -> m49_2009  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2004 -> m49_2012  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2004 -> m49_2015  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2004 -> m49_2018  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1982 -> m49_1983  [key=0, style=solid];
m49_1982 -> m49_1984  [key=1, style=dashed, color=darkseagreen4, label=d];
m49_1982 -> m49_2023  [key=2, style=dotted];
m49_1985 -> m49_1986  [key=0, style=solid];
m49_1985 -> m49_2004  [key=1, style=dashed, color=darkseagreen4, label=json];
m49_1985 -> m49_1985  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m49_2006 -> m49_2007  [key=0, style=solid];
m49_2006 -> m49_222  [key=2, style=dotted];
m49_2009 -> m49_2010  [key=0, style=solid];
m49_2009 -> m49_222  [key=2, style=dotted];
m49_2012 -> m49_2013  [key=0, style=solid];
m49_2012 -> m49_222  [key=2, style=dotted];
m49_2015 -> m49_2016  [key=0, style=solid];
m49_2015 -> m49_222  [key=2, style=dotted];
m49_2018 -> m49_2019  [key=0, style=solid];
m49_2018 -> m49_222  [key=2, style=dotted];
m49_1981 -> m49_1982  [key=0, style=solid];
m49_2022 -> m49_1980  [key=0, style=bold, color=blue];
m49_1427 -> m49_1428  [key=0, style=solid];
m49_1431 -> m49_60  [key=2, style=dotted];
m49_1431 -> m49_1432  [key=0, style=solid];
m49_1433 -> m49_60  [key=2, style=dotted];
m49_1433 -> m49_1434  [key=0, style=solid];
m49_1430 -> m49_58  [key=2, style=dotted];
m49_1430 -> m49_59  [key=2, style=dotted];
m49_1430 -> m49_1431  [key=0, style=solid];
m49_1432 -> m49_58  [key=2, style=dotted];
m49_1432 -> m49_59  [key=2, style=dotted];
m49_1432 -> m49_1433  [key=0, style=solid];
m49_1429 -> m49_56  [key=2, style=dotted];
m49_1429 -> m49_57  [key=2, style=dotted];
m49_1429 -> m49_1431  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1429 -> m49_1433  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1429 -> m49_1430  [key=0, style=solid];
m49_1429 -> m49_1432  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1429 -> m49_1434  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1429 -> m49_1437  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1434 -> m49_1435  [key=0, style=solid];
m49_1434 -> m49_150  [key=2, style=dotted];
m49_1434 -> m49_1436  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_1428 -> m49_1429  [key=0, style=solid];
m49_1428 -> m49_1428  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m49_1435 -> m49_1427  [key=0, style=bold, color=blue];
m49_2233 -> m49_2234  [key=0, style=solid];
m49_2237 -> m49_60  [key=2, style=dotted];
m49_2237 -> m49_2238  [key=0, style=solid];
m49_2238 -> m49_60  [key=2, style=dotted];
m49_2238 -> m49_2239  [key=0, style=solid];
m49_2240 -> m49_60  [key=2, style=dotted];
m49_2240 -> m49_2241  [key=0, style=solid];
m49_2241 -> m49_60  [key=2, style=dotted];
m49_2241 -> m49_2242  [key=0, style=solid];
m49_2243 -> m49_60  [key=2, style=dotted];
m49_2243 -> m49_2244  [key=0, style=solid];
m49_2244 -> m49_60  [key=2, style=dotted];
m49_2244 -> m49_2245  [key=0, style=solid];
m49_2246 -> m49_60  [key=2, style=dotted];
m49_2246 -> m49_2247  [key=0, style=solid];
m49_2247 -> m49_60  [key=2, style=dotted];
m49_2247 -> m49_2248  [key=0, style=solid];
m49_2252 -> m49_60  [key=2, style=dotted];
m49_2252 -> m49_2253  [key=0, style=solid];
m49_2253 -> m49_60  [key=2, style=dotted];
m49_2253 -> m49_2254  [key=0, style=solid];
m49_2255 -> m49_60  [key=2, style=dotted];
m49_2255 -> m49_2256  [key=0, style=solid];
m49_2256 -> m49_60  [key=2, style=dotted];
m49_2256 -> m49_2257  [key=0, style=solid];
m49_2258 -> m49_60  [key=2, style=dotted];
m49_2258 -> m49_2259  [key=0, style=solid];
m49_2259 -> m49_60  [key=2, style=dotted];
m49_2259 -> m49_2260  [key=0, style=solid];
m49_2261 -> m49_60  [key=2, style=dotted];
m49_2261 -> m49_2262  [key=0, style=solid];
m49_2262 -> m49_60  [key=2, style=dotted];
m49_2262 -> m49_2263  [key=0, style=solid];
m49_2236 -> m49_58  [key=2, style=dotted];
m49_2236 -> m49_59  [key=2, style=dotted];
m49_2236 -> m49_2237  [key=0, style=solid];
m49_2239 -> m49_58  [key=2, style=dotted];
m49_2239 -> m49_59  [key=2, style=dotted];
m49_2239 -> m49_2240  [key=0, style=solid];
m49_2242 -> m49_58  [key=2, style=dotted];
m49_2242 -> m49_59  [key=2, style=dotted];
m49_2242 -> m49_2243  [key=0, style=solid];
m49_2245 -> m49_58  [key=2, style=dotted];
m49_2245 -> m49_59  [key=2, style=dotted];
m49_2245 -> m49_2246  [key=0, style=solid];
m49_2248 -> m49_58  [key=2, style=dotted];
m49_2248 -> m49_2249  [key=0, style=solid];
m49_2248 -> m49_136  [key=2, style=dotted];
m49_2251 -> m49_58  [key=2, style=dotted];
m49_2251 -> m49_59  [key=2, style=dotted];
m49_2251 -> m49_2252  [key=0, style=solid];
m49_2254 -> m49_58  [key=2, style=dotted];
m49_2254 -> m49_59  [key=2, style=dotted];
m49_2254 -> m49_2255  [key=0, style=solid];
m49_2257 -> m49_58  [key=2, style=dotted];
m49_2257 -> m49_59  [key=2, style=dotted];
m49_2257 -> m49_2258  [key=0, style=solid];
m49_2260 -> m49_58  [key=2, style=dotted];
m49_2260 -> m49_59  [key=2, style=dotted];
m49_2260 -> m49_2261  [key=0, style=solid];
m49_2263 -> m49_58  [key=2, style=dotted];
m49_2263 -> m49_2264  [key=0, style=solid];
m49_2263 -> m49_136  [key=2, style=dotted];
m49_2235 -> m49_56  [key=2, style=dotted];
m49_2235 -> m49_57  [key=2, style=dotted];
m49_2235 -> m49_2237  [key=1, style=dashed, color=darkseagreen4, label=r];
m49_2235 -> m49_2238  [key=1, style=dashed, color=darkseagreen4, label=r];
m49_2235 -> m49_2240  [key=1, style=dashed, color=darkseagreen4, label=r];
m49_2235 -> m49_2241  [key=1, style=dashed, color=darkseagreen4, label=r];
m49_2235 -> m49_2243  [key=1, style=dashed, color=darkseagreen4, label=r];
m49_2235 -> m49_2244  [key=1, style=dashed, color=darkseagreen4, label=r];
m49_2235 -> m49_2246  [key=1, style=dashed, color=darkseagreen4, label=r];
m49_2235 -> m49_2247  [key=1, style=dashed, color=darkseagreen4, label=r];
m49_2235 -> m49_2236  [key=0, style=solid];
m49_2235 -> m49_2239  [key=1, style=dashed, color=darkseagreen4, label=r];
m49_2235 -> m49_2242  [key=1, style=dashed, color=darkseagreen4, label=r];
m49_2235 -> m49_2245  [key=1, style=dashed, color=darkseagreen4, label=r];
m49_2235 -> m49_2248  [key=1, style=dashed, color=darkseagreen4, label=r];
m49_2250 -> m49_56  [key=2, style=dotted];
m49_2250 -> m49_57  [key=2, style=dotted];
m49_2250 -> m49_2252  [key=1, style=dashed, color=darkseagreen4, label=r];
m49_2250 -> m49_2253  [key=1, style=dashed, color=darkseagreen4, label=r];
m49_2250 -> m49_2255  [key=1, style=dashed, color=darkseagreen4, label=r];
m49_2250 -> m49_2256  [key=1, style=dashed, color=darkseagreen4, label=r];
m49_2250 -> m49_2258  [key=1, style=dashed, color=darkseagreen4, label=r];
m49_2250 -> m49_2259  [key=1, style=dashed, color=darkseagreen4, label=r];
m49_2250 -> m49_2261  [key=1, style=dashed, color=darkseagreen4, label=r];
m49_2250 -> m49_2262  [key=1, style=dashed, color=darkseagreen4, label=r];
m49_2250 -> m49_2251  [key=0, style=solid];
m49_2250 -> m49_2254  [key=1, style=dashed, color=darkseagreen4, label=r];
m49_2250 -> m49_2257  [key=1, style=dashed, color=darkseagreen4, label=r];
m49_2250 -> m49_2260  [key=1, style=dashed, color=darkseagreen4, label=r];
m49_2250 -> m49_2263  [key=1, style=dashed, color=darkseagreen4, label=r];
m49_2249 -> m49_2250  [key=0, style=solid];
m49_2249 -> m49_2249  [key=3, color=darkorchid, style=bold, label="Local variable string json2"];
m49_2234 -> m49_2235  [key=0, style=solid];
m49_2234 -> m49_2234  [key=3, color=darkorchid, style=bold, label="Local variable string json1"];
m49_2264 -> m49_2233  [key=0, style=bold, color=blue];
m49_84 -> m49_85  [key=0, style=solid];
m49_88 -> m49_60  [key=2, style=dotted];
m49_88 -> m49_89  [key=0, style=solid];
m49_92 -> m49_60  [key=2, style=dotted];
m49_92 -> m49_93  [key=0, style=solid];
m49_85 -> m49_56  [key=2, style=dotted];
m49_85 -> m49_57  [key=2, style=dotted];
m49_85 -> m49_86  [key=0, style=solid];
m49_89 -> m49_56  [key=2, style=dotted];
m49_89 -> m49_57  [key=2, style=dotted];
m49_89 -> m49_90  [key=0, style=solid];
m49_86 -> m49_88  [key=1, style=dashed, color=darkseagreen4, label=data];
m49_86 -> m49_87  [key=0, style=solid];
m49_86 -> m49_94  [key=2, style=dotted];
m49_87 -> m49_88  [key=0, style=solid];
m49_87 -> m49_95  [key=2, style=dotted];
m49_90 -> m49_92  [key=1, style=dashed, color=darkseagreen4, label=data];
m49_90 -> m49_91  [key=0, style=solid];
m49_90 -> m49_94  [key=2, style=dotted];
m49_91 -> m49_92  [key=0, style=solid];
m49_91 -> m49_96  [key=2, style=dotted];
m49_91 -> m49_97  [key=2, style=dotted];
m49_93 -> m49_84  [key=0, style=bold, color=blue];
m49_1605 -> m49_1606  [key=0, style=solid];
m49_1613 -> m49_60  [key=2, style=dotted];
m49_1613 -> m49_1614  [key=0, style=solid];
m49_1613 -> m49_1615  [key=2, style=dotted];
m49_1610 -> m49_58  [key=2, style=dotted];
m49_1610 -> m49_1611  [key=0, style=solid];
m49_1612 -> m49_58  [key=2, style=dotted];
m49_1612 -> m49_59  [key=2, style=dotted];
m49_1612 -> m49_1613  [key=0, style=solid];
m49_1607 -> m49_56  [key=2, style=dotted];
m49_1607 -> m49_57  [key=2, style=dotted];
m49_1607 -> m49_1613  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1607 -> m49_1610  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1607 -> m49_1612  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1607 -> m49_1608  [key=0, style=solid];
m49_1609 -> m49_1610  [key=0, style=solid];
m49_1609 -> m49_1612  [key=0, style=solid];
m49_1611 -> m49_1609  [key=0, style=solid];
m49_1611 -> m49_1611  [key=1, style=dashed, color=darkseagreen4, label=i];
m49_1606 -> m49_1607  [key=0, style=solid];
m49_1606 -> m49_1606  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m49_1608 -> m49_1609  [key=0, style=solid];
m49_1608 -> m49_1611  [key=1, style=dashed, color=darkseagreen4, label=i];
m49_1608 -> m49_590  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m49_1614 -> m49_1605  [key=0, style=bold, color=blue];
m49_668 -> m49_669  [key=0, style=solid];
m49_673 -> m49_60  [key=2, style=dotted];
m49_673 -> m49_674  [key=0, style=solid];
m49_672 -> m49_60  [key=2, style=dotted];
m49_672 -> m49_673  [key=0, style=solid];
m49_671 -> m49_58  [key=2, style=dotted];
m49_671 -> m49_672  [key=0, style=solid];
m49_670 -> m49_56  [key=2, style=dotted];
m49_670 -> m49_57  [key=2, style=dotted];
m49_670 -> m49_673  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_670 -> m49_672  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_670 -> m49_671  [key=0, style=solid];
m49_670 -> m49_663  [key=2, style=dotted];
m49_670 -> m49_677  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_669 -> m49_673  [key=1, style=dashed, color=darkseagreen4, label=i];
m49_669 -> m49_670  [key=0, style=solid];
m49_669 -> m49_669  [key=3, color=darkorchid, style=bold, label="Local variable long i"];
m49_669 -> m49_676  [key=1, style=dashed, color=darkseagreen4, label=i];
m49_674 -> m49_657  [key=3, color=darkorchid, style=bold, label="Local variable int j"];
m49_674 -> m49_675  [key=0, style=solid];
m49_674 -> m49_676  [key=1, style=dashed, color=darkseagreen4, label=j];
m49_674 -> m49_678  [key=1, style=dashed, color=darkseagreen4, label=j];
m49_677 -> m49_678  [key=0, style=solid];
m49_677 -> m49_150  [key=2, style=dotted];
m49_677 -> m49_680  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_676 -> m49_681  [key=1, style=dashed, color=darkseagreen4, label=total];
m49_676 -> m49_677  [key=0, style=solid];
m49_675 -> m49_676  [key=0, style=solid];
m49_675 -> m49_679  [key=0, style=solid];
m49_678 -> m49_675  [key=0, style=solid];
m49_678 -> m49_678  [key=1, style=dashed, color=darkseagreen4, label=j];
m49_679 -> m49_668  [key=0, style=bold, color=blue];
m49_1235 -> m49_1236  [key=0, style=solid];
m49_1239 -> m49_60  [key=2, style=dotted];
m49_1239 -> m49_1240  [key=0, style=solid];
m49_1241 -> m49_60  [key=2, style=dotted];
m49_1241 -> m49_1242  [key=0, style=solid];
m49_1242 -> m49_60  [key=2, style=dotted];
m49_1242 -> m49_1243  [key=0, style=solid];
m49_1244 -> m49_60  [key=2, style=dotted];
m49_1244 -> m49_1245  [key=0, style=solid];
m49_1245 -> m49_60  [key=2, style=dotted];
m49_1245 -> m49_1246  [key=0, style=solid];
m49_1247 -> m49_60  [key=2, style=dotted];
m49_1247 -> m49_1248  [key=0, style=solid];
m49_1248 -> m49_60  [key=2, style=dotted];
m49_1248 -> m49_1249  [key=0, style=solid];
m49_1250 -> m49_60  [key=2, style=dotted];
m49_1250 -> m49_1251  [key=0, style=solid];
m49_1238 -> m49_58  [key=2, style=dotted];
m49_1238 -> m49_59  [key=2, style=dotted];
m49_1238 -> m49_1239  [key=0, style=solid];
m49_1240 -> m49_58  [key=2, style=dotted];
m49_1240 -> m49_59  [key=2, style=dotted];
m49_1240 -> m49_1241  [key=0, style=solid];
m49_1243 -> m49_58  [key=2, style=dotted];
m49_1243 -> m49_59  [key=2, style=dotted];
m49_1243 -> m49_1244  [key=0, style=solid];
m49_1246 -> m49_58  [key=2, style=dotted];
m49_1246 -> m49_59  [key=2, style=dotted];
m49_1246 -> m49_1247  [key=0, style=solid];
m49_1249 -> m49_58  [key=2, style=dotted];
m49_1249 -> m49_59  [key=2, style=dotted];
m49_1249 -> m49_1250  [key=0, style=solid];
m49_1251 -> m49_58  [key=2, style=dotted];
m49_1251 -> m49_1252  [key=0, style=solid];
m49_1251 -> m49_136  [key=2, style=dotted];
m49_1237 -> m49_56  [key=2, style=dotted];
m49_1237 -> m49_1239  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1237 -> m49_1241  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1237 -> m49_1242  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1237 -> m49_1244  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1237 -> m49_1245  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1237 -> m49_1247  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1237 -> m49_1248  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1237 -> m49_1250  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1237 -> m49_1238  [key=0, style=solid];
m49_1237 -> m49_1240  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1237 -> m49_1243  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1237 -> m49_1246  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1237 -> m49_1249  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1237 -> m49_1251  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1236 -> m49_57  [key=2, style=dotted];
m49_1236 -> m49_1237  [key=0, style=solid];
m49_1252 -> m49_1235  [key=0, style=bold, color=blue];
m49_79 -> m49_58  [key=2, style=dotted];
m49_79 -> m49_59  [key=2, style=dotted];
m49_79 -> m49_80  [key=0, style=solid];
m49_351 -> m49_352  [key=0, style=solid];
m49_353 -> m49_56  [key=2, style=dotted];
m49_353 -> m49_57  [key=2, style=dotted];
m49_353 -> m49_354  [key=0, style=solid];
m49_352 -> m49_353  [key=0, style=solid];
m49_352 -> m49_352  [key=3, color=darkorchid, style=bold, label="Local variable string input"];
m49_354 -> m49_356  [key=2, style=dotted];
m49_354 -> m49_354  [key=0, style=solid];
m49_354 -> m49_355  [key=0, style=solid];
m49_355 -> m49_351  [key=0, style=bold, color=blue];
m49_207 -> m49_208  [key=0, style=solid];
m49_209 -> m49_56  [key=2, style=dotted];
m49_209 -> m49_57  [key=2, style=dotted];
m49_209 -> m49_217  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_209 -> m49_210  [key=0, style=solid];
m49_211 -> m49_56  [key=2, style=dotted];
m49_211 -> m49_57  [key=2, style=dotted];
m49_211 -> m49_212  [key=0, style=solid];
m49_211 -> m49_220  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_213 -> m49_56  [key=2, style=dotted];
m49_213 -> m49_57  [key=2, style=dotted];
m49_213 -> m49_214  [key=0, style=solid];
m49_213 -> m49_224  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_208 -> m49_209  [key=0, style=solid];
m49_208 -> m49_211  [key=1, style=dashed, color=darkseagreen4, label=json];
m49_208 -> m49_213  [key=1, style=dashed, color=darkseagreen4, label=json];
m49_208 -> m49_208  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m49_210 -> m49_211  [key=0, style=solid];
m49_210 -> m49_216  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_210 -> m49_150  [key=2, style=dotted];
m49_212 -> m49_213  [key=0, style=solid];
m49_212 -> m49_150  [key=2, style=dotted];
m49_212 -> m49_219  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_214 -> m49_215  [key=0, style=solid];
m49_214 -> m49_150  [key=2, style=dotted];
m49_214 -> m49_223  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_215 -> m49_207  [key=0, style=bold, color=blue];
m49_299 -> m49_300  [key=0, style=solid];
m49_305 -> m49_60  [key=2, style=dotted];
m49_305 -> m49_306  [key=0, style=solid];
m49_307 -> m49_60  [key=2, style=dotted];
m49_307 -> m49_308  [key=0, style=solid];
m49_309 -> m49_60  [key=2, style=dotted];
m49_309 -> m49_310  [key=0, style=solid];
m49_302 -> m49_58  [key=2, style=dotted];
m49_302 -> m49_59  [key=2, style=dotted];
m49_302 -> m49_303  [key=0, style=solid];
m49_303 -> m49_58  [key=2, style=dotted];
m49_303 -> m49_59  [key=2, style=dotted];
m49_303 -> m49_304  [key=0, style=solid];
m49_304 -> m49_58  [key=2, style=dotted];
m49_304 -> m49_59  [key=2, style=dotted];
m49_304 -> m49_305  [key=0, style=solid];
m49_301 -> m49_56  [key=2, style=dotted];
m49_301 -> m49_57  [key=2, style=dotted];
m49_301 -> m49_305  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_301 -> m49_302  [key=0, style=solid];
m49_301 -> m49_303  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_301 -> m49_304  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_301 -> m49_306  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_306 -> m49_307  [key=0, style=solid];
m49_306 -> m49_311  [key=2, style=dotted];
m49_306 -> m49_308  [key=1, style=dashed, color=darkseagreen4, label=s];
m49_308 -> m49_309  [key=0, style=solid];
m49_308 -> m49_312  [key=2, style=dotted];
m49_300 -> m49_301  [key=0, style=solid];
m49_300 -> m49_300  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m49_310 -> m49_299  [key=0, style=bold, color=blue];
m49_1737 -> m49_1738  [key=0, style=solid];
m49_1741 -> m49_60  [key=2, style=dotted];
m49_1741 -> m49_1742  [key=0, style=solid];
m49_1743 -> m49_60  [key=2, style=dotted];
m49_1743 -> m49_1744  [key=0, style=solid];
m49_1740 -> m49_58  [key=2, style=dotted];
m49_1740 -> m49_59  [key=2, style=dotted];
m49_1740 -> m49_1741  [key=0, style=solid];
m49_1742 -> m49_58  [key=2, style=dotted];
m49_1742 -> m49_59  [key=2, style=dotted];
m49_1742 -> m49_1743  [key=0, style=solid];
m49_1739 -> m49_56  [key=2, style=dotted];
m49_1739 -> m49_57  [key=2, style=dotted];
m49_1739 -> m49_1741  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1739 -> m49_1743  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1739 -> m49_1740  [key=0, style=solid];
m49_1739 -> m49_1742  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1738 -> m49_1739  [key=0, style=solid];
m49_1738 -> m49_1738  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m49_1744 -> m49_1737  [key=0, style=bold, color=blue];
m49_1590 -> m49_1591  [key=0, style=solid];
m49_1595 -> m49_60  [key=2, style=dotted];
m49_1595 -> m49_1596  [key=0, style=solid];
m49_1597 -> m49_60  [key=2, style=dotted];
m49_1597 -> m49_1598  [key=0, style=solid];
m49_1599 -> m49_60  [key=2, style=dotted];
m49_1599 -> m49_1600  [key=0, style=solid];
m49_1600 -> m49_60  [key=2, style=dotted];
m49_1600 -> m49_1601  [key=0, style=solid];
m49_1603 -> m49_60  [key=2, style=dotted];
m49_1603 -> m49_1604  [key=0, style=solid];
m49_1601 -> m49_60  [key=2, style=dotted];
m49_1601 -> m49_1602  [key=0, style=solid];
m49_1594 -> m49_58  [key=2, style=dotted];
m49_1594 -> m49_59  [key=2, style=dotted];
m49_1594 -> m49_1595  [key=0, style=solid];
m49_1596 -> m49_58  [key=2, style=dotted];
m49_1596 -> m49_59  [key=2, style=dotted];
m49_1596 -> m49_1597  [key=0, style=solid];
m49_1602 -> m49_58  [key=2, style=dotted];
m49_1602 -> m49_59  [key=2, style=dotted];
m49_1602 -> m49_1603  [key=0, style=solid];
m49_1592 -> m49_56  [key=2, style=dotted];
m49_1592 -> m49_57  [key=2, style=dotted];
m49_1592 -> m49_1595  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1592 -> m49_1597  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1592 -> m49_1599  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1592 -> m49_1600  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1592 -> m49_1603  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1592 -> m49_1594  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1592 -> m49_1596  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1592 -> m49_1602  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1592 -> m49_1593  [key=0, style=solid];
m49_1592 -> m49_1598  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1598 -> m49_1599  [key=0, style=solid];
m49_1598 -> m49_1601  [key=1, style=dashed, color=darkseagreen4, label=d];
m49_1598 -> m49_222  [key=2, style=dotted];
m49_1593 -> m49_1594  [key=0, style=solid];
m49_1593 -> m49_1500  [key=2, style=dotted];
m49_1591 -> m49_1592  [key=0, style=solid];
m49_1591 -> m49_1591  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m49_1604 -> m49_1590  [key=0, style=bold, color=blue];
m49_767 -> m49_768  [key=0, style=solid];
m49_770 -> m49_60  [key=2, style=dotted];
m49_770 -> m49_771  [key=0, style=solid];
m49_769 -> m49_59  [key=2, style=dotted];
m49_769 -> m49_770  [key=0, style=solid];
m49_769 -> m49_356  [key=2, style=dotted];
m49_768 -> m49_56  [key=2, style=dotted];
m49_768 -> m49_57  [key=2, style=dotted];
m49_768 -> m49_770  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_768 -> m49_769  [key=0, style=solid];
m49_771 -> m49_767  [key=0, style=bold, color=blue];
m49_1102 -> m49_1103  [key=0, style=solid];
m49_1107 -> m49_60  [key=2, style=dotted];
m49_1107 -> m49_1108  [key=0, style=solid];
m49_1109 -> m49_60  [key=2, style=dotted];
m49_1109 -> m49_1110  [key=0, style=solid];
m49_1110 -> m49_60  [key=2, style=dotted];
m49_1110 -> m49_1111  [key=0, style=solid];
m49_1112 -> m49_60  [key=2, style=dotted];
m49_1112 -> m49_1113  [key=0, style=solid];
m49_1113 -> m49_60  [key=2, style=dotted];
m49_1113 -> m49_1114  [key=0, style=solid];
m49_1115 -> m49_60  [key=2, style=dotted];
m49_1115 -> m49_1116  [key=0, style=solid];
m49_1116 -> m49_60  [key=2, style=dotted];
m49_1116 -> m49_1117  [key=0, style=solid];
m49_1118 -> m49_60  [key=2, style=dotted];
m49_1118 -> m49_1119  [key=0, style=solid];
m49_1105 -> m49_56  [key=2, style=dotted];
m49_1105 -> m49_1107  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1105 -> m49_1109  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1105 -> m49_1110  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1105 -> m49_1112  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1105 -> m49_1113  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1105 -> m49_1115  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1105 -> m49_1116  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1105 -> m49_1118  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1105 -> m49_1106  [key=0, style=solid];
m49_1105 -> m49_1108  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1105 -> m49_1111  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1105 -> m49_1114  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1105 -> m49_1117  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1104 -> m49_57  [key=2, style=dotted];
m49_1104 -> m49_1105  [key=0, style=solid];
m49_1106 -> m49_1107  [key=0, style=solid];
m49_1106 -> m49_356  [key=2, style=dotted];
m49_1108 -> m49_1109  [key=0, style=solid];
m49_1108 -> m49_356  [key=2, style=dotted];
m49_1111 -> m49_1112  [key=0, style=solid];
m49_1111 -> m49_356  [key=2, style=dotted];
m49_1114 -> m49_1115  [key=0, style=solid];
m49_1114 -> m49_356  [key=2, style=dotted];
m49_1117 -> m49_1118  [key=0, style=solid];
m49_1117 -> m49_356  [key=2, style=dotted];
m49_1103 -> m49_1104  [key=0, style=solid];
m49_1103 -> m49_1103  [key=3, color=darkorchid, style=bold, label="Local variable string input"];
m49_1119 -> m49_1102  [key=0, style=bold, color=blue];
m49_1800 -> m49_1801  [key=0, style=solid];
m49_1804 -> m49_60  [key=2, style=dotted];
m49_1804 -> m49_1805  [key=0, style=solid];
m49_1806 -> m49_60  [key=2, style=dotted];
m49_1806 -> m49_1807  [key=0, style=solid];
m49_1808 -> m49_60  [key=2, style=dotted];
m49_1808 -> m49_1809  [key=0, style=solid];
m49_1810 -> m49_60  [key=2, style=dotted];
m49_1810 -> m49_1811  [key=0, style=solid];
m49_1811 -> m49_60  [key=2, style=dotted];
m49_1811 -> m49_1812  [key=0, style=solid];
m49_1813 -> m49_60  [key=2, style=dotted];
m49_1813 -> m49_1814  [key=0, style=solid];
m49_1815 -> m49_60  [key=2, style=dotted];
m49_1815 -> m49_1816  [key=0, style=solid];
m49_1816 -> m49_60  [key=2, style=dotted];
m49_1816 -> m49_1817  [key=0, style=solid];
m49_1818 -> m49_60  [key=2, style=dotted];
m49_1818 -> m49_1819  [key=0, style=solid];
m49_1820 -> m49_60  [key=2, style=dotted];
m49_1820 -> m49_1821  [key=0, style=solid];
m49_1822 -> m49_60  [key=2, style=dotted];
m49_1822 -> m49_1823  [key=0, style=solid];
m49_1823 -> m49_60  [key=2, style=dotted];
m49_1823 -> m49_1824  [key=0, style=solid];
m49_1825 -> m49_60  [key=2, style=dotted];
m49_1825 -> m49_1826  [key=0, style=solid];
m49_1827 -> m49_60  [key=2, style=dotted];
m49_1827 -> m49_1828  [key=0, style=solid];
m49_1828 -> m49_60  [key=2, style=dotted];
m49_1828 -> m49_1829  [key=0, style=solid];
m49_1829 -> m49_60  [key=2, style=dotted];
m49_1829 -> m49_1830  [key=0, style=solid];
m49_1831 -> m49_60  [key=2, style=dotted];
m49_1831 -> m49_1832  [key=0, style=solid];
m49_1833 -> m49_60  [key=2, style=dotted];
m49_1833 -> m49_1834  [key=0, style=solid];
m49_1835 -> m49_60  [key=2, style=dotted];
m49_1835 -> m49_1836  [key=0, style=solid];
m49_1837 -> m49_60  [key=2, style=dotted];
m49_1837 -> m49_1838  [key=0, style=solid];
m49_1803 -> m49_58  [key=2, style=dotted];
m49_1803 -> m49_59  [key=2, style=dotted];
m49_1803 -> m49_1804  [key=0, style=solid];
m49_1805 -> m49_58  [key=2, style=dotted];
m49_1805 -> m49_59  [key=2, style=dotted];
m49_1805 -> m49_1806  [key=0, style=solid];
m49_1807 -> m49_58  [key=2, style=dotted];
m49_1807 -> m49_59  [key=2, style=dotted];
m49_1807 -> m49_1808  [key=0, style=solid];
m49_1809 -> m49_58  [key=2, style=dotted];
m49_1809 -> m49_59  [key=2, style=dotted];
m49_1809 -> m49_1810  [key=0, style=solid];
m49_1812 -> m49_58  [key=2, style=dotted];
m49_1812 -> m49_59  [key=2, style=dotted];
m49_1812 -> m49_1813  [key=0, style=solid];
m49_1814 -> m49_58  [key=2, style=dotted];
m49_1814 -> m49_59  [key=2, style=dotted];
m49_1814 -> m49_1815  [key=0, style=solid];
m49_1817 -> m49_58  [key=2, style=dotted];
m49_1817 -> m49_59  [key=2, style=dotted];
m49_1817 -> m49_1818  [key=0, style=solid];
m49_1819 -> m49_58  [key=2, style=dotted];
m49_1819 -> m49_59  [key=2, style=dotted];
m49_1819 -> m49_1820  [key=0, style=solid];
m49_1821 -> m49_58  [key=2, style=dotted];
m49_1821 -> m49_59  [key=2, style=dotted];
m49_1821 -> m49_1822  [key=0, style=solid];
m49_1824 -> m49_58  [key=2, style=dotted];
m49_1824 -> m49_59  [key=2, style=dotted];
m49_1824 -> m49_1825  [key=0, style=solid];
m49_1826 -> m49_58  [key=2, style=dotted];
m49_1826 -> m49_59  [key=2, style=dotted];
m49_1826 -> m49_1827  [key=0, style=solid];
m49_1830 -> m49_58  [key=2, style=dotted];
m49_1830 -> m49_59  [key=2, style=dotted];
m49_1830 -> m49_1831  [key=0, style=solid];
m49_1832 -> m49_58  [key=2, style=dotted];
m49_1832 -> m49_59  [key=2, style=dotted];
m49_1832 -> m49_1833  [key=0, style=solid];
m49_1834 -> m49_58  [key=2, style=dotted];
m49_1834 -> m49_59  [key=2, style=dotted];
m49_1834 -> m49_1835  [key=0, style=solid];
m49_1836 -> m49_58  [key=2, style=dotted];
m49_1836 -> m49_59  [key=2, style=dotted];
m49_1836 -> m49_1837  [key=0, style=solid];
m49_1802 -> m49_56  [key=2, style=dotted];
m49_1802 -> m49_1804  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1802 -> m49_1806  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1802 -> m49_1808  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1802 -> m49_1810  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1802 -> m49_1811  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1802 -> m49_1813  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1802 -> m49_1815  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1802 -> m49_1816  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1802 -> m49_1818  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1802 -> m49_1820  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1802 -> m49_1822  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1802 -> m49_1823  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1802 -> m49_1825  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1802 -> m49_1827  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1802 -> m49_1828  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1802 -> m49_1829  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1802 -> m49_1831  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1802 -> m49_1833  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1802 -> m49_1835  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1802 -> m49_1837  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1802 -> m49_1803  [key=0, style=solid];
m49_1802 -> m49_1805  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1802 -> m49_1807  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1802 -> m49_1809  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1802 -> m49_1812  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1802 -> m49_1814  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1802 -> m49_1817  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1802 -> m49_1819  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1802 -> m49_1821  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1802 -> m49_1824  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1802 -> m49_1826  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1802 -> m49_1830  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1802 -> m49_1832  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1802 -> m49_1834  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1802 -> m49_1836  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1802 -> m49_336  [key=2, style=dotted];
m49_1802 -> m49_374  [key=2, style=dotted];
m49_1802 -> m49_375  [key=2, style=dotted];
m49_1801 -> m49_1802  [key=0, style=solid];
m49_1838 -> m49_1800  [key=0, style=bold, color=blue];
m49_1484 -> m49_1485  [key=0, style=solid];
m49_1489 -> m49_60  [key=2, style=dotted];
m49_1489 -> m49_1490  [key=0, style=solid];
m49_1491 -> m49_60  [key=2, style=dotted];
m49_1491 -> m49_1492  [key=0, style=solid];
m49_1493 -> m49_60  [key=2, style=dotted];
m49_1493 -> m49_1494  [key=0, style=solid];
m49_1494 -> m49_60  [key=2, style=dotted];
m49_1494 -> m49_1495  [key=0, style=solid];
m49_1498 -> m49_60  [key=2, style=dotted];
m49_1498 -> m49_1499  [key=0, style=solid];
m49_1496 -> m49_60  [key=2, style=dotted];
m49_1496 -> m49_1496  [key=1, style=dashed, color=darkseagreen4, label=dt];
m49_1496 -> m49_1497  [key=0, style=solid];
m49_1496 -> m49_1483  [key=2, style=dotted];
m49_1488 -> m49_58  [key=2, style=dotted];
m49_1488 -> m49_59  [key=2, style=dotted];
m49_1488 -> m49_1489  [key=0, style=solid];
m49_1490 -> m49_58  [key=2, style=dotted];
m49_1490 -> m49_59  [key=2, style=dotted];
m49_1490 -> m49_1491  [key=0, style=solid];
m49_1497 -> m49_58  [key=2, style=dotted];
m49_1497 -> m49_59  [key=2, style=dotted];
m49_1497 -> m49_1498  [key=0, style=solid];
m49_1486 -> m49_56  [key=2, style=dotted];
m49_1486 -> m49_57  [key=2, style=dotted];
m49_1486 -> m49_1489  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1486 -> m49_1491  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1486 -> m49_1493  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1486 -> m49_1494  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1486 -> m49_1498  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1486 -> m49_1488  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1486 -> m49_1490  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1486 -> m49_1497  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1486 -> m49_1487  [key=0, style=solid];
m49_1486 -> m49_1492  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1486 -> m49_1495  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1492 -> m49_1493  [key=0, style=solid];
m49_1492 -> m49_1325  [key=2, style=dotted];
m49_1495 -> m49_1496  [key=0, style=solid];
m49_1487 -> m49_1488  [key=0, style=solid];
m49_1487 -> m49_1500  [key=2, style=dotted];
m49_1485 -> m49_1486  [key=0, style=solid];
m49_1485 -> m49_1485  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m49_1499 -> m49_1484  [key=0, style=bold, color=blue];
m49_2035 -> m49_2036  [key=0, style=solid];
m49_2039 -> m49_60  [key=2, style=dotted];
m49_2039 -> m49_2040  [key=0, style=solid];
m49_2041 -> m49_60  [key=2, style=dotted];
m49_2041 -> m49_2042  [key=0, style=solid];
m49_2043 -> m49_60  [key=2, style=dotted];
m49_2043 -> m49_2044  [key=0, style=solid];
m49_2045 -> m49_60  [key=2, style=dotted];
m49_2045 -> m49_2046  [key=0, style=solid];
m49_2047 -> m49_60  [key=2, style=dotted];
m49_2047 -> m49_2048  [key=0, style=solid];
m49_2049 -> m49_60  [key=2, style=dotted];
m49_2049 -> m49_2050  [key=0, style=solid];
m49_2051 -> m49_60  [key=2, style=dotted];
m49_2051 -> m49_2052  [key=0, style=solid];
m49_2053 -> m49_60  [key=2, style=dotted];
m49_2053 -> m49_2054  [key=0, style=solid];
m49_2055 -> m49_60  [key=2, style=dotted];
m49_2055 -> m49_2056  [key=0, style=solid];
m49_2057 -> m49_60  [key=2, style=dotted];
m49_2057 -> m49_2058  [key=0, style=solid];
m49_2059 -> m49_60  [key=2, style=dotted];
m49_2059 -> m49_2060  [key=0, style=solid];
m49_2061 -> m49_60  [key=2, style=dotted];
m49_2061 -> m49_2062  [key=0, style=solid];
m49_2038 -> m49_58  [key=2, style=dotted];
m49_2038 -> m49_59  [key=2, style=dotted];
m49_2038 -> m49_2039  [key=0, style=solid];
m49_2042 -> m49_58  [key=2, style=dotted];
m49_2042 -> m49_59  [key=2, style=dotted];
m49_2042 -> m49_2043  [key=0, style=solid];
m49_2044 -> m49_58  [key=2, style=dotted];
m49_2044 -> m49_59  [key=2, style=dotted];
m49_2044 -> m49_2045  [key=0, style=solid];
m49_2046 -> m49_58  [key=2, style=dotted];
m49_2046 -> m49_59  [key=2, style=dotted];
m49_2046 -> m49_2047  [key=0, style=solid];
m49_2048 -> m49_58  [key=2, style=dotted];
m49_2048 -> m49_59  [key=2, style=dotted];
m49_2048 -> m49_2049  [key=0, style=solid];
m49_2050 -> m49_58  [key=2, style=dotted];
m49_2050 -> m49_59  [key=2, style=dotted];
m49_2050 -> m49_2051  [key=0, style=solid];
m49_2054 -> m49_58  [key=2, style=dotted];
m49_2054 -> m49_59  [key=2, style=dotted];
m49_2054 -> m49_2055  [key=0, style=solid];
m49_2056 -> m49_58  [key=2, style=dotted];
m49_2056 -> m49_59  [key=2, style=dotted];
m49_2056 -> m49_2057  [key=0, style=solid];
m49_2058 -> m49_58  [key=2, style=dotted];
m49_2058 -> m49_59  [key=2, style=dotted];
m49_2058 -> m49_2059  [key=0, style=solid];
m49_2060 -> m49_58  [key=2, style=dotted];
m49_2060 -> m49_59  [key=2, style=dotted];
m49_2060 -> m49_2061  [key=0, style=solid];
m49_2062 -> m49_58  [key=2, style=dotted];
m49_2062 -> m49_2063  [key=0, style=solid];
m49_2062 -> m49_136  [key=2, style=dotted];
m49_2037 -> m49_56  [key=2, style=dotted];
m49_2037 -> m49_57  [key=2, style=dotted];
m49_2037 -> m49_2039  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2037 -> m49_2041  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2037 -> m49_2043  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2037 -> m49_2045  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2037 -> m49_2047  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2037 -> m49_2049  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2037 -> m49_2051  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2037 -> m49_2053  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2037 -> m49_2055  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2037 -> m49_2057  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2037 -> m49_2059  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2037 -> m49_2061  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2037 -> m49_2038  [key=0, style=solid];
m49_2037 -> m49_2065  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2037 -> m49_2042  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2037 -> m49_2044  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2037 -> m49_2046  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2037 -> m49_2048  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2037 -> m49_2050  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2037 -> m49_2068  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2037 -> m49_2054  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2037 -> m49_2056  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2037 -> m49_2058  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2037 -> m49_2060  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2037 -> m49_2062  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2037 -> m49_2040  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2037 -> m49_2052  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2040 -> m49_2041  [key=0, style=solid];
m49_2040 -> m49_1773  [key=2, style=dotted];
m49_2040 -> m49_2064  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_2052 -> m49_2053  [key=0, style=solid];
m49_2052 -> m49_1773  [key=2, style=dotted];
m49_2052 -> m49_2067  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_2036 -> m49_2037  [key=0, style=solid];
m49_2036 -> m49_2036  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m49_2063 -> m49_2035  [key=0, style=bold, color=blue];
m49_804 -> m49_805  [key=0, style=solid];
m49_808 -> m49_60  [key=2, style=dotted];
m49_808 -> m49_809  [key=0, style=solid];
m49_806 -> m49_59  [key=2, style=dotted];
m49_806 -> m49_807  [key=0, style=solid];
m49_806 -> m49_356  [key=2, style=dotted];
m49_805 -> m49_56  [key=2, style=dotted];
m49_805 -> m49_57  [key=2, style=dotted];
m49_805 -> m49_808  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_805 -> m49_806  [key=0, style=solid];
m49_805 -> m49_807  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_807 -> m49_808  [key=0, style=solid];
m49_807 -> m49_793  [key=2, style=dotted];
m49_807 -> m49_810  [key=2, style=dotted];
m49_809 -> m49_804  [key=0, style=bold, color=blue];
m49_56 -> m49_57  [key=0, style=solid];
m49_56 -> m49_75  [key=2, style=dotted];
m49_564 -> m49_565  [key=0, style=solid];
m49_565 -> m49_567  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_565 -> m49_150  [key=2, style=dotted];
m49_565 -> m49_566  [key=0, style=solid];
m49_566 -> m49_564  [key=0, style=bold, color=blue];
m49_384 -> m49_385  [key=0, style=solid];
m49_388 -> m49_60  [key=2, style=dotted];
m49_388 -> m49_389  [key=0, style=solid];
m49_390 -> m49_60  [key=2, style=dotted];
m49_390 -> m49_391  [key=0, style=solid];
m49_392 -> m49_60  [key=2, style=dotted];
m49_392 -> m49_393  [key=0, style=solid];
m49_394 -> m49_60  [key=2, style=dotted];
m49_394 -> m49_395  [key=0, style=solid];
m49_396 -> m49_60  [key=2, style=dotted];
m49_396 -> m49_397  [key=0, style=solid];
m49_387 -> m49_58  [key=2, style=dotted];
m49_387 -> m49_388  [key=0, style=solid];
m49_389 -> m49_58  [key=2, style=dotted];
m49_389 -> m49_390  [key=0, style=solid];
m49_391 -> m49_58  [key=2, style=dotted];
m49_391 -> m49_392  [key=0, style=solid];
m49_393 -> m49_58  [key=2, style=dotted];
m49_393 -> m49_394  [key=0, style=solid];
m49_395 -> m49_58  [key=2, style=dotted];
m49_395 -> m49_396  [key=0, style=solid];
m49_386 -> m49_56  [key=2, style=dotted];
m49_386 -> m49_57  [key=2, style=dotted];
m49_386 -> m49_388  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_386 -> m49_390  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_386 -> m49_392  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_386 -> m49_394  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_386 -> m49_396  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_386 -> m49_387  [key=0, style=solid];
m49_386 -> m49_389  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_386 -> m49_391  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_386 -> m49_393  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_386 -> m49_395  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_386 -> m49_400  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_386 -> m49_397  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_397 -> m49_398  [key=0, style=solid];
m49_397 -> m49_150  [key=2, style=dotted];
m49_397 -> m49_399  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_385 -> m49_386  [key=0, style=solid];
m49_385 -> m49_385  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m49_398 -> m49_384  [key=0, style=bold, color=blue];
m49_1706 -> m49_1707  [key=0, style=solid];
m49_1709 -> m49_58  [key=2, style=dotted];
m49_1709 -> m49_59  [key=2, style=dotted];
m49_1709 -> m49_1710  [key=0, style=solid];
m49_1710 -> m49_58  [key=2, style=dotted];
m49_1710 -> m49_59  [key=2, style=dotted];
m49_1710 -> m49_1711  [key=0, style=solid];
m49_1711 -> m49_58  [key=2, style=dotted];
m49_1711 -> m49_1712  [key=0, style=solid];
m49_1711 -> m49_136  [key=2, style=dotted];
m49_1708 -> m49_56  [key=2, style=dotted];
m49_1708 -> m49_57  [key=2, style=dotted];
m49_1708 -> m49_1709  [key=0, style=solid];
m49_1708 -> m49_1710  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1708 -> m49_1711  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1707 -> m49_1708  [key=0, style=solid];
m49_1707 -> m49_1707  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m49_1712 -> m49_1706  [key=0, style=bold, color=blue];
m49_1253 -> m49_1254  [key=0, style=solid];
m49_1257 -> m49_60  [key=2, style=dotted];
m49_1257 -> m49_1258  [key=0, style=solid];
m49_1259 -> m49_60  [key=2, style=dotted];
m49_1259 -> m49_1260  [key=0, style=solid];
m49_1260 -> m49_60  [key=2, style=dotted];
m49_1260 -> m49_1261  [key=0, style=solid];
m49_1261 -> m49_60  [key=2, style=dotted];
m49_1261 -> m49_1262  [key=0, style=solid];
m49_1263 -> m49_60  [key=2, style=dotted];
m49_1263 -> m49_1264  [key=0, style=solid];
m49_1264 -> m49_60  [key=2, style=dotted];
m49_1264 -> m49_1265  [key=0, style=solid];
m49_1265 -> m49_60  [key=2, style=dotted];
m49_1265 -> m49_1266  [key=0, style=solid];
m49_1267 -> m49_60  [key=2, style=dotted];
m49_1267 -> m49_1268  [key=0, style=solid];
m49_1268 -> m49_60  [key=2, style=dotted];
m49_1268 -> m49_1269  [key=0, style=solid];
m49_1269 -> m49_60  [key=2, style=dotted];
m49_1269 -> m49_1270  [key=0, style=solid];
m49_1271 -> m49_60  [key=2, style=dotted];
m49_1271 -> m49_1272  [key=0, style=solid];
m49_1256 -> m49_58  [key=2, style=dotted];
m49_1256 -> m49_59  [key=2, style=dotted];
m49_1256 -> m49_1257  [key=0, style=solid];
m49_1258 -> m49_58  [key=2, style=dotted];
m49_1258 -> m49_1259  [key=0, style=solid];
m49_1262 -> m49_58  [key=2, style=dotted];
m49_1262 -> m49_1263  [key=0, style=solid];
m49_1266 -> m49_58  [key=2, style=dotted];
m49_1266 -> m49_1267  [key=0, style=solid];
m49_1270 -> m49_58  [key=2, style=dotted];
m49_1270 -> m49_59  [key=2, style=dotted];
m49_1270 -> m49_1271  [key=0, style=solid];
m49_1272 -> m49_58  [key=2, style=dotted];
m49_1272 -> m49_1273  [key=0, style=solid];
m49_1272 -> m49_136  [key=2, style=dotted];
m49_1255 -> m49_56  [key=2, style=dotted];
m49_1255 -> m49_1257  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1255 -> m49_1259  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1255 -> m49_1260  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1255 -> m49_1261  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1255 -> m49_1263  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1255 -> m49_1264  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1255 -> m49_1265  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1255 -> m49_1267  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1255 -> m49_1268  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1255 -> m49_1269  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1255 -> m49_1271  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1255 -> m49_1256  [key=0, style=solid];
m49_1255 -> m49_1258  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1255 -> m49_1262  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1255 -> m49_1266  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1255 -> m49_1270  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1255 -> m49_1272  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1254 -> m49_57  [key=2, style=dotted];
m49_1254 -> m49_1255  [key=0, style=solid];
m49_1273 -> m49_1253  [key=0, style=bold, color=blue];
m49_81 -> m49_58  [key=2, style=dotted];
m49_81 -> m49_59  [key=2, style=dotted];
m49_81 -> m49_82  [key=0, style=solid];
m49_376 -> m49_377  [key=0, style=solid];
m49_378 -> m49_56  [key=2, style=dotted];
m49_378 -> m49_57  [key=2, style=dotted];
m49_378 -> m49_382  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_378 -> m49_379  [key=0, style=solid];
m49_377 -> m49_378  [key=0, style=solid];
m49_377 -> m49_377  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m49_379 -> m49_381  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_379 -> m49_380  [key=0, style=solid];
m49_379 -> m49_150  [key=2, style=dotted];
m49_380 -> m49_376  [key=0, style=bold, color=blue];
m49_1274 -> m49_1275  [key=0, style=solid];
m49_1278 -> m49_60  [key=2, style=dotted];
m49_1278 -> m49_1279  [key=0, style=solid];
m49_1280 -> m49_60  [key=2, style=dotted];
m49_1280 -> m49_1281  [key=0, style=solid];
m49_1281 -> m49_60  [key=2, style=dotted];
m49_1281 -> m49_1282  [key=0, style=solid];
m49_1282 -> m49_60  [key=2, style=dotted];
m49_1282 -> m49_1283  [key=0, style=solid];
m49_1284 -> m49_60  [key=2, style=dotted];
m49_1284 -> m49_1285  [key=0, style=solid];
m49_1285 -> m49_60  [key=2, style=dotted];
m49_1285 -> m49_1286  [key=0, style=solid];
m49_1286 -> m49_60  [key=2, style=dotted];
m49_1286 -> m49_1287  [key=0, style=solid];
m49_1288 -> m49_60  [key=2, style=dotted];
m49_1288 -> m49_1289  [key=0, style=solid];
m49_1289 -> m49_60  [key=2, style=dotted];
m49_1289 -> m49_1290  [key=0, style=solid];
m49_1290 -> m49_60  [key=2, style=dotted];
m49_1290 -> m49_1291  [key=0, style=solid];
m49_1292 -> m49_60  [key=2, style=dotted];
m49_1292 -> m49_1293  [key=0, style=solid];
m49_1277 -> m49_58  [key=2, style=dotted];
m49_1277 -> m49_59  [key=2, style=dotted];
m49_1277 -> m49_1278  [key=0, style=solid];
m49_1291 -> m49_58  [key=2, style=dotted];
m49_1291 -> m49_59  [key=2, style=dotted];
m49_1291 -> m49_1292  [key=0, style=solid];
m49_1293 -> m49_58  [key=2, style=dotted];
m49_1293 -> m49_1294  [key=0, style=solid];
m49_1293 -> m49_136  [key=2, style=dotted];
m49_1276 -> m49_56  [key=2, style=dotted];
m49_1276 -> m49_1278  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1276 -> m49_1280  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1276 -> m49_1281  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1276 -> m49_1282  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1276 -> m49_1284  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1276 -> m49_1285  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1276 -> m49_1286  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1276 -> m49_1288  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1276 -> m49_1289  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1276 -> m49_1290  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1276 -> m49_1292  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1276 -> m49_1277  [key=0, style=solid];
m49_1276 -> m49_1291  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1276 -> m49_1293  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1276 -> m49_1279  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1276 -> m49_1283  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1276 -> m49_1287  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1275 -> m49_57  [key=2, style=dotted];
m49_1275 -> m49_1276  [key=0, style=solid];
m49_1279 -> m49_1280  [key=0, style=solid];
m49_1279 -> m49_154  [key=2, style=dotted];
m49_1283 -> m49_1284  [key=0, style=solid];
m49_1283 -> m49_154  [key=2, style=dotted];
m49_1287 -> m49_1288  [key=0, style=solid];
m49_1287 -> m49_154  [key=2, style=dotted];
m49_1294 -> m49_1274  [key=0, style=bold, color=blue];
m49_415 -> m49_416  [key=0, style=solid];
m49_419 -> m49_60  [key=2, style=dotted];
m49_419 -> m49_420  [key=0, style=solid];
m49_420 -> m49_60  [key=2, style=dotted];
m49_420 -> m49_421  [key=0, style=solid];
m49_421 -> m49_60  [key=2, style=dotted];
m49_421 -> m49_422  [key=0, style=solid];
m49_423 -> m49_60  [key=2, style=dotted];
m49_423 -> m49_424  [key=0, style=solid];
m49_424 -> m49_60  [key=2, style=dotted];
m49_424 -> m49_425  [key=0, style=solid];
m49_425 -> m49_60  [key=2, style=dotted];
m49_425 -> m49_426  [key=0, style=solid];
m49_427 -> m49_60  [key=2, style=dotted];
m49_427 -> m49_428  [key=0, style=solid];
m49_428 -> m49_60  [key=2, style=dotted];
m49_428 -> m49_429  [key=0, style=solid];
m49_429 -> m49_60  [key=2, style=dotted];
m49_429 -> m49_430  [key=0, style=solid];
m49_430 -> m49_60  [key=2, style=dotted];
m49_430 -> m49_431  [key=0, style=solid];
m49_432 -> m49_60  [key=2, style=dotted];
m49_432 -> m49_433  [key=0, style=solid];
m49_433 -> m49_60  [key=2, style=dotted];
m49_433 -> m49_434  [key=0, style=solid];
m49_434 -> m49_60  [key=2, style=dotted];
m49_434 -> m49_435  [key=0, style=solid];
m49_435 -> m49_60  [key=2, style=dotted];
m49_435 -> m49_436  [key=0, style=solid];
m49_437 -> m49_60  [key=2, style=dotted];
m49_437 -> m49_438  [key=0, style=solid];
m49_438 -> m49_60  [key=2, style=dotted];
m49_438 -> m49_439  [key=0, style=solid];
m49_439 -> m49_60  [key=2, style=dotted];
m49_439 -> m49_440  [key=0, style=solid];
m49_440 -> m49_60  [key=2, style=dotted];
m49_440 -> m49_441  [key=0, style=solid];
m49_442 -> m49_60  [key=2, style=dotted];
m49_442 -> m49_443  [key=0, style=solid];
m49_443 -> m49_60  [key=2, style=dotted];
m49_443 -> m49_444  [key=0, style=solid];
m49_444 -> m49_60  [key=2, style=dotted];
m49_444 -> m49_445  [key=0, style=solid];
m49_446 -> m49_60  [key=2, style=dotted];
m49_446 -> m49_447  [key=0, style=solid];
m49_447 -> m49_60  [key=2, style=dotted];
m49_447 -> m49_448  [key=0, style=solid];
m49_448 -> m49_60  [key=2, style=dotted];
m49_448 -> m49_449  [key=0, style=solid];
m49_449 -> m49_60  [key=2, style=dotted];
m49_449 -> m49_450  [key=0, style=solid];
m49_450 -> m49_60  [key=2, style=dotted];
m49_450 -> m49_451  [key=0, style=solid];
m49_452 -> m49_60  [key=2, style=dotted];
m49_452 -> m49_453  [key=0, style=solid];
m49_453 -> m49_60  [key=2, style=dotted];
m49_453 -> m49_454  [key=0, style=solid];
m49_454 -> m49_60  [key=2, style=dotted];
m49_454 -> m49_455  [key=0, style=solid];
m49_455 -> m49_60  [key=2, style=dotted];
m49_455 -> m49_456  [key=0, style=solid];
m49_456 -> m49_60  [key=2, style=dotted];
m49_456 -> m49_457  [key=0, style=solid];
m49_458 -> m49_60  [key=2, style=dotted];
m49_458 -> m49_459  [key=0, style=solid];
m49_459 -> m49_60  [key=2, style=dotted];
m49_459 -> m49_460  [key=0, style=solid];
m49_460 -> m49_60  [key=2, style=dotted];
m49_460 -> m49_461  [key=0, style=solid];
m49_462 -> m49_60  [key=2, style=dotted];
m49_462 -> m49_463  [key=0, style=solid];
m49_463 -> m49_60  [key=2, style=dotted];
m49_463 -> m49_464  [key=0, style=solid];
m49_464 -> m49_60  [key=2, style=dotted];
m49_464 -> m49_465  [key=0, style=solid];
m49_422 -> m49_58  [key=2, style=dotted];
m49_422 -> m49_423  [key=0, style=solid];
m49_426 -> m49_58  [key=2, style=dotted];
m49_426 -> m49_427  [key=0, style=solid];
m49_431 -> m49_58  [key=2, style=dotted];
m49_431 -> m49_432  [key=0, style=solid];
m49_436 -> m49_58  [key=2, style=dotted];
m49_436 -> m49_437  [key=0, style=solid];
m49_441 -> m49_58  [key=2, style=dotted];
m49_441 -> m49_442  [key=0, style=solid];
m49_445 -> m49_58  [key=2, style=dotted];
m49_445 -> m49_446  [key=0, style=solid];
m49_451 -> m49_58  [key=2, style=dotted];
m49_451 -> m49_452  [key=0, style=solid];
m49_457 -> m49_58  [key=2, style=dotted];
m49_457 -> m49_458  [key=0, style=solid];
m49_461 -> m49_58  [key=2, style=dotted];
m49_461 -> m49_462  [key=0, style=solid];
m49_465 -> m49_58  [key=2, style=dotted];
m49_465 -> m49_466  [key=0, style=solid];
m49_465 -> m49_136  [key=2, style=dotted];
m49_418 -> m49_56  [key=2, style=dotted];
m49_418 -> m49_419  [key=0, style=solid];
m49_418 -> m49_420  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_418 -> m49_421  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_418 -> m49_423  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_418 -> m49_424  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_418 -> m49_425  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_418 -> m49_427  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_418 -> m49_428  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_418 -> m49_429  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_418 -> m49_430  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_418 -> m49_432  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_418 -> m49_433  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_418 -> m49_434  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_418 -> m49_435  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_418 -> m49_437  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_418 -> m49_438  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_418 -> m49_439  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_418 -> m49_440  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_418 -> m49_442  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_418 -> m49_443  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_418 -> m49_444  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_418 -> m49_446  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_418 -> m49_447  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_418 -> m49_448  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_418 -> m49_449  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_418 -> m49_450  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_418 -> m49_452  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_418 -> m49_453  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_418 -> m49_454  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_418 -> m49_455  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_418 -> m49_456  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_418 -> m49_458  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_418 -> m49_459  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_418 -> m49_460  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_418 -> m49_462  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_418 -> m49_463  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_418 -> m49_464  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_418 -> m49_422  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_418 -> m49_426  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_418 -> m49_431  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_418 -> m49_436  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_418 -> m49_441  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_418 -> m49_445  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_418 -> m49_451  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_418 -> m49_457  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_418 -> m49_461  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_418 -> m49_465  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_417 -> m49_57  [key=2, style=dotted];
m49_417 -> m49_418  [key=0, style=solid];
m49_416 -> m49_417  [key=0, style=solid];
m49_416 -> m49_416  [key=3, color=darkorchid, style=bold, label="Local variable string input"];
m49_466 -> m49_415  [key=0, style=bold, color=blue];
m49_864 -> m49_865  [key=0, style=solid];
m49_868 -> m49_60  [key=2, style=dotted];
m49_868 -> m49_869  [key=0, style=solid];
m49_869 -> m49_60  [key=2, style=dotted];
m49_869 -> m49_870  [key=0, style=solid];
m49_871 -> m49_60  [key=2, style=dotted];
m49_871 -> m49_872  [key=0, style=solid];
m49_872 -> m49_60  [key=2, style=dotted];
m49_872 -> m49_873  [key=0, style=solid];
m49_874 -> m49_60  [key=2, style=dotted];
m49_874 -> m49_875  [key=0, style=solid];
m49_866 -> m49_59  [key=2, style=dotted];
m49_866 -> m49_867  [key=0, style=solid];
m49_866 -> m49_356  [key=2, style=dotted];
m49_867 -> m49_59  [key=2, style=dotted];
m49_867 -> m49_868  [key=0, style=solid];
m49_867 -> m49_356  [key=2, style=dotted];
m49_870 -> m49_59  [key=2, style=dotted];
m49_870 -> m49_871  [key=0, style=solid];
m49_870 -> m49_356  [key=2, style=dotted];
m49_873 -> m49_59  [key=2, style=dotted];
m49_873 -> m49_874  [key=0, style=solid];
m49_873 -> m49_356  [key=2, style=dotted];
m49_865 -> m49_56  [key=2, style=dotted];
m49_865 -> m49_57  [key=2, style=dotted];
m49_865 -> m49_868  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_865 -> m49_869  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_865 -> m49_871  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_865 -> m49_872  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_865 -> m49_874  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_865 -> m49_866  [key=0, style=solid];
m49_865 -> m49_867  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_865 -> m49_870  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_865 -> m49_873  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_865 -> m49_875  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_875 -> m49_876  [key=0, style=solid];
m49_875 -> m49_356  [key=2, style=dotted];
m49_875 -> m49_136  [key=2, style=dotted];
m49_876 -> m49_864  [key=0, style=bold, color=blue];
m49_1576 -> m49_1577  [key=0, style=solid];
m49_1580 -> m49_60  [key=2, style=dotted];
m49_1580 -> m49_1581  [key=0, style=solid];
m49_1582 -> m49_60  [key=2, style=dotted];
m49_1582 -> m49_1583  [key=0, style=solid];
m49_1584 -> m49_60  [key=2, style=dotted];
m49_1584 -> m49_1585  [key=0, style=solid];
m49_1585 -> m49_60  [key=2, style=dotted];
m49_1585 -> m49_1586  [key=0, style=solid];
m49_1588 -> m49_60  [key=2, style=dotted];
m49_1588 -> m49_1589  [key=0, style=solid];
m49_1586 -> m49_60  [key=2, style=dotted];
m49_1586 -> m49_1587  [key=0, style=solid];
m49_1579 -> m49_58  [key=2, style=dotted];
m49_1579 -> m49_59  [key=2, style=dotted];
m49_1579 -> m49_1580  [key=0, style=solid];
m49_1581 -> m49_58  [key=2, style=dotted];
m49_1581 -> m49_59  [key=2, style=dotted];
m49_1581 -> m49_1582  [key=0, style=solid];
m49_1587 -> m49_58  [key=2, style=dotted];
m49_1587 -> m49_59  [key=2, style=dotted];
m49_1587 -> m49_1588  [key=0, style=solid];
m49_1578 -> m49_56  [key=2, style=dotted];
m49_1578 -> m49_57  [key=2, style=dotted];
m49_1578 -> m49_1580  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1578 -> m49_1582  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1578 -> m49_1584  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1578 -> m49_1585  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1578 -> m49_1588  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1578 -> m49_1579  [key=0, style=solid];
m49_1578 -> m49_1581  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1578 -> m49_1587  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1578 -> m49_1583  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1583 -> m49_1584  [key=0, style=solid];
m49_1583 -> m49_1586  [key=1, style=dashed, color=darkseagreen4, label=d];
m49_1583 -> m49_222  [key=2, style=dotted];
m49_1577 -> m49_1578  [key=0, style=solid];
m49_1577 -> m49_1577  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m49_1589 -> m49_1576  [key=0, style=bold, color=blue];
m49_268 -> m49_269  [key=0, style=solid];
m49_273 -> m49_60  [key=2, style=dotted];
m49_273 -> m49_274  [key=0, style=solid];
m49_272 -> m49_58  [key=2, style=dotted];
m49_272 -> m49_59  [key=2, style=dotted];
m49_272 -> m49_273  [key=0, style=solid];
m49_270 -> m49_56  [key=2, style=dotted];
m49_270 -> m49_57  [key=2, style=dotted];
m49_270 -> m49_273  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_270 -> m49_272  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_270 -> m49_277  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_270 -> m49_271  [key=0, style=solid];
m49_270 -> m49_274  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_274 -> m49_275  [key=0, style=solid];
m49_274 -> m49_150  [key=2, style=dotted];
m49_274 -> m49_276  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_271 -> m49_272  [key=0, style=solid];
m49_269 -> m49_270  [key=0, style=solid];
m49_269 -> m49_269  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m49_275 -> m49_268  [key=0, style=bold, color=blue];
m49_819 -> m49_820  [key=0, style=solid];
m49_831 -> m49_60  [key=2, style=dotted];
m49_831 -> m49_832  [key=0, style=solid];
m49_846 -> m49_60  [key=2, style=dotted];
m49_846 -> m49_847  [key=0, style=solid];
m49_828 -> m49_60  [key=2, style=dotted];
m49_828 -> m49_829  [key=0, style=solid];
m49_830 -> m49_60  [key=2, style=dotted];
m49_830 -> m49_831  [key=0, style=solid];
m49_833 -> m49_60  [key=2, style=dotted];
m49_833 -> m49_834  [key=0, style=solid];
m49_835 -> m49_60  [key=2, style=dotted];
m49_835 -> m49_836  [key=0, style=solid];
m49_836 -> m49_60  [key=2, style=dotted];
m49_836 -> m49_837  [key=0, style=solid];
m49_837 -> m49_60  [key=2, style=dotted];
m49_837 -> m49_838  [key=0, style=solid];
m49_839 -> m49_60  [key=2, style=dotted];
m49_839 -> m49_840  [key=0, style=solid];
m49_840 -> m49_60  [key=2, style=dotted];
m49_840 -> m49_841  [key=0, style=solid];
m49_842 -> m49_60  [key=2, style=dotted];
m49_842 -> m49_843  [key=0, style=solid];
m49_843 -> m49_60  [key=2, style=dotted];
m49_843 -> m49_844  [key=0, style=solid];
m49_845 -> m49_60  [key=2, style=dotted];
m49_845 -> m49_846  [key=0, style=solid];
m49_848 -> m49_60  [key=2, style=dotted];
m49_848 -> m49_849  [key=0, style=solid];
m49_850 -> m49_60  [key=2, style=dotted];
m49_850 -> m49_851  [key=0, style=solid];
m49_852 -> m49_60  [key=2, style=dotted];
m49_852 -> m49_853  [key=0, style=solid];
m49_854 -> m49_60  [key=2, style=dotted];
m49_854 -> m49_855  [key=0, style=solid];
m49_855 -> m49_60  [key=2, style=dotted];
m49_855 -> m49_856  [key=0, style=solid];
m49_857 -> m49_60  [key=2, style=dotted];
m49_857 -> m49_858  [key=0, style=solid];
m49_859 -> m49_60  [key=2, style=dotted];
m49_859 -> m49_860  [key=0, style=solid];
m49_861 -> m49_60  [key=2, style=dotted];
m49_861 -> m49_862  [key=0, style=solid];
m49_827 -> m49_58  [key=2, style=dotted];
m49_827 -> m49_59  [key=2, style=dotted];
m49_827 -> m49_828  [key=0, style=solid];
m49_829 -> m49_58  [key=2, style=dotted];
m49_829 -> m49_59  [key=2, style=dotted];
m49_829 -> m49_830  [key=0, style=solid];
m49_832 -> m49_58  [key=2, style=dotted];
m49_832 -> m49_59  [key=2, style=dotted];
m49_832 -> m49_833  [key=0, style=solid];
m49_834 -> m49_58  [key=2, style=dotted];
m49_834 -> m49_59  [key=2, style=dotted];
m49_834 -> m49_835  [key=0, style=solid];
m49_838 -> m49_58  [key=2, style=dotted];
m49_838 -> m49_59  [key=2, style=dotted];
m49_838 -> m49_839  [key=0, style=solid];
m49_841 -> m49_58  [key=2, style=dotted];
m49_841 -> m49_59  [key=2, style=dotted];
m49_841 -> m49_842  [key=0, style=solid];
m49_844 -> m49_58  [key=2, style=dotted];
m49_844 -> m49_59  [key=2, style=dotted];
m49_844 -> m49_845  [key=0, style=solid];
m49_847 -> m49_58  [key=2, style=dotted];
m49_847 -> m49_59  [key=2, style=dotted];
m49_847 -> m49_848  [key=0, style=solid];
m49_849 -> m49_58  [key=2, style=dotted];
m49_849 -> m49_59  [key=2, style=dotted];
m49_849 -> m49_850  [key=0, style=solid];
m49_851 -> m49_58  [key=2, style=dotted];
m49_851 -> m49_59  [key=2, style=dotted];
m49_851 -> m49_852  [key=0, style=solid];
m49_853 -> m49_58  [key=2, style=dotted];
m49_853 -> m49_59  [key=2, style=dotted];
m49_853 -> m49_854  [key=0, style=solid];
m49_856 -> m49_58  [key=2, style=dotted];
m49_856 -> m49_59  [key=2, style=dotted];
m49_856 -> m49_857  [key=0, style=solid];
m49_858 -> m49_58  [key=2, style=dotted];
m49_858 -> m49_59  [key=2, style=dotted];
m49_858 -> m49_859  [key=0, style=solid];
m49_860 -> m49_58  [key=2, style=dotted];
m49_860 -> m49_59  [key=2, style=dotted];
m49_860 -> m49_861  [key=0, style=solid];
m49_826 -> m49_56  [key=2, style=dotted];
m49_826 -> m49_831  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_826 -> m49_846  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_826 -> m49_828  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_826 -> m49_830  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_826 -> m49_833  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_826 -> m49_835  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_826 -> m49_836  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_826 -> m49_837  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_826 -> m49_839  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_826 -> m49_840  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_826 -> m49_842  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_826 -> m49_843  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_826 -> m49_845  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_826 -> m49_848  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_826 -> m49_850  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_826 -> m49_852  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_826 -> m49_854  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_826 -> m49_855  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_826 -> m49_857  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_826 -> m49_859  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_826 -> m49_861  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_826 -> m49_827  [key=0, style=solid];
m49_826 -> m49_829  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_826 -> m49_832  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_826 -> m49_834  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_826 -> m49_838  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_826 -> m49_841  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_826 -> m49_844  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_826 -> m49_847  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_826 -> m49_849  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_826 -> m49_851  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_826 -> m49_853  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_826 -> m49_856  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_826 -> m49_858  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_826 -> m49_860  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_826 -> m49_336  [key=2, style=dotted];
m49_826 -> m49_374  [key=2, style=dotted];
m49_826 -> m49_375  [key=2, style=dotted];
m49_823 -> m49_57  [key=2, style=dotted];
m49_823 -> m49_824  [key=0, style=solid];
m49_820 -> m49_831  [key=1, style=dashed, color=darkseagreen4, label=newLinesText];
m49_820 -> m49_846  [key=1, style=dashed, color=darkseagreen4, label=newLinesText];
m49_820 -> m49_823  [key=1, style=dashed, color=darkseagreen4, label=newLinesText];
m49_820 -> m49_821  [key=0, style=solid];
m49_821 -> m49_826  [key=1, style=dashed, color=darkseagreen4, label=json];
m49_821 -> m49_822  [key=0, style=solid];
m49_824 -> m49_826  [key=0, style=solid];
m49_824 -> m49_825  [key=0, style=solid];
m49_824 -> m49_863  [key=2, style=dotted];
m49_822 -> m49_823  [key=0, style=solid];
m49_822 -> m49_825  [key=1, style=dashed, color=darkseagreen4, label=count];
m49_822 -> m49_590  [key=3, color=darkorchid, style=bold, label="Local variable int count"];
m49_825 -> m49_824  [key=0, style=solid];
m49_825 -> m49_825  [key=1, style=dashed, color=darkseagreen4, label=count];
m49_862 -> m49_819  [key=0, style=bold, color=blue];
m49_1713 -> m49_1714  [key=0, style=solid];
m49_1715 -> m49_56  [key=2, style=dotted];
m49_1715 -> m49_57  [key=2, style=dotted];
m49_1715 -> m49_1719  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1715 -> m49_1716  [key=0, style=solid];
m49_1714 -> m49_1715  [key=0, style=solid];
m49_1714 -> m49_1714  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m49_1716 -> m49_1718  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_1716 -> m49_1717  [key=0, style=solid];
m49_1716 -> m49_150  [key=2, style=dotted];
m49_1717 -> m49_1713  [key=0, style=bold, color=blue];
m49_1562 -> m49_1563  [key=0, style=solid];
m49_1563 -> m49_56  [key=2, style=dotted];
m49_1563 -> m49_57  [key=2, style=dotted];
m49_1563 -> m49_1567  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1563 -> m49_1564  [key=0, style=solid];
m49_1564 -> m49_1566  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_1564 -> m49_1565  [key=0, style=solid];
m49_1564 -> m49_150  [key=2, style=dotted];
m49_1565 -> m49_1562  [key=0, style=bold, color=blue];
m49_374 -> m49_2279  [key=0, style=solid];
m49_2279 -> m49_374  [key=0, style=bold, color=blue];
m49_313 -> m49_314  [key=0, style=solid];
m49_314 -> m49_60  [key=2, style=dotted];
m49_314 -> m49_315  [key=0, style=solid];
m49_314 -> m49_327  [key=2, style=dotted];
m49_315 -> m49_60  [key=2, style=dotted];
m49_315 -> m49_316  [key=0, style=solid];
m49_315 -> m49_327  [key=2, style=dotted];
m49_316 -> m49_60  [key=2, style=dotted];
m49_316 -> m49_317  [key=0, style=solid];
m49_316 -> m49_327  [key=2, style=dotted];
m49_317 -> m49_60  [key=2, style=dotted];
m49_317 -> m49_318  [key=0, style=solid];
m49_317 -> m49_327  [key=2, style=dotted];
m49_318 -> m49_60  [key=2, style=dotted];
m49_318 -> m49_319  [key=0, style=solid];
m49_318 -> m49_327  [key=2, style=dotted];
m49_319 -> m49_60  [key=2, style=dotted];
m49_319 -> m49_320  [key=0, style=solid];
m49_319 -> m49_327  [key=2, style=dotted];
m49_320 -> m49_60  [key=2, style=dotted];
m49_320 -> m49_321  [key=0, style=solid];
m49_320 -> m49_327  [key=2, style=dotted];
m49_321 -> m49_60  [key=2, style=dotted];
m49_321 -> m49_322  [key=0, style=solid];
m49_321 -> m49_327  [key=2, style=dotted];
m49_322 -> m49_60  [key=2, style=dotted];
m49_322 -> m49_323  [key=0, style=solid];
m49_322 -> m49_327  [key=2, style=dotted];
m49_323 -> m49_60  [key=2, style=dotted];
m49_323 -> m49_324  [key=0, style=solid];
m49_323 -> m49_327  [key=2, style=dotted];
m49_324 -> m49_60  [key=2, style=dotted];
m49_324 -> m49_325  [key=0, style=solid];
m49_324 -> m49_327  [key=2, style=dotted];
m49_325 -> m49_60  [key=2, style=dotted];
m49_325 -> m49_326  [key=0, style=solid];
m49_325 -> m49_327  [key=2, style=dotted];
m49_326 -> m49_313  [key=0, style=bold, color=blue];
m49_779 -> m49_780  [key=0, style=solid];
m49_780 -> m49_56  [key=2, style=dotted];
m49_780 -> m49_57  [key=2, style=dotted];
m49_780 -> m49_781  [key=0, style=solid];
m49_780 -> m49_784  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_781 -> m49_782  [key=0, style=solid];
m49_781 -> m49_150  [key=2, style=dotted];
m49_781 -> m49_783  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_782 -> m49_779  [key=0, style=bold, color=blue];
m49_98 -> m49_99  [key=0, style=solid];
m49_104 -> m49_60  [key=2, style=dotted];
m49_104 -> m49_105  [key=0, style=solid];
m49_101 -> m49_58  [key=2, style=dotted];
m49_101 -> m49_102  [key=0, style=solid];
m49_102 -> m49_58  [key=2, style=dotted];
m49_102 -> m49_103  [key=0, style=solid];
m49_103 -> m49_58  [key=2, style=dotted];
m49_103 -> m49_104  [key=0, style=solid];
m49_100 -> m49_56  [key=2, style=dotted];
m49_100 -> m49_57  [key=2, style=dotted];
m49_100 -> m49_104  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_100 -> m49_101  [key=0, style=solid];
m49_100 -> m49_102  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_100 -> m49_103  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_99 -> m49_100  [key=0, style=solid];
m49_99 -> m49_99  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m49_105 -> m49_98  [key=0, style=bold, color=blue];
m49_193 -> m49_194  [key=0, style=solid];
m49_197 -> m49_60  [key=2, style=dotted];
m49_197 -> m49_198  [key=0, style=solid];
m49_199 -> m49_60  [key=2, style=dotted];
m49_199 -> m49_200  [key=0, style=solid];
m49_201 -> m49_60  [key=2, style=dotted];
m49_201 -> m49_202  [key=0, style=solid];
m49_202 -> m49_60  [key=2, style=dotted];
m49_202 -> m49_203  [key=0, style=solid];
m49_204 -> m49_60  [key=2, style=dotted];
m49_204 -> m49_205  [key=0, style=solid];
m49_196 -> m49_58  [key=2, style=dotted];
m49_196 -> m49_59  [key=2, style=dotted];
m49_196 -> m49_197  [key=0, style=solid];
m49_198 -> m49_58  [key=2, style=dotted];
m49_198 -> m49_59  [key=2, style=dotted];
m49_198 -> m49_199  [key=0, style=solid];
m49_200 -> m49_58  [key=2, style=dotted];
m49_200 -> m49_59  [key=2, style=dotted];
m49_200 -> m49_201  [key=0, style=solid];
m49_203 -> m49_58  [key=2, style=dotted];
m49_203 -> m49_59  [key=2, style=dotted];
m49_203 -> m49_204  [key=0, style=solid];
m49_205 -> m49_58  [key=2, style=dotted];
m49_205 -> m49_206  [key=0, style=solid];
m49_205 -> m49_136  [key=2, style=dotted];
m49_195 -> m49_56  [key=2, style=dotted];
m49_195 -> m49_57  [key=2, style=dotted];
m49_195 -> m49_197  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_195 -> m49_199  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_195 -> m49_201  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_195 -> m49_202  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_195 -> m49_204  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_195 -> m49_196  [key=0, style=solid];
m49_195 -> m49_198  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_195 -> m49_200  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_195 -> m49_203  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_195 -> m49_205  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_194 -> m49_195  [key=0, style=solid];
m49_194 -> m49_194  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m49_206 -> m49_193  [key=0, style=bold, color=blue];
m49_611 -> m49_612  [key=0, style=solid];
m49_615 -> m49_60  [key=2, style=dotted];
m49_615 -> m49_616  [key=0, style=solid];
m49_617 -> m49_60  [key=2, style=dotted];
m49_617 -> m49_618  [key=0, style=solid];
m49_619 -> m49_60  [key=2, style=dotted];
m49_619 -> m49_620  [key=0, style=solid];
m49_621 -> m49_60  [key=2, style=dotted];
m49_621 -> m49_622  [key=0, style=solid];
m49_623 -> m49_60  [key=2, style=dotted];
m49_623 -> m49_624  [key=0, style=solid];
m49_625 -> m49_60  [key=2, style=dotted];
m49_625 -> m49_626  [key=0, style=solid];
m49_627 -> m49_60  [key=2, style=dotted];
m49_627 -> m49_628  [key=0, style=solid];
m49_629 -> m49_60  [key=2, style=dotted];
m49_629 -> m49_630  [key=0, style=solid];
m49_631 -> m49_60  [key=2, style=dotted];
m49_631 -> m49_632  [key=0, style=solid];
m49_633 -> m49_60  [key=2, style=dotted];
m49_633 -> m49_634  [key=0, style=solid];
m49_635 -> m49_60  [key=2, style=dotted];
m49_635 -> m49_636  [key=0, style=solid];
m49_636 -> m49_60  [key=2, style=dotted];
m49_636 -> m49_637  [key=0, style=solid];
m49_638 -> m49_60  [key=2, style=dotted];
m49_638 -> m49_639  [key=0, style=solid];
m49_639 -> m49_60  [key=2, style=dotted];
m49_639 -> m49_640  [key=0, style=solid];
m49_614 -> m49_58  [key=2, style=dotted];
m49_614 -> m49_59  [key=2, style=dotted];
m49_614 -> m49_615  [key=0, style=solid];
m49_616 -> m49_58  [key=2, style=dotted];
m49_616 -> m49_59  [key=2, style=dotted];
m49_616 -> m49_617  [key=0, style=solid];
m49_618 -> m49_58  [key=2, style=dotted];
m49_618 -> m49_59  [key=2, style=dotted];
m49_618 -> m49_619  [key=0, style=solid];
m49_620 -> m49_58  [key=2, style=dotted];
m49_620 -> m49_59  [key=2, style=dotted];
m49_620 -> m49_621  [key=0, style=solid];
m49_622 -> m49_58  [key=2, style=dotted];
m49_622 -> m49_59  [key=2, style=dotted];
m49_622 -> m49_623  [key=0, style=solid];
m49_624 -> m49_58  [key=2, style=dotted];
m49_624 -> m49_59  [key=2, style=dotted];
m49_624 -> m49_625  [key=0, style=solid];
m49_626 -> m49_58  [key=2, style=dotted];
m49_626 -> m49_59  [key=2, style=dotted];
m49_626 -> m49_627  [key=0, style=solid];
m49_628 -> m49_58  [key=2, style=dotted];
m49_628 -> m49_59  [key=2, style=dotted];
m49_628 -> m49_629  [key=0, style=solid];
m49_630 -> m49_58  [key=2, style=dotted];
m49_630 -> m49_59  [key=2, style=dotted];
m49_630 -> m49_631  [key=0, style=solid];
m49_632 -> m49_58  [key=2, style=dotted];
m49_632 -> m49_59  [key=2, style=dotted];
m49_632 -> m49_633  [key=0, style=solid];
m49_634 -> m49_58  [key=2, style=dotted];
m49_634 -> m49_59  [key=2, style=dotted];
m49_634 -> m49_635  [key=0, style=solid];
m49_637 -> m49_58  [key=2, style=dotted];
m49_637 -> m49_59  [key=2, style=dotted];
m49_637 -> m49_638  [key=0, style=solid];
m49_640 -> m49_58  [key=2, style=dotted];
m49_640 -> m49_641  [key=0, style=solid];
m49_640 -> m49_136  [key=2, style=dotted];
m49_613 -> m49_56  [key=2, style=dotted];
m49_613 -> m49_615  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_613 -> m49_617  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_613 -> m49_619  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_613 -> m49_621  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_613 -> m49_623  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_613 -> m49_625  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_613 -> m49_627  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_613 -> m49_629  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_613 -> m49_631  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_613 -> m49_633  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_613 -> m49_635  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_613 -> m49_636  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_613 -> m49_638  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_613 -> m49_639  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_613 -> m49_614  [key=0, style=solid];
m49_613 -> m49_616  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_613 -> m49_618  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_613 -> m49_620  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_613 -> m49_622  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_613 -> m49_624  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_613 -> m49_626  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_613 -> m49_628  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_613 -> m49_630  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_613 -> m49_632  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_613 -> m49_634  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_613 -> m49_637  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_613 -> m49_640  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_613 -> m49_336  [key=2, style=dotted];
m49_613 -> m49_374  [key=2, style=dotted];
m49_613 -> m49_375  [key=2, style=dotted];
m49_612 -> m49_613  [key=0, style=solid];
m49_612 -> m49_612  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m49_641 -> m49_611  [key=0, style=bold, color=blue];
m49_1368 -> m49_1369  [key=0, style=solid];
m49_1372 -> m49_60  [key=2, style=dotted];
m49_1372 -> m49_1373  [key=0, style=solid];
m49_1374 -> m49_60  [key=2, style=dotted];
m49_1374 -> m49_1375  [key=0, style=solid];
m49_1375 -> m49_60  [key=2, style=dotted];
m49_1375 -> m49_1376  [key=0, style=solid];
m49_1377 -> m49_60  [key=2, style=dotted];
m49_1377 -> m49_1378  [key=0, style=solid];
m49_1378 -> m49_60  [key=2, style=dotted];
m49_1378 -> m49_1379  [key=0, style=solid];
m49_1380 -> m49_60  [key=2, style=dotted];
m49_1380 -> m49_1381  [key=0, style=solid];
m49_1371 -> m49_58  [key=2, style=dotted];
m49_1371 -> m49_59  [key=2, style=dotted];
m49_1371 -> m49_1372  [key=0, style=solid];
m49_1373 -> m49_58  [key=2, style=dotted];
m49_1373 -> m49_59  [key=2, style=dotted];
m49_1373 -> m49_1374  [key=0, style=solid];
m49_1376 -> m49_58  [key=2, style=dotted];
m49_1376 -> m49_59  [key=2, style=dotted];
m49_1376 -> m49_1377  [key=0, style=solid];
m49_1379 -> m49_58  [key=2, style=dotted];
m49_1379 -> m49_59  [key=2, style=dotted];
m49_1379 -> m49_1380  [key=0, style=solid];
m49_1381 -> m49_58  [key=2, style=dotted];
m49_1381 -> m49_1382  [key=0, style=solid];
m49_1381 -> m49_136  [key=2, style=dotted];
m49_1370 -> m49_56  [key=2, style=dotted];
m49_1370 -> m49_57  [key=2, style=dotted];
m49_1370 -> m49_1372  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1370 -> m49_1374  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1370 -> m49_1375  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1370 -> m49_1377  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1370 -> m49_1378  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1370 -> m49_1380  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1370 -> m49_1371  [key=0, style=solid];
m49_1370 -> m49_1373  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1370 -> m49_1376  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1370 -> m49_1379  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1370 -> m49_1381  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1369 -> m49_1370  [key=0, style=solid];
m49_1369 -> m49_1369  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m49_1382 -> m49_1368  [key=0, style=bold, color=blue];
m49_2188 -> m49_2265  [key=0, style=solid];
m49_2265 -> m49_2266  [key=0, style=solid];
m49_2266 -> m49_2188  [key=0, style=bold, color=blue];
m49_684 -> m49_685  [key=0, style=solid];
m49_688 -> m49_60  [key=2, style=dotted];
m49_688 -> m49_689  [key=0, style=solid];
m49_694 -> m49_60  [key=2, style=dotted];
m49_694 -> m49_695  [key=0, style=solid];
m49_687 -> m49_58  [key=2, style=dotted];
m49_687 -> m49_688  [key=0, style=solid];
m49_693 -> m49_58  [key=2, style=dotted];
m49_693 -> m49_694  [key=0, style=solid];
m49_686 -> m49_56  [key=2, style=dotted];
m49_686 -> m49_688  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_686 -> m49_687  [key=0, style=solid];
m49_686 -> m49_698  [key=2, style=dotted];
m49_686 -> m49_699  [key=2, style=dotted];
m49_692 -> m49_56  [key=2, style=dotted];
m49_692 -> m49_694  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_692 -> m49_693  [key=0, style=solid];
m49_692 -> m49_698  [key=2, style=dotted];
m49_692 -> m49_699  [key=2, style=dotted];
m49_689 -> m49_657  [key=3, color=darkorchid, style=bold, label="Local variable int j"];
m49_689 -> m49_690  [key=0, style=solid];
m49_689 -> m49_691  [key=1, style=dashed, color=darkseagreen4, label=j];
m49_689 -> m49_695  [key=1, style=dashed, color=darkseagreen4, label=j];
m49_695 -> m49_695  [key=1, style=dashed, color=darkseagreen4, label=j];
m49_695 -> m49_690  [key=0, style=solid];
m49_685 -> m49_686  [key=0, style=solid];
m49_685 -> m49_697  [key=2, style=dotted];
m49_685 -> m49_691  [key=1, style=dashed, color=darkseagreen4, label=i];
m49_691 -> m49_692  [key=0, style=solid];
m49_690 -> m49_691  [key=0, style=solid];
m49_690 -> m49_696  [key=0, style=solid];
m49_696 -> m49_684  [key=0, style=bold, color=blue];
m49_60 -> m49_61  [key=0, style=solid];
m49_60 -> m49_77  [key=2, style=dotted];
m49_713 -> m49_714  [key=0, style=solid];
m49_721 -> m49_60  [key=2, style=dotted];
m49_721 -> m49_722  [key=0, style=solid];
m49_722 -> m49_60  [key=2, style=dotted];
m49_722 -> m49_723  [key=0, style=solid];
m49_718 -> m49_58  [key=2, style=dotted];
m49_718 -> m49_59  [key=2, style=dotted];
m49_718 -> m49_719  [key=0, style=solid];
m49_720 -> m49_58  [key=2, style=dotted];
m49_720 -> m49_59  [key=2, style=dotted];
m49_720 -> m49_721  [key=0, style=solid];
m49_715 -> m49_56  [key=2, style=dotted];
m49_715 -> m49_57  [key=2, style=dotted];
m49_715 -> m49_721  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_715 -> m49_722  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_715 -> m49_718  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_715 -> m49_720  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_715 -> m49_716  [key=0, style=solid];
m49_717 -> m49_718  [key=0, style=solid];
m49_717 -> m49_720  [key=0, style=solid];
m49_719 -> m49_717  [key=0, style=solid];
m49_719 -> m49_719  [key=1, style=dashed, color=darkseagreen4, label=i];
m49_714 -> m49_715  [key=0, style=solid];
m49_714 -> m49_714  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m49_716 -> m49_717  [key=0, style=solid];
m49_716 -> m49_719  [key=1, style=dashed, color=darkseagreen4, label=i];
m49_716 -> m49_590  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m49_723 -> m49_713  [key=0, style=bold, color=blue];
m49_242 -> m49_243  [key=0, style=solid];
m49_247 -> m49_60  [key=2, style=dotted];
m49_247 -> m49_248  [key=0, style=solid];
m49_249 -> m49_60  [key=2, style=dotted];
m49_249 -> m49_250  [key=0, style=solid];
m49_250 -> m49_60  [key=2, style=dotted];
m49_250 -> m49_251  [key=0, style=solid];
m49_251 -> m49_60  [key=2, style=dotted];
m49_251 -> m49_252  [key=0, style=solid];
m49_253 -> m49_60  [key=2, style=dotted];
m49_253 -> m49_254  [key=0, style=solid];
m49_254 -> m49_60  [key=2, style=dotted];
m49_254 -> m49_255  [key=0, style=solid];
m49_255 -> m49_60  [key=2, style=dotted];
m49_255 -> m49_256  [key=0, style=solid];
m49_257 -> m49_60  [key=2, style=dotted];
m49_257 -> m49_258  [key=0, style=solid];
m49_258 -> m49_60  [key=2, style=dotted];
m49_258 -> m49_259  [key=0, style=solid];
m49_259 -> m49_60  [key=2, style=dotted];
m49_259 -> m49_260  [key=0, style=solid];
m49_261 -> m49_60  [key=2, style=dotted];
m49_261 -> m49_262  [key=0, style=solid];
m49_261 -> m49_267  [key=2, style=dotted];
m49_262 -> m49_60  [key=2, style=dotted];
m49_262 -> m49_263  [key=0, style=solid];
m49_263 -> m49_60  [key=2, style=dotted];
m49_263 -> m49_264  [key=0, style=solid];
m49_265 -> m49_60  [key=2, style=dotted];
m49_265 -> m49_266  [key=0, style=solid];
m49_246 -> m49_58  [key=2, style=dotted];
m49_246 -> m49_59  [key=2, style=dotted];
m49_246 -> m49_247  [key=0, style=solid];
m49_248 -> m49_58  [key=2, style=dotted];
m49_248 -> m49_59  [key=2, style=dotted];
m49_248 -> m49_249  [key=0, style=solid];
m49_252 -> m49_58  [key=2, style=dotted];
m49_252 -> m49_59  [key=2, style=dotted];
m49_252 -> m49_253  [key=0, style=solid];
m49_256 -> m49_58  [key=2, style=dotted];
m49_256 -> m49_59  [key=2, style=dotted];
m49_256 -> m49_257  [key=0, style=solid];
m49_260 -> m49_58  [key=2, style=dotted];
m49_260 -> m49_59  [key=2, style=dotted];
m49_260 -> m49_261  [key=0, style=solid];
m49_264 -> m49_58  [key=2, style=dotted];
m49_264 -> m49_59  [key=2, style=dotted];
m49_264 -> m49_265  [key=0, style=solid];
m49_244 -> m49_56  [key=2, style=dotted];
m49_244 -> m49_57  [key=2, style=dotted];
m49_244 -> m49_247  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_244 -> m49_249  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_244 -> m49_250  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_244 -> m49_251  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_244 -> m49_253  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_244 -> m49_254  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_244 -> m49_255  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_244 -> m49_257  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_244 -> m49_258  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_244 -> m49_259  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_244 -> m49_261  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_244 -> m49_262  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_244 -> m49_263  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_244 -> m49_265  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_244 -> m49_246  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_244 -> m49_248  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_244 -> m49_252  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_244 -> m49_256  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_244 -> m49_260  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_244 -> m49_264  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_244 -> m49_245  [key=0, style=solid];
m49_245 -> m49_246  [key=0, style=solid];
m49_243 -> m49_244  [key=0, style=solid];
m49_243 -> m49_243  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m49_266 -> m49_242  [key=0, style=bold, color=blue];
m49_1149 -> m49_1150  [key=0, style=solid];
m49_1153 -> m49_60  [key=2, style=dotted];
m49_1153 -> m49_1154  [key=0, style=solid];
m49_1155 -> m49_60  [key=2, style=dotted];
m49_1155 -> m49_1156  [key=0, style=solid];
m49_1156 -> m49_60  [key=2, style=dotted];
m49_1156 -> m49_1157  [key=0, style=solid];
m49_1158 -> m49_60  [key=2, style=dotted];
m49_1158 -> m49_1159  [key=0, style=solid];
m49_1159 -> m49_60  [key=2, style=dotted];
m49_1159 -> m49_1160  [key=0, style=solid];
m49_1161 -> m49_60  [key=2, style=dotted];
m49_1161 -> m49_1162  [key=0, style=solid];
m49_1162 -> m49_60  [key=2, style=dotted];
m49_1162 -> m49_1163  [key=0, style=solid];
m49_1164 -> m49_60  [key=2, style=dotted];
m49_1164 -> m49_1165  [key=0, style=solid];
m49_1165 -> m49_60  [key=2, style=dotted];
m49_1165 -> m49_1166  [key=0, style=solid];
m49_1167 -> m49_60  [key=2, style=dotted];
m49_1167 -> m49_1168  [key=0, style=solid];
m49_1168 -> m49_60  [key=2, style=dotted];
m49_1168 -> m49_1169  [key=0, style=solid];
m49_1170 -> m49_60  [key=2, style=dotted];
m49_1170 -> m49_1171  [key=0, style=solid];
m49_1171 -> m49_60  [key=2, style=dotted];
m49_1171 -> m49_1172  [key=0, style=solid];
m49_1173 -> m49_60  [key=2, style=dotted];
m49_1173 -> m49_1174  [key=0, style=solid];
m49_1174 -> m49_60  [key=2, style=dotted];
m49_1174 -> m49_1175  [key=0, style=solid];
m49_1176 -> m49_60  [key=2, style=dotted];
m49_1176 -> m49_1177  [key=0, style=solid];
m49_1177 -> m49_60  [key=2, style=dotted];
m49_1177 -> m49_1178  [key=0, style=solid];
m49_1179 -> m49_60  [key=2, style=dotted];
m49_1179 -> m49_1180  [key=0, style=solid];
m49_1180 -> m49_60  [key=2, style=dotted];
m49_1180 -> m49_1181  [key=0, style=solid];
m49_1182 -> m49_60  [key=2, style=dotted];
m49_1182 -> m49_1183  [key=0, style=solid];
m49_1183 -> m49_60  [key=2, style=dotted];
m49_1183 -> m49_1184  [key=0, style=solid];
m49_1185 -> m49_60  [key=2, style=dotted];
m49_1185 -> m49_1186  [key=0, style=solid];
m49_1186 -> m49_60  [key=2, style=dotted];
m49_1186 -> m49_1187  [key=0, style=solid];
m49_1188 -> m49_60  [key=2, style=dotted];
m49_1188 -> m49_1189  [key=0, style=solid];
m49_1189 -> m49_60  [key=2, style=dotted];
m49_1189 -> m49_1190  [key=0, style=solid];
m49_1191 -> m49_60  [key=2, style=dotted];
m49_1191 -> m49_1192  [key=0, style=solid];
m49_1192 -> m49_60  [key=2, style=dotted];
m49_1192 -> m49_1193  [key=0, style=solid];
m49_1194 -> m49_60  [key=2, style=dotted];
m49_1194 -> m49_1195  [key=0, style=solid];
m49_1195 -> m49_60  [key=2, style=dotted];
m49_1195 -> m49_1196  [key=0, style=solid];
m49_1197 -> m49_60  [key=2, style=dotted];
m49_1197 -> m49_1198  [key=0, style=solid];
m49_1198 -> m49_60  [key=2, style=dotted];
m49_1198 -> m49_1199  [key=0, style=solid];
m49_1200 -> m49_60  [key=2, style=dotted];
m49_1200 -> m49_1201  [key=0, style=solid];
m49_1201 -> m49_60  [key=2, style=dotted];
m49_1201 -> m49_1202  [key=0, style=solid];
m49_1203 -> m49_60  [key=2, style=dotted];
m49_1203 -> m49_1204  [key=0, style=solid];
m49_1204 -> m49_60  [key=2, style=dotted];
m49_1204 -> m49_1205  [key=0, style=solid];
m49_1206 -> m49_60  [key=2, style=dotted];
m49_1206 -> m49_1207  [key=0, style=solid];
m49_1207 -> m49_60  [key=2, style=dotted];
m49_1207 -> m49_1208  [key=0, style=solid];
m49_1209 -> m49_60  [key=2, style=dotted];
m49_1209 -> m49_1210  [key=0, style=solid];
m49_1151 -> m49_56  [key=2, style=dotted];
m49_1151 -> m49_57  [key=2, style=dotted];
m49_1151 -> m49_1153  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1151 -> m49_1155  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1151 -> m49_1156  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1151 -> m49_1158  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1151 -> m49_1159  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1151 -> m49_1161  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1151 -> m49_1162  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1151 -> m49_1164  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1151 -> m49_1165  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1151 -> m49_1167  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1151 -> m49_1168  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1151 -> m49_1170  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1151 -> m49_1171  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1151 -> m49_1173  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1151 -> m49_1174  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1151 -> m49_1176  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1151 -> m49_1177  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1151 -> m49_1179  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1151 -> m49_1180  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1151 -> m49_1182  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1151 -> m49_1183  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1151 -> m49_1185  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1151 -> m49_1186  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1151 -> m49_1188  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1151 -> m49_1189  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1151 -> m49_1191  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1151 -> m49_1192  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1151 -> m49_1194  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1151 -> m49_1195  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1151 -> m49_1197  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1151 -> m49_1198  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1151 -> m49_1200  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1151 -> m49_1201  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1151 -> m49_1203  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1151 -> m49_1204  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1151 -> m49_1206  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1151 -> m49_1207  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1151 -> m49_1209  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1151 -> m49_1152  [key=0, style=solid];
m49_1151 -> m49_1154  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1151 -> m49_1157  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1151 -> m49_1160  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1151 -> m49_1163  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1151 -> m49_1166  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1151 -> m49_1169  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1151 -> m49_1172  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1151 -> m49_1175  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1151 -> m49_1178  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1151 -> m49_1181  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1151 -> m49_1184  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1151 -> m49_1187  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1151 -> m49_1190  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1151 -> m49_1193  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1151 -> m49_1196  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1151 -> m49_1199  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1151 -> m49_1202  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1151 -> m49_1205  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1151 -> m49_1208  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_1152 -> m49_1153  [key=0, style=solid];
m49_1152 -> m49_356  [key=2, style=dotted];
m49_1154 -> m49_1155  [key=0, style=solid];
m49_1154 -> m49_356  [key=2, style=dotted];
m49_1157 -> m49_1158  [key=0, style=solid];
m49_1157 -> m49_356  [key=2, style=dotted];
m49_1160 -> m49_1161  [key=0, style=solid];
m49_1160 -> m49_356  [key=2, style=dotted];
m49_1163 -> m49_1164  [key=0, style=solid];
m49_1163 -> m49_356  [key=2, style=dotted];
m49_1166 -> m49_1167  [key=0, style=solid];
m49_1166 -> m49_356  [key=2, style=dotted];
m49_1169 -> m49_1170  [key=0, style=solid];
m49_1169 -> m49_356  [key=2, style=dotted];
m49_1172 -> m49_1173  [key=0, style=solid];
m49_1172 -> m49_356  [key=2, style=dotted];
m49_1175 -> m49_1176  [key=0, style=solid];
m49_1175 -> m49_356  [key=2, style=dotted];
m49_1178 -> m49_1179  [key=0, style=solid];
m49_1178 -> m49_356  [key=2, style=dotted];
m49_1181 -> m49_1182  [key=0, style=solid];
m49_1181 -> m49_356  [key=2, style=dotted];
m49_1184 -> m49_1185  [key=0, style=solid];
m49_1184 -> m49_356  [key=2, style=dotted];
m49_1187 -> m49_1188  [key=0, style=solid];
m49_1187 -> m49_356  [key=2, style=dotted];
m49_1190 -> m49_1191  [key=0, style=solid];
m49_1190 -> m49_356  [key=2, style=dotted];
m49_1193 -> m49_1194  [key=0, style=solid];
m49_1193 -> m49_356  [key=2, style=dotted];
m49_1196 -> m49_1197  [key=0, style=solid];
m49_1196 -> m49_356  [key=2, style=dotted];
m49_1199 -> m49_1200  [key=0, style=solid];
m49_1199 -> m49_356  [key=2, style=dotted];
m49_1202 -> m49_1203  [key=0, style=solid];
m49_1202 -> m49_356  [key=2, style=dotted];
m49_1205 -> m49_1206  [key=0, style=solid];
m49_1205 -> m49_356  [key=2, style=dotted];
m49_1208 -> m49_1209  [key=0, style=solid];
m49_1208 -> m49_356  [key=2, style=dotted];
m49_1150 -> m49_1151  [key=0, style=solid];
m49_1150 -> m49_1150  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m49_1210 -> m49_1149  [key=0, style=bold, color=blue];
m49_1933 -> m49_1934  [key=0, style=solid];
m49_1935 -> m49_56  [key=2, style=dotted];
m49_1935 -> m49_1939  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1935 -> m49_1936  [key=0, style=solid];
m49_1935 -> m49_336  [key=2, style=dotted];
m49_1935 -> m49_374  [key=2, style=dotted];
m49_1935 -> m49_375  [key=2, style=dotted];
m49_1934 -> m49_1935  [key=0, style=solid];
m49_1934 -> m49_1934  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m49_1936 -> m49_1938  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_1936 -> m49_1937  [key=0, style=solid];
m49_1936 -> m49_150  [key=2, style=dotted];
m49_1937 -> m49_1933  [key=0, style=bold, color=blue];
m49_1347 -> m49_1348  [key=0, style=solid];
m49_1350 -> m49_60  [key=2, style=dotted];
m49_1350 -> m49_1351  [key=0, style=solid];
m49_1351 -> m49_60  [key=2, style=dotted];
m49_1351 -> m49_1352  [key=0, style=solid];
m49_1352 -> m49_60  [key=2, style=dotted];
m49_1352 -> m49_1353  [key=0, style=solid];
m49_1348 -> m49_56  [key=2, style=dotted];
m49_1348 -> m49_57  [key=2, style=dotted];
m49_1348 -> m49_1349  [key=0, style=solid];
m49_1349 -> m49_1350  [key=0, style=solid];
m49_1349 -> m49_1351  [key=1, style=dashed, color=darkseagreen4, label=data];
m49_1349 -> m49_1352  [key=1, style=dashed, color=darkseagreen4, label=data];
m49_1349 -> m49_94  [key=2, style=dotted];
m49_1353 -> m49_1347  [key=0, style=bold, color=blue];
m49_58 -> m49_59  [key=0, style=solid];
m49_58 -> m49_76  [key=2, style=dotted];
m49_1308 -> m49_1309  [key=0, style=solid];
m49_1311 -> m49_60  [key=2, style=dotted];
m49_1311 -> m49_1312  [key=0, style=solid];
m49_1309 -> m49_56  [key=2, style=dotted];
m49_1309 -> m49_57  [key=2, style=dotted];
m49_1309 -> m49_1311  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1309 -> m49_1310  [key=0, style=solid];
m49_1310 -> m49_1311  [key=0, style=solid];
m49_1310 -> m49_94  [key=2, style=dotted];
m49_1310 -> m49_810  [key=2, style=dotted];
m49_1312 -> m49_1308  [key=0, style=bold, color=blue];
m49_1320 -> m49_1321  [key=0, style=solid];
m49_1323 -> m49_60  [key=2, style=dotted];
m49_1323 -> m49_1324  [key=0, style=solid];
m49_1321 -> m49_56  [key=2, style=dotted];
m49_1321 -> m49_57  [key=2, style=dotted];
m49_1321 -> m49_1323  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1321 -> m49_1322  [key=0, style=solid];
m49_1322 -> m49_1323  [key=0, style=solid];
m49_1322 -> m49_1325  [key=2, style=dotted];
m49_1322 -> m49_810  [key=2, style=dotted];
m49_1324 -> m49_1320  [key=0, style=bold, color=blue];
m49_652 -> m49_653  [key=0, style=solid];
m49_656 -> m49_60  [key=2, style=dotted];
m49_656 -> m49_657  [key=0, style=solid];
m49_655 -> m49_58  [key=2, style=dotted];
m49_655 -> m49_656  [key=0, style=solid];
m49_654 -> m49_56  [key=2, style=dotted];
m49_654 -> m49_57  [key=2, style=dotted];
m49_654 -> m49_656  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_654 -> m49_655  [key=0, style=solid];
m49_654 -> m49_663  [key=2, style=dotted];
m49_654 -> m49_660  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_657 -> m49_657  [key=3, color=darkorchid, style=bold, label="Local variable int j"];
m49_657 -> m49_658  [key=0, style=solid];
m49_657 -> m49_659  [key=1, style=dashed, color=darkseagreen4, label=j];
m49_657 -> m49_661  [key=1, style=dashed, color=darkseagreen4, label=j];
m49_653 -> m49_654  [key=0, style=solid];
m49_653 -> m49_653  [key=3, color=darkorchid, style=bold, label="Local variable long i"];
m49_653 -> m49_659  [key=1, style=dashed, color=darkseagreen4, label=i];
m49_660 -> m49_661  [key=0, style=solid];
m49_660 -> m49_150  [key=2, style=dotted];
m49_660 -> m49_664  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_659 -> m49_665  [key=1, style=dashed, color=darkseagreen4, label=total];
m49_659 -> m49_660  [key=0, style=solid];
m49_658 -> m49_659  [key=0, style=solid];
m49_658 -> m49_662  [key=0, style=solid];
m49_661 -> m49_658  [key=0, style=solid];
m49_661 -> m49_661  [key=1, style=dashed, color=darkseagreen4, label=j];
m49_662 -> m49_652  [key=0, style=bold, color=blue];
m49_2111 -> m49_2112  [key=0, style=solid];
m49_2117 -> m49_60  [key=2, style=dotted];
m49_2117 -> m49_2118  [key=0, style=solid];
m49_2117 -> m49_2164  [key=2, style=dotted];
m49_2118 -> m49_60  [key=2, style=dotted];
m49_2118 -> m49_2119  [key=0, style=solid];
m49_2120 -> m49_60  [key=2, style=dotted];
m49_2120 -> m49_2121  [key=0, style=solid];
m49_2120 -> m49_2164  [key=2, style=dotted];
m49_2121 -> m49_60  [key=2, style=dotted];
m49_2121 -> m49_2122  [key=0, style=solid];
m49_2127 -> m49_60  [key=2, style=dotted];
m49_2127 -> m49_2128  [key=0, style=solid];
m49_2127 -> m49_2165  [key=2, style=dotted];
m49_2128 -> m49_60  [key=2, style=dotted];
m49_2128 -> m49_2129  [key=0, style=solid];
m49_2130 -> m49_60  [key=2, style=dotted];
m49_2130 -> m49_2131  [key=0, style=solid];
m49_2130 -> m49_2165  [key=2, style=dotted];
m49_2131 -> m49_60  [key=2, style=dotted];
m49_2131 -> m49_2132  [key=0, style=solid];
m49_2137 -> m49_60  [key=2, style=dotted];
m49_2137 -> m49_2138  [key=0, style=solid];
m49_2138 -> m49_60  [key=2, style=dotted];
m49_2138 -> m49_2139  [key=0, style=solid];
m49_2140 -> m49_60  [key=2, style=dotted];
m49_2140 -> m49_2141  [key=0, style=solid];
m49_2141 -> m49_60  [key=2, style=dotted];
m49_2141 -> m49_2142  [key=0, style=solid];
m49_2147 -> m49_60  [key=2, style=dotted];
m49_2147 -> m49_2148  [key=0, style=solid];
m49_2147 -> m49_2165  [key=2, style=dotted];
m49_2148 -> m49_60  [key=2, style=dotted];
m49_2148 -> m49_2149  [key=0, style=solid];
m49_2150 -> m49_60  [key=2, style=dotted];
m49_2150 -> m49_2151  [key=0, style=solid];
m49_2150 -> m49_2165  [key=2, style=dotted];
m49_2151 -> m49_60  [key=2, style=dotted];
m49_2151 -> m49_2152  [key=0, style=solid];
m49_2157 -> m49_60  [key=2, style=dotted];
m49_2157 -> m49_2158  [key=0, style=solid];
m49_2157 -> m49_2164  [key=2, style=dotted];
m49_2158 -> m49_60  [key=2, style=dotted];
m49_2158 -> m49_2159  [key=0, style=solid];
m49_2160 -> m49_60  [key=2, style=dotted];
m49_2160 -> m49_2161  [key=0, style=solid];
m49_2160 -> m49_2164  [key=2, style=dotted];
m49_2161 -> m49_60  [key=2, style=dotted];
m49_2161 -> m49_2162  [key=0, style=solid];
m49_2115 -> m49_58  [key=2, style=dotted];
m49_2115 -> m49_59  [key=2, style=dotted];
m49_2115 -> m49_2116  [key=0, style=solid];
m49_2116 -> m49_58  [key=2, style=dotted];
m49_2116 -> m49_59  [key=2, style=dotted];
m49_2116 -> m49_2117  [key=0, style=solid];
m49_2119 -> m49_58  [key=2, style=dotted];
m49_2119 -> m49_59  [key=2, style=dotted];
m49_2119 -> m49_2120  [key=0, style=solid];
m49_2122 -> m49_58  [key=2, style=dotted];
m49_2122 -> m49_59  [key=2, style=dotted];
m49_2122 -> m49_2123  [key=0, style=solid];
m49_2125 -> m49_58  [key=2, style=dotted];
m49_2125 -> m49_59  [key=2, style=dotted];
m49_2125 -> m49_2126  [key=0, style=solid];
m49_2126 -> m49_58  [key=2, style=dotted];
m49_2126 -> m49_59  [key=2, style=dotted];
m49_2126 -> m49_2127  [key=0, style=solid];
m49_2129 -> m49_58  [key=2, style=dotted];
m49_2129 -> m49_59  [key=2, style=dotted];
m49_2129 -> m49_2130  [key=0, style=solid];
m49_2132 -> m49_58  [key=2, style=dotted];
m49_2132 -> m49_59  [key=2, style=dotted];
m49_2132 -> m49_2133  [key=0, style=solid];
m49_2135 -> m49_58  [key=2, style=dotted];
m49_2135 -> m49_59  [key=2, style=dotted];
m49_2135 -> m49_2136  [key=0, style=solid];
m49_2136 -> m49_58  [key=2, style=dotted];
m49_2136 -> m49_59  [key=2, style=dotted];
m49_2136 -> m49_2137  [key=0, style=solid];
m49_2139 -> m49_58  [key=2, style=dotted];
m49_2139 -> m49_59  [key=2, style=dotted];
m49_2139 -> m49_2140  [key=0, style=solid];
m49_2142 -> m49_58  [key=2, style=dotted];
m49_2142 -> m49_59  [key=2, style=dotted];
m49_2142 -> m49_2143  [key=0, style=solid];
m49_2145 -> m49_58  [key=2, style=dotted];
m49_2145 -> m49_59  [key=2, style=dotted];
m49_2145 -> m49_2146  [key=0, style=solid];
m49_2152 -> m49_58  [key=2, style=dotted];
m49_2152 -> m49_59  [key=2, style=dotted];
m49_2152 -> m49_2153  [key=0, style=solid];
m49_2155 -> m49_58  [key=2, style=dotted];
m49_2155 -> m49_59  [key=2, style=dotted];
m49_2155 -> m49_2156  [key=0, style=solid];
m49_2162 -> m49_58  [key=2, style=dotted];
m49_2162 -> m49_59  [key=2, style=dotted];
m49_2162 -> m49_2163  [key=0, style=solid];
m49_2113 -> m49_56  [key=2, style=dotted];
m49_2113 -> m49_57  [key=2, style=dotted];
m49_2113 -> m49_2117  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2113 -> m49_2118  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2113 -> m49_2120  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2113 -> m49_2121  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2113 -> m49_2115  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2113 -> m49_2116  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2113 -> m49_2119  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2113 -> m49_2122  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2113 -> m49_2114  [key=0, style=solid];
m49_2123 -> m49_56  [key=2, style=dotted];
m49_2123 -> m49_57  [key=2, style=dotted];
m49_2123 -> m49_2127  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2123 -> m49_2128  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2123 -> m49_2130  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2123 -> m49_2131  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2123 -> m49_2125  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2123 -> m49_2126  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2123 -> m49_2129  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2123 -> m49_2132  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2123 -> m49_2124  [key=0, style=solid];
m49_2133 -> m49_56  [key=2, style=dotted];
m49_2133 -> m49_57  [key=2, style=dotted];
m49_2133 -> m49_2137  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2133 -> m49_2138  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2133 -> m49_2140  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2133 -> m49_2141  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2133 -> m49_2135  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2133 -> m49_2136  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2133 -> m49_2139  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2133 -> m49_2142  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2133 -> m49_2134  [key=0, style=solid];
m49_2143 -> m49_56  [key=2, style=dotted];
m49_2143 -> m49_57  [key=2, style=dotted];
m49_2143 -> m49_2147  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2143 -> m49_2148  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2143 -> m49_2150  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2143 -> m49_2151  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2143 -> m49_2145  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2143 -> m49_2152  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2143 -> m49_2144  [key=0, style=solid];
m49_2143 -> m49_2146  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2143 -> m49_2149  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2153 -> m49_56  [key=2, style=dotted];
m49_2153 -> m49_57  [key=2, style=dotted];
m49_2153 -> m49_2157  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2153 -> m49_2158  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2153 -> m49_2160  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2153 -> m49_2161  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2153 -> m49_2155  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2153 -> m49_2162  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2153 -> m49_2154  [key=0, style=solid];
m49_2153 -> m49_2156  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2153 -> m49_2159  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2146 -> m49_2147  [key=0, style=solid];
m49_2146 -> m49_1325  [key=2, style=dotted];
m49_2149 -> m49_2150  [key=0, style=solid];
m49_2149 -> m49_1325  [key=2, style=dotted];
m49_2156 -> m49_2157  [key=0, style=solid];
m49_2156 -> m49_2166  [key=2, style=dotted];
m49_2159 -> m49_2160  [key=0, style=solid];
m49_2159 -> m49_2166  [key=2, style=dotted];
m49_2114 -> m49_2115  [key=0, style=solid];
m49_2124 -> m49_2125  [key=0, style=solid];
m49_2134 -> m49_2135  [key=0, style=solid];
m49_2144 -> m49_2145  [key=0, style=solid];
m49_2154 -> m49_2155  [key=0, style=solid];
m49_2112 -> m49_2113  [key=0, style=solid];
m49_2112 -> m49_2123  [key=1, style=dashed, color=darkseagreen4, label=json];
m49_2112 -> m49_2133  [key=1, style=dashed, color=darkseagreen4, label=json];
m49_2112 -> m49_2143  [key=1, style=dashed, color=darkseagreen4, label=json];
m49_2112 -> m49_2153  [key=1, style=dashed, color=darkseagreen4, label=json];
m49_2112 -> m49_2112  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m49_2163 -> m49_2111  [key=0, style=bold, color=blue];
m49_1616 -> m49_1617  [key=0, style=solid];
m49_1624 -> m49_60  [key=2, style=dotted];
m49_1624 -> m49_1625  [key=0, style=solid];
m49_1621 -> m49_58  [key=2, style=dotted];
m49_1621 -> m49_59  [key=2, style=dotted];
m49_1621 -> m49_1622  [key=0, style=solid];
m49_1623 -> m49_58  [key=2, style=dotted];
m49_1623 -> m49_59  [key=2, style=dotted];
m49_1623 -> m49_1624  [key=0, style=solid];
m49_1625 -> m49_58  [key=2, style=dotted];
m49_1625 -> m49_1626  [key=0, style=solid];
m49_1625 -> m49_136  [key=2, style=dotted];
m49_1618 -> m49_56  [key=2, style=dotted];
m49_1618 -> m49_57  [key=2, style=dotted];
m49_1618 -> m49_1624  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1618 -> m49_1621  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1618 -> m49_1623  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1618 -> m49_1625  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1618 -> m49_1619  [key=0, style=solid];
m49_1620 -> m49_1621  [key=0, style=solid];
m49_1620 -> m49_1623  [key=0, style=solid];
m49_1622 -> m49_1620  [key=0, style=solid];
m49_1622 -> m49_1622  [key=1, style=dashed, color=darkseagreen4, label=i];
m49_1617 -> m49_1618  [key=0, style=solid];
m49_1617 -> m49_1617  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m49_1619 -> m49_1620  [key=0, style=solid];
m49_1619 -> m49_1622  [key=1, style=dashed, color=darkseagreen4, label=i];
m49_1619 -> m49_590  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m49_1626 -> m49_1616  [key=0, style=bold, color=blue];
m49_1295 -> m49_1296  [key=0, style=solid];
m49_1297 -> m49_58  [key=2, style=dotted];
m49_1297 -> m49_1298  [key=0, style=solid];
m49_1296 -> m49_56  [key=2, style=dotted];
m49_1296 -> m49_57  [key=2, style=dotted];
m49_1296 -> m49_1297  [key=0, style=solid];
m49_1296 -> m49_1301  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1296 -> m49_1298  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1298 -> m49_1299  [key=0, style=solid];
m49_1298 -> m49_150  [key=2, style=dotted];
m49_1298 -> m49_1300  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_1299 -> m49_1295  [key=0, style=bold, color=blue];
m49_76 -> m49_58  [key=2, style=dotted];
m49_76 -> m49_59  [key=2, style=dotted];
m49_76 -> m49_77  [key=0, style=solid];
m49_1469 -> m49_1470  [key=0, style=solid];
m49_1473 -> m49_60  [key=2, style=dotted];
m49_1473 -> m49_1474  [key=0, style=solid];
m49_1475 -> m49_60  [key=2, style=dotted];
m49_1475 -> m49_1476  [key=0, style=solid];
m49_1477 -> m49_60  [key=2, style=dotted];
m49_1477 -> m49_1478  [key=0, style=solid];
m49_1478 -> m49_60  [key=2, style=dotted];
m49_1478 -> m49_1479  [key=0, style=solid];
m49_1479 -> m49_60  [key=2, style=dotted];
m49_1479 -> m49_1480  [key=0, style=solid];
m49_1479 -> m49_1410  [key=2, style=dotted];
m49_1479 -> m49_1483  [key=2, style=dotted];
m49_1481 -> m49_60  [key=2, style=dotted];
m49_1481 -> m49_1482  [key=0, style=solid];
m49_1472 -> m49_58  [key=2, style=dotted];
m49_1472 -> m49_59  [key=2, style=dotted];
m49_1472 -> m49_1473  [key=0, style=solid];
m49_1474 -> m49_58  [key=2, style=dotted];
m49_1474 -> m49_59  [key=2, style=dotted];
m49_1474 -> m49_1475  [key=0, style=solid];
m49_1480 -> m49_58  [key=2, style=dotted];
m49_1480 -> m49_59  [key=2, style=dotted];
m49_1480 -> m49_1481  [key=0, style=solid];
m49_1471 -> m49_56  [key=2, style=dotted];
m49_1471 -> m49_57  [key=2, style=dotted];
m49_1471 -> m49_1473  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1471 -> m49_1475  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1471 -> m49_1477  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1471 -> m49_1478  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1471 -> m49_1479  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1471 -> m49_1481  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1471 -> m49_1472  [key=0, style=solid];
m49_1471 -> m49_1474  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1471 -> m49_1480  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1471 -> m49_1476  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1476 -> m49_1477  [key=0, style=solid];
m49_1476 -> m49_1325  [key=2, style=dotted];
m49_1470 -> m49_1471  [key=0, style=solid];
m49_1470 -> m49_1470  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m49_1482 -> m49_1469  [key=0, style=bold, color=blue];
m49_940 -> m49_941  [key=0, style=solid];
m49_943 -> m49_60  [key=2, style=dotted];
m49_943 -> m49_944  [key=0, style=solid];
m49_943 -> m49_154  [key=2, style=dotted];
m49_945 -> m49_60  [key=2, style=dotted];
m49_945 -> m49_946  [key=0, style=solid];
m49_945 -> m49_154  [key=2, style=dotted];
m49_947 -> m49_60  [key=2, style=dotted];
m49_947 -> m49_948  [key=0, style=solid];
m49_947 -> m49_154  [key=2, style=dotted];
m49_949 -> m49_60  [key=2, style=dotted];
m49_949 -> m49_950  [key=0, style=solid];
m49_949 -> m49_154  [key=2, style=dotted];
m49_951 -> m49_60  [key=2, style=dotted];
m49_951 -> m49_952  [key=0, style=solid];
m49_951 -> m49_154  [key=2, style=dotted];
m49_953 -> m49_60  [key=2, style=dotted];
m49_953 -> m49_954  [key=0, style=solid];
m49_953 -> m49_154  [key=2, style=dotted];
m49_963 -> m49_60  [key=2, style=dotted];
m49_963 -> m49_964  [key=0, style=solid];
m49_963 -> m49_154  [key=2, style=dotted];
m49_942 -> m49_56  [key=2, style=dotted];
m49_942 -> m49_57  [key=2, style=dotted];
m49_942 -> m49_943  [key=0, style=solid];
m49_944 -> m49_56  [key=2, style=dotted];
m49_944 -> m49_57  [key=2, style=dotted];
m49_944 -> m49_945  [key=0, style=solid];
m49_946 -> m49_56  [key=2, style=dotted];
m49_946 -> m49_57  [key=2, style=dotted];
m49_946 -> m49_947  [key=0, style=solid];
m49_948 -> m49_56  [key=2, style=dotted];
m49_948 -> m49_57  [key=2, style=dotted];
m49_948 -> m49_949  [key=0, style=solid];
m49_950 -> m49_56  [key=2, style=dotted];
m49_950 -> m49_57  [key=2, style=dotted];
m49_950 -> m49_951  [key=0, style=solid];
m49_950 -> m49_967  [key=2, style=dotted];
m49_952 -> m49_56  [key=2, style=dotted];
m49_952 -> m49_57  [key=2, style=dotted];
m49_952 -> m49_953  [key=0, style=solid];
m49_952 -> m49_967  [key=2, style=dotted];
m49_954 -> m49_56  [key=2, style=dotted];
m49_954 -> m49_57  [key=2, style=dotted];
m49_954 -> m49_955  [key=0, style=solid];
m49_954 -> m49_968  [key=2, style=dotted];
m49_954 -> m49_970  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_956 -> m49_56  [key=2, style=dotted];
m49_956 -> m49_57  [key=2, style=dotted];
m49_956 -> m49_957  [key=0, style=solid];
m49_956 -> m49_973  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_958 -> m49_56  [key=2, style=dotted];
m49_958 -> m49_57  [key=2, style=dotted];
m49_958 -> m49_959  [key=0, style=solid];
m49_958 -> m49_976  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_960 -> m49_56  [key=2, style=dotted];
m49_960 -> m49_57  [key=2, style=dotted];
m49_960 -> m49_961  [key=0, style=solid];
m49_960 -> m49_979  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_962 -> m49_56  [key=2, style=dotted];
m49_962 -> m49_57  [key=2, style=dotted];
m49_962 -> m49_963  [key=0, style=solid];
m49_964 -> m49_56  [key=2, style=dotted];
m49_964 -> m49_57  [key=2, style=dotted];
m49_964 -> m49_965  [key=0, style=solid];
m49_964 -> m49_982  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_941 -> m49_942  [key=0, style=solid];
m49_941 -> m49_941  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.JsonTextReader reader"];
m49_955 -> m49_956  [key=0, style=solid];
m49_955 -> m49_150  [key=2, style=dotted];
m49_955 -> m49_969  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_957 -> m49_958  [key=0, style=solid];
m49_957 -> m49_150  [key=2, style=dotted];
m49_957 -> m49_972  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_959 -> m49_960  [key=0, style=solid];
m49_959 -> m49_150  [key=2, style=dotted];
m49_959 -> m49_975  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_961 -> m49_962  [key=0, style=solid];
m49_961 -> m49_150  [key=2, style=dotted];
m49_961 -> m49_978  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_965 -> m49_966  [key=0, style=solid];
m49_965 -> m49_150  [key=2, style=dotted];
m49_965 -> m49_981  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_966 -> m49_940  [key=0, style=bold, color=blue];
m49_78 -> m49_60  [key=2, style=dotted];
m49_78 -> m49_79  [key=0, style=solid];
m49_751 -> m49_752  [key=0, style=solid];
m49_762 -> m49_60  [key=2, style=dotted];
m49_762 -> m49_763  [key=0, style=solid];
m49_763 -> m49_60  [key=2, style=dotted];
m49_763 -> m49_764  [key=0, style=solid];
m49_758 -> m49_58  [key=2, style=dotted];
m49_758 -> m49_758  [key=0, style=solid];
m49_758 -> m49_759  [key=0, style=solid];
m49_756 -> m49_56  [key=2, style=dotted];
m49_756 -> m49_57  [key=2, style=dotted];
m49_756 -> m49_758  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_756 -> m49_757  [key=0, style=solid];
m49_753 -> m49_762  [key=1, style=dashed, color=darkseagreen4, label=bufferPool];
m49_753 -> m49_763  [key=1, style=dashed, color=darkseagreen4, label=bufferPool];
m49_753 -> m49_754  [key=0, style=solid];
m49_753 -> m49_765  [key=2, style=dotted];
m49_753 -> m49_757  [key=1, style=dashed, color=darkseagreen4, label=bufferPool];
m49_753 -> m49_760  [key=1, style=dashed, color=darkseagreen4, label=bufferPool];
m49_755 -> m49_762  [key=0, style=solid];
m49_755 -> m49_756  [key=0, style=solid];
m49_757 -> m49_758  [key=0, style=solid];
m49_759 -> m49_760  [key=0, style=solid];
m49_759 -> m49_761  [key=0, style=solid];
m49_752 -> m49_756  [key=1, style=dashed, color=darkseagreen4, label=json];
m49_752 -> m49_753  [key=0, style=solid];
m49_752 -> m49_583  [key=2, style=dotted];
m49_754 -> m49_755  [key=0, style=solid];
m49_754 -> m49_759  [key=1, style=dashed, color=darkseagreen4, label=i];
m49_754 -> m49_761  [key=1, style=dashed, color=darkseagreen4, label=i];
m49_754 -> m49_590  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m49_760 -> m49_761  [key=0, style=solid];
m49_760 -> m49_766  [key=2, style=dotted];
m49_761 -> m49_755  [key=0, style=solid];
m49_761 -> m49_761  [key=1, style=dashed, color=darkseagreen4, label=i];
m49_764 -> m49_751  [key=0, style=bold, color=blue];
m49_1303 -> m49_1304  [key=0, style=solid];
m49_1306 -> m49_60  [key=2, style=dotted];
m49_1306 -> m49_1307  [key=0, style=solid];
m49_1304 -> m49_56  [key=2, style=dotted];
m49_1304 -> m49_57  [key=2, style=dotted];
m49_1304 -> m49_1306  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1304 -> m49_1305  [key=0, style=solid];
m49_1305 -> m49_1306  [key=0, style=solid];
m49_1305 -> m49_222  [key=2, style=dotted];
m49_1305 -> m49_810  [key=2, style=dotted];
m49_1307 -> m49_1303  [key=0, style=bold, color=blue];
m49_1413 -> m49_1414  [key=0, style=solid];
m49_1417 -> m49_60  [key=2, style=dotted];
m49_1417 -> m49_1418  [key=0, style=solid];
m49_1419 -> m49_60  [key=2, style=dotted];
m49_1419 -> m49_1420  [key=0, style=solid];
m49_1421 -> m49_60  [key=2, style=dotted];
m49_1421 -> m49_1422  [key=0, style=solid];
m49_1422 -> m49_60  [key=2, style=dotted];
m49_1422 -> m49_1423  [key=0, style=solid];
m49_1423 -> m49_60  [key=2, style=dotted];
m49_1423 -> m49_1424  [key=0, style=solid];
m49_1423 -> m49_1410  [key=2, style=dotted];
m49_1423 -> m49_1411  [key=2, style=dotted];
m49_1423 -> m49_1412  [key=2, style=dotted];
m49_1425 -> m49_60  [key=2, style=dotted];
m49_1425 -> m49_1426  [key=0, style=solid];
m49_1416 -> m49_58  [key=2, style=dotted];
m49_1416 -> m49_59  [key=2, style=dotted];
m49_1416 -> m49_1417  [key=0, style=solid];
m49_1418 -> m49_58  [key=2, style=dotted];
m49_1418 -> m49_59  [key=2, style=dotted];
m49_1418 -> m49_1419  [key=0, style=solid];
m49_1424 -> m49_58  [key=2, style=dotted];
m49_1424 -> m49_59  [key=2, style=dotted];
m49_1424 -> m49_1425  [key=0, style=solid];
m49_1415 -> m49_56  [key=2, style=dotted];
m49_1415 -> m49_57  [key=2, style=dotted];
m49_1415 -> m49_1417  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1415 -> m49_1419  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1415 -> m49_1421  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1415 -> m49_1422  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1415 -> m49_1423  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1415 -> m49_1425  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1415 -> m49_1416  [key=0, style=solid];
m49_1415 -> m49_1418  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1415 -> m49_1424  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1415 -> m49_1420  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1420 -> m49_1421  [key=0, style=solid];
m49_1420 -> m49_1325  [key=2, style=dotted];
m49_1414 -> m49_1415  [key=0, style=solid];
m49_1414 -> m49_1414  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m49_1426 -> m49_1413  [key=0, style=bold, color=blue];
m49_1015 -> m49_1016  [key=0, style=solid];
m49_1019 -> m49_60  [key=2, style=dotted];
m49_1019 -> m49_1020  [key=0, style=solid];
m49_1020 -> m49_60  [key=2, style=dotted];
m49_1020 -> m49_1021  [key=0, style=solid];
m49_1023 -> m49_60  [key=2, style=dotted];
m49_1023 -> m49_1024  [key=0, style=solid];
m49_1024 -> m49_60  [key=2, style=dotted];
m49_1024 -> m49_1025  [key=0, style=solid];
m49_1027 -> m49_60  [key=2, style=dotted];
m49_1027 -> m49_1028  [key=0, style=solid];
m49_1028 -> m49_60  [key=2, style=dotted];
m49_1028 -> m49_1029  [key=0, style=solid];
m49_1031 -> m49_60  [key=2, style=dotted];
m49_1031 -> m49_1032  [key=0, style=solid];
m49_1032 -> m49_60  [key=2, style=dotted];
m49_1032 -> m49_1033  [key=0, style=solid];
m49_1037 -> m49_60  [key=2, style=dotted];
m49_1037 -> m49_1038  [key=0, style=solid];
m49_1038 -> m49_60  [key=2, style=dotted];
m49_1038 -> m49_1039  [key=0, style=solid];
m49_1018 -> m49_58  [key=2, style=dotted];
m49_1018 -> m49_59  [key=2, style=dotted];
m49_1018 -> m49_1019  [key=0, style=solid];
m49_1022 -> m49_58  [key=2, style=dotted];
m49_1022 -> m49_59  [key=2, style=dotted];
m49_1022 -> m49_1023  [key=0, style=solid];
m49_1026 -> m49_58  [key=2, style=dotted];
m49_1026 -> m49_59  [key=2, style=dotted];
m49_1026 -> m49_1027  [key=0, style=solid];
m49_1030 -> m49_58  [key=2, style=dotted];
m49_1030 -> m49_59  [key=2, style=dotted];
m49_1030 -> m49_1031  [key=0, style=solid];
m49_1036 -> m49_58  [key=2, style=dotted];
m49_1036 -> m49_59  [key=2, style=dotted];
m49_1036 -> m49_1037  [key=0, style=solid];
m49_1040 -> m49_58  [key=2, style=dotted];
m49_1040 -> m49_1041  [key=0, style=solid];
m49_1040 -> m49_136  [key=2, style=dotted];
m49_1017 -> m49_56  [key=2, style=dotted];
m49_1017 -> m49_57  [key=2, style=dotted];
m49_1017 -> m49_1019  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1017 -> m49_1020  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1017 -> m49_1018  [key=0, style=solid];
m49_1021 -> m49_56  [key=2, style=dotted];
m49_1021 -> m49_57  [key=2, style=dotted];
m49_1021 -> m49_1023  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1021 -> m49_1024  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1021 -> m49_1022  [key=0, style=solid];
m49_1025 -> m49_56  [key=2, style=dotted];
m49_1025 -> m49_57  [key=2, style=dotted];
m49_1025 -> m49_1027  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1025 -> m49_1028  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1025 -> m49_1026  [key=0, style=solid];
m49_1029 -> m49_56  [key=2, style=dotted];
m49_1029 -> m49_57  [key=2, style=dotted];
m49_1029 -> m49_1031  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1029 -> m49_1032  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1029 -> m49_1030  [key=0, style=solid];
m49_1033 -> m49_56  [key=2, style=dotted];
m49_1033 -> m49_57  [key=2, style=dotted];
m49_1033 -> m49_1045  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1033 -> m49_1034  [key=0, style=solid];
m49_1035 -> m49_56  [key=2, style=dotted];
m49_1035 -> m49_57  [key=2, style=dotted];
m49_1035 -> m49_1037  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1035 -> m49_1038  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1035 -> m49_1036  [key=0, style=solid];
m49_1039 -> m49_56  [key=2, style=dotted];
m49_1039 -> m49_57  [key=2, style=dotted];
m49_1039 -> m49_1040  [key=0, style=solid];
m49_1041 -> m49_56  [key=2, style=dotted];
m49_1041 -> m49_57  [key=2, style=dotted];
m49_1041 -> m49_1048  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1041 -> m49_1042  [key=0, style=solid];
m49_1016 -> m49_1017  [key=0, style=solid];
m49_1016 -> m49_941  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.JsonTextReader reader"];
m49_1034 -> m49_1035  [key=0, style=solid];
m49_1034 -> m49_1044  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_1034 -> m49_150  [key=2, style=dotted];
m49_1042 -> m49_1047  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_1042 -> m49_1043  [key=0, style=solid];
m49_1042 -> m49_150  [key=2, style=dotted];
m49_1043 -> m49_1015  [key=0, style=bold, color=blue];
m49_226 -> m49_227  [key=0, style=solid];
m49_230 -> m49_60  [key=2, style=dotted];
m49_230 -> m49_231  [key=0, style=solid];
m49_232 -> m49_60  [key=2, style=dotted];
m49_232 -> m49_233  [key=0, style=solid];
m49_234 -> m49_60  [key=2, style=dotted];
m49_234 -> m49_235  [key=0, style=solid];
m49_236 -> m49_60  [key=2, style=dotted];
m49_236 -> m49_237  [key=0, style=solid];
m49_229 -> m49_58  [key=2, style=dotted];
m49_229 -> m49_59  [key=2, style=dotted];
m49_229 -> m49_230  [key=0, style=solid];
m49_231 -> m49_58  [key=2, style=dotted];
m49_231 -> m49_59  [key=2, style=dotted];
m49_231 -> m49_232  [key=0, style=solid];
m49_233 -> m49_58  [key=2, style=dotted];
m49_233 -> m49_59  [key=2, style=dotted];
m49_233 -> m49_234  [key=0, style=solid];
m49_235 -> m49_58  [key=2, style=dotted];
m49_235 -> m49_59  [key=2, style=dotted];
m49_235 -> m49_236  [key=0, style=solid];
m49_228 -> m49_56  [key=2, style=dotted];
m49_228 -> m49_57  [key=2, style=dotted];
m49_228 -> m49_230  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_228 -> m49_232  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_228 -> m49_234  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_228 -> m49_236  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_228 -> m49_229  [key=0, style=solid];
m49_228 -> m49_231  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_228 -> m49_233  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_228 -> m49_235  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_228 -> m49_240  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_228 -> m49_237  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_237 -> m49_238  [key=0, style=solid];
m49_237 -> m49_150  [key=2, style=dotted];
m49_237 -> m49_239  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_227 -> m49_228  [key=0, style=solid];
m49_227 -> m49_227  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m49_238 -> m49_226  [key=0, style=bold, color=blue];
m49_57 -> m49_58  [key=0, style=solid];
m49_57 -> m49_52  [key=2, style=dotted];
m49_2070 -> m49_2071  [key=0, style=solid];
m49_2075 -> m49_60  [key=2, style=dotted];
m49_2075 -> m49_2076  [key=0, style=solid];
m49_2077 -> m49_60  [key=2, style=dotted];
m49_2077 -> m49_2078  [key=0, style=solid];
m49_2078 -> m49_60  [key=2, style=dotted];
m49_2078 -> m49_2079  [key=0, style=solid];
m49_2080 -> m49_60  [key=2, style=dotted];
m49_2080 -> m49_2081  [key=0, style=solid];
m49_2081 -> m49_60  [key=2, style=dotted];
m49_2081 -> m49_2082  [key=0, style=solid];
m49_2083 -> m49_60  [key=2, style=dotted];
m49_2083 -> m49_2084  [key=0, style=solid];
m49_2084 -> m49_60  [key=2, style=dotted];
m49_2084 -> m49_2085  [key=0, style=solid];
m49_2086 -> m49_60  [key=2, style=dotted];
m49_2086 -> m49_2087  [key=0, style=solid];
m49_2087 -> m49_60  [key=2, style=dotted];
m49_2087 -> m49_2088  [key=0, style=solid];
m49_2089 -> m49_60  [key=2, style=dotted];
m49_2089 -> m49_2090  [key=0, style=solid];
m49_2090 -> m49_60  [key=2, style=dotted];
m49_2090 -> m49_2091  [key=0, style=solid];
m49_2092 -> m49_60  [key=2, style=dotted];
m49_2092 -> m49_2093  [key=0, style=solid];
m49_2093 -> m49_60  [key=2, style=dotted];
m49_2093 -> m49_2094  [key=0, style=solid];
m49_2095 -> m49_60  [key=2, style=dotted];
m49_2095 -> m49_2096  [key=0, style=solid];
m49_2096 -> m49_60  [key=2, style=dotted];
m49_2096 -> m49_2097  [key=0, style=solid];
m49_2098 -> m49_60  [key=2, style=dotted];
m49_2098 -> m49_2099  [key=0, style=solid];
m49_2099 -> m49_60  [key=2, style=dotted];
m49_2099 -> m49_2100  [key=0, style=solid];
m49_2101 -> m49_60  [key=2, style=dotted];
m49_2101 -> m49_2102  [key=0, style=solid];
m49_2102 -> m49_60  [key=2, style=dotted];
m49_2102 -> m49_2103  [key=0, style=solid];
m49_2104 -> m49_60  [key=2, style=dotted];
m49_2104 -> m49_2105  [key=0, style=solid];
m49_2105 -> m49_60  [key=2, style=dotted];
m49_2105 -> m49_2106  [key=0, style=solid];
m49_2107 -> m49_60  [key=2, style=dotted];
m49_2107 -> m49_2108  [key=0, style=solid];
m49_2108 -> m49_60  [key=2, style=dotted];
m49_2108 -> m49_2109  [key=0, style=solid];
m49_2073 -> m49_58  [key=2, style=dotted];
m49_2073 -> m49_59  [key=2, style=dotted];
m49_2073 -> m49_2074  [key=0, style=solid];
m49_2074 -> m49_58  [key=2, style=dotted];
m49_2074 -> m49_59  [key=2, style=dotted];
m49_2074 -> m49_2075  [key=0, style=solid];
m49_2076 -> m49_58  [key=2, style=dotted];
m49_2076 -> m49_59  [key=2, style=dotted];
m49_2076 -> m49_2077  [key=0, style=solid];
m49_2079 -> m49_58  [key=2, style=dotted];
m49_2079 -> m49_59  [key=2, style=dotted];
m49_2079 -> m49_2080  [key=0, style=solid];
m49_2082 -> m49_58  [key=2, style=dotted];
m49_2082 -> m49_59  [key=2, style=dotted];
m49_2082 -> m49_2083  [key=0, style=solid];
m49_2085 -> m49_58  [key=2, style=dotted];
m49_2085 -> m49_59  [key=2, style=dotted];
m49_2085 -> m49_2086  [key=0, style=solid];
m49_2088 -> m49_58  [key=2, style=dotted];
m49_2088 -> m49_59  [key=2, style=dotted];
m49_2088 -> m49_2089  [key=0, style=solid];
m49_2091 -> m49_58  [key=2, style=dotted];
m49_2091 -> m49_59  [key=2, style=dotted];
m49_2091 -> m49_2092  [key=0, style=solid];
m49_2094 -> m49_58  [key=2, style=dotted];
m49_2094 -> m49_59  [key=2, style=dotted];
m49_2094 -> m49_2095  [key=0, style=solid];
m49_2097 -> m49_58  [key=2, style=dotted];
m49_2097 -> m49_59  [key=2, style=dotted];
m49_2097 -> m49_2098  [key=0, style=solid];
m49_2100 -> m49_58  [key=2, style=dotted];
m49_2100 -> m49_59  [key=2, style=dotted];
m49_2100 -> m49_2101  [key=0, style=solid];
m49_2103 -> m49_58  [key=2, style=dotted];
m49_2103 -> m49_59  [key=2, style=dotted];
m49_2103 -> m49_2104  [key=0, style=solid];
m49_2106 -> m49_58  [key=2, style=dotted];
m49_2106 -> m49_59  [key=2, style=dotted];
m49_2106 -> m49_2107  [key=0, style=solid];
m49_2109 -> m49_58  [key=2, style=dotted];
m49_2109 -> m49_59  [key=2, style=dotted];
m49_2109 -> m49_2110  [key=0, style=solid];
m49_2072 -> m49_56  [key=2, style=dotted];
m49_2072 -> m49_2075  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2072 -> m49_2077  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2072 -> m49_2078  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2072 -> m49_2080  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2072 -> m49_2081  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2072 -> m49_2083  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2072 -> m49_2084  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2072 -> m49_2086  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2072 -> m49_2087  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2072 -> m49_2089  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2072 -> m49_2090  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2072 -> m49_2092  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2072 -> m49_2093  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2072 -> m49_2095  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2072 -> m49_2096  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2072 -> m49_2098  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2072 -> m49_2099  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2072 -> m49_2101  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2072 -> m49_2102  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2072 -> m49_2104  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2072 -> m49_2105  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2072 -> m49_2107  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2072 -> m49_2108  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2072 -> m49_2073  [key=0, style=solid];
m49_2072 -> m49_2074  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2072 -> m49_2076  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2072 -> m49_2079  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2072 -> m49_2082  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2072 -> m49_2085  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2072 -> m49_2088  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2072 -> m49_2091  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2072 -> m49_2094  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2072 -> m49_2097  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2072 -> m49_2100  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2072 -> m49_2103  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2072 -> m49_2106  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2072 -> m49_2109  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2072 -> m49_336  [key=2, style=dotted];
m49_2072 -> m49_374  [key=2, style=dotted];
m49_2072 -> m49_375  [key=2, style=dotted];
m49_2071 -> m49_2072  [key=0, style=solid];
m49_2071 -> m49_2071  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m49_2110 -> m49_2070  [key=0, style=bold, color=blue];
m49_642 -> m49_643  [key=0, style=solid];
m49_650 -> m49_60  [key=2, style=dotted];
m49_650 -> m49_651  [key=0, style=solid];
m49_647 -> m49_58  [key=2, style=dotted];
m49_647 -> m49_648  [key=0, style=solid];
m49_649 -> m49_58  [key=2, style=dotted];
m49_649 -> m49_650  [key=0, style=solid];
m49_644 -> m49_56  [key=2, style=dotted];
m49_644 -> m49_57  [key=2, style=dotted];
m49_644 -> m49_650  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_644 -> m49_647  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_644 -> m49_649  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_644 -> m49_645  [key=0, style=solid];
m49_646 -> m49_647  [key=0, style=solid];
m49_646 -> m49_649  [key=0, style=solid];
m49_648 -> m49_646  [key=0, style=solid];
m49_648 -> m49_648  [key=1, style=dashed, color=darkseagreen4, label=i];
m49_643 -> m49_644  [key=0, style=solid];
m49_643 -> m49_643  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m49_645 -> m49_646  [key=0, style=solid];
m49_645 -> m49_648  [key=1, style=dashed, color=darkseagreen4, label=i];
m49_645 -> m49_590  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m49_651 -> m49_642  [key=0, style=bold, color=blue];
m49_1453 -> m49_1454  [key=0, style=solid];
m49_1457 -> m49_60  [key=2, style=dotted];
m49_1457 -> m49_1458  [key=0, style=solid];
m49_1459 -> m49_60  [key=2, style=dotted];
m49_1459 -> m49_1460  [key=0, style=solid];
m49_1461 -> m49_60  [key=2, style=dotted];
m49_1461 -> m49_1462  [key=0, style=solid];
m49_1462 -> m49_60  [key=2, style=dotted];
m49_1462 -> m49_1463  [key=0, style=solid];
m49_1463 -> m49_60  [key=2, style=dotted];
m49_1463 -> m49_1464  [key=0, style=solid];
m49_1463 -> m49_1410  [key=2, style=dotted];
m49_1463 -> m49_1411  [key=2, style=dotted];
m49_1463 -> m49_1412  [key=2, style=dotted];
m49_1463 -> m49_1467  [key=2, style=dotted];
m49_1463 -> m49_1468  [key=2, style=dotted];
m49_1465 -> m49_60  [key=2, style=dotted];
m49_1465 -> m49_1466  [key=0, style=solid];
m49_1456 -> m49_58  [key=2, style=dotted];
m49_1456 -> m49_59  [key=2, style=dotted];
m49_1456 -> m49_1457  [key=0, style=solid];
m49_1458 -> m49_58  [key=2, style=dotted];
m49_1458 -> m49_59  [key=2, style=dotted];
m49_1458 -> m49_1459  [key=0, style=solid];
m49_1464 -> m49_58  [key=2, style=dotted];
m49_1464 -> m49_59  [key=2, style=dotted];
m49_1464 -> m49_1465  [key=0, style=solid];
m49_1455 -> m49_56  [key=2, style=dotted];
m49_1455 -> m49_57  [key=2, style=dotted];
m49_1455 -> m49_1457  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1455 -> m49_1459  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1455 -> m49_1461  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1455 -> m49_1462  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1455 -> m49_1463  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1455 -> m49_1465  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1455 -> m49_1456  [key=0, style=solid];
m49_1455 -> m49_1458  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1455 -> m49_1464  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1455 -> m49_1460  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1460 -> m49_1461  [key=0, style=solid];
m49_1460 -> m49_1325  [key=2, style=dotted];
m49_1454 -> m49_1455  [key=0, style=solid];
m49_1454 -> m49_1454  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m49_1466 -> m49_1453  [key=0, style=bold, color=blue];
m49_910 -> m49_911  [key=0, style=solid];
m49_914 -> m49_60  [key=2, style=dotted];
m49_914 -> m49_915  [key=0, style=solid];
m49_916 -> m49_60  [key=2, style=dotted];
m49_916 -> m49_917  [key=0, style=solid];
m49_917 -> m49_60  [key=2, style=dotted];
m49_917 -> m49_918  [key=0, style=solid];
m49_919 -> m49_60  [key=2, style=dotted];
m49_919 -> m49_920  [key=0, style=solid];
m49_920 -> m49_60  [key=2, style=dotted];
m49_920 -> m49_921  [key=0, style=solid];
m49_922 -> m49_60  [key=2, style=dotted];
m49_922 -> m49_923  [key=0, style=solid];
m49_923 -> m49_60  [key=2, style=dotted];
m49_923 -> m49_924  [key=0, style=solid];
m49_924 -> m49_60  [key=2, style=dotted];
m49_924 -> m49_925  [key=0, style=solid];
m49_925 -> m49_60  [key=2, style=dotted];
m49_925 -> m49_926  [key=0, style=solid];
m49_927 -> m49_60  [key=2, style=dotted];
m49_927 -> m49_928  [key=0, style=solid];
m49_928 -> m49_60  [key=2, style=dotted];
m49_928 -> m49_929  [key=0, style=solid];
m49_913 -> m49_56  [key=2, style=dotted];
m49_913 -> m49_914  [key=0, style=solid];
m49_913 -> m49_916  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_913 -> m49_917  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_913 -> m49_919  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_913 -> m49_920  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_913 -> m49_922  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_913 -> m49_923  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_913 -> m49_924  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_913 -> m49_925  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_913 -> m49_927  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_913 -> m49_928  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_913 -> m49_915  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_913 -> m49_918  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_913 -> m49_921  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_913 -> m49_926  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m49_912 -> m49_57  [key=2, style=dotted];
m49_912 -> m49_913  [key=0, style=solid];
m49_915 -> m49_916  [key=0, style=solid];
m49_915 -> m49_356  [key=2, style=dotted];
m49_918 -> m49_919  [key=0, style=solid];
m49_918 -> m49_356  [key=2, style=dotted];
m49_921 -> m49_922  [key=0, style=solid];
m49_921 -> m49_356  [key=2, style=dotted];
m49_926 -> m49_927  [key=0, style=solid];
m49_926 -> m49_356  [key=2, style=dotted];
m49_911 -> m49_912  [key=0, style=solid];
m49_911 -> m49_911  [key=3, color=darkorchid, style=bold, label="Local variable string input"];
m49_929 -> m49_910  [key=0, style=bold, color=blue];
m49_1777 -> m49_1778  [key=0, style=solid];
m49_1781 -> m49_60  [key=2, style=dotted];
m49_1781 -> m49_1782  [key=0, style=solid];
m49_1783 -> m49_60  [key=2, style=dotted];
m49_1783 -> m49_1784  [key=0, style=solid];
m49_1785 -> m49_60  [key=2, style=dotted];
m49_1785 -> m49_1786  [key=0, style=solid];
m49_1787 -> m49_60  [key=2, style=dotted];
m49_1787 -> m49_1788  [key=0, style=solid];
m49_1789 -> m49_60  [key=2, style=dotted];
m49_1789 -> m49_1790  [key=0, style=solid];
m49_1791 -> m49_60  [key=2, style=dotted];
m49_1791 -> m49_1792  [key=0, style=solid];
m49_1793 -> m49_60  [key=2, style=dotted];
m49_1793 -> m49_1794  [key=0, style=solid];
m49_1795 -> m49_60  [key=2, style=dotted];
m49_1795 -> m49_1796  [key=0, style=solid];
m49_1797 -> m49_60  [key=2, style=dotted];
m49_1797 -> m49_1798  [key=0, style=solid];
m49_1780 -> m49_58  [key=2, style=dotted];
m49_1780 -> m49_59  [key=2, style=dotted];
m49_1780 -> m49_1781  [key=0, style=solid];
m49_1782 -> m49_58  [key=2, style=dotted];
m49_1782 -> m49_59  [key=2, style=dotted];
m49_1782 -> m49_1783  [key=0, style=solid];
m49_1784 -> m49_58  [key=2, style=dotted];
m49_1784 -> m49_59  [key=2, style=dotted];
m49_1784 -> m49_1785  [key=0, style=solid];
m49_1786 -> m49_58  [key=2, style=dotted];
m49_1786 -> m49_59  [key=2, style=dotted];
m49_1786 -> m49_1787  [key=0, style=solid];
m49_1788 -> m49_58  [key=2, style=dotted];
m49_1788 -> m49_59  [key=2, style=dotted];
m49_1788 -> m49_1789  [key=0, style=solid];
m49_1790 -> m49_58  [key=2, style=dotted];
m49_1790 -> m49_59  [key=2, style=dotted];
m49_1790 -> m49_1791  [key=0, style=solid];
m49_1792 -> m49_58  [key=2, style=dotted];
m49_1792 -> m49_59  [key=2, style=dotted];
m49_1792 -> m49_1793  [key=0, style=solid];
m49_1794 -> m49_58  [key=2, style=dotted];
m49_1794 -> m49_59  [key=2, style=dotted];
m49_1794 -> m49_1795  [key=0, style=solid];
m49_1796 -> m49_58  [key=2, style=dotted];
m49_1796 -> m49_59  [key=2, style=dotted];
m49_1796 -> m49_1797  [key=0, style=solid];
m49_1798 -> m49_58  [key=2, style=dotted];
m49_1798 -> m49_1799  [key=0, style=solid];
m49_1798 -> m49_136  [key=2, style=dotted];
m49_1779 -> m49_56  [key=2, style=dotted];
m49_1779 -> m49_1781  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1779 -> m49_1783  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1779 -> m49_1785  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1779 -> m49_1787  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1779 -> m49_1789  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1779 -> m49_1791  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1779 -> m49_1793  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1779 -> m49_1795  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1779 -> m49_1797  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1779 -> m49_1780  [key=0, style=solid];
m49_1779 -> m49_1782  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1779 -> m49_1784  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1779 -> m49_1786  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1779 -> m49_1788  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1779 -> m49_1790  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1779 -> m49_1792  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1779 -> m49_1794  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1779 -> m49_1796  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1779 -> m49_1798  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1779 -> m49_336  [key=2, style=dotted];
m49_1779 -> m49_374  [key=2, style=dotted];
m49_1779 -> m49_375  [key=2, style=dotted];
m49_1778 -> m49_1779  [key=0, style=solid];
m49_1778 -> m49_1778  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m49_1799 -> m49_1777  [key=0, style=bold, color=blue];
m49_1548 -> m49_1549  [key=0, style=solid];
m49_1549 -> m49_56  [key=2, style=dotted];
m49_1549 -> m49_57  [key=2, style=dotted];
m49_1549 -> m49_1553  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1549 -> m49_1550  [key=0, style=solid];
m49_1550 -> m49_1552  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_1550 -> m49_1551  [key=0, style=solid];
m49_1550 -> m49_150  [key=2, style=dotted];
m49_1551 -> m49_1548  [key=0, style=bold, color=blue];
m49_1135 -> m49_1136  [key=0, style=solid];
m49_1139 -> m49_60  [key=2, style=dotted];
m49_1139 -> m49_1140  [key=0, style=solid];
m49_1141 -> m49_60  [key=2, style=dotted];
m49_1141 -> m49_1142  [key=0, style=solid];
m49_1143 -> m49_60  [key=2, style=dotted];
m49_1143 -> m49_1144  [key=0, style=solid];
m49_1143 -> m49_1147  [key=2, style=dotted];
m49_1143 -> m49_1148  [key=2, style=dotted];
m49_1145 -> m49_60  [key=2, style=dotted];
m49_1145 -> m49_1146  [key=0, style=solid];
m49_1138 -> m49_58  [key=2, style=dotted];
m49_1138 -> m49_1139  [key=0, style=solid];
m49_1140 -> m49_58  [key=2, style=dotted];
m49_1140 -> m49_1141  [key=0, style=solid];
m49_1142 -> m49_58  [key=2, style=dotted];
m49_1142 -> m49_1143  [key=0, style=solid];
m49_1144 -> m49_58  [key=2, style=dotted];
m49_1144 -> m49_1145  [key=0, style=solid];
m49_1137 -> m49_56  [key=2, style=dotted];
m49_1137 -> m49_57  [key=2, style=dotted];
m49_1137 -> m49_1139  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1137 -> m49_1141  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1137 -> m49_1143  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1137 -> m49_1145  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1137 -> m49_1138  [key=0, style=solid];
m49_1137 -> m49_1140  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1137 -> m49_1142  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1137 -> m49_1144  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1136 -> m49_1137  [key=0, style=solid];
m49_1136 -> m49_1136  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m49_1146 -> m49_1135  [key=0, style=bold, color=blue];
m49_59 -> m49_60  [key=0, style=solid];
m49_59 -> m49_52  [key=2, style=dotted];
m49_113 -> m49_114  [key=0, style=solid];
m49_117 -> m49_60  [key=2, style=dotted];
m49_117 -> m49_118  [key=0, style=solid];
m49_119 -> m49_60  [key=2, style=dotted];
m49_119 -> m49_120  [key=0, style=solid];
m49_121 -> m49_60  [key=2, style=dotted];
m49_121 -> m49_122  [key=0, style=solid];
m49_123 -> m49_60  [key=2, style=dotted];
m49_123 -> m49_124  [key=0, style=solid];
m49_125 -> m49_60  [key=2, style=dotted];
m49_125 -> m49_126  [key=0, style=solid];
m49_126 -> m49_60  [key=2, style=dotted];
m49_126 -> m49_127  [key=0, style=solid];
m49_127 -> m49_60  [key=2, style=dotted];
m49_127 -> m49_128  [key=0, style=solid];
m49_127 -> m49_135  [key=2, style=dotted];
m49_129 -> m49_60  [key=2, style=dotted];
m49_129 -> m49_130  [key=0, style=solid];
m49_133 -> m49_60  [key=2, style=dotted];
m49_133 -> m49_134  [key=0, style=solid];
m49_133 -> m49_135  [key=2, style=dotted];
m49_116 -> m49_58  [key=2, style=dotted];
m49_116 -> m49_59  [key=2, style=dotted];
m49_116 -> m49_117  [key=0, style=solid];
m49_118 -> m49_58  [key=2, style=dotted];
m49_118 -> m49_59  [key=2, style=dotted];
m49_118 -> m49_119  [key=0, style=solid];
m49_120 -> m49_58  [key=2, style=dotted];
m49_120 -> m49_59  [key=2, style=dotted];
m49_120 -> m49_121  [key=0, style=solid];
m49_122 -> m49_58  [key=2, style=dotted];
m49_122 -> m49_59  [key=2, style=dotted];
m49_122 -> m49_123  [key=0, style=solid];
m49_124 -> m49_58  [key=2, style=dotted];
m49_124 -> m49_59  [key=2, style=dotted];
m49_124 -> m49_125  [key=0, style=solid];
m49_128 -> m49_58  [key=2, style=dotted];
m49_128 -> m49_59  [key=2, style=dotted];
m49_128 -> m49_129  [key=0, style=solid];
m49_130 -> m49_58  [key=2, style=dotted];
m49_130 -> m49_131  [key=0, style=solid];
m49_130 -> m49_136  [key=2, style=dotted];
m49_115 -> m49_56  [key=2, style=dotted];
m49_115 -> m49_57  [key=2, style=dotted];
m49_115 -> m49_117  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_115 -> m49_119  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_115 -> m49_121  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_115 -> m49_123  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_115 -> m49_125  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_115 -> m49_126  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_115 -> m49_127  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_115 -> m49_129  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_115 -> m49_116  [key=0, style=solid];
m49_115 -> m49_118  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_115 -> m49_120  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_115 -> m49_122  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_115 -> m49_124  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_115 -> m49_128  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_115 -> m49_130  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_132 -> m49_133  [key=0, style=solid];
m49_131 -> m49_132  [key=0, style=solid];
m49_131 -> m49_137  [key=2, style=dotted];
m49_114 -> m49_115  [key=0, style=solid];
m49_114 -> m49_131  [key=1, style=dashed, color=darkseagreen4, label=json];
m49_114 -> m49_114  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m49_134 -> m49_113  [key=0, style=bold, color=blue];
m49_2225 -> m49_2226  [key=0, style=solid];
m49_2226 -> m49_2230  [key=1, style=dashed, color=darkseagreen4, label=json];
m49_2226 -> m49_2226  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m49_2226 -> m49_2227  [key=0, style=solid];
m49_2227 -> m49_2229  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_2227 -> m49_150  [key=2, style=dotted];
m49_2227 -> m49_2228  [key=0, style=solid];
m49_2228 -> m49_2225  [key=0, style=bold, color=blue];
m49_1627 -> m49_1628  [key=0, style=solid];
m49_1631 -> m49_60  [key=2, style=dotted];
m49_1631 -> m49_1632  [key=0, style=solid];
m49_1632 -> m49_60  [key=2, style=dotted];
m49_1632 -> m49_1633  [key=0, style=solid];
m49_1634 -> m49_60  [key=2, style=dotted];
m49_1634 -> m49_1635  [key=0, style=solid];
m49_1630 -> m49_58  [key=2, style=dotted];
m49_1630 -> m49_59  [key=2, style=dotted];
m49_1630 -> m49_1631  [key=0, style=solid];
m49_1633 -> m49_58  [key=2, style=dotted];
m49_1633 -> m49_59  [key=2, style=dotted];
m49_1633 -> m49_1634  [key=0, style=solid];
m49_1629 -> m49_56  [key=2, style=dotted];
m49_1629 -> m49_57  [key=2, style=dotted];
m49_1629 -> m49_1631  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1629 -> m49_1632  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1629 -> m49_1634  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1629 -> m49_1630  [key=0, style=solid];
m49_1629 -> m49_1633  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1628 -> m49_1629  [key=0, style=solid];
m49_1628 -> m49_1628  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m49_1635 -> m49_1627  [key=0, style=bold, color=blue];
m49_1211 -> m49_1212  [key=0, style=solid];
m49_1215 -> m49_60  [key=2, style=dotted];
m49_1215 -> m49_1216  [key=0, style=solid];
m49_1217 -> m49_60  [key=2, style=dotted];
m49_1217 -> m49_1218  [key=0, style=solid];
m49_1219 -> m49_60  [key=2, style=dotted];
m49_1219 -> m49_1220  [key=0, style=solid];
m49_1214 -> m49_58  [key=2, style=dotted];
m49_1214 -> m49_1215  [key=0, style=solid];
m49_1216 -> m49_58  [key=2, style=dotted];
m49_1216 -> m49_1217  [key=0, style=solid];
m49_1218 -> m49_58  [key=2, style=dotted];
m49_1218 -> m49_1219  [key=0, style=solid];
m49_1213 -> m49_56  [key=2, style=dotted];
m49_1213 -> m49_57  [key=2, style=dotted];
m49_1213 -> m49_1215  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1213 -> m49_1217  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1213 -> m49_1219  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1213 -> m49_1214  [key=0, style=solid];
m49_1213 -> m49_1216  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1213 -> m49_1218  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1213 -> m49_1223  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1213 -> m49_1220  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1220 -> m49_1221  [key=0, style=solid];
m49_1220 -> m49_150  [key=2, style=dotted];
m49_1220 -> m49_1222  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_1212 -> m49_1213  [key=0, style=solid];
m49_1212 -> m49_1212  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m49_1221 -> m49_1211  [key=0, style=bold, color=blue];
m49_1663 -> m49_1664  [key=0, style=solid];
m49_1667 -> m49_60  [key=2, style=dotted];
m49_1667 -> m49_1668  [key=0, style=solid];
m49_1669 -> m49_60  [key=2, style=dotted];
m49_1669 -> m49_1670  [key=0, style=solid];
m49_1671 -> m49_60  [key=2, style=dotted];
m49_1671 -> m49_1672  [key=0, style=solid];
m49_1673 -> m49_60  [key=2, style=dotted];
m49_1673 -> m49_1674  [key=0, style=solid];
m49_1675 -> m49_60  [key=2, style=dotted];
m49_1675 -> m49_1676  [key=0, style=solid];
m49_1677 -> m49_60  [key=2, style=dotted];
m49_1677 -> m49_1678  [key=0, style=solid];
m49_1679 -> m49_60  [key=2, style=dotted];
m49_1679 -> m49_1680  [key=0, style=solid];
m49_1681 -> m49_60  [key=2, style=dotted];
m49_1681 -> m49_1682  [key=0, style=solid];
m49_1683 -> m49_60  [key=2, style=dotted];
m49_1683 -> m49_1684  [key=0, style=solid];
m49_1685 -> m49_60  [key=2, style=dotted];
m49_1685 -> m49_1686  [key=0, style=solid];
m49_1687 -> m49_60  [key=2, style=dotted];
m49_1687 -> m49_1688  [key=0, style=solid];
m49_1689 -> m49_60  [key=2, style=dotted];
m49_1689 -> m49_1690  [key=0, style=solid];
m49_1691 -> m49_60  [key=2, style=dotted];
m49_1691 -> m49_1692  [key=0, style=solid];
m49_1693 -> m49_60  [key=2, style=dotted];
m49_1693 -> m49_1694  [key=0, style=solid];
m49_1695 -> m49_60  [key=2, style=dotted];
m49_1695 -> m49_1696  [key=0, style=solid];
m49_1697 -> m49_60  [key=2, style=dotted];
m49_1697 -> m49_1698  [key=0, style=solid];
m49_1699 -> m49_60  [key=2, style=dotted];
m49_1699 -> m49_1700  [key=0, style=solid];
m49_1701 -> m49_60  [key=2, style=dotted];
m49_1701 -> m49_1702  [key=0, style=solid];
m49_1703 -> m49_60  [key=2, style=dotted];
m49_1703 -> m49_1704  [key=0, style=solid];
m49_1666 -> m49_58  [key=2, style=dotted];
m49_1666 -> m49_59  [key=2, style=dotted];
m49_1666 -> m49_1667  [key=0, style=solid];
m49_1668 -> m49_58  [key=2, style=dotted];
m49_1668 -> m49_59  [key=2, style=dotted];
m49_1668 -> m49_1669  [key=0, style=solid];
m49_1670 -> m49_58  [key=2, style=dotted];
m49_1670 -> m49_59  [key=2, style=dotted];
m49_1670 -> m49_1671  [key=0, style=solid];
m49_1672 -> m49_58  [key=2, style=dotted];
m49_1672 -> m49_59  [key=2, style=dotted];
m49_1672 -> m49_1673  [key=0, style=solid];
m49_1674 -> m49_58  [key=2, style=dotted];
m49_1674 -> m49_59  [key=2, style=dotted];
m49_1674 -> m49_1675  [key=0, style=solid];
m49_1676 -> m49_58  [key=2, style=dotted];
m49_1676 -> m49_59  [key=2, style=dotted];
m49_1676 -> m49_1677  [key=0, style=solid];
m49_1678 -> m49_58  [key=2, style=dotted];
m49_1678 -> m49_59  [key=2, style=dotted];
m49_1678 -> m49_1679  [key=0, style=solid];
m49_1680 -> m49_58  [key=2, style=dotted];
m49_1680 -> m49_59  [key=2, style=dotted];
m49_1680 -> m49_1681  [key=0, style=solid];
m49_1682 -> m49_58  [key=2, style=dotted];
m49_1682 -> m49_59  [key=2, style=dotted];
m49_1682 -> m49_1683  [key=0, style=solid];
m49_1684 -> m49_58  [key=2, style=dotted];
m49_1684 -> m49_59  [key=2, style=dotted];
m49_1684 -> m49_1685  [key=0, style=solid];
m49_1686 -> m49_58  [key=2, style=dotted];
m49_1686 -> m49_59  [key=2, style=dotted];
m49_1686 -> m49_1687  [key=0, style=solid];
m49_1688 -> m49_58  [key=2, style=dotted];
m49_1688 -> m49_59  [key=2, style=dotted];
m49_1688 -> m49_1689  [key=0, style=solid];
m49_1690 -> m49_58  [key=2, style=dotted];
m49_1690 -> m49_59  [key=2, style=dotted];
m49_1690 -> m49_1691  [key=0, style=solid];
m49_1692 -> m49_58  [key=2, style=dotted];
m49_1692 -> m49_59  [key=2, style=dotted];
m49_1692 -> m49_1693  [key=0, style=solid];
m49_1694 -> m49_58  [key=2, style=dotted];
m49_1694 -> m49_59  [key=2, style=dotted];
m49_1694 -> m49_1695  [key=0, style=solid];
m49_1696 -> m49_58  [key=2, style=dotted];
m49_1696 -> m49_59  [key=2, style=dotted];
m49_1696 -> m49_1697  [key=0, style=solid];
m49_1698 -> m49_58  [key=2, style=dotted];
m49_1698 -> m49_59  [key=2, style=dotted];
m49_1698 -> m49_1699  [key=0, style=solid];
m49_1700 -> m49_58  [key=2, style=dotted];
m49_1700 -> m49_59  [key=2, style=dotted];
m49_1700 -> m49_1701  [key=0, style=solid];
m49_1702 -> m49_58  [key=2, style=dotted];
m49_1702 -> m49_59  [key=2, style=dotted];
m49_1702 -> m49_1703  [key=0, style=solid];
m49_1704 -> m49_58  [key=2, style=dotted];
m49_1704 -> m49_1705  [key=0, style=solid];
m49_1704 -> m49_136  [key=2, style=dotted];
m49_1664 -> m49_56  [key=2, style=dotted];
m49_1664 -> m49_57  [key=2, style=dotted];
m49_1664 -> m49_1667  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1664 -> m49_1669  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1664 -> m49_1671  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1664 -> m49_1673  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1664 -> m49_1675  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1664 -> m49_1677  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1664 -> m49_1679  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1664 -> m49_1681  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1664 -> m49_1683  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1664 -> m49_1685  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1664 -> m49_1687  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1664 -> m49_1689  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1664 -> m49_1691  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1664 -> m49_1693  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1664 -> m49_1695  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1664 -> m49_1697  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1664 -> m49_1699  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1664 -> m49_1701  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1664 -> m49_1703  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1664 -> m49_1666  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1664 -> m49_1668  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1664 -> m49_1670  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1664 -> m49_1672  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1664 -> m49_1674  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1664 -> m49_1676  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1664 -> m49_1678  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1664 -> m49_1680  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1664 -> m49_1682  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1664 -> m49_1684  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1664 -> m49_1686  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1664 -> m49_1688  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1664 -> m49_1690  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1664 -> m49_1692  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1664 -> m49_1694  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1664 -> m49_1696  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1664 -> m49_1698  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1664 -> m49_1700  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1664 -> m49_1702  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1664 -> m49_1704  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1664 -> m49_1665  [key=0, style=solid];
m49_1665 -> m49_1666  [key=0, style=solid];
m49_1705 -> m49_1663  [key=0, style=bold, color=blue];
m49_2167 -> m49_2168  [key=0, style=solid];
m49_2176 -> m49_60  [key=2, style=dotted];
m49_2176 -> m49_2177  [key=0, style=solid];
m49_2181 -> m49_60  [key=2, style=dotted];
m49_2181 -> m49_2182  [key=0, style=solid];
m49_2170 -> m49_58  [key=2, style=dotted];
m49_2170 -> m49_59  [key=2, style=dotted];
m49_2170 -> m49_2171  [key=0, style=solid];
m49_2175 -> m49_58  [key=2, style=dotted];
m49_2175 -> m49_59  [key=2, style=dotted];
m49_2175 -> m49_2176  [key=0, style=solid];
m49_2180 -> m49_58  [key=2, style=dotted];
m49_2180 -> m49_59  [key=2, style=dotted];
m49_2180 -> m49_2181  [key=0, style=solid];
m49_2169 -> m49_56  [key=2, style=dotted];
m49_2169 -> m49_2176  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_2169 -> m49_2181  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_2169 -> m49_2170  [key=0, style=solid];
m49_2169 -> m49_2190  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_2169 -> m49_2193  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_2169 -> m49_2175  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_2169 -> m49_2196  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_2169 -> m49_2180  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_2169 -> m49_2199  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_2169 -> m49_2202  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_2169 -> m49_2205  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_2169 -> m49_2172  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_2169 -> m49_2173  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_2169 -> m49_2178  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_2169 -> m49_2183  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_2169 -> m49_2184  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_2169 -> m49_2185  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_2168 -> m49_57  [key=2, style=dotted];
m49_2168 -> m49_2169  [key=0, style=solid];
m49_2168 -> m49_2188  [key=2, style=dotted];
m49_2168 -> m49_2171  [key=1, style=dashed, color=darkseagreen4, label=toggleReaderError];
m49_2168 -> m49_2174  [key=1, style=dashed, color=darkseagreen4, label=toggleReaderError];
m49_2168 -> m49_2177  [key=1, style=dashed, color=darkseagreen4, label=toggleReaderError];
m49_2168 -> m49_2179  [key=1, style=dashed, color=darkseagreen4, label=toggleReaderError];
m49_2168 -> m49_2182  [key=1, style=dashed, color=darkseagreen4, label=toggleReaderError];
m49_2168 -> m49_2186  [key=1, style=dashed, color=darkseagreen4, label=toggleReaderError];
m49_2177 -> m49_2178  [key=0, style=solid];
m49_2182 -> m49_2183  [key=0, style=solid];
m49_2171 -> m49_2172  [key=0, style=solid];
m49_2174 -> m49_2175  [key=0, style=solid];
m49_2179 -> m49_2180  [key=0, style=solid];
m49_2172 -> m49_2189  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_2172 -> m49_2173  [key=0, style=solid];
m49_2172 -> m49_150  [key=2, style=dotted];
m49_2173 -> m49_2192  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_2173 -> m49_2174  [key=0, style=solid];
m49_2173 -> m49_150  [key=2, style=dotted];
m49_2178 -> m49_2195  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_2178 -> m49_2179  [key=0, style=solid];
m49_2178 -> m49_150  [key=2, style=dotted];
m49_2183 -> m49_2198  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_2183 -> m49_2184  [key=0, style=solid];
m49_2183 -> m49_150  [key=2, style=dotted];
m49_2184 -> m49_2201  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_2184 -> m49_2185  [key=0, style=solid];
m49_2184 -> m49_150  [key=2, style=dotted];
m49_2185 -> m49_2204  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_2185 -> m49_2186  [key=0, style=solid];
m49_2185 -> m49_150  [key=2, style=dotted];
m49_2186 -> m49_2187  [key=0, style=solid];
m49_2187 -> m49_2167  [key=0, style=bold, color=blue];
m49_1439 -> m49_1440  [key=0, style=solid];
m49_1443 -> m49_60  [key=2, style=dotted];
m49_1443 -> m49_1444  [key=0, style=solid];
m49_1445 -> m49_60  [key=2, style=dotted];
m49_1445 -> m49_1446  [key=0, style=solid];
m49_1447 -> m49_60  [key=2, style=dotted];
m49_1447 -> m49_1448  [key=0, style=solid];
m49_1448 -> m49_60  [key=2, style=dotted];
m49_1448 -> m49_1449  [key=0, style=solid];
m49_1449 -> m49_60  [key=2, style=dotted];
m49_1449 -> m49_1450  [key=0, style=solid];
m49_1449 -> m49_1410  [key=2, style=dotted];
m49_1449 -> m49_1411  [key=2, style=dotted];
m49_1449 -> m49_1412  [key=2, style=dotted];
m49_1451 -> m49_60  [key=2, style=dotted];
m49_1451 -> m49_1452  [key=0, style=solid];
m49_1442 -> m49_58  [key=2, style=dotted];
m49_1442 -> m49_59  [key=2, style=dotted];
m49_1442 -> m49_1443  [key=0, style=solid];
m49_1444 -> m49_58  [key=2, style=dotted];
m49_1444 -> m49_59  [key=2, style=dotted];
m49_1444 -> m49_1445  [key=0, style=solid];
m49_1450 -> m49_58  [key=2, style=dotted];
m49_1450 -> m49_59  [key=2, style=dotted];
m49_1450 -> m49_1451  [key=0, style=solid];
m49_1441 -> m49_56  [key=2, style=dotted];
m49_1441 -> m49_57  [key=2, style=dotted];
m49_1441 -> m49_1443  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1441 -> m49_1445  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1441 -> m49_1447  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1441 -> m49_1448  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1441 -> m49_1449  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1441 -> m49_1451  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1441 -> m49_1442  [key=0, style=solid];
m49_1441 -> m49_1444  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1441 -> m49_1450  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1441 -> m49_1446  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1446 -> m49_1447  [key=0, style=solid];
m49_1446 -> m49_1325  [key=2, style=dotted];
m49_1440 -> m49_1441  [key=0, style=solid];
m49_1440 -> m49_1440  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m49_1452 -> m49_1439  [key=0, style=bold, color=blue];
m49_327 -> m49_314  [key=3, color=darkorchid, style=bold, label="Parameter variable string input"];
m49_327 -> m49_315  [key=3, color=darkorchid, style=bold, label="Parameter variable string input"];
m49_327 -> m49_316  [key=3, color=darkorchid, style=bold, label="Parameter variable string input"];
m49_327 -> m49_317  [key=3, color=darkorchid, style=bold, label="Parameter variable string input"];
m49_327 -> m49_318  [key=3, color=darkorchid, style=bold, label="Parameter variable string input"];
m49_327 -> m49_319  [key=3, color=darkorchid, style=bold, label="Parameter variable string input"];
m49_327 -> m49_320  [key=3, color=darkorchid, style=bold, label="Parameter variable string input"];
m49_327 -> m49_321  [key=3, color=darkorchid, style=bold, label="Parameter variable string input"];
m49_327 -> m49_322  [key=3, color=darkorchid, style=bold, label="Parameter variable string input"];
m49_327 -> m49_323  [key=3, color=darkorchid, style=bold, label="Parameter variable string input"];
m49_327 -> m49_324  [key=3, color=darkorchid, style=bold, label="Parameter variable string input"];
m49_327 -> m49_325  [key=3, color=darkorchid, style=bold, label="Parameter variable string input"];
m49_327 -> m49_328  [key=0, style=solid];
m49_327 -> m49_331  [key=3, color=darkorchid, style=bold, label="method methodReturn string ReadString"];
m49_330 -> m49_58  [key=2, style=dotted];
m49_330 -> m49_331  [key=0, style=solid];
m49_329 -> m49_56  [key=2, style=dotted];
m49_329 -> m49_330  [key=0, style=solid];
m49_329 -> m49_336  [key=2, style=dotted];
m49_329 -> m49_331  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_331 -> m49_332  [key=0, style=solid];
m49_328 -> m49_329  [key=0, style=solid];
m49_328 -> m49_334  [key=2, style=dotted];
m49_328 -> m49_335  [key=2, style=dotted];
m49_332 -> m49_333  [key=0, style=solid];
m49_333 -> m49_327  [key=0, style=bold, color=blue];
m49_407 -> m49_408  [key=0, style=solid];
m49_409 -> m49_56  [key=2, style=dotted];
m49_409 -> m49_57  [key=2, style=dotted];
m49_409 -> m49_413  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_409 -> m49_410  [key=0, style=solid];
m49_408 -> m49_409  [key=0, style=solid];
m49_408 -> m49_408  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m49_410 -> m49_412  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_410 -> m49_411  [key=0, style=solid];
m49_410 -> m49_150  [key=2, style=dotted];
m49_411 -> m49_407  [key=0, style=bold, color=blue];
m49_1955 -> m49_1956  [key=0, style=solid];
m49_1959 -> m49_60  [key=2, style=dotted];
m49_1959 -> m49_1960  [key=0, style=solid];
m49_1961 -> m49_60  [key=2, style=dotted];
m49_1961 -> m49_1962  [key=0, style=solid];
m49_1963 -> m49_60  [key=2, style=dotted];
m49_1963 -> m49_1964  [key=0, style=solid];
m49_1965 -> m49_60  [key=2, style=dotted];
m49_1965 -> m49_1966  [key=0, style=solid];
m49_1967 -> m49_60  [key=2, style=dotted];
m49_1967 -> m49_1968  [key=0, style=solid];
m49_1969 -> m49_60  [key=2, style=dotted];
m49_1969 -> m49_1970  [key=0, style=solid];
m49_1958 -> m49_58  [key=2, style=dotted];
m49_1958 -> m49_1959  [key=0, style=solid];
m49_1960 -> m49_58  [key=2, style=dotted];
m49_1960 -> m49_1961  [key=0, style=solid];
m49_1962 -> m49_58  [key=2, style=dotted];
m49_1962 -> m49_1963  [key=0, style=solid];
m49_1964 -> m49_58  [key=2, style=dotted];
m49_1964 -> m49_1965  [key=0, style=solid];
m49_1966 -> m49_58  [key=2, style=dotted];
m49_1966 -> m49_1967  [key=0, style=solid];
m49_1968 -> m49_58  [key=2, style=dotted];
m49_1968 -> m49_1969  [key=0, style=solid];
m49_1957 -> m49_56  [key=2, style=dotted];
m49_1957 -> m49_57  [key=2, style=dotted];
m49_1957 -> m49_1959  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1957 -> m49_1961  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1957 -> m49_1963  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1957 -> m49_1965  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1957 -> m49_1967  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1957 -> m49_1969  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1957 -> m49_1958  [key=0, style=solid];
m49_1957 -> m49_1960  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1957 -> m49_1962  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1957 -> m49_1964  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1957 -> m49_1966  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1957 -> m49_1968  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1956 -> m49_1957  [key=0, style=solid];
m49_1956 -> m49_1956  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m49_1970 -> m49_1955  [key=0, style=bold, color=blue];
m49_155 -> m49_156  [key=0, style=solid];
m49_159 -> m49_60  [key=2, style=dotted];
m49_159 -> m49_160  [key=0, style=solid];
m49_165 -> m49_60  [key=2, style=dotted];
m49_165 -> m49_166  [key=0, style=solid];
m49_158 -> m49_58  [key=2, style=dotted];
m49_158 -> m49_59  [key=2, style=dotted];
m49_158 -> m49_159  [key=0, style=solid];
m49_164 -> m49_58  [key=2, style=dotted];
m49_164 -> m49_59  [key=2, style=dotted];
m49_164 -> m49_165  [key=0, style=solid];
m49_166 -> m49_58  [key=2, style=dotted];
m49_166 -> m49_167  [key=0, style=solid];
m49_166 -> m49_136  [key=2, style=dotted];
m49_157 -> m49_56  [key=2, style=dotted];
m49_157 -> m49_57  [key=2, style=dotted];
m49_157 -> m49_159  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_157 -> m49_165  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_157 -> m49_158  [key=0, style=solid];
m49_157 -> m49_164  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_157 -> m49_166  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_157 -> m49_160  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_157 -> m49_169  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_157 -> m49_161  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_157 -> m49_172  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_157 -> m49_162  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_157 -> m49_175  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_157 -> m49_163  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_157 -> m49_178  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_160 -> m49_161  [key=0, style=solid];
m49_160 -> m49_150  [key=2, style=dotted];
m49_160 -> m49_168  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_163 -> m49_164  [key=0, style=solid];
m49_163 -> m49_150  [key=2, style=dotted];
m49_163 -> m49_177  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_156 -> m49_157  [key=0, style=solid];
m49_156 -> m49_156  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m49_161 -> m49_162  [key=0, style=solid];
m49_161 -> m49_150  [key=2, style=dotted];
m49_161 -> m49_171  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_162 -> m49_163  [key=0, style=solid];
m49_162 -> m49_150  [key=2, style=dotted];
m49_162 -> m49_174  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_167 -> m49_155  [key=0, style=bold, color=blue];
m49_61 -> m49_62  [key=0, style=solid, color=green];
m49_61 -> m49_52  [key=2, style=dotted];
m49_62 -> m49_62  [key=3, color=green, style=bold, label="Local variable string json"];
m49_62 -> m49_63  [key=0, style=solid, color=green];
m49_62 -> m49_76  [key=2, style=dotted];
m49_63 -> m49_64  [key=0, style=solid, color=green];
m49_63 -> m49_56  [key=2, style=dotted, color=green];
m49_63 -> m49_57  [key=2, style=dotted, color=green];
m49_63 -> m49_65  [key=1, style=dashed, color=green, label=jsonTextReader];
m49_63 -> m49_66  [key=1, style=dashed, color=green, label=jsonTextReader];
m49_63 -> m49_67  [key=1, style=dashed, color=green, label=jsonTextReader];
m49_63 -> m49_68  [key=1, style=dashed, color=green, label=jsonTextReader];
m49_63 -> m49_69  [key=1, style=dashed, color=green, label=jsonTextReader];
m49_63 -> m49_70  [key=1, style=dashed, color=green, label=jsonTextReader];
m49_63 -> m49_71  [key=1, style=dashed, color=green, label=jsonTextReader];
m49_63 -> m49_72  [key=1, style=dashed, color=green, label=jsonTextReader];
m49_63 -> m49_73  [key=1, style=dashed, color=green, label=jsonTextReader];
m49_63 -> m49_74  [key=1, style=dashed, color=green, label=jsonTextReader];
m49_63 -> m49_75  [key=1, style=dashed, color=green, label=jsonTextReader];
m49_63 -> m49_76  [key=1, style=dashed, color=green, label=jsonTextReader];
m49_63 -> m49_77  [key=1, style=dashed, color=green, label=jsonTextReader];
m49_63 -> m49_78  [key=1, style=dashed, color=green, label=jsonTextReader];
m49_63 -> m49_79  [key=1, style=dashed, color=green, label=jsonTextReader];
m49_63 -> m49_80  [key=1, style=dashed, color=green, label=jsonTextReader];
m49_63 -> m49_81  [key=1, style=dashed, color=green, label=jsonTextReader];
m49_63 -> m49_82  [key=1, style=dashed, color=green, label=jsonTextReader];
m49_63 -> m49_52  [key=2, style=dotted];
m49_64 -> m49_65  [key=0, style=solid, color=green];
m49_64 -> m49_58  [key=2, style=dotted, color=green];
m49_64 -> m49_59  [key=2, style=dotted, color=green];
m49_64 -> m49_78  [key=2, style=dotted];
m49_65 -> m49_66  [key=0, style=solid, color=green];
m49_65 -> m49_60  [key=2, style=dotted, color=green];
m49_65 -> m49_52  [key=2, style=dotted];
m49_66 -> m49_67  [key=0, style=solid, color=green];
m49_66 -> m49_58  [key=2, style=dotted, color=green];
m49_66 -> m49_59  [key=2, style=dotted, color=green];
m49_66 -> m49_77  [key=2, style=dotted];
m49_67 -> m49_68  [key=0, style=solid, color=green];
m49_67 -> m49_60  [key=2, style=dotted, color=green];
m49_67 -> m49_52  [key=2, style=dotted];
m49_68 -> m49_69  [key=0, style=solid, color=green];
m49_68 -> m49_58  [key=2, style=dotted, color=green];
m49_68 -> m49_59  [key=2, style=dotted, color=green];
m49_68 -> m49_79  [key=2, style=dotted];
m49_69 -> m49_70  [key=0, style=solid, color=green];
m49_69 -> m49_60  [key=2, style=dotted, color=green];
m49_69 -> m49_52  [key=2, style=dotted];
m49_70 -> m49_71  [key=0, style=solid, color=green];
m49_70 -> m49_58  [key=2, style=dotted, color=green];
m49_70 -> m49_59  [key=2, style=dotted, color=green];
m49_70 -> m49_80  [key=2, style=dotted];
m49_71 -> m49_72  [key=0, style=solid, color=green];
m49_71 -> m49_60  [key=2, style=dotted, color=green];
m49_71 -> m49_52  [key=2, style=dotted];
m49_72 -> m49_73  [key=0, style=solid, color=green];
m49_72 -> m49_60  [key=2, style=dotted, color=green];
m49_72 -> m49_81  [key=2, style=dotted];
m49_73 -> m49_74  [key=0, style=solid, color=green];
m49_73 -> m49_58  [key=2, style=dotted, color=green];
m49_73 -> m49_59  [key=2, style=dotted, color=green];
m49_73 -> m49_52  [key=2, style=dotted];
m49_74 -> m49_75  [key=0, style=solid, color=green];
m49_74 -> m49_60  [key=2, style=dotted, color=green];
m49_74 -> m49_53  [key=0, style=bold, color=blue];
m49_82 -> m49_60  [key=2, style=dotted];
m49_82 -> m49_83  [key=0, style=solid];
m49_83 -> m49_61  [key=0, style=bold, color=blue];
m49_1501 -> m49_1502  [key=0, style=solid];
m49_1506 -> m49_60  [key=2, style=dotted];
m49_1506 -> m49_1507  [key=0, style=solid];
m49_1508 -> m49_60  [key=2, style=dotted];
m49_1508 -> m49_1509  [key=0, style=solid];
m49_1510 -> m49_60  [key=2, style=dotted];
m49_1510 -> m49_1511  [key=0, style=solid];
m49_1511 -> m49_60  [key=2, style=dotted];
m49_1511 -> m49_1512  [key=0, style=solid];
m49_1515 -> m49_60  [key=2, style=dotted];
m49_1515 -> m49_1516  [key=0, style=solid];
m49_1513 -> m49_60  [key=2, style=dotted];
m49_1513 -> m49_1513  [key=1, style=dashed, color=darkseagreen4, label=dt];
m49_1513 -> m49_1514  [key=0, style=solid];
m49_1513 -> m49_1483  [key=2, style=dotted];
m49_1505 -> m49_58  [key=2, style=dotted];
m49_1505 -> m49_59  [key=2, style=dotted];
m49_1505 -> m49_1506  [key=0, style=solid];
m49_1507 -> m49_58  [key=2, style=dotted];
m49_1507 -> m49_59  [key=2, style=dotted];
m49_1507 -> m49_1508  [key=0, style=solid];
m49_1514 -> m49_58  [key=2, style=dotted];
m49_1514 -> m49_59  [key=2, style=dotted];
m49_1514 -> m49_1515  [key=0, style=solid];
m49_1503 -> m49_56  [key=2, style=dotted];
m49_1503 -> m49_57  [key=2, style=dotted];
m49_1503 -> m49_1506  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1503 -> m49_1508  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1503 -> m49_1510  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1503 -> m49_1511  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1503 -> m49_1515  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1503 -> m49_1505  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1503 -> m49_1507  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1503 -> m49_1514  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1503 -> m49_1504  [key=0, style=solid];
m49_1503 -> m49_1509  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1503 -> m49_1512  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1509 -> m49_1510  [key=0, style=solid];
m49_1509 -> m49_1325  [key=2, style=dotted];
m49_1512 -> m49_1513  [key=0, style=solid];
m49_1504 -> m49_1505  [key=0, style=solid];
m49_1504 -> m49_1500  [key=2, style=dotted];
m49_1502 -> m49_1503  [key=0, style=solid];
m49_1502 -> m49_1502  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m49_1516 -> m49_1501  [key=0, style=bold, color=blue];
m49_1925 -> m49_1926  [key=0, style=solid];
m49_1929 -> m49_60  [key=2, style=dotted];
m49_1929 -> m49_1930  [key=0, style=solid];
m49_1930 -> m49_60  [key=2, style=dotted];
m49_1930 -> m49_1931  [key=0, style=solid];
m49_1928 -> m49_58  [key=2, style=dotted];
m49_1928 -> m49_59  [key=2, style=dotted];
m49_1928 -> m49_1929  [key=0, style=solid];
m49_1931 -> m49_58  [key=2, style=dotted];
m49_1931 -> m49_1932  [key=0, style=solid];
m49_1931 -> m49_136  [key=2, style=dotted];
m49_1927 -> m49_56  [key=2, style=dotted];
m49_1927 -> m49_1929  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1927 -> m49_1930  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1927 -> m49_1928  [key=0, style=solid];
m49_1927 -> m49_1931  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1927 -> m49_336  [key=2, style=dotted];
m49_1927 -> m49_374  [key=2, style=dotted];
m49_1927 -> m49_375  [key=2, style=dotted];
m49_1926 -> m49_1927  [key=0, style=solid];
m49_1926 -> m49_1926  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m49_1932 -> m49_1925  [key=0, style=bold, color=blue];
m49_1313 -> m49_1314  [key=0, style=solid];
m49_1314 -> m49_56  [key=2, style=dotted];
m49_1314 -> m49_57  [key=2, style=dotted];
m49_1314 -> m49_1315  [key=0, style=solid];
m49_1314 -> m49_1318  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1315 -> m49_1316  [key=0, style=solid];
m49_1315 -> m49_150  [key=2, style=dotted];
m49_1315 -> m49_1317  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_1316 -> m49_1313  [key=0, style=bold, color=blue];
m49_577 -> m49_578  [key=0, style=solid];
m49_581 -> m49_60  [key=2, style=dotted];
m49_581 -> m49_582  [key=0, style=solid];
m49_579 -> m49_56  [key=2, style=dotted];
m49_579 -> m49_57  [key=2, style=dotted];
m49_579 -> m49_581  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_579 -> m49_580  [key=0, style=solid];
m49_578 -> m49_581  [key=1, style=dashed, color=darkseagreen4, label=s];
m49_578 -> m49_579  [key=0, style=solid];
m49_578 -> m49_583  [key=2, style=dotted];
m49_580 -> m49_581  [key=0, style=solid];
m49_580 -> m49_356  [key=2, style=dotted];
m49_582 -> m49_577  [key=0, style=bold, color=blue];
m49_794 -> m49_795  [key=0, style=solid];
m49_797 -> m49_56  [key=2, style=dotted];
m49_797 -> m49_57  [key=2, style=dotted];
m49_797 -> m49_798  [key=0, style=solid];
m49_797 -> m49_800  [key=2, style=dotted];
m49_797 -> m49_802  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_796 -> m49_797  [key=0, style=solid];
m49_796 -> m49_335  [key=2, style=dotted];
m49_798 -> m49_799  [key=0, style=solid];
m49_798 -> m49_150  [key=2, style=dotted];
m49_798 -> m49_801  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_795 -> m49_796  [key=0, style=solid];
m49_795 -> m49_795  [key=3, color=darkorchid, style=bold, label="Local variable string helloWorld"];
m49_799 -> m49_794  [key=0, style=bold, color=blue];
m49_2026 -> m49_2027  [key=0, style=solid];
m49_2029 -> m49_58  [key=2, style=dotted];
m49_2029 -> m49_59  [key=2, style=dotted];
m49_2029 -> m49_2030  [key=0, style=solid];
m49_2028 -> m49_56  [key=2, style=dotted];
m49_2028 -> m49_57  [key=2, style=dotted];
m49_2028 -> m49_2029  [key=0, style=solid];
m49_2028 -> m49_2033  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2028 -> m49_2030  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2030 -> m49_2031  [key=0, style=solid];
m49_2030 -> m49_1773  [key=2, style=dotted];
m49_2030 -> m49_2032  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_2027 -> m49_2028  [key=0, style=solid];
m49_2027 -> m49_2027  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m49_2031 -> m49_2026  [key=0, style=bold, color=blue];
m49_786 -> m49_787  [key=0, style=solid];
m49_787 -> m49_56  [key=2, style=dotted];
m49_787 -> m49_57  [key=2, style=dotted];
m49_787 -> m49_788  [key=0, style=solid];
m49_787 -> m49_791  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_788 -> m49_789  [key=0, style=solid];
m49_788 -> m49_150  [key=2, style=dotted];
m49_788 -> m49_790  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_789 -> m49_786  [key=0, style=bold, color=blue];
m49_357 -> m49_358  [key=0, style=solid];
m49_363 -> m49_60  [key=2, style=dotted];
m49_363 -> m49_364  [key=0, style=solid];
m49_364 -> m49_60  [key=2, style=dotted];
m49_364 -> m49_365  [key=0, style=solid];
m49_366 -> m49_60  [key=2, style=dotted];
m49_366 -> m49_367  [key=0, style=solid];
m49_368 -> m49_60  [key=2, style=dotted];
m49_368 -> m49_369  [key=0, style=solid];
m49_370 -> m49_60  [key=2, style=dotted];
m49_370 -> m49_371  [key=0, style=solid];
m49_372 -> m49_60  [key=2, style=dotted];
m49_372 -> m49_373  [key=0, style=solid];
m49_360 -> m49_59  [key=2, style=dotted];
m49_360 -> m49_361  [key=0, style=solid];
m49_360 -> m49_356  [key=2, style=dotted];
m49_361 -> m49_59  [key=2, style=dotted];
m49_361 -> m49_362  [key=0, style=solid];
m49_361 -> m49_356  [key=2, style=dotted];
m49_362 -> m49_59  [key=2, style=dotted];
m49_362 -> m49_363  [key=0, style=solid];
m49_362 -> m49_356  [key=2, style=dotted];
m49_365 -> m49_59  [key=2, style=dotted];
m49_365 -> m49_366  [key=0, style=solid];
m49_365 -> m49_356  [key=2, style=dotted];
m49_367 -> m49_59  [key=2, style=dotted];
m49_367 -> m49_368  [key=0, style=solid];
m49_367 -> m49_356  [key=2, style=dotted];
m49_369 -> m49_59  [key=2, style=dotted];
m49_369 -> m49_370  [key=0, style=solid];
m49_369 -> m49_356  [key=2, style=dotted];
m49_371 -> m49_59  [key=2, style=dotted];
m49_371 -> m49_372  [key=0, style=solid];
m49_371 -> m49_356  [key=2, style=dotted];
m49_359 -> m49_56  [key=2, style=dotted];
m49_359 -> m49_363  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_359 -> m49_364  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_359 -> m49_366  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_359 -> m49_368  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_359 -> m49_370  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_359 -> m49_372  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_359 -> m49_360  [key=0, style=solid];
m49_359 -> m49_361  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_359 -> m49_362  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_359 -> m49_365  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_359 -> m49_367  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_359 -> m49_369  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_359 -> m49_371  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_359 -> m49_336  [key=2, style=dotted];
m49_359 -> m49_374  [key=2, style=dotted];
m49_359 -> m49_375  [key=2, style=dotted];
m49_358 -> m49_359  [key=0, style=solid];
m49_358 -> m49_358  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m49_373 -> m49_357  [key=0, style=bold, color=blue];
m49_1636 -> m49_1637  [key=0, style=solid];
m49_1640 -> m49_60  [key=2, style=dotted];
m49_1640 -> m49_1641  [key=0, style=solid];
m49_1641 -> m49_60  [key=2, style=dotted];
m49_1641 -> m49_1642  [key=0, style=solid];
m49_1643 -> m49_60  [key=2, style=dotted];
m49_1643 -> m49_1644  [key=0, style=solid];
m49_1639 -> m49_58  [key=2, style=dotted];
m49_1639 -> m49_59  [key=2, style=dotted];
m49_1639 -> m49_1640  [key=0, style=solid];
m49_1642 -> m49_58  [key=2, style=dotted];
m49_1642 -> m49_59  [key=2, style=dotted];
m49_1642 -> m49_1643  [key=0, style=solid];
m49_1638 -> m49_56  [key=2, style=dotted];
m49_1638 -> m49_57  [key=2, style=dotted];
m49_1638 -> m49_1640  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1638 -> m49_1641  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1638 -> m49_1643  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1638 -> m49_1639  [key=0, style=solid];
m49_1638 -> m49_1642  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1637 -> m49_1638  [key=0, style=solid];
m49_1637 -> m49_1637  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m49_1644 -> m49_1636  [key=0, style=bold, color=blue];
m49_1517 -> m49_1518  [key=0, style=solid];
m49_1521 -> m49_60  [key=2, style=dotted];
m49_1521 -> m49_1522  [key=0, style=solid];
m49_1523 -> m49_60  [key=2, style=dotted];
m49_1523 -> m49_1524  [key=0, style=solid];
m49_1525 -> m49_60  [key=2, style=dotted];
m49_1525 -> m49_1526  [key=0, style=solid];
m49_1526 -> m49_60  [key=2, style=dotted];
m49_1526 -> m49_1527  [key=0, style=solid];
m49_1527 -> m49_60  [key=2, style=dotted];
m49_1527 -> m49_1528  [key=0, style=solid];
m49_1520 -> m49_58  [key=2, style=dotted];
m49_1520 -> m49_59  [key=2, style=dotted];
m49_1520 -> m49_1521  [key=0, style=solid];
m49_1522 -> m49_58  [key=2, style=dotted];
m49_1522 -> m49_59  [key=2, style=dotted];
m49_1522 -> m49_1523  [key=0, style=solid];
m49_1519 -> m49_56  [key=2, style=dotted];
m49_1519 -> m49_57  [key=2, style=dotted];
m49_1519 -> m49_1521  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1519 -> m49_1523  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1519 -> m49_1525  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1519 -> m49_1526  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1519 -> m49_1527  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1519 -> m49_1520  [key=0, style=solid];
m49_1519 -> m49_1522  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1519 -> m49_1524  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1524 -> m49_1525  [key=0, style=solid];
m49_1524 -> m49_222  [key=2, style=dotted];
m49_1518 -> m49_1519  [key=0, style=solid];
m49_1518 -> m49_1518  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m49_1528 -> m49_1517  [key=0, style=bold, color=blue];
m49_1555 -> m49_1556  [key=0, style=solid];
m49_1556 -> m49_56  [key=2, style=dotted];
m49_1556 -> m49_57  [key=2, style=dotted];
m49_1556 -> m49_1560  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1556 -> m49_1557  [key=0, style=solid];
m49_1557 -> m49_1559  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_1557 -> m49_1558  [key=0, style=solid];
m49_1557 -> m49_150  [key=2, style=dotted];
m49_1558 -> m49_1555  [key=0, style=bold, color=blue];
m49_1120 -> m49_1121  [key=0, style=solid];
m49_1125 -> m49_60  [key=2, style=dotted];
m49_1125 -> m49_1126  [key=0, style=solid];
m49_1127 -> m49_60  [key=2, style=dotted];
m49_1127 -> m49_1128  [key=0, style=solid];
m49_1128 -> m49_60  [key=2, style=dotted];
m49_1128 -> m49_1129  [key=0, style=solid];
m49_1129 -> m49_60  [key=2, style=dotted];
m49_1129 -> m49_1130  [key=0, style=solid];
m49_1129 -> m49_311  [key=2, style=dotted];
m49_1131 -> m49_60  [key=2, style=dotted];
m49_1131 -> m49_1132  [key=0, style=solid];
m49_1133 -> m49_60  [key=2, style=dotted];
m49_1133 -> m49_1134  [key=0, style=solid];
m49_1124 -> m49_58  [key=2, style=dotted];
m49_1124 -> m49_1125  [key=0, style=solid];
m49_1126 -> m49_58  [key=2, style=dotted];
m49_1126 -> m49_1127  [key=0, style=solid];
m49_1130 -> m49_58  [key=2, style=dotted];
m49_1130 -> m49_59  [key=2, style=dotted];
m49_1130 -> m49_1131  [key=0, style=solid];
m49_1132 -> m49_58  [key=2, style=dotted];
m49_1132 -> m49_1133  [key=0, style=solid];
m49_1132 -> m49_136  [key=2, style=dotted];
m49_1123 -> m49_56  [key=2, style=dotted];
m49_1123 -> m49_57  [key=2, style=dotted];
m49_1123 -> m49_1125  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1123 -> m49_1127  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1123 -> m49_1128  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1123 -> m49_1129  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1123 -> m49_1131  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1123 -> m49_1133  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1123 -> m49_1124  [key=0, style=solid];
m49_1123 -> m49_1126  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1123 -> m49_1130  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1123 -> m49_1132  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1122 -> m49_1123  [key=0, style=solid];
m49_1122 -> m49_583  [key=2, style=dotted];
m49_1121 -> m49_1122  [key=0, style=solid];
m49_1121 -> m49_1121  [key=3, color=darkorchid, style=bold, label="Local variable int length"];
m49_1134 -> m49_1120  [key=0, style=bold, color=blue];
m49_1760 -> m49_1761  [key=0, style=solid];
m49_1764 -> m49_60  [key=2, style=dotted];
m49_1764 -> m49_1765  [key=0, style=solid];
m49_1766 -> m49_60  [key=2, style=dotted];
m49_1766 -> m49_1767  [key=0, style=solid];
m49_1763 -> m49_58  [key=2, style=dotted];
m49_1763 -> m49_59  [key=2, style=dotted];
m49_1763 -> m49_1764  [key=0, style=solid];
m49_1765 -> m49_58  [key=2, style=dotted];
m49_1765 -> m49_59  [key=2, style=dotted];
m49_1765 -> m49_1766  [key=0, style=solid];
m49_1762 -> m49_56  [key=2, style=dotted];
m49_1762 -> m49_57  [key=2, style=dotted];
m49_1762 -> m49_1764  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1762 -> m49_1766  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1762 -> m49_1763  [key=0, style=solid];
m49_1762 -> m49_1765  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1761 -> m49_1762  [key=0, style=solid];
m49_1761 -> m49_1761  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m49_1767 -> m49_1760  [key=0, style=bold, color=blue];
m49_1225 -> m49_1226  [key=0, style=solid];
m49_1231 -> m49_60  [key=2, style=dotted];
m49_1231 -> m49_1232  [key=0, style=solid];
m49_1227 -> m49_56  [key=2, style=dotted];
m49_1227 -> m49_1228  [key=0, style=solid];
m49_1226 -> m49_57  [key=2, style=dotted];
m49_1226 -> m49_1227  [key=0, style=solid];
m49_1230 -> m49_1231  [key=0, style=solid];
m49_1230 -> m49_1234  [key=2, style=dotted];
m49_1228 -> m49_1230  [key=1, style=dashed, color=darkseagreen4, label=data];
m49_1228 -> m49_1229  [key=0, style=solid];
m49_1228 -> m49_94  [key=2, style=dotted];
m49_1229 -> m49_1230  [key=0, style=solid];
m49_1229 -> m49_1233  [key=2, style=dotted];
m49_1232 -> m49_1225  [key=0, style=bold, color=blue];
m49_1340 -> m49_1341  [key=0, style=solid];
m49_1341 -> m49_56  [key=2, style=dotted];
m49_1341 -> m49_57  [key=2, style=dotted];
m49_1341 -> m49_1342  [key=0, style=solid];
m49_1341 -> m49_1345  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_1342 -> m49_1343  [key=0, style=solid];
m49_1342 -> m49_150  [key=2, style=dotted];
m49_1342 -> m49_1344  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_1343 -> m49_1340  [key=0, style=bold, color=blue];
m49_2307 -> m49_314  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTest"];
m49_2307 -> m49_315  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTest"];
m49_2307 -> m49_316  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTest"];
m49_2307 -> m49_317  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTest"];
m49_2307 -> m49_318  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTest"];
m49_2307 -> m49_319  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTest"];
m49_2307 -> m49_320  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTest"];
m49_2307 -> m49_321  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTest"];
m49_2307 -> m49_322  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTest"];
m49_2307 -> m49_323  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTest"];
m49_2307 -> m49_324  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTest"];
m49_2307 -> m49_325  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTest"];
m49_2304 -> m49_217  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2304 -> m49_220  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2304 -> m49_224  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2305 -> m49_240  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2306 -> m49_277  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2308 -> m49_382  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2309 -> m49_400  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2310 -> m49_413  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2322 -> m49_1010  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2322 -> m49_1007  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2322 -> m49_1013  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2323 -> m49_1045  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2323 -> m49_1048  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2324 -> m49_1223  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2325 -> m49_1301  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2334 -> m49_1546  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2335 -> m49_1553  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2336 -> m49_1560  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2337 -> m49_1567  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2338 -> m49_1574  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2339 -> m49_1719  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2340 -> m49_1727  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2341 -> m49_1758  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2342 -> m49_1775  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2343 -> m49_1939  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2345 -> m49_2033  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2346 -> m49_2065  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2346 -> m49_2068  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2347 -> m49_2190  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_2347 -> m49_2193  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_2347 -> m49_2196  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_2347 -> m49_2199  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_2347 -> m49_2202  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_2347 -> m49_2205  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_2312 -> m49_665  [key=1, style=dashed, color=darkseagreen4, label=total];
m49_2313 -> m49_681  [key=1, style=dashed, color=darkseagreen4, label=total];
m49_2348 -> m49_2230  [key=1, style=dashed, color=darkseagreen4, label=json];
m49_2302 -> m49_152  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_2303 -> m49_169  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_2303 -> m49_172  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_2303 -> m49_175  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_2303 -> m49_178  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m49_2311 -> m49_575  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2316 -> m49_777  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2317 -> m49_784  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2318 -> m49_791  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2319 -> m49_802  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2320 -> m49_817  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2321 -> m49_970  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2321 -> m49_973  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2321 -> m49_976  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2321 -> m49_979  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2321 -> m49_982  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2326 -> m49_1318  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2327 -> m49_1331  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2328 -> m49_1338  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2329 -> m49_1345  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2330 -> m49_1359  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2331 -> m49_1366  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2332 -> m49_1437  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2333 -> m49_1539  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2344 -> m49_1978  [key=1, style=dashed, color=darkseagreen4, label=reader];
m49_2349 -> m49_2265  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.ToggleReaderError"];
m49_2349 -> m49_2268  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.ToggleReaderError"];
m49_2349 -> m49_2270  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.ToggleReaderError"];
m50_0 -> m50_1  [key=0, style=solid];
m50_1 -> m50_2  [key=0, style=solid];
m50_1 -> m50_7  [key=2, style=dotted];
m50_1 -> m50_5  [key=1, style=dashed, color=darkseagreen4, label=schema];
m50_2 -> m50_3  [key=0, style=solid];
m50_2 -> m50_8  [key=2, style=dotted];
m50_2 -> m50_9  [key=2, style=dotted];
m50_5 -> m50_6  [key=0, style=solid];
m50_5 -> m50_12  [key=2, style=dotted];
m50_3 -> m50_4  [key=0, style=solid];
m50_3 -> m50_10  [key=2, style=dotted];
m50_4 -> m50_5  [key=0, style=solid];
m50_4 -> m50_11  [key=2, style=dotted];
m50_6 -> m50_0  [key=0, style=bold, color=blue];
m51_0 -> m51_1  [key=0, style=solid];
m51_0 -> m51_3  [key=1, style=dashed, color=darkseagreen4, label="System.Func<TKey, TValue>"];
m51_1 -> m51_2  [key=0, style=solid];
m51_1 -> m51_3  [key=0, style=solid];
m51_3 -> m51_4  [key=0, style=solid];
m51_2 -> m51_4  [key=0, style=solid];
m51_2 -> m51_5  [key=2, style=dotted];
m51_4 -> m51_0  [key=0, style=bold, color=blue];
m51_14 -> m51_16  [key=0, style=solid];
m51_14 -> m51_20  [key=1, style=dashed, color=darkseagreen4, label=TKey];
m51_14 -> m51_22  [key=1, style=dashed, color=darkseagreen4, label=TKey];
m51_14 -> m51_25  [key=1, style=dashed, color=darkseagreen4, label=TKey];
m51_16 -> m51_17  [key=0, style=solid];
m51_16 -> m51_29  [key=2, style=dotted];
m51_16 -> m51_20  [key=1, style=dashed, color=darkseagreen4, label=value];
m51_16 -> m51_25  [key=1, style=dashed, color=darkseagreen4, label=value];
m51_16 -> m51_27  [key=1, style=dashed, color=darkseagreen4, label=value];
m51_20 -> m51_27  [key=0, style=solid];
m51_22 -> m51_23  [key=0, style=solid];
m51_22 -> m51_24  [key=0, style=solid];
m51_22 -> m51_15  [key=2, style=dotted];
m51_25 -> m51_26  [key=0, style=solid];
m51_17 -> m51_18  [key=0, style=solid];
m51_27 -> m51_28  [key=0, style=solid];
m51_18 -> m51_19  [key=0, style=solid];
m51_18 -> m51_21  [key=0, style=solid];
m51_19 -> m51_20  [key=0, style=solid];
m51_19 -> m51_30  [key=2, style=dotted];
m51_21 -> m51_22  [key=0, style=solid];
m51_23 -> m51_28  [key=0, style=solid];
m51_24 -> m51_25  [key=0, style=solid];
m51_24 -> m51_31  [key=2, style=dotted];
m51_24 -> m51_26  [key=1, style=dashed, color=darkseagreen4, label=newStore];
m51_26 -> m51_27  [key=0, style=solid];
m51_28 -> m51_14  [key=0, style=bold, color=blue];
m51_6 -> m51_7  [key=0, style=solid];
m51_6 -> m51_8  [key=1, style=dashed, color=darkseagreen4, label=TKey];
m51_6 -> m51_10  [key=1, style=dashed, color=darkseagreen4, label=TKey];
m51_6 -> m51_11  [key=1, style=dashed, color=darkseagreen4, label=TKey];
m51_7 -> m51_8  [key=0, style=solid];
m51_7 -> m51_9  [key=0, style=solid];
m51_8 -> m51_13  [key=0, style=solid];
m51_8 -> m51_14  [key=2, style=dotted];
m51_10 -> m51_11  [key=0, style=solid];
m51_10 -> m51_12  [key=0, style=solid];
m51_10 -> m51_15  [key=2, style=dotted];
m51_11 -> m51_13  [key=0, style=solid];
m51_11 -> m51_14  [key=2, style=dotted];
m51_9 -> m51_10  [key=0, style=solid];
m51_12 -> m51_13  [key=0, style=solid];
m51_13 -> m51_6  [key=0, style=bold, color=blue];
m51_32 -> m51_3  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>"];
m51_32 -> m51_7  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>"];
m51_32 -> m51_8  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>"];
m51_32 -> m51_10  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>"];
m51_32 -> m51_11  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>"];
m51_32 -> m51_16  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>"];
m51_32 -> m51_17  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>"];
m51_32 -> m51_18  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>"];
m51_32 -> m51_19  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>"];
m51_32 -> m51_20  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>"];
m51_32 -> m51_22  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>"];
m51_32 -> m51_24  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>"];
m51_32 -> m51_26  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>"];
m53_0 -> m53_1  [key=0, style=solid, color=green];
m53_1 -> m53_2  [key=0, style=solid, color=green];
m53_1 -> m53_9  [key=2, style=dotted, color=green];
m53_1 -> m53_3  [key=1, style=dashed, color=green, label=joe];
m53_1 -> m53_5  [key=1, style=dashed, color=green, label=joe];
m53_2 -> m53_3  [key=0, style=solid, color=green];
m53_2 -> m53_9  [key=2, style=dotted, color=red];
m53_2 -> m53_4  [key=1, style=dashed, color=darkseagreen4, label=mike];
m53_3 -> m53_4  [key=0, style=solid, color=green];
m53_5 -> m53_6  [key=0, style=solid, color=green];
m53_5 -> m53_10  [key=2, style=dotted, color=green];
m53_5 -> m53_11  [key=2, style=dotted, color=green];
m53_5 -> m53_7  [key=1, style=dashed, color=green, label=json];
m53_4 -> m53_5  [key=0, style=solid, color=green];
m53_6 -> m53_7  [key=0, style=solid, color=green];
m53_6 -> m53_12  [key=2, style=dotted, color=green];
m53_7 -> m53_8  [key=0, style=solid, color=green];
m53_7 -> m53_13  [key=2, style=dotted, color=green];
m53_8 -> m53_0  [key=0, style=bold, color=blue];
m54_0 -> m54_1  [key=0, style=solid, color=green];
m54_1 -> m54_2  [key=0, style=solid, color=green];
m54_1 -> m54_3  [key=2, style=dotted, color=green];
m54_2 -> m54_0  [key=0, style=bold, color=blue];
m54_4 -> m54_1  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Tests.TestObjects.PersonPropertyClass"];
m56_37 -> m56_38  [key=0, style=solid];
m56_38 -> m56_39  [key=0, style=solid];
m56_38 -> m56_44  [key=2, style=dotted];
m56_38 -> m56_40  [key=1, style=dashed, color=darkseagreen4, label=p];
m56_38 -> m56_41  [key=1, style=dashed, color=darkseagreen4, label=p];
m56_38 -> m56_42  [key=1, style=dashed, color=darkseagreen4, label=p];
m56_39 -> m56_40  [key=0, style=solid];
m56_39 -> m56_34  [key=2, style=dotted];
m56_40 -> m56_41  [key=0, style=solid];
m56_40 -> m56_35  [key=2, style=dotted];
m56_40 -> m56_36  [key=2, style=dotted];
m56_41 -> m56_42  [key=0, style=solid];
m56_41 -> m56_7  [key=2, style=dotted];
m56_42 -> m56_43  [key=0, style=solid];
m56_42 -> m56_7  [key=2, style=dotted];
m56_43 -> m56_37  [key=0, style=bold, color=blue];
m56_26 -> m56_27  [key=0, style=solid];
m56_27 -> m56_28  [key=0, style=solid];
m56_27 -> m56_21  [key=2, style=dotted];
m56_27 -> m56_29  [key=1, style=dashed, color=darkseagreen4, label=p];
m56_27 -> m56_30  [key=1, style=dashed, color=darkseagreen4, label=p];
m56_27 -> m56_31  [key=1, style=dashed, color=darkseagreen4, label=p];
m56_27 -> m56_32  [key=1, style=dashed, color=darkseagreen4, label=p];
m56_28 -> m56_29  [key=0, style=solid];
m56_28 -> m56_34  [key=2, style=dotted];
m56_29 -> m56_30  [key=0, style=solid];
m56_29 -> m56_35  [key=2, style=dotted];
m56_29 -> m56_36  [key=2, style=dotted];
m56_30 -> m56_31  [key=0, style=solid];
m56_30 -> m56_7  [key=2, style=dotted];
m56_31 -> m56_32  [key=0, style=solid];
m56_31 -> m56_7  [key=2, style=dotted];
m56_32 -> m56_33  [key=0, style=solid];
m56_32 -> m56_7  [key=2, style=dotted];
m56_33 -> m56_26  [key=0, style=bold, color=blue];
m56_0 -> m56_1  [key=0, style=solid];
m56_1 -> m56_2  [key=0, style=solid];
m56_1 -> m56_5  [key=2, style=dotted];
m56_1 -> m56_3  [key=1, style=dashed, color=darkseagreen4, label=p];
m56_2 -> m56_3  [key=0, style=solid];
m56_2 -> m56_6  [key=2, style=dotted];
m56_3 -> m56_4  [key=0, style=solid];
m56_3 -> m56_7  [key=2, style=dotted];
m56_4 -> m56_0  [key=0, style=bold, color=blue];
m56_8 -> m56_9  [key=0, style=solid];
m56_9 -> m56_10  [key=0, style=solid];
m56_9 -> m56_20  [key=2, style=dotted];
m56_9 -> m56_11  [key=1, style=dashed, color=darkseagreen4, label=s];
m56_9 -> m56_12  [key=1, style=dashed, color=darkseagreen4, label=s];
m56_9 -> m56_13  [key=1, style=dashed, color=darkseagreen4, label=s];
m56_9 -> m56_15  [key=1, style=dashed, color=darkseagreen4, label=s];
m56_9 -> m56_16  [key=1, style=dashed, color=darkseagreen4, label=s];
m56_9 -> m56_17  [key=1, style=dashed, color=darkseagreen4, label=s];
m56_9 -> m56_18  [key=1, style=dashed, color=darkseagreen4, label=s];
m56_10 -> m56_11  [key=0, style=solid];
m56_11 -> m56_12  [key=0, style=solid];
m56_11 -> m56_21  [key=2, style=dotted];
m56_11 -> m56_22  [key=2, style=dotted];
m56_11 -> m56_23  [key=2, style=dotted];
m56_12 -> m56_13  [key=0, style=solid];
m56_13 -> m56_14  [key=0, style=solid];
m56_13 -> m56_21  [key=2, style=dotted];
m56_15 -> m56_16  [key=0, style=solid];
m56_15 -> m56_24  [key=2, style=dotted];
m56_15 -> m56_25  [key=2, style=dotted];
m56_16 -> m56_17  [key=0, style=solid];
m56_16 -> m56_7  [key=2, style=dotted];
m56_17 -> m56_18  [key=0, style=solid];
m56_17 -> m56_7  [key=2, style=dotted];
m56_18 -> m56_19  [key=0, style=solid];
m56_18 -> m56_7  [key=2, style=dotted];
m56_14 -> m56_15  [key=0, style=solid];
m56_14 -> m56_14  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m56_19 -> m56_8  [key=0, style=bold, color=blue];
m57_0 -> m57_1  [key=0, style=solid];
m57_1 -> m57_2  [key=0, style=solid];
m57_1 -> m57_3  [key=1, style=dashed, color=darkseagreen4, label=xml];
m57_2 -> m57_3  [key=0, style=solid];
m57_2 -> m57_7  [key=2, style=dotted];
m57_2 -> m57_4  [key=1, style=dashed, color=darkseagreen4, label=doc];
m57_3 -> m57_4  [key=0, style=solid];
m57_3 -> m57_8  [key=2, style=dotted];
m57_4 -> m57_5  [key=0, style=solid];
m57_4 -> m57_9  [key=2, style=dotted];
m57_5 -> m57_6  [key=0, style=solid];
m57_5 -> m57_10  [key=2, style=dotted];
m57_6 -> m57_0  [key=0, style=bold, color=blue];
m59_6 -> m59_7  [key=0, style=solid, color=green];
m59_6 -> m59_9  [key=1, style=dashed, color=darkseagreen4, label=char];
m59_7 -> m59_8  [key=0, style=solid, color=green];
m59_7 -> m59_9  [key=0, style=solid, color=green];
m59_8 -> m59_9  [key=0, style=solid];
m59_8 -> m59_11  [key=2, style=dotted];
m59_8 -> m59_10  [key=2, style=dotted];
m59_9 -> m59_10  [key=0, style=solid];
m59_9 -> m59_6  [key=0, style=bold, color=blue];
m59_10 -> m59_6  [key=0, style=bold, color=blue];
m59_3 -> m59_4  [key=0, style=solid];
m59_0 -> m59_1  [key=0, style=solid];
m59_1 -> m59_2  [key=0, style=solid];
m59_2 -> m59_0  [key=0, style=bold, color=blue];
m59_4 -> m59_5  [key=0, style=solid];
m59_5 -> m59_3  [key=0, style=bold, color=blue];
m59_24 -> m59_22  [key=3, color=darkorchid, style=bold, label="Parameter variable int start"];
m59_24 -> m59_25  [key=0, style=solid];
m59_25 -> m59_26  [key=0, style=solid];
m59_25 -> m59_27  [key=2, style=dotted];
m59_26 -> m59_24  [key=0, style=bold, color=blue];
m59_28 -> m59_29  [key=0, style=solid];
m59_29 -> m59_30  [key=0, style=solid];
m59_30 -> m59_28  [key=0, style=bold, color=blue];
m59_12 -> m59_13  [key=0, style=solid];
m59_13 -> m59_14  [key=0, style=solid];
m59_14 -> m59_15  [key=0, style=solid];
m59_15 -> m59_12  [key=0, style=bold, color=blue];
m59_11 -> m59_8  [key=3, color=darkorchid, style=bold, label="Parameter variable int appendLength"];
m59_11 -> m59_16  [key=0, style=solid];
m59_11 -> m59_1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract"];
m59_11 -> m59_4  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract"];
m59_11 -> m59_7  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract"];
m59_16 -> m59_17  [key=0, style=solid];
m59_16 -> m59_18  [key=1, style=dashed, color=darkseagreen4, label=newBuffer];
m59_17 -> m59_18  [key=0, style=solid];
m59_17 -> m59_20  [key=2, style=dotted];
m59_18 -> m59_19  [key=0, style=solid];
m59_19 -> m59_11  [key=0, style=bold, color=blue];
m59_21 -> m59_22  [key=0, style=solid];
m59_21 -> m59_24  [key=3, color=darkorchid, style=bold, label="method methodReturn string ToString"];
m59_22 -> m59_23  [key=0, style=solid];
m59_22 -> m59_24  [key=2, style=dotted];
m59_23 -> m59_21  [key=0, style=bold, color=blue];
m59_31 -> m59_7  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Utilities.StringBuffer"];
m59_31 -> m59_1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.StringBuffer"];
m59_31 -> m59_4  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.StringBuffer"];
m59_31 -> m59_8  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.StringBuffer"];
m59_31 -> m59_9  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.StringBuffer"];
m59_31 -> m59_13  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.StringBuffer"];
m59_31 -> m59_14  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.StringBuffer"];
m59_31 -> m59_16  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.StringBuffer"];
m59_31 -> m59_17  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.StringBuffer"];
m59_31 -> m59_18  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.StringBuffer"];
m59_31 -> m59_22  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.StringBuffer"];
m59_31 -> m59_25  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.StringBuffer"];
m59_31 -> m59_29  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.StringBuffer"];
m61_2 -> m61_3  [key=0, style=solid];
m61_3 -> m61_4  [key=0, style=solid];
m61_3 -> m61_5  [key=2, style=dotted];
m61_3 -> m61_6  [key=2, style=dotted];
m61_4 -> m61_2  [key=0, style=bold, color=blue];
m61_5 -> m61_7  [key=0, style=solid];
m61_5 -> m61_2  [key=3, color=darkorchid, style=bold, label="Parameter variable string json"];
m61_7 -> m61_8  [key=0, style=solid];
m61_7 -> m61_9  [key=2, style=dotted];
m61_8 -> m61_5  [key=0, style=bold, color=blue];
m61_0 -> m61_1  [key=0, style=solid];
m61_1 -> m61_0  [key=0, style=bold, color=blue];
m61_10 -> m61_3  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestFixtureBase"];
m63_5 -> m63_7  [key=0, style=solid];
m63_5 -> m63_0  [key=3, color=green, style=bold, label="Parameter variable System.Diagnostics.TraceLevel level"];
m63_7 -> m63_8  [key=0, style=solid];
m63_7 -> m63_10  [key=0, style=solid];
m63_7 -> m63_12  [key=0, style=solid];
m63_7 -> m63_14  [key=0, style=solid];
m63_7 -> m63_16  [key=0, style=solid];
m63_8 -> m63_9  [key=0, style=solid];
m63_10 -> m63_11  [key=0, style=solid];
m63_12 -> m63_13  [key=0, style=solid];
m63_14 -> m63_15  [key=0, style=solid];
m63_16 -> m63_17  [key=0, style=solid];
m63_9 -> m63_17  [key=0, style=solid];
m63_11 -> m63_17  [key=0, style=solid];
m63_13 -> m63_17  [key=0, style=solid];
m63_15 -> m63_17  [key=0, style=solid];
m63_17 -> m63_5  [key=0, style=bold, color=blue];
m63_0 -> m63_1  [key=0, style=solid, color=red];
m63_1 -> m63_2  [key=0, style=solid, color=red];
m63_1 -> m63_4  [key=2, style=dotted, color=red];
m63_1 -> m63_5  [key=2, style=dotted, color=red];
m63_2 -> m63_3  [key=0, style=solid];
m63_2 -> m63_6  [key=2, style=dotted];
m63_3 -> m63_0  [key=0, style=bold, color=blue];
m63_18 -> m63_19  [key=0, style=solid];
m63_19 -> m63_20  [key=0, style=solid];
m63_19 -> m63_23  [key=2, style=dotted];
m63_20 -> m63_21  [key=0, style=solid];
m63_20 -> m63_24  [key=2, style=dotted];
m63_20 -> m63_25  [key=2, style=dotted];
m63_20 -> m63_26  [key=2, style=dotted];
m63_21 -> m63_22  [key=0, style=solid];
m63_21 -> m63_27  [key=2, style=dotted];
m63_22 -> m63_18  [key=0, style=bold, color=blue];
m63_28 -> m63_1  [key=1, style=dashed, color=red, label="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomTraceWriter.NLogTraceWriter"];
}
