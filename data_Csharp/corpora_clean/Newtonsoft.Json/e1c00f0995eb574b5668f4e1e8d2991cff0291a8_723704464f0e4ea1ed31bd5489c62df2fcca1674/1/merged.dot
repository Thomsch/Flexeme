digraph  {
n379 [label="out Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey", span=""];
n380 [label="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey", span=""];
n381 [label="ref Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey", span=""];
n382 [label=call, span=""];
n0 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type)", span="184-184", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type)"];
n1 [label="bool isEnum", span="186-186", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type)"];
n2 [label="return GetTypeCode(t, out isEnum);", span="187-187", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type)"];
n3 [label="Exit Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type)", span="184-184", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type)"];
n4 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)", span="190-190", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)"];
n5 [label="PrimitiveTypeCode typeCode", span="192-192", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)"];
n6 [label="TypeCodeMap.TryGetValue(t, out typeCode)", span="193-193", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)"];
n9 [label="t.IsEnum()", span="199-199", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)"];
n11 [label="return GetTypeCode(Enum.GetUnderlyingType(t));", span="202-202", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)"];
n12 [label="ReflectionUtils.IsNullableType(t)", span="206-206", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)"];
n13 [label="Type nonNullable = Nullable.GetUnderlyingType(t)", span="208-208", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)"];
n7 [label="isEnum = false", span="195-195", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)"];
n21 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)"];
n8 [label="return typeCode;", span="196-196", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)"];
n10 [label="isEnum = true", span="201-201", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)"];
n22 [label="Entry System.Type.IsEnum()", span="173-173", cluster="System.Type.IsEnum()"];
n18 [label="isEnum = false", span="217-217", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)"];
n24 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", span="247-247", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)"];
n14 [label="nonNullable.IsEnum()", span="209-209", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)"];
n25 [label="Entry System.Nullable.GetUnderlyingType(System.Type)", span="0-0", cluster="System.Nullable.GetUnderlyingType(System.Type)"];
n15 [label="Type nullableUnderlyingType = typeof(Nullable<>).MakeGenericType(Enum.GetUnderlyingType(nonNullable))", span="211-211", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)"];
n16 [label="isEnum = true", span="212-212", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)"];
n23 [label="Entry System.Enum.GetUnderlyingType(System.Type)", span="0-0", cluster="System.Enum.GetUnderlyingType(System.Type)"];
n26 [label="Entry System.Type.MakeGenericType(params System.Type[])", span="0-0", cluster="System.Type.MakeGenericType(params System.Type[])"];
n17 [label="return GetTypeCode(nullableUnderlyingType);", span="213-213", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)"];
n19 [label="return PrimitiveTypeCode.Object;", span="218-218", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)"];
n20 [label="Exit Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)", span="190-190", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)"];
n27 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.GetTypeInformation(System.IConvertible)", span="222-222", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeInformation(System.IConvertible)"];
n28 [label="TypeInformation typeInformation = PrimitiveTypeCodes[(int)convertable.GetTypeCode()]", span="224-224", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeInformation(System.IConvertible)"];
n29 [label="return typeInformation;", span="225-225", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeInformation(System.IConvertible)"];
n31 [label="Entry System.IConvertible.GetTypeCode()", span="0-0", cluster="System.IConvertible.GetTypeCode()"];
n30 [label="Exit Newtonsoft.Json.Utilities.ConvertUtils.GetTypeInformation(System.IConvertible)", span="222-222", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeInformation(System.IConvertible)"];
n32 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.IsConvertible(System.Type)", span="229-229", cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsConvertible(System.Type)"];
n33 [label="return typeof(IConvertible).IsAssignableFrom(t);", span="232-232", cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsConvertible(System.Type)"];
n34 [label="Exit Newtonsoft.Json.Utilities.ConvertUtils.IsConvertible(System.Type)", span="229-229", cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsConvertible(System.Type)"];
n35 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)"];
n36 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.ParseTimeSpan(string)", span="240-240", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ParseTimeSpan(string)"];
n37 [label="return TimeSpan.Parse(input, CultureInfo.InvariantCulture);", span="243-243", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ParseTimeSpan(string)"];
n38 [label="Exit Newtonsoft.Json.Utilities.ConvertUtils.ParseTimeSpan(string)", span="240-240", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ParseTimeSpan(string)"];
n39 [label="Entry System.TimeSpan.Parse(string, System.IFormatProvider)", span="0-0", cluster="System.TimeSpan.Parse(string, System.IFormatProvider)"];
n40 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.TypeConvertKey(System.Type, System.Type)", span="264-264", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.TypeConvertKey(System.Type, System.Type)"];
n41 [label="_initialType = initialType", span="266-266", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.TypeConvertKey(System.Type, System.Type)"];
n42 [label="_targetType = targetType", span="267-267", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.TypeConvertKey(System.Type, System.Type)"];
n43 [label="Exit Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.TypeConvertKey(System.Type, System.Type)", span="264-264", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.TypeConvertKey(System.Type, System.Type)"];
n44 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.GetHashCode()", span="270-270", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.GetHashCode()"];
n45 [label="return _initialType.GetHashCode() ^ _targetType.GetHashCode();", span="272-272", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.GetHashCode()"];
n46 [label="Exit Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.GetHashCode()", span="270-270", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.GetHashCode()"];
n47 [label="Entry System.Type.GetHashCode()", span="0-0", cluster="System.Type.GetHashCode()"];
n48 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.Equals(object)", span="275-275", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.Equals(object)"];
n49 [label="!(obj is TypeConvertKey)", span="277-277", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.Equals(object)"];
n51 [label="return Equals((TypeConvertKey)obj);", span="280-280", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.Equals(object)"];
n50 [label="return false;", span="278-278", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.Equals(object)"];
n52 [label="Exit Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.Equals(object)", span="275-275", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.Equals(object)"];
n53 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.Equals(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)", span="283-283", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.Equals(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)"];
n54 [label="return (_initialType == other._initialType && _targetType == other._targetType);", span="285-285", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.Equals(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)"];
n55 [label="Exit Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.Equals(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)", span="283-283", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.Equals(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)"];
n56 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.CreateCastConverter(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)", span="292-292", cluster="Newtonsoft.Json.Utilities.ConvertUtils.CreateCastConverter(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)"];
n57 [label="MethodInfo castMethodInfo = t.TargetType.GetMethod(''op_Implicit'', new[] { t.InitialType })", span="294-294", cluster="Newtonsoft.Json.Utilities.ConvertUtils.CreateCastConverter(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)"];
n58 [label="castMethodInfo == null", span="295-295", cluster="Newtonsoft.Json.Utilities.ConvertUtils.CreateCastConverter(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)"];
n65 [label="Entry System.Type.GetMethod(string, System.Type[])", span="0-0", cluster="System.Type.GetMethod(string, System.Type[])"];
n59 [label="castMethodInfo = t.TargetType.GetMethod(''op_Explicit'', new[] { t.InitialType })", span="296-296", cluster="Newtonsoft.Json.Utilities.ConvertUtils.CreateCastConverter(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)"];
n60 [label="castMethodInfo == null", span="298-298", cluster="Newtonsoft.Json.Utilities.ConvertUtils.CreateCastConverter(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)"];
n62 [label="MethodCall<object, object> call = JsonTypeReflector.ReflectionDelegateFactory.CreateMethodCall<object>(castMethodInfo)", span="301-301", cluster="Newtonsoft.Json.Utilities.ConvertUtils.CreateCastConverter(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)"];
n61 [label="return null;", span="299-299", cluster="Newtonsoft.Json.Utilities.ConvertUtils.CreateCastConverter(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)"];
n63 [label="return o => call(null, o);", span="303-303", cluster="Newtonsoft.Json.Utilities.ConvertUtils.CreateCastConverter(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)"];
n66 [label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", span="64-64", cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)"];
n68 [label="call(null, o)", span="303-303", cluster="lambda expression"];
n64 [label="Exit Newtonsoft.Json.Utilities.ConvertUtils.CreateCastConverter(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)", span="292-292", cluster="Newtonsoft.Json.Utilities.ConvertUtils.CreateCastConverter(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)"];
n67 [label="Entry lambda expression", span="303-303", cluster="lambda expression"];
n69 [label="Exit lambda expression", span="303-303", cluster="lambda expression"];
n70 [label="Entry Newtonsoft.Json.Utilities.MethodCall<T, TResult>.Invoke(T, params object[])", span="27-27", cluster="Newtonsoft.Json.Utilities.MethodCall<T, TResult>.Invoke(T, params object[])"];
n71 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", span="307-307", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)"];
n72 [label="value is BigInteger", span="309-309", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)"];
n73 [label="return (BigInteger)value;", span="310-310", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)"];
n74 [label="value is string", span="311-311", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)"];
n75 [label="return BigInteger.Parse((string)value, CultureInfo.InvariantCulture);", span="312-312", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)"];
n76 [label="value is float", span="313-313", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)"];
n77 [label="return new BigInteger((float)value);", span="314-314", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)"];
n78 [label="value is double", span="315-315", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)"];
n79 [label="return new BigInteger((double)value);", span="316-316", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)"];
n80 [label="value is decimal", span="317-317", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)"];
n81 [label="return new BigInteger((decimal)value);", span="318-318", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)"];
n82 [label="value is int", span="319-319", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)"];
n83 [label="return new BigInteger((int)value);", span="320-320", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)"];
n84 [label="value is long", span="321-321", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)"];
n85 [label="return new BigInteger((long)value);", span="322-322", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)"];
n86 [label="value is uint", span="323-323", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)"];
n87 [label="return new BigInteger((uint)value);", span="324-324", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)"];
n88 [label="value is ulong", span="325-325", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)"];
n89 [label="return new BigInteger((ulong)value);", span="326-326", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)"];
n90 [label="value is byte[]", span="327-327", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)"];
n91 [label="return new BigInteger((byte[])value);", span="328-328", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)"];
n92 [label="throw new InvalidCastException(''Cannot convert {0} to BigInteger.''.FormatWith(CultureInfo.InvariantCulture, value.GetType()));", span="330-330", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)"];
n93 [label="Exit Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", span="307-307", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)"];
n95 [label="Entry BigInteger.cstr", span="", cluster="BigInteger.cstr"];
n96 [label="Entry System.InvalidCastException.InvalidCastException(string)", span="0-0", cluster="System.InvalidCastException.InvalidCastException(string)"];
n97 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()"];
n98 [label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47", cluster="string.FormatWith(System.IFormatProvider, object)"];
n94 [label="Entry Unk.Parse", span="", cluster="Unk.Parse"];
n99 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)", span="333-333", cluster="Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)"];
n100 [label="targetType == typeof(decimal)", span="335-335", cluster="Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)"];
n101 [label="return (decimal)i;", span="336-336", cluster="Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)"];
n102 [label="targetType == typeof(double)", span="337-337", cluster="Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)"];
n103 [label="return (double)i;", span="338-338", cluster="Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)"];
n104 [label="targetType == typeof(float)", span="339-339", cluster="Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)"];
n105 [label="return (float)i;", span="340-340", cluster="Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)"];
n106 [label="targetType == typeof(ulong)", span="341-341", cluster="Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)"];
n107 [label="return (ulong)i;", span="342-342", cluster="Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)"];
n108 [label="return System.Convert.ChangeType((long)i, targetType, CultureInfo.InvariantCulture);", span="346-346", cluster="Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)"];
n110 [label="throw new InvalidOperationException(''Can not convert from BigInteger to {0}.''.FormatWith(CultureInfo.InvariantCulture, targetType), ex);", span="350-350", cluster="Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)"];
n109 [label=Exception, span="348-348", cluster="Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)"];
n111 [label="Exit Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)", span="333-333", cluster="Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)"];
n112 [label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0", cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)"];
n113 [label="Entry System.InvalidOperationException.InvalidOperationException(string, System.Exception)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string, System.Exception)"];
n114 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", span="364-364", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)"];
n115 [label="object value", span="366-366", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)"];
n116 [label="TryConvertInternal(initialValue, culture, targetType, out value)", span="367-367", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)"];
n120 [label="throw new Exception(''Can not convert null {0} into non-nullable {1}.''.FormatWith(CultureInfo.InvariantCulture, initialValue.GetType(), targetType));", span="372-372", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)"];
n122 [label="throw new ArgumentException(''Target type {0} is not a value type or a non-abstract class.''.FormatWith(CultureInfo.InvariantCulture, targetType), ''targetType'');", span="374-374", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)"];
n124 [label="throw new InvalidOperationException(''Can not convert from {0} to {1}.''.FormatWith(CultureInfo.InvariantCulture, initialValue.GetType(), targetType));", span="376-376", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)"];
n117 [label="ConvertResult.Success", span="369-369", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)"];
n119 [label="ConvertResult.CannotConvertNull", span="371-371", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)"];
n121 [label="ConvertResult.NotInstantiableType", span="373-373", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)"];
n123 [label="ConvertResult.NoValidConversion", span="375-375", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)"];
n125 [label="throw new InvalidOperationException(''Unexpected conversion result.'');", span="378-378", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)"];
n127 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", span="399-399", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)"];
n118 [label="return value;", span="370-370", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)"];
n126 [label="Exit Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", span="364-364", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)"];
n131 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)"];
n129 [label="Entry string.FormatWith(System.IFormatProvider, object, object)", span="52-52", cluster="string.FormatWith(System.IFormatProvider, object, object)"];
n130 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)"];
n128 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)"];
n132 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.TryConvert(object, System.Globalization.CultureInfo, System.Type, out object)", span="382-382", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvert(object, System.Globalization.CultureInfo, System.Type, out object)"];
n133 [label="TryConvertInternal(initialValue, culture, targetType, out value) == ConvertResult.Success", span="386-386", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvert(object, System.Globalization.CultureInfo, System.Type, out object)"];
n134 [label="return true;", span="387-387", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvert(object, System.Globalization.CultureInfo, System.Type, out object)"];
n135 [label="value = null", span="389-389", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvert(object, System.Globalization.CultureInfo, System.Type, out object)"];
n136 [label="return false;", span="390-390", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvert(object, System.Globalization.CultureInfo, System.Type, out object)"];
n137 [label="value = null", span="394-394", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvert(object, System.Globalization.CultureInfo, System.Type, out object)"];
n138 [label="return false;", span="395-395", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvert(object, System.Globalization.CultureInfo, System.Type, out object)"];
n139 [label="Exit Newtonsoft.Json.Utilities.ConvertUtils.TryConvert(object, System.Globalization.CultureInfo, System.Type, out object)", span="382-382", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvert(object, System.Globalization.CultureInfo, System.Type, out object)"];
n140 [label="initialValue == null", span="401-401", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)"];
n142 [label="ReflectionUtils.IsNullableType(targetType)", span="404-404", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)"];
n143 [label="targetType = Nullable.GetUnderlyingType(targetType)", span="405-405", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)"];
n144 [label="Type initialType = initialValue.GetType()", span="407-407", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)"];
n145 [label="targetType == initialType", span="409-409", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)"];
n146 [label="value = initialValue", span="411-411", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)"];
n148 [label="ConvertUtils.IsConvertible(initialValue.GetType()) && ConvertUtils.IsConvertible(targetType)", span="416-416", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)"];
n149 [label="targetType.IsEnum()", span="418-418", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)"];
n150 [label="initialValue is string", span="420-420", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)"];
n151 [label="value = Enum.Parse(targetType, initialValue.ToString(), true)", span="422-422", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)"];
n153 [label="IsInteger(initialValue)", span="425-425", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)"];
n154 [label="value = Enum.ToObject(targetType, initialValue)", span="427-427", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)"];
n156 [label="value = System.Convert.ChangeType(initialValue, targetType, culture)", span="432-432", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)"];
n158 [label="initialValue is DateTime && targetType == typeof(DateTimeOffset)", span="437-437", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)"];
n159 [label="value = new DateTimeOffset((DateTime)initialValue)", span="439-439", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)"];
n161 [label="initialValue is byte[] && targetType == typeof(Guid)", span="444-444", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)"];
n162 [label="value = new Guid((byte[])initialValue)", span="446-446", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)"];
n164 [label="initialValue is Guid && targetType == typeof(byte[])", span="450-450", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)"];
n165 [label="value = ((Guid)initialValue).ToByteArray()", span="452-452", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)"];
n167 [label="initialValue is string", span="456-456", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", color=red, community=0];
n168 [label="targetType == typeof(Guid)", span="458-458", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)"];
n169 [label="value = new Guid((string)initialValue)", span="460-460", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", color=red, community=0];
n171 [label="targetType == typeof(Uri)", span="463-463", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)"];
n172 [label="value = new Uri((string)initialValue, UriKind.RelativeOrAbsolute)", span="465-465", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", color=red, community=0];
n174 [label="targetType == typeof(TimeSpan)", span="468-468", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)"];
n175 [label="value = ParseTimeSpan((string)initialValue)", span="470-470", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", color=red, community=0];
n177 [label="targetType == typeof(byte[])", span="473-473", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)"];
n178 [label="value = System.Convert.FromBase64String((string)initialValue)", span="475-475", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", color=red, community=0];
n180 [label="typeof(Type).IsAssignableFrom(targetType)", span="478-478", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)"];
n181 [label="value = Type.GetType((string)initialValue, true)", span="480-480", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", color=red, community=0];
n183 [label="targetType == typeof(BigInteger)", span="486-486", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)"];
n184 [label="value = ToBigInteger(initialValue)", span="488-488", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)"];
n186 [label="initialValue is BigInteger", span="491-491", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)"];
n187 [label="value = FromBigInteger((BigInteger)initialValue, targetType)", span="493-493", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)"];
n190 [label="toConverter != null && toConverter.CanConvertTo(targetType)", span="502-502", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)"];
n191 [label="value = toConverter.ConvertTo(null, culture, initialValue, targetType)", span="504-504", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)"];
n193 [label="TypeConverter fromConverter = GetConverter(targetType)", span="508-508", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)"];
n195 [label="value = fromConverter.ConvertFrom(null, culture, initialValue)", span="512-512", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)"];
n197 [label="initialValue == DBNull.Value", span="518-518", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)"];
n198 [label="ReflectionUtils.IsNullable(targetType)", span="520-520", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)"];
n199 [label="value = EnsureTypeAssignable(null, initialType, targetType)", span="522-522", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)"];
n203 [label="initialValue is INullable", span="532-532", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)"];
n204 [label="value = EnsureTypeAssignable(ToValue((INullable)initialValue), initialType, targetType)", span="534-534", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)"];
n206 [label="targetType.IsInterface() || targetType.IsGenericTypeDefinition() || targetType.IsAbstract()", span="539-539", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)"];
n141 [label="throw new ArgumentNullException(''initialValue'');", span="402-402", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)"];
n189 [label="TypeConverter toConverter = GetConverter(initialType)", span="500-500", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)"];
n194 [label="fromConverter != null && fromConverter.CanConvertFrom(initialType)", span="510-510", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)"];
n147 [label="return ConvertResult.Success;", span="412-412", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)"];
n152 [label="return ConvertResult.Success;", span="423-423", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)"];
n213 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()"];
n214 [label="Entry System.Enum.Parse(System.Type, string, bool)", span="0-0", cluster="System.Enum.Parse(System.Type, string, bool)"];
n215 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", span="628-628", cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)"];
n155 [label="return ConvertResult.Success;", span="428-428", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)"];
n216 [label="Entry System.Enum.ToObject(System.Type, object)", span="0-0", cluster="System.Enum.ToObject(System.Type, object)"];
n157 [label="return ConvertResult.Success;", span="433-433", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)"];
n160 [label="return ConvertResult.Success;", span="440-440", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)"];
n217 [label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime)"];
n163 [label="return ConvertResult.Success;", span="447-447", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)"];
n218 [label="Entry System.Guid.Guid(byte[])", span="0-0", cluster="System.Guid.Guid(byte[])"];
n166 [label="return ConvertResult.Success;", span="453-453", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)"];
n219 [label="Entry System.Guid.ToByteArray()", span="0-0", cluster="System.Guid.ToByteArray()"];
n170 [label="return ConvertResult.Success;", span="461-461", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)"];
n220 [label="Entry System.Guid.Guid(string)", span="0-0", cluster="System.Guid.Guid(string)"];
n173 [label="return ConvertResult.Success;", span="466-466", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)"];
n221 [label="Entry System.Uri.Uri(string, System.UriKind)", span="0-0", cluster="System.Uri.Uri(string, System.UriKind)"];
n176 [label="return ConvertResult.Success;", span="471-471", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)"];
n179 [label="return ConvertResult.Success;", span="476-476", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)"];
n222 [label="Entry System.Convert.FromBase64String(string)", span="0-0", cluster="System.Convert.FromBase64String(string)"];
n182 [label="return ConvertResult.Success;", span="481-481", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)"];
n223 [label="Entry System.Type.GetType(string, bool)", span="0-0", cluster="System.Type.GetType(string, bool)"];
n185 [label="return ConvertResult.Success;", span="489-489", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)"];
n188 [label="return ConvertResult.Success;", span="494-494", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)"];
n224 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.GetConverter(System.Type)", span="622-622", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetConverter(System.Type)"];
n225 [label="Entry System.ComponentModel.TypeConverter.CanConvertTo(System.Type)", span="0-0", cluster="System.ComponentModel.TypeConverter.CanConvertTo(System.Type)"];
n192 [label="return ConvertResult.Success;", span="505-505", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)"];
n226 [label="Entry System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", span="0-0", cluster="System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)"];
n227 [label="Entry System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)", span="0-0", cluster="System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)"];
n196 [label="return ConvertResult.Success;", span="513-513", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)"];
n228 [label="Entry System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", span="0-0", cluster="System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)"];
n201 [label="value = null", span="527-527", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)"];
n229 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", span="237-237", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)"];
n200 [label="return ConvertResult.Success;", span="523-523", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)"];
n230 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", span="579-579", cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)"];
n202 [label="return ConvertResult.CannotConvertNull;", span="528-528", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)"];
n205 [label="return ConvertResult.Success;", span="535-535", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)"];
n231 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", span="602-602", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)"];
n207 [label="value = null", span="541-541", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)"];
n209 [label="value = null", span="545-545", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)"];
n232 [label="Entry System.Type.IsInterface()", span="128-128", cluster="System.Type.IsInterface()"];
n233 [label="Entry System.Type.IsGenericTypeDefinition()", span="146-146", cluster="System.Type.IsGenericTypeDefinition()"];
n234 [label="Entry System.Type.IsAbstract()", span="492-492", cluster="System.Type.IsAbstract()"];
n208 [label="return ConvertResult.NotInstantiableType;", span="542-542", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)"];
n210 [label="return ConvertResult.NoValidConversion;", span="546-546", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)"];
n211 [label="Exit Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", span="399-399", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)"];
n212 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)"];
n235 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", span="562-562", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)"];
n236 [label="object convertedValue", span="564-564", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)"];
n237 [label="targetType == typeof(object)", span="566-566", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)"];
n238 [label="return initialValue;", span="567-567", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)"];
n239 [label="initialValue == null && ReflectionUtils.IsNullable(targetType)", span="569-569", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)"];
n241 [label="TryConvert(initialValue, culture, targetType, out convertedValue)", span="572-572", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)"];
n243 [label="return EnsureTypeAssignable(initialValue, ReflectionUtils.GetObjectType(initialValue), targetType);", span="575-575", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)"];
n240 [label="return null;", span="570-570", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)"];
n242 [label="return convertedValue;", span="573-573", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)"];
n244 [label="Exit Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", span="562-562", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)"];
n245 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", span="136-136", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)"];
n246 [label="Type valueType = (value != null) ? value.GetType() : null", span="581-581", cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)"];
n247 [label="value != null", span="583-583", cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)"];
n248 [label="targetType.IsAssignableFrom(valueType)", span="585-585", cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)"];
n249 [label="return value;", span="586-586", cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)"];
n250 [label="Func<object, object> castConverter = CastConverters.Get(new TypeConvertKey(valueType, targetType))", span="588-588", cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)"];
n252 [label="return castConverter(value);", span="590-590", cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)"];
n253 [label="ReflectionUtils.IsNullable(targetType)", span="594-594", cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)"];
n255 [label="throw new ArgumentException(''Could not cast or convert from {0} to {1}.''.FormatWith(CultureInfo.InvariantCulture, (initialType != null) ? initialType.ToString() : ''{null}'', targetType));", span="598-598", cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)"];
n251 [label="castConverter != null", span="589-589", cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)"];
n257 [label="Entry Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)", span="50-50", cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)"];
n254 [label="return null;", span="595-595", cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)"];
n256 [label="Exit Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", span="579-579", cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)"];
n259 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)"];
n260 [label="Entry System.Type.ToString()", span="0-0", cluster="System.Type.ToString()"];
n258 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)"];
n261 [label="nullableValue == null", span="604-604", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)"];
n263 [label="nullableValue is SqlInt32", span="606-606", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)"];
n264 [label="return ToValue((SqlInt32)nullableValue);", span="607-607", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)"];
n265 [label="nullableValue is SqlInt64", span="608-608", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)"];
n266 [label="return ToValue((SqlInt64)nullableValue);", span="609-609", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)"];
n267 [label="nullableValue is SqlBoolean", span="610-610", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)"];
n268 [label="return ToValue((SqlBoolean)nullableValue);", span="611-611", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)"];
n269 [label="nullableValue is SqlString", span="612-612", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)"];
n270 [label="return ToValue((SqlString)nullableValue);", span="613-613", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)"];
n271 [label="nullableValue is SqlDateTime", span="614-614", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)"];
n272 [label="return ToValue((SqlDateTime)nullableValue);", span="615-615", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)"];
n273 [label="throw new ArgumentException(''Unsupported INullable type: {0}''.FormatWith(CultureInfo.InvariantCulture, nullableValue.GetType()));", span="617-617", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)"];
n262 [label="return null;", span="605-605", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)"];
n274 [label="Exit Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", span="602-602", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)"];
n276 [label="Entry Unk.GetType", span="", cluster="Unk.GetType"];
n277 [label="Entry Unk.FormatWith", span="", cluster="Unk.FormatWith"];
n275 [label="Entry Unk.ToValue", span="", cluster="Unk.ToValue"];
n278 [label="return JsonTypeReflector.GetTypeConverter(t);", span="624-624", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetConverter(System.Type)"];
n279 [label="Exit Newtonsoft.Json.Utilities.ConvertUtils.GetConverter(System.Type)", span="622-622", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetConverter(System.Type)"];
n280 [label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetTypeConverter(System.Type)", span="217-217", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetTypeConverter(System.Type)"];
n281 [label="GetTypeCode(value.GetType())", span="630-630", cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)"];
n282 [label="PrimitiveTypeCode.SByte", span="632-632", cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)"];
n291 [label="return false;", span="642-642", cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)"];
n283 [label="PrimitiveTypeCode.Byte", span="633-633", cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)"];
n284 [label="PrimitiveTypeCode.Int16", span="634-634", cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)"];
n285 [label="PrimitiveTypeCode.UInt16", span="635-635", cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)"];
n286 [label="PrimitiveTypeCode.Int32", span="636-636", cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)"];
n287 [label="PrimitiveTypeCode.UInt32", span="637-637", cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)"];
n288 [label="PrimitiveTypeCode.Int64", span="638-638", cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)"];
n289 [label="PrimitiveTypeCode.UInt64", span="639-639", cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)"];
n290 [label="return true;", span="640-640", cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)"];
n292 [label="Exit Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", span="628-628", cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)"];
n293 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", span="646-646", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)"];
n294 [label="value = 0", span="648-648", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)"];
n295 [label="length == 0", span="650-650", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)"];
n297 [label="bool isNegative = (chars[start] == '-')", span="653-653", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)"];
n299 [label="length == 1", span="658-658", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)"];
n301 [label="start++", span="661-661", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)"];
n302 [label="length--", span="662-662", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)"];
n303 [label="int end = start + length", span="665-665", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)"];
n304 [label="length > 10 || (length == 10 && chars[start] - '0' > 2)", span="670-670", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)"];
n305 [label="int i = start", span="673-673", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)"];
n307 [label="int c = chars[i] - '0'", span="675-675", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)"];
n312 [label="int i = start", span="684-684", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)"];
n314 [label="int c = chars[i] - '0'", span="686-686", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)"];
n321 [label="c = chars[i] - '0'", span="702-702", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)"];
n317 [label="int newValue = (10 * value) - c", span="691-691", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)"];
n318 [label="newValue > value", span="694-694", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)"];
n329 [label="value == int.MinValue", span="719-719", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)"];
n331 [label="value = -value", span="722-722", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)"];
n333 [label="Exit Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", span="646-646", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)"];
n296 [label="return ParseResult.Invalid;", span="651-651", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)"];
n298 [label=isNegative, span="655-655", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)"];
n328 [label="!isNegative", span="716-716", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)"];
n300 [label="return ParseResult.Invalid;", span="659-659", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)"];
n306 [label="i < end", span="673-673", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)"];
n313 [label="i < end", span="684-684", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)"];
n320 [label="i < end", span="700-700", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)"];
n310 [label="i++", span="673-673", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)"];
n311 [label="return ParseResult.Overflow;", span="681-681", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)"];
n308 [label="c < 0 || c > 9", span="677-677", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)"];
n309 [label="return ParseResult.Invalid;", span="678-678", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)"];
n319 [label="i++", span="696-696", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)"];
n327 [label="i++", span="684-684", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)"];
n315 [label="c < 0 || c > 9", span="688-688", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)"];
n316 [label="return ParseResult.Invalid;", span="689-689", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)"];
n326 [label="value = newValue", span="711-711", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)"];
n324 [label="i++", span="700-700", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)"];
n325 [label="return ParseResult.Overflow;", span="708-708", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)"];
n322 [label="c < 0 || c > 9", span="704-704", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)"];
n323 [label="return ParseResult.Invalid;", span="705-705", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)"];
n332 [label="return ParseResult.Success;", span="725-725", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)"];
n330 [label="return ParseResult.Overflow;", span="720-720", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)"];
n334 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", span="728-728", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)"];
n335 [label="value = 0", span="730-730", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)"];
n336 [label="length == 0", span="732-732", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)"];
n338 [label="bool isNegative = (chars[start] == '-')", span="735-735", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)"];
n340 [label="length == 1", span="740-740", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)"];
n342 [label="start++", span="743-743", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)"];
n343 [label="length--", span="744-744", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)"];
n344 [label="int end = start + length", span="747-747", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)"];
n345 [label="length > 19", span="750-750", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)"];
n346 [label="int i = start", span="753-753", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)"];
n348 [label="int c = chars[i] - '0'", span="755-755", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)"];
n353 [label="int i = start", span="764-764", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)"];
n355 [label="int c = chars[i] - '0'", span="766-766", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)"];
n362 [label="c = chars[i] - '0'", span="782-782", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)"];
n358 [label="long newValue = (10 * value) - c", span="771-771", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)"];
n359 [label="newValue > value", span="774-774", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)"];
n370 [label="value == long.MinValue", span="799-799", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)"];
n372 [label="value = -value", span="802-802", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)"];
n374 [label="Exit Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", span="728-728", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)"];
n337 [label="return ParseResult.Invalid;", span="733-733", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)"];
n339 [label=isNegative, span="737-737", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)"];
n369 [label="!isNegative", span="796-796", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)"];
n341 [label="return ParseResult.Invalid;", span="741-741", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)"];
n347 [label="i < end", span="753-753", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)"];
n354 [label="i < end", span="764-764", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)"];
n361 [label="i < end", span="780-780", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)"];
n351 [label="i++", span="753-753", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)"];
n352 [label="return ParseResult.Overflow;", span="761-761", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)"];
n349 [label="c < 0 || c > 9", span="757-757", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)"];
n350 [label="return ParseResult.Invalid;", span="758-758", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)"];
n360 [label="i++", span="776-776", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)"];
n368 [label="i++", span="764-764", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)"];
n356 [label="c < 0 || c > 9", span="768-768", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)"];
n357 [label="return ParseResult.Invalid;", span="769-769", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)"];
n367 [label="value = newValue", span="791-791", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)"];
n365 [label="i++", span="780-780", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)"];
n366 [label="return ParseResult.Overflow;", span="788-788", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)"];
n363 [label="c < 0 || c > 9", span="784-784", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)"];
n364 [label="return ParseResult.Invalid;", span="785-785", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)"];
n373 [label="return ParseResult.Success;", span="805-805", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)"];
n371 [label="return ParseResult.Overflow;", span="800-800", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)"];
n375 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.TryConvertGuid(string, out System.Guid)", span="808-808", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertGuid(string, out System.Guid)"];
n376 [label="return Guid.TryParseExact(s, ''D'', out g);", span="826-826", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertGuid(string, out System.Guid)"];
n377 [label="Exit Newtonsoft.Json.Utilities.ConvertUtils.TryConvertGuid(string, out System.Guid)", span="808-808", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertGuid(string, out System.Guid)"];
n378 [label="Entry System.Guid.TryParseExact(string, string, out System.Guid)", span="0-0", cluster="System.Guid.TryParseExact(string, string, out System.Guid)"];
m0_18 [label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="407-407", cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="JsonProperty.cs"];
m0_12 [label="Entry Newtonsoft.Json.Serialization.JsonProperty.WritePropertyName(Newtonsoft.Json.JsonWriter)", span="285-285", cluster="Newtonsoft.Json.Serialization.JsonProperty.WritePropertyName(Newtonsoft.Json.JsonWriter)", file="JsonProperty.cs"];
m0_13 [label=_skipPropertyNameEscape, span="287-287", cluster="Newtonsoft.Json.Serialization.JsonProperty.WritePropertyName(Newtonsoft.Json.JsonWriter)", file="JsonProperty.cs"];
m0_14 [label="writer.WritePropertyName(PropertyName, false)", span="288-288", cluster="Newtonsoft.Json.Serialization.JsonProperty.WritePropertyName(Newtonsoft.Json.JsonWriter)", file="JsonProperty.cs"];
m0_15 [label="writer.WritePropertyName(PropertyName)", span="290-290", cluster="Newtonsoft.Json.Serialization.JsonProperty.WritePropertyName(Newtonsoft.Json.JsonWriter)", file="JsonProperty.cs"];
m0_16 [label="Exit Newtonsoft.Json.Serialization.JsonProperty.WritePropertyName(Newtonsoft.Json.JsonWriter)", span="285-285", cluster="Newtonsoft.Json.Serialization.JsonProperty.WritePropertyName(Newtonsoft.Json.JsonWriter)", file="JsonProperty.cs"];
m0_9 [label="Entry Newtonsoft.Json.Serialization.JsonProperty.ToString()", span="256-256", cluster="Newtonsoft.Json.Serialization.JsonProperty.ToString()", file="JsonProperty.cs"];
m0_10 [label="return PropertyName;", span="258-258", cluster="Newtonsoft.Json.Serialization.JsonProperty.ToString()", file="JsonProperty.cs"];
m0_11 [label="Exit Newtonsoft.Json.Serialization.JsonProperty.ToString()", span="256-256", cluster="Newtonsoft.Json.Serialization.JsonProperty.ToString()", file="JsonProperty.cs"];
m0_0 [label="Entry Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", span="170-170", cluster="Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", file="JsonProperty.cs"];
m0_1 [label="_propertyType == null", span="172-172", cluster="Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", file="JsonProperty.cs"];
m0_2 [label="return null;", span="173-173", cluster="Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", file="JsonProperty.cs"];
m0_3 [label="!_hasExplicitDefaultValue && !_hasGeneratedDefaultValue", span="175-175", cluster="Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", file="JsonProperty.cs"];
m0_4 [label="_defaultValue = ReflectionUtils.GetDefaultValue(PropertyType)", span="177-177", cluster="Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", file="JsonProperty.cs"];
m0_6 [label="return _defaultValue;", span="181-181", cluster="Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", file="JsonProperty.cs"];
m0_5 [label="_hasGeneratedDefaultValue = true", span="178-178", cluster="Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", file="JsonProperty.cs"];
m0_7 [label="Exit Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", span="170-170", cluster="Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", file="JsonProperty.cs"];
m0_17 [label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string, bool)", span="417-417", cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string, bool)", file="JsonProperty.cs"];
m0_8 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", span="992-992", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="JsonProperty.cs"];
m0_19 [label="Newtonsoft.Json.Serialization.JsonProperty", span="", file="JsonProperty.cs"];
n380 -> n45  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey"];
n380 -> n51  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey"];
n380 -> n54  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey"];
n381 -> n52  [key=1, style=dashed, color=darkseagreen4, label="ref Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey"];
n382 -> n68  [key=1, style=dashed, color=darkseagreen4, label=call];
n0 -> n1  [key=0, style=solid];
n0 -> n2  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n0 -> n4  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Utilities.PrimitiveTypeCode GetTypeCode"];
n0 -> n15  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type t"];
n1 -> n2  [key=0, style=solid];
n2 -> n3  [key=0, style=solid];
n2 -> n4  [key=2, style=dotted];
n3 -> n0  [key=0, style=bold, color=blue];
n4 -> n5  [key=0, style=solid];
n4 -> n6  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n4 -> n9  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n4 -> n11  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n4 -> n12  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n4 -> n13  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n4 -> n0  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Utilities.PrimitiveTypeCode GetTypeCode"];
n4 -> n1  [key=3, color=darkorchid, style=bold, label="Parameter variable bool isEnum"];
n4 -> n19  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Utilities.PrimitiveTypeCode GetTypeCode"];
n5 -> n6  [key=0, style=solid];
n6 -> n7  [key=0, style=solid];
n6 -> n9  [key=0, style=solid];
n6 -> n21  [key=2, style=dotted];
n6 -> n8  [key=1, style=dashed, color=darkseagreen4, label=typeCode];
n9 -> n10  [key=0, style=solid];
n9 -> n12  [key=0, style=solid];
n9 -> n22  [key=2, style=dotted];
n11 -> n20  [key=0, style=solid];
n11 -> n23  [key=2, style=dotted];
n11 -> n0  [key=2, style=dotted];
n12 -> n13  [key=0, style=solid];
n12 -> n18  [key=0, style=solid];
n12 -> n24  [key=2, style=dotted];
n13 -> n14  [key=0, style=solid];
n13 -> n25  [key=2, style=dotted];
n13 -> n15  [key=1, style=dashed, color=darkseagreen4, label=nonNullable];
n7 -> n8  [key=0, style=solid];
n8 -> n20  [key=0, style=solid];
n10 -> n11  [key=0, style=solid];
n18 -> n19  [key=0, style=solid];
n18 -> n20  [key=1, style=dashed, color=darkseagreen4, label="out bool"];
n14 -> n15  [key=0, style=solid];
n14 -> n18  [key=0, style=solid];
n14 -> n22  [key=2, style=dotted];
n15 -> n16  [key=0, style=solid];
n15 -> n23  [key=2, style=dotted];
n15 -> n26  [key=2, style=dotted];
n15 -> n17  [key=1, style=dashed, color=darkseagreen4, label=nullableUnderlyingType];
n16 -> n17  [key=0, style=solid];
n17 -> n20  [key=0, style=solid];
n17 -> n0  [key=2, style=dotted];
n19 -> n20  [key=0, style=solid];
n20 -> n4  [key=0, style=bold, color=blue];
n27 -> n28  [key=0, style=solid];
n28 -> n29  [key=0, style=solid];
n28 -> n31  [key=2, style=dotted];
n29 -> n30  [key=0, style=solid];
n30 -> n27  [key=0, style=bold, color=blue];
n32 -> n33  [key=0, style=solid];
n32 -> n127  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type t"];
n33 -> n34  [key=0, style=solid];
n33 -> n35  [key=2, style=dotted];
n34 -> n32  [key=0, style=bold, color=blue];
n36 -> n37  [key=0, style=solid];
n36 -> n127  [key=3, color=darkorchid, style=bold, label="Parameter variable string input"];
n37 -> n38  [key=0, style=solid];
n37 -> n39  [key=2, style=dotted];
n38 -> n36  [key=0, style=bold, color=blue];
n40 -> n41  [key=0, style=solid];
n40 -> n42  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n41 -> n42  [key=0, style=solid];
n41 -> n379  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey"];
n42 -> n43  [key=0, style=solid];
n42 -> n379  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey"];
n43 -> n40  [key=0, style=bold, color=blue];
n44 -> n45  [key=0, style=solid];
n45 -> n46  [key=0, style=solid];
n45 -> n47  [key=2, style=dotted];
n46 -> n44  [key=0, style=bold, color=blue];
n48 -> n49  [key=0, style=solid];
n48 -> n51  [key=1, style=dashed, color=darkseagreen4, label=object];
n48 -> n50  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Equals"];
n48 -> n53  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Equals"];
n49 -> n50  [key=0, style=solid];
n49 -> n51  [key=0, style=solid];
n51 -> n52  [key=0, style=solid];
n51 -> n53  [key=2, style=dotted];
n51 -> n381  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey"];
n50 -> n52  [key=0, style=solid];
n52 -> n48  [key=0, style=bold, color=blue];
n53 -> n54  [key=0, style=solid];
n53 -> n48  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey other"];
n54 -> n55  [key=0, style=solid];
n55 -> n53  [key=0, style=bold, color=blue];
n56 -> n57  [key=0, style=solid];
n56 -> n61  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Func<object, object> CreateCastConverter"];
n56 -> n63  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Func<object, object> CreateCastConverter"];
n57 -> n58  [key=0, style=solid];
n57 -> n65  [key=2, style=dotted];
n57 -> n57  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey"];
n57 -> n59  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey"];
n57 -> n60  [key=1, style=dashed, color=darkseagreen4, label=castMethodInfo];
n57 -> n62  [key=1, style=dashed, color=darkseagreen4, label=castMethodInfo];
n58 -> n59  [key=0, style=solid];
n58 -> n60  [key=0, style=solid];
n59 -> n60  [key=0, style=solid];
n59 -> n65  [key=2, style=dotted];
n59 -> n59  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey"];
n59 -> n62  [key=1, style=dashed, color=darkseagreen4, label=castMethodInfo];
n60 -> n61  [key=0, style=solid];
n60 -> n62  [key=0, style=solid];
n62 -> n63  [key=0, style=solid];
n62 -> n66  [key=2, style=dotted];
n62 -> n68  [key=1, style=dashed, color=darkseagreen4, label=call];
n61 -> n64  [key=0, style=solid];
n63 -> n64  [key=0, style=solid];
n63 -> n68  [key=1, style=dashed, color=darkseagreen4, label=object];
n68 -> n69  [key=0, style=solid];
n68 -> n70  [key=2, style=dotted];
n64 -> n56  [key=0, style=bold, color=blue];
n67 -> n68  [key=0, style=solid];
n69 -> n67  [key=0, style=bold, color=blue];
n71 -> n72  [key=0, style=solid];
n71 -> n73  [key=1, style=dashed, color=darkseagreen4, label=object];
n71 -> n74  [key=1, style=dashed, color=darkseagreen4, label=object];
n71 -> n75  [key=1, style=dashed, color=darkseagreen4, label=object];
n71 -> n76  [key=1, style=dashed, color=darkseagreen4, label=object];
n71 -> n77  [key=1, style=dashed, color=darkseagreen4, label=object];
n71 -> n78  [key=1, style=dashed, color=darkseagreen4, label=object];
n71 -> n79  [key=1, style=dashed, color=darkseagreen4, label=object];
n71 -> n80  [key=1, style=dashed, color=darkseagreen4, label=object];
n71 -> n81  [key=1, style=dashed, color=darkseagreen4, label=object];
n71 -> n82  [key=1, style=dashed, color=darkseagreen4, label=object];
n71 -> n83  [key=1, style=dashed, color=darkseagreen4, label=object];
n71 -> n84  [key=1, style=dashed, color=darkseagreen4, label=object];
n71 -> n85  [key=1, style=dashed, color=darkseagreen4, label=object];
n71 -> n86  [key=1, style=dashed, color=darkseagreen4, label=object];
n71 -> n87  [key=1, style=dashed, color=darkseagreen4, label=object];
n71 -> n88  [key=1, style=dashed, color=darkseagreen4, label=object];
n71 -> n89  [key=1, style=dashed, color=darkseagreen4, label=object];
n71 -> n90  [key=1, style=dashed, color=darkseagreen4, label=object];
n71 -> n91  [key=1, style=dashed, color=darkseagreen4, label=object];
n71 -> n92  [key=1, style=dashed, color=darkseagreen4, label=object];
n71 -> n71  [key=3, color=darkorchid, style=bold, label="method methodReturn BigInteger ToBigInteger"];
n71 -> n127  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
n72 -> n73  [key=0, style=solid];
n72 -> n74  [key=0, style=solid];
n73 -> n93  [key=0, style=solid];
n74 -> n75  [key=0, style=solid];
n74 -> n76  [key=0, style=solid];
n75 -> n93  [key=0, style=solid];
n75 -> n94  [key=2, style=dotted];
n76 -> n77  [key=0, style=solid];
n76 -> n78  [key=0, style=solid];
n77 -> n93  [key=0, style=solid];
n77 -> n95  [key=2, style=dotted];
n78 -> n79  [key=0, style=solid];
n78 -> n80  [key=0, style=solid];
n79 -> n93  [key=0, style=solid];
n79 -> n95  [key=2, style=dotted];
n80 -> n81  [key=0, style=solid];
n80 -> n82  [key=0, style=solid];
n81 -> n93  [key=0, style=solid];
n81 -> n95  [key=2, style=dotted];
n82 -> n83  [key=0, style=solid];
n82 -> n84  [key=0, style=solid];
n83 -> n93  [key=0, style=solid];
n83 -> n95  [key=2, style=dotted];
n84 -> n85  [key=0, style=solid];
n84 -> n86  [key=0, style=solid];
n85 -> n93  [key=0, style=solid];
n85 -> n95  [key=2, style=dotted];
n86 -> n87  [key=0, style=solid];
n86 -> n88  [key=0, style=solid];
n87 -> n93  [key=0, style=solid];
n87 -> n95  [key=2, style=dotted];
n88 -> n89  [key=0, style=solid];
n88 -> n90  [key=0, style=solid];
n89 -> n93  [key=0, style=solid];
n89 -> n95  [key=2, style=dotted];
n90 -> n91  [key=0, style=solid];
n90 -> n92  [key=0, style=solid];
n91 -> n93  [key=0, style=solid];
n91 -> n95  [key=2, style=dotted];
n92 -> n93  [key=0, style=solid];
n92 -> n96  [key=2, style=dotted];
n92 -> n97  [key=2, style=dotted];
n92 -> n98  [key=2, style=dotted];
n93 -> n71  [key=0, style=bold, color=blue];
n99 -> n100  [key=0, style=solid];
n99 -> n101  [key=1, style=dashed, color=darkseagreen4, label=BigInteger];
n99 -> n102  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n99 -> n103  [key=1, style=dashed, color=darkseagreen4, label=BigInteger];
n99 -> n104  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n99 -> n105  [key=1, style=dashed, color=darkseagreen4, label=BigInteger];
n99 -> n106  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n99 -> n107  [key=1, style=dashed, color=darkseagreen4, label=BigInteger];
n99 -> n108  [key=1, style=dashed, color=darkseagreen4, label=BigInteger];
n99 -> n110  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n99 -> n99  [key=3, color=darkorchid, style=bold, label="method methodReturn object FromBigInteger"];
n99 -> n127  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type targetType"];
n100 -> n101  [key=0, style=solid];
n100 -> n102  [key=0, style=solid];
n101 -> n111  [key=0, style=solid];
n102 -> n103  [key=0, style=solid];
n102 -> n104  [key=0, style=solid];
n103 -> n111  [key=0, style=solid];
n104 -> n105  [key=0, style=solid];
n104 -> n106  [key=0, style=solid];
n105 -> n111  [key=0, style=solid];
n106 -> n107  [key=0, style=solid];
n106 -> n108  [key=0, style=solid];
n107 -> n111  [key=0, style=solid];
n108 -> n111  [key=0, style=solid];
n108 -> n112  [key=2, style=dotted];
n110 -> n111  [key=0, style=solid];
n110 -> n113  [key=2, style=dotted];
n110 -> n98  [key=2, style=dotted];
n109 -> n110  [key=0, style=solid];
n111 -> n99  [key=0, style=bold, color=blue];
n114 -> n115  [key=0, style=solid];
n114 -> n116  [key=1, style=dashed, color=darkseagreen4, label=object];
n114 -> n120  [key=1, style=dashed, color=darkseagreen4, label=object];
n114 -> n122  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n114 -> n124  [key=1, style=dashed, color=darkseagreen4, label=object];
n115 -> n116  [key=0, style=solid];
n116 -> n117  [key=0, style=solid];
n116 -> n119  [key=0, style=solid];
n116 -> n121  [key=0, style=solid];
n116 -> n123  [key=0, style=solid];
n116 -> n125  [key=0, style=solid];
n116 -> n127  [key=2, style=dotted];
n116 -> n118  [key=1, style=dashed, color=darkseagreen4, label=value];
n120 -> n126  [key=0, style=solid];
n120 -> n128  [key=2, style=dotted];
n120 -> n97  [key=2, style=dotted];
n120 -> n129  [key=2, style=dotted];
n122 -> n126  [key=0, style=solid];
n122 -> n130  [key=2, style=dotted];
n122 -> n98  [key=2, style=dotted];
n124 -> n126  [key=0, style=solid];
n124 -> n131  [key=2, style=dotted];
n124 -> n97  [key=2, style=dotted];
n124 -> n129  [key=2, style=dotted];
n117 -> n118  [key=0, style=solid];
n119 -> n120  [key=0, style=solid];
n121 -> n122  [key=0, style=solid];
n123 -> n124  [key=0, style=solid];
n125 -> n126  [key=0, style=solid];
n125 -> n131  [key=2, style=dotted];
n127 -> n140  [key=0, style=solid];
n127 -> n142  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n127 -> n143  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n127 -> n144  [key=1, style=dashed, color=darkseagreen4, label=object];
n127 -> n145  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n127 -> n146  [key=1, style=dashed, color=darkseagreen4, label=object];
n127 -> n148  [key=1, style=dashed, color=darkseagreen4, label=object];
n127 -> n149  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n127 -> n150  [key=1, style=dashed, color=darkseagreen4, label=object];
n127 -> n151  [key=1, style=dashed, color=darkseagreen4, label=object];
n127 -> n153  [key=1, style=dashed, color=darkseagreen4, label=object];
n127 -> n154  [key=1, style=dashed, color=darkseagreen4, label=object];
n127 -> n156  [key=1, style=dashed, color=darkseagreen4, label=object];
n127 -> n158  [key=1, style=dashed, color=darkseagreen4, label=object];
n127 -> n159  [key=1, style=dashed, color=darkseagreen4, label=object];
n127 -> n161  [key=1, style=dashed, color=darkseagreen4, label=object];
n127 -> n162  [key=1, style=dashed, color=darkseagreen4, label=object];
n127 -> n164  [key=1, style=dashed, color=darkseagreen4, label=object];
n127 -> n165  [key=1, style=dashed, color=darkseagreen4, label=object];
n127 -> n167  [key=1, style=dashed, color=red, label=object];
n127 -> n168  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n127 -> n169  [key=1, style=dashed, color=red, label=object];
n127 -> n171  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n127 -> n172  [key=1, style=dashed, color=red, label=object];
n127 -> n174  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n127 -> n175  [key=1, style=dashed, color=red, label=object];
n127 -> n177  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n127 -> n178  [key=1, style=dashed, color=red, label=object];
n127 -> n180  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n127 -> n181  [key=1, style=dashed, color=red, label=object];
n127 -> n183  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n127 -> n184  [key=1, style=dashed, color=darkseagreen4, label=object];
n127 -> n186  [key=1, style=dashed, color=darkseagreen4, label=object];
n127 -> n187  [key=1, style=dashed, color=darkseagreen4, label=object];
n127 -> n190  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n127 -> n191  [key=1, style=dashed, color=darkseagreen4, label=object];
n127 -> n193  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n127 -> n195  [key=1, style=dashed, color=darkseagreen4, label=object];
n127 -> n197  [key=1, style=dashed, color=darkseagreen4, label=object];
n127 -> n198  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n127 -> n199  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n127 -> n203  [key=1, style=dashed, color=darkseagreen4, label=object];
n127 -> n204  [key=1, style=dashed, color=darkseagreen4, label=object];
n127 -> n206  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n127 -> n114  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type targetType"];
n127 -> n132  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
n127 -> n115  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
n127 -> n127  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
n127 -> n36  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
n127 -> n71  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
n127 -> n99  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
n127 -> n230  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
n127 -> n147  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Utilities.ConvertUtils.ConvertResult TryConvertInternal"];
n127 -> n19  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Utilities.ConvertUtils.ConvertResult TryConvertInternal"];
n127 -> n208  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Utilities.ConvertUtils.ConvertResult TryConvertInternal"];
n127 -> n210  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Utilities.ConvertUtils.ConvertResult TryConvertInternal"];
n118 -> n126  [key=0, style=solid];
n126 -> n114  [key=0, style=bold, color=blue];
n132 -> n133  [key=0, style=solid];
n132 -> n134  [key=3, color=darkorchid, style=bold, label="method methodReturn bool TryConvert"];
n132 -> n50  [key=3, color=darkorchid, style=bold, label="method methodReturn bool TryConvert"];
n132 -> n235  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type targetType"];
n132 -> n236  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
n133 -> n134  [key=0, style=solid];
n133 -> n135  [key=0, style=solid];
n133 -> n127  [key=2, style=dotted];
n134 -> n139  [key=0, style=solid];
n135 -> n136  [key=0, style=solid];
n136 -> n139  [key=0, style=solid];
n137 -> n138  [key=0, style=solid];
n137 -> n139  [key=1, style=dashed, color=darkseagreen4, label="out object"];
n138 -> n139  [key=0, style=solid];
n139 -> n132  [key=0, style=bold, color=blue];
n140 -> n141  [key=0, style=solid];
n140 -> n142  [key=0, style=solid];
n142 -> n143  [key=0, style=solid];
n142 -> n144  [key=0, style=solid];
n142 -> n24  [key=2, style=dotted];
n143 -> n144  [key=0, style=solid];
n143 -> n25  [key=2, style=dotted];
n143 -> n143  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n143 -> n145  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n143 -> n148  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n143 -> n149  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n143 -> n151  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n143 -> n154  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n143 -> n156  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n143 -> n158  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n143 -> n161  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n143 -> n164  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n143 -> n168  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n143 -> n171  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n143 -> n174  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n143 -> n177  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n143 -> n180  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n143 -> n183  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n143 -> n187  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n143 -> n190  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n143 -> n191  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n143 -> n193  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n143 -> n198  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n143 -> n199  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n143 -> n204  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n143 -> n206  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n144 -> n145  [key=0, style=solid];
n144 -> n97  [key=2, style=dotted];
n144 -> n189  [key=1, style=dashed, color=darkseagreen4, label=initialType];
n144 -> n194  [key=1, style=dashed, color=darkseagreen4, label=initialType];
n144 -> n199  [key=1, style=dashed, color=darkseagreen4, label=initialType];
n144 -> n204  [key=1, style=dashed, color=darkseagreen4, label=initialType];
n145 -> n146  [key=0, style=solid];
n145 -> n148  [key=0, style=solid];
n146 -> n147  [key=0, style=solid];
n148 -> n149  [key=0, style=solid];
n148 -> n158  [key=0, style=solid];
n148 -> n97  [key=2, style=dotted];
n148 -> n32  [key=2, style=dotted];
n149 -> n150  [key=0, style=solid];
n149 -> n156  [key=0, style=solid];
n149 -> n22  [key=2, style=dotted];
n150 -> n151  [key=0, style=solid];
n150 -> n153  [key=0, style=solid];
n151 -> n152  [key=0, style=solid];
n151 -> n213  [key=2, style=dotted];
n151 -> n214  [key=2, style=dotted];
n153 -> n154  [key=0, style=solid];
n153 -> n156  [key=0, style=solid];
n153 -> n215  [key=2, style=dotted];
n154 -> n155  [key=0, style=solid];
n154 -> n216  [key=2, style=dotted];
n156 -> n157  [key=0, style=solid];
n156 -> n112  [key=2, style=dotted];
n158 -> n159  [key=0, style=solid];
n158 -> n161  [key=0, style=solid];
n159 -> n160  [key=0, style=solid];
n159 -> n217  [key=2, style=dotted];
n161 -> n162  [key=0, style=solid];
n161 -> n164  [key=0, style=solid];
n162 -> n163  [key=0, style=solid];
n162 -> n218  [key=2, style=dotted];
n164 -> n165  [key=0, style=solid];
n164 -> n167  [key=0, style=solid, color=red];
n165 -> n166  [key=0, style=solid];
n165 -> n219  [key=2, style=dotted];
n167 -> n168  [key=0, style=solid, color=red];
n167 -> n183  [key=0, style=solid, color=red];
n168 -> n169  [key=0, style=solid, color=red];
n168 -> n171  [key=0, style=solid];
n169 -> n170  [key=0, style=solid, color=red];
n169 -> n220  [key=2, style=dotted, color=red];
n171 -> n172  [key=0, style=solid, color=red];
n171 -> n174  [key=0, style=solid];
n172 -> n173  [key=0, style=solid, color=red];
n172 -> n221  [key=2, style=dotted, color=red];
n174 -> n175  [key=0, style=solid, color=red];
n174 -> n177  [key=0, style=solid];
n175 -> n176  [key=0, style=solid, color=red];
n175 -> n36  [key=2, style=dotted, color=red];
n177 -> n178  [key=0, style=solid, color=red];
n177 -> n180  [key=0, style=solid];
n178 -> n179  [key=0, style=solid, color=red];
n178 -> n222  [key=2, style=dotted, color=red];
n180 -> n181  [key=0, style=solid, color=red];
n180 -> n183  [key=0, style=solid];
n180 -> n35  [key=2, style=dotted];
n181 -> n182  [key=0, style=solid, color=red];
n181 -> n223  [key=2, style=dotted, color=red];
n183 -> n184  [key=0, style=solid];
n183 -> n186  [key=0, style=solid];
n184 -> n185  [key=0, style=solid];
n184 -> n71  [key=2, style=dotted];
n186 -> n187  [key=0, style=solid];
n186 -> n189  [key=0, style=solid];
n187 -> n188  [key=0, style=solid];
n187 -> n99  [key=2, style=dotted];
n190 -> n191  [key=0, style=solid];
n190 -> n193  [key=0, style=solid];
n190 -> n225  [key=2, style=dotted];
n191 -> n192  [key=0, style=solid];
n191 -> n226  [key=2, style=dotted];
n193 -> n194  [key=0, style=solid];
n193 -> n224  [key=2, style=dotted];
n193 -> n195  [key=1, style=dashed, color=darkseagreen4, label=fromConverter];
n195 -> n196  [key=0, style=solid];
n195 -> n228  [key=2, style=dotted];
n197 -> n198  [key=0, style=solid];
n197 -> n203  [key=0, style=solid];
n198 -> n199  [key=0, style=solid];
n198 -> n201  [key=0, style=solid];
n198 -> n229  [key=2, style=dotted];
n199 -> n200  [key=0, style=solid];
n199 -> n230  [key=2, style=dotted];
n203 -> n204  [key=0, style=solid];
n203 -> n206  [key=0, style=solid];
n204 -> n205  [key=0, style=solid];
n204 -> n231  [key=2, style=dotted];
n204 -> n230  [key=2, style=dotted];
n206 -> n207  [key=0, style=solid];
n206 -> n209  [key=0, style=solid];
n206 -> n232  [key=2, style=dotted];
n206 -> n233  [key=2, style=dotted];
n206 -> n234  [key=2, style=dotted];
n141 -> n211  [key=0, style=solid];
n141 -> n212  [key=2, style=dotted];
n189 -> n190  [key=0, style=solid];
n189 -> n224  [key=2, style=dotted];
n189 -> n191  [key=1, style=dashed, color=darkseagreen4, label=toConverter];
n194 -> n195  [key=0, style=solid];
n194 -> n197  [key=0, style=solid];
n194 -> n227  [key=2, style=dotted];
n147 -> n211  [key=0, style=solid];
n152 -> n211  [key=0, style=solid];
n215 -> n281  [key=0, style=solid];
n215 -> n127  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
n215 -> n134  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsInteger"];
n215 -> n50  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsInteger"];
n155 -> n211  [key=0, style=solid];
n157 -> n211  [key=0, style=solid];
n160 -> n211  [key=0, style=solid];
n163 -> n211  [key=0, style=solid];
n166 -> n211  [key=0, style=solid];
n170 -> n211  [key=0, style=solid];
n173 -> n211  [key=0, style=solid];
n176 -> n211  [key=0, style=solid];
n179 -> n211  [key=0, style=solid];
n182 -> n211  [key=0, style=solid];
n185 -> n211  [key=0, style=solid];
n188 -> n211  [key=0, style=solid];
n224 -> n278  [key=0, style=solid];
n224 -> n144  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type t"];
n224 -> n127  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type t"];
n192 -> n211  [key=0, style=solid];
n196 -> n211  [key=0, style=solid];
n201 -> n202  [key=0, style=solid];
n200 -> n211  [key=0, style=solid];
n230 -> n246  [key=0, style=solid];
n230 -> n247  [key=1, style=dashed, color=darkseagreen4, label=object];
n230 -> n248  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n230 -> n249  [key=1, style=dashed, color=darkseagreen4, label=object];
n230 -> n250  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n230 -> n252  [key=1, style=dashed, color=darkseagreen4, label=object];
n230 -> n253  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n230 -> n255  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n230 -> n61  [key=3, color=darkorchid, style=bold, label="method methodReturn object EnsureTypeAssignable"];
n230 -> n231  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
n230 -> n235  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type targetType"];
n230 -> n144  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type initialType"];
n230 -> n127  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type targetType"];
n230 -> n230  [key=3, color=darkorchid, style=bold, label="method methodReturn object EnsureTypeAssignable"];
n202 -> n211  [key=0, style=solid];
n205 -> n211  [key=0, style=solid];
n231 -> n261  [key=0, style=solid];
n231 -> n263  [key=1, style=dashed, color=darkseagreen4, label=INullable];
n231 -> n264  [key=1, style=dashed, color=darkseagreen4, label=INullable];
n231 -> n265  [key=1, style=dashed, color=darkseagreen4, label=INullable];
n231 -> n266  [key=1, style=dashed, color=darkseagreen4, label=INullable];
n231 -> n267  [key=1, style=dashed, color=darkseagreen4, label=INullable];
n231 -> n268  [key=1, style=dashed, color=darkseagreen4, label=INullable];
n231 -> n269  [key=1, style=dashed, color=darkseagreen4, label=INullable];
n231 -> n270  [key=1, style=dashed, color=darkseagreen4, label=INullable];
n231 -> n271  [key=1, style=dashed, color=darkseagreen4, label=INullable];
n231 -> n272  [key=1, style=dashed, color=darkseagreen4, label=INullable];
n231 -> n273  [key=1, style=dashed, color=darkseagreen4, label=INullable];
n231 -> n127  [key=3, color=darkorchid, style=bold, label="Parameter variable INullable nullableValue"];
n231 -> n61  [key=3, color=darkorchid, style=bold, label="method methodReturn object ToValue"];
n207 -> n208  [key=0, style=solid];
n209 -> n210  [key=0, style=solid];
n209 -> n211  [key=1, style=dashed, color=darkseagreen4, label="out object"];
n208 -> n211  [key=0, style=solid];
n210 -> n211  [key=0, style=solid];
n211 -> n127  [key=0, style=bold, color=blue];
n235 -> n236  [key=0, style=solid];
n235 -> n237  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n235 -> n238  [key=1, style=dashed, color=darkseagreen4, label=object];
n235 -> n239  [key=1, style=dashed, color=darkseagreen4, label=object];
n235 -> n241  [key=1, style=dashed, color=darkseagreen4, label=object];
n235 -> n243  [key=1, style=dashed, color=darkseagreen4, label=object];
n235 -> n235  [key=3, color=darkorchid, style=bold, label="method methodReturn object ConvertOrCast"];
n235 -> n61  [key=3, color=darkorchid, style=bold, label="method methodReturn object ConvertOrCast"];
n235 -> n230  [key=3, color=darkorchid, style=bold, label="method methodReturn object ConvertOrCast"];
n236 -> n237  [key=0, style=solid];
n237 -> n238  [key=0, style=solid];
n237 -> n239  [key=0, style=solid];
n238 -> n244  [key=0, style=solid];
n239 -> n240  [key=0, style=solid];
n239 -> n241  [key=0, style=solid];
n239 -> n229  [key=2, style=dotted];
n241 -> n242  [key=0, style=solid];
n241 -> n243  [key=0, style=solid];
n241 -> n132  [key=2, style=dotted];
n243 -> n244  [key=0, style=solid];
n243 -> n245  [key=2, style=dotted];
n243 -> n230  [key=2, style=dotted];
n240 -> n244  [key=0, style=solid];
n242 -> n244  [key=0, style=solid];
n244 -> n235  [key=0, style=bold, color=blue];
n246 -> n247  [key=0, style=solid];
n246 -> n97  [key=2, style=dotted];
n246 -> n248  [key=1, style=dashed, color=darkseagreen4, label=valueType];
n246 -> n250  [key=1, style=dashed, color=darkseagreen4, label=valueType];
n247 -> n248  [key=0, style=solid];
n247 -> n253  [key=0, style=solid];
n248 -> n249  [key=0, style=solid];
n248 -> n250  [key=0, style=solid];
n248 -> n35  [key=2, style=dotted];
n249 -> n256  [key=0, style=solid];
n250 -> n251  [key=0, style=solid];
n250 -> n40  [key=2, style=dotted];
n250 -> n257  [key=2, style=dotted];
n250 -> n252  [key=1, style=dashed, color=darkseagreen4, label=castConverter];
n252 -> n256  [key=0, style=solid];
n252 -> n258  [key=2, style=dotted];
n253 -> n254  [key=0, style=solid];
n253 -> n255  [key=0, style=solid];
n253 -> n229  [key=2, style=dotted];
n255 -> n256  [key=0, style=solid];
n255 -> n259  [key=2, style=dotted];
n255 -> n260  [key=2, style=dotted];
n255 -> n129  [key=2, style=dotted];
n251 -> n252  [key=0, style=solid];
n251 -> n255  [key=0, style=solid];
n254 -> n256  [key=0, style=solid];
n256 -> n230  [key=0, style=bold, color=blue];
n261 -> n262  [key=0, style=solid];
n261 -> n263  [key=0, style=solid];
n263 -> n264  [key=0, style=solid];
n263 -> n265  [key=0, style=solid];
n264 -> n274  [key=0, style=solid];
n264 -> n275  [key=2, style=dotted];
n265 -> n266  [key=0, style=solid];
n265 -> n267  [key=0, style=solid];
n266 -> n274  [key=0, style=solid];
n266 -> n275  [key=2, style=dotted];
n267 -> n268  [key=0, style=solid];
n267 -> n269  [key=0, style=solid];
n268 -> n274  [key=0, style=solid];
n268 -> n275  [key=2, style=dotted];
n269 -> n270  [key=0, style=solid];
n269 -> n271  [key=0, style=solid];
n270 -> n274  [key=0, style=solid];
n270 -> n275  [key=2, style=dotted];
n271 -> n272  [key=0, style=solid];
n271 -> n273  [key=0, style=solid];
n272 -> n274  [key=0, style=solid];
n272 -> n275  [key=2, style=dotted];
n273 -> n274  [key=0, style=solid];
n273 -> n259  [key=2, style=dotted];
n273 -> n276  [key=2, style=dotted];
n273 -> n277  [key=2, style=dotted];
n262 -> n274  [key=0, style=solid];
n274 -> n231  [key=0, style=bold, color=blue];
n278 -> n279  [key=0, style=solid];
n278 -> n280  [key=2, style=dotted];
n279 -> n224  [key=0, style=bold, color=blue];
n281 -> n282  [key=0, style=solid];
n281 -> n291  [key=0, style=solid];
n281 -> n97  [key=2, style=dotted];
n281 -> n0  [key=2, style=dotted];
n282 -> n283  [key=0, style=solid];
n291 -> n292  [key=0, style=solid];
n283 -> n284  [key=0, style=solid];
n284 -> n285  [key=0, style=solid];
n285 -> n286  [key=0, style=solid];
n286 -> n287  [key=0, style=solid];
n287 -> n288  [key=0, style=solid];
n288 -> n289  [key=0, style=solid];
n289 -> n290  [key=0, style=solid];
n290 -> n292  [key=0, style=solid];
n292 -> n215  [key=0, style=bold, color=blue];
n293 -> n294  [key=0, style=solid];
n293 -> n295  [key=1, style=dashed, color=darkseagreen4, label=int];
n293 -> n297  [key=1, style=dashed, color=darkseagreen4, label="char[]"];
n293 -> n299  [key=1, style=dashed, color=darkseagreen4, label=int];
n293 -> n301  [key=1, style=dashed, color=darkseagreen4, label=int];
n293 -> n302  [key=1, style=dashed, color=darkseagreen4, label=int];
n293 -> n303  [key=1, style=dashed, color=darkseagreen4, label=int];
n293 -> n304  [key=1, style=dashed, color=darkseagreen4, label="char[]"];
n293 -> n305  [key=1, style=dashed, color=darkseagreen4, label=int];
n293 -> n307  [key=1, style=dashed, color=darkseagreen4, label="char[]"];
n293 -> n312  [key=1, style=dashed, color=darkseagreen4, label=int];
n293 -> n314  [key=1, style=dashed, color=darkseagreen4, label="char[]"];
n293 -> n321  [key=1, style=dashed, color=darkseagreen4, label="char[]"];
n293 -> n210  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Utilities.ParseResult Int32TryParse"];
n293 -> n208  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Utilities.ParseResult Int32TryParse"];
n293 -> n19  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Utilities.ParseResult Int32TryParse"];
n293 -> n317  [key=3, color=darkorchid, style=bold, label="Parameter variable int value"];
n294 -> n295  [key=0, style=solid];
n294 -> n317  [key=1, style=dashed, color=darkseagreen4, label="out int"];
n294 -> n318  [key=1, style=dashed, color=darkseagreen4, label="out int"];
n294 -> n329  [key=1, style=dashed, color=darkseagreen4, label="out int"];
n294 -> n331  [key=1, style=dashed, color=darkseagreen4, label="out int"];
n294 -> n333  [key=1, style=dashed, color=darkseagreen4, label="out int"];
n295 -> n296  [key=0, style=solid];
n295 -> n297  [key=0, style=solid];
n297 -> n298  [key=0, style=solid];
n297 -> n328  [key=1, style=dashed, color=darkseagreen4, label=isNegative];
n299 -> n300  [key=0, style=solid];
n299 -> n301  [key=0, style=solid];
n301 -> n302  [key=0, style=solid];
n301 -> n301  [key=1, style=dashed, color=darkseagreen4, label=int];
n301 -> n303  [key=1, style=dashed, color=darkseagreen4, label=int];
n301 -> n304  [key=1, style=dashed, color=darkseagreen4, label=int];
n301 -> n305  [key=1, style=dashed, color=darkseagreen4, label=int];
n301 -> n312  [key=1, style=dashed, color=darkseagreen4, label=int];
n302 -> n303  [key=0, style=solid];
n302 -> n302  [key=1, style=dashed, color=darkseagreen4, label=int];
n302 -> n304  [key=1, style=dashed, color=darkseagreen4, label=int];
n303 -> n304  [key=0, style=solid];
n303 -> n306  [key=1, style=dashed, color=darkseagreen4, label=end];
n303 -> n313  [key=1, style=dashed, color=darkseagreen4, label=end];
n303 -> n320  [key=1, style=dashed, color=darkseagreen4, label=end];
n304 -> n305  [key=0, style=solid];
n304 -> n312  [key=0, style=solid];
n305 -> n306  [key=0, style=solid];
n305 -> n307  [key=1, style=dashed, color=darkseagreen4, label=i];
n305 -> n310  [key=1, style=dashed, color=darkseagreen4, label=i];
n305 -> n293  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
n307 -> n308  [key=0, style=solid];
n312 -> n313  [key=0, style=solid];
n312 -> n314  [key=1, style=dashed, color=darkseagreen4, label=i];
n312 -> n319  [key=1, style=dashed, color=darkseagreen4, label=i];
n312 -> n327  [key=1, style=dashed, color=darkseagreen4, label=i];
n312 -> n293  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
n314 -> n315  [key=0, style=solid];
n314 -> n317  [key=1, style=dashed, color=darkseagreen4, label=c];
n321 -> n322  [key=0, style=solid];
n317 -> n318  [key=0, style=solid];
n317 -> n326  [key=1, style=dashed, color=darkseagreen4, label=newValue];
n318 -> n319  [key=0, style=solid];
n318 -> n326  [key=0, style=solid];
n329 -> n330  [key=0, style=solid];
n329 -> n331  [key=0, style=solid];
n331 -> n332  [key=0, style=solid];
n331 -> n331  [key=1, style=dashed, color=darkseagreen4, label="out int"];
n331 -> n333  [key=1, style=dashed, color=darkseagreen4, label="out int"];
n333 -> n293  [key=0, style=bold, color=blue];
n296 -> n333  [key=0, style=solid];
n298 -> n299  [key=0, style=solid];
n298 -> n303  [key=0, style=solid];
n328 -> n329  [key=0, style=solid];
n328 -> n332  [key=0, style=solid];
n300 -> n333  [key=0, style=solid];
n306 -> n307  [key=0, style=solid];
n306 -> n311  [key=0, style=solid];
n313 -> n314  [key=0, style=solid];
n313 -> n328  [key=0, style=solid];
n320 -> n321  [key=0, style=solid];
n320 -> n325  [key=0, style=solid];
n310 -> n306  [key=0, style=solid];
n310 -> n310  [key=1, style=dashed, color=darkseagreen4, label=i];
n311 -> n333  [key=0, style=solid];
n308 -> n309  [key=0, style=solid];
n308 -> n310  [key=0, style=solid];
n309 -> n333  [key=0, style=solid];
n319 -> n320  [key=0, style=solid];
n319 -> n319  [key=1, style=dashed, color=darkseagreen4, label=i];
n319 -> n321  [key=1, style=dashed, color=darkseagreen4, label=i];
n319 -> n324  [key=1, style=dashed, color=darkseagreen4, label=i];
n319 -> n327  [key=1, style=dashed, color=darkseagreen4, label=i];
n327 -> n313  [key=0, style=solid];
n327 -> n327  [key=1, style=dashed, color=darkseagreen4, label=i];
n315 -> n316  [key=0, style=solid];
n315 -> n317  [key=0, style=solid];
n316 -> n333  [key=0, style=solid];
n326 -> n327  [key=0, style=solid];
n326 -> n329  [key=1, style=dashed, color=darkseagreen4, label="out int"];
n326 -> n331  [key=1, style=dashed, color=darkseagreen4, label="out int"];
n326 -> n333  [key=1, style=dashed, color=darkseagreen4, label="out int"];
n324 -> n320  [key=0, style=solid];
n324 -> n324  [key=1, style=dashed, color=darkseagreen4, label=i];
n324 -> n327  [key=1, style=dashed, color=darkseagreen4, label=i];
n325 -> n333  [key=0, style=solid];
n322 -> n323  [key=0, style=solid];
n322 -> n324  [key=0, style=solid];
n323 -> n333  [key=0, style=solid];
n332 -> n333  [key=0, style=solid];
n330 -> n333  [key=0, style=solid];
n334 -> n335  [key=0, style=solid];
n334 -> n336  [key=1, style=dashed, color=darkseagreen4, label=int];
n334 -> n338  [key=1, style=dashed, color=darkseagreen4, label="char[]"];
n334 -> n340  [key=1, style=dashed, color=darkseagreen4, label=int];
n334 -> n342  [key=1, style=dashed, color=darkseagreen4, label=int];
n334 -> n343  [key=1, style=dashed, color=darkseagreen4, label=int];
n334 -> n344  [key=1, style=dashed, color=darkseagreen4, label=int];
n334 -> n345  [key=1, style=dashed, color=darkseagreen4, label=int];
n334 -> n346  [key=1, style=dashed, color=darkseagreen4, label=int];
n334 -> n348  [key=1, style=dashed, color=darkseagreen4, label="char[]"];
n334 -> n353  [key=1, style=dashed, color=darkseagreen4, label=int];
n334 -> n355  [key=1, style=dashed, color=darkseagreen4, label="char[]"];
n334 -> n362  [key=1, style=dashed, color=darkseagreen4, label="char[]"];
n334 -> n210  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Utilities.ParseResult Int64TryParse"];
n334 -> n208  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Utilities.ParseResult Int64TryParse"];
n334 -> n19  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Utilities.ParseResult Int64TryParse"];
n334 -> n358  [key=3, color=darkorchid, style=bold, label="Parameter variable long value"];
n335 -> n336  [key=0, style=solid];
n335 -> n358  [key=1, style=dashed, color=darkseagreen4, label="out long"];
n335 -> n359  [key=1, style=dashed, color=darkseagreen4, label="out long"];
n335 -> n370  [key=1, style=dashed, color=darkseagreen4, label="out long"];
n335 -> n372  [key=1, style=dashed, color=darkseagreen4, label="out long"];
n335 -> n374  [key=1, style=dashed, color=darkseagreen4, label="out long"];
n336 -> n337  [key=0, style=solid];
n336 -> n338  [key=0, style=solid];
n338 -> n339  [key=0, style=solid];
n338 -> n369  [key=1, style=dashed, color=darkseagreen4, label=isNegative];
n340 -> n341  [key=0, style=solid];
n340 -> n342  [key=0, style=solid];
n342 -> n343  [key=0, style=solid];
n342 -> n342  [key=1, style=dashed, color=darkseagreen4, label=int];
n342 -> n344  [key=1, style=dashed, color=darkseagreen4, label=int];
n342 -> n346  [key=1, style=dashed, color=darkseagreen4, label=int];
n342 -> n353  [key=1, style=dashed, color=darkseagreen4, label=int];
n343 -> n344  [key=0, style=solid];
n343 -> n343  [key=1, style=dashed, color=darkseagreen4, label=int];
n343 -> n345  [key=1, style=dashed, color=darkseagreen4, label=int];
n344 -> n345  [key=0, style=solid];
n344 -> n347  [key=1, style=dashed, color=darkseagreen4, label=end];
n344 -> n354  [key=1, style=dashed, color=darkseagreen4, label=end];
n344 -> n361  [key=1, style=dashed, color=darkseagreen4, label=end];
n345 -> n346  [key=0, style=solid];
n345 -> n353  [key=0, style=solid];
n346 -> n347  [key=0, style=solid];
n346 -> n348  [key=1, style=dashed, color=darkseagreen4, label=i];
n346 -> n351  [key=1, style=dashed, color=darkseagreen4, label=i];
n346 -> n334  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
n348 -> n349  [key=0, style=solid];
n353 -> n354  [key=0, style=solid];
n353 -> n355  [key=1, style=dashed, color=darkseagreen4, label=i];
n353 -> n360  [key=1, style=dashed, color=darkseagreen4, label=i];
n353 -> n368  [key=1, style=dashed, color=darkseagreen4, label=i];
n353 -> n334  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
n355 -> n356  [key=0, style=solid];
n355 -> n358  [key=1, style=dashed, color=darkseagreen4, label=c];
n362 -> n363  [key=0, style=solid];
n358 -> n359  [key=0, style=solid];
n358 -> n367  [key=1, style=dashed, color=darkseagreen4, label=newValue];
n359 -> n360  [key=0, style=solid];
n359 -> n367  [key=0, style=solid];
n370 -> n371  [key=0, style=solid];
n370 -> n372  [key=0, style=solid];
n372 -> n373  [key=0, style=solid];
n372 -> n372  [key=1, style=dashed, color=darkseagreen4, label="out long"];
n372 -> n374  [key=1, style=dashed, color=darkseagreen4, label="out long"];
n374 -> n334  [key=0, style=bold, color=blue];
n337 -> n374  [key=0, style=solid];
n339 -> n340  [key=0, style=solid];
n339 -> n344  [key=0, style=solid];
n369 -> n370  [key=0, style=solid];
n369 -> n373  [key=0, style=solid];
n341 -> n374  [key=0, style=solid];
n347 -> n348  [key=0, style=solid];
n347 -> n352  [key=0, style=solid];
n354 -> n355  [key=0, style=solid];
n354 -> n369  [key=0, style=solid];
n361 -> n362  [key=0, style=solid];
n361 -> n366  [key=0, style=solid];
n351 -> n347  [key=0, style=solid];
n351 -> n351  [key=1, style=dashed, color=darkseagreen4, label=i];
n352 -> n374  [key=0, style=solid];
n349 -> n350  [key=0, style=solid];
n349 -> n351  [key=0, style=solid];
n350 -> n374  [key=0, style=solid];
n360 -> n361  [key=0, style=solid];
n360 -> n360  [key=1, style=dashed, color=darkseagreen4, label=i];
n360 -> n362  [key=1, style=dashed, color=darkseagreen4, label=i];
n360 -> n365  [key=1, style=dashed, color=darkseagreen4, label=i];
n360 -> n368  [key=1, style=dashed, color=darkseagreen4, label=i];
n368 -> n354  [key=0, style=solid];
n368 -> n368  [key=1, style=dashed, color=darkseagreen4, label=i];
n356 -> n357  [key=0, style=solid];
n356 -> n358  [key=0, style=solid];
n357 -> n374  [key=0, style=solid];
n367 -> n368  [key=0, style=solid];
n367 -> n370  [key=1, style=dashed, color=darkseagreen4, label="out long"];
n367 -> n372  [key=1, style=dashed, color=darkseagreen4, label="out long"];
n367 -> n374  [key=1, style=dashed, color=darkseagreen4, label="out long"];
n365 -> n361  [key=0, style=solid];
n365 -> n365  [key=1, style=dashed, color=darkseagreen4, label=i];
n365 -> n368  [key=1, style=dashed, color=darkseagreen4, label=i];
n366 -> n374  [key=0, style=solid];
n363 -> n364  [key=0, style=solid];
n363 -> n365  [key=0, style=solid];
n364 -> n374  [key=0, style=solid];
n373 -> n374  [key=0, style=solid];
n371 -> n374  [key=0, style=solid];
n375 -> n376  [key=0, style=solid];
n376 -> n377  [key=0, style=solid];
n376 -> n378  [key=2, style=dotted];
n377 -> n375  [key=0, style=bold, color=blue];
m0_12 -> m0_13  [key=0, style=solid];
m0_12 -> m0_14  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_12 -> m0_15  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_15  [key=0, style=solid];
m0_14 -> m0_16  [key=0, style=solid];
m0_14 -> m0_17  [key=2, style=dotted];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_18  [key=2, style=dotted];
m0_16 -> m0_12  [key=0, style=bold, color=blue];
m0_9 -> m0_10  [key=0, style=solid];
m0_10 -> m0_11  [key=0, style=solid];
m0_11 -> m0_9  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_3  [key=0, style=solid];
m0_2 -> m0_7  [key=0, style=solid];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_6  [key=0, style=solid];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_8  [key=2, style=dotted];
m0_6 -> m0_7  [key=0, style=solid];
m0_5 -> m0_6  [key=0, style=solid];
m0_7 -> m0_0  [key=0, style=bold, color=blue];
m0_19 -> m0_1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_19 -> m0_3  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_19 -> m0_4  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_19 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_19 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_19 -> m0_10  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_19 -> m0_13  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_19 -> m0_14  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_19 -> m0_15  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
}
