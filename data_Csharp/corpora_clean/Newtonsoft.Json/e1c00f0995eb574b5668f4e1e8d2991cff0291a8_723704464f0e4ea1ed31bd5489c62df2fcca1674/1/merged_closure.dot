digraph  {
n379 [label="out Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey", span=""];
n380 [label="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey", span=""];
n381 [label="ref Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey", span=""];
n382 [label=call, span=""];
n0 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type)", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type)", span="184-184"];
n1 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type)", label="bool isEnum", span="186-186"];
n2 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type)", label="return GetTypeCode(t, out isEnum);", span="187-187"];
n3 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type)", label="Exit Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type)", span="184-184"];
n4 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)", span="190-190"];
n5 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)", label="PrimitiveTypeCode typeCode", span="192-192"];
n6 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)", label="TypeCodeMap.TryGetValue(t, out typeCode)", span="193-193"];
n9 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)", label="t.IsEnum()", span="199-199"];
n11 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)", label="return GetTypeCode(Enum.GetUnderlyingType(t));", span="202-202"];
n12 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)", label="ReflectionUtils.IsNullableType(t)", span="206-206"];
n13 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)", label="Type nonNullable = Nullable.GetUnderlyingType(t)", span="208-208"];
n7 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)", label="isEnum = false", span="195-195"];
n21 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
n8 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)", label="return typeCode;", span="196-196"];
n10 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)", label="isEnum = true", span="201-201"];
n22 [cluster="System.Type.IsEnum()", label="Entry System.Type.IsEnum()", span="173-173"];
n18 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)", label="isEnum = false", span="217-217"];
n24 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", span="247-247"];
n14 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)", label="nonNullable.IsEnum()", span="209-209"];
n25 [cluster="System.Nullable.GetUnderlyingType(System.Type)", label="Entry System.Nullable.GetUnderlyingType(System.Type)", span="0-0"];
n15 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)", label="Type nullableUnderlyingType = typeof(Nullable<>).MakeGenericType(Enum.GetUnderlyingType(nonNullable))", span="211-211"];
n16 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)", label="isEnum = true", span="212-212"];
n23 [cluster="System.Enum.GetUnderlyingType(System.Type)", label="Entry System.Enum.GetUnderlyingType(System.Type)", span="0-0"];
n26 [cluster="System.Type.MakeGenericType(params System.Type[])", label="Entry System.Type.MakeGenericType(params System.Type[])", span="0-0"];
n17 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)", label="return GetTypeCode(nullableUnderlyingType);", span="213-213"];
n19 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)", label="return PrimitiveTypeCode.Object;", span="218-218"];
n20 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)", label="Exit Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)", span="190-190"];
n27 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeInformation(System.IConvertible)", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.GetTypeInformation(System.IConvertible)", span="222-222"];
n28 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeInformation(System.IConvertible)", label="TypeInformation typeInformation = PrimitiveTypeCodes[(int)convertable.GetTypeCode()]", span="224-224"];
n29 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeInformation(System.IConvertible)", label="return typeInformation;", span="225-225"];
n31 [cluster="System.IConvertible.GetTypeCode()", label="Entry System.IConvertible.GetTypeCode()", span="0-0"];
n30 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeInformation(System.IConvertible)", label="Exit Newtonsoft.Json.Utilities.ConvertUtils.GetTypeInformation(System.IConvertible)", span="222-222"];
n32 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsConvertible(System.Type)", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.IsConvertible(System.Type)", span="229-229"];
n33 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsConvertible(System.Type)", label="return typeof(IConvertible).IsAssignableFrom(t);", span="232-232"];
n34 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsConvertible(System.Type)", label="Exit Newtonsoft.Json.Utilities.ConvertUtils.IsConvertible(System.Type)", span="229-229"];
n35 [cluster="System.Type.IsAssignableFrom(System.Type)", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
n36 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ParseTimeSpan(string)", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.ParseTimeSpan(string)", span="240-240"];
n37 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ParseTimeSpan(string)", label="return TimeSpan.Parse(input, CultureInfo.InvariantCulture);", span="243-243"];
n38 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ParseTimeSpan(string)", label="Exit Newtonsoft.Json.Utilities.ConvertUtils.ParseTimeSpan(string)", span="240-240"];
n39 [cluster="System.TimeSpan.Parse(string, System.IFormatProvider)", label="Entry System.TimeSpan.Parse(string, System.IFormatProvider)", span="0-0"];
n40 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.TypeConvertKey(System.Type, System.Type)", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.TypeConvertKey(System.Type, System.Type)", span="264-264"];
n41 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.TypeConvertKey(System.Type, System.Type)", label="_initialType = initialType", span="266-266"];
n42 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.TypeConvertKey(System.Type, System.Type)", label="_targetType = targetType", span="267-267"];
n43 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.TypeConvertKey(System.Type, System.Type)", label="Exit Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.TypeConvertKey(System.Type, System.Type)", span="264-264"];
n44 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.GetHashCode()", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.GetHashCode()", span="270-270"];
n45 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.GetHashCode()", label="return _initialType.GetHashCode() ^ _targetType.GetHashCode();", span="272-272"];
n46 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.GetHashCode()", label="Exit Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.GetHashCode()", span="270-270"];
n47 [cluster="System.Type.GetHashCode()", label="Entry System.Type.GetHashCode()", span="0-0"];
n48 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.Equals(object)", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.Equals(object)", span="275-275"];
n49 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.Equals(object)", label="!(obj is TypeConvertKey)", span="277-277"];
n51 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.Equals(object)", label="return Equals((TypeConvertKey)obj);", span="280-280"];
n50 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.Equals(object)", label="return false;", span="278-278"];
n52 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.Equals(object)", label="Exit Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.Equals(object)", span="275-275"];
n53 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.Equals(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.Equals(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)", span="283-283"];
n54 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.Equals(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)", label="return (_initialType == other._initialType && _targetType == other._targetType);", span="285-285"];
n55 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.Equals(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)", label="Exit Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.Equals(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)", span="283-283"];
n56 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.CreateCastConverter(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.CreateCastConverter(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)", span="292-292"];
n57 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.CreateCastConverter(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)", label="MethodInfo castMethodInfo = t.TargetType.GetMethod(''op_Implicit'', new[] { t.InitialType })", span="294-294"];
n58 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.CreateCastConverter(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)", label="castMethodInfo == null", span="295-295"];
n65 [cluster="System.Type.GetMethod(string, System.Type[])", label="Entry System.Type.GetMethod(string, System.Type[])", span="0-0"];
n59 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.CreateCastConverter(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)", label="castMethodInfo = t.TargetType.GetMethod(''op_Explicit'', new[] { t.InitialType })", span="296-296"];
n60 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.CreateCastConverter(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)", label="castMethodInfo == null", span="298-298"];
n62 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.CreateCastConverter(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)", label="MethodCall<object, object> call = JsonTypeReflector.ReflectionDelegateFactory.CreateMethodCall<object>(castMethodInfo)", span="301-301"];
n61 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.CreateCastConverter(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)", label="return null;", span="299-299"];
n63 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.CreateCastConverter(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)", label="return o => call(null, o);", span="303-303"];
n66 [cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", span="64-64"];
n68 [cluster="lambda expression", label="call(null, o)", span="303-303"];
n64 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.CreateCastConverter(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)", label="Exit Newtonsoft.Json.Utilities.ConvertUtils.CreateCastConverter(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)", span="292-292"];
n67 [cluster="lambda expression", label="Entry lambda expression", span="303-303"];
n69 [cluster="lambda expression", label="Exit lambda expression", span="303-303"];
n70 [cluster="Newtonsoft.Json.Utilities.MethodCall<T, TResult>.Invoke(T, params object[])", label="Entry Newtonsoft.Json.Utilities.MethodCall<T, TResult>.Invoke(T, params object[])", span="27-27"];
n71 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", span="307-307"];
n72 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", label="value is BigInteger", span="309-309"];
n73 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", label="return (BigInteger)value;", span="310-310"];
n74 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", label="value is string", span="311-311"];
n75 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", label="return BigInteger.Parse((string)value, CultureInfo.InvariantCulture);", span="312-312"];
n76 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", label="value is float", span="313-313"];
n77 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", label="return new BigInteger((float)value);", span="314-314"];
n78 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", label="value is double", span="315-315"];
n79 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", label="return new BigInteger((double)value);", span="316-316"];
n80 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", label="value is decimal", span="317-317"];
n81 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", label="return new BigInteger((decimal)value);", span="318-318"];
n82 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", label="value is int", span="319-319"];
n83 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", label="return new BigInteger((int)value);", span="320-320"];
n84 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", label="value is long", span="321-321"];
n85 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", label="return new BigInteger((long)value);", span="322-322"];
n86 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", label="value is uint", span="323-323"];
n87 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", label="return new BigInteger((uint)value);", span="324-324"];
n88 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", label="value is ulong", span="325-325"];
n89 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", label="return new BigInteger((ulong)value);", span="326-326"];
n90 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", label="value is byte[]", span="327-327"];
n91 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", label="return new BigInteger((byte[])value);", span="328-328"];
n92 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", label="throw new InvalidCastException(''Cannot convert {0} to BigInteger.''.FormatWith(CultureInfo.InvariantCulture, value.GetType()));", span="330-330"];
n93 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", label="Exit Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", span="307-307"];
n95 [cluster="BigInteger.cstr", label="Entry BigInteger.cstr", span=""];
n96 [cluster="System.InvalidCastException.InvalidCastException(string)", label="Entry System.InvalidCastException.InvalidCastException(string)", span="0-0"];
n97 [cluster="object.GetType()", label="Entry object.GetType()", span="0-0"];
n98 [cluster="string.FormatWith(System.IFormatProvider, object)", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
n94 [cluster="Unk.Parse", label="Entry Unk.Parse", span=""];
n99 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)", span="333-333"];
n100 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)", label="targetType == typeof(decimal)", span="335-335"];
n101 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)", label="return (decimal)i;", span="336-336"];
n102 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)", label="targetType == typeof(double)", span="337-337"];
n103 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)", label="return (double)i;", span="338-338"];
n104 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)", label="targetType == typeof(float)", span="339-339"];
n105 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)", label="return (float)i;", span="340-340"];
n106 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)", label="targetType == typeof(ulong)", span="341-341"];
n107 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)", label="return (ulong)i;", span="342-342"];
n108 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)", label="return System.Convert.ChangeType((long)i, targetType, CultureInfo.InvariantCulture);", span="346-346"];
n110 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)", label="throw new InvalidOperationException(''Can not convert from BigInteger to {0}.''.FormatWith(CultureInfo.InvariantCulture, targetType), ex);", span="350-350"];
n109 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)", label=Exception, span="348-348"];
n111 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)", label="Exit Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)", span="333-333"];
n112 [cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0"];
n113 [cluster="System.InvalidOperationException.InvalidOperationException(string, System.Exception)", label="Entry System.InvalidOperationException.InvalidOperationException(string, System.Exception)", span="0-0"];
n114 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", span="364-364"];
n115 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", label="object value", span="366-366"];
n116 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", label="TryConvertInternal(initialValue, culture, targetType, out value)", span="367-367"];
n120 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", label="throw new Exception(''Can not convert null {0} into non-nullable {1}.''.FormatWith(CultureInfo.InvariantCulture, initialValue.GetType(), targetType));", span="372-372"];
n122 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", label="throw new ArgumentException(''Target type {0} is not a value type or a non-abstract class.''.FormatWith(CultureInfo.InvariantCulture, targetType), ''targetType'');", span="374-374"];
n124 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", label="throw new InvalidOperationException(''Can not convert from {0} to {1}.''.FormatWith(CultureInfo.InvariantCulture, initialValue.GetType(), targetType));", span="376-376"];
n117 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", label="ConvertResult.Success", span="369-369"];
n119 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", label="ConvertResult.CannotConvertNull", span="371-371"];
n121 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", label="ConvertResult.NotInstantiableType", span="373-373"];
n123 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", label="ConvertResult.NoValidConversion", span="375-375"];
n125 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", label="throw new InvalidOperationException(''Unexpected conversion result.'');", span="378-378"];
n127 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", span="399-399"];
n118 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", label="return value;", span="370-370"];
n126 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", label="Exit Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", span="364-364"];
n131 [cluster="System.InvalidOperationException.InvalidOperationException(string)", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
n129 [cluster="string.FormatWith(System.IFormatProvider, object, object)", label="Entry string.FormatWith(System.IFormatProvider, object, object)", span="52-52"];
n130 [cluster="System.ArgumentException.ArgumentException(string, string)", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
n128 [cluster="System.Exception.Exception(string)", label="Entry System.Exception.Exception(string)", span="0-0"];
n132 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvert(object, System.Globalization.CultureInfo, System.Type, out object)", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.TryConvert(object, System.Globalization.CultureInfo, System.Type, out object)", span="382-382"];
n133 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvert(object, System.Globalization.CultureInfo, System.Type, out object)", label="TryConvertInternal(initialValue, culture, targetType, out value) == ConvertResult.Success", span="386-386"];
n134 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvert(object, System.Globalization.CultureInfo, System.Type, out object)", label="return true;", span="387-387"];
n135 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvert(object, System.Globalization.CultureInfo, System.Type, out object)", label="value = null", span="389-389"];
n136 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvert(object, System.Globalization.CultureInfo, System.Type, out object)", label="return false;", span="390-390"];
n137 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvert(object, System.Globalization.CultureInfo, System.Type, out object)", label="value = null", span="394-394"];
n138 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvert(object, System.Globalization.CultureInfo, System.Type, out object)", label="return false;", span="395-395"];
n139 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvert(object, System.Globalization.CultureInfo, System.Type, out object)", label="Exit Newtonsoft.Json.Utilities.ConvertUtils.TryConvert(object, System.Globalization.CultureInfo, System.Type, out object)", span="382-382"];
n140 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="initialValue == null", span="401-401"];
n142 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="ReflectionUtils.IsNullableType(targetType)", span="404-404"];
n143 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="targetType = Nullable.GetUnderlyingType(targetType)", span="405-405"];
n144 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="Type initialType = initialValue.GetType()", span="407-407"];
n145 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="targetType == initialType", span="409-409"];
n146 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="value = initialValue", span="411-411"];
n148 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="ConvertUtils.IsConvertible(initialValue.GetType()) && ConvertUtils.IsConvertible(targetType)", span="416-416"];
n149 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="targetType.IsEnum()", span="418-418"];
n150 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="initialValue is string", span="420-420"];
n151 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="value = Enum.Parse(targetType, initialValue.ToString(), true)", span="422-422"];
n153 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="IsInteger(initialValue)", span="425-425"];
n154 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="value = Enum.ToObject(targetType, initialValue)", span="427-427"];
n156 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="value = System.Convert.ChangeType(initialValue, targetType, culture)", span="432-432"];
n158 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="initialValue is DateTime && targetType == typeof(DateTimeOffset)", span="437-437"];
n159 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="value = new DateTimeOffset((DateTime)initialValue)", span="439-439"];
n161 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="initialValue is byte[] && targetType == typeof(Guid)", span="444-444"];
n162 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="value = new Guid((byte[])initialValue)", span="446-446"];
n164 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="initialValue is Guid && targetType == typeof(byte[])", span="450-450"];
n165 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="value = ((Guid)initialValue).ToByteArray()", span="452-452"];
n168 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="targetType == typeof(Guid)", span="458-458"];
n171 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="targetType == typeof(Uri)", span="463-463"];
n174 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="targetType == typeof(TimeSpan)", span="468-468"];
n177 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="targetType == typeof(byte[])", span="473-473"];
n180 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="typeof(Type).IsAssignableFrom(targetType)", span="478-478"];
n183 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="targetType == typeof(BigInteger)", span="486-486"];
n184 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="value = ToBigInteger(initialValue)", span="488-488"];
n186 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="initialValue is BigInteger", span="491-491"];
n187 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="value = FromBigInteger((BigInteger)initialValue, targetType)", span="493-493"];
n190 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="toConverter != null && toConverter.CanConvertTo(targetType)", span="502-502"];
n191 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="value = toConverter.ConvertTo(null, culture, initialValue, targetType)", span="504-504"];
n193 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="TypeConverter fromConverter = GetConverter(targetType)", span="508-508"];
n195 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="value = fromConverter.ConvertFrom(null, culture, initialValue)", span="512-512"];
n197 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="initialValue == DBNull.Value", span="518-518"];
n198 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="ReflectionUtils.IsNullable(targetType)", span="520-520"];
n199 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="value = EnsureTypeAssignable(null, initialType, targetType)", span="522-522"];
n203 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="initialValue is INullable", span="532-532"];
n204 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="value = EnsureTypeAssignable(ToValue((INullable)initialValue), initialType, targetType)", span="534-534"];
n206 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="targetType.IsInterface() || targetType.IsGenericTypeDefinition() || targetType.IsAbstract()", span="539-539"];
n141 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="throw new ArgumentNullException(''initialValue'');", span="402-402"];
n189 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="TypeConverter toConverter = GetConverter(initialType)", span="500-500"];
n194 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="fromConverter != null && fromConverter.CanConvertFrom(initialType)", span="510-510"];
n147 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="return ConvertResult.Success;", span="412-412"];
n152 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="return ConvertResult.Success;", span="423-423"];
n213 [cluster="object.ToString()", label="Entry object.ToString()", span="0-0"];
n214 [cluster="System.Enum.Parse(System.Type, string, bool)", label="Entry System.Enum.Parse(System.Type, string, bool)", span="0-0"];
n215 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", span="628-628"];
n155 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="return ConvertResult.Success;", span="428-428"];
n216 [cluster="System.Enum.ToObject(System.Type, object)", label="Entry System.Enum.ToObject(System.Type, object)", span="0-0"];
n157 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="return ConvertResult.Success;", span="433-433"];
n160 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="return ConvertResult.Success;", span="440-440"];
n217 [cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime)", label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime)", span="0-0"];
n163 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="return ConvertResult.Success;", span="447-447"];
n218 [cluster="System.Guid.Guid(byte[])", label="Entry System.Guid.Guid(byte[])", span="0-0"];
n166 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="return ConvertResult.Success;", span="453-453"];
n219 [cluster="System.Guid.ToByteArray()", label="Entry System.Guid.ToByteArray()", span="0-0"];
n170 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="return ConvertResult.Success;", span="461-461"];
n220 [cluster="System.Guid.Guid(string)", label="Entry System.Guid.Guid(string)", span="0-0"];
n173 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="return ConvertResult.Success;", span="466-466"];
n221 [cluster="System.Uri.Uri(string, System.UriKind)", label="Entry System.Uri.Uri(string, System.UriKind)", span="0-0"];
n176 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="return ConvertResult.Success;", span="471-471"];
n179 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="return ConvertResult.Success;", span="476-476"];
n222 [cluster="System.Convert.FromBase64String(string)", label="Entry System.Convert.FromBase64String(string)", span="0-0"];
n182 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="return ConvertResult.Success;", span="481-481"];
n223 [cluster="System.Type.GetType(string, bool)", label="Entry System.Type.GetType(string, bool)", span="0-0"];
n185 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="return ConvertResult.Success;", span="489-489"];
n188 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="return ConvertResult.Success;", span="494-494"];
n224 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetConverter(System.Type)", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.GetConverter(System.Type)", span="622-622"];
n225 [cluster="System.ComponentModel.TypeConverter.CanConvertTo(System.Type)", label="Entry System.ComponentModel.TypeConverter.CanConvertTo(System.Type)", span="0-0"];
n192 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="return ConvertResult.Success;", span="505-505"];
n226 [cluster="System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", label="Entry System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", span="0-0"];
n227 [cluster="System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)", label="Entry System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)", span="0-0"];
n196 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="return ConvertResult.Success;", span="513-513"];
n228 [cluster="System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", label="Entry System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", span="0-0"];
n201 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="value = null", span="527-527"];
n229 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", span="237-237"];
n200 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="return ConvertResult.Success;", span="523-523"];
n230 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", span="579-579"];
n202 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="return ConvertResult.CannotConvertNull;", span="528-528"];
n205 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="return ConvertResult.Success;", span="535-535"];
n231 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", span="602-602"];
n207 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="value = null", span="541-541"];
n209 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="value = null", span="545-545"];
n232 [cluster="System.Type.IsInterface()", label="Entry System.Type.IsInterface()", span="128-128"];
n233 [cluster="System.Type.IsGenericTypeDefinition()", label="Entry System.Type.IsGenericTypeDefinition()", span="146-146"];
n234 [cluster="System.Type.IsAbstract()", label="Entry System.Type.IsAbstract()", span="492-492"];
n208 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="return ConvertResult.NotInstantiableType;", span="542-542"];
n210 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="return ConvertResult.NoValidConversion;", span="546-546"];
n211 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="Exit Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", span="399-399"];
n212 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
n235 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", span="562-562"];
n236 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", label="object convertedValue", span="564-564"];
n237 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", label="targetType == typeof(object)", span="566-566"];
n238 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", label="return initialValue;", span="567-567"];
n239 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", label="initialValue == null && ReflectionUtils.IsNullable(targetType)", span="569-569"];
n241 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", label="TryConvert(initialValue, culture, targetType, out convertedValue)", span="572-572"];
n243 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", label="return EnsureTypeAssignable(initialValue, ReflectionUtils.GetObjectType(initialValue), targetType);", span="575-575"];
n240 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", label="return null;", span="570-570"];
n242 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", label="return convertedValue;", span="573-573"];
n244 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", label="Exit Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", span="562-562"];
n245 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", span="136-136"];
n246 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", label="Type valueType = (value != null) ? value.GetType() : null", span="581-581"];
n247 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", label="value != null", span="583-583"];
n248 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", label="targetType.IsAssignableFrom(valueType)", span="585-585"];
n249 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", label="return value;", span="586-586"];
n250 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", label="Func<object, object> castConverter = CastConverters.Get(new TypeConvertKey(valueType, targetType))", span="588-588"];
n252 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", label="return castConverter(value);", span="590-590"];
n253 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", label="ReflectionUtils.IsNullable(targetType)", span="594-594"];
n255 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", label="throw new ArgumentException(''Could not cast or convert from {0} to {1}.''.FormatWith(CultureInfo.InvariantCulture, (initialType != null) ? initialType.ToString() : ''{null}'', targetType));", span="598-598"];
n251 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", label="castConverter != null", span="589-589"];
n257 [cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)", label="Entry Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)", span="50-50"];
n254 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", label="return null;", span="595-595"];
n256 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", label="Exit Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", span="579-579"];
n259 [cluster="System.ArgumentException.ArgumentException(string)", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
n260 [cluster="System.Type.ToString()", label="Entry System.Type.ToString()", span="0-0"];
n258 [cluster="System.Func<T, TResult>.Invoke(T)", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
n261 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", label="nullableValue == null", span="604-604"];
n263 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", label="nullableValue is SqlInt32", span="606-606"];
n264 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", label="return ToValue((SqlInt32)nullableValue);", span="607-607"];
n265 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", label="nullableValue is SqlInt64", span="608-608"];
n266 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", label="return ToValue((SqlInt64)nullableValue);", span="609-609"];
n267 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", label="nullableValue is SqlBoolean", span="610-610"];
n268 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", label="return ToValue((SqlBoolean)nullableValue);", span="611-611"];
n269 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", label="nullableValue is SqlString", span="612-612"];
n270 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", label="return ToValue((SqlString)nullableValue);", span="613-613"];
n271 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", label="nullableValue is SqlDateTime", span="614-614"];
n272 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", label="return ToValue((SqlDateTime)nullableValue);", span="615-615"];
n273 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", label="throw new ArgumentException(''Unsupported INullable type: {0}''.FormatWith(CultureInfo.InvariantCulture, nullableValue.GetType()));", span="617-617"];
n262 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", label="return null;", span="605-605"];
n274 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", label="Exit Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", span="602-602"];
n276 [cluster="Unk.GetType", label="Entry Unk.GetType", span=""];
n277 [cluster="Unk.FormatWith", label="Entry Unk.FormatWith", span=""];
n275 [cluster="Unk.ToValue", label="Entry Unk.ToValue", span=""];
n278 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetConverter(System.Type)", label="return JsonTypeReflector.GetTypeConverter(t);", span="624-624"];
n279 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetConverter(System.Type)", label="Exit Newtonsoft.Json.Utilities.ConvertUtils.GetConverter(System.Type)", span="622-622"];
n280 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetTypeConverter(System.Type)", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetTypeConverter(System.Type)", span="217-217"];
n281 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", label="GetTypeCode(value.GetType())", span="630-630"];
n282 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", label="PrimitiveTypeCode.SByte", span="632-632"];
n291 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", label="return false;", span="642-642"];
n283 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", label="PrimitiveTypeCode.Byte", span="633-633"];
n284 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", label="PrimitiveTypeCode.Int16", span="634-634"];
n285 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", label="PrimitiveTypeCode.UInt16", span="635-635"];
n286 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", label="PrimitiveTypeCode.Int32", span="636-636"];
n287 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", label="PrimitiveTypeCode.UInt32", span="637-637"];
n288 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", label="PrimitiveTypeCode.Int64", span="638-638"];
n289 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", label="PrimitiveTypeCode.UInt64", span="639-639"];
n290 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", label="return true;", span="640-640"];
n292 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", label="Exit Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", span="628-628"];
n293 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", span="646-646"];
n294 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="value = 0", span="648-648"];
n295 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="length == 0", span="650-650"];
n297 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="bool isNegative = (chars[start] == '-')", span="653-653"];
n299 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="length == 1", span="658-658"];
n301 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="start++", span="661-661"];
n302 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="length--", span="662-662"];
n303 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="int end = start + length", span="665-665"];
n304 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="length > 10 || (length == 10 && chars[start] - '0' > 2)", span="670-670"];
n305 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="int i = start", span="673-673"];
n307 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="int c = chars[i] - '0'", span="675-675"];
n312 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="int i = start", span="684-684"];
n314 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="int c = chars[i] - '0'", span="686-686"];
n321 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="c = chars[i] - '0'", span="702-702"];
n317 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="int newValue = (10 * value) - c", span="691-691"];
n318 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="newValue > value", span="694-694"];
n329 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="value == int.MinValue", span="719-719"];
n331 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="value = -value", span="722-722"];
n333 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="Exit Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", span="646-646"];
n296 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="return ParseResult.Invalid;", span="651-651"];
n298 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label=isNegative, span="655-655"];
n328 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="!isNegative", span="716-716"];
n300 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="return ParseResult.Invalid;", span="659-659"];
n306 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="i < end", span="673-673"];
n313 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="i < end", span="684-684"];
n320 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="i < end", span="700-700"];
n310 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="i++", span="673-673"];
n311 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="return ParseResult.Overflow;", span="681-681"];
n308 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="c < 0 || c > 9", span="677-677"];
n309 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="return ParseResult.Invalid;", span="678-678"];
n319 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="i++", span="696-696"];
n327 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="i++", span="684-684"];
n315 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="c < 0 || c > 9", span="688-688"];
n316 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="return ParseResult.Invalid;", span="689-689"];
n326 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="value = newValue", span="711-711"];
n324 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="i++", span="700-700"];
n325 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="return ParseResult.Overflow;", span="708-708"];
n322 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="c < 0 || c > 9", span="704-704"];
n323 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="return ParseResult.Invalid;", span="705-705"];
n332 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="return ParseResult.Success;", span="725-725"];
n330 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="return ParseResult.Overflow;", span="720-720"];
n334 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", span="728-728"];
n335 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="value = 0", span="730-730"];
n336 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="length == 0", span="732-732"];
n338 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="bool isNegative = (chars[start] == '-')", span="735-735"];
n340 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="length == 1", span="740-740"];
n342 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="start++", span="743-743"];
n343 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="length--", span="744-744"];
n344 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="int end = start + length", span="747-747"];
n345 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="length > 19", span="750-750"];
n346 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="int i = start", span="753-753"];
n348 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="int c = chars[i] - '0'", span="755-755"];
n353 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="int i = start", span="764-764"];
n355 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="int c = chars[i] - '0'", span="766-766"];
n362 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="c = chars[i] - '0'", span="782-782"];
n358 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="long newValue = (10 * value) - c", span="771-771"];
n359 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="newValue > value", span="774-774"];
n370 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="value == long.MinValue", span="799-799"];
n372 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="value = -value", span="802-802"];
n374 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="Exit Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", span="728-728"];
n337 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="return ParseResult.Invalid;", span="733-733"];
n339 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label=isNegative, span="737-737"];
n369 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="!isNegative", span="796-796"];
n341 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="return ParseResult.Invalid;", span="741-741"];
n347 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="i < end", span="753-753"];
n354 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="i < end", span="764-764"];
n361 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="i < end", span="780-780"];
n351 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="i++", span="753-753"];
n352 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="return ParseResult.Overflow;", span="761-761"];
n349 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="c < 0 || c > 9", span="757-757"];
n350 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="return ParseResult.Invalid;", span="758-758"];
n360 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="i++", span="776-776"];
n368 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="i++", span="764-764"];
n356 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="c < 0 || c > 9", span="768-768"];
n357 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="return ParseResult.Invalid;", span="769-769"];
n367 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="value = newValue", span="791-791"];
n365 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="i++", span="780-780"];
n366 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="return ParseResult.Overflow;", span="788-788"];
n363 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="c < 0 || c > 9", span="784-784"];
n364 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="return ParseResult.Invalid;", span="785-785"];
n373 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="return ParseResult.Success;", span="805-805"];
n371 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="return ParseResult.Overflow;", span="800-800"];
n375 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertGuid(string, out System.Guid)", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.TryConvertGuid(string, out System.Guid)", span="808-808"];
n376 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertGuid(string, out System.Guid)", label="return Guid.TryParseExact(s, ''D'', out g);", span="826-826"];
n377 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertGuid(string, out System.Guid)", label="Exit Newtonsoft.Json.Utilities.ConvertUtils.TryConvertGuid(string, out System.Guid)", span="808-808"];
n378 [cluster="System.Guid.TryParseExact(string, string, out System.Guid)", label="Entry System.Guid.TryParseExact(string, string, out System.Guid)", span="0-0"];
m0_18 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="JsonProperty.cs", label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="407-407"];
m0_12 [cluster="Newtonsoft.Json.Serialization.JsonProperty.WritePropertyName(Newtonsoft.Json.JsonWriter)", file="JsonProperty.cs", label="Entry Newtonsoft.Json.Serialization.JsonProperty.WritePropertyName(Newtonsoft.Json.JsonWriter)", span="285-285"];
m0_13 [cluster="Newtonsoft.Json.Serialization.JsonProperty.WritePropertyName(Newtonsoft.Json.JsonWriter)", file="JsonProperty.cs", label=_skipPropertyNameEscape, span="287-287"];
m0_14 [cluster="Newtonsoft.Json.Serialization.JsonProperty.WritePropertyName(Newtonsoft.Json.JsonWriter)", file="JsonProperty.cs", label="writer.WritePropertyName(PropertyName, false)", span="288-288"];
m0_15 [cluster="Newtonsoft.Json.Serialization.JsonProperty.WritePropertyName(Newtonsoft.Json.JsonWriter)", file="JsonProperty.cs", label="writer.WritePropertyName(PropertyName)", span="290-290"];
m0_16 [cluster="Newtonsoft.Json.Serialization.JsonProperty.WritePropertyName(Newtonsoft.Json.JsonWriter)", file="JsonProperty.cs", label="Exit Newtonsoft.Json.Serialization.JsonProperty.WritePropertyName(Newtonsoft.Json.JsonWriter)", span="285-285"];
m0_9 [cluster="Newtonsoft.Json.Serialization.JsonProperty.ToString()", file="JsonProperty.cs", label="Entry Newtonsoft.Json.Serialization.JsonProperty.ToString()", span="256-256"];
m0_10 [cluster="Newtonsoft.Json.Serialization.JsonProperty.ToString()", file="JsonProperty.cs", label="return PropertyName;", span="258-258"];
m0_11 [cluster="Newtonsoft.Json.Serialization.JsonProperty.ToString()", file="JsonProperty.cs", label="Exit Newtonsoft.Json.Serialization.JsonProperty.ToString()", span="256-256"];
m0_0 [cluster="Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", file="JsonProperty.cs", label="Entry Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", span="170-170"];
m0_1 [cluster="Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", file="JsonProperty.cs", label="_propertyType == null", span="172-172"];
m0_2 [cluster="Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", file="JsonProperty.cs", label="return null;", span="173-173"];
m0_3 [cluster="Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", file="JsonProperty.cs", label="!_hasExplicitDefaultValue && !_hasGeneratedDefaultValue", span="175-175"];
m0_4 [cluster="Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", file="JsonProperty.cs", label="_defaultValue = ReflectionUtils.GetDefaultValue(PropertyType)", span="177-177"];
m0_6 [cluster="Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", file="JsonProperty.cs", label="return _defaultValue;", span="181-181"];
m0_5 [cluster="Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", file="JsonProperty.cs", label="_hasGeneratedDefaultValue = true", span="178-178"];
m0_7 [cluster="Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", file="JsonProperty.cs", label="Exit Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", span="170-170"];
m0_17 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string, bool)", file="JsonProperty.cs", label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string, bool)", span="417-417"];
m0_8 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="JsonProperty.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", span="992-992"];
m0_19 [file="JsonProperty.cs", label="Newtonsoft.Json.Serialization.JsonProperty", span=""];
n380 -> n45  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey", style=dashed];
n380 -> n51  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey", style=dashed];
n380 -> n54  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey", style=dashed];
n381 -> n52  [color=darkseagreen4, key=1, label="ref Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey", style=dashed];
n382 -> n68  [color=darkseagreen4, key=1, label=call, style=dashed];
n0 -> n2  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n4 -> n6  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n4 -> n9  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n4 -> n11  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n4 -> n12  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n6 -> n8  [color=darkseagreen4, key=1, label=typeCode, style=dashed];
n18 -> n20  [color=darkseagreen4, key=1, label="out bool", style=dashed];
n15 -> n17  [color=darkseagreen4, key=1, label=nullableUnderlyingType, style=dashed];
n41 -> n379  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey", style=dashed];
n42 -> n379  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey", style=dashed];
n48 -> n51  [color=darkseagreen4, key=1, label=object, style=dashed];
n51 -> n381  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey", style=dashed];
n57 -> n60  [color=darkseagreen4, key=1, label=castMethodInfo, style=dashed];
n62 -> n68  [color=darkseagreen4, key=1, label=call, style=dashed];
n63 -> n68  [color=darkseagreen4, key=1, label=object, style=dashed];
n71 -> n73  [color=darkseagreen4, key=1, label=object, style=dashed];
n71 -> n74  [color=darkseagreen4, key=1, label=object, style=dashed];
n71 -> n75  [color=darkseagreen4, key=1, label=object, style=dashed];
n71 -> n76  [color=darkseagreen4, key=1, label=object, style=dashed];
n71 -> n77  [color=darkseagreen4, key=1, label=object, style=dashed];
n71 -> n78  [color=darkseagreen4, key=1, label=object, style=dashed];
n71 -> n79  [color=darkseagreen4, key=1, label=object, style=dashed];
n71 -> n80  [color=darkseagreen4, key=1, label=object, style=dashed];
n71 -> n81  [color=darkseagreen4, key=1, label=object, style=dashed];
n71 -> n82  [color=darkseagreen4, key=1, label=object, style=dashed];
n71 -> n83  [color=darkseagreen4, key=1, label=object, style=dashed];
n71 -> n84  [color=darkseagreen4, key=1, label=object, style=dashed];
n71 -> n85  [color=darkseagreen4, key=1, label=object, style=dashed];
n71 -> n86  [color=darkseagreen4, key=1, label=object, style=dashed];
n71 -> n87  [color=darkseagreen4, key=1, label=object, style=dashed];
n71 -> n88  [color=darkseagreen4, key=1, label=object, style=dashed];
n71 -> n89  [color=darkseagreen4, key=1, label=object, style=dashed];
n71 -> n90  [color=darkseagreen4, key=1, label=object, style=dashed];
n71 -> n91  [color=darkseagreen4, key=1, label=object, style=dashed];
n71 -> n92  [color=darkseagreen4, key=1, label=object, style=dashed];
n99 -> n101  [color=darkseagreen4, key=1, label=BigInteger, style=dashed];
n99 -> n102  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n99 -> n103  [color=darkseagreen4, key=1, label=BigInteger, style=dashed];
n99 -> n104  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n99 -> n105  [color=darkseagreen4, key=1, label=BigInteger, style=dashed];
n99 -> n106  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n99 -> n107  [color=darkseagreen4, key=1, label=BigInteger, style=dashed];
n99 -> n108  [color=darkseagreen4, key=1, label=BigInteger, style=dashed];
n99 -> n110  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n114 -> n116  [color=darkseagreen4, key=1, label=object, style=dashed];
n114 -> n120  [color=darkseagreen4, key=1, label=object, style=dashed];
n114 -> n122  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n114 -> n124  [color=darkseagreen4, key=1, label=object, style=dashed];
n116 -> n118  [color=darkseagreen4, key=1, label=value, style=dashed];
n127 -> n142  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n127 -> n145  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n127 -> n148  [color=darkseagreen4, key=1, label=object, style=dashed];
n127 -> n149  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n127 -> n150  [color=darkseagreen4, key=1, label=object, style=dashed];
n127 -> n153  [color=darkseagreen4, key=1, label=object, style=dashed];
n127 -> n158  [color=darkseagreen4, key=1, label=object, style=dashed];
n127 -> n161  [color=darkseagreen4, key=1, label=object, style=dashed];
n127 -> n164  [color=darkseagreen4, key=1, label=object, style=dashed];
n127 -> n168  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n127 -> n171  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n127 -> n174  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n127 -> n177  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n127 -> n180  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n127 -> n183  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n127 -> n186  [color=darkseagreen4, key=1, label=object, style=dashed];
n127 -> n190  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n127 -> n197  [color=darkseagreen4, key=1, label=object, style=dashed];
n127 -> n198  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n127 -> n203  [color=darkseagreen4, key=1, label=object, style=dashed];
n127 -> n206  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n137 -> n139  [color=darkseagreen4, key=1, label="out object", style=dashed];
n143 -> n145  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n143 -> n148  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n143 -> n149  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n143 -> n158  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n143 -> n161  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n143 -> n164  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n143 -> n168  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n143 -> n171  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n143 -> n174  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n143 -> n177  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n143 -> n180  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n143 -> n183  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n143 -> n190  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n143 -> n198  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n143 -> n206  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n144 -> n194  [color=darkseagreen4, key=1, label=initialType, style=dashed];
n230 -> n247  [color=darkseagreen4, key=1, label=object, style=dashed];
n230 -> n248  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n230 -> n249  [color=darkseagreen4, key=1, label=object, style=dashed];
n230 -> n252  [color=darkseagreen4, key=1, label=object, style=dashed];
n230 -> n253  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n230 -> n255  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n231 -> n263  [color=darkseagreen4, key=1, label=INullable, style=dashed];
n231 -> n264  [color=darkseagreen4, key=1, label=INullable, style=dashed];
n231 -> n265  [color=darkseagreen4, key=1, label=INullable, style=dashed];
n231 -> n266  [color=darkseagreen4, key=1, label=INullable, style=dashed];
n231 -> n267  [color=darkseagreen4, key=1, label=INullable, style=dashed];
n231 -> n268  [color=darkseagreen4, key=1, label=INullable, style=dashed];
n231 -> n269  [color=darkseagreen4, key=1, label=INullable, style=dashed];
n231 -> n270  [color=darkseagreen4, key=1, label=INullable, style=dashed];
n231 -> n271  [color=darkseagreen4, key=1, label=INullable, style=dashed];
n231 -> n272  [color=darkseagreen4, key=1, label=INullable, style=dashed];
n231 -> n273  [color=darkseagreen4, key=1, label=INullable, style=dashed];
n209 -> n211  [color=darkseagreen4, key=1, label="out object", style=dashed];
n235 -> n237  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n235 -> n238  [color=darkseagreen4, key=1, label=object, style=dashed];
n235 -> n239  [color=darkseagreen4, key=1, label=object, style=dashed];
n235 -> n241  [color=darkseagreen4, key=1, label=object, style=dashed];
n235 -> n243  [color=darkseagreen4, key=1, label=object, style=dashed];
n246 -> n248  [color=darkseagreen4, key=1, label=valueType, style=dashed];
n250 -> n252  [color=darkseagreen4, key=1, label=castConverter, style=dashed];
n293 -> n295  [color=darkseagreen4, key=1, label=int, style=dashed];
n293 -> n299  [color=darkseagreen4, key=1, label=int, style=dashed];
n293 -> n301  [color=darkseagreen4, key=1, label=int, style=dashed];
n293 -> n302  [color=darkseagreen4, key=1, label=int, style=dashed];
n293 -> n304  [color=darkseagreen4, key=1, label="char[]", style=dashed];
n294 -> n318  [color=darkseagreen4, key=1, label="out int", style=dashed];
n294 -> n329  [color=darkseagreen4, key=1, label="out int", style=dashed];
n294 -> n333  [color=darkseagreen4, key=1, label="out int", style=dashed];
n297 -> n328  [color=darkseagreen4, key=1, label=isNegative, style=dashed];
n301 -> n301  [color=darkseagreen4, key=1, label=int, style=dashed];
n301 -> n304  [color=darkseagreen4, key=1, label=int, style=dashed];
n302 -> n302  [color=darkseagreen4, key=1, label=int, style=dashed];
n302 -> n304  [color=darkseagreen4, key=1, label=int, style=dashed];
n303 -> n306  [color=darkseagreen4, key=1, label=end, style=dashed];
n303 -> n313  [color=darkseagreen4, key=1, label=end, style=dashed];
n303 -> n320  [color=darkseagreen4, key=1, label=end, style=dashed];
n305 -> n310  [color=darkseagreen4, key=1, label=i, style=dashed];
n312 -> n319  [color=darkseagreen4, key=1, label=i, style=dashed];
n312 -> n327  [color=darkseagreen4, key=1, label=i, style=dashed];
n331 -> n333  [color=darkseagreen4, key=1, label="out int", style=dashed];
n310 -> n310  [color=darkseagreen4, key=1, label=i, style=dashed];
n319 -> n319  [color=darkseagreen4, key=1, label=i, style=dashed];
n319 -> n324  [color=darkseagreen4, key=1, label=i, style=dashed];
n319 -> n327  [color=darkseagreen4, key=1, label=i, style=dashed];
n327 -> n327  [color=darkseagreen4, key=1, label=i, style=dashed];
n326 -> n329  [color=darkseagreen4, key=1, label="out int", style=dashed];
n326 -> n333  [color=darkseagreen4, key=1, label="out int", style=dashed];
n324 -> n324  [color=darkseagreen4, key=1, label=i, style=dashed];
n324 -> n327  [color=darkseagreen4, key=1, label=i, style=dashed];
n334 -> n336  [color=darkseagreen4, key=1, label=int, style=dashed];
n334 -> n340  [color=darkseagreen4, key=1, label=int, style=dashed];
n334 -> n342  [color=darkseagreen4, key=1, label=int, style=dashed];
n334 -> n343  [color=darkseagreen4, key=1, label=int, style=dashed];
n334 -> n345  [color=darkseagreen4, key=1, label=int, style=dashed];
n335 -> n359  [color=darkseagreen4, key=1, label="out long", style=dashed];
n335 -> n370  [color=darkseagreen4, key=1, label="out long", style=dashed];
n335 -> n374  [color=darkseagreen4, key=1, label="out long", style=dashed];
n338 -> n369  [color=darkseagreen4, key=1, label=isNegative, style=dashed];
n342 -> n342  [color=darkseagreen4, key=1, label=int, style=dashed];
n343 -> n343  [color=darkseagreen4, key=1, label=int, style=dashed];
n343 -> n345  [color=darkseagreen4, key=1, label=int, style=dashed];
n344 -> n347  [color=darkseagreen4, key=1, label=end, style=dashed];
n344 -> n354  [color=darkseagreen4, key=1, label=end, style=dashed];
n344 -> n361  [color=darkseagreen4, key=1, label=end, style=dashed];
n346 -> n351  [color=darkseagreen4, key=1, label=i, style=dashed];
n353 -> n360  [color=darkseagreen4, key=1, label=i, style=dashed];
n353 -> n368  [color=darkseagreen4, key=1, label=i, style=dashed];
n372 -> n374  [color=darkseagreen4, key=1, label="out long", style=dashed];
n351 -> n351  [color=darkseagreen4, key=1, label=i, style=dashed];
n360 -> n360  [color=darkseagreen4, key=1, label=i, style=dashed];
n360 -> n365  [color=darkseagreen4, key=1, label=i, style=dashed];
n360 -> n368  [color=darkseagreen4, key=1, label=i, style=dashed];
n368 -> n368  [color=darkseagreen4, key=1, label=i, style=dashed];
n367 -> n370  [color=darkseagreen4, key=1, label="out long", style=dashed];
n367 -> n374  [color=darkseagreen4, key=1, label="out long", style=dashed];
n365 -> n365  [color=darkseagreen4, key=1, label=i, style=dashed];
n365 -> n368  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_12 -> m0_14  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m0_12 -> m0_15  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m0_19 -> m0_1  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m0_19 -> m0_3  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m0_19 -> m0_6  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m0_19 -> m0_10  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m0_19 -> m0_13  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m0_19 -> m0_14  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m0_19 -> m0_15  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
}
