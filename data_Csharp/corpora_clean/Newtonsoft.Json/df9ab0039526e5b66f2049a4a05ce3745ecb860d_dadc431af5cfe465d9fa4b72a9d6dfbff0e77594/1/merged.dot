digraph  {
n0 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Schema.JsonSchemaParse.Example()", span="36-36", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.JsonSchemaParse.Example()"];
n1 [label="string schemaJson = @''{\r\n              'description': 'A person',\r\n              'type': 'object',\r\n              'properties': {\r\n                'name': {'type':'string'},\r\n                'hobbies': {\r\n                  'type': 'array',\r\n                  'items': {'type':'string'}\r\n                }\r\n              }\r\n            }''", span="39-49", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.JsonSchemaParse.Example()"];
n2 [label="JsonSchema schema = JsonSchema.Parse(schemaJson)", span="51-51", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.JsonSchemaParse.Example()"];
n3 [label="Console.WriteLine(schema.Type)", span="53-53", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.JsonSchemaParse.Example()"];
n7 [label="Entry Newtonsoft.Json.Schema.JsonSchema.Parse(string)", span="294-294", cluster="Newtonsoft.Json.Schema.JsonSchema.Parse(string)"];
n4 [label="schema.Properties", span="56-56", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.JsonSchemaParse.Example()"];
n8 [label="Entry System.Console.WriteLine(object)", span="0-0", cluster="System.Console.WriteLine(object)"];
n5 [label="Console.WriteLine(property.Key + '' - '' + property.Value.Type)", span="58-58", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.JsonSchemaParse.Example()"];
n6 [label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Schema.JsonSchemaParse.Example()", span="36-36", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.JsonSchemaParse.Example()"];
n9 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)"];
d1 [label="Account account = new Account\r\n            {\r\n                FullName = ''Joe User'',\r\n                EmailAddress = ''joe@example.com'',\r\n                PasswordHash = ''VHdlZXQgJ1F1aWNrc2lsdmVyJyB0byBASmFtZXNOSw==''\r\n            }", span="56-61", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.PropertyJsonIgnore.Example()", color=green, community=0];
d0 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.PropertyJsonIgnore.Example()", span="53-53", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.PropertyJsonIgnore.Example()"];
d2 [label="string json = JsonConvert.SerializeObject(account)", span="63-63", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.PropertyJsonIgnore.Example()"];
d6 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.PropertyJsonIgnore.Account.Account()", span="42-42", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.PropertyJsonIgnore.Account.Account()"];
d5 [label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Serializer.PropertyJsonIgnore.Example()", span="53-53", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.PropertyJsonIgnore.Example()"];
d3 [label="Console.WriteLine(json)", span="65-65", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.PropertyJsonIgnore.Example()"];
d7 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="512-512", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)"];
d4 [label="Assert.AreEqual(@''{''''FullName'''':''''Joe User'''',''''EmailAddress'''':''''joe@example.com''''}'', json)", span="69-69", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.PropertyJsonIgnore.Example()"];
d8 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)"];
d9 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual"];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n1 -> n1  [key=3, color=darkorchid, style=bold, label="Local variable string schemaJson"];
n2 -> n3  [key=0, style=solid];
n2 -> n7  [key=2, style=dotted];
n2 -> n4  [key=1, style=dashed, color=darkseagreen4, label=schema];
n3 -> n4  [key=0, style=solid];
n3 -> n8  [key=2, style=dotted];
n4 -> n5  [key=0, style=solid];
n4 -> n6  [key=0, style=solid];
n5 -> n4  [key=0, style=solid];
n5 -> n9  [key=2, style=dotted];
n5 -> n5  [key=1, style=dashed, color=darkseagreen4, label=property];
n6 -> n0  [key=0, style=bold, color=blue];
d1 -> d2  [key=0, style=solid, color=green];
d1 -> d6  [key=2, style=dotted, color=green];
d0 -> d1  [key=0, style=solid, color=green];
d2 -> d3  [key=0, style=solid];
d2 -> d7  [key=2, style=dotted];
d2 -> d4  [key=1, style=dashed, color=darkseagreen4, label=json];
d5 -> d0  [key=0, style=bold, color=blue];
d3 -> d4  [key=0, style=solid];
d3 -> d8  [key=2, style=dotted];
d4 -> d5  [key=0, style=solid];
d4 -> d9  [key=2, style=dotted];
}
