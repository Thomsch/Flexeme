digraph  {
m0_688 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="1206-1206"];
m0_689 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DefaultContractResolver.cs", label="Assert.AreEqual(55, reader.LineNumber)", span="1207-1207"];
m0_690 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="1208-1208"];
m0_691 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DefaultContractResolver.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="1209-1209"];
m0_692 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="1211-1211"];
m0_153 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="DefaultContractResolver.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="268-268"];
m0_191 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="323-323"];
m0_904 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", span="1498-1498"];
m0_939 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DefaultContractResolver.cs", label="Assert.AreEqual(json, sb.ToString())", span="1557-1557"];
m0_934 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DefaultContractResolver.cs", label="object jsonObject = serializer.Deserialize(new JsonTextReader(new StringReader(json)))", span="1544-1544"];
m0_932 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DefaultContractResolver.cs", label="string json = sb.ToString()", span="1540-1540"];
m0_938 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DefaultContractResolver.cs", label="serializer.Serialize(jsonWriter, jsonObject)", span="1554-1554"];
m0_935 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DefaultContractResolver.cs", label="sb = new StringBuilder()", span="1546-1546"];
m0_933 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DefaultContractResolver.cs", label="JsonSerializer serializer = new JsonSerializer()", span="1542-1542"];
m0_905 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DefaultContractResolver.cs", label="StringBuilder sb = new StringBuilder()", span="1500-1500"];
m0_931 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DefaultContractResolver.cs", label="jsonWriter.WriteEndArray()", span="1537-1537"];
m0_937 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DefaultContractResolver.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)\r\n            {\r\n                Formatting = Formatting.Indented\r\n            }", span="1549-1552"];
m0_936 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DefaultContractResolver.cs", label="sw = new StringWriter(sb)", span="1547-1547"];
m0_906 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DefaultContractResolver.cs", label="StringWriter sw = new StringWriter(sb)", span="1501-1501"];
m0_907 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DefaultContractResolver.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)\r\n            {\r\n                Formatting = Formatting.Indented\r\n            }", span="1503-1506"];
m0_930 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DefaultContractResolver.cs", label="jsonWriter.WriteNull()", span="1536-1536"];
m0_908 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DefaultContractResolver.cs", label="jsonWriter.WriteStartArray()", span="1508-1508"];
m0_909 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DefaultContractResolver.cs", label="jsonWriter.WriteValue(true)", span="1509-1509"];
m0_910 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DefaultContractResolver.cs", label="jsonWriter.WriteStartObject()", span="1511-1511"];
m0_911 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DefaultContractResolver.cs", label="jsonWriter.WritePropertyName(''integer'')", span="1512-1512"];
m0_912 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DefaultContractResolver.cs", label="jsonWriter.WriteValue(99)", span="1513-1513"];
m0_913 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DefaultContractResolver.cs", label="jsonWriter.WritePropertyName(''string'')", span="1514-1514"];
m0_914 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DefaultContractResolver.cs", label="jsonWriter.WriteValue(''how now brown cow?'')", span="1515-1515"];
m0_915 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DefaultContractResolver.cs", label="jsonWriter.WritePropertyName(''array'')", span="1516-1516"];
m0_916 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DefaultContractResolver.cs", label="jsonWriter.WriteStartArray()", span="1518-1518"];
m0_919 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DefaultContractResolver.cs", label="jsonWriter.WriteValue(i)", span="1521-1521"];
m0_921 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DefaultContractResolver.cs", label="jsonWriter.WriteStartObject()", span="1524-1524"];
m0_922 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DefaultContractResolver.cs", label="jsonWriter.WritePropertyName(''decimal'')", span="1525-1525"];
m0_923 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DefaultContractResolver.cs", label="jsonWriter.WriteValue(990.00990099m)", span="1526-1526"];
m0_924 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DefaultContractResolver.cs", label="jsonWriter.WriteEndObject()", span="1527-1527"];
m0_925 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DefaultContractResolver.cs", label="jsonWriter.WriteValue(5)", span="1529-1529"];
m0_926 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DefaultContractResolver.cs", label="jsonWriter.WriteEndArray()", span="1530-1530"];
m0_927 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DefaultContractResolver.cs", label="jsonWriter.WriteEndObject()", span="1532-1532"];
m0_928 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DefaultContractResolver.cs", label="jsonWriter.WriteValue(''This is a string.'')", span="1534-1534"];
m0_929 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DefaultContractResolver.cs", label="jsonWriter.WriteNull()", span="1535-1535"];
m0_917 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DefaultContractResolver.cs", label="int i = 0", span="1519-1519"];
m0_918 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DefaultContractResolver.cs", label="i < 5", span="1519-1519"];
m0_920 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DefaultContractResolver.cs", label="i++", span="1519-1519"];
m0_940 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", span="1498-1498"];
m0_569 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="DefaultContractResolver.cs", label="Assert.AreEqual(typeof(long), reader.ValueType)", span="991-991"];
m0_30 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="List<MemberInfo> defaultMembers = ReflectionUtils.GetFieldsAndProperties(objectType, DefaultMembersSearchFlags)\r\n                    .Where(m => !ReflectionUtils.IsIndexedProperty(m)).ToList()", span="224-225"];
m0_34 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="serializableMembers.Add(member)", span="236-236"];
m0_36 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="serializableMembers.Add(member)", span="244-244"];
m0_39 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="memberSerialization == MemberSerialization.Fields && member.MemberType() == MemberTypes.Field", span="256-256"];
m0_32 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="SerializeCompilerGeneratedMembers || !member.IsDefined(typeof(CompilerGeneratedAttribute), true)", span="231-231"];
m0_33 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="defaultMembers.Contains(member)", span="233-233"];
m0_35 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="JsonTypeReflector.GetAttribute<JsonPropertyAttribute>(member) != null", span="242-242"];
m0_38 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="serializableMembers.Add(member)", span="248-248"];
m0_40 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="serializableMembers.Add(member)", span="258-258"];
m0_37 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="JsonTypeReflector.GetAttribute<JsonRequiredAttribute>(member) != null", span="246-246"];
m0_31 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label=allMembers, span="228-228"];
m0_41 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label=allMembers, span="276-276"];
m0_505 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsJsonPrimitiveType(System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.IsJsonPrimitiveType(System.Type)", span="1185-1185"];
m0_272 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParameterizedConstructor(System.Type)", file="DefaultContractResolver.cs", label="constructors.Length == 1", span="623-623"];
m0_244 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="DefaultContractResolver.cs", label="objectType == typeof(Version)", span="571-571"];
m0_537 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="DefaultContractResolver.cs", label="Assert.IsFalse(reader.Read())", span="923-923"];
m0_1819 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Entry lambda expression", span="2920-2920"];
m0_57 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonTextReader.TokenType)", span="146-146"];
m0_61 [cluster="lambda expression", file="DefaultContractResolver.cs", label="jsonTextReader.ReadAsInt32()", span="131-131"];
m0_58 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="DefaultContractResolver.cs", label="Assert.IsFalse(jsonTextReader.Read())", span="148-148"];
m0_59 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", span="115-115"];
m0_62 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="131-131"];
m0_63 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Entry lambda expression", span="135-135"];
m0_117 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", span="328-328"];
m0_116 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="214-214"];
m0_118 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Entry lambda expression", span="219-219"];
m0_127 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="233-233"];
m0_136 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="242-242"];
m0_128 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="235-235"];
m0_129 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="236-236"];
m0_130 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="238-238"];
m0_131 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="239-239"];
m0_132 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="DefaultContractResolver.cs", label="ExceptionAssert.Throws<JsonReaderException>(''Unexpected content while parsing JSON. Path 'u', line 1, position 27.'',\r\n                () => { reader.Read(); })", span="241-242"];
m0_137 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", span="246-246"];
m0_140 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="DefaultContractResolver.cs", label="reader.FloatParseHandling = Json.FloatParseHandling.Decimal", span="251-251"];
m0_142 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="254-254"];
m0_143 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="256-256"];
m0_144 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="DefaultContractResolver.cs", label="Assert.AreEqual(1.0m, reader.Value)", span="257-257"];
m0_151 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="266-266"];
m0_138 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="DefaultContractResolver.cs", label="string json = ''[1.0,1,9.9,1E-06]''", span="248-248"];
m0_139 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="250-250"];
m0_141 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="253-253"];
m0_145 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="DefaultContractResolver.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="258-258"];
m0_146 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="259-259"];
m0_147 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="261-261"];
m0_148 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="DefaultContractResolver.cs", label="Assert.AreEqual(1L, reader.Value)", span="262-262"];
m0_149 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="DefaultContractResolver.cs", label="Assert.AreEqual(typeof(long), reader.ValueType)", span="263-263"];
m0_150 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="264-264"];
m0_152 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", color=green, community=0, file="DefaultContractResolver.cs", label="0: Assert.AreEqual(9.9m, reader.Value)", span="267-267"];
m0_207 [cluster="System.Globalization.StringInfo.StringInfo(string)", file="DefaultContractResolver.cs", label="Entry System.Globalization.StringInfo.StringInfo(string)", span="0-0"];
m0_204 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="DefaultContractResolver.cs", label="Assert.AreEqual(1, stringInfo.LengthInTextElements)", span="400-400"];
m0_219 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="DefaultContractResolver.cs", label="Assert.AreEqual(''ABC \ufffd '', ReadString(''ABC \\ud800 ''))", span="434-434"];
m0_206 [cluster="object.ToString()", file="DefaultContractResolver.cs", label="Entry object.ToString()", span="0-0"];
m0_209 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="DefaultContractResolver.cs", label="Assert.AreEqual(''ABC \ud800\udc00 DEF'', ReadString(''ABC \\ud800\\udc00 DEF''))", span="407-407"];
m0_208 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", span="404-404"];
m0_210 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="DefaultContractResolver.cs", label="Assert.AreEqual(''ABC \ufffd\ufffd DEF'', ReadString(''ABC \\ud800\\ud800 DEF''))", span="410-410"];
m0_222 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", span="438-438"];
m0_203 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="DefaultContractResolver.cs", label="StringInfo stringInfo = new StringInfo(s)", span="399-399"];
m0_205 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", span="384-384"];
m0_211 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="DefaultContractResolver.cs", label="Assert.AreEqual(''ABC \ufffd\ufffd\u1234 DEF'', ReadString(''ABC \\ud800\\ud800\\u1234 DEF''))", span="413-413"];
m0_218 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="DefaultContractResolver.cs", label="Assert.AreEqual(''ABC \ufffd\b'', ReadString(''ABC \\ud800\\b''))", span="433-433"];
m0_220 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="DefaultContractResolver.cs", label="Assert.AreEqual(''ABC \b\ufffd'', ReadString(''ABC \\b\\ud800''))", span="435-435"];
m0_221 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", span="404-404"];
m0_223 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="DefaultContractResolver.cs", label="MemoryStream ms = new MemoryStream(Encoding.UTF8.GetBytes(@'''''''' + input + @''''''''))", span="440-440"];
m0_252 [cluster="Newtonsoft.Json.JsonReader.Read()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.JsonReader.Read()", span="365-365"];
m0_253 [cluster="System.Console.WriteLine(object)", file="DefaultContractResolver.cs", label="Entry System.Console.WriteLine(object)", span="0-0"];
m0_254 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", span="502-502"];
m0_442 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DefaultContractResolver.cs", label="Assert.AreEqual(2, reader.Depth)", span="799-799"];
m0_441 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DefaultContractResolver.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.StartArray)", span="798-798"];
m0_443 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DefaultContractResolver.cs", label="Assert.AreEqual(''subobject.proparray'', reader.Path)", span="800-800"];
m0_557 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="DefaultContractResolver.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                    ''JSON integer '' + total + '' is too large or small for an Int32. Path '', line 1, position 10.'',\r\n                    () =>\r\n                    {\r\n                        reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)));\r\n                        reader.ReadAsInt32();\r\n                    })", span="974-980"];
m0_558 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="DefaultContractResolver.cs", label="j++", span="971-971"];
m0_559 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", span="963-963"];
m0_667 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="1148-1148"];
m0_666 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="DefaultContractResolver.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''{aww''))", span="1147-1147"];
m0_668 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="DefaultContractResolver.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unexpected end while parsing unquoted property name. Path '', line 1, position 4.'',\r\n                () => { reader.Read(); })", span="1150-1152"];
m0_682 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DefaultContractResolver.cs", label="Assert.AreEqual(7, reader.LineNumber)", span="1197-1197"];
m0_681 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="1196-1196"];
m0_683 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="1199-1199"];
m0_465 [cluster="Newtonsoft.Json.Serialization.JsonPrimitiveContract.JsonPrimitiveContract(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonPrimitiveContract.JsonPrimitiveContract(System.Type)", span="42-42"];
m0_562 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", span="1328-1328"];
m0_578 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="memberSerialization != MemberSerialization.Fields", span="1366-1366"];
m0_112 [cluster="System.Type.IsValueType()", file="DefaultContractResolver.cs", label="Entry System.Type.IsValueType()", span="535-535"];
m0_135 [cluster="Unk.GetFields", file="DefaultContractResolver.cs", label="Entry Unk.GetFields", span=""];
m0_172 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="ReflectionUtils.IsGenericDefinition(t, typeof(IDictionary<,>))", span="466-466"];
m0_279 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DefaultContractResolver.cs", label="JsonProperty matchingMemberProperty = MatchProperty(memberProperties, parameterInfo.Name, parameterInfo.ParameterType)", span="645-645"];
m0_297 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="JsonProperty property = new JsonProperty()", span="690-690"];
m0_310 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="property._required = property._required ?? matchingMemberProperty._required", span="712-712"];
m0_864 [cluster="lambda expression", file="DefaultContractResolver.cs", label="reader.Read()", span="1445-1445"];
m0_899 [cluster="lambda expression", file="DefaultContractResolver.cs", label="reader.Read()", span="1483-1483"];
m0_902 [cluster="lambda expression", file="DefaultContractResolver.cs", label="reader.Read()", span="1494-1494"];
m0_1077 [cluster="lambda expression", file="DefaultContractResolver.cs", label="reader.Read()", span="1747-1747"];
m0_1155 [cluster="lambda expression", file="DefaultContractResolver.cs", label="reader.Read()", span="1859-1859"];
m0_1400 [cluster="lambda expression", file="DefaultContractResolver.cs", label="reader.Read()", span="2236-2236"];
m0_1407 [cluster="lambda expression", file="DefaultContractResolver.cs", label="reader.Read()", span="2246-2246"];
m0_1414 [cluster="lambda expression", file="DefaultContractResolver.cs", label="reader.Read()", span="2256-2256"];
m0_1421 [cluster="lambda expression", file="DefaultContractResolver.cs", label="reader.Read()", span="2266-2266"];
m0_1428 [cluster="lambda expression", file="DefaultContractResolver.cs", label="reader.Read()", span="2276-2276"];
m0_1561 [cluster="lambda expression", file="DefaultContractResolver.cs", label="reader.Read()", span="2510-2510"];
m0_1569 [cluster="lambda expression", file="DefaultContractResolver.cs", label="reader.Read()", span="2521-2521"];
m0_1600 [cluster="lambda expression", file="DefaultContractResolver.cs", label="reader.Read()", span="2569-2569"];
m0_1617 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2593-2593"];
m0_1781 [cluster="lambda expression", file="DefaultContractResolver.cs", label="reader.Read()", span="2858-2858"];
m0_1876 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="3005-3005"];
m0_1908 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="3023-3023"];
m0_1911 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="3043-3043"];
m0_2033 [cluster="lambda expression", file="DefaultContractResolver.cs", label="jsonTextReader.Read()", span="3203-3203"];
m0_2036 [cluster="lambda expression", file="DefaultContractResolver.cs", label="jsonTextReader.Read()", span="3206-3206"];
m0_2039 [cluster="lambda expression", file="DefaultContractResolver.cs", label="jsonTextReader.Read()", span="3217-3217"];
m0_2042 [cluster="lambda expression", file="DefaultContractResolver.cs", label="jsonTextReader.Read()", span="3228-3228"];
m0_2045 [cluster="lambda expression", file="DefaultContractResolver.cs", label="jsonTextReader.Read()", span="3231-3231"];
m0_2048 [cluster="lambda expression", file="DefaultContractResolver.cs", label="jsonTextReader.Read()", span="3234-3234"];
m0_44 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="serializableMembers.Add(member)", span="281-281"];
m0_64 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", span="310-310"];
m0_67 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="bool ignoreSerializableAttribute", span="315-315"];
m0_70 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="contract.Properties.AddRange(CreateProperties(contract.NonNullableUnderlyingType, contract.MemberSerialization))", span="323-323"];
m0_85 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="contract.CreatorParameters.AddRange(CreateConstructorParameters(overrideConstructor, contract.Properties))", span="353-353"];
m0_115 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", span="447-447"];
m0_119 [cluster="Newtonsoft.Json.Serialization.NamingStrategy.GetDictionaryKey(string)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.NamingStrategy.GetDictionaryKey(string)", span="62-62"];
m0_464 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", span="1025-1025"];
m0_466 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", span="1038-1038"];
m0_472 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", span="1102-1102"];
m0_561 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetNameTable()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetNameTable()", span="1318-1318"];
m0_563 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="IValueProvider valueProvider", span="1331-1331"];
m0_577 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="SetPropertySettingsFromAttributes(property, member, member.Name, member.DeclaringType, memberSerialization, out allowNonPublicAccess)", span="1364-1364"];
m0_579 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="property.Readable = ReflectionUtils.CanReadMemberValue(member, allowNonPublicAccess)", span="1368-1368"];
m0_631 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="property.ItemConverter = null", span="1478-1478"];
m0_638 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="bool hasJsonIgnoreAttribute =\r\n                JsonTypeReflector.GetAttribute<JsonIgnoreAttribute>(attributeProvider) != null\r\n                    // automatically ignore extension data dictionary property if it is public\r\n                || JsonTypeReflector.GetAttribute<JsonExtensionDataAttribute>(attributeProvider) != null", span="1500-1503"];
m0_645 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="DefaultValueAttribute defaultValueAttribute = JsonTypeReflector.GetAttribute<DefaultValueAttribute>(attributeProvider)", span="1531-1531"];
m0_656 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.CreateNamingStrategyInstance(System.Type, object[])", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.CreateNamingStrategyInstance(System.Type, object[])", span="205-205"];
m0_671 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="DefaultContractResolver.cs", label="specifiedMember = member.DeclaringType.GetField(member.Name + JsonTypeReflector.SpecifiedPostfix)", span="1574-1574"];
m0_824 [cluster="lambda expression", file="DefaultContractResolver.cs", label="reader.ReadAsInt32()", span="1405-1405"];
m0_827 [cluster="lambda expression", file="DefaultContractResolver.cs", label="reader.ReadAsInt32()", span="1408-1408"];
m0_830 [cluster="lambda expression", file="DefaultContractResolver.cs", label="reader.ReadAsInt32()", span="1411-1411"];
m0_833 [cluster="lambda expression", file="DefaultContractResolver.cs", label="reader.ReadAsInt32()", span="1414-1414"];
m0_836 [cluster="lambda expression", file="DefaultContractResolver.cs", label="reader.ReadAsInt32()", span="1420-1420"];
m0_861 [cluster="lambda expression", file="DefaultContractResolver.cs", label="reader.ReadAsDecimal()", span="1441-1441"];
m0_867 [cluster="lambda expression", file="DefaultContractResolver.cs", label="reader.ReadAsDecimal()", span="1454-1454"];
m0_1172 [cluster="lambda expression", file="DefaultContractResolver.cs", label="reader.ReadAsBytes()", span="1887-1887"];
m0_1185 [cluster="lambda expression", file="DefaultContractResolver.cs", label="reader.ReadAsDecimal()", span="1908-1908"];
m0_1192 [cluster="lambda expression", file="DefaultContractResolver.cs", label="reader.ReadAsBytes()", span="1918-1918"];
m0_1199 [cluster="lambda expression", file="DefaultContractResolver.cs", label="reader.ReadAsDateTimeOffset()", span="1929-1929"];
m0_1213 [cluster="lambda expression", file="DefaultContractResolver.cs", label="reader.ReadAsBytes()", span="1951-1951"];
m0_1220 [cluster="lambda expression", file="DefaultContractResolver.cs", label="reader.ReadAsBytes()", span="1961-1961"];
m0_1291 [cluster="lambda expression", file="DefaultContractResolver.cs", label="reader.ReadAsDateTimeOffset()", span="2072-2072"];
m0_1393 [cluster="lambda expression", file="DefaultContractResolver.cs", label="reader.ReadAsInt32()", span="2226-2226"];
m0_1820 [cluster="lambda expression", file="DefaultContractResolver.cs", label="reader.Read()", span="2920-2920"];
m0_111 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParameterizedConstructor(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetParameterizedConstructor(System.Type)", span="608-608"];
m0_113 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)", span="579-579"];
m0_134 [cluster="Unk.AddRange", file="DefaultContractResolver.cs", label="Entry Unk.AddRange", span=""];
m0_171 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="Type createdType", span="463-463"];
m0_173 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="createdType = typeof(Dictionary<,>).MakeGenericType(keyType, valueType)", span="468-468"];
m0_278 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DefaultContractResolver.cs", label=constructorParameters, span="643-643"];
m0_280 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DefaultContractResolver.cs", label="matchingMemberProperty != null || parameterInfo.Name != null", span="649-649"];
m0_296 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)", span="125-125"];
m0_298 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="property.PropertyType = parameterInfo.ParameterType", span="691-691"];
m0_309 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="property.DefaultValue = matchingMemberProperty.DefaultValue", span="709-709"];
m0_311 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="property.IsReference = property.IsReference ?? matchingMemberProperty.IsReference", span="713-713"];
m0_863 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Entry lambda expression", span="1445-1445"];
m0_865 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="1445-1445"];
m0_898 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Entry lambda expression", span="1483-1483"];
m0_900 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="1483-1483"];
m0_901 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Entry lambda expression", span="1494-1494"];
m0_903 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="1494-1494"];
m0_1076 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Entry lambda expression", span="1747-1747"];
m0_1078 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="1747-1747"];
m0_1154 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Entry lambda expression", span="1859-1859"];
m0_1156 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="1859-1859"];
m0_1399 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Entry lambda expression", span="2236-2236"];
m0_1401 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="2236-2236"];
m0_1406 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Entry lambda expression", span="2246-2246"];
m0_1408 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="2246-2246"];
m0_1413 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Entry lambda expression", span="2256-2256"];
m0_1415 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="2256-2256"];
m0_1420 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Entry lambda expression", span="2266-2266"];
m0_1422 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="2266-2266"];
m0_1427 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Entry lambda expression", span="2276-2276"];
m0_1429 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="2276-2276"];
m0_1560 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Entry lambda expression", span="2510-2510"];
m0_1562 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="2510-2510"];
m0_1568 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Entry lambda expression", span="2521-2521"];
m0_1570 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="2521-2521"];
m0_1599 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Entry lambda expression", span="2569-2569"];
m0_1601 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="2569-2569"];
m0_1616 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Entry lambda expression", span="2593-2593"];
m0_1618 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="2593-2593"];
m0_1780 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Entry lambda expression", span="2858-2858"];
m0_1782 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="2858-2858"];
m0_1875 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Entry lambda expression", span="3005-3005"];
m0_1877 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="3005-3005"];
m0_1907 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Entry lambda expression", span="3023-3023"];
m0_1909 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="3023-3023"];
m0_1910 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Entry lambda expression", span="3043-3043"];
m0_1912 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="3043-3043"];
m0_2032 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Entry lambda expression", span="3203-3203"];
m0_2034 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="3203-3203"];
m0_2035 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Entry lambda expression", span="3206-3206"];
m0_2037 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="3206-3206"];
m0_2038 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Entry lambda expression", span="3217-3217"];
m0_2040 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="3217-3217"];
m0_2041 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Entry lambda expression", span="3228-3228"];
m0_2043 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="3228-3228"];
m0_2044 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Entry lambda expression", span="3231-3231"];
m0_2046 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="3231-3231"];
m0_2047 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Entry lambda expression", span="3234-3234"];
m0_2049 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="3234-3234"];
m0_43 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="field != null && !field.IsStatic", span="279-279"];
m0_60 [cluster="Unk.IsIndexedProperty", file="DefaultContractResolver.cs", label="Entry Unk.IsIndexedProperty", span=""];
m0_84 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="contract.OverrideCreator = JsonTypeReflector.ReflectionDelegateFactory.CreateParameterizedConstructor(overrideConstructor)", span="352-352"];
m0_1290 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Entry lambda expression", span="2072-2072"];
m0_1392 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Entry lambda expression", span="2226-2226"];
m0_45 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="return serializableMembers;", span="286-286"];
m0_65 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="JsonObjectContract contract = new JsonObjectContract(objectType)", span="312-312"];
m0_66 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="InitializeContract(contract)", span="313-313"];
m0_68 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="ignoreSerializableAttribute = true", span="319-319"];
m0_69 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="contract.MemberSerialization = JsonTypeReflector.GetObjectMemberSerialization(contract.NonNullableUnderlyingType, ignoreSerializableAttribute)", span="322-322"];
m0_71 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="Func<string, string> extensionDataNameResolver = null", span="325-325"];
m0_86 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="contract.MemberSerialization == MemberSerialization.Fields", span="355-355"];
m0_114 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataMemberForType(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataMemberForType(System.Type)", span="397-397"];
m0_120 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataMemberForType(System.Type)", file="DefaultContractResolver.cs", label="IEnumerable<MemberInfo> members = GetClassHierarchyForType(type).SelectMany(baseType =>\r\n            {\r\n                IList<MemberInfo> m = new List<MemberInfo>();\r\n                m.AddRange(baseType.GetProperties(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));\r\n                m.AddRange(baseType.GetFields(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));\r\n\r\n                return m;\r\n            })", span="399-406"];
m0_471 [cluster="Newtonsoft.Json.Serialization.JsonLinqContract.JsonLinqContract(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonLinqContract.JsonLinqContract(System.Type)", span="38-38"];
m0_473 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", file="DefaultContractResolver.cs", label="JsonStringContract contract = new JsonStringContract(objectType)", span="1104-1104"];
m0_564 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label=DynamicCodeGeneration, span="1334-1334"];
m0_580 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="property.Writable = ReflectionUtils.CanSetMemberValue(member, allowNonPublicAccess, property.HasMemberAttribute)", span="1369-1369"];
m0_630 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="property.ItemIsReference = null", span="1477-1477"];
m0_632 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="property.ItemReferenceLoopHandling = null", span="1479-1479"];
m0_637 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="property.HasMemberAttribute = hasMemberAttribute", span="1498-1498"];
m0_639 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="memberSerialization != MemberSerialization.OptIn", span="1509-1509"];
m0_644 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="property.MemberConverter = JsonTypeReflector.GetJsonConverter(attributeProvider)", span="1529-1529"];
m0_646 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="defaultValueAttribute != null", span="1532-1532"];
m0_655 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", span="1384-1384"];
m0_657 [cluster="Newtonsoft.Json.Serialization.NamingStrategy.GetPropertyName(string, bool)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.NamingStrategy.GetPropertyName(string, bool)", span="32-32"];
m0_670 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="DefaultContractResolver.cs", label="specifiedMember == null", span="1572-1572"];
m0_672 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="DefaultContractResolver.cs", label="specifiedMember == null || ReflectionUtils.GetMemberUnderlyingType(specifiedMember) != typeof(bool)", span="1577-1577"];
m0_823 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Entry lambda expression", span="1405-1405"];
m0_825 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="1405-1405"];
m0_826 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Entry lambda expression", span="1408-1408"];
m0_828 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="1408-1408"];
m0_829 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Entry lambda expression", span="1411-1411"];
m0_831 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="1411-1411"];
m0_832 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Entry lambda expression", span="1414-1414"];
m0_834 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="1414-1414"];
m0_835 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Entry lambda expression", span="1420-1420"];
m0_837 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="1420-1420"];
m0_860 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Entry lambda expression", span="1441-1441"];
m0_862 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="1441-1441"];
m0_866 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Entry lambda expression", span="1454-1454"];
m0_868 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="1454-1454"];
m0_1171 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Entry lambda expression", span="1887-1887"];
m0_1173 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="1887-1887"];
m0_1184 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Entry lambda expression", span="1908-1908"];
m0_1186 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="1908-1908"];
m0_1191 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Entry lambda expression", span="1918-1918"];
m0_1193 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="1918-1918"];
m0_1198 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Entry lambda expression", span="1929-1929"];
m0_1200 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="1929-1929"];
m0_1212 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Entry lambda expression", span="1951-1951"];
m0_1214 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="1951-1951"];
m0_1219 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Entry lambda expression", span="1961-1961"];
m0_1221 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="1961-1961"];
m0_1292 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="2072-2072"];
m0_1394 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="2226-2226"];
m0_1821 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="2920-2920"];
m0_326 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="DefaultContractResolver.cs", label="Assert.AreEqual(2, jsonReader.LineNumber)", span="647-647"];
m0_327 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="DefaultContractResolver.cs", label="Assert.AreEqual(7, jsonReader.LinePosition)", span="648-648"];
m0_328 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="DefaultContractResolver.cs", label="jsonReader.Read()", span="650-650"];
m0_288 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="DefaultContractResolver.cs", label="reader.Read()", span="568-568"];
m0_501 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", span="854-854"];
m0_948 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="810-810"];
m0_403 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DefaultContractResolver.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="751-751"];
m0_1681 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", span="2698-2698"];
m0_1685 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2724-2724"];
m0_1686 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(''comment*//*hi*/'', reader.Value)", span="2725-2725"];
m0_1687 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(2, reader.LineNumber)", span="2726-2726"];
m0_1689 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(2, reader.LineNumber)", span="2729-2729"];
m0_1690 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2730-2730"];
m0_1692 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2733-2733"];
m0_1693 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(3, reader.LineNumber)", span="2734-2734"];
m0_1695 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2737-2737"];
m0_1696 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(''Name'', reader.Value)", span="2738-2738"];
m0_1697 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(3, reader.LineNumber)", span="2739-2739"];
m0_1699 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2742-2742"];
m0_1700 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(4, reader.LineNumber)", span="2743-2743"];
m0_1702 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="2746-2746"];
m0_1703 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(true, reader.Value)", span="2747-2747"];
m0_1704 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(4, reader.LineNumber)", span="2748-2748"];
m0_1706 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2751-2751"];
m0_1707 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(''comment after true'', reader.Value)", span="2752-2752"];
m0_1708 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(5, reader.LineNumber)", span="2753-2753"];
m0_1710 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2756-2756"];
m0_1711 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(''comment after comma'', reader.Value)", span="2757-2757"];
m0_1712 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(7, reader.LineNumber)", span="2758-2758"];
m0_1714 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2761-2761"];
m0_1715 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(''ExpiryDate'', reader.Value)", span="2762-2762"];
m0_1716 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(8, reader.LineNumber)", span="2763-2763"];
m0_1718 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2766-2766"];
m0_1719 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(9, reader.LineNumber)", span="2767-2767"];
m0_1721 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2770-2770"];
m0_1722 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(13, reader.LineNumber)", span="2771-2771"];
m0_1723 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="2772-2772"];
m0_1725 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2775-2775"];
m0_1727 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="2778-2778"];
m0_1728 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(14, reader.LineNumber)", span="2779-2779"];
m0_1730 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2782-2782"];
m0_1731 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(15, reader.LineNumber)", span="2783-2783"];
m0_1733 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2786-2786"];
m0_1734 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(15, reader.LineNumber)", span="2787-2787"];
m0_1736 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2790-2790"];
m0_1737 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(''Price'', reader.Value)", span="2791-2791"];
m0_1739 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2794-2794"];
m0_1741 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2797-2797"];
m0_1742 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(''Sizes'', reader.Value)", span="2798-2798"];
m0_1744 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2801-2801"];
m0_1746 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2804-2804"];
m0_1748 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2807-2807"];
m0_1750 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="2810-2810"];
m0_1752 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2813-2813"];
m0_1754 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2816-2816"];
m0_1756 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2819-2819"];
m0_1758 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2822-2822"];
m0_1760 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2825-2825"];
m0_1761 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(''comment '', reader.Value)", span="2826-2826"];
m0_1763 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2829-2829"];
m0_1764 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(''comment 1 '', reader.Value)", span="2830-2830"];
m0_1683 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2721-2721"];
m0_1684 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2723-2723"];
m0_1688 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2728-2728"];
m0_1691 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2732-2732"];
m0_1694 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2736-2736"];
m0_1698 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2741-2741"];
m0_1701 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2745-2745"];
m0_1705 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2750-2750"];
m0_1709 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2755-2755"];
m0_1713 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2760-2760"];
m0_1717 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2765-2765"];
m0_1720 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2769-2769"];
m0_1724 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2774-2774"];
m0_1726 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2777-2777"];
m0_1729 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2781-2781"];
m0_1732 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2785-2785"];
m0_1735 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2789-2789"];
m0_1738 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2793-2793"];
m0_1740 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2796-2796"];
m0_1743 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2800-2800"];
m0_1745 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2803-2803"];
m0_1747 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2806-2806"];
m0_1749 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2809-2809"];
m0_1751 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2812-2812"];
m0_1753 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2815-2815"];
m0_1755 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2818-2818"];
m0_1757 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2821-2821"];
m0_1759 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2824-2824"];
m0_1762 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2828-2828"];
m0_1765 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Assert.IsFalse(reader.Read())", span="2832-2832"];
m0_1682 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="string json = @''//comment*//*hi*/\r\n{//comment\r\nName://comment\r\ntrue//comment after true'' + StringUtils.CarriageReturn + @''\r\n,//comment after comma'' + StringUtils.CarriageReturnLineFeed + @''\r\n''''ExpiryDate''''://comment''  + StringUtils.LineFeed + @''\r\nnew\r\n'' + StringUtils.LineFeed +\r\n                          @''Date\r\n(//comment\r\nnull//comment\r\n),\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': //comment\r\n[//comment\r\n\r\n          ''''Small''''//comment\r\n]//comment\r\n}//comment \r\n//comment 1 ''", span="2700-2719"];
m0_1766 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", span="2698-2698"];
m0_955 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="848-848"];
m0_72 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="JsonObjectAttribute attribute = JsonTypeReflector.GetCachedAttribute<JsonObjectAttribute>(contract.NonNullableUnderlyingType)", span="327-327"];
m0_76 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="NamingStrategy namingStrategy = JsonTypeReflector.GetContainerNamingStrategy(attribute)", span="333-333"];
m0_78 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="extensionDataNameResolver == null", span="338-338"];
m0_81 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="contract.IsInstantiable", span="345-345"];
m0_74 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="contract.ItemRequired = attribute._itemRequired", span="330-330"];
m0_75 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="attribute.NamingStrategyType != null", span="331-331"];
m0_77 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="extensionDataNameResolver = s => namingStrategy.GetDictionaryKey(s)", span="334-334"];
m0_80 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="contract.ExtensionDataNameResolver = extensionDataNameResolver", span="343-343"];
m0_82 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="ConstructorInfo overrideConstructor = GetAttributeConstructor(contract.NonNullableUnderlyingType)", span="347-347"];
m0_79 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="extensionDataNameResolver = ResolveExtensionDataName", span="340-340"];
m0_73 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="attribute != null", span="328-328"];
m0_83 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="overrideConstructor != null", span="350-350"];
m0_1822 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", span="2924-2924"];
m0_1831 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2942-2942"];
m0_1832 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DefaultContractResolver.cs", label="Assert.AreEqual(0d, reader.Value)", span="2943-2943"];
m0_1834 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2946-2946"];
m0_1835 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DefaultContractResolver.cs", label="Assert.AreEqual(0d, reader.Value)", span="2947-2947"];
m0_1837 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2950-2950"];
m0_1838 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DefaultContractResolver.cs", label="Assert.AreEqual(0.0000025d, reader.Value)", span="2951-2951"];
m0_1840 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2954-2954"];
m0_1841 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DefaultContractResolver.cs", label="Assert.AreEqual(3000000000d, reader.Value)", span="2955-2955"];
m0_1843 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2958-2958"];
m0_1844 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DefaultContractResolver.cs", label="Assert.AreEqual(602214180000000000000000d, reader.Value)", span="2959-2959"];
m0_1849 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2969-2969"];
m0_1850 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DefaultContractResolver.cs", label="Assert.AreEqual(0m, reader.Value)", span="2970-2970"];
m0_1852 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2973-2973"];
m0_1853 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DefaultContractResolver.cs", label="Assert.AreEqual(0m, reader.Value)", span="2974-2974"];
m0_1855 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2977-2977"];
m0_1856 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DefaultContractResolver.cs", label="Assert.AreEqual(0.0000025m, reader.Value)", span="2978-2978"];
m0_1858 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2981-2981"];
m0_1859 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DefaultContractResolver.cs", label="Assert.AreEqual(3000000000m, reader.Value)", span="2982-2982"];
m0_1861 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2985-2985"];
m0_1862 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DefaultContractResolver.cs", label="Assert.AreEqual(602214180000000000000000m, reader.Value)", span="2986-2986"];
m0_1828 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2937-2937"];
m0_1846 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DefaultContractResolver.cs", label="reader = new JsonTextReader(new StringReader(json))", span="2964-2964"];
m0_1829 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DefaultContractResolver.cs", label="reader.Read()", span="2939-2939"];
m0_1830 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DefaultContractResolver.cs", label="reader.Read()", span="2941-2941"];
m0_1833 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DefaultContractResolver.cs", label="reader.Read()", span="2945-2945"];
m0_1836 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DefaultContractResolver.cs", label="reader.Read()", span="2949-2949"];
m0_1839 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DefaultContractResolver.cs", label="reader.Read()", span="2953-2953"];
m0_1842 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DefaultContractResolver.cs", label="reader.Read()", span="2957-2957"];
m0_1845 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DefaultContractResolver.cs", label="reader.Read()", span="2961-2961"];
m0_1847 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DefaultContractResolver.cs", label="reader.Read()", span="2966-2966"];
m0_1863 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DefaultContractResolver.cs", label="reader.Read()", span="2988-2988"];
m0_1848 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DefaultContractResolver.cs", label="reader.ReadAsDecimal()", span="2968-2968"];
m0_1851 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DefaultContractResolver.cs", label="reader.ReadAsDecimal()", span="2972-2972"];
m0_1854 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DefaultContractResolver.cs", label="reader.ReadAsDecimal()", span="2976-2976"];
m0_1857 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DefaultContractResolver.cs", label="reader.ReadAsDecimal()", span="2980-2980"];
m0_1860 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DefaultContractResolver.cs", label="reader.ReadAsDecimal()", span="2984-2984"];
m0_1827 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DefaultContractResolver.cs", label="string json = @''[0e-10,0E-10,0.25e-5,0.3e10,6.0221418e23]''", span="2935-2935"];
m0_1826 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DefaultContractResolver.cs", label="Console.WriteLine(d.ToString(''0.#############################################################################''))", span="2930-2930"];
m0_1825 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DefaultContractResolver.cs", label="Console.WriteLine(d.ToString(new CultureInfo(''fr-FR'')))", span="2929-2929"];
m0_1824 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DefaultContractResolver.cs", label="d = Convert.ToDouble(''6.0221418e23'', CultureInfo.InvariantCulture)", span="2928-2928"];
m0_1823 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DefaultContractResolver.cs", label="double d", span="2926-2926"];
m0_1864 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", span="2924-2924"];
m0_1322 [cluster="System.TimeSpan.Add(System.TimeSpan)", file="DefaultContractResolver.cs", label="Entry System.TimeSpan.Add(System.TimeSpan)", span="0-0"];
m0_1281 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", span="2058-2058"];
m0_1285 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2065-2065"];
m0_1287 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2068-2068"];
m0_1283 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2062-2062"];
m0_1284 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2064-2064"];
m0_1286 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2067-2067"];
m0_1288 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="DefaultContractResolver.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Could not convert string to DateTimeOffset: blablahbla. Path 'Offset', line 1, position 22.'',\r\n                () => { reader.ReadAsDateTimeOffset(); })", span="2070-2072"];
m0_1282 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="DefaultContractResolver.cs", label="string json = @''{''''Offset'''':''''blablahbla''''}''", span="2060-2060"];
m0_1289 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", span="2058-2058"];
m0_699 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DefaultContractResolver.cs", label="Assert.AreEqual(91, reader.LineNumber)", span="1220-1220"];
m0_700 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DefaultContractResolver.cs", label="Assert.AreEqual(newLinesText + ''blah comment'' + newLinesText, reader.Value)", span="1221-1221"];
m0_701 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="1223-1223"];
m0_1089 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", span="1764-1764"];
m0_1093 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="1770-1770"];
m0_1095 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1773-1773"];
m0_1096 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="DefaultContractResolver.cs", label="Assert.AreEqual(250L, jsonReader.Value)", span="1774-1774"];
m0_1098 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1777-1777"];
m0_1099 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="DefaultContractResolver.cs", label="Assert.AreEqual(250L, jsonReader.Value)", span="1778-1778"];
m0_1101 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1781-1781"];
m0_1102 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="DefaultContractResolver.cs", label="Assert.AreEqual(250L, jsonReader.Value)", span="1782-1782"];
m0_1104 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="1785-1785"];
m0_1091 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="DefaultContractResolver.cs", label="JsonTextReader jsonReader = new JsonTextReader(s)", span="1767-1767"];
m0_1090 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="DefaultContractResolver.cs", label="StringReader s = new StringReader(@''[0372, 0xFA, 0XFA]'')", span="1766-1766"];
m0_1092 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="DefaultContractResolver.cs", label="Assert.IsTrue(jsonReader.Read())", span="1769-1769"];
m0_1094 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="DefaultContractResolver.cs", label="Assert.IsTrue(jsonReader.Read())", span="1772-1772"];
m0_1097 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="DefaultContractResolver.cs", label="Assert.IsTrue(jsonReader.Read())", span="1776-1776"];
m0_1100 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="DefaultContractResolver.cs", label="Assert.IsTrue(jsonReader.Read())", span="1780-1780"];
m0_1103 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="DefaultContractResolver.cs", label="Assert.IsTrue(jsonReader.Read())", span="1784-1784"];
m0_1105 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="DefaultContractResolver.cs", label="Assert.IsFalse(jsonReader.Read())", span="1787-1787"];
m0_1106 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", span="1764-1764"];
m0_121 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", span="223-223"];
m0_122 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="DefaultContractResolver.cs", label="string json = @''{ ''''ItemName'''': ''''value'''', ''''u'''':netanelsalinger,''''r'''':9 }''", span="225-225"];
m0_123 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="227-227"];
m0_29 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="memberSerialization != MemberSerialization.Fields", span="217-217"];
m0_270 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", span="502-502"];
m0_289 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="DefaultContractResolver.cs", label="Assert.AreEqual(3, reader.LineNumber)", span="569-569"];
m0_291 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="DefaultContractResolver.cs", label="Assert.AreEqual(4, reader.LineNumber)", span="572-572"];
m0_292 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="DefaultContractResolver.cs", label="reader.Read()", span="574-574"];
m0_290 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="DefaultContractResolver.cs", label="reader.Read()", span="571-571"];
m0_294 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="DefaultContractResolver.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Additional text encountered after finished reading JSON content: c. Path '', line 5, position 2.'',\r\n                () => { reader.Read(); })", span="577-579"];
m0_293 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="DefaultContractResolver.cs", label="Assert.AreEqual(5, reader.LineNumber)", span="575-575"];
m0_295 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", span="549-549"];
m0_102 [cluster="Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", span="162-162"];
m0_104 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", span="1286-1286"];
m0_106 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetCachedAttribute<T>(object)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetCachedAttribute<T>(object)", span="66-66"];
m0_108 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", span="555-555"];
m0_103 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", span="742-742"];
m0_105 [cluster="System.Collections.Generic.IList<T>.AddRange<T>(System.Collections.Generic.IEnumerable<T>)", file="DefaultContractResolver.cs", label="Entry System.Collections.Generic.IList<T>.AddRange<T>(System.Collections.Generic.IEnumerable<T>)", span="68-68"];
m0_107 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetContainerNamingStrategy(Newtonsoft.Json.JsonContainerAttribute)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetContainerNamingStrategy(Newtonsoft.Json.JsonContainerAttribute)", span="211-211"];
m0_109 [cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateParameterizedConstructor(System.Reflection.MethodBase)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateParameterizedConstructor(System.Reflection.MethodBase)", span="73-73"];
m0_110 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", span="637-637"];
m0_1868 [cluster="double.ToString(string)", file="DefaultContractResolver.cs", label="Entry double.ToString(string)", span="0-0"];
m0_956 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", span="1561-1561"];
m0_961 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="DefaultContractResolver.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.StartArray)", span="1574-1574"];
m0_963 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="DefaultContractResolver.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.Float)", span="1577-1577"];
m0_964 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="DefaultContractResolver.cs", label="Assert.AreEqual(jsonReader.Value, double.NaN)", span="1578-1578"];
m0_966 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="DefaultContractResolver.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.Float)", span="1581-1581"];
m0_967 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="DefaultContractResolver.cs", label="Assert.AreEqual(jsonReader.Value, double.PositiveInfinity)", span="1582-1582"];
m0_969 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="DefaultContractResolver.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.Float)", span="1585-1585"];
m0_970 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="DefaultContractResolver.cs", label="Assert.AreEqual(jsonReader.Value, double.NegativeInfinity)", span="1586-1586"];
m0_972 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="DefaultContractResolver.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.EndArray)", span="1589-1589"];
m0_959 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="DefaultContractResolver.cs", label="JsonReader jsonReader = new JsonTextReader(sr)", span="1571-1571"];
m0_958 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="DefaultContractResolver.cs", label="StringReader sr = new StringReader(input)", span="1569-1569"];
m0_960 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="DefaultContractResolver.cs", label="jsonReader.Read()", span="1573-1573"];
m0_962 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="DefaultContractResolver.cs", label="jsonReader.Read()", span="1576-1576"];
m0_965 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="DefaultContractResolver.cs", label="jsonReader.Read()", span="1580-1580"];
m0_968 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="DefaultContractResolver.cs", label="jsonReader.Read()", span="1584-1584"];
m0_971 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="DefaultContractResolver.cs", label="jsonReader.Read()", span="1588-1588"];
m0_957 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="DefaultContractResolver.cs", label="string input = @''[\r\n  NaN,\r\n  Infinity,\r\n  -Infinity\r\n]''", span="1563-1567"];
m0_973 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", span="1561-1561"];
m0_231 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.GetEnumerator()", file="DefaultContractResolver.cs", label=_e, span="543-543"];
m0_18 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="DefaultContractResolver.cs", label="JObject o = JObject.Parse(json)", span="83-83"];
m0_949 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(decimal)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(decimal)", span="931-931"];
m0_2076 [cluster="System.IO.TextReader.Read(char[], int, int)", file="DefaultContractResolver.cs", label="Entry System.IO.TextReader.Read(char[], int, int)", span="0-0"];
m0_1548 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", span="2492-2492"];
m0_1550 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2495-2495"];
m0_1551 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2497-2497"];
m0_1552 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2498-2498"];
m0_1553 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="DefaultContractResolver.cs", label="Assert.IsFalse(reader.Read())", span="2499-2499"];
m0_1549 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="DefaultContractResolver.cs", label="string json = ''[true ''", span="2494-2494"];
m0_1554 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", span="2492-2492"];
m0_250 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="DefaultContractResolver.cs", label="Console.WriteLine(jsonReader.Value)", span="496-496"];
m0_312 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="property.NullValueHandling = property.NullValueHandling ?? matchingMemberProperty.NullValueHandling", span="714-714"];
m0_316 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="property.TypeNameHandling = property.TypeNameHandling ?? matchingMemberProperty.TypeNameHandling", span="718-718"];
m0_317 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="return property;", span="721-721"];
m0_318 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", span="688-688"];
m0_320 [cluster="Newtonsoft.Json.Serialization.ReflectionAttributeProvider.ReflectionAttributeProvider(object)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.ReflectionAttributeProvider.ReflectionAttributeProvider(object)", span="43-43"];
m0_321 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", span="1384-1384"];
m0_322 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", span="729-729"];
m0_324 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", span="729-729"];
m0_325 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(object)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(object)", span="177-177"];
m0_329 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs", label="JsonContainerAttribute containerAttribute = JsonTypeReflector.GetCachedAttribute<JsonContainerAttribute>(contract.NonNullableUnderlyingType)", span="744-744"];
m0_330 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs", label="containerAttribute != null", span="745-745"];
m0_331 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs", label="contract.IsReference = containerAttribute._isReference", span="747-747"];
m0_332 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs", label="contract.Converter = ResolveContractConverter(contract.NonNullableUnderlyingType)", span="761-761"];
m0_334 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs", label="contract.IsInstantiable\r\n                && (ReflectionUtils.HasDefaultConstructor(contract.CreatedType, true) || contract.CreatedType.IsValueType())", span="766-767"];
m0_335 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs", label="contract.DefaultCreator = GetDefaultCreator(contract.CreatedType)", span="769-769"];
m0_336 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs", label="contract.DefaultCreatorNonPublic = (!contract.CreatedType.IsValueType() &&\r\n                                                    ReflectionUtils.GetDefaultConstructor(contract.CreatedType) == null)", span="771-772"];
m0_337 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs", label="ResolveCallbackMethods(contract, contract.NonNullableUnderlyingType)", span="775-775"];
m0_339 [cluster="Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type)", span="1159-1159"];
m0_340 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", span="227-227"];
m0_341 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type)", span="239-239"];
m0_343 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="List<SerializationCallback> onSerializing", span="780-780"];
m0_344 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="List<SerializationCallback> onSerialized", span="781-781"];
m0_345 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="List<SerializationCallback> onDeserializing", span="782-782"];
m0_346 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="List<SerializationCallback> onDeserialized", span="783-783"];
m0_347 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="List<SerializationErrorCallback> onError", span="784-784"];
m0_349 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="onSerializing != null", span="788-788"];
m0_350 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="contract.OnSerializingCallbacks.AddRange(onSerializing)", span="790-790"];
m0_351 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="onSerialized != null", span="793-793"];
m0_352 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="contract.OnSerializedCallbacks.AddRange(onSerialized)", span="795-795"];
m0_353 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="onDeserializing != null", span="798-798"];
m0_355 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="onDeserialized != null", span="803-803"];
m0_356 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="contract.OnDeserializedCallbacks.AddRange(onDeserialized)", span="805-805"];
m0_357 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="onError != null", span="808-808"];
m0_359 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", span="778-778"];
m0_360 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", span="814-814"];
m0_361 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="onSerializing = null", span="816-816"];
m0_315 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="property.ObjectCreationHandling = property.ObjectCreationHandling ?? matchingMemberProperty.ObjectCreationHandling", span="717-717"];
m0_314 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="property.ReferenceLoopHandling = property.ReferenceLoopHandling ?? matchingMemberProperty.ReferenceLoopHandling", span="716-716"];
m0_319 [cluster="Newtonsoft.Json.Serialization.JsonProperty.JsonProperty()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonProperty.JsonProperty()", span="38-38"];
m0_323 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", file="DefaultContractResolver.cs", label="return JsonTypeReflector.GetJsonConverter(objectType);", span="731-731"];
m0_333 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs", label="contract.InternalConverter = JsonSerializer.GetMatchingConverter(BuiltInConverters, contract.NonNullableUnderlyingType)", span="764-764"];
m0_338 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", span="742-742"];
m0_342 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", span="778-778"];
m0_348 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="GetCallbackMethodsForType(t, out onSerializing, out onSerialized, out onDeserializing, out onDeserialized, out onError)", span="786-786"];
m0_354 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="contract.OnDeserializingCallbacks.AddRange(onDeserializing)", span="800-800"];
m0_358 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="contract.OnErrorCallbacks.AddRange(onError)", span="810-810"];
m0_362 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="onSerialized = null", span="817-817"];
m0_313 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="property.DefaultValueHandling = property.DefaultValueHandling ?? matchingMemberProperty.DefaultValueHandling", span="715-715"];
m0_363 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="onDeserializing = null", span="818-818"];
m0_1866 [cluster="double.ToString(System.IFormatProvider)", file="DefaultContractResolver.cs", label="Entry double.ToString(System.IFormatProvider)", span="0-0"];
m0_2067 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", span="537-537"];
m0_52 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="DefaultContractResolver.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''JSON integer 333333333333333333333333333333333333333 is too large or small for an Int32. Path '[0]', line 2, position 42.'',\r\n                () => jsonTextReader.ReadAsInt32())", span="129-131"];
m0_531 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="915-915"];
m0_444 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DefaultContractResolver.cs", label="reader.Read()", span="802-802"];
m0_445 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DefaultContractResolver.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="803-803"];
m0_446 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DefaultContractResolver.cs", label="Assert.AreEqual(3, reader.Depth)", span="804-804"];
m0_447 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DefaultContractResolver.cs", label="Assert.AreEqual(''subobject.proparray[0]'', reader.Path)", span="805-805"];
m0_450 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DefaultContractResolver.cs", label="Assert.AreEqual(2, reader.Depth)", span="809-809"];
m0_452 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DefaultContractResolver.cs", label="reader.Read()", span="812-812"];
m0_454 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DefaultContractResolver.cs", label="Assert.AreEqual(1, reader.Depth)", span="814-814"];
m0_455 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DefaultContractResolver.cs", label="Assert.AreEqual(''subobject'', reader.Path)", span="815-815"];
m0_456 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DefaultContractResolver.cs", label="reader.Read()", span="817-817"];
m0_457 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DefaultContractResolver.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.EndObject)", span="818-818"];
m0_448 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DefaultContractResolver.cs", label="reader.Read()", span="807-807"];
m0_449 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DefaultContractResolver.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.EndArray)", span="808-808"];
m0_451 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DefaultContractResolver.cs", label="Assert.AreEqual(''subobject.proparray'', reader.Path)", span="810-810"];
m0_453 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DefaultContractResolver.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.EndObject)", span="813-813"];
m0_458 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DefaultContractResolver.cs", label="Assert.AreEqual(0, reader.Depth)", span="819-819"];
m0_498 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="DefaultContractResolver.cs", label="i++", span="870-870"];
m0_503 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="116-116"];
m0_504 [cluster="Newtonsoft.Json.JsonTextWriter.WriteStartArray()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteStartArray()", span="166-166"];
m0_1416 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", span="2260-2260"];
m0_1417 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''/* sdf''))", span="2262-2262"];
m0_1418 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="DefaultContractResolver.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unexpected end while parsing comment. Path '', line 1, position 6.'',\r\n                () => { reader.Read(); })", span="2264-2266"];
m0_1419 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", span="2260-2260"];
m0_286 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="DefaultContractResolver.cs", label="reader.Read()", span="565-565"];
m0_212 [cluster="Newtonsoft.Json.Serialization.Func<T, TResult>.Invoke(T)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.Func<T, TResult>.Invoke(T)", span="3040-3040"];
m0_213 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="52-52"];
m0_214 [cluster="string.FormatWith(System.IFormatProvider, object)", file="DefaultContractResolver.cs", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
m0_215 [cluster="Newtonsoft.Json.Serialization.Func<TResult>.Invoke()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.Func<TResult>.Invoke()", span="3038-3038"];
m0_216 [cluster="Newtonsoft.Json.Serialization.Action<T1, T2>.Invoke(T1, T2)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.Action<T1, T2>.Invoke(T1, T2)", span="3050-3050"];
m0_217 [cluster="Newtonsoft.Json.Utilities.MethodCall<T, TResult>.Invoke(T, params object[])", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Utilities.MethodCall<T, TResult>.Invoke(T, params object[])", span="27-27"];
m0_822 [cluster="long.ToString()", file="DefaultContractResolver.cs", label="Entry long.ToString()", span="0-0"];
m0_1222 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", span="1965-1965"];
m0_1226 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1975-1975"];
m0_1228 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1978-1978"];
m0_1229 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="DefaultContractResolver.cs", label="Assert.AreEqual(''Message'', reader.Value)", span="1979-1979"];
m0_1231 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1982-1982"];
m0_1232 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="DefaultContractResolver.cs", label="Assert.AreEqual(@''Hi,I'' + '\u0092' + ''ve send you smth'', reader.Value)", span="1983-1983"];
m0_1234 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1986-1986"];
m0_1224 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1969-1969"];
m0_1225 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="1974-1974"];
m0_1227 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="1977-1977"];
m0_1230 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="1981-1981"];
m0_1233 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="1985-1985"];
m0_1235 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="DefaultContractResolver.cs", label="Assert.IsFalse(reader.Read())", span="1988-1988"];
m0_1223 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="DefaultContractResolver.cs", label="string json = @''{''''Message'''':''''Hi,I\u0092ve send you smth''''}''", span="1967-1967"];
m0_1236 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", span="1965-1965"];
m0_47 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", span="115-115"];
m0_50 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="DefaultContractResolver.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="126-126"];
m0_679 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DefaultContractResolver.cs", label="count++", span="1192-1192"];
m0_647 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="property.DefaultValue = defaultValueAttribute.Value", span="1534-1534"];
m0_821 [cluster="int.ToString()", file="DefaultContractResolver.cs", label="Entry int.ToString()", span="0-0"];
m0_1003 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", span="1640-1640"];
m0_1007 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="1648-1648"];
m0_1009 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1651-1651"];
m0_1010 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DefaultContractResolver.cs", label="Assert.AreEqual(0.0, jsonReader.Value)", span="1652-1652"];
m0_1012 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1655-1655"];
m0_1013 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DefaultContractResolver.cs", label="Assert.AreEqual(0.0, jsonReader.Value)", span="1656-1656"];
m0_1015 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1659-1659"];
m0_1016 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DefaultContractResolver.cs", label="Assert.AreEqual(0.1, jsonReader.Value)", span="1660-1660"];
m0_1018 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1663-1663"];
m0_1019 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DefaultContractResolver.cs", label="Assert.AreEqual(1.0, jsonReader.Value)", span="1664-1664"];
m0_1021 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1667-1667"];
m0_1022 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DefaultContractResolver.cs", label="Assert.AreEqual(1.000001, jsonReader.Value)", span="1668-1668"];
m0_1024 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1671-1671"];
m0_1025 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DefaultContractResolver.cs", label="Assert.AreEqual(1E-06, jsonReader.Value)", span="1672-1672"];
m0_1027 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1675-1675"];
m0_1028 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DefaultContractResolver.cs", label="Assert.AreEqual(4.94065645841247E-324, jsonReader.Value)", span="1676-1676"];
m0_1030 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1679-1679"];
m0_1031 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DefaultContractResolver.cs", label="Assert.AreEqual(double.PositiveInfinity, jsonReader.Value)", span="1680-1680"];
m0_1033 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1683-1683"];
m0_1034 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DefaultContractResolver.cs", label="Assert.AreEqual(double.NegativeInfinity, jsonReader.Value)", span="1684-1684"];
m0_1036 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1687-1687"];
m0_1037 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DefaultContractResolver.cs", label="Assert.AreEqual(double.NaN, jsonReader.Value)", span="1688-1688"];
m0_1039 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1691-1691"];
m0_1040 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DefaultContractResolver.cs", label="Assert.AreEqual(double.MaxValue, jsonReader.Value)", span="1692-1692"];
m0_1042 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1695-1695"];
m0_1043 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DefaultContractResolver.cs", label="Assert.AreEqual(double.MinValue, jsonReader.Value)", span="1696-1696"];
m0_1045 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1699-1699"];
m0_1046 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DefaultContractResolver.cs", label="Assert.AreEqual(double.PositiveInfinity, jsonReader.Value)", span="1700-1700"];
m0_1048 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1703-1703"];
m0_1049 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DefaultContractResolver.cs", label="Assert.AreEqual(double.NegativeInfinity, jsonReader.Value)", span="1704-1704"];
m0_1051 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1707-1707"];
m0_1052 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DefaultContractResolver.cs", label="Assert.AreEqual(double.NaN, jsonReader.Value)", span="1708-1708"];
m0_1054 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1711-1711"];
m0_1055 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DefaultContractResolver.cs", label="Assert.AreEqual(0d, jsonReader.Value)", span="1712-1712"];
m0_1057 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1715-1715"];
m0_1058 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DefaultContractResolver.cs", label="Assert.AreEqual(0.0000025d, jsonReader.Value)", span="1716-1716"];
m0_1060 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1719-1719"];
m0_1061 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DefaultContractResolver.cs", label="Assert.AreEqual(3000000000d, jsonReader.Value)", span="1720-1720"];
m0_1063 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="1723-1723"];
m0_1005 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DefaultContractResolver.cs", label="JsonReader jsonReader = new JsonTextReader(new StringReader(json))", span="1645-1645"];
m0_1006 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DefaultContractResolver.cs", label="jsonReader.Read()", span="1647-1647"];
m0_1008 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DefaultContractResolver.cs", label="jsonReader.Read()", span="1650-1650"];
m0_1011 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DefaultContractResolver.cs", label="jsonReader.Read()", span="1654-1654"];
m0_1014 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DefaultContractResolver.cs", label="jsonReader.Read()", span="1658-1658"];
m0_1017 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DefaultContractResolver.cs", label="jsonReader.Read()", span="1662-1662"];
m0_1020 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DefaultContractResolver.cs", label="jsonReader.Read()", span="1666-1666"];
m0_1023 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DefaultContractResolver.cs", label="jsonReader.Read()", span="1670-1670"];
m0_1026 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DefaultContractResolver.cs", label="jsonReader.Read()", span="1674-1674"];
m0_1029 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DefaultContractResolver.cs", label="jsonReader.Read()", span="1678-1678"];
m0_1032 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DefaultContractResolver.cs", label="jsonReader.Read()", span="1682-1682"];
m0_1035 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DefaultContractResolver.cs", label="jsonReader.Read()", span="1686-1686"];
m0_1038 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DefaultContractResolver.cs", label="jsonReader.Read()", span="1690-1690"];
m0_1041 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DefaultContractResolver.cs", label="jsonReader.Read()", span="1694-1694"];
m0_1044 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DefaultContractResolver.cs", label="jsonReader.Read()", span="1698-1698"];
m0_1047 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DefaultContractResolver.cs", label="jsonReader.Read()", span="1702-1702"];
m0_1050 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DefaultContractResolver.cs", label="jsonReader.Read()", span="1706-1706"];
m0_1053 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DefaultContractResolver.cs", label="jsonReader.Read()", span="1710-1710"];
m0_1056 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DefaultContractResolver.cs", label="jsonReader.Read()", span="1714-1714"];
m0_1059 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DefaultContractResolver.cs", label="jsonReader.Read()", span="1718-1718"];
m0_1062 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DefaultContractResolver.cs", label="jsonReader.Read()", span="1722-1722"];
m0_1004 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DefaultContractResolver.cs", label="string json =\r\n                @''[0.0,0.0,0.1,1.0,1.000001,1E-06,4.94065645841247E-324,Infinity,-Infinity,NaN,1.7976931348623157E+308,-1.7976931348623157E+308,Infinity,-Infinity,NaN,0e-10,0.25e-5,0.3e10]''", span="1642-1643"];
m0_1064 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", span="1640-1640"];
m0_1264 [cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", file="DefaultContractResolver.cs", label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", span="0-0"];
m0_590 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="DefaultContractResolver.cs", label="reader.Read()", span="1022-1022"];
m0_591 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="DefaultContractResolver.cs", label="Assert.AreEqual(typeof(BigInteger), reader.ValueType)", span="1024-1024"];
m0_597 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", span="1029-1029"];
m0_599 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="1033-1033"];
m0_607 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="DefaultContractResolver.cs", label="Assert.AreEqual(typeof(BigInteger), reader.ValueType)", span="1044-1044"];
m0_608 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="DefaultContractResolver.cs", label="j++", span="1037-1037"];
m0_609 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", span="1029-1029"];
m0_612 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1067-1067"];
m0_613 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="DefaultContractResolver.cs", label="int i = 0", span="1072-1072"];
m0_614 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="DefaultContractResolver.cs", label="i < 14", span="1072-1072"];
m0_616 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="DefaultContractResolver.cs", label="i++", span="1072-1072"];
m0_617 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="1077-1077"];
m0_618 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1078-1078"];
m0_619 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="DefaultContractResolver.cs", label="Assert.AreEqual(''type'', reader.Value)", span="1079-1079"];
m0_620 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", span="1050-1050"];
m0_621 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", span="1083-1083"];
m0_622 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="DefaultContractResolver.cs", label="JsonReader reader = new JsonTextReader(new StringReader('''h\0i'''))", span="1085-1085"];
m0_623 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="1086-1086"];
m0_624 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="DefaultContractResolver.cs", label="Assert.AreEqual(''h\0i'', reader.Value)", span="1088-1088"];
m0_625 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", span="1083-1083"];
m0_626 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", span="1092-1092"];
m0_627 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="DefaultContractResolver.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@'''h\u123''))", span="1094-1094"];
m0_628 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="DefaultContractResolver.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unexpected end while parsing unicode character. Path '', line 1, position 4.'',\r\n                () => { reader.Read(); })", span="1096-1098"];
m0_629 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", span="1092-1092"];
m0_633 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", span="1102-1102"];
m0_635 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="DefaultContractResolver.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unterminated string. Expected delimiter: '. Path '', line 1, position 3.'',\r\n                () => { reader.Read(); })", span="1106-1108"];
m0_641 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="DefaultContractResolver.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''true''))", span="1114-1114"];
m0_642 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="DefaultContractResolver.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Error reading bytes. Unexpected token: Boolean. Path '', line 1, position 4.'',\r\n                () => { reader.ReadAsBytes(); })", span="1116-1118"];
m0_643 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", span="1112-1112"];
m0_653 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", span="1122-1122"];
m0_594 [cluster="BigInteger.cstr", file="DefaultContractResolver.cs", label="Entry BigInteger.cstr", span=""];
m0_595 [cluster="StringReader.cstr", file="DefaultContractResolver.cs", label="Entry StringReader.cstr", span=""];
m0_601 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="DefaultContractResolver.cs", label="Assert.AreEqual(typeof(long), reader.ValueType)", span="1035-1035"];
m0_602 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="DefaultContractResolver.cs", label="int j = 1", span="1037-1037"];
m0_611 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="DefaultContractResolver.cs", label="string json = @''\r\n{\r\n  ''''description'''': ''''A person'''',\r\n  ''''type'''': ''''object'''',\r\n  ''''properties'''':\r\n  {\r\n    ''''name'''': {''''type'''':''''string''''},\r\n    ''''hobbies'''': {\r\n      ''''type'''': ''''array'''',\r\n      ''''items'''': {''''type'''':''''string''''}\r\n    }\r\n  }\r\n}\r\n''", span="1052-1065"];
m0_592 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="DefaultContractResolver.cs", label="j++", span="1017-1017"];
m0_634 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="DefaultContractResolver.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@'''h\''))", span="1104-1104"];
m0_593 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", span="1009-1009"];
m0_596 [cluster="Unk.ToString", file="DefaultContractResolver.cs", label="Entry Unk.ToString", span=""];
m0_598 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="DefaultContractResolver.cs", label="BigInteger i = new BigInteger(long.MinValue)", span="1031-1031"];
m0_600 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="DefaultContractResolver.cs", label="reader.Read()", span="1034-1034"];
m0_603 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="DefaultContractResolver.cs", label="j < 1000", span="1037-1037"];
m0_604 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="DefaultContractResolver.cs", label="BigInteger total = i + -j", span="1039-1039"];
m0_605 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="DefaultContractResolver.cs", label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="1041-1041"];
m0_606 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="DefaultContractResolver.cs", label="reader.Read()", span="1042-1042"];
m0_610 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", span="1050-1050"];
m0_651 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="DefaultContractResolver.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''''' + Convert.ToBase64String(helloWorldData)))", span="1127-1127"];
m0_615 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="1074-1074"];
m0_636 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", span="1102-1102"];
m0_640 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", span="1112-1112"];
m0_648 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", span="1122-1122"];
m0_649 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="DefaultContractResolver.cs", label="string helloWorld = ''Hello world!''", span="1124-1124"];
m0_650 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="DefaultContractResolver.cs", label="byte[] helloWorldData = Encoding.UTF8.GetBytes(helloWorld)", span="1125-1125"];
m0_652 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="DefaultContractResolver.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unterminated string. Expected delimiter: '. Path '', line 1, position 17.'',\r\n                () => { reader.ReadAsBytes(); })", span="1129-1131"];
m0_654 [cluster="System.Convert.ToBase64String(byte[])", file="DefaultContractResolver.cs", label="Entry System.Convert.ToBase64String(byte[])", span="0-0"];
m0_230 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.GetEnumerator()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.GetEnumerator()", span="541-541"];
m0_942 [cluster="System.IO.StringWriter.StringWriter(System.Text.StringBuilder)", file="DefaultContractResolver.cs", label="Entry System.IO.StringWriter.StringWriter(System.Text.StringBuilder)", span="0-0"];
m0_197 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="390-390"];
m0_27 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="IEnumerable<MemberInfo> allMembers = ReflectionUtils.GetFieldsAndProperties(objectType, BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.Static)\r\n                .Where(m => !ReflectionUtils.IsIndexedProperty(m))", span="212-213"];
m0_794 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", span="1382-1382"];
m0_797 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="DefaultContractResolver.cs", label="Assert.AreEqual(1, reader.ReadAsInt32())", span="1387-1387"];
m0_799 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="DefaultContractResolver.cs", label="Assert.AreEqual(-1, reader.ReadAsInt32())", span="1390-1390"];
m0_801 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="DefaultContractResolver.cs", label="Assert.AreEqual(0, reader.ReadAsInt32())", span="1393-1393"];
m0_803 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="DefaultContractResolver.cs", label="Assert.AreEqual(0, reader.ReadAsInt32())", span="1396-1396"];
m0_805 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="DefaultContractResolver.cs", label="Assert.AreEqual(int.MaxValue, reader.ReadAsInt32())", span="1399-1399"];
m0_807 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="DefaultContractResolver.cs", label="Assert.AreEqual(int.MinValue, reader.ReadAsInt32())", span="1402-1402"];
m0_817 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="DefaultContractResolver.cs", label="Assert.AreEqual(null, reader.ReadAsInt32())", span="1417-1417"];
m0_796 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="DefaultContractResolver.cs", label="reader = new JsonTextReader(new StringReader(''1''))", span="1386-1386"];
m0_798 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="DefaultContractResolver.cs", label="reader = new JsonTextReader(new StringReader(''-1''))", span="1389-1389"];
m0_800 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="DefaultContractResolver.cs", label="reader = new JsonTextReader(new StringReader(''0''))", span="1392-1392"];
m0_802 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="DefaultContractResolver.cs", label="reader = new JsonTextReader(new StringReader(''-0''))", span="1395-1395"];
m0_804 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="DefaultContractResolver.cs", label="reader = new JsonTextReader(new StringReader(int.MaxValue.ToString()))", span="1398-1398"];
m0_806 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="DefaultContractResolver.cs", label="reader = new JsonTextReader(new StringReader(int.MinValue.ToString()))", span="1401-1401"];
m0_808 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="DefaultContractResolver.cs", label="reader = new JsonTextReader(new StringReader(long.MaxValue.ToString()))", span="1404-1404"];
m0_810 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="DefaultContractResolver.cs", label="reader = new JsonTextReader(new StringReader(''9999999999999999999999999999999999999999999999999999999999999999999999999999asdasdasd''))", span="1407-1407"];
m0_812 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="DefaultContractResolver.cs", label="reader = new JsonTextReader(new StringReader(''1E-06''))", span="1410-1410"];
m0_814 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="DefaultContractResolver.cs", label="reader = new JsonTextReader(new StringReader(''1.1''))", span="1413-1413"];
m0_816 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="DefaultContractResolver.cs", label="reader = new JsonTextReader(new StringReader(''''))", span="1416-1416"];
m0_818 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="DefaultContractResolver.cs", label="reader = new JsonTextReader(new StringReader(''-''))", span="1419-1419"];
m0_795 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="DefaultContractResolver.cs", label="JsonTextReader reader = null", span="1384-1384"];
m0_809 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="DefaultContractResolver.cs", label="ExceptionAssert.Throws<JsonReaderException>(''JSON integer 9223372036854775807 is too large or small for an Int32. Path '', line 1, position 19.'', () => reader.ReadAsInt32())", span="1405-1405"];
m0_811 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="DefaultContractResolver.cs", label="ExceptionAssert.Throws<JsonReaderException>(''Input string '9999999999999999999999999999999999999999999999999999999999999999999999999999a' is not a valid integer. Path '', line 1, position 77.'', () => reader.ReadAsInt32())", span="1408-1408"];
m0_813 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="DefaultContractResolver.cs", label="ExceptionAssert.Throws<JsonReaderException>(''Input string '1E-06' is not a valid integer. Path '', line 1, position 5.'', () => reader.ReadAsInt32())", span="1411-1411"];
m0_815 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="DefaultContractResolver.cs", label="ExceptionAssert.Throws<JsonReaderException>(''Input string '1.1' is not a valid integer. Path '', line 1, position 3.'', () => reader.ReadAsInt32())", span="1414-1414"];
m0_819 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="DefaultContractResolver.cs", label="ExceptionAssert.Throws<JsonReaderException>(''Input string '-' is not a valid integer. Path '', line 1, position 1.'', () => reader.ReadAsInt32())", span="1420-1420"];
m0_820 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", span="1382-1382"];
m0_2009 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", span="355-355"];
m0_746 [cluster="Unk.AreEquivalent", file="DefaultContractResolver.cs", label="Entry Unk.AreEquivalent", span=""];
m0_539 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="members == null", span="1289-1289"];
m0_547 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="property.PropertyName = nameTable.Add(property.PropertyName)", span="1307-1307"];
m0_541 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="PropertyNameTable nameTable = GetNameTable()", span="1294-1294"];
m0_544 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="JsonProperty property = CreateProperty(member, memberSerialization)", span="1300-1300"];
m0_546 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label=nameTable, span="1305-1305"];
m0_540 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="throw new JsonSerializationException(''Null collection of serializable members returned.'');", span="1291-1291"];
m0_542 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="JsonPropertyCollection properties = new JsonPropertyCollection(type)", span="1296-1296"];
m0_543 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label=members, span="1298-1298"];
m0_545 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="property != null", span="1302-1302"];
m0_548 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="properties.AddProperty(property)", span="1310-1310"];
m0_555 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="DefaultContractResolver.cs", label="j < 1000", span="971-971"];
m0_1307 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", span="2098-2098"];
m0_1311 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2105-2105"];
m0_1313 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2108-2108"];
m0_1315 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2111-2111"];
m0_1316 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="DefaultContractResolver.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2112-2112"];
m0_1317 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="DefaultContractResolver.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(-6).Add(TimeSpan.FromMinutes(-31))), reader.Value)", span="2113-2113"];
m0_1319 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2116-2116"];
m0_1309 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2102-2102"];
m0_1310 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2104-2104"];
m0_1312 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2107-2107"];
m0_1318 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2115-2115"];
m0_1314 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="DefaultContractResolver.cs", label="reader.ReadAsDateTimeOffset()", span="2110-2110"];
m0_1308 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="DefaultContractResolver.cs", label="string json = @''{''''Offset'''':''''\/Date(946708260000-0631)\/''''}''", span="2100-2100"];
m0_1320 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", span="2098-2098"];
m0_764 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", span="1306-1306"];
m0_768 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="DefaultContractResolver.cs", label="Assert.AreEqual(0, jsonReader.Depth)", span="1314-1314"];
m0_770 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.StartObject, jsonReader.TokenType)", span="1317-1317"];
m0_771 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="DefaultContractResolver.cs", label="Assert.AreEqual(0, jsonReader.Depth)", span="1318-1318"];
m0_773 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonReader.TokenType)", span="1321-1321"];
m0_774 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="DefaultContractResolver.cs", label="Assert.AreEqual(1, jsonReader.Depth)", span="1322-1322"];
m0_776 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="DefaultContractResolver.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.String)", span="1325-1325"];
m0_777 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="DefaultContractResolver.cs", label="Assert.AreEqual(''Purple\r \n monkey's:\tdishwasher'', jsonReader.Value)", span="1326-1326"];
m0_778 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="DefaultContractResolver.cs", label="Assert.AreEqual('\'', jsonReader.QuoteChar)", span="1327-1327"];
m0_779 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="DefaultContractResolver.cs", label="Assert.AreEqual(1, jsonReader.Depth)", span="1328-1328"];
m0_781 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.EndObject, jsonReader.TokenType)", span="1331-1331"];
m0_782 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="DefaultContractResolver.cs", label="Assert.AreEqual(0, jsonReader.Depth)", span="1332-1332"];
m0_767 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="DefaultContractResolver.cs", label="JsonReader jsonReader = new JsonTextReader(sr)", span="1312-1312"];
m0_766 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="DefaultContractResolver.cs", label="StringReader sr = new StringReader(input)", span="1310-1310"];
m0_769 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="DefaultContractResolver.cs", label="jsonReader.Read()", span="1316-1316"];
m0_772 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="DefaultContractResolver.cs", label="jsonReader.Read()", span="1320-1320"];
m0_775 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="DefaultContractResolver.cs", label="jsonReader.Read()", span="1324-1324"];
m0_780 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="DefaultContractResolver.cs", label="jsonReader.Read()", span="1330-1330"];
m0_765 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="DefaultContractResolver.cs", label="string input = ''{value:'Purple\\r \\n monkey\\'s:\\tdishwasher'}''", span="1308-1308"];
m0_783 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", span="1306-1306"];
m0_2010 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", span="3192-3192"];
m0_2019 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="DefaultContractResolver.cs", label="Assert.AreEqual(''first'', jsonTextReader.Value)", span="3211-3211"];
m0_2024 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="DefaultContractResolver.cs", label="Assert.AreEqual(1L, jsonTextReader.Value)", span="3222-3222"];
m0_2012 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="DefaultContractResolver.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(toggleReaderError)", span="3195-3195"];
m0_2011 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="DefaultContractResolver.cs", label="ToggleReaderError toggleReaderError = new ToggleReaderError(new StringReader(''{'first':1,'second':2,'third':3}''))", span="3194-3194"];
m0_2013 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="DefaultContractResolver.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="3197-3197"];
m0_2018 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="DefaultContractResolver.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="3210-3210"];
m0_2023 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="DefaultContractResolver.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="3221-3221"];
m0_2020 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="DefaultContractResolver.cs", label="toggleReaderError.Error = true", span="3213-3213"];
m0_2025 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="DefaultContractResolver.cs", label="toggleReaderError.Error = true", span="3224-3224"];
m0_2015 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="DefaultContractResolver.cs", label="ExceptionAssert.Throws<Exception>(\r\n                ''Read error'',\r\n                () => jsonTextReader.Read())", span="3201-3203"];
m0_2016 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="DefaultContractResolver.cs", label="ExceptionAssert.Throws<Exception>(\r\n                ''Read error'',\r\n                () => jsonTextReader.Read())", span="3204-3206"];
m0_2021 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="DefaultContractResolver.cs", label="ExceptionAssert.Throws<Exception>(\r\n                ''Read error'',\r\n                () => jsonTextReader.Read())", span="3215-3217"];
m0_2026 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="DefaultContractResolver.cs", label="ExceptionAssert.Throws<Exception>(\r\n                ''Read error'',\r\n                () => jsonTextReader.Read())", span="3226-3228"];
m0_2027 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="DefaultContractResolver.cs", label="ExceptionAssert.Throws<Exception>(\r\n                ''Read error'',\r\n                () => jsonTextReader.Read())", span="3229-3231"];
m0_2028 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="DefaultContractResolver.cs", label="ExceptionAssert.Throws<Exception>(\r\n                ''Read error'',\r\n                () => jsonTextReader.Read())", span="3232-3234"];
m0_2014 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="DefaultContractResolver.cs", label="toggleReaderError.Error = true", span="3199-3199"];
m0_2017 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="DefaultContractResolver.cs", label="toggleReaderError.Error = false", span="3208-3208"];
m0_2022 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="DefaultContractResolver.cs", label="toggleReaderError.Error = false", span="3219-3219"];
m0_2029 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="DefaultContractResolver.cs", label="toggleReaderError.Error = false", span="3236-3236"];
m0_2030 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", span="3192-3192"];
m0_1355 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", span="2167-2167"];
m0_1360 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2175-2175"];
m0_1362 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2178-2178"];
m0_1364 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2181-2181"];
m0_1365 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="DefaultContractResolver.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2182-2182"];
m0_1369 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2188-2188"];
m0_1367 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="DefaultContractResolver.cs", label="Assert.AreEqual(new DateTime(2011, 1, 30, 0, 0, 0, DateTimeKind.Unspecified), dt.DateTime)", span="2185-2185"];
m0_1357 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2171-2171"];
m0_1359 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2174-2174"];
m0_1361 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2177-2177"];
m0_1368 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2187-2187"];
m0_1363 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="DefaultContractResolver.cs", label="reader.ReadAsDateTimeOffset()", span="2180-2180"];
m0_1366 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="DefaultContractResolver.cs", label="DateTimeOffset dt = (DateTimeOffset)reader.Value", span="2184-2184"];
m0_1356 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="DefaultContractResolver.cs", label="string json = @''{''''Offset'''':''''30/1/2011''''}''", span="2169-2169"];
m0_1358 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="DefaultContractResolver.cs", label="reader.Culture = new CultureInfo(''en-NZ'')", span="2172-2172"];
m0_1370 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", span="2167-2167"];
m0_1767 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", span="2836-2836"];
m0_1771 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2843-2843"];
m0_1772 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="DefaultContractResolver.cs", label="Assert.AreEqual(''comment'', reader.Value)", span="2844-2844"];
m0_1769 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2840-2840"];
m0_1770 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2842-2842"];
m0_1773 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="DefaultContractResolver.cs", label="Assert.IsFalse(reader.Read())", span="2846-2846"];
m0_1768 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="DefaultContractResolver.cs", label="string json = @''//comment''", span="2838-2838"];
m0_1774 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", span="2836-2836"];
m0_474 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", file="DefaultContractResolver.cs", label="InitializeContract(contract)", span="1105-1105"];
m0_478 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="IsJsonPrimitiveType(objectType)", span="1117-1117"];
m0_476 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", span="1102-1102"];
m0_475 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", file="DefaultContractResolver.cs", label="return contract;", span="1107-1107"];
m0_477 [cluster="Newtonsoft.Json.Serialization.JsonStringContract.JsonStringContract(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonStringContract.JsonStringContract(System.Type)", span="38-38"];
m0_479 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="return CreatePrimitiveContract(objectType);", span="1119-1119"];
m0_0 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", span="52-52"];
m0_1 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="DefaultContractResolver.cs", label="string json = @''{\r\n    ParentId: 1,\r\n    ChildId: 333333333333333333333333333333333333333,\r\n}''", span="54-57"];
m0_2 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="DefaultContractResolver.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="59-59"];
m0_162 [cluster="System.Type.IsAssignableFrom(System.Type)", file="DefaultContractResolver.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m0_1371 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", span="2193-2193"];
m0_1375 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2200-2200"];
m0_1377 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2203-2203"];
m0_1379 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2206-2206"];
m0_1380 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="DefaultContractResolver.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="2207-2207"];
m0_1381 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="DefaultContractResolver.cs", label="Assert.AreEqual(1m, reader.Value)", span="2208-2208"];
m0_1373 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2197-2197"];
m0_1374 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2199-2199"];
m0_1376 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2202-2202"];
m0_1378 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="DefaultContractResolver.cs", label="reader.ReadAsDecimal()", span="2205-2205"];
m0_1372 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="DefaultContractResolver.cs", label="string json = @''{''''Name'''':1}''", span="2195-2195"];
m0_1382 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", span="2193-2193"];
m0_1409 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", span="2250-2250"];
m0_1410 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''nullz''))", span="2252-2252"];
m0_1411 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", file="DefaultContractResolver.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Error parsing null value. Path '', line 1, position 4.'',\r\n                () => { reader.Read(); })", span="2254-2256"];
m0_1412 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", span="2250-2250"];
m0_192 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="DefaultContractResolver.cs", label="Assert.AreEqual(@''#C16------------------------------\r\n#C12Ingredients #C20\r\n#C16------------------------------\r\n\r\na piece of Leather Armor\r\n( ie #L ''''Enhanced Leather Armor Boots'''' ''''85644'''' )\r\n<img src=rdb://13264>\r\n\r\n#L ''''Hacker Tool'''' ''''87814''''\r\n<img src=rdb://99282>\r\n\r\n#L ''''Clanalizer'''' ''''208313''''\r\n<img src=rdb://156479>\r\n\r\n#C16------------------------------\r\n#C12Recipe #C16\r\n#C16------------------------------#C20\r\n\r\nHacker Tool\r\n#C15+#C20\r\na piece of Leather Armor\r\n#C15=#C20\r\n<img src=rdb://13264>\r\na piece of Hacked Leather Armor\r\n( ie : #L ''''Hacked Leather Armor Boots'''' ''''245979'''' )\r\n#C16Skills: |  BE  |#C20\r\n\r\n#C14------------------------------#C20\r\n\r\nClanalizer\r\n#C15+#C20\r\na piece of Hacked Leather Armor\r\n#C15=#C20\r\n<img src=rdb://13264>\r\na piece of Apocalypse Leather Armor\r\n( ie : #L ''''Apocalypse Leather Armor Boots'''' ''''245966'''' )\r\n#C16Skills: |  ??  |#C20\r\n\r\n#C16------------------------------\r\n#C12Details#C16\r\n#C16------------------------------#C20\r\n\r\n#L ''''Apocalypse Leather Armor Boots'''' ''''245967''''\r\n#L ''''Apocalypse Leather Armor Gloves'''' ''''245969''''\r\n#L ''''Apocalypse Leather Armor Helmet'''' ''''245975''''\r\n#L ''''Apocalypse Leather Armor Pants'''' ''''245971''''\r\n#L ''''Apocalypse Leather Armor Sleeves'''' ''''245973''''\r\n#L ''''Apocalypse Leather Body Armor'''' ''''245965''''\r\n\r\n#C16------------------------------\r\n#C12Comments#C16\r\n#C16------------------------------#C20\r\n\r\nNice froob armor.. but ugleh!\r\n\r\n'', reader.Value)", span="325-380"];
m0_3 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="DefaultContractResolver.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="61-61"];
m0_4 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", span="62-62"];
m0_5 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="DefaultContractResolver.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="64-64"];
m0_8 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Integer, jsonTextReader.TokenType)", span="68-68"];
m0_9 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="DefaultContractResolver.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="70-70"];
m0_13 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="DefaultContractResolver.cs", label="Assert.AreEqual(typeof(BigInteger), jsonTextReader.ValueType)", span="75-75"];
m0_6 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="65-65"];
m0_7 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="DefaultContractResolver.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="67-67"];
m0_15 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="DefaultContractResolver.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="78-78"];
m0_10 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="71-71"];
m0_11 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="DefaultContractResolver.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="73-73"];
m0_12 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Integer, jsonTextReader.TokenType)", span="74-74"];
m0_14 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="DefaultContractResolver.cs", label="Assert.AreEqual(BigInteger.Parse(''333333333333333333333333333333333333333''), jsonTextReader.Value)", span="76-76"];
m0_16 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", span="79-79"];
m0_1194 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", span="1923-1923"];
m0_1195 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''new Date()''))", span="1925-1925"];
m0_1196 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="DefaultContractResolver.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Error reading date. Unexpected token: StartConstructor. Path '', line 1, position 9.'',\r\n                () => { reader.ReadAsDateTimeOffset(); })", span="1927-1929"];
m0_1197 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", span="1923-1923"];
m0_417 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DefaultContractResolver.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.EndArray)", span="768-768"];
m0_1423 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", span="2270-2270"];
m0_1424 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''/sdf''))", span="2272-2272"];
m0_1425 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="DefaultContractResolver.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Error parsing comment. Expected: *, got s. Path '', line 1, position 1.'',\r\n                () => { reader.Read(); })", span="2274-2276"];
m0_1426 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", span="2270-2270"];
m0_1250 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", span="2014-2014"];
m0_1254 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2021-2021"];
m0_1256 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2024-2024"];
m0_1258 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2027-2027"];
m0_1259 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="DefaultContractResolver.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2028-2028"];
m0_1260 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="DefaultContractResolver.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), reader.Value)", span="2029-2029"];
m0_1262 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2032-2032"];
m0_1252 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2018-2018"];
m0_1253 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2020-2020"];
m0_1255 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2023-2023"];
m0_1261 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2031-2031"];
m0_1257 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="DefaultContractResolver.cs", label="reader.ReadAsDateTimeOffset()", span="2026-2026"];
m0_1251 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="DefaultContractResolver.cs", label="string json = ''{\''Offset\'':\''\\/Date(946663200000+0600)\\/\''}''", span="2016-2016"];
m0_1263 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", span="2014-2014"];
m0_1595 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", span="2563-2563"];
m0_1596 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''true/''))", span="2565-2565"];
m0_1597 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", file="DefaultContractResolver.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Error parsing boolean value. Path '', line 1, position 4.'',\r\n                () => { reader.Read(); })", span="2567-2569"];
m0_1598 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", span="2563-2563"];
m0_693 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DefaultContractResolver.cs", label="Assert.AreEqual(61, reader.LineNumber)", span="1212-1212"];
m0_1215 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", span="1955-1955"];
m0_1216 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[1.0]''))", span="1957-1957"];
m0_1217 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="DefaultContractResolver.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unexpected token when reading bytes: Float. Path '[0]', line 1, position 4.'',\r\n                () => { reader.ReadAsBytes(); })", span="1959-1961"];
m0_1218 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", span="1955-1955"];
m0_157 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="DefaultContractResolver.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="273-273"];
m0_133 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", span="223-223"];
m0_200 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="394-394"];
m0_234 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(ms))", span="454-454"];
m0_299 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="property.AttributeProvider = new ReflectionAttributeProvider(parameterInfo)", span="692-692"];
m0_301 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="SetPropertySettingsFromAttributes(property, parameterInfo, parameterInfo.Name, parameterInfo.Member.DeclaringType, MemberSerialization.OptOut, out allowNonPublicAccess)", span="695-695"];
m0_302 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="property.Readable = false", span="697-697"];
m0_300 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="bool allowNonPublicAccess", span="694-694"];
m0_303 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="property.Writable = true", span="698-698"];
m0_731 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", span="1264-1264"];
m0_736 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="1271-1271"];
m0_738 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1273-1273"];
m0_741 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Bytes, reader.TokenType)", span="1276-1276"];
m0_743 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="1278-1278"];
m0_734 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="DefaultContractResolver.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''[1,''' + Convert.ToBase64String(helloWorldData) + @''']''))", span="1269-1269"];
m0_735 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="1270-1270"];
m0_737 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="1272-1272"];
m0_742 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="1277-1277"];
m0_739 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="DefaultContractResolver.cs", label="byte[] data = reader.ReadAsBytes()", span="1274-1274"];
m0_740 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="DefaultContractResolver.cs", label="CollectionAssert.AreEquivalent(helloWorldData, data)", span="1275-1275"];
m0_744 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="DefaultContractResolver.cs", label="Assert.IsFalse(reader.Read())", span="1280-1280"];
m0_733 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="DefaultContractResolver.cs", label="byte[] helloWorldData = Encoding.UTF8.GetBytes(helloWorld)", span="1267-1267"];
m0_732 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="DefaultContractResolver.cs", label="string helloWorld = ''Hello world!''", span="1266-1266"];
m0_745 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", span="1264-1264"];
m0_789 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", span="1351-1351"];
m0_791 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1375-1375"];
m0_792 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="DefaultContractResolver.cs", label="reader.Read()", span="1376-1376"];
m0_790 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="DefaultContractResolver.cs", label="string json = @''[\r\n  true,\r\n  {\r\n    ''''integer'''': 99,\r\n    ''''string'''': ''''how now brown cow?'''',\r\n    ''''array'''': [\r\n      0,\r\n      1,\r\n      2,\r\n      3,\r\n      4,\r\n      {\r\n        ''''decimal'''': 990.00990099\r\n      },\r\n      5\r\n    ]\r\n  },\r\n  ''''This is a string.'''',\r\n  null,\r\n  null\r\n]''", span="1353-1373"];
m0_793 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", span="1351-1351"];
m0_945 [cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="357-357"];
m0_2050 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", span="3243-3243"];
m0_2062 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="DefaultContractResolver.cs", label="Assert.AreEqual(decimal.MaxValue, max)", span="3261-3261"];
m0_2064 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="DefaultContractResolver.cs", label="Assert.AreEqual(decimal.MinValue, min)", span="3264-3264"];
m0_2059 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(sr)", span="3256-3256"];
m0_2058 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="DefaultContractResolver.cs", label="StringReader sr = new StringReader(json)", span="3255-3255"];
m0_2060 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="3258-3258"];
m0_2065 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="3266-3266"];
m0_2061 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="DefaultContractResolver.cs", label="decimal? max = reader.ReadAsDecimal()", span="3260-3260"];
m0_2063 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="DefaultContractResolver.cs", label="decimal? min = reader.ReadAsDecimal()", span="3263-3263"];
m0_2057 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="DefaultContractResolver.cs", label="string json = sw.ToString()", span="3253-3253"];
m0_2051 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="DefaultContractResolver.cs", label="StringWriter sw = new StringWriter()", span="3245-3245"];
m0_2056 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="DefaultContractResolver.cs", label="writer.WriteEndArray()", span="3251-3251"];
m0_2052 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="DefaultContractResolver.cs", label="JsonTextWriter writer = new JsonTextWriter(sw)", span="3246-3246"];
m0_2055 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="DefaultContractResolver.cs", label="writer.WriteValue(decimal.MinValue)", span="3250-3250"];
m0_2053 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="DefaultContractResolver.cs", label="writer.WriteStartArray()", span="3248-3248"];
m0_2054 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="DefaultContractResolver.cs", label="writer.WriteValue(decimal.MaxValue)", span="3249-3249"];
m0_2066 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", span="3243-3243"];
m0_560 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetNameTable()", file="DefaultContractResolver.cs", label="return _nameTable;", span="1320-1320"];
m0_1383 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", span="2212-2212"];
m0_1387 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2219-2219"];
m0_1389 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2222-2222"];
m0_1385 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2216-2216"];
m0_1386 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2218-2218"];
m0_1388 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2221-2221"];
m0_1390 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="DefaultContractResolver.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Input string '1.1' is not a valid integer. Path 'Name', line 1, position 12.'',\r\n                () => { reader.ReadAsInt32(); })", span="2224-2226"];
m0_1384 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="DefaultContractResolver.cs", label="string json = @''{''''Name'''': 1.1}''", span="2214-2214"];
m0_1391 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", span="2212-2212"];
m0_565 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", span="985-985"];
m0_566 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="DefaultContractResolver.cs", label="long i = int.MinValue", span="987-987"];
m0_567 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="989-989"];
m0_568 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="DefaultContractResolver.cs", label="reader.Read()", span="990-990"];
m0_232 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.GetEnumerator()", file="DefaultContractResolver.cs", label="yield return new KeyValuePair<object, object>(item.Key, item.Value);", span="545-545"];
m0_239 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="DefaultContractResolver.cs", label="en.MoveNext()", span="559-559"];
m0_235 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.System.Collections.IEnumerable.GetEnumerator()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.System.Collections.IEnumerable.GetEnumerator()", span="549-549"];
m0_240 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="DefaultContractResolver.cs", label="ConstructorInfo conInfo = en.Current", span="561-561"];
m0_242 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="DefaultContractResolver.cs", label="throw new JsonException(''Multiple constructors with the JsonConstructorAttribute.'');", span="564-564"];
m0_233 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.GetEnumerator()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.GetEnumerator()", span="541-541"];
m0_236 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.System.Collections.IEnumerable.GetEnumerator()", file="DefaultContractResolver.cs", label="return GetEnumerator();", span="551-551"];
m0_238 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="DefaultContractResolver.cs", label="IEnumerator<ConstructorInfo> en = objectType.GetConstructors(BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).Where(c => c.IsDefined(typeof(JsonConstructorAttribute), true)).GetEnumerator()", span="557-557"];
m0_241 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="DefaultContractResolver.cs", label="en.MoveNext()", span="562-562"];
m0_237 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.System.Collections.IEnumerable.GetEnumerator()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.System.Collections.IEnumerable.GetEnumerator()", span="549-549"];
m0_243 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="DefaultContractResolver.cs", label="return conInfo;", span="567-567"];
m0_1237 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", span="1992-1992"];
m0_1241 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1999-1999"];
m0_1243 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2002-2002"];
m0_1245 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2005-2005"];
m0_1246 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="DefaultContractResolver.cs", label="Assert.AreEqual(11806310474565, reader.Value)", span="2006-2006"];
m0_1248 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2009-2009"];
m0_1239 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1996-1996"];
m0_1240 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="1998-1998"];
m0_1242 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2001-2001"];
m0_1244 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2004-2004"];
m0_1247 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2008-2008"];
m0_1238 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="DefaultContractResolver.cs", label="string json = @''{''''text'''':0xabcdef12345}''", span="1994-1994"];
m0_1249 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", span="1992-1992"];
m0_1087 [cluster="Unk.IsNotNull", file="DefaultContractResolver.cs", label="Entry Unk.IsNotNull", span=""];
m0_941 [cluster="System.Text.StringBuilder.StringBuilder()", file="DefaultContractResolver.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m0_28 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="List<MemberInfo> serializableMembers = new List<MemberInfo>()", span="215-215"];
m0_17 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="DefaultContractResolver.cs", label="Assert.IsFalse(jsonTextReader.Read())", span="81-81"];
m0_246 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="DefaultContractResolver.cs", label="return null;", span="576-576"];
m0_248 [cluster="System.Type.GetConstructors(System.Reflection.BindingFlags)", file="DefaultContractResolver.cs", label="Entry System.Type.GetConstructors(System.Reflection.BindingFlags)", span="0-0"];
m0_247 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", span="555-555"];
m0_249 [cluster="System.Collections.Generic.IEnumerable<T>.GetEnumerator()", file="DefaultContractResolver.cs", label="Entry System.Collections.Generic.IEnumerable<T>.GetEnumerator()", span="0-0"];
m0_251 [cluster="System.Type.GetConstructor(System.Type[])", file="DefaultContractResolver.cs", label="Entry System.Type.GetConstructor(System.Type[])", span="0-0"];
m0_530 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="913-913"];
m0_439 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DefaultContractResolver.cs", label="Assert.AreEqual(''subobject.proparray'', reader.Path)", span="795-795"];
m0_1444 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", span="2302-2302"];
m0_1449 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2310-2310"];
m0_1451 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2313-2313"];
m0_1453 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2316-2316"];
m0_1454 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="DefaultContractResolver.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="2317-2317"];
m0_1457 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2321-2321"];
m0_1455 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="DefaultContractResolver.cs", label="Assert.AreEqual(9.99m, d)", span="2318-2318"];
m0_1446 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2306-2306"];
m0_1448 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2309-2309"];
m0_1450 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2312-2312"];
m0_1456 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2320-2320"];
m0_1452 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="DefaultContractResolver.cs", label="decimal? d = reader.ReadAsDecimal()", span="2315-2315"];
m0_1445 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="DefaultContractResolver.cs", label="string json = @''{''''decimal'''':''''9,99''''}''", span="2304-2304"];
m0_1447 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="DefaultContractResolver.cs", label="reader.Culture = new CultureInfo(''fr-FR'')", span="2307-2307"];
m0_1458 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", span="2302-2302"];
m0_255 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="DefaultContractResolver.cs", label="string json = @''{''''DefaultConverter'''':new Date(0, ''''hi''''),''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}''", span="504-504"];
m0_263 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="DefaultContractResolver.cs", label="Assert.AreEqual(0L, reader.Value)", span="515-515"];
m0_256 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="DefaultContractResolver.cs", label="JsonReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="506-506"];
m0_257 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="508-508"];
m0_258 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="509-509"];
m0_259 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="510-510"];
m0_267 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="521-521"];
m0_260 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="511-511"];
m0_266 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="520-520"];
m0_261 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="DefaultContractResolver.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="512-512"];
m0_262 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="514-514"];
m0_264 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="517-517"];
m0_265 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="DefaultContractResolver.cs", label="Assert.AreEqual(''hi'', reader.Value)", span="518-518"];
m0_268 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="523-523"];
m0_1642 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", span="2633-2633"];
m0_1646 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2647-2647"];
m0_1648 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2650-2650"];
m0_1650 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2653-2653"];
m0_1652 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2656-2656"];
m0_1653 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(''Name'', reader.Value)", span="2657-2657"];
m0_1655 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2660-2660"];
m0_1657 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="2663-2663"];
m0_1658 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(true, reader.Value)", span="2664-2664"];
m0_1660 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2667-2667"];
m0_1662 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2670-2670"];
m0_1664 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2673-2673"];
m0_1665 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(''ExpiryDate'', reader.Value)", span="2674-2674"];
m0_1667 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2677-2677"];
m0_1669 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2680-2680"];
m0_1670 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(5, reader.LineNumber)", span="2681-2681"];
m0_1671 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="2682-2682"];
m0_1673 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2685-2685"];
m0_1675 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="2688-2688"];
m0_1677 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2691-2691"];
m0_1679 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2694-2694"];
m0_1644 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2644-2644"];
m0_1645 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2646-2646"];
m0_1647 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2649-2649"];
m0_1649 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2652-2652"];
m0_1651 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2655-2655"];
m0_1654 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2659-2659"];
m0_1656 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2662-2662"];
m0_1659 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2666-2666"];
m0_1661 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2669-2669"];
m0_1663 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2672-2672"];
m0_1666 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2676-2676"];
m0_1668 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2679-2679"];
m0_1672 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2684-2684"];
m0_1674 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2687-2687"];
m0_1676 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2690-2690"];
m0_1678 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2693-2693"];
m0_1643 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DefaultContractResolver.cs", label="string json = @''/*comment*/{/*comment*/Name:/*comment*/true/*comment*/,/*comment*/\r\n        ''''ExpiryDate'''':/*comment*/new\r\n'' + StringUtils.LineFeed +\r\n                          @''Date\r\n(/*comment*/null/*comment*/),\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''':/*comment*/[/*comment*/\r\n          ''''Small''''/*comment*/]/*comment*/}/*comment*/''", span="2635-2642"];
m0_1680 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", span="2633-2633"];
m0_401 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DefaultContractResolver.cs", label="reader.Read()", span="749-749"];
m0_1338 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", span="2142-2142"];
m0_1343 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2150-2150"];
m0_1345 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2153-2153"];
m0_1347 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2156-2156"];
m0_1348 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="DefaultContractResolver.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2157-2157"];
m0_1352 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2163-2163"];
m0_1350 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="DefaultContractResolver.cs", label="Assert.AreEqual(new DateTime(2011, 1, 30, 0, 0, 0, DateTimeKind.Unspecified), dt.DateTime)", span="2160-2160"];
m0_1340 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2146-2146"];
m0_1342 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2149-2149"];
m0_1344 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2152-2152"];
m0_1351 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2162-2162"];
m0_1346 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="DefaultContractResolver.cs", label="reader.ReadAsDateTimeOffset()", span="2155-2155"];
m0_1349 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="DefaultContractResolver.cs", label="DateTimeOffset dt = (DateTimeOffset)reader.Value", span="2159-2159"];
m0_1339 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="DefaultContractResolver.cs", label="string json = @''{''''Offset'''':''''1/30/2011''''}''", span="2144-2144"];
m0_1341 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="DefaultContractResolver.cs", label="reader.Culture = new CultureInfo(''en-US'')", span="2147-2147"];
m0_1353 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", span="2142-2142"];
m0_460 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", span="696-696"];
m0_461 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", span="825-825"];
m0_462 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", file="DefaultContractResolver.cs", label="ExceptionAssert.Throws<ArgumentNullException>(\r\n                @''Value cannot be null.\r\nParameter name: reader'',\r\n                () => { new JsonTextReader(null); })", span="827-830"];
m0_463 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", span="825-825"];
m0_1128 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", span="1821-1821"];
m0_1132 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="1827-1827"];
m0_1134 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1830-1830"];
m0_1135 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="DefaultContractResolver.cs", label="Assert.AreEqual(typeof(int), jsonReader.ValueType)", span="1831-1831"];
m0_1136 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="DefaultContractResolver.cs", label="Assert.AreEqual(250, jsonReader.Value)", span="1832-1832"];
m0_1138 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1835-1835"];
m0_1139 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="DefaultContractResolver.cs", label="Assert.AreEqual(typeof(int), jsonReader.ValueType)", span="1836-1836"];
m0_1140 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="DefaultContractResolver.cs", label="Assert.AreEqual(250, jsonReader.Value)", span="1837-1837"];
m0_1142 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1840-1840"];
m0_1143 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="DefaultContractResolver.cs", label="Assert.AreEqual(typeof(int), jsonReader.ValueType)", span="1841-1841"];
m0_1144 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="DefaultContractResolver.cs", label="Assert.AreEqual(250, jsonReader.Value)", span="1842-1842"];
m0_1146 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="1845-1845"];
m0_1130 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="DefaultContractResolver.cs", label="JsonTextReader jsonReader = new JsonTextReader(s)", span="1824-1824"];
m0_1129 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="DefaultContractResolver.cs", label="StringReader s = new StringReader(@''[0372, 0xFA, 0XFA]'')", span="1823-1823"];
m0_1131 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="DefaultContractResolver.cs", label="Assert.IsTrue(jsonReader.Read())", span="1826-1826"];
m0_1145 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="DefaultContractResolver.cs", label="Assert.IsTrue(jsonReader.Read())", span="1844-1844"];
m0_1147 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="DefaultContractResolver.cs", label="Assert.IsFalse(jsonReader.Read())", span="1847-1847"];
m0_1133 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="DefaultContractResolver.cs", label="jsonReader.ReadAsInt32()", span="1829-1829"];
m0_1137 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="DefaultContractResolver.cs", label="jsonReader.ReadAsInt32()", span="1834-1834"];
m0_1141 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="DefaultContractResolver.cs", label="jsonReader.ReadAsInt32()", span="1839-1839"];
m0_1148 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", span="1821-1821"];
m0_718 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", span="1247-1247"];
m0_722 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1252-1252"];
m0_723 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="DefaultContractResolver.cs", label="Assert.AreEqual(@''hi\r\nbye'', reader.Value)", span="1253-1254"];
m0_725 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1256-1256"];
m0_726 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="DefaultContractResolver.cs", label="Assert.AreEqual(1L, reader.Value)", span="1257-1257"];
m0_728 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1259-1259"];
m0_719 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="DefaultContractResolver.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''{'hi\r\nbye':1}''))", span="1249-1249"];
m0_720 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="1250-1250"];
m0_721 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="1251-1251"];
m0_724 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="1255-1255"];
m0_727 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="1258-1258"];
m0_729 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="DefaultContractResolver.cs", label="Assert.IsFalse(reader.Read())", span="1260-1260"];
m0_730 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", span="1247-1247"];
m0_680 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="1195-1195"];
m0_502 [cluster="System.IO.StringWriter.StringWriter()", file="DefaultContractResolver.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m0_507 [cluster="System.IO.StringWriter.ToString()", file="DefaultContractResolver.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m0_508 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", span="880-880"];
m0_509 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="DefaultContractResolver.cs", label="string json = ''\0{\0'\0h\0i\0'\0:\0[\01\0,\0'\0'\0\0,\0null\0]\0,\0do\0:true\0}\0\0/*\0sd\0f\0*/\0/*\0sd\0f\0*/ \0''", span="882-882"];
m0_510 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="883-883"];
m0_55 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="DefaultContractResolver.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Input string '0f' is not a valid integer. Path '[3]', line 5, position 5.'',\r\n                () => jsonTextReader.ReadAsInt32())", span="141-143"];
m0_88 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="ConstructorInfo constructor = GetParameterizedConstructor(contract.NonNullableUnderlyingType)", span="368-368"];
m0_92 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="contract.NonNullableUnderlyingType.IsValueType()", span="375-375"];
m0_94 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="constructor != null", span="380-380"];
m0_96 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="contract.CreatorParameters.AddRange(CreateConstructorParameters(constructor, contract.Properties))", span="383-383"];
m0_97 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="MemberInfo extensionDataMember = GetExtensionDataMemberForType(contract.NonNullableUnderlyingType)", span="388-388"];
m0_99 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="SetExtensionDataDelegates(contract, extensionDataMember)", span="391-391"];
m0_90 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="contract.ParameterizedCreator = JsonTypeReflector.ReflectionDelegateFactory.CreateParameterizedConstructor(constructor)", span="371-371"];
m0_91 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="contract.CreatorParameters.AddRange(CreateConstructorParameters(constructor, contract.Properties))", span="372-372"];
m0_93 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="ConstructorInfo constructor = GetImmutableConstructor(contract.NonNullableUnderlyingType, contract.Properties)", span="379-379"];
m0_95 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="contract.OverrideCreator = JsonTypeReflector.ReflectionDelegateFactory.CreateParameterizedConstructor(constructor)", span="382-382"];
m0_98 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="extensionDataMember != null", span="389-389"];
m0_100 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="return contract;", span="394-394"];
m0_89 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="constructor != null", span="369-369"];
m0_101 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", span="310-310"];
m0_404 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DefaultContractResolver.cs", label="Assert.AreEqual(2, reader.Depth)", span="752-752"];
m0_536 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="DefaultContractResolver.cs", label="Assert.AreEqual(''\0sd\0f\0'', reader.Value)", span="921-921"];
m0_512 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="return false;", span="1227-1227"];
m0_514 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="throw new JsonException(''Invalid attribute. Both '{0}' and '{1}' in type '{2}' have '{3}'.''.FormatWith(CultureInfo.InvariantCulture, method, currentCallback, GetClrTypeFullName(method.DeclaringType), attributeType));", span="1232-1232"];
m0_516 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="throw new JsonException(''Invalid Callback. Method '{3}' in type '{2}' has both '{0}' and '{1}'.''.FormatWith(CultureInfo.InvariantCulture, prevAttributeType, attributeType, GetClrTypeFullName(method.DeclaringType), method));", span="1237-1237"];
m0_518 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="throw new JsonException(''Virtual Method '{0}' of type '{1}' cannot be marked with '{2}' attribute.''.FormatWith(CultureInfo.InvariantCulture, method, GetClrTypeFullName(method.DeclaringType), attributeType));", span="1242-1242"];
m0_520 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="throw new JsonException(''Serialization Callback '{1}' in type '{0}' must return void.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(method.DeclaringType), method));", span="1247-1247"];
m0_522 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="parameters == null || parameters.Length != 2 || parameters[0].ParameterType != typeof(StreamingContext) || parameters[1].ParameterType != typeof(ErrorContext)", span="1252-1252"];
m0_524 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="parameters == null || parameters.Length != 1 || parameters[0].ParameterType != typeof(StreamingContext)", span="1259-1259"];
m0_526 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="prevAttributeType = attributeType", span="1265-1265"];
m0_528 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", span="1223-1223"];
m0_532 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", file="DefaultContractResolver.cs", label="type.IsGenericTypeDefinition() || !type.ContainsGenericParameters()", span="1272-1272"];
m0_533 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", file="DefaultContractResolver.cs", label="return type.FullName;", span="1274-1274"];
m0_535 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", span="1270-1270"];
m0_511 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="!method.IsDefined(attributeType, false)", span="1225-1225"];
m0_513 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="currentCallback != null", span="1230-1230"];
m0_515 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="prevAttributeType != null", span="1235-1235"];
m0_517 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="method.IsVirtual", span="1240-1240"];
m0_519 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="method.ReturnType != typeof(void)", span="1245-1245"];
m0_521 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="attributeType == typeof(OnErrorAttribute)", span="1250-1250"];
m0_523 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="throw new JsonException(''Serialization Error Callback '{1}' in type '{0}' must have two parameters of type '{2}' and '{3}'.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(method.DeclaringType), method, typeof(StreamingContext), typeof(ErrorContext)));", span="1254-1254"];
m0_525 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="throw new JsonException(''Serialization Callback '{1}' in type '{0}' must have a single parameter of type '{2}'.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(method.DeclaringType), method, typeof(StreamingContext)));", span="1261-1261"];
m0_527 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="return true;", span="1267-1267"];
m0_529 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", span="1270-1270"];
m0_534 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", file="DefaultContractResolver.cs", label="return ''{0}.{1}''.FormatWith(CultureInfo.InvariantCulture, type.Namespace, type.Name);", span="1277-1277"];
m0_538 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="List<MemberInfo> members = GetSerializableMembers(type)", span="1288-1288"];
m0_229 [cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="31-31"];
m0_552 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="DefaultContractResolver.cs", label="reader.Read()", span="968-968"];
m0_126 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="232-232"];
m0_954 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", span="650-650"];
m0_418 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DefaultContractResolver.cs", label="Assert.AreEqual(1, reader.Depth)", span="769-769"];
m0_1162 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", span="1872-1872"];
m0_1165 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1877-1877"];
m0_1163 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''''))", span="1874-1874"];
m0_1164 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="DefaultContractResolver.cs", label="Assert.IsNull(reader.ReadAsBytes())", span="1876-1876"];
m0_1166 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", span="1872-1872"];
m0_694 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DefaultContractResolver.cs", label="Assert.AreEqual(1L, reader.Value)", span="1213-1213"];
m0_695 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="1215-1215"];
m0_696 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DefaultContractResolver.cs", label="Assert.AreEqual(73, reader.LineNumber)", span="1216-1216"];
m0_697 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DefaultContractResolver.cs", label="Assert.AreEqual(null, reader.Value)", span="1217-1217"];
m0_698 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="1219-1219"];
m0_1470 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", span="2355-2355"];
m0_1478 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2379-2379"];
m0_1472 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2368-2368"];
m0_1475 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2375-2375"];
m0_1477 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2378-2378"];
m0_1479 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="DefaultContractResolver.cs", label="Assert.IsFalse(reader.Read())", span="2381-2381"];
m0_1471 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="DefaultContractResolver.cs", label="string json = @''/*comment*/ { /*comment*/\r\n        ''''Name'''': /*comment*/ ''''Apple'''' /*comment*/, /*comment*/\r\n        ''''ExpiryDate'''': ''''\/Date(1230422400000)\/'''',\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': /*comment*/ [ /*comment*/\r\n          ''''Small'''', /*comment*/\r\n          ''''Medium'''' /*comment*/,\r\n          /*comment*/ ''''Large''''\r\n        /*comment*/ ] /*comment*/\r\n      } /*comment*/''", span="2357-2366"];
m0_1473 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="DefaultContractResolver.cs", label="int i = 0", span="2373-2373"];
m0_1474 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="DefaultContractResolver.cs", label="i < 26", span="2373-2373"];
m0_1476 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="DefaultContractResolver.cs", label="i++", span="2373-2373"];
m0_1480 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", span="2355-2355"];
m0_1954 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", span="3121-3121"];
m0_1960 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DefaultContractResolver.cs", label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="3130-3130"];
m0_1961 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DefaultContractResolver.cs", label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="3131-3131"];
m0_1963 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DefaultContractResolver.cs", label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="3133-3133"];
m0_1964 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DefaultContractResolver.cs", label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="3134-3134"];
m0_1970 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DefaultContractResolver.cs", label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="3143-3143"];
m0_1971 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DefaultContractResolver.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="3144-3144"];
m0_1973 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DefaultContractResolver.cs", label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="3146-3146"];
m0_1974 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DefaultContractResolver.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="3147-3147"];
m0_1980 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DefaultContractResolver.cs", label="Assert.AreEqual(@''1970-01-01T00:00:00Z'', reader.Value)", span="3156-3156"];
m0_1981 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DefaultContractResolver.cs", label="Assert.AreEqual(typeof(string), reader.ValueType)", span="3157-3157"];
m0_1983 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DefaultContractResolver.cs", label="Assert.AreEqual(@''/Date(0)/'', reader.Value)", span="3159-3159"];
m0_1984 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DefaultContractResolver.cs", label="Assert.AreEqual(typeof(string), reader.ValueType)", span="3160-3160"];
m0_1990 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DefaultContractResolver.cs", label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="3169-3169"];
m0_1991 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DefaultContractResolver.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="3170-3170"];
m0_1993 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DefaultContractResolver.cs", label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="3172-3172"];
m0_1994 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DefaultContractResolver.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="3173-3173"];
m0_2000 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DefaultContractResolver.cs", label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="3182-3182"];
m0_2001 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DefaultContractResolver.cs", label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="3183-3183"];
m0_2003 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DefaultContractResolver.cs", label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="3185-3185"];
m0_2004 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DefaultContractResolver.cs", label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="3186-3186"];
m0_1956 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3125-3125"];
m0_1966 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DefaultContractResolver.cs", label="reader = new JsonTextReader(new StringReader(json))", span="3138-3138"];
m0_1976 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DefaultContractResolver.cs", label="reader = new JsonTextReader(new StringReader(json))", span="3151-3151"];
m0_1986 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DefaultContractResolver.cs", label="reader = new JsonTextReader(new StringReader(json))", span="3164-3164"];
m0_1996 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DefaultContractResolver.cs", label="reader = new JsonTextReader(new StringReader(json))", span="3177-3177"];
m0_1958 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="3128-3128"];
m0_1959 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="3129-3129"];
m0_1962 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="3132-3132"];
m0_1965 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="3135-3135"];
m0_1968 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="3141-3141"];
m0_1969 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="3142-3142"];
m0_1972 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="3145-3145"];
m0_1975 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="3148-3148"];
m0_1978 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="3154-3154"];
m0_1979 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="3155-3155"];
m0_1982 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="3158-3158"];
m0_1985 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="3161-3161"];
m0_1988 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="3167-3167"];
m0_1995 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="3174-3174"];
m0_1998 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="3180-3180"];
m0_2005 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="3187-3187"];
m0_1989 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DefaultContractResolver.cs", label="reader.ReadAsDateTimeOffset()", span="3168-3168"];
m0_1992 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DefaultContractResolver.cs", label="reader.ReadAsDateTimeOffset()", span="3171-3171"];
m0_1999 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DefaultContractResolver.cs", label="reader.ReadAsDateTime()", span="3181-3181"];
m0_2002 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DefaultContractResolver.cs", label="reader.ReadAsDateTime()", span="3184-3184"];
m0_1955 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DefaultContractResolver.cs", label="string json = @''[''''1970-01-01T00:00:00Z'''',''''\/Date(0)\/'''']''", span="3123-3123"];
m0_1957 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DefaultContractResolver.cs", label="reader.DateParseHandling = Json.DateParseHandling.DateTime", span="3126-3126"];
m0_1967 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DefaultContractResolver.cs", label="reader.DateParseHandling = Json.DateParseHandling.DateTimeOffset", span="3139-3139"];
m0_1977 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DefaultContractResolver.cs", label="reader.DateParseHandling = Json.DateParseHandling.None", span="3152-3152"];
m0_1987 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DefaultContractResolver.cs", label="reader.DateParseHandling = Json.DateParseHandling.DateTime", span="3165-3165"];
m0_1997 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DefaultContractResolver.cs", label="reader.DateParseHandling = Json.DateParseHandling.DateTimeOffset", span="3178-3178"];
m0_2006 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", span="3121-3121"];
m0_946 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="407-407"];
m0_195 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="DefaultContractResolver.cs", label="string json = @''{ ''''MATHEMATICAL ITALIC CAPITAL ALPHA'''': ''''\uD835\uDEE2'''' }''", span="386-386"];
m0_943 [cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="373-373"];
m0_1157 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", span="1863-1863"];
m0_1160 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1868-1868"];
m0_1158 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''''))", span="1865-1865"];
m0_1159 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="DefaultContractResolver.cs", label="Assert.IsNull(reader.ReadAsDecimal())", span="1867-1867"];
m0_1161 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", span="1863-1863"];
m0_480 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="Type t = ReflectionUtils.EnsureNotNullableType(objectType)", span="1122-1122"];
m0_154 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="269-269"];
m0_869 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", span="1458-1458"];
m0_873 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="DefaultContractResolver.cs", label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1464-1464"];
m0_874 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="DefaultContractResolver.cs", label="Assert.AreEqual(1.1d, reader.Value)", span="1465-1465"];
m0_877 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="DefaultContractResolver.cs", label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1469-1469"];
m0_878 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="DefaultContractResolver.cs", label="Assert.AreEqual(-1.1d, reader.Value)", span="1470-1470"];
m0_881 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="DefaultContractResolver.cs", label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1474-1474"];
m0_882 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="DefaultContractResolver.cs", label="Assert.AreEqual(0.0d, reader.Value)", span="1475-1475"];
m0_885 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="DefaultContractResolver.cs", label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1479-1479"];
m0_886 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="DefaultContractResolver.cs", label="Assert.AreEqual(-0.0d, reader.Value)", span="1480-1480"];
m0_891 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="DefaultContractResolver.cs", label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1487-1487"];
m0_892 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="DefaultContractResolver.cs", label="Assert.AreEqual(0.000001d, reader.Value)", span="1488-1488"];
m0_871 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="DefaultContractResolver.cs", label="reader = new JsonTextReader(new StringReader(''1.1''))", span="1462-1462"];
m0_875 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="DefaultContractResolver.cs", label="reader = new JsonTextReader(new StringReader(''-1.1''))", span="1467-1467"];
m0_879 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="DefaultContractResolver.cs", label="reader = new JsonTextReader(new StringReader(''0.0''))", span="1472-1472"];
m0_883 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="DefaultContractResolver.cs", label="reader = new JsonTextReader(new StringReader(''-0.0''))", span="1477-1477"];
m0_887 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="DefaultContractResolver.cs", label="reader = new JsonTextReader(new StringReader(''9999999999999999999999999999999999999999999999999999999999999999999999999999asdasdasd''))", span="1482-1482"];
m0_889 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="DefaultContractResolver.cs", label="reader = new JsonTextReader(new StringReader(''1E-06''))", span="1485-1485"];
m0_893 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="DefaultContractResolver.cs", label="reader = new JsonTextReader(new StringReader(''''))", span="1490-1490"];
m0_895 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="DefaultContractResolver.cs", label="reader = new JsonTextReader(new StringReader(''-''))", span="1493-1493"];
m0_872 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="1463-1463"];
m0_876 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="1468-1468"];
m0_880 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="1473-1473"];
m0_884 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="1478-1478"];
m0_890 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="1486-1486"];
m0_894 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="DefaultContractResolver.cs", label="Assert.IsFalse(reader.Read())", span="1491-1491"];
m0_870 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="DefaultContractResolver.cs", label="JsonTextReader reader = null", span="1460-1460"];
m0_888 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="DefaultContractResolver.cs", label="ExceptionAssert.Throws<JsonReaderException>(''Input string '9999999999999999999999999999999999999999999999999999999999999999999999999999a' is not a valid number. Path '', line 1, position 77.'', () => reader.Read())", span="1483-1483"];
m0_896 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="DefaultContractResolver.cs", label="ExceptionAssert.Throws<JsonReaderException>(''Input string '-' is not a valid number. Path '', line 1, position 1.'', () => reader.Read())", span="1494-1494"];
m0_897 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", span="1458-1458"];
m0_125 [cluster="Unk.SelectMany", file="DefaultContractResolver.cs", label="Entry Unk.SelectMany", span=""];
m0_124 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", span="917-917"];
m0_553 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="DefaultContractResolver.cs", label="Assert.AreEqual(typeof(long), reader.ValueType)", span="969-969"];
m0_571 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="DefaultContractResolver.cs", label="int j = 1", span="994-994"];
m0_572 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="DefaultContractResolver.cs", label="j < 1000", span="994-994"];
m0_573 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="DefaultContractResolver.cs", label="long total = -j + i", span="996-996"];
m0_574 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="DefaultContractResolver.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                    ''JSON integer '' + total + '' is too large or small for an Int32. Path '', line 1, position 11.'',\r\n                    () =>\r\n                    {\r\n                        reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)));\r\n                        reader.ReadAsInt32();\r\n                    })", span="997-1003"];
m0_575 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="DefaultContractResolver.cs", label="j++", span="994-994"];
m0_583 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="1013-1013"];
m0_584 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="DefaultContractResolver.cs", label="reader.Read()", span="1014-1014"];
m0_581 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", span="1009-1009"];
m0_582 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="DefaultContractResolver.cs", label="BigInteger i = new BigInteger(long.MaxValue)", span="1011-1011"];
m0_585 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="DefaultContractResolver.cs", label="Assert.AreEqual(typeof(long), reader.ValueType)", span="1015-1015"];
m0_576 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", span="985-985"];
m0_586 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="DefaultContractResolver.cs", label="int j = 1", span="1017-1017"];
m0_1266 [cluster="System.TimeSpan.FromHours(double)", file="DefaultContractResolver.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m0_400 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DefaultContractResolver.cs", label="Assert.AreEqual(''array[1]'', reader.Path)", span="747-747"];
m0_405 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DefaultContractResolver.cs", label="Assert.AreEqual(''array[2]'', reader.Path)", span="753-753"];
m0_406 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DefaultContractResolver.cs", label="reader.Read()", span="755-755"];
m0_276 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="DefaultContractResolver.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Additional text encountered after finished reading JSON content: ,. Path '', line 5, position 2.'',\r\n                () =>\r\n                {\r\n                    while (reader.Read())\r\n                    {\r\n                    }\r\n                })", span="538-545"];
m0_277 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", span="528-528"];
m0_283 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="557-557"];
m0_284 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="DefaultContractResolver.cs", label="reader.Read()", span="562-562"];
m0_281 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", span="549-549"];
m0_282 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="DefaultContractResolver.cs", label="string json = @''[\r\n''''Small'''',\r\n''''Medium'''',\r\n''''Large''''\r\n]content''", span="551-555"];
m0_285 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="DefaultContractResolver.cs", label="Assert.AreEqual(1, reader.LineNumber)", span="563-563"];
m0_402 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DefaultContractResolver.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.StartConstructor)", span="750-750"];
m0_989 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", span="1617-1617"];
m0_993 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="1627-1627"];
m0_995 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="DefaultContractResolver.cs", label="Assert.AreEqual(''<'', reader.Value)", span="1630-1630"];
m0_997 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="DefaultContractResolver.cs", label="Assert.AreEqual(24352, Convert.ToInt32(Convert.ToChar((string)reader.Value)))", span="1633-1633"];
m0_999 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="1636-1636"];
m0_991 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1621-1621"];
m0_992 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="DefaultContractResolver.cs", label="reader.Read()", span="1626-1626"];
m0_994 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="DefaultContractResolver.cs", label="reader.Read()", span="1629-1629"];
m0_996 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="DefaultContractResolver.cs", label="reader.Read()", span="1632-1632"];
m0_998 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="DefaultContractResolver.cs", label="reader.Read()", span="1635-1635"];
m0_990 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="DefaultContractResolver.cs", label="string json = @''[''''\u003c'''',''''\u5f20'''']''", span="1619-1619"];
m0_1000 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", span="1617-1617"];
m0_25 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="ignoreSerializableAttribute = true", span="207-207"];
m0_194 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", span="384-384"];
m0_1065 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", span="1728-1728"];
m0_1069 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1737-1737"];
m0_1071 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1740-1740"];
m0_1073 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="1743-1743"];
m0_1067 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1734-1734"];
m0_1068 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="DefaultContractResolver.cs", label="reader.Read()", span="1736-1736"];
m0_1070 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="DefaultContractResolver.cs", label="reader.Read()", span="1739-1739"];
m0_1072 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="DefaultContractResolver.cs", label="reader.Read()", span="1742-1742"];
m0_1074 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="DefaultContractResolver.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                @''Invalid character after parsing property name. Expected ':' but got: ''''. Path 'A', line 3, position 9.'',\r\n                () => { reader.Read(); })", span="1745-1747"];
m0_1066 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="DefaultContractResolver.cs", label="string json = @''{\r\n    ''''A'''' : true,\r\n    ''''B'''' ''''''", span="1730-1732"];
m0_1075 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", span="1728-1728"];
m0_1517 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", span="2444-2444"];
m0_1521 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2450-2450"];
m0_1523 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2453-2453"];
m0_1525 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="2456-2456"];
m0_1527 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2459-2459"];
m0_1529 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2462-2462"];
m0_1531 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2465-2465"];
m0_1533 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2468-2468"];
m0_1535 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="2471-2471"];
m0_1537 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2474-2474"];
m0_1539 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2477-2477"];
m0_1541 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2480-2480"];
m0_1543 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2483-2483"];
m0_1545 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2486-2486"];
m0_1518 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''1 2 ''''name'''' [][]null {}{} 1.1''))", span="2446-2446"];
m0_1520 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2449-2449"];
m0_1522 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2452-2452"];
m0_1524 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2455-2455"];
m0_1526 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2458-2458"];
m0_1528 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2461-2461"];
m0_1530 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2464-2464"];
m0_1532 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2467-2467"];
m0_1534 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2470-2470"];
m0_1536 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2473-2473"];
m0_1538 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2476-2476"];
m0_1540 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2479-2479"];
m0_1542 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2482-2482"];
m0_1544 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2485-2485"];
m0_1546 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DefaultContractResolver.cs", label="Assert.IsFalse(reader.Read())", span="2488-2488"];
m0_1519 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DefaultContractResolver.cs", label="reader.SupportMultipleContent = true", span="2447-2447"];
m0_1547 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", span="2444-2444"];
m0_409 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DefaultContractResolver.cs", label="Assert.AreEqual(3, reader.Depth)", span="758-758"];
m0_410 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DefaultContractResolver.cs", label="Assert.AreEqual(''array[2][0]'', reader.Path)", span="759-759"];
m0_412 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DefaultContractResolver.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.EndConstructor)", span="762-762"];
m0_414 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DefaultContractResolver.cs", label="Assert.AreEqual(2, reader.Depth)", span="764-764"];
m0_415 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DefaultContractResolver.cs", label="Assert.AreEqual(''array[2]'', reader.Path)", span="765-765"];
m0_411 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DefaultContractResolver.cs", label="reader.Read()", span="761-761"];
m0_413 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DefaultContractResolver.cs", label="Assert.AreEqual(null, reader.Value)", span="763-763"];
m0_416 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DefaultContractResolver.cs", label="reader.Read()", span="767-767"];
m0_224 [cluster="Newtonsoft.Json.Serialization.ObjectConstructor<T>.Invoke(params object[])", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.ObjectConstructor<T>.Invoke(params object[])", span="31-31"];
m0_225 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.EnumerableDictionaryWrapper(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TEnumeratorKey, TEnumeratorValue>>)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.EnumerableDictionaryWrapper(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TEnumeratorKey, TEnumeratorValue>>)", span="535-535"];
m0_226 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.EnumerableDictionaryWrapper(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TEnumeratorKey, TEnumeratorValue>>)", file="DefaultContractResolver.cs", label="ValidationUtils.ArgumentNotNull(e, nameof(e))", span="537-537"];
m0_227 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.EnumerableDictionaryWrapper(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TEnumeratorKey, TEnumeratorValue>>)", file="DefaultContractResolver.cs", label="_e = e", span="538-538"];
m0_228 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.EnumerableDictionaryWrapper(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TEnumeratorKey, TEnumeratorValue>>)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.EnumerableDictionaryWrapper(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TEnumeratorKey, TEnumeratorValue>>)", span="535-535"];
m0_304 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="matchingMemberProperty != null", span="701-701"];
m0_306 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="property.Converter = property.Converter ?? matchingMemberProperty.Converter", span="704-704"];
m0_305 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="property.PropertyName = (property.PropertyName != parameterInfo.Name) ? property.PropertyName : matchingMemberProperty.PropertyName", span="703-703"];
m0_307 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="property.MemberConverter = property.MemberConverter ?? matchingMemberProperty.MemberConverter", span="705-705"];
m0_308 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="!property._hasExplicitDefaultValue && matchingMemberProperty._hasExplicitDefaultValue", span="707-707"];
m0_51 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="DefaultContractResolver.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="817-817"];
m0_49 [cluster="Unk.Where", file="DefaultContractResolver.cs", label="Entry Unk.Where", span=""];
m0_56 [cluster="System.Reflection.MemberInfo.MemberType()", file="DefaultContractResolver.cs", label="Entry System.Reflection.MemberInfo.MemberType()", span="107-107"];
m0_48 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", span="645-645"];
m0_53 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="DefaultContractResolver.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m0_54 [cluster="System.Collections.Generic.List<T>.Add(T)", file="DefaultContractResolver.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m0_161 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", span="246-246"];
m0_269 [cluster="System.Reflection.MethodBase.GetParameters()", file="DefaultContractResolver.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m0_245 [cluster="Newtonsoft.Json.JsonTextReader.Close()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.JsonTextReader.Close()", span="1581-1581"];
m0_42 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="FieldInfo field = member as FieldInfo", span="278-278"];
m0_1001 [cluster="System.Convert.ToChar(string)", file="DefaultContractResolver.cs", label="Entry System.Convert.ToChar(string)", span="0-0"];
m0_1079 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", span="1751-1751"];
m0_1085 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="DefaultContractResolver.cs", label="Assert.AreEqual(''Hello world.'', text)", span="1760-1760"];
m0_1081 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(s)", span="1754-1754"];
m0_1080 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="DefaultContractResolver.cs", label="StringReader s = new StringReader(@''''''SGVsbG8gd29ybGQu'''''')", span="1753-1753"];
m0_1084 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="DefaultContractResolver.cs", label="string text = Encoding.UTF8.GetString(data, 0, data.Length)", span="1759-1759"];
m0_1082 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="DefaultContractResolver.cs", label="byte[] data = reader.ReadAsBytes()", span="1756-1756"];
m0_1083 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="DefaultContractResolver.cs", label="Assert.IsNotNull(data)", span="1757-1757"];
m0_1086 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", span="1751-1751"];
m0_1865 [cluster="System.Convert.ToDouble(string, System.IFormatProvider)", file="DefaultContractResolver.cs", label="Entry System.Convert.ToDouble(string, System.IFormatProvider)", span="0-0"];
m0_589 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="DefaultContractResolver.cs", label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="1021-1021"];
m0_669 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", span="1145-1145"];
m0_675 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DefaultContractResolver.cs", label="string json =\r\n                newLinesText\r\n                + ''{'' + newLinesText\r\n                + ''''' + newLinesText\r\n                + ''name1'' + newLinesText\r\n                + ''''' + newLinesText\r\n                + '':'' + newLinesText\r\n                + ''['' + newLinesText\r\n                + ''new'' + newLinesText\r\n                + ''Date'' + newLinesText\r\n                + ''('' + newLinesText\r\n                + ''1'' + newLinesText\r\n                + '','' + newLinesText\r\n                + ''null'' + newLinesText\r\n                + ''/*'' + newLinesText\r\n                + ''blah comment'' + newLinesText\r\n                + ''*/'' + newLinesText\r\n                + '')'' + newLinesText\r\n                + '','' + newLinesText\r\n                + ''1.1111'' + newLinesText\r\n                + '']'' + newLinesText\r\n                + '','' + newLinesText\r\n                + ''name2'' + newLinesText\r\n                + '':'' + newLinesText\r\n                + ''{'' + newLinesText\r\n                + ''}'' + newLinesText\r\n                + ''}'' + newLinesText", span="1160-1186"];
m0_676 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DefaultContractResolver.cs", label="int count = 0", span="1188-1188"];
m0_677 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DefaultContractResolver.cs", label="StringReader sr = new StringReader(newLinesText)", span="1189-1189"];
m0_674 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DefaultContractResolver.cs", label="string newLinesText = StringUtils.CarriageReturn + StringUtils.CarriageReturnLineFeed + StringUtils.LineFeed + StringUtils.CarriageReturnLineFeed + '' '' + StringUtils.CarriageReturn + StringUtils.CarriageReturnLineFeed", span="1158-1158"];
m0_673 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", span="1156-1156"];
m0_678 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DefaultContractResolver.cs", label="sr.ReadLine() != null", span="1190-1190"];
m0_1610 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", span="2586-2586"];
m0_1612 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2589-2589"];
m0_1611 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="DefaultContractResolver.cs", label="string json = ''new Date,()''", span="2588-2588"];
m0_1613 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="DefaultContractResolver.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unexpected character while parsing constructor: ,. Path '', line 1, position 8.'',\r\n                () => { Assert.IsTrue(reader.Read()); })", span="2591-2593"];
m0_1614 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", span="2586-2586"];
m0_199 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="393-393"];
m0_174 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="createdType = t", span="472-472"];
m0_178 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="Func<object> createExtensionDataDictionary = JsonTypeReflector.ReflectionDelegateFactory.CreateDefaultConstructor<object>(createdType)", span="482-482"];
m0_180 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="MethodCall<object, object> setExtensionDataDictionaryValue = JsonTypeReflector.ReflectionDelegateFactory.CreateMethodCall<object>(addMethod)", span="484-484"];
m0_182 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="contract.ExtensionDataSetter = extensionDataSetter", span="503-503"];
m0_184 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="Type enumerableWrapper = typeof(EnumerableDictionaryWrapper<,>).MakeGenericType(keyType, valueType)", span="508-508"];
m0_186 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="ObjectConstructor<object> createEnumerableWrapper = JsonTypeReflector.ReflectionDelegateFactory.CreateParameterizedConstructor(constructors)", span="510-510"];
m0_188 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="contract.ExtensionDataGetter = extensionDataGetter", span="523-523"];
m0_189 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="contract.ExtensionDataValueType = valueType", span="526-526"];
m0_176 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="extensionDataAttribute.ReadData", span="477-477"];
m0_177 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="Action<object, object> setExtensionDataDictionary = (ReflectionUtils.CanSetMemberValue(member, true, false))\r\n                 ? JsonTypeReflector.ReflectionDelegateFactory.CreateSet<object>(member)\r\n                 : null", span="479-481"];
m0_179 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="MethodInfo addMethod = t.GetMethod(''Add'', new[] { keyType, valueType })", span="483-483"];
m0_181 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="ExtensionDataSetter extensionDataSetter = (o, key, value) =>\r\n                {\r\n                    object dictionary = getExtensionDataDictionary(o);\r\n                    if (dictionary == null)\r\n                    {\r\n                        if (setExtensionDataDictionary == null)\r\n                        {\r\n                            throw new JsonSerializationException(''Cannot set value onto extension data member '{0}'. The extension data collection is null and it cannot be set.''.FormatWith(CultureInfo.InvariantCulture, member.Name));\r\n                        }\r\n\r\n                        dictionary = createExtensionDataDictionary();\r\n                        setExtensionDataDictionary(o, dictionary);\r\n                    }\r\n\r\n                    setExtensionDataDictionaryValue(dictionary, key, value);\r\n                }", span="486-501"];
m0_183 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="extensionDataAttribute.WriteData", span="506-506"];
m0_185 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="ConstructorInfo constructors = enumerableWrapper.GetConstructors().First()", span="509-509"];
m0_187 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="ExtensionDataGetter extensionDataGetter = o =>\r\n                {\r\n                    object dictionary = getExtensionDataDictionary(o);\r\n                    if (dictionary == null)\r\n                    {\r\n                        return null;\r\n                    }\r\n\r\n                    return (IEnumerable<KeyValuePair<object, object>>)createEnumerableWrapper(dictionary);\r\n                }", span="512-521"];
m0_190 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", span="447-447"];
m0_175 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="Func<object, object> getExtensionDataDictionary = JsonTypeReflector.ReflectionDelegateFactory.CreateGet<object>(member)", span="475-475"];
m0_193 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", span="281-281"];
m0_481 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="JsonContainerAttribute containerAttribute = JsonTypeReflector.GetCachedAttribute<JsonContainerAttribute>(t)", span="1123-1123"];
m0_497 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", span="1115-1115"];
m0_492 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="typeof(IEnumerable).IsAssignableFrom(t)", span="1150-1150"];
m0_493 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="return CreateArrayContract(objectType);", span="1152-1152"];
m0_496 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="return CreateObjectContract(objectType);", span="1182-1182"];
m0_499 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.EnsureNotNullableType(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.EnsureNotNullableType(System.Type)", span="274-274"];
m0_500 [cluster="System.Type.IsSubclassOf(System.Type)", file="DefaultContractResolver.cs", label="Entry System.Type.IsSubclassOf(System.Type)", span="0-0"];
m0_494 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="CanConvertToString(t)", span="1155-1155"];
m0_491 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="return CreateDictionaryContract(objectType);", span="1147-1147"];
m0_495 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="return CreateStringContract(objectType);", span="1157-1157"];
m0_483 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="return CreateObjectContract(objectType);", span="1127-1127"];
m0_490 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="CollectionUtils.IsDictionaryType(t)", span="1145-1145"];
m0_482 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="containerAttribute is JsonObjectAttribute", span="1125-1125"];
m0_484 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="containerAttribute is JsonArrayAttribute", span="1130-1130"];
m0_487 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="return CreateDictionaryContract(objectType);", span="1137-1137"];
m0_485 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="return CreateArrayContract(objectType);", span="1132-1132"];
m0_488 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="t == typeof(JToken) || t.IsSubclassOf(typeof(JToken))", span="1140-1140"];
m0_486 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="containerAttribute is JsonDictionaryAttribute", span="1135-1135"];
m0_489 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="return CreateLinqContract(objectType);", span="1142-1142"];
m0_1265 [cluster="System.DateTime.DateTime(int, int, int)", file="DefaultContractResolver.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m0_1208 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", span="1945-1945"];
m0_1209 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[1''))", span="1947-1947"];
m0_1210 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="DefaultContractResolver.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unexpected end when reading bytes. Path '[0]', line 1, position 2.'',\r\n                () => { reader.ReadAsBytes(); })", span="1949-1951"];
m0_1211 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", span="1945-1945"];
m0_1187 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", span="1912-1912"];
m0_1188 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''new Date()''))", span="1914-1914"];
m0_1189 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="DefaultContractResolver.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Error reading bytes. Unexpected token: StartConstructor. Path '', line 1, position 9.'',\r\n                () => { reader.ReadAsBytes(); })", span="1916-1918"];
m0_1190 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", span="1912-1912"];
m0_1354 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="DefaultContractResolver.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m0_1499 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", span="2416-2416"];
m0_1503 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2422-2422"];
m0_1505 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2425-2425"];
m0_1507 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2428-2428"];
m0_1509 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2431-2431"];
m0_1511 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2434-2434"];
m0_1513 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2437-2437"];
m0_1515 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2440-2440"];
m0_1501 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2419-2419"];
m0_1502 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2421-2421"];
m0_1504 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2424-2424"];
m0_1506 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2427-2427"];
m0_1508 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2430-2430"];
m0_1510 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2433-2433"];
m0_1512 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2436-2436"];
m0_1514 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2439-2439"];
m0_1500 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="DefaultContractResolver.cs", label="string json = ''[,,, \n\r\n \0   \r  , ,    ]''", span="2418-2418"];
m0_1516 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", span="2416-2416"];
m0_155 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="271-271"];
m0_1571 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", span="2525-2525"];
m0_1573 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2528-2528"];
m0_1574 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2530-2530"];
m0_1575 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2531-2531"];
m0_1576 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2532-2532"];
m0_1577 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="DefaultContractResolver.cs", label="Assert.IsFalse(reader.Read())", span="2533-2533"];
m0_1572 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="DefaultContractResolver.cs", label="string json = ''{hi:1, ''", span="2527-2527"];
m0_1578 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", span="2525-2525"];
m0_1179 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", span="365-365"];
m0_556 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="DefaultContractResolver.cs", label="long total = j + i", span="973-973"];
m0_1180 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", span="1902-1902"];
m0_1181 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''new Date()''))", span="1904-1904"];
m0_1182 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="DefaultContractResolver.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Error reading decimal. Unexpected token: StartConstructor. Path '', line 1, position 9.'',\r\n                () => { reader.ReadAsDecimal(); })", span="1906-1908"];
m0_1183 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", span="1902-1902"];
m0_717 [cluster="System.IO.StringReader.ReadLine()", file="DefaultContractResolver.cs", label="Entry System.IO.StringReader.ReadLine()", span="0-0"];
m0_202 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="DefaultContractResolver.cs", label="Assert.AreEqual(2, s.Length)", span="397-397"];
m0_1783 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", span="2862-2862"];
m0_1787 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2869-2869"];
m0_1788 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="DefaultContractResolver.cs", label="Assert.AreEqual(8m, reader.Value)", span="2870-2870"];
m0_1785 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2866-2866"];
m0_1786 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="DefaultContractResolver.cs", label="reader.ReadAsDecimal()", span="2868-2868"];
m0_1784 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="DefaultContractResolver.cs", label="string json = @''010''", span="2864-2864"];
m0_1789 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", span="2862-2862"];
m0_506 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type)", span="185-185"];
m0_23 [cluster="System.IO.StringReader.StringReader(string)", file="DefaultContractResolver.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m0_24 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="301-301"];
m0_26 [cluster="Unk.AreEqual", file="DefaultContractResolver.cs", label="Entry Unk.AreEqual", span=""];
m0_46 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsInt32()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsInt32()", span="337-337"];
m0_1321 [cluster="System.TimeSpan.FromMinutes(double)", file="DefaultContractResolver.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m0_19 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="DefaultContractResolver.cs", label="var i = (BigInteger)((JValue)o[''ChildId'']).Value", span="84-84"];
m0_196 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="388-388"];
m0_198 [cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", span="74-74"];
m0_201 [cluster="System.Type.GetConstructors()", file="DefaultContractResolver.cs", label="Entry System.Type.GetConstructors()", span="0-0"];
m0_1579 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", span="2537-2537"];
m0_1583 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2543-2543"];
m0_1585 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2546-2546"];
m0_1581 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2540-2540"];
m0_1582 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2542-2542"];
m0_1584 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2545-2545"];
m0_1580 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="DefaultContractResolver.cs", label="string json = ''[]''", span="2539-2539"];
m0_1586 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", span="2537-2537"];
m0_87 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsBytes()", span="319-319"];
m0_156 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="DefaultContractResolver.cs", label="Assert.AreEqual(Convert.ToDecimal(1E-06), reader.Value)", span="272-272"];
m0_22 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="DefaultContractResolver.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m0_953 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="433-433"];
m0_1107 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", span="1791-1791"];
m0_1111 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="1797-1797"];
m0_1113 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1800-1800"];
m0_1114 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="DefaultContractResolver.cs", label="Assert.AreEqual(typeof(long), jsonReader.ValueType)", span="1801-1801"];
m0_1115 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="DefaultContractResolver.cs", label="Assert.AreEqual((long)250, (long)jsonReader.Value)", span="1802-1802"];
m0_1117 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1805-1805"];
m0_1118 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="DefaultContractResolver.cs", label="Assert.AreEqual(typeof(long), jsonReader.ValueType)", span="1806-1806"];
m0_1119 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="DefaultContractResolver.cs", label="Assert.AreEqual((long)250, (long)jsonReader.Value)", span="1807-1807"];
m0_1121 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1810-1810"];
m0_1122 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="DefaultContractResolver.cs", label="Assert.AreEqual(typeof(long), jsonReader.ValueType)", span="1811-1811"];
m0_1123 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="DefaultContractResolver.cs", label="Assert.AreEqual((long)250, (long)jsonReader.Value)", span="1812-1812"];
m0_1125 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="1815-1815"];
m0_1109 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="DefaultContractResolver.cs", label="JsonTextReader jsonReader = new JsonTextReader(s)", span="1794-1794"];
m0_1108 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="DefaultContractResolver.cs", label="StringReader s = new StringReader(@''[0372, 0xFA, 0XFA]'')", span="1793-1793"];
m0_1110 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="DefaultContractResolver.cs", label="Assert.IsTrue(jsonReader.Read())", span="1796-1796"];
m0_1112 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="DefaultContractResolver.cs", label="jsonReader.Read()", span="1799-1799"];
m0_1116 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="DefaultContractResolver.cs", label="jsonReader.Read()", span="1804-1804"];
m0_1120 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="DefaultContractResolver.cs", label="jsonReader.Read()", span="1809-1809"];
m0_1124 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="DefaultContractResolver.cs", label="Assert.IsTrue(jsonReader.Read())", span="1814-1814"];
m0_1126 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="DefaultContractResolver.cs", label="Assert.IsFalse(jsonReader.Read())", span="1817-1817"];
m0_1127 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", span="1791-1791"];
m0_160 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="277-277"];
m0_1555 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", span="2503-2503"];
m0_1557 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2506-2506"];
m0_1556 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="DefaultContractResolver.cs", label="string json = ''new Dat''", span="2505-2505"];
m0_1558 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="DefaultContractResolver.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unexpected end while parsing constructor. Path '', line 1, position 7.'',\r\n                () => { reader.Read(); })", span="2508-2510"];
m0_1559 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", span="2503-2503"];
m0_163 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="JsonExtensionDataAttribute extensionDataAttribute = ReflectionUtils.GetAttribute<JsonExtensionDataAttribute>(member)", span="449-449"];
m0_168 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="ReflectionUtils.ImplementsGenericDefinition(t, typeof(IDictionary<,>), out dictionaryType)", span="458-458"];
m0_165 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="return;", span="452-452"];
m0_167 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="Type dictionaryType", span="457-457"];
m0_169 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="Type keyType = dictionaryType.GetGenericArguments()[0]", span="460-460"];
m0_164 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="extensionDataAttribute == null", span="450-450"];
m0_166 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="Type t = ReflectionUtils.GetMemberUnderlyingType(member)", span="455-455"];
m0_170 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="Type valueType = dictionaryType.GetGenericArguments()[1]", span="461-461"];
m0_685 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", file="DefaultContractResolver.cs", label="return NamingStrategy.GetPropertyName(propertyName, false);", span="1601-1601"];
m0_684 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", file="DefaultContractResolver.cs", label="NamingStrategy != null", span="1599-1599"];
m0_687 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", span="1597-1597"];
m0_702 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DefaultContractResolver.cs", label="Newtonsoft.Json.Serialization.DefaultContractResolver", span=""];
m0_704 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DefaultContractResolver.cs", label=getExtensionDataDictionary, span=""];
m0_706 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DefaultContractResolver.cs", label="System.Reflection.MemberInfo", span=""];
m0_708 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DefaultContractResolver.cs", label=setExtensionDataDictionaryValue, span=""];
m0_709 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DefaultContractResolver.cs", label=createEnumerableWrapper, span=""];
m0_711 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DefaultContractResolver.cs", label=namingStrategy, span=""];
m0_713 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DefaultContractResolver.cs", label=specifiedPropertyGet, span=""];
m0_715 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DefaultContractResolver.cs", label="Assert.AreEqual(151, reader.LineNumber)", span="1243-1243"];
m0_686 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", file="DefaultContractResolver.cs", label="return propertyName;", span="1604-1604"];
m0_703 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DefaultContractResolver.cs", label=namingStrategy, span=""];
m0_705 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DefaultContractResolver.cs", label=setExtensionDataDictionary, span=""];
m0_707 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DefaultContractResolver.cs", label=createExtensionDataDictionary, span=""];
m0_710 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DefaultContractResolver.cs", label="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>", span=""];
m0_712 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DefaultContractResolver.cs", label=shouldSerializeCall, span=""];
m0_714 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="1242-1242"];
m0_716 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", span="1156-1156"];
m0_947 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(int)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(int)", span="819-819"];
m0_1867 [cluster="System.Console.WriteLine(string)", file="DefaultContractResolver.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m0_2031 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", span="3276-3276"];
m0_2068 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", file="DefaultContractResolver.cs", label="_inner = inner", span="3278-3278"];
m0_2069 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", span="3276-3276"];
m0_944 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(bool)", span="875-875"];
m0_1615 [cluster="Unk.>", file="DefaultContractResolver.cs", label="Entry Unk.>", span=""];
m0_588 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", span="1554-1554"];
m0_587 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", span="562-562"];
m0_951 [cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="772-772"];
m0_1775 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", span="2850-2850"];
m0_1777 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2854-2854"];
m0_1776 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="DefaultContractResolver.cs", label="string json = @''/''", span="2852-2852"];
m0_1778 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="DefaultContractResolver.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unexpected end while parsing comment. Path '', line 1, position 1.'',\r\n                () => { reader.Read(); })", span="2856-2858"];
m0_1779 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", span="2850-2850"];
m0_1149 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", span="1851-1851"];
m0_1150 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[}''))", span="1853-1853"];
m0_1151 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="DefaultContractResolver.cs", label="reader.Read()", span="1855-1855"];
m0_1152 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="DefaultContractResolver.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unexpected character encountered while parsing value: }. Path '', line 1, position 1.'',\r\n                () => { reader.Read(); })", span="1857-1859"];
m0_1153 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", span="1851-1851"];
m0_1323 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", span="2120-2120"];
m0_1327 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2127-2127"];
m0_1329 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2130-2130"];
m0_1331 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2133-2133"];
m0_1332 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="DefaultContractResolver.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2134-2134"];
m0_1333 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="DefaultContractResolver.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2011, 8, 1, 21, 25, 0, DateTimeKind.Utc), TimeSpan.Zero), reader.Value)", span="2135-2135"];
m0_1335 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2138-2138"];
m0_1325 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2124-2124"];
m0_1326 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2126-2126"];
m0_1328 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2129-2129"];
m0_1334 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2137-2137"];
m0_1330 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="DefaultContractResolver.cs", label="reader.ReadAsDateTimeOffset()", span="2132-2132"];
m0_1324 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="DefaultContractResolver.cs", label="string json = @''{''''Offset'''':''''2011-08-01T21:25Z''''}''", span="2122-2122"];
m0_1336 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", span="2120-2120"];
m0_399 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DefaultContractResolver.cs", label="Assert.AreEqual(2, reader.Depth)", span="746-746"];
m0_407 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DefaultContractResolver.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="756-756"];
m0_408 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DefaultContractResolver.cs", label="Assert.AreEqual(1L, reader.Value)", span="757-757"];
m0_1267 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", span="2036-2036"];
m0_1271 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2043-2043"];
m0_1273 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2046-2046"];
m0_1275 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2049-2049"];
m0_1276 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="DefaultContractResolver.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2050-2050"];
m0_1277 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="DefaultContractResolver.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(-6)), reader.Value)", span="2051-2051"];
m0_1279 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2054-2054"];
m0_1269 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2040-2040"];
m0_1270 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2042-2042"];
m0_1272 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2045-2045"];
m0_1278 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2053-2053"];
m0_1274 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="DefaultContractResolver.cs", label="reader.ReadAsDateTimeOffset()", span="2048-2048"];
m0_1268 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="DefaultContractResolver.cs", label="string json = @''{''''Offset'''':''''\/Date(946706400000-0600)\/''''}''", span="2038-2038"];
m0_1280 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", span="2036-2036"];
m0_1913 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", span="3062-3062"];
m0_1918 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DefaultContractResolver.cs", label="Assert.AreEqual(false, reader.Value)", span="3071-3071"];
m0_1920 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="3074-3074"];
m0_1921 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DefaultContractResolver.cs", label="Assert.AreEqual(true, reader.Value)", span="3075-3075"];
m0_1923 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="3078-3078"];
m0_1924 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DefaultContractResolver.cs", label="Assert.AreEqual(true, reader.Value)", span="3079-3079"];
m0_1926 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="3082-3082"];
m0_1927 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DefaultContractResolver.cs", label="Assert.AreEqual(false, reader.Value)", span="3083-3083"];
m0_1929 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="3086-3086"];
m0_1930 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DefaultContractResolver.cs", label="Assert.AreEqual(''test!'', reader.Value)", span="3087-3087"];
m0_1932 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3090-3090"];
m0_1933 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DefaultContractResolver.cs", label="Assert.AreEqual(1.11d, reader.Value)", span="3091-3091"];
m0_1935 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3094-3094"];
m0_1936 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DefaultContractResolver.cs", label="Assert.AreEqual(0d, reader.Value)", span="3095-3095"];
m0_1938 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3098-3098"];
m0_1939 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DefaultContractResolver.cs", label="Assert.AreEqual(0d, reader.Value)", span="3099-3099"];
m0_1941 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3102-3102"];
m0_1942 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DefaultContractResolver.cs", label="Assert.AreEqual(0.0000025d, reader.Value)", span="3103-3103"];
m0_1944 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3106-3106"];
m0_1945 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DefaultContractResolver.cs", label="Assert.AreEqual(3000000000d, reader.Value)", span="3107-3107"];
m0_1947 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3110-3110"];
m0_1948 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DefaultContractResolver.cs", label="Assert.AreEqual(602214180000000000000000d, reader.Value)", span="3111-3111"];
m0_1950 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="3114-3114"];
m0_1951 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DefaultContractResolver.cs", label="Assert.AreEqual(reader.Value, ''Purple\r \n monkey's:\tdishwasher'')", span="3115-3115"];
m0_1915 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="3066-3066"];
m0_1916 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="3068-3068"];
m0_1917 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="3070-3070"];
m0_1919 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="3073-3073"];
m0_1922 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="3077-3077"];
m0_1925 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="3081-3081"];
m0_1928 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="3085-3085"];
m0_1931 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="3089-3089"];
m0_1934 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="3093-3093"];
m0_1937 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="3097-3097"];
m0_1940 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="3101-3101"];
m0_1943 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="3105-3105"];
m0_1946 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="3109-3109"];
m0_1949 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="3113-3113"];
m0_1952 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="3117-3117"];
m0_1914 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DefaultContractResolver.cs", label="string json = ''[false, true, true, false, 'test!', 1.11, 0e-10, 0E-10, 0.25e-5, 0.3e10, 6.0221418e23, 'Purple\\r \\n monkey\\'s:\\tdishwasher']''", span="3064-3064"];
m0_1953 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", span="3062-3062"];
m0_1469 [cluster="System.DateTime.DateTime(long)", file="DefaultContractResolver.cs", label="Entry System.DateTime.DateTime(long)", span="0-0"];
m0_1402 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", span="2240-2240"];
m0_1403 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''nulz''))", span="2242-2242"];
m0_1404 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="DefaultContractResolver.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Error parsing null value. Path '', line 0, position 0.'',\r\n                () => { reader.Read(); })", span="2244-2246"];
m0_1405 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", span="2240-2240"];
m0_664 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="return o => (bool)shouldSerializeCall(o);", span="1566-1566"];
m0_20 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", span="1115-1115"];
m0_21 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="DefaultContractResolver.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m0_1167 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", span="1881-1881"];
m0_1168 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''{''))", span="1883-1883"];
m0_1169 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="DefaultContractResolver.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unexpected end when reading bytes. Path '', line 1, position 1.'',\r\n                () => { reader.ReadAsBytes(); })", span="1885-1887"];
m0_1170 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", span="1881-1881"];
m0_2007 [cluster="System.DateTime.DateTime(long, System.DateTimeKind)", file="DefaultContractResolver.cs", label="Entry System.DateTime.DateTime(long, System.DateTimeKind)", span="0-0"];
m0_974 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", span="1594-1594"];
m0_979 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="1602-1602"];
m0_981 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1605-1605"];
m0_982 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="DefaultContractResolver.cs", label="Assert.AreEqual(typeof(string), reader.ValueType)", span="1606-1606"];
m0_983 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="DefaultContractResolver.cs", label="Assert.AreEqual(20000, reader.Value.ToString().Length)", span="1607-1607"];
m0_985 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="1610-1610"];
m0_987 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1613-1613"];
m0_977 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1599-1599"];
m0_978 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="DefaultContractResolver.cs", label="reader.Read()", span="1601-1601"];
m0_980 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="DefaultContractResolver.cs", label="reader.Read()", span="1604-1604"];
m0_984 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="1609-1609"];
m0_986 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="DefaultContractResolver.cs", label="Assert.IsFalse(reader.Read())", span="1612-1612"];
m0_976 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="DefaultContractResolver.cs", label="string json = @''['''''' + new string(' ', length) + @'''''']''", span="1597-1597"];
m0_975 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="DefaultContractResolver.cs", label="int length = 20000", span="1596-1596"];
m0_988 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", span="1594-1594"];
m0_1337 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="DefaultContractResolver.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m0_1602 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", span="2573-2573"];
m0_1606 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2579-2579"];
m0_1608 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2582-2582"];
m0_1604 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2576-2576"];
m0_1605 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2578-2578"];
m0_1607 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2581-2581"];
m0_1603 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="DefaultContractResolver.cs", label="string json = ''new Date()''", span="2575-2575"];
m0_1609 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", span="2573-2573"];
m0_838 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", span="1424-1424"];
m0_841 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="DefaultContractResolver.cs", label="Assert.AreEqual(1.1m, reader.ReadAsDecimal())", span="1429-1429"];
m0_843 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="DefaultContractResolver.cs", label="Assert.AreEqual(-1.1m, reader.ReadAsDecimal())", span="1432-1432"];
m0_845 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="DefaultContractResolver.cs", label="Assert.AreEqual(0.0m, reader.ReadAsDecimal())", span="1435-1435"];
m0_847 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="DefaultContractResolver.cs", label="Assert.AreEqual(0, reader.ReadAsDecimal())", span="1438-1438"];
m0_854 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="DefaultContractResolver.cs", label="Assert.AreEqual(0.000001m, reader.ReadAsDecimal())", span="1448-1448"];
m0_856 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="DefaultContractResolver.cs", label="Assert.AreEqual(null, reader.ReadAsDecimal())", span="1451-1451"];
m0_840 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="DefaultContractResolver.cs", label="reader = new JsonTextReader(new StringReader(''1.1''))", span="1428-1428"];
m0_842 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="DefaultContractResolver.cs", label="reader = new JsonTextReader(new StringReader(''-1.1''))", span="1431-1431"];
m0_844 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="DefaultContractResolver.cs", label="reader = new JsonTextReader(new StringReader(''0.0''))", span="1434-1434"];
m0_846 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="DefaultContractResolver.cs", label="reader = new JsonTextReader(new StringReader(''-0.0''))", span="1437-1437"];
m0_848 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="DefaultContractResolver.cs", label="reader = new JsonTextReader(new StringReader(''9999999999999999999999999999999999999999999999999999999999999999999999999999asdasdasd''))", span="1440-1440"];
m0_850 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="DefaultContractResolver.cs", label="reader = new JsonTextReader(new StringReader(''9999999999999999999999999999999999999999999999999999999999999999999999999999asdasdasd''))", span="1443-1443"];
m0_853 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="DefaultContractResolver.cs", label="reader = new JsonTextReader(new StringReader(''1E-06''))", span="1447-1447"];
m0_855 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="DefaultContractResolver.cs", label="reader = new JsonTextReader(new StringReader(''''))", span="1450-1450"];
m0_857 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="DefaultContractResolver.cs", label="reader = new JsonTextReader(new StringReader(''-''))", span="1453-1453"];
m0_839 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="DefaultContractResolver.cs", label="JsonTextReader reader = null", span="1426-1426"];
m0_849 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="DefaultContractResolver.cs", label="ExceptionAssert.Throws<JsonReaderException>(''Input string '9999999999999999999999999999999999999999999999999999999999999999999999999999a' is not a valid decimal. Path '', line 1, position 77.'', () => reader.ReadAsDecimal())", span="1441-1441"];
m0_851 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="DefaultContractResolver.cs", label="reader.FloatParseHandling = Json.FloatParseHandling.Decimal", span="1444-1444"];
m0_852 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="DefaultContractResolver.cs", label="ExceptionAssert.Throws<JsonReaderException>(''Input string '9999999999999999999999999999999999999999999999999999999999999999999999999999a' is not a valid decimal. Path '', line 1, position 77.'', () => reader.Read())", span="1445-1445"];
m0_858 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="DefaultContractResolver.cs", label="ExceptionAssert.Throws<JsonReaderException>(''Input string '-' is not a valid decimal. Path '', line 1, position 1.'', () => reader.ReadAsDecimal())", span="1454-1454"];
m0_859 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", span="1424-1424"];
m0_665 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", span="1554-1554"];
m0_1587 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", span="2550-2550"];
m0_1591 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2556-2556"];
m0_1593 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2559-2559"];
m0_1589 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2553-2553"];
m0_1590 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2555-2555"];
m0_1592 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2558-2558"];
m0_1588 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="DefaultContractResolver.cs", label="string json = ''{}''", span="2552-2552"];
m0_1594 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", span="2550-2550"];
m0_271 [cluster="Newtonsoft.Json.Tests.SlowStream.SlowStream(string, System.Text.Encoding, int)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.SlowStream.SlowStream(string, System.Text.Encoding, int)", span="3303-3303"];
m0_273 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", span="528-528"];
m0_274 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="DefaultContractResolver.cs", label="string json = @''[\r\n''''Small'''',\r\n''''Medium'''',\r\n''''Large''''\r\n],''", span="530-534"];
m0_275 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="536-536"];
m0_364 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="onDeserialized = null", span="819-819"];
m0_368 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="MethodInfo currentOnSerialized = null", span="826-826"];
m0_370 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="MethodInfo currentOnDeserialized = null", span="828-828"];
m0_371 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="MethodInfo currentOnError = null", span="829-829"];
m0_372 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="bool skipSerializing = ShouldSkipSerializing(baseType)", span="831-831"];
m0_374 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="baseType.GetMethods(BindingFlags.NonPublic | BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)", span="834-834"];
m0_375 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="method.ContainsGenericParameters", span="838-838"];
m0_376 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="Type prevAttributeType = null", span="843-843"];
m0_378 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="!skipSerializing && IsValidCallback(method, parameters, typeof(OnSerializingAttribute), currentOnSerializing, ref prevAttributeType)", span="846-846"];
m0_379 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="onSerializing = onSerializing ?? new List<SerializationCallback>()", span="848-848"];
m0_380 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="onSerializing.Add(JsonContract.CreateSerializationCallback(method))", span="849-849"];
m0_381 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="currentOnSerializing = method", span="850-850"];
m0_382 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="IsValidCallback(method, parameters, typeof(OnSerializedAttribute), currentOnSerialized, ref prevAttributeType)", span="852-852"];
m0_384 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="onSerialized.Add(JsonContract.CreateSerializationCallback(method))", span="855-855"];
m0_385 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="currentOnSerialized = method", span="856-856"];
m0_386 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="IsValidCallback(method, parameters, typeof(OnDeserializingAttribute), currentOnDeserializing, ref prevAttributeType)", span="858-858"];
m0_388 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="onDeserializing.Add(JsonContract.CreateSerializationCallback(method))", span="861-861"];
m0_389 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="currentOnDeserializing = method", span="862-862"];
m0_390 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="!skipDeserialized && IsValidCallback(method, parameters, typeof(OnDeserializedAttribute), currentOnDeserialized, ref prevAttributeType)", span="864-864"];
m0_392 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="onDeserialized.Add(JsonContract.CreateSerializationCallback(method))", span="867-867"];
m0_393 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="currentOnDeserialized = method", span="868-868"];
m0_394 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="IsValidCallback(method, parameters, typeof(OnErrorAttribute), currentOnError, ref prevAttributeType)", span="870-870"];
m0_395 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="onError = onError ?? new List<SerializationErrorCallback>()", span="872-872"];
m0_397 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="currentOnError = method", span="874-874"];
m0_398 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", span="814-814"];
m0_419 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", span="938-938"];
m0_421 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs", label="InitializeContract(contract)", span="941-941"];
m0_422 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs", label="JsonContainerAttribute containerAttribute = JsonTypeReflector.GetAttribute<JsonContainerAttribute>(objectType)", span="943-943"];
m0_423 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs", label="containerAttribute?.NamingStrategyType != null", span="944-944"];
m0_425 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs", label="contract.DictionaryKeyResolver = s => namingStrategy.GetDictionaryKey(s)", span="947-947"];
m0_426 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs", label="contract.DictionaryKeyResolver = ResolveDictionaryKey", span="951-951"];
m0_427 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs", label="ConstructorInfo overrideConstructor = GetAttributeConstructor(contract.NonNullableUnderlyingType)", span="954-954"];
m0_429 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs", label="ParameterInfo[] parameters = overrideConstructor.GetParameters()", span="958-958"];
m0_430 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs", label="Type expectedParameterType = (contract.DictionaryKeyType != null && contract.DictionaryValueType != null)\r\n                    ? typeof(IEnumerable<>).MakeGenericType(typeof(KeyValuePair<,>).MakeGenericType(contract.DictionaryKeyType, contract.DictionaryValueType))\r\n                    : typeof(IDictionary)", span="959-961"];
m0_431 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs", label="parameters.Length == 0", span="963-963"];
m0_433 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs", label="parameters.Length == 1 && expectedParameterType.IsAssignableFrom(parameters[0].ParameterType)", span="967-967"];
m0_434 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs", label="contract.HasParameterizedCreator = true", span="969-969"];
m0_435 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs", label="throw new JsonException(''Constructor for '{0}' must have no parameters or a single parameter that implements '{1}'.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType, expectedParameterType));", span="973-973"];
m0_437 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs", label="return contract;", span="979-979"];
m0_438 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", span="938-938"];
m0_459 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", span="117-117"];
m0_367 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="MethodInfo currentOnSerializing = null", span="825-825"];
m0_366 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="GetClassHierarchyForType(type)", span="822-822"];
m0_369 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="MethodInfo currentOnDeserializing = null", span="827-827"];
m0_373 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="bool skipDeserialized = ShouldSkipDeserialized(baseType)", span="832-832"];
m0_377 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="ParameterInfo[] parameters = method.GetParameters()", span="844-844"];
m0_383 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="onSerialized = onSerialized ?? new List<SerializationCallback>()", span="854-854"];
m0_387 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="onDeserializing = onDeserializing ?? new List<SerializationCallback>()", span="860-860"];
m0_391 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="onDeserialized = onDeserialized ?? new List<SerializationCallback>()", span="866-866"];
m0_396 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="onError.Add(JsonContract.CreateSerializationErrorCallback(method))", span="873-873"];
m0_420 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs", label="JsonDictionaryContract contract = new JsonDictionaryContract(objectType)", span="940-940"];
m0_424 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs", label="NamingStrategy namingStrategy = JsonTypeReflector.GetContainerNamingStrategy(containerAttribute)", span="946-946"];
m0_428 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs", label="overrideConstructor != null", span="956-956"];
m0_432 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs", label="contract.HasParameterizedCreator = false", span="965-965"];
m0_436 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs", label="contract.OverrideCreator = JsonTypeReflector.ReflectionDelegateFactory.CreateParameterizedConstructor(overrideConstructor)", span="976-976"];
m0_440 [cluster="string.FormatWith(System.IFormatProvider, object, object)", file="DefaultContractResolver.cs", label="Entry string.FormatWith(System.IFormatProvider, object, object)", span="52-52"];
m0_365 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="onError = null", span="820-820"];
m0_1563 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", span="2514-2514"];
m0_1565 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2517-2517"];
m0_1564 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="DefaultContractResolver.cs", label="string json = ''new Date !''", span="2516-2516"];
m0_1566 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="DefaultContractResolver.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unexpected character while parsing constructor: !. Path '', line 1, position 9.'',\r\n                () => { reader.Read(); })", span="2519-2521"];
m0_1567 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", span="2514-2514"];
m0_1395 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", span="2230-2230"];
m0_1396 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''nul''))", span="2232-2232"];
m0_1397 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="DefaultContractResolver.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Error parsing null value. Path '', line 0, position 0.'',\r\n                () => { reader.Read(); })", span="2234-2236"];
m0_1398 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", span="2230-2230"];
m0_467 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", file="DefaultContractResolver.cs", label="JsonLinqContract contract = new JsonLinqContract(objectType)", span="1040-1040"];
m0_468 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", file="DefaultContractResolver.cs", label="InitializeContract(contract)", span="1041-1041"];
m0_469 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", file="DefaultContractResolver.cs", label="return contract;", span="1043-1043"];
m0_470 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", span="1038-1038"];
m0_1813 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", span="2912-2912"];
m0_1814 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="DefaultContractResolver.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''{}}''))", span="2914-2914"];
m0_1815 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2915-2915"];
m0_1816 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2916-2916"];
m0_1817 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="DefaultContractResolver.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Additional text encountered after finished reading JSON content: }. Path '', line 1, position 2.'',\r\n                () => { reader.Read(); })", span="2918-2920"];
m0_1818 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", span="2912-2912"];
m0_2008 [cluster="System.DateTimeOffset.DateTimeOffset(long, System.TimeSpan)", file="DefaultContractResolver.cs", label="Entry System.DateTimeOffset.DateTimeOffset(long, System.TimeSpan)", span="0-0"];
m0_159 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="276-276"];
m0_2070 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", span="3281-3281"];
m0_2071 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="DefaultContractResolver.cs", label=Error, span="3283-3283"];
m0_2073 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="DefaultContractResolver.cs", label="return _inner.Read(buffer, index, 1);", span="3286-3286"];
m0_2072 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="DefaultContractResolver.cs", label="throw new Exception(''Read error'');", span="3284-3284"];
m0_2074 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", span="3281-3281"];
m0_2075 [cluster="System.Exception.Exception(string)", file="DefaultContractResolver.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m0_952 [cluster="System.Text.StringBuilder.ToString()", file="DefaultContractResolver.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m0_1002 [cluster="System.Convert.ToInt32(char)", file="DefaultContractResolver.cs", label="Entry System.Convert.ToInt32(char)", span="0-0"];
m0_1790 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", span="2874-2874"];
m0_1794 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2881-2881"];
m0_1795 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="DefaultContractResolver.cs", label="Assert.AreEqual(32m, reader.Value)", span="2882-2882"];
m0_1792 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2878-2878"];
m0_1793 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="DefaultContractResolver.cs", label="reader.ReadAsDecimal()", span="2880-2880"];
m0_1791 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="DefaultContractResolver.cs", label="string json = @''0x20''", span="2876-2876"];
m0_1796 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", span="2874-2874"];
m0_747 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", span="1284-1284"];
m0_752 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1291-1291"];
m0_755 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1294-1294"];
m0_759 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Bytes, reader.TokenType)", span="1298-1298"];
m0_761 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1300-1300"];
m0_750 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="DefaultContractResolver.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''{num:1,data:''' + Convert.ToBase64String(helloWorldData) + @'''}''))", span="1289-1289"];
m0_751 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="1290-1290"];
m0_753 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="1292-1292"];
m0_754 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="1293-1293"];
m0_756 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="1295-1295"];
m0_760 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="1299-1299"];
m0_758 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="DefaultContractResolver.cs", label="CollectionAssert.AreEquivalent(helloWorldData, data)", span="1297-1297"];
m0_762 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="DefaultContractResolver.cs", label="Assert.IsFalse(reader.Read())", span="1302-1302"];
m0_749 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="DefaultContractResolver.cs", label="byte[] helloWorldData = Encoding.UTF8.GetBytes(helloWorld)", span="1287-1287"];
m0_757 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="DefaultContractResolver.cs", label="byte[] data = reader.ReadAsBytes()", span="1296-1296"];
m0_748 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="DefaultContractResolver.cs", label="string helloWorld = ''Hello world!''", span="1286-1286"];
m0_763 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", span="1284-1284"];
m0_287 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="DefaultContractResolver.cs", label="Assert.AreEqual(2, reader.LineNumber)", span="566-566"];
m0_1459 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", span="2325-2325"];
m0_1467 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="DefaultContractResolver.cs", label="Assert.AreEqual(new DateTime(631136448000000000), reader.Value)", span="2351-2351"];
m0_1461 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2340-2340"];
m0_1464 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="DefaultContractResolver.cs", label="reader.Read()", span="2347-2347"];
m0_1466 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2350-2350"];
m0_1460 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="DefaultContractResolver.cs", label="string json = @''[\r\n  {\r\n    ''''Name'''': ''''Jim'''',\r\n    ''''BirthDate'''': ''''\/Date(978048000000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(978048000000)\/''''\r\n  },\r\n  {\r\n    ''''Name'''': ''''Jim'''',\r\n    ''''BirthDate'''': ''''\/Date(978048000000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(978048000000)\/''''\r\n  }\r\n]''", span="2327-2338"];
m0_1462 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="DefaultContractResolver.cs", label="int i = 0", span="2345-2345"];
m0_1463 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="DefaultContractResolver.cs", label="i < 13", span="2345-2345"];
m0_1465 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="DefaultContractResolver.cs", label="i++", span="2345-2345"];
m0_1468 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", span="2325-2325"];
m0_570 [cluster="Newtonsoft.Json.Serialization.ReflectionValueProvider.ReflectionValueProvider(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.ReflectionValueProvider.ReflectionValueProvider(System.Reflection.MemberInfo)", span="43-43"];
m0_658 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", span="1135-1135"];
m0_1878 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", span="3009-3009"];
m0_1882 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="DefaultContractResolver.cs", label="Assert.AreEqual(0, reader.Depth)", span="3019-3019"];
m0_1884 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="DefaultContractResolver.cs", label="Assert.AreEqual(1, reader.Depth)", span="3024-3024"];
m0_1886 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="DefaultContractResolver.cs", label="Assert.AreEqual(2, reader.Depth)", span="3027-3027"];
m0_1888 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="DefaultContractResolver.cs", label="Assert.AreEqual(3, reader.Depth)", span="3030-3030"];
m0_1890 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="DefaultContractResolver.cs", label="Assert.AreEqual(3, reader.Depth)", span="3033-3033"];
m0_1892 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="DefaultContractResolver.cs", label="Assert.AreEqual(2, reader.Depth)", span="3036-3036"];
m0_1894 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="DefaultContractResolver.cs", label="Assert.AreEqual(1, reader.Depth)", span="3039-3039"];
m0_1896 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="DefaultContractResolver.cs", label="Assert.AreEqual(1, reader.Depth)", span="3044-3044"];
m0_1898 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="DefaultContractResolver.cs", label="Assert.AreEqual(2, reader.Depth)", span="3047-3047"];
m0_1900 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="DefaultContractResolver.cs", label="Assert.AreEqual(2, reader.Depth)", span="3050-3050"];
m0_1902 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="DefaultContractResolver.cs", label="Assert.AreEqual(1, reader.Depth)", span="3053-3053"];
m0_1904 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="DefaultContractResolver.cs", label="Assert.AreEqual(0, reader.Depth)", span="3056-3056"];
m0_1880 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                MaxDepth = 1\r\n            }", span="3013-3016"];
m0_1881 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="3018-3018"];
m0_1885 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="3026-3026"];
m0_1887 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="3029-3029"];
m0_1889 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="3032-3032"];
m0_1891 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="3035-3035"];
m0_1893 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="3038-3038"];
m0_1897 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="3046-3046"];
m0_1899 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="3049-3049"];
m0_1901 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="3052-3052"];
m0_1903 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="3055-3055"];
m0_1905 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="DefaultContractResolver.cs", label="Assert.IsFalse(reader.Read())", span="3058-3058"];
m0_1883 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="DefaultContractResolver.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''The reader's MaxDepth of 1 has been exceeded. Path '[0]', line 1, position 2.'',\r\n                () => { Assert.IsTrue(reader.Read()); })", span="3021-3023"];
m0_1895 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="DefaultContractResolver.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''The reader's MaxDepth of 1 has been exceeded. Path '[1]', line 1, position 9.'',\r\n                () => { Assert.IsTrue(reader.Read()); })", span="3041-3043"];
m0_1879 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="DefaultContractResolver.cs", label="string json = ''[[[[]]],[[]]]''", span="3011-3011"];
m0_1906 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", span="3009-3009"];
m0_662 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="return null;", span="1560-1560"];
m0_659 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.CreateJsonConverterInstance(System.Type, object[])", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.CreateJsonConverterInstance(System.Type, object[])", span="199-199"];
m0_660 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="MethodInfo shouldSerializeMethod = member.DeclaringType.GetMethod(JsonTypeReflector.ShouldSerializePrefix + member.Name, ReflectionUtils.EmptyTypes)", span="1556-1556"];
m0_661 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="shouldSerializeMethod == null || shouldSerializeMethod.ReturnType != typeof(bool)", span="1558-1558"];
m0_663 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="MethodCall<object, object> shouldSerializeCall =\r\n                JsonTypeReflector.ReflectionDelegateFactory.CreateMethodCall<object>(shouldSerializeMethod)", span="1563-1564"];
m0_950 [cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="365-365"];
m0_1430 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", span="2280-2280"];
m0_1434 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2287-2287"];
m0_1436 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2290-2290"];
m0_1438 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2293-2293"];
m0_1439 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="DefaultContractResolver.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="2294-2294"];
m0_1442 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2298-2298"];
m0_1440 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="DefaultContractResolver.cs", label="Assert.AreEqual(-79228162514264300000000000000m, d)", span="2295-2295"];
m0_1432 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2284-2284"];
m0_1433 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2286-2286"];
m0_1435 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2289-2289"];
m0_1441 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2297-2297"];
m0_1437 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="DefaultContractResolver.cs", label="decimal? d = reader.ReadAsDecimal()", span="2292-2292"];
m0_1431 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="DefaultContractResolver.cs", label="string json = @''{''''decimal'''':-7.92281625142643E+28}''", span="2282-2282"];
m0_1443 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", span="2280-2280"];
m0_2082 [cluster="Newtonsoft.Json.Tests.SlowStream.SlowStream(string, System.Text.Encoding, int)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.SlowStream.SlowStream(string, System.Text.Encoding, int)", span="3303-3303"];
m0_158 [cluster="Unk.FormatWith", file="DefaultContractResolver.cs", label="Entry Unk.FormatWith", span=""];
m0_1201 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", span="1934-1934"];
m0_1204 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(2, data.Length)", span="1939-1939"];
m0_1205 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(1, data[0])", span="1940-1940"];
m0_1206 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="DefaultContractResolver.cs", label="Assert.AreEqual(2, data[1])", span="1941-1941"];
m0_1202 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[/*hi*/1/*hi*/,2/*hi*/]''))", span="1936-1936"];
m0_1203 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="DefaultContractResolver.cs", label="byte[] data = reader.ReadAsBytes()", span="1938-1938"];
m0_1207 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", span="1934-1934"];
m0_1174 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", span="1892-1892"];
m0_1177 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1897-1897"];
m0_1175 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''''))", span="1894-1894"];
m0_1176 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="DefaultContractResolver.cs", label="Assert.IsNull(reader.ReadAsDateTimeOffset())", span="1896-1896"];
m0_1178 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", span="1892-1892"];
m0_549 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="IList<JsonProperty> orderedProperties = properties.OrderBy(p => p.Order ?? -1).ToList()", span="1314-1314"];
m0_551 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", span="1286-1286"];
m0_554 [cluster="Newtonsoft.Json.Utilities.PropertyNameTable.Add(string)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Utilities.PropertyNameTable.Add(string)", span="76-76"];
m0_550 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="return orderedProperties;", span="1315-1315"];
m0_1619 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", span="2597-2597"];
m0_1623 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2603-2603"];
m0_1625 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2606-2606"];
m0_1627 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2609-2609"];
m0_1629 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="2612-2612"];
m0_1631 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2615-2615"];
m0_1633 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2618-2618"];
m0_1635 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2621-2621"];
m0_1637 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2624-2624"];
m0_1639 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2627-2627"];
m0_1621 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2600-2600"];
m0_1622 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2602-2602"];
m0_1624 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2605-2605"];
m0_1626 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2608-2608"];
m0_1628 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2611-2611"];
m0_1630 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2614-2614"];
m0_1632 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2617-2617"];
m0_1634 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2620-2620"];
m0_1636 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2623-2623"];
m0_1638 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2626-2626"];
m0_1640 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="DefaultContractResolver.cs", label="Assert.IsFalse(reader.Read())", span="2629-2629"];
m0_1620 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="DefaultContractResolver.cs", label="string json = ''\x00a0{\x00a0'h\x00a0i\x00a0'\x00a0:\x00a0[\x00a0true\x00a0,\x00a0new\x00a0Date\x00a0(\x00a0)\x00a0]\x00a0/*\x00a0comment\x00a0*/\x00a0}\x00a0''", span="2599-2599"];
m0_1641 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", span="2597-2597"];
m0_1481 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", span="2385-2385"];
m0_1485 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="DefaultContractResolver.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="2394-2394"];
m0_1486 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2395-2395"];
m0_1488 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2398-2398"];
m0_1483 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2388-2388"];
m0_1484 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2393-2393"];
m0_1487 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2397-2397"];
m0_1482 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="DefaultContractResolver.cs", label="string json = ''new Date\0()''", span="2387-2387"];
m0_1489 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", span="2385-2385"];
m0_1088 [cluster="System.Text.Encoding.GetString(byte[], int, int)", file="DefaultContractResolver.cs", label="Entry System.Text.Encoding.GetString(byte[], int, int)", span="0-0"];
m0_1293 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", span="2076-2076"];
m0_1297 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2083-2083"];
m0_1299 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2086-2086"];
m0_1301 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2089-2089"];
m0_1302 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="DefaultContractResolver.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2090-2090"];
m0_1303 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="DefaultContractResolver.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), reader.Value)", span="2091-2091"];
m0_1305 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2094-2094"];
m0_1295 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2080-2080"];
m0_1296 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2082-2082"];
m0_1298 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2085-2085"];
m0_1304 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2093-2093"];
m0_1300 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="DefaultContractResolver.cs", label="reader.ReadAsDateTimeOffset()", span="2088-2088"];
m0_1294 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="DefaultContractResolver.cs", label="string json = ''{\''Offset\'':\''\\/Date(946663200000+06)\\/\''}''", span="2078-2078"];
m0_1306 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", span="2076-2076"];
m0_1797 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", span="2886-2886"];
m0_1801 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2893-2893"];
m0_1803 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2896-2896"];
m0_1805 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2899-2899"];
m0_1807 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2902-2902"];
m0_1809 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2905-2905"];
m0_1811 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2908-2908"];
m0_1799 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2890-2890"];
m0_1800 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="DefaultContractResolver.cs", label="reader.Read()", span="2892-2892"];
m0_1802 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="DefaultContractResolver.cs", label="reader.Read()", span="2895-2895"];
m0_1804 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="DefaultContractResolver.cs", label="reader.Read()", span="2898-2898"];
m0_1806 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="DefaultContractResolver.cs", label="reader.Read()", span="2901-2901"];
m0_1808 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="DefaultContractResolver.cs", label="reader.Read()", span="2904-2904"];
m0_1810 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="DefaultContractResolver.cs", label="reader.Read()", span="2907-2907"];
m0_1798 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="DefaultContractResolver.cs", label="string json = @''[0,1,2 , 3]''", span="2888-2888"];
m0_1812 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", span="2886-2886"];
m0_1869 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", span="2992-2992"];
m0_1871 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                MaxDepth = 1\r\n            }", span="2996-2999"];
m0_1872 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="3001-3001"];
m0_1870 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="DefaultContractResolver.cs", label="string json = ''[[]]''", span="2994-2994"];
m0_1873 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="DefaultContractResolver.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''The reader's MaxDepth of 1 has been exceeded. Path '[0]', line 1, position 2.'',\r\n                () => { Assert.IsTrue(reader.Read()); })", span="3003-3005"];
m0_1874 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", span="2992-2992"];
m0_1490 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", span="2402-2402"];
m0_1494 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="DefaultContractResolver.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="2408-2408"];
m0_1495 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2409-2409"];
m0_1497 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="DefaultContractResolver.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2412-2412"];
m0_1492 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="DefaultContractResolver.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2405-2405"];
m0_1493 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2407-2407"];
m0_1496 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="DefaultContractResolver.cs", label="Assert.IsTrue(reader.Read())", span="2411-2411"];
m0_1491 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="DefaultContractResolver.cs", label="string json = ''new Date\n()''", span="2404-2404"];
m0_1498 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", span="2402-2402"];
m0_2111 [file="DefaultContractResolver.cs", label="Newtonsoft.Json.Tests.JsonTextReaderTest", span=""];
m0_2116 [file="DefaultContractResolver.cs", label=total, span=""];
m0_2117 [file="DefaultContractResolver.cs", label=total, span=""];
m0_2108 [file="DefaultContractResolver.cs", label=reader, span=""];
m0_2109 [file="DefaultContractResolver.cs", label=reader, span=""];
m0_2110 [file="DefaultContractResolver.cs", label=reader, span=""];
m0_2112 [file="DefaultContractResolver.cs", label=reader, span=""];
m0_2113 [file="DefaultContractResolver.cs", label=reader, span=""];
m0_2114 [file="DefaultContractResolver.cs", label=reader, span=""];
m0_2124 [file="DefaultContractResolver.cs", label=reader, span=""];
m0_2125 [file="DefaultContractResolver.cs", label=reader, span=""];
m0_2126 [file="DefaultContractResolver.cs", label=reader, span=""];
m0_2127 [file="DefaultContractResolver.cs", label=reader, span=""];
m0_2136 [file="DefaultContractResolver.cs", label=reader, span=""];
m0_2137 [file="DefaultContractResolver.cs", label=reader, span=""];
m0_2138 [file="DefaultContractResolver.cs", label=reader, span=""];
m0_2139 [file="DefaultContractResolver.cs", label=reader, span=""];
m0_2140 [file="DefaultContractResolver.cs", label=reader, span=""];
m0_2141 [file="DefaultContractResolver.cs", label=reader, span=""];
m0_2142 [file="DefaultContractResolver.cs", label=reader, span=""];
m0_2143 [file="DefaultContractResolver.cs", label=reader, span=""];
m0_2144 [file="DefaultContractResolver.cs", label=reader, span=""];
m0_2145 [file="DefaultContractResolver.cs", label=reader, span=""];
m0_2147 [file="DefaultContractResolver.cs", label=reader, span=""];
m0_2148 [file="DefaultContractResolver.cs", label=reader, span=""];
m0_2149 [file="DefaultContractResolver.cs", label=jsonTextReader, span=""];
m0_2105 [file="DefaultContractResolver.cs", label=jsonTextReader, span=""];
m0_2106 [file="DefaultContractResolver.cs", label=jsonTextReader, span=""];
m0_2107 [file="DefaultContractResolver.cs", label=jsonTextReader, span=""];
m0_2115 [file="DefaultContractResolver.cs", label=reader, span=""];
m0_2118 [file="DefaultContractResolver.cs", label=reader, span=""];
m0_2119 [file="DefaultContractResolver.cs", label=reader, span=""];
m0_2120 [file="DefaultContractResolver.cs", label=reader, span=""];
m0_2121 [file="DefaultContractResolver.cs", label=reader, span=""];
m0_2122 [file="DefaultContractResolver.cs", label=reader, span=""];
m0_2123 [file="DefaultContractResolver.cs", label=reader, span=""];
m0_2128 [file="DefaultContractResolver.cs", label=reader, span=""];
m0_2129 [file="DefaultContractResolver.cs", label=reader, span=""];
m0_2130 [file="DefaultContractResolver.cs", label=reader, span=""];
m0_2131 [file="DefaultContractResolver.cs", label=reader, span=""];
m0_2132 [file="DefaultContractResolver.cs", label=reader, span=""];
m0_2133 [file="DefaultContractResolver.cs", label=reader, span=""];
m0_2134 [file="DefaultContractResolver.cs", label=reader, span=""];
m0_2135 [file="DefaultContractResolver.cs", label=reader, span=""];
m0_2146 [file="DefaultContractResolver.cs", label=reader, span=""];
m0_2150 [file="DefaultContractResolver.cs", label="Newtonsoft.Json.Tests.ToggleReaderError", span=""];
m5_5 [cluster="Newtonsoft.Json.JsonReader.JsonReader()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.JsonReader()", span="340-340"];
m5_6 [cluster="Newtonsoft.Json.JsonReader.JsonReader()", file="JsonReader.cs", label="_currentState = State.Start", span="342-342"];
m5_7 [cluster="Newtonsoft.Json.JsonReader.JsonReader()", file="JsonReader.cs", label="_dateTimeZoneHandling = DateTimeZoneHandling.RoundtripKind", span="343-343"];
m5_8 [cluster="Newtonsoft.Json.JsonReader.JsonReader()", file="JsonReader.cs", label="_dateParseHandling = DateParseHandling.DateTime", span="344-344"];
m5_9 [cluster="Newtonsoft.Json.JsonReader.JsonReader()", file="JsonReader.cs", label="_floatParseHandling = FloatParseHandling.Double", span="345-345"];
m5_10 [cluster="Newtonsoft.Json.JsonReader.JsonReader()", file="JsonReader.cs", label="CloseInput = true", span="347-347"];
m5_11 [cluster="Newtonsoft.Json.JsonReader.JsonReader()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.JsonReader()", span="340-340"];
m5_144 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ArrayEmpty<T>()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.ArrayEmpty<T>()", span="362-362"];
m5_205 [cluster="Newtonsoft.Json.JsonReader.ReadAsBoolean()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsBoolean()", span="678-678"];
m5_206 [cluster="Newtonsoft.Json.JsonReader.ReadAsBoolean()", file="JsonReader.cs", label="JsonToken t = GetContentToken()", span="680-680"];
m5_207 [cluster="Newtonsoft.Json.JsonReader.ReadAsBoolean()", file="JsonReader.cs", label=t, span="682-682"];
m5_223 [cluster="Newtonsoft.Json.JsonReader.ReadAsBoolean()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Error reading boolean. Unexpected token: {0}.''.FormatWith(CultureInfo.InvariantCulture, t));", span="711-711"];
m5_208 [cluster="Newtonsoft.Json.JsonReader.ReadAsBoolean()", file="JsonReader.cs", label="JsonToken.None", span="684-684"];
m5_212 [cluster="Newtonsoft.Json.JsonReader.ReadAsBoolean()", file="JsonReader.cs", label="JsonToken.Integer", span="688-688"];
m5_218 [cluster="Newtonsoft.Json.JsonReader.ReadAsBoolean()", file="JsonReader.cs", label="JsonToken.String", span="705-705"];
m5_220 [cluster="Newtonsoft.Json.JsonReader.ReadAsBoolean()", file="JsonReader.cs", label="JsonToken.Boolean", span="707-707"];
m5_209 [cluster="Newtonsoft.Json.JsonReader.ReadAsBoolean()", file="JsonReader.cs", label="JsonToken.Null", span="685-685"];
m5_210 [cluster="Newtonsoft.Json.JsonReader.ReadAsBoolean()", file="JsonReader.cs", label="JsonToken.EndArray", span="686-686"];
m5_211 [cluster="Newtonsoft.Json.JsonReader.ReadAsBoolean()", file="JsonReader.cs", label="return null;", span="687-687"];
m5_213 [cluster="Newtonsoft.Json.JsonReader.ReadAsBoolean()", file="JsonReader.cs", label="JsonToken.Float", span="689-689"];
m5_214 [cluster="Newtonsoft.Json.JsonReader.ReadAsBoolean()", file="JsonReader.cs", label="bool b", span="690-690"];
m5_215 [cluster="Newtonsoft.Json.JsonReader.ReadAsBoolean()", file="JsonReader.cs", label="b = Convert.ToBoolean(Value, CultureInfo.InvariantCulture)", span="699-699"];
m5_216 [cluster="Newtonsoft.Json.JsonReader.ReadAsBoolean()", file="JsonReader.cs", label="SetToken(JsonToken.Boolean, b, false)", span="702-702"];
m5_217 [cluster="Newtonsoft.Json.JsonReader.ReadAsBoolean()", file="JsonReader.cs", label="return b;", span="704-704"];
m5_219 [cluster="Newtonsoft.Json.JsonReader.ReadAsBoolean()", file="JsonReader.cs", label="return ReadBooleanString((string)Value);", span="706-706"];
m5_221 [cluster="Newtonsoft.Json.JsonReader.ReadAsBoolean()", file="JsonReader.cs", label="return (bool)Value;", span="708-708"];
m5_222 [cluster="Newtonsoft.Json.JsonReader.ReadAsBoolean()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadAsBoolean()", span="678-678"];
m5_254 [cluster="Newtonsoft.Json.JsonReader.ReadDecimalString(string)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadDecimalString(string)", span="764-764"];
m5_255 [cluster="Newtonsoft.Json.JsonReader.ReadDecimalString(string)", file="JsonReader.cs", label="string.IsNullOrEmpty(s)", span="766-766"];
m5_259 [cluster="Newtonsoft.Json.JsonReader.ReadDecimalString(string)", file="JsonReader.cs", label="decimal.TryParse(s, NumberStyles.Number, Culture, out d)", span="773-773"];
m5_262 [cluster="Newtonsoft.Json.JsonReader.ReadDecimalString(string)", file="JsonReader.cs", label="SetToken(JsonToken.String, s, false)", span="780-780"];
m5_263 [cluster="Newtonsoft.Json.JsonReader.ReadDecimalString(string)", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Could not convert string to decimal: {0}.''.FormatWith(CultureInfo.InvariantCulture, s));", span="781-781"];
m5_256 [cluster="Newtonsoft.Json.JsonReader.ReadDecimalString(string)", file="JsonReader.cs", label="SetToken(JsonToken.Null, null, false)", span="768-768"];
m5_258 [cluster="Newtonsoft.Json.JsonReader.ReadDecimalString(string)", file="JsonReader.cs", label="decimal d", span="772-772"];
m5_257 [cluster="Newtonsoft.Json.JsonReader.ReadDecimalString(string)", file="JsonReader.cs", label="return null;", span="769-769"];
m5_260 [cluster="Newtonsoft.Json.JsonReader.ReadDecimalString(string)", file="JsonReader.cs", label="SetToken(JsonToken.Float, d, false)", span="775-775"];
m5_261 [cluster="Newtonsoft.Json.JsonReader.ReadDecimalString(string)", file="JsonReader.cs", label="return d;", span="776-776"];
m5_264 [cluster="Newtonsoft.Json.JsonReader.ReadDecimalString(string)", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadDecimalString(string)", span="764-764"];
m5_295 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.EnsureDateTime(System.DateTime, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonReader.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.EnsureDateTime(System.DateTime, Newtonsoft.Json.DateTimeZoneHandling)", span="92-92"];
m5_358 [cluster="Newtonsoft.Json.JsonReader.ValidateEnd(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ValidateEnd(Newtonsoft.Json.JsonToken)", span="1039-1039"];
m5_370 [cluster="Newtonsoft.Json.JsonReader.ValidateEnd(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="JsonContainerType currentObject = Pop()", span="1041-1041"];
m5_371 [cluster="Newtonsoft.Json.JsonReader.ValidateEnd(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="GetTypeForCloseToken(endToken) != currentObject", span="1043-1043"];
m5_372 [cluster="Newtonsoft.Json.JsonReader.ValidateEnd(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''JsonToken {0} is not valid for closing JsonType {1}.''.FormatWith(CultureInfo.InvariantCulture, endToken, currentObject));", span="1045-1045"];
m5_373 [cluster="Newtonsoft.Json.JsonReader.ValidateEnd(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="Peek() != JsonContainerType.None", span="1048-1048"];
m5_374 [cluster="Newtonsoft.Json.JsonReader.ValidateEnd(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="_currentState = State.PostValue", span="1050-1050"];
m5_375 [cluster="Newtonsoft.Json.JsonReader.ValidateEnd(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="SetFinished()", span="1054-1054"];
m5_376 [cluster="Newtonsoft.Json.JsonReader.ValidateEnd(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ValidateEnd(Newtonsoft.Json.JsonToken)", span="1039-1039"];
m5_24 [cluster="Newtonsoft.Json.JsonReader.UpdateScopeWithFinishedValue()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.UpdateScopeWithFinishedValue()", span="1031-1031"];
m5_367 [cluster="Newtonsoft.Json.JsonReader.UpdateScopeWithFinishedValue()", file="JsonReader.cs", label="_currentPosition.HasIndex", span="1033-1033"];
m5_368 [cluster="Newtonsoft.Json.JsonReader.UpdateScopeWithFinishedValue()", file="JsonReader.cs", label="_currentPosition.Position++", span="1035-1035"];
m5_369 [cluster="Newtonsoft.Json.JsonReader.UpdateScopeWithFinishedValue()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.UpdateScopeWithFinishedValue()", span="1031-1031"];
m5_29 [cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", span="117-117"];
m5_160 [cluster="System.Collections.Generic.List<T>.ToArray()", file="JsonReader.cs", label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0"];
m5_81 [cluster="int.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out int)", file="JsonReader.cs", label="Entry int.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out int)", span="0-0"];
m5_423 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", span="82-82"];
m5_409 [cluster="Newtonsoft.Json.JsonReader.Dispose(bool)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.Dispose(bool)", span="1121-1121"];
m5_411 [cluster="Newtonsoft.Json.JsonReader.Dispose(bool)", file="JsonReader.cs", label="_currentState != State.Closed && disposing", span="1123-1123"];
m5_412 [cluster="Newtonsoft.Json.JsonReader.Dispose(bool)", file="JsonReader.cs", label="Close()", span="1125-1125"];
m5_413 [cluster="Newtonsoft.Json.JsonReader.Dispose(bool)", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.Dispose(bool)", span="1121-1121"];
m5_312 [cluster="string.StartsWith(string, System.StringComparison)", file="JsonReader.cs", label="Entry string.StartsWith(string, System.StringComparison)", span="0-0"];
m5_142 [cluster="Newtonsoft.Json.JsonReader.ReadIntoWrappedTypeObject()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadIntoWrappedTypeObject()", span="909-909"];
m5_303 [cluster="Newtonsoft.Json.JsonReader.ReadIntoWrappedTypeObject()", file="JsonReader.cs", label="ReaderReadAndAssert()", span="911-911"];
m5_304 [cluster="Newtonsoft.Json.JsonReader.ReadIntoWrappedTypeObject()", file="JsonReader.cs", label="Value != null && Value.ToString() == JsonTypeReflector.TypePropertyName", span="912-912"];
m5_305 [cluster="Newtonsoft.Json.JsonReader.ReadIntoWrappedTypeObject()", file="JsonReader.cs", label="ReaderReadAndAssert()", span="914-914"];
m5_310 [cluster="Newtonsoft.Json.JsonReader.ReadIntoWrappedTypeObject()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Error reading bytes. Unexpected token: {0}.''.FormatWith(CultureInfo.InvariantCulture, JsonToken.StartObject));", span="925-925"];
m5_306 [cluster="Newtonsoft.Json.JsonReader.ReadIntoWrappedTypeObject()", file="JsonReader.cs", label="Value != null && Value.ToString().StartsWith(''System.Byte[]'', StringComparison.Ordinal)", span="915-915"];
m5_307 [cluster="Newtonsoft.Json.JsonReader.ReadIntoWrappedTypeObject()", file="JsonReader.cs", label="ReaderReadAndAssert()", span="917-917"];
m5_308 [cluster="Newtonsoft.Json.JsonReader.ReadIntoWrappedTypeObject()", file="JsonReader.cs", label="Value.ToString() == JsonTypeReflector.ValuePropertyName", span="918-918"];
m5_309 [cluster="Newtonsoft.Json.JsonReader.ReadIntoWrappedTypeObject()", file="JsonReader.cs", label="return;", span="920-920"];
m5_311 [cluster="Newtonsoft.Json.JsonReader.ReadIntoWrappedTypeObject()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadIntoWrappedTypeObject()", span="909-909"];
m5_424 [cluster="Newtonsoft.Json.JsonReader.ReadAndMoveToContent()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAndMoveToContent()", span="1148-1148"];
m5_425 [cluster="Newtonsoft.Json.JsonReader.ReadAndMoveToContent()", file="JsonReader.cs", label="return Read() && MoveToContent();", span="1150-1150"];
m5_426 [cluster="Newtonsoft.Json.JsonReader.ReadAndMoveToContent()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadAndMoveToContent()", span="1148-1148"];
m5_69 [cluster="Newtonsoft.Json.JsonReader.ReadInt32String(string)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadInt32String(string)", span="441-441"];
m5_70 [cluster="Newtonsoft.Json.JsonReader.ReadInt32String(string)", file="JsonReader.cs", label="string.IsNullOrEmpty(s)", span="443-443"];
m5_74 [cluster="Newtonsoft.Json.JsonReader.ReadInt32String(string)", file="JsonReader.cs", label="int.TryParse(s, NumberStyles.Integer, Culture, out i)", span="450-450"];
m5_77 [cluster="Newtonsoft.Json.JsonReader.ReadInt32String(string)", file="JsonReader.cs", label="SetToken(JsonToken.String, s, false)", span="457-457"];
m5_78 [cluster="Newtonsoft.Json.JsonReader.ReadInt32String(string)", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Could not convert string to integer: {0}.''.FormatWith(CultureInfo.InvariantCulture, s));", span="458-458"];
m5_71 [cluster="Newtonsoft.Json.JsonReader.ReadInt32String(string)", file="JsonReader.cs", label="SetToken(JsonToken.Null, null, false)", span="445-445"];
m5_73 [cluster="Newtonsoft.Json.JsonReader.ReadInt32String(string)", file="JsonReader.cs", label="int i", span="449-449"];
m5_72 [cluster="Newtonsoft.Json.JsonReader.ReadInt32String(string)", file="JsonReader.cs", label="return null;", span="446-446"];
m5_75 [cluster="Newtonsoft.Json.JsonReader.ReadInt32String(string)", file="JsonReader.cs", label="SetToken(JsonToken.Integer, i, false)", span="452-452"];
m5_76 [cluster="Newtonsoft.Json.JsonReader.ReadInt32String(string)", file="JsonReader.cs", label="return i;", span="453-453"];
m5_79 [cluster="Newtonsoft.Json.JsonReader.ReadInt32String(string)", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadInt32String(string)", span="441-441"];
m5_158 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", span="952-952"];
m5_321 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="SetToken(newToken, null, true)", span="954-954"];
m5_322 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", span="952-952"];
m5_27 [cluster="System.Collections.Generic.List<T>.Add(T)", file="JsonReader.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m5_105 [cluster="object.ToString()", file="JsonReader.cs", label="Entry object.ToString()", span="0-0"];
m5_173 [cluster="System.Convert.ToByte(object, System.IFormatProvider)", file="JsonReader.cs", label="Entry System.Convert.ToByte(object, System.IFormatProvider)", span="0-0"];
m5_147 [cluster="System.Convert.FromBase64String(string)", file="JsonReader.cs", label="Entry System.Convert.FromBase64String(string)", span="0-0"];
m5_80 [cluster="string.IsNullOrEmpty(string)", file="JsonReader.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m5_159 [cluster="Newtonsoft.Json.JsonReader.ReadArrayElementIntoByteArrayReportDone(System.Collections.Generic.List<byte>)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadArrayElementIntoByteArrayReportDone(System.Collections.Generic.List<byte>)", span="594-594"];
m5_161 [cluster="Newtonsoft.Json.JsonReader.ReadArrayElementIntoByteArrayReportDone(System.Collections.Generic.List<byte>)", file="JsonReader.cs", label=TokenType, span="596-596"];
m5_165 [cluster="Newtonsoft.Json.JsonReader.ReadArrayElementIntoByteArrayReportDone(System.Collections.Generic.List<byte>)", file="JsonReader.cs", label="buffer.Add(Convert.ToByte(Value, CultureInfo.InvariantCulture))", span="601-601"];
m5_162 [cluster="Newtonsoft.Json.JsonReader.ReadArrayElementIntoByteArrayReportDone(System.Collections.Generic.List<byte>)", file="JsonReader.cs", label="JsonToken.None", span="598-598"];
m5_164 [cluster="Newtonsoft.Json.JsonReader.ReadArrayElementIntoByteArrayReportDone(System.Collections.Generic.List<byte>)", file="JsonReader.cs", label="JsonToken.Integer", span="600-600"];
m5_167 [cluster="Newtonsoft.Json.JsonReader.ReadArrayElementIntoByteArrayReportDone(System.Collections.Generic.List<byte>)", file="JsonReader.cs", label="JsonToken.EndArray", span="603-603"];
m5_169 [cluster="Newtonsoft.Json.JsonReader.ReadArrayElementIntoByteArrayReportDone(System.Collections.Generic.List<byte>)", file="JsonReader.cs", label="JsonToken.Comment", span="605-605"];
m5_171 [cluster="Newtonsoft.Json.JsonReader.ReadArrayElementIntoByteArrayReportDone(System.Collections.Generic.List<byte>)", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected token when reading bytes: {0}.''.FormatWith(CultureInfo.InvariantCulture, TokenType));", span="608-608"];
m5_163 [cluster="Newtonsoft.Json.JsonReader.ReadArrayElementIntoByteArrayReportDone(System.Collections.Generic.List<byte>)", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected end when reading bytes.'');", span="599-599"];
m5_166 [cluster="Newtonsoft.Json.JsonReader.ReadArrayElementIntoByteArrayReportDone(System.Collections.Generic.List<byte>)", file="JsonReader.cs", label="return false;", span="602-602"];
m5_168 [cluster="Newtonsoft.Json.JsonReader.ReadArrayElementIntoByteArrayReportDone(System.Collections.Generic.List<byte>)", file="JsonReader.cs", label="return true;", span="604-604"];
m5_170 [cluster="Newtonsoft.Json.JsonReader.ReadArrayElementIntoByteArrayReportDone(System.Collections.Generic.List<byte>)", file="JsonReader.cs", label="return false;", span="606-606"];
m5_172 [cluster="Newtonsoft.Json.JsonReader.ReadArrayElementIntoByteArrayReportDone(System.Collections.Generic.List<byte>)", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadArrayElementIntoByteArrayReportDone(System.Collections.Generic.List<byte>)", span="594-594"];
m5_224 [cluster="System.Convert.ToBoolean(object, System.IFormatProvider)", file="JsonReader.cs", label="Entry System.Convert.ToBoolean(object, System.IFormatProvider)", span="0-0"];
m5_320 [cluster="Newtonsoft.Json.Utilities.JsonTokenUtils.IsStartToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="Entry Newtonsoft.Json.Utilities.JsonTokenUtils.IsStartToken(Newtonsoft.Json.JsonToken)", span="45-45"];
m5_26 [cluster="System.Collections.Generic.List<T>.List()", file="JsonReader.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m5_43 [cluster="Newtonsoft.Json.JsonPosition.JsonPosition()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonPosition.JsonPosition()", span="41-41"];
m5_359 [cluster="Newtonsoft.Json.JsonReader.SetPostValueState(bool)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.SetPostValueState(bool)", span="1014-1014"];
m5_360 [cluster="Newtonsoft.Json.JsonReader.SetPostValueState(bool)", file="JsonReader.cs", label="Peek() != JsonContainerType.None", span="1016-1016"];
m5_363 [cluster="Newtonsoft.Json.JsonReader.SetPostValueState(bool)", file="JsonReader.cs", label=updateIndex, span="1025-1025"];
m5_361 [cluster="Newtonsoft.Json.JsonReader.SetPostValueState(bool)", file="JsonReader.cs", label="_currentState = State.PostValue", span="1018-1018"];
m5_362 [cluster="Newtonsoft.Json.JsonReader.SetPostValueState(bool)", file="JsonReader.cs", label="SetFinished()", span="1022-1022"];
m5_364 [cluster="Newtonsoft.Json.JsonReader.SetPostValueState(bool)", file="JsonReader.cs", label="UpdateScopeWithFinishedValue()", span="1027-1027"];
m5_365 [cluster="Newtonsoft.Json.JsonReader.SetPostValueState(bool)", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.SetPostValueState(bool)", span="1014-1014"];
m5_12 [cluster="Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", span="350-350"];
m5_13 [cluster="Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="UpdateScopeWithFinishedValue()", span="352-352"];
m5_15 [cluster="Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="_currentPosition = new JsonPosition(value)", span="356-356"];
m5_19 [cluster="Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="_currentPosition = new JsonPosition(value)", span="366-366"];
m5_14 [cluster="Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="_currentPosition.Type == JsonContainerType.None", span="354-354"];
m5_16 [cluster="Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="_stack == null", span="360-360"];
m5_17 [cluster="Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="_stack = new List<JsonPosition>()", span="362-362"];
m5_18 [cluster="Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="_stack.Add(_currentPosition)", span="365-365"];
m5_20 [cluster="Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="_maxDepth != null && Depth + 1 > _maxDepth && !_hasExceededMaxDepth", span="369-369"];
m5_21 [cluster="Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="_hasExceededMaxDepth = true", span="371-371"];
m5_22 [cluster="Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''The reader's MaxDepth of {0} has been exceeded.''.FormatWith(CultureInfo.InvariantCulture, _maxDepth));", span="372-372"];
m5_23 [cluster="Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", span="350-350"];
m5_106 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsBytes()", span="508-508"];
m5_107 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="JsonToken t = GetContentToken()", span="510-510"];
m5_108 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label=t, span="512-512"];
m5_141 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Error reading bytes. Unexpected token: {0}.''.FormatWith(CultureInfo.InvariantCulture, t));", span="571-571"];
m5_109 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="JsonToken.StartObject", span="514-514"];
m5_117 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="JsonToken.String", span="529-529"];
m5_128 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="JsonToken.None", span="554-554"];
m5_132 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="JsonToken.Bytes", span="558-558"];
m5_138 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="JsonToken.StartArray", span="567-567"];
m5_110 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="ReadIntoWrappedTypeObject()", span="516-516"];
m5_111 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="byte[] data = ReadAsBytes()", span="518-518"];
m5_112 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="ReaderReadAndAssert()", span="519-519"];
m5_115 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="SetToken(JsonToken.Bytes, data, false)", span="526-526"];
m5_116 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="return data;", span="527-527"];
m5_113 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="TokenType != JsonToken.EndObject", span="521-521"];
m5_114 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Error reading bytes. Unexpected token: {0}.''.FormatWith(CultureInfo.InvariantCulture, TokenType));", span="523-523"];
m5_118 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="string s = (string)Value", span="533-533"];
m5_119 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="byte[] data", span="535-535"];
m5_121 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="s.Length == 0", span="538-538"];
m5_123 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="ConvertUtils.TryConvertGuid(s, out g)", span="542-542"];
m5_125 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="data = Convert.FromBase64String(s)", span="548-548"];
m5_120 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="Guid g", span="537-537"];
m5_122 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="data = CollectionUtils.ArrayEmpty<byte>()", span="540-540"];
m5_124 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="data = g.ToByteArray()", span="544-544"];
m5_126 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="SetToken(JsonToken.Bytes, data, false)", span="551-551"];
m5_127 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="return data;", span="552-552"];
m5_129 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="JsonToken.Null", span="555-555"];
m5_130 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="JsonToken.EndArray", span="556-556"];
m5_131 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="return null;", span="557-557"];
m5_133 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="ValueType == typeof(Guid)", span="559-559"];
m5_134 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="byte[] data = ((Guid)Value).ToByteArray()", span="561-561"];
m5_137 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="return (byte[])Value;", span="566-566"];
m5_135 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="SetToken(JsonToken.Bytes, data, false)", span="562-562"];
m5_136 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="return data;", span="563-563"];
m5_139 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="return ReadArrayIntoByteArray();", span="568-568"];
m5_140 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadAsBytes()", span="508-508"];
m5_148 [cluster="Newtonsoft.Json.JsonReader.ReadArrayIntoByteArray()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadArrayIntoByteArray()", span="574-574"];
m5_149 [cluster="Newtonsoft.Json.JsonReader.ReadArrayIntoByteArray()", file="JsonReader.cs", label="List<byte> buffer = new List<byte>()", span="576-576"];
m5_150 [cluster="Newtonsoft.Json.JsonReader.ReadArrayIntoByteArray()", file="JsonReader.cs", label=true, span="578-578"];
m5_153 [cluster="Newtonsoft.Json.JsonReader.ReadArrayIntoByteArray()", file="JsonReader.cs", label="ReadArrayElementIntoByteArrayReportDone(buffer)", span="585-585"];
m5_154 [cluster="Newtonsoft.Json.JsonReader.ReadArrayIntoByteArray()", file="JsonReader.cs", label="byte[] d = buffer.ToArray()", span="587-587"];
m5_151 [cluster="Newtonsoft.Json.JsonReader.ReadArrayIntoByteArray()", file="JsonReader.cs", label="!Read()", span="580-580"];
m5_152 [cluster="Newtonsoft.Json.JsonReader.ReadArrayIntoByteArray()", file="JsonReader.cs", label="SetToken(JsonToken.None)", span="582-582"];
m5_155 [cluster="Newtonsoft.Json.JsonReader.ReadArrayIntoByteArray()", file="JsonReader.cs", label="SetToken(JsonToken.Bytes, d, false)", span="588-588"];
m5_156 [cluster="Newtonsoft.Json.JsonReader.ReadArrayIntoByteArray()", file="JsonReader.cs", label="return d;", span="589-589"];
m5_157 [cluster="Newtonsoft.Json.JsonReader.ReadArrayIntoByteArray()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadArrayIntoByteArray()", span="574-574"];
m5_266 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTime()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsDateTime()", span="789-789"];
m5_267 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTime()", file="JsonReader.cs", label="GetContentToken()", span="791-791"];
m5_268 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTime()", file="JsonReader.cs", label="JsonToken.None", span="793-793"];
m5_272 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTime()", file="JsonReader.cs", label="JsonToken.Date", span="797-797"];
m5_274 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTime()", file="JsonReader.cs", label="JsonToken.String", span="806-806"];
m5_269 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTime()", file="JsonReader.cs", label="JsonToken.Null", span="794-794"];
m5_270 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTime()", file="JsonReader.cs", label="JsonToken.EndArray", span="795-795"];
m5_271 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTime()", file="JsonReader.cs", label="return null;", span="796-796"];
m5_273 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTime()", file="JsonReader.cs", label="return (DateTime)Value;", span="805-805"];
m5_275 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTime()", file="JsonReader.cs", label="string s = (string)Value", span="807-807"];
m5_276 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTime()", file="JsonReader.cs", label="return ReadDateTimeString(s);", span="808-808"];
m5_277 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTime()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Error reading date. Unexpected token: {0}.''.FormatWith(CultureInfo.InvariantCulture, TokenType));", span="811-811"];
m5_278 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTime()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadAsDateTime()", span="789-789"];
m5_49 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsInt32()", span="415-415"];
m5_50 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JsonReader.cs", label="JsonToken t = GetContentToken()", span="417-417"];
m5_51 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JsonReader.cs", label=t, span="419-419"];
m5_65 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Error reading integer. Unexpected token: {0}.''.FormatWith(CultureInfo.InvariantCulture, t));", span="438-438"];
m5_52 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JsonReader.cs", label="JsonToken.None", span="421-421"];
m5_56 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JsonReader.cs", label="JsonToken.Integer", span="425-425"];
m5_61 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JsonReader.cs", label="JsonToken.String", span="433-433"];
m5_53 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JsonReader.cs", label="JsonToken.Null", span="422-422"];
m5_54 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JsonReader.cs", label="JsonToken.EndArray", span="423-423"];
m5_55 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JsonReader.cs", label="return null;", span="424-424"];
m5_57 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JsonReader.cs", label="JsonToken.Float", span="426-426"];
m5_58 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JsonReader.cs", label="!(Value is int)", span="427-427"];
m5_59 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JsonReader.cs", label="SetToken(JsonToken.Integer, Convert.ToInt32(Value, CultureInfo.InvariantCulture), false)", span="429-429"];
m5_60 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JsonReader.cs", label="return (int)Value;", span="432-432"];
m5_62 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JsonReader.cs", label="string s = (string)Value", span="434-434"];
m5_63 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JsonReader.cs", label="return ReadInt32String(s);", span="435-435"];
m5_64 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadAsInt32()", span="415-415"];
m5_174 [cluster="Newtonsoft.Json.JsonReader.ReadAsDouble()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsDouble()", span="616-616"];
m5_175 [cluster="Newtonsoft.Json.JsonReader.ReadAsDouble()", file="JsonReader.cs", label="JsonToken t = GetContentToken()", span="618-618"];
m5_176 [cluster="Newtonsoft.Json.JsonReader.ReadAsDouble()", file="JsonReader.cs", label=t, span="620-620"];
m5_191 [cluster="Newtonsoft.Json.JsonReader.ReadAsDouble()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Error reading double. Unexpected token: {0}.''.FormatWith(CultureInfo.InvariantCulture, t));", span="650-650"];
m5_177 [cluster="Newtonsoft.Json.JsonReader.ReadAsDouble()", file="JsonReader.cs", label="JsonToken.None", span="622-622"];
m5_181 [cluster="Newtonsoft.Json.JsonReader.ReadAsDouble()", file="JsonReader.cs", label="JsonToken.Integer", span="626-626"];
m5_188 [cluster="Newtonsoft.Json.JsonReader.ReadAsDouble()", file="JsonReader.cs", label="JsonToken.String", span="646-646"];
m5_178 [cluster="Newtonsoft.Json.JsonReader.ReadAsDouble()", file="JsonReader.cs", label="JsonToken.Null", span="623-623"];
m5_179 [cluster="Newtonsoft.Json.JsonReader.ReadAsDouble()", file="JsonReader.cs", label="JsonToken.EndArray", span="624-624"];
m5_180 [cluster="Newtonsoft.Json.JsonReader.ReadAsDouble()", file="JsonReader.cs", label="return null;", span="625-625"];
m5_182 [cluster="Newtonsoft.Json.JsonReader.ReadAsDouble()", file="JsonReader.cs", label="JsonToken.Float", span="627-627"];
m5_183 [cluster="Newtonsoft.Json.JsonReader.ReadAsDouble()", file="JsonReader.cs", label="!(Value is double)", span="628-628"];
m5_184 [cluster="Newtonsoft.Json.JsonReader.ReadAsDouble()", file="JsonReader.cs", label="double d", span="630-630"];
m5_187 [cluster="Newtonsoft.Json.JsonReader.ReadAsDouble()", file="JsonReader.cs", label="return (double)Value;", span="645-645"];
m5_185 [cluster="Newtonsoft.Json.JsonReader.ReadAsDouble()", file="JsonReader.cs", label="d = Convert.ToDouble(Value, CultureInfo.InvariantCulture)", span="639-639"];
m5_186 [cluster="Newtonsoft.Json.JsonReader.ReadAsDouble()", file="JsonReader.cs", label="SetToken(JsonToken.Float, d, false)", span="642-642"];
m5_189 [cluster="Newtonsoft.Json.JsonReader.ReadAsDouble()", file="JsonReader.cs", label="return ReadDoubleString((string)Value);", span="647-647"];
m5_190 [cluster="Newtonsoft.Json.JsonReader.ReadAsDouble()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadAsDouble()", span="616-616"];
m5_25 [cluster="Newtonsoft.Json.JsonPosition.JsonPosition(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonPosition.JsonPosition(Newtonsoft.Json.JsonContainerType)", span="50-50"];
m5_104 [cluster="System.IFormattable.ToString(string, System.IFormatProvider)", file="JsonReader.cs", label="Entry System.IFormattable.ToString(string, System.IFormatProvider)", span="0-0"];
m5_82 [cluster="Newtonsoft.Json.JsonReader.ReadAsString()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsString()", span="466-466"];
m5_83 [cluster="Newtonsoft.Json.JsonReader.ReadAsString()", file="JsonReader.cs", label="JsonToken t = GetContentToken()", span="468-468"];
m5_84 [cluster="Newtonsoft.Json.JsonReader.ReadAsString()", file="JsonReader.cs", label=t, span="470-470"];
m5_91 [cluster="Newtonsoft.Json.JsonReader.ReadAsString()", file="JsonReader.cs", label="JsonTokenUtils.IsPrimitiveToken(t)", span="480-480"];
m5_101 [cluster="Newtonsoft.Json.JsonReader.ReadAsString()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Error reading string. Unexpected token: {0}.''.FormatWith(CultureInfo.InvariantCulture, t));", span="501-501"];
m5_85 [cluster="Newtonsoft.Json.JsonReader.ReadAsString()", file="JsonReader.cs", label="JsonToken.None", span="472-472"];
m5_89 [cluster="Newtonsoft.Json.JsonReader.ReadAsString()", file="JsonReader.cs", label="JsonToken.String", span="476-476"];
m5_86 [cluster="Newtonsoft.Json.JsonReader.ReadAsString()", file="JsonReader.cs", label="JsonToken.Null", span="473-473"];
m5_87 [cluster="Newtonsoft.Json.JsonReader.ReadAsString()", file="JsonReader.cs", label="JsonToken.EndArray", span="474-474"];
m5_88 [cluster="Newtonsoft.Json.JsonReader.ReadAsString()", file="JsonReader.cs", label="return null;", span="475-475"];
m5_90 [cluster="Newtonsoft.Json.JsonReader.ReadAsString()", file="JsonReader.cs", label="return (string)Value;", span="477-477"];
m5_92 [cluster="Newtonsoft.Json.JsonReader.ReadAsString()", file="JsonReader.cs", label="Value != null", span="482-482"];
m5_93 [cluster="Newtonsoft.Json.JsonReader.ReadAsString()", file="JsonReader.cs", label="string s", span="484-484"];
m5_94 [cluster="Newtonsoft.Json.JsonReader.ReadAsString()", file="JsonReader.cs", label="IFormattable formattable = Value as IFormattable", span="485-485"];
m5_95 [cluster="Newtonsoft.Json.JsonReader.ReadAsString()", file="JsonReader.cs", label="formattable != null", span="486-486"];
m5_96 [cluster="Newtonsoft.Json.JsonReader.ReadAsString()", file="JsonReader.cs", label="s = formattable.ToString(null, Culture)", span="488-488"];
m5_97 [cluster="Newtonsoft.Json.JsonReader.ReadAsString()", file="JsonReader.cs", label="Uri uri = Value as Uri", span="492-492"];
m5_98 [cluster="Newtonsoft.Json.JsonReader.ReadAsString()", file="JsonReader.cs", label="s = uri != null ? uri.OriginalString : Value.ToString()", span="493-493"];
m5_99 [cluster="Newtonsoft.Json.JsonReader.ReadAsString()", file="JsonReader.cs", label="SetToken(JsonToken.String, s, false)", span="496-496"];
m5_100 [cluster="Newtonsoft.Json.JsonReader.ReadAsString()", file="JsonReader.cs", label="return s;", span="497-497"];
m5_102 [cluster="Newtonsoft.Json.JsonReader.ReadAsString()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadAsString()", span="466-466"];
m5_146 [cluster="System.Guid.ToByteArray()", file="JsonReader.cs", label="Entry System.Guid.ToByteArray()", span="0-0"];
m5_419 [cluster="Newtonsoft.Json.JsonReader.ReadAndAssert()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAndAssert()", span="1140-1140"];
m5_420 [cluster="Newtonsoft.Json.JsonReader.ReadAndAssert()", file="JsonReader.cs", label="!Read()", span="1142-1142"];
m5_421 [cluster="Newtonsoft.Json.JsonReader.ReadAndAssert()", file="JsonReader.cs", label="throw JsonSerializationException.Create(this, ''Unexpected end when reading JSON.'');", span="1144-1144"];
m5_422 [cluster="Newtonsoft.Json.JsonReader.ReadAndAssert()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadAndAssert()", span="1140-1140"];
m5_378 [cluster="string.FormatWith(System.IFormatProvider, object, object)", file="JsonReader.cs", label="Entry string.FormatWith(System.IFormatProvider, object, object)", span="52-52"];
m5_143 [cluster="Newtonsoft.Json.JsonReader.ReaderReadAndAssert()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReaderReadAndAssert()", span="896-896"];
m5_297 [cluster="Newtonsoft.Json.JsonReader.ReaderReadAndAssert()", file="JsonReader.cs", label="!Read()", span="898-898"];
m5_298 [cluster="Newtonsoft.Json.JsonReader.ReaderReadAndAssert()", file="JsonReader.cs", label="throw CreateUnexpectedEndException();", span="900-900"];
m5_299 [cluster="Newtonsoft.Json.JsonReader.ReaderReadAndAssert()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReaderReadAndAssert()", span="896-896"];
m5_103 [cluster="Newtonsoft.Json.Utilities.JsonTokenUtils.IsPrimitiveToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="Entry Newtonsoft.Json.Utilities.JsonTokenUtils.IsPrimitiveToken(Newtonsoft.Json.JsonToken)", span="58-58"];
m5_414 [cluster="Newtonsoft.Json.JsonReader.Close()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.Close()", span="1133-1133"];
m5_415 [cluster="Newtonsoft.Json.JsonReader.Close()", file="JsonReader.cs", label="_currentState = State.Closed", span="1135-1135"];
m5_416 [cluster="Newtonsoft.Json.JsonReader.Close()", file="JsonReader.cs", label="_tokenType = JsonToken.None", span="1136-1136"];
m5_417 [cluster="Newtonsoft.Json.JsonReader.Close()", file="JsonReader.cs", label="_value = null", span="1137-1137"];
m5_418 [cluster="Newtonsoft.Json.JsonReader.Close()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.Close()", span="1133-1133"];
m5_405 [cluster="Newtonsoft.Json.JsonReader.System.IDisposable.Dispose()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.System.IDisposable.Dispose()", span="1111-1111"];
m5_406 [cluster="Newtonsoft.Json.JsonReader.System.IDisposable.Dispose()", file="JsonReader.cs", label="Dispose(true)", span="1113-1113"];
m5_407 [cluster="Newtonsoft.Json.JsonReader.System.IDisposable.Dispose()", file="JsonReader.cs", label="GC.SuppressFinalize(this)", span="1114-1114"];
m5_408 [cluster="Newtonsoft.Json.JsonReader.System.IDisposable.Dispose()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.System.IDisposable.Dispose()", span="1111-1111"];
m5_279 [cluster="Newtonsoft.Json.JsonReader.ReadDateTimeString(string)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadDateTimeString(string)", span="814-814"];
m5_280 [cluster="Newtonsoft.Json.JsonReader.ReadDateTimeString(string)", file="JsonReader.cs", label="string.IsNullOrEmpty(s)", span="816-816"];
m5_284 [cluster="Newtonsoft.Json.JsonReader.ReadDateTimeString(string)", file="JsonReader.cs", label="DateTimeUtils.TryParseDateTime(s, DateTimeZoneHandling, _dateFormatString, Culture, out dt)", span="823-823"];
m5_288 [cluster="Newtonsoft.Json.JsonReader.ReadDateTimeString(string)", file="JsonReader.cs", label="DateTime.TryParse(s, Culture, DateTimeStyles.RoundtripKind, out dt)", span="830-830"];
m5_292 [cluster="Newtonsoft.Json.JsonReader.ReadDateTimeString(string)", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Could not convert string to DateTime: {0}.''.FormatWith(CultureInfo.InvariantCulture, s));", span="837-837"];
m5_281 [cluster="Newtonsoft.Json.JsonReader.ReadDateTimeString(string)", file="JsonReader.cs", label="SetToken(JsonToken.Null, null, false)", span="818-818"];
m5_283 [cluster="Newtonsoft.Json.JsonReader.ReadDateTimeString(string)", file="JsonReader.cs", label="DateTime dt", span="822-822"];
m5_282 [cluster="Newtonsoft.Json.JsonReader.ReadDateTimeString(string)", file="JsonReader.cs", label="return null;", span="819-819"];
m5_285 [cluster="Newtonsoft.Json.JsonReader.ReadDateTimeString(string)", file="JsonReader.cs", label="dt = DateTimeUtils.EnsureDateTime(dt, DateTimeZoneHandling)", span="825-825"];
m5_286 [cluster="Newtonsoft.Json.JsonReader.ReadDateTimeString(string)", file="JsonReader.cs", label="SetToken(JsonToken.Date, dt, false)", span="826-826"];
m5_287 [cluster="Newtonsoft.Json.JsonReader.ReadDateTimeString(string)", file="JsonReader.cs", label="return dt;", span="827-827"];
m5_289 [cluster="Newtonsoft.Json.JsonReader.ReadDateTimeString(string)", file="JsonReader.cs", label="dt = DateTimeUtils.EnsureDateTime(dt, DateTimeZoneHandling)", span="832-832"];
m5_290 [cluster="Newtonsoft.Json.JsonReader.ReadDateTimeString(string)", file="JsonReader.cs", label="SetToken(JsonToken.Date, dt, false)", span="833-833"];
m5_291 [cluster="Newtonsoft.Json.JsonReader.ReadDateTimeString(string)", file="JsonReader.cs", label="return dt;", span="834-834"];
m5_293 [cluster="Newtonsoft.Json.JsonReader.ReadDateTimeString(string)", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadDateTimeString(string)", span="814-814"];
m5_236 [cluster="bool.TryParse(string, out bool)", file="JsonReader.cs", label="Entry bool.TryParse(string, out bool)", span="0-0"];
m5_296 [cluster="System.DateTime.TryParse(string, System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTime)", file="JsonReader.cs", label="Entry System.DateTime.TryParse(string, System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTime)", span="0-0"];
m5_253 [cluster="System.Convert.ToDecimal(object, System.IFormatProvider)", file="JsonReader.cs", label="Entry System.Convert.ToDecimal(object, System.IFormatProvider)", span="0-0"];
m5_145 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertGuid(string, out System.Guid)", file="JsonReader.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.TryConvertGuid(string, out System.Guid)", span="1618-1618"];
m5_204 [cluster="double.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out double)", file="JsonReader.cs", label="Entry double.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out double)", span="0-0"];
m5_68 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", span="967-967"];
m5_326 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="_tokenType = newToken", span="969-969"];
m5_327 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="_value = value", span="970-970"];
m5_328 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label=newToken, span="972-972"];
m5_346 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="_currentPosition.PropertyName = (string)value", span="998-998"];
m5_356 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="SetPostValueState(updateIndex)", span="1009-1009"];
m5_329 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.StartObject", span="974-974"];
m5_332 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.StartArray", span="978-978"];
m5_335 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.StartConstructor", span="982-982"];
m5_338 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.EndObject", span="986-986"];
m5_340 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.EndArray", span="989-989"];
m5_342 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.EndConstructor", span="992-992"];
m5_344 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.PropertyName", span="995-995"];
m5_347 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.Undefined", span="1000-1000"];
m5_330 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="_currentState = State.ObjectStart", span="975-975"];
m5_331 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="Push(JsonContainerType.Object)", span="976-976"];
m5_333 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="_currentState = State.ArrayStart", span="979-979"];
m5_334 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="Push(JsonContainerType.Array)", span="980-980"];
m5_336 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="_currentState = State.ConstructorStart", span="983-983"];
m5_337 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="Push(JsonContainerType.Constructor)", span="984-984"];
m5_339 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="ValidateEnd(JsonToken.EndObject)", span="987-987"];
m5_341 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="ValidateEnd(JsonToken.EndArray)", span="990-990"];
m5_343 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="ValidateEnd(JsonToken.EndConstructor)", span="993-993"];
m5_345 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="_currentState = State.Property", span="996-996"];
m5_348 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.Integer", span="1001-1001"];
m5_349 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.Float", span="1002-1002"];
m5_350 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.Boolean", span="1003-1003"];
m5_351 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.Null", span="1004-1004"];
m5_352 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.Date", span="1005-1005"];
m5_353 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.String", span="1006-1006"];
m5_354 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.Raw", span="1007-1007"];
m5_355 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.Bytes", span="1008-1008"];
m5_357 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", span="967-967"];
m5_294 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(string, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", file="JsonReader.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(string, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", span="379-379"];
m5_313 [cluster="Newtonsoft.Json.JsonReader.Skip()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.Skip()", span="931-931"];
m5_314 [cluster="Newtonsoft.Json.JsonReader.Skip()", file="JsonReader.cs", label="TokenType == JsonToken.PropertyName", span="933-933"];
m5_315 [cluster="Newtonsoft.Json.JsonReader.Skip()", file="JsonReader.cs", label="Read()", span="935-935"];
m5_316 [cluster="Newtonsoft.Json.JsonReader.Skip()", file="JsonReader.cs", label="JsonTokenUtils.IsStartToken(TokenType)", span="938-938"];
m5_317 [cluster="Newtonsoft.Json.JsonReader.Skip()", file="JsonReader.cs", label="int depth = Depth", span="940-940"];
m5_318 [cluster="Newtonsoft.Json.JsonReader.Skip()", file="JsonReader.cs", label="Read() && (depth < Depth)", span="942-942"];
m5_319 [cluster="Newtonsoft.Json.JsonReader.Skip()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.Skip()", span="931-931"];
m5_379 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", span="1061-1061"];
m5_380 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="JsonContainerType currentObject = Peek()", span="1063-1063"];
m5_381 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label=currentObject, span="1065-1065"];
m5_390 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''While setting the reader state back to current object an unexpected JsonType was encountered: {0}''.FormatWith(CultureInfo.InvariantCulture, currentObject));", span="1080-1080"];
m5_382 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="JsonContainerType.Object", span="1067-1067"];
m5_384 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="JsonContainerType.Array", span="1070-1070"];
m5_386 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="JsonContainerType.Constructor", span="1073-1073"];
m5_388 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="JsonContainerType.None", span="1076-1076"];
m5_383 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="_currentState = State.Object", span="1068-1068"];
m5_385 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="_currentState = State.Array", span="1071-1071"];
m5_387 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="_currentState = State.Constructor", span="1074-1074"];
m5_389 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="SetFinished()", span="1077-1077"];
m5_391 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", span="1061-1061"];
m5_0 [cluster="Newtonsoft.Json.JsonReader.GetPosition(int)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.GetPosition(int)", span="327-327"];
m5_1 [cluster="Newtonsoft.Json.JsonReader.GetPosition(int)", file="JsonReader.cs", label="_stack != null && depth < _stack.Count", span="329-329"];
m5_2 [cluster="Newtonsoft.Json.JsonReader.GetPosition(int)", file="JsonReader.cs", label="return _stack[depth];", span="331-331"];
m5_3 [cluster="Newtonsoft.Json.JsonReader.GetPosition(int)", file="JsonReader.cs", label="return _currentPosition;", span="334-334"];
m5_4 [cluster="Newtonsoft.Json.JsonReader.GetPosition(int)", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.GetPosition(int)", span="327-327"];
m5_237 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimal()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsDecimal()", span="739-739"];
m5_238 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimal()", file="JsonReader.cs", label="JsonToken t = GetContentToken()", span="741-741"];
m5_239 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimal()", file="JsonReader.cs", label=t, span="743-743"];
m5_252 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimal()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Error reading decimal. Unexpected token: {0}.''.FormatWith(CultureInfo.InvariantCulture, t));", span="761-761"];
m5_240 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimal()", file="JsonReader.cs", label="JsonToken.None", span="745-745"];
m5_244 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimal()", file="JsonReader.cs", label="JsonToken.Integer", span="749-749"];
m5_249 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimal()", file="JsonReader.cs", label="JsonToken.String", span="757-757"];
m5_241 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimal()", file="JsonReader.cs", label="JsonToken.Null", span="746-746"];
m5_242 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimal()", file="JsonReader.cs", label="JsonToken.EndArray", span="747-747"];
m5_243 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimal()", file="JsonReader.cs", label="return null;", span="748-748"];
m5_245 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimal()", file="JsonReader.cs", label="JsonToken.Float", span="750-750"];
m5_246 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimal()", file="JsonReader.cs", label="!(Value is decimal)", span="751-751"];
m5_247 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimal()", file="JsonReader.cs", label="SetToken(JsonToken.Float, Convert.ToDecimal(Value, CultureInfo.InvariantCulture), false)", span="753-753"];
m5_248 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimal()", file="JsonReader.cs", label="return (decimal)Value;", span="756-756"];
m5_250 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimal()", file="JsonReader.cs", label="return ReadDecimalString((string)Value);", span="758-758"];
m5_251 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimal()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadAsDecimal()", span="739-739"];
m5_44 [cluster="Newtonsoft.Json.JsonReader.Peek()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.Peek()", span="400-400"];
m5_45 [cluster="Newtonsoft.Json.JsonReader.Peek()", file="JsonReader.cs", label="return _currentPosition.Type;", span="402-402"];
m5_46 [cluster="Newtonsoft.Json.JsonReader.Peek()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.Peek()", span="400-400"];
m5_300 [cluster="Newtonsoft.Json.JsonReader.CreateUnexpectedEndException()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.CreateUnexpectedEndException()", span="904-904"];
m5_301 [cluster="Newtonsoft.Json.JsonReader.CreateUnexpectedEndException()", file="JsonReader.cs", label="return JsonReaderException.Create(this, ''Unexpected end when reading JSON.'');", span="906-906"];
m5_302 [cluster="Newtonsoft.Json.JsonReader.CreateUnexpectedEndException()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.CreateUnexpectedEndException()", span="904-904"];
m5_366 [cluster="Newtonsoft.Json.JsonReader.SetFinished()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.SetFinished()", span="1084-1084"];
m5_392 [cluster="Newtonsoft.Json.JsonReader.SetFinished()", file="JsonReader.cs", label=SupportMultipleContent, span="1086-1086"];
m5_393 [cluster="Newtonsoft.Json.JsonReader.SetFinished()", file="JsonReader.cs", label="_currentState = State.Start", span="1088-1088"];
m5_394 [cluster="Newtonsoft.Json.JsonReader.SetFinished()", file="JsonReader.cs", label="_currentState = State.Finished", span="1092-1092"];
m5_395 [cluster="Newtonsoft.Json.JsonReader.SetFinished()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.SetFinished()", span="1084-1084"];
m5_410 [cluster="System.GC.SuppressFinalize(object)", file="JsonReader.cs", label="Entry System.GC.SuppressFinalize(object)", span="0-0"];
m5_427 [cluster="Newtonsoft.Json.JsonReader.MoveToContent()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.MoveToContent()", span="1153-1153"];
m5_428 [cluster="Newtonsoft.Json.JsonReader.MoveToContent()", file="JsonReader.cs", label="JsonToken t = TokenType", span="1155-1155"];
m5_429 [cluster="Newtonsoft.Json.JsonReader.MoveToContent()", file="JsonReader.cs", label="t == JsonToken.None || t == JsonToken.Comment", span="1156-1156"];
m5_430 [cluster="Newtonsoft.Json.JsonReader.MoveToContent()", file="JsonReader.cs", label="!Read()", span="1158-1158"];
m5_433 [cluster="Newtonsoft.Json.JsonReader.MoveToContent()", file="JsonReader.cs", label="return true;", span="1166-1166"];
m5_431 [cluster="Newtonsoft.Json.JsonReader.MoveToContent()", file="JsonReader.cs", label="return false;", span="1160-1160"];
m5_432 [cluster="Newtonsoft.Json.JsonReader.MoveToContent()", file="JsonReader.cs", label="t = TokenType", span="1163-1163"];
m5_434 [cluster="Newtonsoft.Json.JsonReader.MoveToContent()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.MoveToContent()", span="1153-1153"];
m5_323 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", span="962-962"];
m5_324 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="JsonReader.cs", label="SetToken(newToken, value, true)", span="964-964"];
m5_325 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", span="962-962"];
m5_47 [cluster="Newtonsoft.Json.JsonReader.Read()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.Read()", span="409-409"];
m5_48 [cluster="Newtonsoft.Json.JsonReader.Read()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.Read()", span="409-409"];
m5_225 [cluster="Newtonsoft.Json.JsonReader.ReadBooleanString(string)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadBooleanString(string)", span="714-714"];
m5_226 [cluster="Newtonsoft.Json.JsonReader.ReadBooleanString(string)", file="JsonReader.cs", label="string.IsNullOrEmpty(s)", span="716-716"];
m5_230 [cluster="Newtonsoft.Json.JsonReader.ReadBooleanString(string)", file="JsonReader.cs", label="bool.TryParse(s, out b)", span="723-723"];
m5_233 [cluster="Newtonsoft.Json.JsonReader.ReadBooleanString(string)", file="JsonReader.cs", label="SetToken(JsonToken.String, s, false)", span="730-730"];
m5_234 [cluster="Newtonsoft.Json.JsonReader.ReadBooleanString(string)", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Could not convert string to boolean: {0}.''.FormatWith(CultureInfo.InvariantCulture, s));", span="731-731"];
m5_227 [cluster="Newtonsoft.Json.JsonReader.ReadBooleanString(string)", file="JsonReader.cs", label="SetToken(JsonToken.Null, null, false)", span="718-718"];
m5_229 [cluster="Newtonsoft.Json.JsonReader.ReadBooleanString(string)", file="JsonReader.cs", label="bool b", span="722-722"];
m5_228 [cluster="Newtonsoft.Json.JsonReader.ReadBooleanString(string)", file="JsonReader.cs", label="return null;", span="719-719"];
m5_231 [cluster="Newtonsoft.Json.JsonReader.ReadBooleanString(string)", file="JsonReader.cs", label="SetToken(JsonToken.Boolean, b, false)", span="725-725"];
m5_232 [cluster="Newtonsoft.Json.JsonReader.ReadBooleanString(string)", file="JsonReader.cs", label="return b;", span="726-726"];
m5_235 [cluster="Newtonsoft.Json.JsonReader.ReadBooleanString(string)", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadBooleanString(string)", span="714-714"];
m5_66 [cluster="Newtonsoft.Json.JsonReader.GetContentToken()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.GetContentToken()", span="1169-1169"];
m5_435 [cluster="Newtonsoft.Json.JsonReader.GetContentToken()", file="JsonReader.cs", label="JsonToken t", span="1171-1171"];
m5_436 [cluster="Newtonsoft.Json.JsonReader.GetContentToken()", file="JsonReader.cs", label="!Read()", span="1174-1174"];
m5_440 [cluster="Newtonsoft.Json.JsonReader.GetContentToken()", file="JsonReader.cs", label="t == JsonToken.Comment", span="1183-1183"];
m5_441 [cluster="Newtonsoft.Json.JsonReader.GetContentToken()", file="JsonReader.cs", label="return t;", span="1185-1185"];
m5_437 [cluster="Newtonsoft.Json.JsonReader.GetContentToken()", file="JsonReader.cs", label="SetToken(JsonToken.None)", span="1176-1176"];
m5_439 [cluster="Newtonsoft.Json.JsonReader.GetContentToken()", file="JsonReader.cs", label="t = TokenType", span="1181-1181"];
m5_438 [cluster="Newtonsoft.Json.JsonReader.GetContentToken()", file="JsonReader.cs", label="return JsonToken.None;", span="1177-1177"];
m5_442 [cluster="Newtonsoft.Json.JsonReader.GetContentToken()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.GetContentToken()", span="1169-1169"];
m5_193 [cluster="Newtonsoft.Json.JsonReader.ReadDoubleString(string)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadDoubleString(string)", span="653-653"];
m5_194 [cluster="Newtonsoft.Json.JsonReader.ReadDoubleString(string)", file="JsonReader.cs", label="string.IsNullOrEmpty(s)", span="655-655"];
m5_198 [cluster="Newtonsoft.Json.JsonReader.ReadDoubleString(string)", file="JsonReader.cs", label="double.TryParse(s, NumberStyles.Float | NumberStyles.AllowThousands, Culture, out d)", span="662-662"];
m5_201 [cluster="Newtonsoft.Json.JsonReader.ReadDoubleString(string)", file="JsonReader.cs", label="SetToken(JsonToken.String, s, false)", span="669-669"];
m5_202 [cluster="Newtonsoft.Json.JsonReader.ReadDoubleString(string)", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Could not convert string to double: {0}.''.FormatWith(CultureInfo.InvariantCulture, s));", span="670-670"];
m5_195 [cluster="Newtonsoft.Json.JsonReader.ReadDoubleString(string)", file="JsonReader.cs", label="SetToken(JsonToken.Null, null, false)", span="657-657"];
m5_197 [cluster="Newtonsoft.Json.JsonReader.ReadDoubleString(string)", file="JsonReader.cs", label="double d", span="661-661"];
m5_196 [cluster="Newtonsoft.Json.JsonReader.ReadDoubleString(string)", file="JsonReader.cs", label="return null;", span="658-658"];
m5_199 [cluster="Newtonsoft.Json.JsonReader.ReadDoubleString(string)", file="JsonReader.cs", label="SetToken(JsonToken.Float, d, false)", span="664-664"];
m5_200 [cluster="Newtonsoft.Json.JsonReader.ReadDoubleString(string)", file="JsonReader.cs", label="return d;", span="665-665"];
m5_203 [cluster="Newtonsoft.Json.JsonReader.ReadDoubleString(string)", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadDoubleString(string)", span="653-653"];
m5_42 [cluster="System.Collections.Generic.List<T>.RemoveAt(int)", file="JsonReader.cs", label="Entry System.Collections.Generic.List<T>.RemoveAt(int)", span="0-0"];
m5_192 [cluster="System.Convert.ToDouble(object, System.IFormatProvider)", file="JsonReader.cs", label="Entry System.Convert.ToDouble(object, System.IFormatProvider)", span="0-0"];
m5_377 [cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", span="1096-1096"];
m5_396 [cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label=token, span="1098-1098"];
m5_403 [cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Not a valid close JsonToken: {0}''.FormatWith(CultureInfo.InvariantCulture, token));", span="1107-1107"];
m5_397 [cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="JsonToken.EndObject", span="1100-1100"];
m5_399 [cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="JsonToken.EndArray", span="1102-1102"];
m5_401 [cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="JsonToken.EndConstructor", span="1104-1104"];
m5_398 [cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="return JsonContainerType.Object;", span="1101-1101"];
m5_400 [cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="return JsonContainerType.Array;", span="1103-1103"];
m5_402 [cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="return JsonContainerType.Constructor;", span="1105-1105"];
m5_404 [cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", span="1096-1096"];
m5_28 [cluster="string.FormatWith(System.IFormatProvider, object)", file="JsonReader.cs", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
m5_265 [cluster="decimal.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out decimal)", file="JsonReader.cs", label="Entry decimal.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out decimal)", span="0-0"];
m5_30 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.Pop()", span="377-377"];
m5_31 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="JsonPosition oldPosition", span="379-379"];
m5_32 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="_stack != null && _stack.Count > 0", span="380-380"];
m5_33 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="oldPosition = _currentPosition", span="382-382"];
m5_36 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="oldPosition = _currentPosition", span="388-388"];
m5_34 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="_currentPosition = _stack[_stack.Count - 1]", span="383-383"];
m5_40 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="return oldPosition.Type;", span="397-397"];
m5_35 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="_stack.RemoveAt(_stack.Count - 1)", span="384-384"];
m5_37 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="_currentPosition = new JsonPosition()", span="389-389"];
m5_38 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="_maxDepth != null && Depth <= _maxDepth", span="392-392"];
m5_39 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="_hasExceededMaxDepth = false", span="394-394"];
m5_41 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.Pop()", span="377-377"];
m5_67 [cluster="System.Convert.ToInt32(object, System.IFormatProvider)", file="JsonReader.cs", label="Entry System.Convert.ToInt32(object, System.IFormatProvider)", span="0-0"];
m5_443 [file="JsonReader.cs", label="Newtonsoft.Json.JsonReader", span=""];
m6_512 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="893-893"];
m6_91 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="192-192"];
m6_836 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", span="1428-1428"];
m6_838 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonSerializerInternalWriter.cs", label="reader = new JsonTextReader(new StringReader(''1.1''))", span="1432-1432"];
m6_840 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonSerializerInternalWriter.cs", label="reader = new JsonTextReader(new StringReader(''-1.1''))", span="1435-1435"];
m6_842 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonSerializerInternalWriter.cs", label="reader = new JsonTextReader(new StringReader(''0.0''))", span="1438-1438"];
m6_844 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonSerializerInternalWriter.cs", label="reader = new JsonTextReader(new StringReader(''-0.0''))", span="1441-1441"];
m6_846 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonSerializerInternalWriter.cs", label="reader = new JsonTextReader(new StringReader(''9999999999999999999999999999999999999999999999999999999999999999999999999999asdasdasd''))", span="1444-1444"];
m6_848 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonSerializerInternalWriter.cs", label="reader = new JsonTextReader(new StringReader(''9999999999999999999999999999999999999999999999999999999999999999999999999999asdasdasd''))", span="1447-1447"];
m6_851 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonSerializerInternalWriter.cs", label="reader = new JsonTextReader(new StringReader(''1E-06''))", span="1451-1451"];
m6_853 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonSerializerInternalWriter.cs", label="reader = new JsonTextReader(new StringReader(''''))", span="1454-1454"];
m6_855 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonSerializerInternalWriter.cs", label="reader = new JsonTextReader(new StringReader(''-''))", span="1457-1457"];
m6_837 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = null", span="1430-1430"];
m6_839 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(1.1m, reader.ReadAsDecimal())", span="1433-1433"];
m6_841 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(-1.1m, reader.ReadAsDecimal())", span="1436-1436"];
m6_843 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(0.0m, reader.ReadAsDecimal())", span="1439-1439"];
m6_845 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(0, reader.ReadAsDecimal())", span="1442-1442"];
m6_847 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonSerializerInternalWriter.cs", label="ExceptionAssert.Throws<JsonReaderException>(''Input string '9999999999999999999999999999999999999999999999999999999999999999999999999999a' is not a valid decimal. Path '', line 1, position 77.'', () => reader.ReadAsDecimal())", span="1445-1445"];
m6_849 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonSerializerInternalWriter.cs", label="reader.FloatParseHandling = Json.FloatParseHandling.Decimal", span="1448-1448"];
m6_850 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonSerializerInternalWriter.cs", label="ExceptionAssert.Throws<JsonReaderException>(''Input string '9999999999999999999999999999999999999999999999999999999999999999999999999999a' is not a valid decimal. Path '', line 1, position 77.'', () => reader.Read())", span="1449-1449"];
m6_852 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(0.000001m, reader.ReadAsDecimal())", span="1452-1452"];
m6_854 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(null, reader.ReadAsDecimal())", span="1455-1455"];
m6_856 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonSerializerInternalWriter.cs", label="ExceptionAssert.Throws<JsonReaderException>(''Input string '-' is not a valid decimal. Path '', line 1, position 1.'', () => reader.ReadAsDecimal())", span="1458-1458"];
m6_857 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", span="1428-1428"];
m6_501 [cluster="System.IO.StringWriter.ToString()", file="JsonSerializerInternalWriter.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m6_1608 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", span="2590-2590"];
m6_1610 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2593-2593"];
m6_1609 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="JsonSerializerInternalWriter.cs", label="string json = ''new Date,()''", span="2592-2592"];
m6_1611 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="JsonSerializerInternalWriter.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unexpected character while parsing constructor: ,. Path '', line 1, position 8.'',\r\n                () => { Assert.IsTrue(reader.Read()); })", span="2595-2597"];
m6_1612 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", span="2590-2590"];
m6_1421 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", span="2274-2274"];
m6_1422 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''/sdf''))", span="2276-2276"];
m6_1423 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="JsonSerializerInternalWriter.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Error parsing comment. Expected: *, got s. Path '', line 1, position 1.'',\r\n                () => { reader.Read(); })", span="2278-2280"];
m6_1424 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", span="2274-2274"];
m6_172 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializerInternalWriter.cs", label="writer.WriteValue(reference)", span="361-361"];
m6_174 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", span="350-350"];
m6_175 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetReference(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetReference(Newtonsoft.Json.JsonWriter, object)", span="365-365"];
m6_177 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="929-929"];
m6_179 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetReference(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializerInternalWriter.cs", label="return reference;", span="371-371"];
m6_181 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetReference(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializerInternalWriter.cs", label="throw JsonSerializationException.Create(null, writer.ContainerPath, ''Error writing object reference for '{0}'.''.FormatWith(CultureInfo.InvariantCulture, value.GetType()), ex);", span="375-375"];
m6_183 [cluster="Newtonsoft.Json.Serialization.IReferenceResolver.GetReference(object, object)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.IReferenceResolver.GetReference(object, object)", span="46-46"];
m6_185 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="JsonSerializerInternalWriter.cs", label="type = value as Type", span="398-398"];
m6_188 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="JsonSerializerInternalWriter.cs", label="return true;", span="402-402"];
m6_173 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializerInternalWriter.cs", label="writer.WriteEndObject()", span="362-362"];
m6_176 [cluster="string.FormatWith(System.IFormatProvider, object, object)", file="JsonSerializerInternalWriter.cs", label="Entry string.FormatWith(System.IFormatProvider, object, object)", span="52-52"];
m6_178 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetReference(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializerInternalWriter.cs", label="string reference = Serializer.GetReferenceResolver().GetReference(this, value)", span="369-369"];
m6_180 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetReference(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializerInternalWriter.cs", label=Exception, span="373-373"];
m6_182 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetReference(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetReference(Newtonsoft.Json.JsonWriter, object)", span="365-365"];
m6_184 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", span="379-379"];
m6_186 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="JsonSerializerInternalWriter.cs", label="type != null", span="399-399"];
m6_187 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="JsonSerializerInternalWriter.cs", label="s = type.AssemblyQualifiedName", span="401-401"];
m6_189 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="JsonSerializerInternalWriter.cs", label="s = null", span="405-405"];
m6_190 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="JsonSerializerInternalWriter.cs", label="return false;", span="406-406"];
m6_191 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", span="379-379"];
m6_21 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", span="52-52"];
m6_167 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JsonSerializerInternalWriter.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Cannot read NaN as a decimal.'',\r\n                () => reader.Read())", span="295-297"];
m6_169 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Entry lambda expression", span="297-297"];
m6_170 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="reader.Read()", span="297-297"];
m6_171 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Exit lambda expression", span="297-297"];
m6_168 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", span="285-285"];
m6_479 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalWriter.cs", label="return sw.ToString();", span="1137-1137"];
m6_490 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalWriter.cs", label="escape = true", span="1167-1167"];
m6_491 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalWriter.cs", label="return Convert.ToString(name, CultureInfo.InvariantCulture);", span="1168-1168"];
m6_494 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalWriter.cs", label="return propertyName;", span="1175-1175"];
m6_497 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", span="1120-1120"];
m6_489 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalWriter.cs", label="return f.ToString(''R'', CultureInfo.InvariantCulture);", span="1163-1163"];
m6_495 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalWriter.cs", label="escape = true", span="1179-1179"];
m6_498 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.EnsureDateTime(System.DateTime, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.EnsureDateTime(System.DateTime, Newtonsoft.Json.DateTimeZoneHandling)", span="92-92"];
m6_492 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalWriter.cs", label="TryConvertToString(name, name.GetType(), out propertyName)", span="1172-1172"];
m6_493 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalWriter.cs", label="escape = true", span="1174-1174"];
m6_481 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalWriter.cs", label="PrimitiveTypeCode.DoubleNullable", span="1150-1150"];
m6_488 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalWriter.cs", label="escape = false", span="1162-1162"];
m6_496 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalWriter.cs", label="return name.ToString();", span="1180-1180"];
m6_480 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalWriter.cs", label="PrimitiveTypeCode.Double", span="1149-1149"];
m6_482 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalWriter.cs", label="double d = (double)name", span="1152-1152"];
m6_485 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalWriter.cs", label="PrimitiveTypeCode.Single", span="1157-1157"];
m6_483 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalWriter.cs", label="escape = false", span="1154-1154"];
m6_486 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalWriter.cs", label="PrimitiveTypeCode.SingleNullable", span="1158-1158"];
m6_484 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalWriter.cs", label="return d.ToString(''R'', CultureInfo.InvariantCulture);", span="1155-1155"];
m6_487 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalWriter.cs", label="float f = (float)name", span="1160-1160"];
m6_499 [cluster="System.IO.StringWriter.StringWriter(System.IFormatProvider)", file="JsonSerializerInternalWriter.cs", label="Entry System.IO.StringWriter.StringWriter(System.IFormatProvider)", span="0-0"];
m6_245 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="JsonSerializerInternalWriter.cs", label="string input = @''{\r\n''''matches'''' : [\r\n{''''t'''':''''C'''', ''''n'''':''''Citigroup Inc.'''', ''''e'''':''''NYSE'''', ''''id'''':''''662713''''}\r\n,{''''t'''':''''CHL'''', ''''n'''':''''China Mobile Ltd. (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''660998''''}\r\n,{''''t'''':''''PTR'''', ''''n'''':''''PetroChina Company Limited (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''664536''''}\r\n,{''''t'''':''''RIO'''', ''''n'''':''''Companhia Vale do Rio Doce (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''671472''''}\r\n,{''''t'''':''''RIOPR'''', ''''n'''':''''Companhia Vale do Rio Doce (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''3512643''''}\r\n,{''''t'''':''''CSCO'''', ''''n'''':''''Cisco Systems, Inc.'''', ''''e'''':''''NASDAQ'''', ''''id'''':''''99624''''}\r\n,{''''t'''':''''CVX'''', ''''n'''':''''Chevron Corporation'''', ''''e'''':''''NYSE'''', ''''id'''':''''667226''''}\r\n,{''''t'''':''''TM'''', ''''n'''':''''Toyota Motor Corporation (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''655880''''}\r\n,{''''t'''':''''JPM'''', ''''n'''':''''JPMorgan Chase \\x26 Co.'''', ''''e'''':''''NYSE'''', ''''id'''':''''665639''''}\r\n,{''''t'''':''''COP'''', ''''n'''':''''ConocoPhillips'''', ''''e'''':''''NYSE'''', ''''id'''':''''1691168''''}\r\n,{''''t'''':''''LFC'''', ''''n'''':''''China Life Insurance Company Ltd. (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''688679''''}\r\n,{''''t'''':''''NOK'''', ''''n'''':''''Nokia Corporation (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''657729''''}\r\n,{''''t'''':''''KO'''', ''''n'''':''''The Coca-Cola Company'''', ''''e'''':''''NYSE'''', ''''id'''':''''6550''''}\r\n,{''''t'''':''''VZ'''', ''''n'''':''''Verizon Communications Inc.'''', ''''e'''':''''NYSE'''', ''''id'''':''''664887''''}\r\n,{''''t'''':''''AMX'''', ''''n'''':''''America Movil S.A.B de C.V. (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''665834''''}],\r\n''''all'''' : false\r\n}\r\n''", span="475-494"];
m6_1248 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", span="2018-2018"];
m6_1250 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2022-2022"];
m6_1251 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2024-2024"];
m6_1253 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2027-2027"];
m6_1259 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2035-2035"];
m6_1249 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonSerializerInternalWriter.cs", label="string json = ''{\''Offset\'':\''\\/Date(946663200000+0600)\\/\''}''", span="2020-2020"];
m6_1252 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2025-2025"];
m6_1254 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2028-2028"];
m6_1255 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonSerializerInternalWriter.cs", label="reader.ReadAsDateTimeOffset()", span="2030-2030"];
m6_1256 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2031-2031"];
m6_1257 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2032-2032"];
m6_1258 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), reader.Value)", span="2033-2033"];
m6_1260 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2036-2036"];
m6_1261 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", span="2018-2018"];
m6_663 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", span="1149-1149"];
m6_664 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="JsonSerializerInternalWriter.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''{aww''))", span="1151-1151"];
m6_665 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="1152-1152"];
m6_666 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="JsonSerializerInternalWriter.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unexpected end while parsing unquoted property name. Path '', line 1, position 4.'',\r\n                () => { reader.Read(); })", span="1154-1156"];
m6_667 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", span="1149-1149"];
m6_593 [cluster="StringReader.cstr", file="JsonSerializerInternalWriter.cs", label="Entry StringReader.cstr", span=""];
m6_1593 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", span="2567-2567"];
m6_1594 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''true/''))", span="2569-2569"];
m6_1595 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", file="JsonSerializerInternalWriter.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Error parsing boolean value. Path '', line 1, position 4.'',\r\n                () => { reader.Read(); })", span="2571-2573"];
m6_1596 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", span="2567-2567"];
m6_1263 [cluster="System.DateTime.DateTime(int, int, int)", file="JsonSerializerInternalWriter.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m6_1206 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", span="1949-1949"];
m6_1207 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[1''))", span="1951-1951"];
m6_1208 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="JsonSerializerInternalWriter.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unexpected end when reading bytes. Path '[0]', line 1, position 2.'',\r\n                () => { reader.ReadAsBytes(); })", span="1953-1955"];
m6_1209 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", span="1949-1949"];
m6_54 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonSerializerInternalWriter.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Error reading integer. Unexpected token: Undefined. Path '[2]', line 4, position 3.'',\r\n                () => jsonTextReader.ReadAsInt32())", span="137-139"];
m6_1585 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", span="2554-2554"];
m6_1587 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2557-2557"];
m6_1588 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2559-2559"];
m6_1590 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2562-2562"];
m6_1586 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonSerializerInternalWriter.cs", label="string json = ''{}''", span="2556-2556"];
m6_1589 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2560-2560"];
m6_1591 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2563-2563"];
m6_1592 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", span="2554-2554"];
m6_1192 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", span="1927-1927"];
m6_1193 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''new Date()''))", span="1929-1929"];
m6_1194 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="JsonSerializerInternalWriter.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Error reading date. Unexpected token: StartConstructor. Path '', line 1, position 9.'',\r\n                () => { reader.ReadAsDateTimeOffset(); })", span="1931-1933"];
m6_1195 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", span="1927-1927"];
m6_37 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JsonSerializerInternalWriter.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''JSON integer 333333333333333333333333333333333333333 is too large or small for an Int32. Path 'ChildId', line 2, position 53.'',\r\n                () => jsonTextReader.ReadAsInt32())", span="104-106"];
m6_1213 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", span="1959-1959"];
m6_1214 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[1.0]''))", span="1961-1961"];
m6_1215 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="JsonSerializerInternalWriter.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unexpected token when reading bytes: Float. Path '[0]', line 1, position 4.'',\r\n                () => { reader.ReadAsBytes(); })", span="1963-1965"];
m6_1216 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", span="1959-1959"];
m6_362 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="_serializeStack.RemoveAt(_serializeStack.Count - 1)", span="747-747"];
m6_365 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ArrayEmpty<T>()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.ArrayEmpty<T>()", span="362-362"];
m6_364 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="732-732"];
m6_367 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonSerializerInternalWriter.cs", label="int dimension = indices.Length", span="754-754"];
m6_371 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonSerializerInternalWriter.cs", label="newIndices[i] = indices[i]", span="758-758"];
m6_375 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonSerializerInternalWriter.cs", label="i <= values.GetUpperBound(dimension)", span="763-763"];
m6_381 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonSerializerInternalWriter.cs", label="ShouldWriteReference(value, null, valueContract, contract, member)", span="776-776"];
m6_385 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonSerializerInternalWriter.cs", label=Exception, span="788-788"];
m6_389 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonSerializerInternalWriter.cs", label="SerializeMultidimensionalArray(writer, values, contract, member, initialDepth + 1, newIndices)", span="802-802"];
m6_394 [cluster="System.Array.GetUpperBound(int)", file="JsonSerializerInternalWriter.cs", label="Entry System.Array.GetUpperBound(int)", span="0-0"];
m6_399 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="bool writeMetadataObject = isReference || includeTypeDetails", span="816-816"];
m6_404 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label=includeTypeDetails, span="826-826"];
m6_409 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="return writeMetadataObject;", span="838-838"];
m6_414 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", file="JsonSerializerInternalWriter.cs", label="HasFlag(Serializer._defaultValueHandling, DefaultValueHandling.Ignore) &&\r\n                (memberValue == null || MiscellaneousUtils.ValueEquals(memberValue, ReflectionUtils.GetDefaultValue(memberValue.GetType())))", span="983-984"];
m6_418 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", span="1072-1072"];
m6_422 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="HasFlag(resolvedTypeNameHandling, TypeNameHandling.Auto)", span="1006-1006"];
m6_426 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="containerContract != null", span="1015-1015"];
m6_430 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="JsonContract rootContract = Serializer._contractResolver.ResolveContract(_rootType)", span="1024-1024"];
m6_434 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="992-992"];
m6_438 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="_serializeStack.Add(underlyingDictionary)", span="1042-1042"];
m6_442 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="contract.KeyContract == null", span="1051-1051"];
m6_446 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="e.MoveNext()", span="1062-1062"];
m6_450 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="propertyName = (contract.DictionaryKeyResolver != null)\r\n                        ? contract.DictionaryKeyResolver(propertyName)\r\n                        : propertyName", span="1069-1071"];
m6_454 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="writer.WritePropertyName(propertyName, escape)", span="1080-1080"];
m6_366 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", span="752-752"];
m6_368 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonSerializerInternalWriter.cs", label="int[] newIndices = new int[dimension + 1]", span="755-755"];
m6_369 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonSerializerInternalWriter.cs", label="int i = 0", span="756-756"];
m6_370 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonSerializerInternalWriter.cs", label="i < dimension", span="756-756"];
m6_372 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonSerializerInternalWriter.cs", label="i++", span="756-756"];
m6_373 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonSerializerInternalWriter.cs", label="writer.WriteStartArray()", span="761-761"];
m6_374 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonSerializerInternalWriter.cs", label="int i = values.GetLowerBound(dimension)", span="763-763"];
m6_376 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonSerializerInternalWriter.cs", label="newIndices[dimension] = i", span="765-765"];
m6_377 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonSerializerInternalWriter.cs", label="bool isTopLevel = (newIndices.Length == values.Rank)", span="766-766"];
m6_378 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonSerializerInternalWriter.cs", label=isTopLevel, span="768-768"];
m6_379 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonSerializerInternalWriter.cs", label="object value = values.GetValue(newIndices)", span="770-770"];
m6_380 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonSerializerInternalWriter.cs", label="JsonContract valueContract = contract.FinalItemContract ?? GetContractSafe(value)", span="774-774"];
m6_382 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonSerializerInternalWriter.cs", label="WriteReference(writer, value)", span="778-778"];
m6_383 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonSerializerInternalWriter.cs", label="CheckForCircularReference(writer, value, null, valueContract, contract, member)", span="782-782"];
m6_384 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonSerializerInternalWriter.cs", label="SerializeValue(writer, value, valueContract, null, contract, member)", span="784-784"];
m6_386 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonSerializerInternalWriter.cs", label="IsErrorHandled(values, contract, i, null, writer.ContainerPath, ex)", span="790-790"];
m6_387 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonSerializerInternalWriter.cs", label="HandleError(writer, initialDepth + 1)", span="792-792"];
m6_388 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonSerializerInternalWriter.cs", label="throw;", span="796-796"];
m6_390 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonSerializerInternalWriter.cs", label="i++", span="763-763"];
m6_391 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonSerializerInternalWriter.cs", label="writer.WriteEndArray()", span="806-806"];
m6_392 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", span="752-752"];
m6_393 [cluster="System.Array.GetLowerBound(int)", file="JsonSerializerInternalWriter.cs", label="Entry System.Array.GetLowerBound(int)", span="0-0"];
m6_395 [cluster="System.Array.GetValue(params int[])", file="JsonSerializerInternalWriter.cs", label="Entry System.Array.GetValue(params int[])", span="0-0"];
m6_396 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="bool isReference = ResolveIsReference(contract, member, containerContract, containerProperty) ?? HasFlag(Serializer._preserveReferencesHandling, PreserveReferencesHandling.Arrays)", span="811-811"];
m6_397 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="isReference = (isReference && (member == null || member.Writable || HasCreatorParameter(containerContract, member)))", span="813-813"];
m6_398 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="bool includeTypeDetails = ShouldWriteType(TypeNameHandling.Arrays, contract, member, containerContract, containerProperty)", span="815-815"];
m6_400 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label=writeMetadataObject, span="818-818"];
m6_401 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="writer.WriteStartObject()", span="820-820"];
m6_402 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label=isReference, span="822-822"];
m6_403 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="WriteReferenceIdProperty(writer, contract.UnderlyingType, values)", span="824-824"];
m6_405 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="WriteTypeProperty(writer, values.GetType())", span="828-828"];
m6_406 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="writer.WritePropertyName(JsonTypeReflector.ArrayValuesPropertyName, false)", span="830-830"];
m6_407 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="contract.ItemContract == null", span="833-833"];
m6_408 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="contract.ItemContract = Serializer._contractResolver.ResolveContract(contract.CollectionItemType ?? typeof(object))", span="835-835"];
m6_410 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="809-809"];
m6_411 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", span="976-976"];
m6_412 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", file="JsonSerializerInternalWriter.cs", label="Serializer._nullValueHandling == NullValueHandling.Ignore && memberValue == null", span="978-978"];
m6_413 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", file="JsonSerializerInternalWriter.cs", label="return false;", span="980-980"];
m6_415 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", file="JsonSerializerInternalWriter.cs", label="return false;", span="986-986"];
m6_416 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", file="JsonSerializerInternalWriter.cs", label="return true;", span="989-989"];
m6_417 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", span="976-976"];
m6_419 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="TypeNameHandling resolvedTypeNameHandling =\r\n                member?.TypeNameHandling\r\n                ?? containerProperty?.ItemTypeNameHandling\r\n                ?? containerContract?.ItemTypeNameHandling\r\n                ?? Serializer._typeNameHandling", span="994-998"];
m6_420 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="HasFlag(resolvedTypeNameHandling, typeNameHandlingFlag)", span="1000-1000"];
m6_421 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="return true;", span="1002-1002"];
m6_423 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="member != null", span="1008-1008"];
m6_424 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="contract.NonNullableUnderlyingType != member.PropertyContract.CreatedType", span="1010-1010"];
m6_425 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="return true;", span="1012-1012"];
m6_427 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="containerContract.ItemContract == null || contract.NonNullableUnderlyingType != containerContract.ItemContract.CreatedType", span="1017-1017"];
m6_428 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="return true;", span="1019-1019"];
m6_429 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="_rootType != null && _serializeStack.Count == _rootLevel", span="1022-1022"];
m6_431 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="contract.NonNullableUnderlyingType != rootContract.CreatedType", span="1026-1026"];
m6_432 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="return true;", span="1028-1028"];
m6_433 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="return false;", span="1033-1033"];
m6_435 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="IWrappedDictionary wrappedDictionary = values as IWrappedDictionary", span="1038-1038"];
m6_436 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="object underlyingDictionary = wrappedDictionary != null ? wrappedDictionary.UnderlyingDictionary : values", span="1039-1039"];
m6_437 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="OnSerializing(writer, contract, underlyingDictionary)", span="1041-1041"];
m6_439 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="WriteObjectStart(writer, underlyingDictionary, contract, member, collectionContract, containerProperty)", span="1044-1044"];
m6_440 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="contract.ItemContract == null", span="1046-1046"];
m6_441 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="contract.ItemContract = Serializer._contractResolver.ResolveContract(contract.DictionaryValueType ?? typeof(object))", span="1048-1048"];
m6_443 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="contract.KeyContract = Serializer._contractResolver.ResolveContract(contract.DictionaryKeyType ?? typeof(object))", span="1053-1053"];
m6_444 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="int initialDepth = writer.Top", span="1056-1056"];
m6_445 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="IDictionaryEnumerator e = values.GetEnumerator()", span="1059-1059"];
m6_447 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="DictionaryEntry entry = e.Entry", span="1064-1064"];
m6_448 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="bool escape", span="1066-1066"];
m6_449 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="string propertyName = GetPropertyName(writer, entry.Key, contract.KeyContract, out escape)", span="1067-1067"];
m6_451 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="object value = entry.Value", span="1075-1075"];
m6_452 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="JsonContract valueContract = contract.FinalItemContract ?? GetContractSafe(value)", span="1076-1076"];
m6_453 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="ShouldWriteReference(value, null, valueContract, contract, member)", span="1078-1078"];
m6_455 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="WriteReference(writer, value)", span="1081-1081"];
m6_456 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="!CheckForCircularReference(writer, value, null, valueContract, contract, member)", span="1085-1085"];
m6_457 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="writer.WritePropertyName(propertyName, escape)", span="1090-1090"];
m6_363 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="OnSerialized(writer, contract, values)", span="749-749"];
m6_458 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="SerializeValue(writer, value, valueContract, null, contract, member)", span="1092-1092"];
m6_595 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", span="1033-1033"];
m6_597 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="1037-1037"];
m6_603 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonSerializerInternalWriter.cs", label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="1045-1045"];
m6_596 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonSerializerInternalWriter.cs", label="BigInteger i = new BigInteger(long.MinValue)", span="1035-1035"];
m6_598 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonSerializerInternalWriter.cs", label="reader.Read()", span="1038-1038"];
m6_599 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(typeof(long), reader.ValueType)", span="1039-1039"];
m6_602 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonSerializerInternalWriter.cs", label="BigInteger total = i + -j", span="1043-1043"];
m6_604 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonSerializerInternalWriter.cs", label="reader.Read()", span="1046-1046"];
m6_605 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(typeof(BigInteger), reader.ValueType)", span="1048-1048"];
m6_600 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonSerializerInternalWriter.cs", label="int j = 1", span="1041-1041"];
m6_601 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonSerializerInternalWriter.cs", label="j < 1000", span="1041-1041"];
m6_606 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonSerializerInternalWriter.cs", label="j++", span="1041-1041"];
m6_607 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", span="1033-1033"];
m6_164 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JsonSerializerInternalWriter.cs", label="reader.FloatParseHandling = Json.FloatParseHandling.Decimal", span="290-290"];
m6_120 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonSerializerInternalWriter.cs", label="string json = @''{ ''''ItemName'''': ''''value'''', ''''u'''':netanelsalinger,''''r'''':9 }''", span="229-229"];
m6_902 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", span="1502-1502"];
m6_932 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerInternalWriter.cs", label="object jsonObject = serializer.Deserialize(new JsonTextReader(new StringReader(json)))", span="1548-1548"];
m6_930 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerInternalWriter.cs", label="string json = sb.ToString()", span="1544-1544"];
m6_931 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerInternalWriter.cs", label="JsonSerializer serializer = new JsonSerializer()", span="1546-1546"];
m6_933 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerInternalWriter.cs", label="sb = new StringBuilder()", span="1550-1550"];
m6_936 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerInternalWriter.cs", label="serializer.Serialize(jsonWriter, jsonObject)", span="1558-1558"];
m6_937 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(json, sb.ToString())", span="1561-1561"];
m6_903 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerInternalWriter.cs", label="StringBuilder sb = new StringBuilder()", span="1504-1504"];
m6_929 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerInternalWriter.cs", label="jsonWriter.WriteEndArray()", span="1541-1541"];
m6_934 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerInternalWriter.cs", label="sw = new StringWriter(sb)", span="1551-1551"];
m6_935 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerInternalWriter.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)\r\n            {\r\n                Formatting = Formatting.Indented\r\n            }", span="1553-1556"];
m6_904 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerInternalWriter.cs", label="StringWriter sw = new StringWriter(sb)", span="1505-1505"];
m6_905 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerInternalWriter.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)\r\n            {\r\n                Formatting = Formatting.Indented\r\n            }", span="1507-1510"];
m6_928 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerInternalWriter.cs", label="jsonWriter.WriteNull()", span="1540-1540"];
m6_906 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerInternalWriter.cs", label="jsonWriter.WriteStartArray()", span="1512-1512"];
m6_907 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerInternalWriter.cs", label="jsonWriter.WriteValue(true)", span="1513-1513"];
m6_908 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerInternalWriter.cs", label="jsonWriter.WriteStartObject()", span="1515-1515"];
m6_909 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerInternalWriter.cs", label="jsonWriter.WritePropertyName(''integer'')", span="1516-1516"];
m6_910 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerInternalWriter.cs", label="jsonWriter.WriteValue(99)", span="1517-1517"];
m6_911 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerInternalWriter.cs", label="jsonWriter.WritePropertyName(''string'')", span="1518-1518"];
m6_912 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerInternalWriter.cs", label="jsonWriter.WriteValue(''how now brown cow?'')", span="1519-1519"];
m6_913 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerInternalWriter.cs", label="jsonWriter.WritePropertyName(''array'')", span="1520-1520"];
m6_914 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerInternalWriter.cs", label="jsonWriter.WriteStartArray()", span="1522-1522"];
m6_917 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerInternalWriter.cs", label="jsonWriter.WriteValue(i)", span="1525-1525"];
m6_919 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerInternalWriter.cs", label="jsonWriter.WriteStartObject()", span="1528-1528"];
m6_920 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerInternalWriter.cs", label="jsonWriter.WritePropertyName(''decimal'')", span="1529-1529"];
m6_921 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerInternalWriter.cs", label="jsonWriter.WriteValue(990.00990099m)", span="1530-1530"];
m6_922 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerInternalWriter.cs", label="jsonWriter.WriteEndObject()", span="1531-1531"];
m6_923 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerInternalWriter.cs", label="jsonWriter.WriteValue(5)", span="1533-1533"];
m6_924 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerInternalWriter.cs", label="jsonWriter.WriteEndArray()", span="1534-1534"];
m6_925 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerInternalWriter.cs", label="jsonWriter.WriteEndObject()", span="1536-1536"];
m6_926 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerInternalWriter.cs", label="jsonWriter.WriteValue(''This is a string.'')", span="1538-1538"];
m6_927 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerInternalWriter.cs", label="jsonWriter.WriteNull()", span="1539-1539"];
m6_915 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerInternalWriter.cs", label="int i = 0", span="1523-1523"];
m6_916 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerInternalWriter.cs", label="i < 5", span="1523-1523"];
m6_918 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerInternalWriter.cs", label="i++", span="1523-1523"];
m6_938 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", span="1502-1502"];
m6_1185 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", span="1916-1916"];
m6_1186 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''new Date()''))", span="1918-1918"];
m6_1187 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="JsonSerializerInternalWriter.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Error reading bytes. Unexpected token: StartConstructor. Path '', line 1, position 9.'',\r\n                () => { reader.ReadAsBytes(); })", span="1920-1922"];
m6_1188 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", span="1916-1916"];
m6_624 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", span="1096-1096"];
m6_625 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="JsonSerializerInternalWriter.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@'''h\u123''))", span="1098-1098"];
m6_626 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="JsonSerializerInternalWriter.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unexpected end while parsing unicode character. Path '', line 1, position 4.'',\r\n                () => { reader.Read(); })", span="1100-1102"];
m6_627 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", span="1096-1096"];
m6_1352 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="JsonSerializerInternalWriter.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m6_30 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetInternalSerializer()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetInternalSerializer()", span="105-105"];
m6_32 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetContractSafe(object)", file="JsonSerializerInternalWriter.cs", label="value == null", span="117-117"];
m6_33 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetContractSafe(object)", file="JsonSerializerInternalWriter.cs", label="return null;", span="119-119"];
m6_35 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetContractSafe(object)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetContractSafe(object)", span="115-115"];
m6_38 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="125-125"];
m6_31 [cluster="Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalWriter)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalWriter)", span="247-247"];
m6_34 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetContractSafe(object)", file="JsonSerializerInternalWriter.cs", label="return Serializer._contractResolver.ResolveContract(value.GetType());", span="122-122"];
m6_36 [cluster="object.GetType()", file="JsonSerializerInternalWriter.cs", label="Entry object.GetType()", span="0-0"];
m6_39 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="contract.TypeCode == PrimitiveTypeCode.Bytes", span="127-127"];
m6_40 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="bool includeTypeDetails = ShouldWriteType(TypeNameHandling.Objects, contract, member, containerContract, containerProperty)", span="130-130"];
m6_41 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label=includeTypeDetails, span="131-131"];
m6_1393 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", span="2234-2234"];
m6_1394 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''nul''))", span="2236-2236"];
m6_1395 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="JsonSerializerInternalWriter.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Error parsing null value. Path '', line 0, position 0.'',\r\n                () => { reader.Read(); })", span="2238-2240"];
m6_1396 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", span="2234-2234"];
m6_1497 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", span="2420-2420"];
m6_1499 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2423-2423"];
m6_1500 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2425-2425"];
m6_1502 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2428-2428"];
m6_1504 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2431-2431"];
m6_1506 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2434-2434"];
m6_1508 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2437-2437"];
m6_1510 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2440-2440"];
m6_1512 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2443-2443"];
m6_1498 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonSerializerInternalWriter.cs", label="string json = ''[,,, \n\r\n \0   \r  , ,    ]''", span="2422-2422"];
m6_1501 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2426-2426"];
m6_1503 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2429-2429"];
m6_1505 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2432-2432"];
m6_1507 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2435-2435"];
m6_1509 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2438-2438"];
m6_1511 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2441-2441"];
m6_1513 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2444-2444"];
m6_1514 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", span="2420-2420"];
m6_1561 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", span="2518-2518"];
m6_1563 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2521-2521"];
m6_1562 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="JsonSerializerInternalWriter.cs", label="string json = ''new Date !''", span="2520-2520"];
m6_1564 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="JsonSerializerInternalWriter.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unexpected character while parsing constructor: !. Path '', line 1, position 9.'',\r\n                () => { reader.Read(); })", span="2523-2525"];
m6_1565 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", span="2518-2518"];
m6_205 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerialized(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonSerializerInternalWriter.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="432-432"];
m6_132 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Entry lambda expression", span="246-246"];
m6_133 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="reader.Read()", span="246-246"];
m6_136 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSerializerInternalWriter.cs", label="string json = ''[1.0,1,9.9,1E-06]''", span="252-252"];
m6_137 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="254-254"];
m6_138 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSerializerInternalWriter.cs", label="reader.FloatParseHandling = Json.FloatParseHandling.Decimal", span="255-255"];
m6_139 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="257-257"];
m6_140 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="258-258"];
m6_141 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="260-260"];
m6_142 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(1.0m, reader.Value)", span="261-261"];
m6_145 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="265-265"];
m6_146 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(1L, reader.Value)", span="266-266"];
m6_147 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(typeof(long), reader.ValueType)", span="267-267"];
m6_150 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(9.9m, reader.Value)", span="271-271"];
m6_153 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="275-275"];
m6_157 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="280-280"];
m6_134 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Exit lambda expression", span="246-246"];
m6_135 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", span="250-250"];
m6_148 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="268-268"];
m6_143 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="262-262"];
m6_144 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="263-263"];
m6_159 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", span="250-250"];
m6_149 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="270-270"];
m6_151 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="272-272"];
m6_155 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="277-277"];
m6_152 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="273-273"];
m6_154 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(Convert.ToDecimal(1E-06), reader.Value)", span="276-276"];
m6_156 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="278-278"];
m6_158 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="281-281"];
m6_160 [cluster="System.Convert.ToDecimal(double)", file="JsonSerializerInternalWriter.cs", label="Entry System.Convert.ToDecimal(double)", span="0-0"];
m6_297 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)", file="JsonSerializerInternalWriter.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="600-600"];
m6_299 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)", file="JsonSerializerInternalWriter.cs", label="writer.WritePropertyName(JsonTypeReflector.IdPropertyName, false)", span="605-605"];
m6_298 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)", file="JsonSerializerInternalWriter.cs", label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(null, writer.Path, ''Writing object reference Id '{0}' for {1}.''.FormatWith(CultureInfo.InvariantCulture, reference, type)), null)", span="602-602"];
m6_300 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)", file="JsonSerializerInternalWriter.cs", label="writer.WriteValue(reference)", span="606-606"];
m6_301 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)", span="596-596"];
m6_465 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="OnSerialized(writer, contract, underlyingDictionary)", span="1117-1117"];
m6_466 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="1036-1036"];
m6_467 [cluster="System.Collections.IDictionary.GetEnumerator()", file="JsonSerializerInternalWriter.cs", label="Entry System.Collections.IDictionary.GetEnumerator()", span="0-0"];
m6_468 [cluster="System.Collections.IEnumerator.MoveNext()", file="JsonSerializerInternalWriter.cs", label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0"];
m6_1569 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", span="2529-2529"];
m6_1571 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2532-2532"];
m6_1572 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2534-2534"];
m6_1573 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2535-2535"];
m6_1574 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2536-2536"];
m6_1570 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonSerializerInternalWriter.cs", label="string json = ''{hi:1, ''", span="2531-2531"];
m6_1575 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonSerializerInternalWriter.cs", label="Assert.IsFalse(reader.Read())", span="2537-2537"];
m6_1576 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", span="2529-2529"];
m6_270 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="JsonSerializerInternalWriter.cs", label="throw JsonSerializationException.Create(null, writer.ContainerPath, ''Cannot write a null value for property '{0}'. Property requires a value.''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName), null);", span="552-552"];
m6_249 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", span="473-473"];
m6_1811 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", span="2916-2916"];
m6_1812 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JsonSerializerInternalWriter.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''{}}''))", span="2918-2918"];
m6_1813 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2919-2919"];
m6_1814 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2920-2920"];
m6_1815 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JsonSerializerInternalWriter.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Additional text encountered after finished reading JSON content: }. Path '', line 1, position 2.'',\r\n                () => { reader.Read(); })", span="2922-2924"];
m6_1816 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", span="2916-2916"];
m6_242 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="_serializeStack.RemoveAt(_serializeStack.Count - 1)", span="515-515"];
m6_2006 [cluster="System.DateTimeOffset.DateTimeOffset(long, System.TimeSpan)", file="JsonSerializerInternalWriter.cs", label="Entry System.DateTimeOffset.DateTimeOffset(long, System.TimeSpan)", span="0-0"];
m6_1177 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", span="365-365"];
m6_2045 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Entry lambda expression", span="3238-3238"];
m6_463 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="writer.WriteEndObject()", span="1113-1113"];
m6_560 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="982-982"];
m6_576 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="1005-1005"];
m6_470 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalWriter.cs", label="contract.ContractType == JsonContractType.Primitive", span="1124-1124"];
m6_629 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="reader.Read()", span="1102-1102"];
m6_636 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="reader.Read()", span="1112-1112"];
m6_669 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="reader.Read()", span="1156-1156"];
m6_1818 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="reader.Read()", span="2924-2924"];
m6_1615 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2597-2597"];
m6_1874 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="3009-3009"];
m6_1906 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="3027-3027"];
m6_1909 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="3047-3047"];
m6_44 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="writer.WritePropertyName(JsonTypeReflector.ValuePropertyName, false)", span="135-135"];
m6_61 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="SerializeConvertable(writer, converter, value, valueContract, containerContract, containerProperty)", span="165-165"];
m6_64 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="JsonContractType.Object", span="171-171"];
m6_67 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="JsonArrayContract arrayContract = (JsonArrayContract)valueContract", span="175-175"];
m6_70 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="SerializeMultidimensionalArray(writer, (Array)value, arrayContract, member, containerContract, containerProperty)", span="182-182"];
m6_110 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="valueContract.ContractType == JsonContractType.Array", span="254-254"];
m6_113 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="!isReference.GetValueOrDefault()", span="264-264"];
m6_117 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.PreserveReferencesHandling, Newtonsoft.Json.PreserveReferencesHandling)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.PreserveReferencesHandling, Newtonsoft.Json.PreserveReferencesHandling)", span="627-627"];
m6_277 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", span="520-520"];
m6_295 [cluster="System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.Contains(TKey)", file="JsonSerializerInternalWriter.cs", label="Entry System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.Contains(TKey)", span="0-0"];
m6_308 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, Newtonsoft.Json.TypeNameAssemblyFormatHandling, Newtonsoft.Json.Serialization.ISerializationBinder)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, Newtonsoft.Json.TypeNameAssemblyFormatHandling, Newtonsoft.Json.Serialization.ISerializationBinder)", span="147-147"];
m6_462 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="throw;", span="1103-1103"];
m6_464 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="_serializeStack.RemoveAt(_serializeStack.Count - 1)", span="1115-1115"];
m6_559 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Entry lambda expression", span="980-984"];
m6_561 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="reader.ReadAsInt32()", span="983-983"];
m6_575 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Entry lambda expression", span="1003-1007"];
m6_577 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="reader.ReadAsInt32()", span="1006-1006"];
m6_643 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="reader.ReadAsBytes()", span="1122-1122"];
m6_654 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="reader.ReadAsBytes()", span="1135-1135"];
m6_822 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="reader.ReadAsInt32()", span="1409-1409"];
m6_825 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="reader.ReadAsInt32()", span="1412-1412"];
m6_828 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="reader.ReadAsInt32()", span="1415-1415"];
m6_831 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="reader.ReadAsInt32()", span="1418-1418"];
m6_834 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="reader.ReadAsInt32()", span="1424-1424"];
m6_859 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="reader.ReadAsDecimal()", span="1445-1445"];
m6_862 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="reader.Read()", span="1449-1449"];
m6_865 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="reader.ReadAsDecimal()", span="1458-1458"];
m6_897 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="reader.Read()", span="1487-1487"];
m6_900 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="reader.Read()", span="1498-1498"];
m6_1075 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="reader.Read()", span="1751-1751"];
m6_1153 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="reader.Read()", span="1863-1863"];
m6_1170 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="reader.ReadAsBytes()", span="1891-1891"];
m6_1183 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="reader.ReadAsDecimal()", span="1912-1912"];
m6_1190 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="reader.ReadAsBytes()", span="1922-1922"];
m6_1197 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="reader.ReadAsDateTimeOffset()", span="1933-1933"];
m6_1211 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="reader.ReadAsBytes()", span="1955-1955"];
m6_1218 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="reader.ReadAsBytes()", span="1965-1965"];
m6_1289 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="reader.ReadAsDateTimeOffset()", span="2076-2076"];
m6_1391 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="reader.ReadAsInt32()", span="2230-2230"];
m6_1398 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="reader.Read()", span="2240-2240"];
m6_1405 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="reader.Read()", span="2250-2250"];
m6_1412 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="reader.Read()", span="2260-2260"];
m6_1419 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="reader.Read()", span="2270-2270"];
m6_1426 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="reader.Read()", span="2280-2280"];
m6_1559 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="reader.Read()", span="2514-2514"];
m6_1567 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="reader.Read()", span="2525-2525"];
m6_1598 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="reader.Read()", span="2573-2573"];
m6_1779 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="reader.Read()", span="2862-2862"];
m6_2031 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="jsonTextReader.Read()", span="3207-3207"];
m6_2034 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="jsonTextReader.Read()", span="3210-3210"];
m6_2037 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="jsonTextReader.Read()", span="3221-3221"];
m6_2040 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="jsonTextReader.Read()", span="3232-3232"];
m6_2043 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="jsonTextReader.Read()", span="3235-3235"];
m6_2046 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="jsonTextReader.Read()", span="3238-3238"];
m6_469 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalWriter.cs", label="string propertyName", span="1122-1122"];
m6_471 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalWriter.cs", label="JsonPrimitiveContract primitiveContract = (JsonPrimitiveContract)contract", span="1126-1126"];
m6_628 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Entry lambda expression", span="1102-1102"];
m6_630 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Exit lambda expression", span="1102-1102"];
m6_635 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Entry lambda expression", span="1112-1112"];
m6_637 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Exit lambda expression", span="1112-1112"];
m6_668 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Entry lambda expression", span="1156-1156"];
m6_670 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Exit lambda expression", span="1156-1156"];
m6_1817 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Entry lambda expression", span="2924-2924"];
m6_1819 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Exit lambda expression", span="2924-2924"];
m6_1614 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Entry lambda expression", span="2597-2597"];
m6_1616 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Exit lambda expression", span="2597-2597"];
m6_1873 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Entry lambda expression", span="3009-3009"];
m6_1875 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Exit lambda expression", span="3009-3009"];
m6_1905 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Entry lambda expression", span="3027-3027"];
m6_1907 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Exit lambda expression", span="3027-3027"];
m6_1908 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Entry lambda expression", span="3047-3047"];
m6_1910 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Exit lambda expression", span="3047-3047"];
m6_43 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="WriteTypeProperty(writer, contract.CreatedType)", span="134-134"];
m6_45 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="JsonWriter.WriteValue(writer, contract.TypeCode, value)", span="137-137"];
m6_60 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="converter != null && converter.CanWrite", span="163-163"];
m6_62 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="return;", span="166-166"];
m6_63 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="valueContract.ContractType", span="169-169"];
m6_65 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="SerializeObject(writer, value, (JsonObjectContract)valueContract, member, containerContract, containerProperty)", span="172-172"];
m6_66 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="JsonContractType.Array", span="174-174"];
m6_68 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="!arrayContract.IsMultidimensionalArray", span="176-176"];
m6_69 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="SerializeList(writer, (IEnumerable)value, arrayContract, member, containerContract, containerProperty)", span="178-178"];
m6_71 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="JsonContractType.Primitive", span="185-185"];
m6_109 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="isReference == null", span="252-252"];
m6_111 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="isReference = HasFlag(Serializer._preserveReferencesHandling, PreserveReferencesHandling.Arrays)", span="256-256"];
m6_112 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="isReference = HasFlag(Serializer._preserveReferencesHandling, PreserveReferencesHandling.Objects)", span="260-260"];
m6_114 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="return false;", span="266-266"];
m6_116 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="239-239"];
m6_118 [cluster="System.Nullable<T>.GetValueOrDefault()", file="JsonSerializerInternalWriter.cs", label="Entry System.Nullable<T>.GetValueOrDefault()", span="0-0"];
m6_276 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="JsonSerializerInternalWriter.cs", label="return false;", span="566-566"];
m6_278 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", span="1199-1199"];
m6_294 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasCreatorParameter(Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasCreatorParameter(Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="585-585"];
m6_296 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)", file="JsonSerializerInternalWriter.cs", label="string reference = GetReference(writer, value)", span="598-598"];
m6_307 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)", span="609-609"];
m6_309 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", file="JsonSerializerInternalWriter.cs", label="return ((value & flag) == flag);", span="624-624"];
m6_562 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Exit lambda expression", span="980-984"];
m6_578 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Exit lambda expression", span="1003-1007"];
m6_642 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Entry lambda expression", span="1122-1122"];
m6_644 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Exit lambda expression", span="1122-1122"];
m6_653 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Entry lambda expression", span="1135-1135"];
m6_655 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Exit lambda expression", span="1135-1135"];
m6_821 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Entry lambda expression", span="1409-1409"];
m6_823 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Exit lambda expression", span="1409-1409"];
m6_824 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Entry lambda expression", span="1412-1412"];
m6_826 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Exit lambda expression", span="1412-1412"];
m6_827 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Entry lambda expression", span="1415-1415"];
m6_829 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Exit lambda expression", span="1415-1415"];
m6_830 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Entry lambda expression", span="1418-1418"];
m6_832 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Exit lambda expression", span="1418-1418"];
m6_833 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Entry lambda expression", span="1424-1424"];
m6_835 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Exit lambda expression", span="1424-1424"];
m6_858 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Entry lambda expression", span="1445-1445"];
m6_860 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Exit lambda expression", span="1445-1445"];
m6_861 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Entry lambda expression", span="1449-1449"];
m6_863 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Exit lambda expression", span="1449-1449"];
m6_864 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Entry lambda expression", span="1458-1458"];
m6_866 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Exit lambda expression", span="1458-1458"];
m6_896 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Entry lambda expression", span="1487-1487"];
m6_898 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Exit lambda expression", span="1487-1487"];
m6_899 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Entry lambda expression", span="1498-1498"];
m6_901 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Exit lambda expression", span="1498-1498"];
m6_1074 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Entry lambda expression", span="1751-1751"];
m6_1076 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Exit lambda expression", span="1751-1751"];
m6_1152 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Entry lambda expression", span="1863-1863"];
m6_1154 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Exit lambda expression", span="1863-1863"];
m6_1169 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Entry lambda expression", span="1891-1891"];
m6_1171 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Exit lambda expression", span="1891-1891"];
m6_1182 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Entry lambda expression", span="1912-1912"];
m6_1184 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Exit lambda expression", span="1912-1912"];
m6_1189 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Entry lambda expression", span="1922-1922"];
m6_1191 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Exit lambda expression", span="1922-1922"];
m6_1196 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Entry lambda expression", span="1933-1933"];
m6_1198 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Exit lambda expression", span="1933-1933"];
m6_1210 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Entry lambda expression", span="1955-1955"];
m6_1212 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Exit lambda expression", span="1955-1955"];
m6_1217 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Entry lambda expression", span="1965-1965"];
m6_1219 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Exit lambda expression", span="1965-1965"];
m6_1288 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Entry lambda expression", span="2076-2076"];
m6_1290 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Exit lambda expression", span="2076-2076"];
m6_1390 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Entry lambda expression", span="2230-2230"];
m6_1392 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Exit lambda expression", span="2230-2230"];
m6_1397 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Entry lambda expression", span="2240-2240"];
m6_1399 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Exit lambda expression", span="2240-2240"];
m6_1404 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Entry lambda expression", span="2250-2250"];
m6_1406 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Exit lambda expression", span="2250-2250"];
m6_1411 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Entry lambda expression", span="2260-2260"];
m6_1413 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Exit lambda expression", span="2260-2260"];
m6_1418 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Entry lambda expression", span="2270-2270"];
m6_1420 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Exit lambda expression", span="2270-2270"];
m6_1425 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Entry lambda expression", span="2280-2280"];
m6_1427 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Exit lambda expression", span="2280-2280"];
m6_1558 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Entry lambda expression", span="2514-2514"];
m6_1560 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Exit lambda expression", span="2514-2514"];
m6_1566 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Entry lambda expression", span="2525-2525"];
m6_1568 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Exit lambda expression", span="2525-2525"];
m6_1597 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Entry lambda expression", span="2573-2573"];
m6_1599 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Exit lambda expression", span="2573-2573"];
m6_1778 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Entry lambda expression", span="2862-2862"];
m6_1780 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Exit lambda expression", span="2862-2862"];
m6_2030 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Entry lambda expression", span="3207-3207"];
m6_2032 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Exit lambda expression", span="3207-3207"];
m6_2033 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Entry lambda expression", span="3210-3210"];
m6_2035 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Exit lambda expression", span="3210-3210"];
m6_2036 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Entry lambda expression", span="3221-3221"];
m6_2038 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Exit lambda expression", span="3221-3221"];
m6_2039 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Entry lambda expression", span="3232-3232"];
m6_2041 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Exit lambda expression", span="3232-3232"];
m6_2042 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Entry lambda expression", span="3235-3235"];
m6_2044 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Exit lambda expression", span="3235-3235"];
m6_2047 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Exit lambda expression", span="3238-3238"];
m6_2068 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", span="3285-3285"];
m6_2069 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="JsonSerializerInternalWriter.cs", label=Error, span="3287-3287"];
m6_2071 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="JsonSerializerInternalWriter.cs", label="return _inner.Read(buffer, index, 1);", span="3290-3290"];
m6_2070 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="JsonSerializerInternalWriter.cs", label="throw new Exception(''Read error'');", span="3288-3288"];
m6_2072 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", span="3285-3285"];
m6_950 [cluster="System.Text.StringBuilder.ToString()", file="JsonSerializerInternalWriter.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m6_1000 [cluster="System.Convert.ToInt32(char)", file="JsonSerializerInternalWriter.cs", label="Entry System.Convert.ToInt32(char)", span="0-0"];
m6_2073 [cluster="System.Exception.Exception(string)", file="JsonSerializerInternalWriter.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m6_729 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", span="1268-1268"];
m6_732 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonSerializerInternalWriter.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''[1,''' + Convert.ToBase64String(helloWorldData) + @''']''))", span="1273-1273"];
m6_733 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="1274-1274"];
m6_735 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="1276-1276"];
m6_740 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="1281-1281"];
m6_742 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonSerializerInternalWriter.cs", label="Assert.IsFalse(reader.Read())", span="1284-1284"];
m6_731 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonSerializerInternalWriter.cs", label="byte[] helloWorldData = Encoding.UTF8.GetBytes(helloWorld)", span="1271-1271"];
m6_734 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="1275-1275"];
m6_736 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1277-1277"];
m6_737 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonSerializerInternalWriter.cs", label="byte[] data = reader.ReadAsBytes()", span="1278-1278"];
m6_739 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Bytes, reader.TokenType)", span="1280-1280"];
m6_741 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="1282-1282"];
m6_730 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonSerializerInternalWriter.cs", label="string helloWorld = ''Hello world!''", span="1270-1270"];
m6_738 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonSerializerInternalWriter.cs", label="CollectionAssert.AreEquivalent(helloWorldData, data)", span="1279-1279"];
m6_743 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", span="1268-1268"];
m6_502 [cluster="Newtonsoft.Json.JsonTextWriter.WriteStartArray()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteStartArray()", span="166-166"];
m6_787 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", span="1355-1355"];
m6_789 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1379-1379"];
m6_788 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="JsonSerializerInternalWriter.cs", label="string json = @''[\r\n  true,\r\n  {\r\n    ''''integer'''': 99,\r\n    ''''string'''': ''''how now brown cow?'''',\r\n    ''''array'''': [\r\n      0,\r\n      1,\r\n      2,\r\n      3,\r\n      4,\r\n      {\r\n        ''''decimal'''': 990.00990099\r\n      },\r\n      5\r\n    ]\r\n  },\r\n  ''''This is a string.'''',\r\n  null,\r\n  null\r\n]''", span="1357-1377"];
m6_790 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="JsonSerializerInternalWriter.cs", label="reader.Read()", span="1380-1380"];
m6_791 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", span="1355-1355"];
m6_500 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(System.IO.TextWriter, System.DateTime, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(System.IO.TextWriter, System.DateTime, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", span="631-631"];
m6_1788 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", span="2878-2878"];
m6_1790 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2882-2882"];
m6_1789 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonSerializerInternalWriter.cs", label="string json = @''0x20''", span="2880-2880"];
m6_1791 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonSerializerInternalWriter.cs", label="reader.ReadAsDecimal()", span="2884-2884"];
m6_1792 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2885-2885"];
m6_1793 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(32m, reader.Value)", span="2886-2886"];
m6_1794 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", span="2878-2878"];
m6_943 [cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="357-357"];
m6_51 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonTextReader.TokenType)", span="127-127"];
m6_2048 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", span="3247-3247"];
m6_2057 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(sr)", span="3260-3260"];
m6_2056 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonSerializerInternalWriter.cs", label="StringReader sr = new StringReader(json)", span="3259-3259"];
m6_2058 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="3262-3262"];
m6_2063 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="3270-3270"];
m6_2059 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonSerializerInternalWriter.cs", label="decimal? max = reader.ReadAsDecimal()", span="3264-3264"];
m6_2061 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonSerializerInternalWriter.cs", label="decimal? min = reader.ReadAsDecimal()", span="3267-3267"];
m6_2055 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonSerializerInternalWriter.cs", label="string json = sw.ToString()", span="3257-3257"];
m6_2060 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(decimal.MaxValue, max)", span="3265-3265"];
m6_2062 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(decimal.MinValue, min)", span="3268-3268"];
m6_2049 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonSerializerInternalWriter.cs", label="StringWriter sw = new StringWriter()", span="3249-3249"];
m6_2054 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonSerializerInternalWriter.cs", label="writer.WriteEndArray()", span="3255-3255"];
m6_2050 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonSerializerInternalWriter.cs", label="JsonTextWriter writer = new JsonTextWriter(sw)", span="3250-3250"];
m6_2053 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonSerializerInternalWriter.cs", label="writer.WriteValue(decimal.MinValue)", span="3254-3254"];
m6_2051 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonSerializerInternalWriter.cs", label="writer.WriteStartArray()", span="3252-3252"];
m6_2052 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonSerializerInternalWriter.cs", label="writer.WriteValue(decimal.MaxValue)", span="3253-3253"];
m6_2064 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", span="3247-3247"];
m6_1178 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", span="1906-1906"];
m6_1179 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''new Date()''))", span="1908-1908"];
m6_1180 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="JsonSerializerInternalWriter.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Error reading decimal. Unexpected token: StartConstructor. Path '', line 1, position 9.'',\r\n                () => { reader.ReadAsDecimal(); })", span="1910-1912"];
m6_1181 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", span="1906-1906"];
m6_715 [cluster="System.IO.StringReader.ReadLine()", file="JsonSerializerInternalWriter.cs", label="Entry System.IO.StringReader.ReadLine()", span="0-0"];
m6_353 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.EndArray)", span="686-686"];
m6_946 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="810-810"];
m6_328 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(''Intel'', jsonReader.Value)", span="656-656"];
m6_162 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JsonSerializerInternalWriter.cs", label="string json = ''[NaN]''", span="287-287"];
m6_745 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", span="1288-1288"];
m6_748 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonSerializerInternalWriter.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''{num:1,data:''' + Convert.ToBase64String(helloWorldData) + @'''}''))", span="1293-1293"];
m6_749 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="1294-1294"];
m6_751 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="1296-1296"];
m6_752 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="1297-1297"];
m6_754 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="1299-1299"];
m6_758 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="1303-1303"];
m6_760 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonSerializerInternalWriter.cs", label="Assert.IsFalse(reader.Read())", span="1306-1306"];
m6_747 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonSerializerInternalWriter.cs", label="byte[] helloWorldData = Encoding.UTF8.GetBytes(helloWorld)", span="1291-1291"];
m6_750 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1295-1295"];
m6_753 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1298-1298"];
m6_755 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonSerializerInternalWriter.cs", label="byte[] data = reader.ReadAsBytes()", span="1300-1300"];
m6_757 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Bytes, reader.TokenType)", span="1302-1302"];
m6_759 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1304-1304"];
m6_746 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonSerializerInternalWriter.cs", label="string helloWorld = ''Hello world!''", span="1290-1290"];
m6_756 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonSerializerInternalWriter.cs", label="CollectionAssert.AreEquivalent(helloWorldData, data)", span="1301-1301"];
m6_761 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", span="1288-1288"];
m6_1381 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", span="2216-2216"];
m6_1383 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2220-2220"];
m6_1384 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2222-2222"];
m6_1386 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2225-2225"];
m6_1382 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonSerializerInternalWriter.cs", label="string json = @''{''''Name'''': 1.1}''", span="2218-2218"];
m6_1385 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2223-2223"];
m6_1387 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2226-2226"];
m6_1388 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonSerializerInternalWriter.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Input string '1.1' is not a valid integer. Path 'Name', line 1, position 12.'',\r\n                () => { reader.ReadAsInt32(); })", span="2228-2230"];
m6_1389 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", span="2216-2216"];
m6_1781 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", span="2866-2866"];
m6_1783 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2870-2870"];
m6_1782 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonSerializerInternalWriter.cs", label="string json = @''010''", span="2868-2868"];
m6_1784 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonSerializerInternalWriter.cs", label="reader.ReadAsDecimal()", span="2872-2872"];
m6_1785 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2873-2873"];
m6_1786 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(8m, reader.Value)", span="2874-2874"];
m6_1787 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", span="2866-2866"];
m6_558 [cluster="long.ToString(System.IFormatProvider)", file="JsonSerializerInternalWriter.cs", label="Entry long.ToString(System.IFormatProvider)", span="0-0"];
m6_355 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(4, jsonReader.LinePosition)", span="688-688"];
m6_230 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="JsonContract keyContract = GetContractSafe(e.Key)", span="484-484"];
m6_232 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="bool escape", span="487-487"];
m6_237 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="WriteReference(writer, e.Value)", span="497-497"];
m6_233 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="string propertyName = GetPropertyName(writer, e.Key, keyContract, out escape)", span="488-488"];
m6_238 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="!CheckForCircularReference(writer, e.Value, null, valueContract, contract, member)", span="501-501"];
m6_240 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="SerializeValue(writer, e.Value, valueContract, null, contract, member)", span="508-508"];
m6_231 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="JsonContract valueContract = GetContractSafe(e.Value)", span="485-485"];
m6_234 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="propertyName = (contract.ExtensionDataNameResolver != null)\r\n                        ? contract.ExtensionDataNameResolver(propertyName)\r\n                        : propertyName", span="490-492"];
m6_236 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="writer.WritePropertyName(propertyName)", span="496-496"];
m6_239 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="writer.WritePropertyName(propertyName)", span="506-506"];
m6_235 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="ShouldWriteReference(e.Value, null, valueContract, contract, member)", span="494-494"];
m6_241 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="writer.WriteEndObject()", span="513-513"];
m6_121 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="231-231"];
m6_122 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="233-233"];
m6_124 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="236-236"];
m6_123 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="234-234"];
m6_125 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="237-237"];
m6_126 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="239-239"];
m6_127 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="240-240"];
m6_19 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonSerializerInternalWriter.cs", label="var i = (BigInteger)((JValue)o[''ChildId'']).Value", span="84-84"];
m6_1679 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", span="2702-2702"];
m6_1681 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2725-2725"];
m6_1682 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2727-2727"];
m6_1686 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2732-2732"];
m6_1689 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2736-2736"];
m6_1692 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2740-2740"];
m6_1696 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2745-2745"];
m6_1699 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2749-2749"];
m6_1703 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2754-2754"];
m6_1707 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2759-2759"];
m6_1711 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2764-2764"];
m6_1715 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2769-2769"];
m6_1718 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2773-2773"];
m6_1722 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2778-2778"];
m6_1724 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2781-2781"];
m6_1727 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2785-2785"];
m6_1730 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2789-2789"];
m6_1733 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2793-2793"];
m6_1736 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2797-2797"];
m6_1738 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2800-2800"];
m6_1741 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2804-2804"];
m6_1743 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2807-2807"];
m6_1745 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2810-2810"];
m6_1747 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2813-2813"];
m6_1749 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2816-2816"];
m6_1751 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2819-2819"];
m6_1753 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2822-2822"];
m6_1755 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2825-2825"];
m6_1757 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2828-2828"];
m6_1760 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2832-2832"];
m6_1680 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="string json = @''//comment*//*hi*/\r\n{//comment\r\nName://comment\r\ntrue//comment after true'' + StringUtils.CarriageReturn + @''\r\n,//comment after comma'' + StringUtils.CarriageReturnLineFeed + @''\r\n''''ExpiryDate''''://comment''  + StringUtils.LineFeed + @''\r\nnew\r\n'' + StringUtils.LineFeed +\r\n                          @''Date\r\n(//comment\r\nnull//comment\r\n),\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': //comment\r\n[//comment\r\n\r\n          ''''Small''''//comment\r\n]//comment\r\n}//comment \r\n//comment 1 ''", span="2704-2723"];
m6_1683 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2728-2728"];
m6_1684 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(''comment*//*hi*/'', reader.Value)", span="2729-2729"];
m6_1685 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(2, reader.LineNumber)", span="2730-2730"];
m6_1687 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(2, reader.LineNumber)", span="2733-2733"];
m6_1688 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2734-2734"];
m6_1690 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2737-2737"];
m6_1691 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(3, reader.LineNumber)", span="2738-2738"];
m6_1693 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2741-2741"];
m6_1694 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(''Name'', reader.Value)", span="2742-2742"];
m6_1695 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(3, reader.LineNumber)", span="2743-2743"];
m6_1697 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2746-2746"];
m6_1698 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(4, reader.LineNumber)", span="2747-2747"];
m6_1700 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="2750-2750"];
m6_1701 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(true, reader.Value)", span="2751-2751"];
m6_1702 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(4, reader.LineNumber)", span="2752-2752"];
m6_1704 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2755-2755"];
m6_1705 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(''comment after true'', reader.Value)", span="2756-2756"];
m6_1706 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(5, reader.LineNumber)", span="2757-2757"];
m6_1708 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2760-2760"];
m6_1709 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(''comment after comma'', reader.Value)", span="2761-2761"];
m6_1710 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(7, reader.LineNumber)", span="2762-2762"];
m6_1712 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2765-2765"];
m6_1713 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(''ExpiryDate'', reader.Value)", span="2766-2766"];
m6_1714 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(8, reader.LineNumber)", span="2767-2767"];
m6_1716 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2770-2770"];
m6_1717 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(9, reader.LineNumber)", span="2771-2771"];
m6_1719 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2774-2774"];
m6_1720 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(13, reader.LineNumber)", span="2775-2775"];
m6_1721 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="2776-2776"];
m6_1723 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2779-2779"];
m6_1725 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="2782-2782"];
m6_1726 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(14, reader.LineNumber)", span="2783-2783"];
m6_1728 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2786-2786"];
m6_1729 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(15, reader.LineNumber)", span="2787-2787"];
m6_1731 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2790-2790"];
m6_1732 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(15, reader.LineNumber)", span="2791-2791"];
m6_1734 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2794-2794"];
m6_1735 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(''Price'', reader.Value)", span="2795-2795"];
m6_1737 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2798-2798"];
m6_1739 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2801-2801"];
m6_1740 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(''Sizes'', reader.Value)", span="2802-2802"];
m6_1742 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2805-2805"];
m6_1744 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2808-2808"];
m6_1746 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2811-2811"];
m6_1748 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="2814-2814"];
m6_1750 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2817-2817"];
m6_1752 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2820-2820"];
m6_1754 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2823-2823"];
m6_1756 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2826-2826"];
m6_1758 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2829-2829"];
m6_1759 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(''comment '', reader.Value)", span="2830-2830"];
m6_1761 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2833-2833"];
m6_1762 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(''comment 1 '', reader.Value)", span="2834-2834"];
m6_1763 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Assert.IsFalse(reader.Read())", span="2836-2836"];
m6_1764 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", span="2702-2702"];
m6_513 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="895-895"];
m6_515 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="898-898"];
m6_517 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="901-901"];
m6_514 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="896-896"];
m6_516 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="899-899"];
m6_518 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="902-902"];
m6_519 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="904-904"];
m6_1235 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", span="1996-1996"];
m6_1237 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2000-2000"];
m6_1238 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2002-2002"];
m6_1240 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2005-2005"];
m6_1242 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2008-2008"];
m6_1245 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2012-2012"];
m6_1236 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonSerializerInternalWriter.cs", label="string json = @''{''''text'''':0xabcdef12345}''", span="1998-1998"];
m6_1239 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2003-2003"];
m6_1241 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2006-2006"];
m6_1243 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2009-2009"];
m6_1244 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(11806310474565, reader.Value)", span="2010-2010"];
m6_1246 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2013-2013"];
m6_1247 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", span="1996-1996"];
m6_953 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="848-848"];
m6_1863 [cluster="System.Convert.ToDouble(string, System.IFormatProvider)", file="JsonSerializerInternalWriter.cs", label="Entry System.Convert.ToDouble(string, System.IFormatProvider)", span="0-0"];
m6_1085 [cluster="Unk.IsNotNull", file="JsonSerializerInternalWriter.cs", label="Entry Unk.IsNotNull", span=""];
m6_1319 [cluster="System.TimeSpan.FromMinutes(double)", file="JsonSerializerInternalWriter.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m6_198 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="398-398"];
m6_200 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(2, s.Length)", span="401-401"];
m6_201 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonSerializerInternalWriter.cs", label="StringInfo stringInfo = new StringInfo(s)", span="403-403"];
m6_202 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(1, stringInfo.LengthInTextElements)", span="404-404"];
m6_203 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", span="388-388"];
m6_72 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="SerializePrimitive(writer, value, (JsonPrimitiveContract)valueContract, member, containerContract, containerProperty)", span="186-186"];
m6_74 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="SerializeString(writer, value, (JsonStringContract)valueContract)", span="189-189"];
m6_75 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="JsonContractType.Dictionary", span="191-191"];
m6_77 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="SerializeDictionary(writer, (value is IDictionary) ? (IDictionary)value : dictionaryContract.CreateWrapper(value), dictionaryContract, member, containerContract, containerProperty)", span="193-193"];
m6_81 [cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="891-891"];
m6_73 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="JsonContractType.String", span="188-188"];
m6_76 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="JsonDictionaryContract dictionaryContract = (JsonDictionaryContract)valueContract", span="192-192"];
m6_78 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="JsonContractType.Linq", span="205-205"];
m6_79 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="((JToken)value).WriteTo(writer, Serializer.Converters.ToArray())", span="206-206"];
m6_82 [cluster="Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Type)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Type)", span="1154-1154"];
m6_83 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="637-637"];
m6_80 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="147-147"];
m6_84 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="440-440"];
m6_23 [cluster="System.IO.StringReader.StringReader(string)", file="JsonSerializerInternalWriter.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m6_1279 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", span="2062-2062"];
m6_1281 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2066-2066"];
m6_1282 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2068-2068"];
m6_1284 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2071-2071"];
m6_1280 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonSerializerInternalWriter.cs", label="string json = @''{''''Offset'''':''''blablahbla''''}''", span="2064-2064"];
m6_1283 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2069-2069"];
m6_1285 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2072-2072"];
m6_1286 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonSerializerInternalWriter.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Could not convert string to DateTimeOffset: blablahbla. Path 'Offset', line 1, position 22.'',\r\n                () => { reader.ReadAsDateTimeOffset(); })", span="2074-2076"];
m6_1287 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", span="2062-2062"];
m6_1820 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", span="2928-2928"];
m6_1826 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2941-2941"];
m6_1844 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerInternalWriter.cs", label="reader = new JsonTextReader(new StringReader(json))", span="2968-2968"];
m6_1825 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerInternalWriter.cs", label="string json = @''[0e-10,0E-10,0.25e-5,0.3e10,6.0221418e23]''", span="2939-2939"];
m6_1827 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerInternalWriter.cs", label="reader.Read()", span="2943-2943"];
m6_1828 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerInternalWriter.cs", label="reader.Read()", span="2945-2945"];
m6_1829 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2946-2946"];
m6_1830 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(0d, reader.Value)", span="2947-2947"];
m6_1831 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerInternalWriter.cs", label="reader.Read()", span="2949-2949"];
m6_1832 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2950-2950"];
m6_1833 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(0d, reader.Value)", span="2951-2951"];
m6_1834 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerInternalWriter.cs", label="reader.Read()", span="2953-2953"];
m6_1835 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2954-2954"];
m6_1836 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(0.0000025d, reader.Value)", span="2955-2955"];
m6_1837 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerInternalWriter.cs", label="reader.Read()", span="2957-2957"];
m6_1838 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2958-2958"];
m6_1839 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(3000000000d, reader.Value)", span="2959-2959"];
m6_1840 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerInternalWriter.cs", label="reader.Read()", span="2961-2961"];
m6_1841 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2962-2962"];
m6_1842 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(602214180000000000000000d, reader.Value)", span="2963-2963"];
m6_1843 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerInternalWriter.cs", label="reader.Read()", span="2965-2965"];
m6_1845 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerInternalWriter.cs", label="reader.Read()", span="2970-2970"];
m6_1846 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerInternalWriter.cs", label="reader.ReadAsDecimal()", span="2972-2972"];
m6_1847 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2973-2973"];
m6_1848 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(0m, reader.Value)", span="2974-2974"];
m6_1849 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerInternalWriter.cs", label="reader.ReadAsDecimal()", span="2976-2976"];
m6_1850 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2977-2977"];
m6_1851 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(0m, reader.Value)", span="2978-2978"];
m6_1852 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerInternalWriter.cs", label="reader.ReadAsDecimal()", span="2980-2980"];
m6_1853 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2981-2981"];
m6_1854 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(0.0000025m, reader.Value)", span="2982-2982"];
m6_1855 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerInternalWriter.cs", label="reader.ReadAsDecimal()", span="2984-2984"];
m6_1856 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2985-2985"];
m6_1857 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(3000000000m, reader.Value)", span="2986-2986"];
m6_1858 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerInternalWriter.cs", label="reader.ReadAsDecimal()", span="2988-2988"];
m6_1859 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2989-2989"];
m6_1860 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(602214180000000000000000m, reader.Value)", span="2990-2990"];
m6_1861 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerInternalWriter.cs", label="reader.Read()", span="2992-2992"];
m6_1824 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerInternalWriter.cs", label="Console.WriteLine(d.ToString(''0.#############################################################################''))", span="2934-2934"];
m6_1823 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerInternalWriter.cs", label="Console.WriteLine(d.ToString(new CultureInfo(''fr-FR'')))", span="2933-2933"];
m6_1822 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerInternalWriter.cs", label="d = Convert.ToDouble(''6.0221418e23'', CultureInfo.InvariantCulture)", span="2932-2932"];
m6_1821 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerInternalWriter.cs", label="double d", span="2930-2930"];
m6_1862 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", span="2928-2928"];
m6_939 [cluster="System.Text.StringBuilder.StringBuilder()", file="JsonSerializerInternalWriter.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m6_1320 [cluster="System.TimeSpan.Add(System.TimeSpan)", file="JsonSerializerInternalWriter.cs", label="Entry System.TimeSpan.Add(System.TimeSpan)", span="0-0"];
m6_1457 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", span="2329-2329"];
m6_1459 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2344-2344"];
m6_1464 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2354-2354"];
m6_1458 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonSerializerInternalWriter.cs", label="string json = @''[\r\n  {\r\n    ''''Name'''': ''''Jim'''',\r\n    ''''BirthDate'''': ''''\/Date(978048000000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(978048000000)\/''''\r\n  },\r\n  {\r\n    ''''Name'''': ''''Jim'''',\r\n    ''''BirthDate'''': ''''\/Date(978048000000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(978048000000)\/''''\r\n  }\r\n]''", span="2331-2342"];
m6_1460 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonSerializerInternalWriter.cs", label="int i = 0", span="2349-2349"];
m6_1462 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonSerializerInternalWriter.cs", label="reader.Read()", span="2351-2351"];
m6_1465 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(new DateTime(631136448000000000), reader.Value)", span="2355-2355"];
m6_1461 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonSerializerInternalWriter.cs", label="i < 13", span="2349-2349"];
m6_1463 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonSerializerInternalWriter.cs", label="i++", span="2349-2349"];
m6_1466 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", span="2329-2329"];
m6_28 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetInternalSerializer()", file="JsonSerializerInternalWriter.cs", label="InternalSerializer = new JsonSerializerProxy(this)", span="109-109"];
m6_563 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", span="989-989"];
m6_565 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="993-993"];
m6_564 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonSerializerInternalWriter.cs", label="long i = int.MinValue", span="991-991"];
m6_566 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonSerializerInternalWriter.cs", label="reader.Read()", span="994-994"];
m6_567 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(typeof(long), reader.ValueType)", span="995-995"];
m6_568 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(i, reader.Value)", span="996-996"];
m6_572 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonSerializerInternalWriter.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                    ''JSON integer '' + total + '' is too large or small for an Int32. Path '', line 1, position 11.'',\r\n                    () =>\r\n                    {\r\n                        reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)));\r\n                        reader.ReadAsInt32();\r\n                    })", span="1001-1007"];
m6_571 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonSerializerInternalWriter.cs", label="long total = -j + i", span="1000-1000"];
m6_569 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonSerializerInternalWriter.cs", label="int j = 1", span="998-998"];
m6_573 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonSerializerInternalWriter.cs", label="j++", span="998-998"];
m6_570 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonSerializerInternalWriter.cs", label="j < 1000", span="998-998"];
m6_574 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", span="989-989"];
m6_17 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonSerializerInternalWriter.cs", label="Assert.IsFalse(jsonTextReader.Read())", span="81-81"];
m6_89 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="189-189"];
m6_460 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", file="JsonSerializerInternalWriter.cs", label="ExceptionAssert.Throws<ArgumentNullException>(\r\n                @''Value cannot be null.\r\nParameter name: reader'',\r\n                () => { new JsonTextReader(null); })", span="831-834"];
m6_461 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", span="829-829"];
m6_459 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", span="829-829"];
m6_250 [cluster="Newtonsoft.Json.JsonReader.Read()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.JsonReader.Read()", span="365-365"];
m6_475 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="JsonSerializerInternalWriter.cs", label="reader.Read()", span="852-852"];
m6_478 [cluster="string.String(char, int)", file="JsonSerializerInternalWriter.cs", label="Entry string.String(char, int)", span="0-0"];
m6_472 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", span="848-848"];
m6_473 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="JsonSerializerInternalWriter.cs", label="string s = new string('a', 10000)", span="850-850"];
m6_474 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="JsonSerializerInternalWriter.cs", label="JsonReader reader = new JsonTextReader(new StringReader(''''' + s + '''''))", span="851-851"];
m6_476 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(s, reader.Value)", span="854-854"];
m6_477 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", span="848-848"];
m6_1087 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", span="1768-1768"];
m6_1089 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader jsonReader = new JsonTextReader(s)", span="1771-1771"];
m6_1088 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonSerializerInternalWriter.cs", label="StringReader s = new StringReader(@''[0372, 0xFA, 0XFA]'')", span="1770-1770"];
m6_1090 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(jsonReader.Read())", span="1773-1773"];
m6_1092 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(jsonReader.Read())", span="1776-1776"];
m6_1095 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(jsonReader.Read())", span="1780-1780"];
m6_1098 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(jsonReader.Read())", span="1784-1784"];
m6_1101 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(jsonReader.Read())", span="1788-1788"];
m6_1091 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="1774-1774"];
m6_1093 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1777-1777"];
m6_1094 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(250L, jsonReader.Value)", span="1778-1778"];
m6_1096 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1781-1781"];
m6_1097 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(250L, jsonReader.Value)", span="1782-1782"];
m6_1099 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1785-1785"];
m6_1100 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(250L, jsonReader.Value)", span="1786-1786"];
m6_1102 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="1789-1789"];
m6_1103 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonSerializerInternalWriter.cs", label="Assert.IsFalse(jsonReader.Read())", span="1791-1791"];
m6_1104 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", span="1768-1768"];
m6_29 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetInternalSerializer()", file="JsonSerializerInternalWriter.cs", label="return InternalSerializer;", span="112-112"];
m6_652 [cluster="System.Convert.ToBase64String(byte[])", file="JsonSerializerInternalWriter.cs", label="Entry System.Convert.ToBase64String(byte[])", span="0-0"];
m6_129 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="243-243"];
m6_310 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", span="621-621"];
m6_244 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="440-440"];
m6_246 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="569-569"];
m6_247 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", span="520-520"];
m6_248 [cluster="Newtonsoft.Json.Serialization.JsonProperty.WritePropertyName(Newtonsoft.Json.JsonWriter)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonProperty.WritePropertyName(Newtonsoft.Json.JsonWriter)", span="295-295"];
m6_100 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="isReference == null", span="231-231"];
m6_102 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="return isReference;", span="236-236"];
m6_104 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="value == null", span="241-241"];
m6_106 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="valueContract.ContractType == JsonContractType.Primitive || valueContract.ContractType == JsonContractType.String", span="245-245"];
m6_101 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="isReference = contract.IsReference", span="233-233"];
m6_103 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="211-211"];
m6_105 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="return false;", span="243-243"];
m6_107 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="return false;", span="247-247"];
m6_108 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="bool? isReference = ResolveIsReference(valueContract, property, collectionContract, containerProperty)", span="250-250"];
m6_88 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="187-187"];
m6_192 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", file="JsonSerializerInternalWriter.cs", label="OnSerializing(writer, contract, value)", span="411-411"];
m6_194 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", file="JsonSerializerInternalWriter.cs", label="TryConvertToString(value, contract.UnderlyingType, out s)", span="414-414"];
m6_195 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", file="JsonSerializerInternalWriter.cs", label="writer.WriteValue(s)", span="415-415"];
m6_196 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", file="JsonSerializerInternalWriter.cs", label="OnSerialized(writer, contract, value)", span="417-417"];
m6_197 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", span="409-409"];
m6_193 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", file="JsonSerializerInternalWriter.cs", label="string s", span="413-413"];
m6_199 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerialized(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerialized(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", span="430-430"];
m6_1866 [cluster="double.ToString(string)", file="JsonSerializerInternalWriter.cs", label="Entry double.ToString(string)", span="0-0"];
m6_1577 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", span="2541-2541"];
m6_1579 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2544-2544"];
m6_1580 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2546-2546"];
m6_1582 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2549-2549"];
m6_1578 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonSerializerInternalWriter.cs", label="string json = ''[]''", span="2543-2543"];
m6_1581 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2547-2547"];
m6_1583 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2550-2550"];
m6_1584 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", span="2541-2541"];
m6_1442 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", span="2306-2306"];
m6_1444 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2310-2310"];
m6_1446 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2313-2313"];
m6_1448 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2316-2316"];
m6_1454 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2324-2324"];
m6_1443 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonSerializerInternalWriter.cs", label="string json = @''{''''decimal'''':''''9,99''''}''", span="2308-2308"];
m6_1445 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonSerializerInternalWriter.cs", label="reader.Culture = new CultureInfo(''fr-FR'')", span="2311-2311"];
m6_1447 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2314-2314"];
m6_1449 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2317-2317"];
m6_1450 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonSerializerInternalWriter.cs", label="decimal? d = reader.ReadAsDecimal()", span="2319-2319"];
m6_1451 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2320-2320"];
m6_1452 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="2321-2321"];
m6_1455 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2325-2325"];
m6_1453 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(9.99m, d)", span="2322-2322"];
m6_1456 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", span="2306-2306"];
m6_619 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", span="1087-1087"];
m6_620 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="JsonSerializerInternalWriter.cs", label="JsonReader reader = new JsonTextReader(new StringReader('''h\0i'''))", span="1089-1089"];
m6_621 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="1090-1090"];
m6_622 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(''h\0i'', reader.Value)", span="1092-1092"];
m6_623 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", span="1087-1087"];
m6_954 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", span="1565-1565"];
m6_957 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonSerializerInternalWriter.cs", label="JsonReader jsonReader = new JsonTextReader(sr)", span="1575-1575"];
m6_956 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonSerializerInternalWriter.cs", label="StringReader sr = new StringReader(input)", span="1573-1573"];
m6_958 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonSerializerInternalWriter.cs", label="jsonReader.Read()", span="1577-1577"];
m6_960 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonSerializerInternalWriter.cs", label="jsonReader.Read()", span="1580-1580"];
m6_963 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonSerializerInternalWriter.cs", label="jsonReader.Read()", span="1584-1584"];
m6_966 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonSerializerInternalWriter.cs", label="jsonReader.Read()", span="1588-1588"];
m6_969 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonSerializerInternalWriter.cs", label="jsonReader.Read()", span="1592-1592"];
m6_959 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.StartArray)", span="1578-1578"];
m6_961 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.Float)", span="1581-1581"];
m6_962 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(jsonReader.Value, double.NaN)", span="1582-1582"];
m6_964 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.Float)", span="1585-1585"];
m6_965 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(jsonReader.Value, double.PositiveInfinity)", span="1586-1586"];
m6_967 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.Float)", span="1589-1589"];
m6_968 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(jsonReader.Value, double.NegativeInfinity)", span="1590-1590"];
m6_970 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.EndArray)", span="1593-1593"];
m6_955 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonSerializerInternalWriter.cs", label="string input = @''[\r\n  NaN,\r\n  Infinity,\r\n  -Infinity\r\n]''", span="1567-1571"];
m6_971 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", span="1565-1565"];
m6_229 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label=extensionData, span="482-482"];
m6_18 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonSerializerInternalWriter.cs", label="JObject o = JObject.Parse(json)", span="83-83"];
m6_254 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonSerializerInternalWriter.cs", label="JsonReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="510-510"];
m6_255 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="512-512"];
m6_256 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="513-513"];
m6_257 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="514-514"];
m6_258 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="515-515"];
m6_259 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="516-516"];
m6_260 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="518-518"];
m6_261 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(0L, reader.Value)", span="519-519"];
m6_262 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="521-521"];
m6_264 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="524-524"];
m6_267 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(''MemberConverter'', reader.Value)", span="528-528"];
m6_268 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", span="506-506"];
m6_272 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="JsonSerializerInternalWriter.cs", label="string json = @''[\r\n''''Small'''',\r\n''''Medium'''',\r\n''''Large''''\r\n],''", span="534-538"];
m6_274 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="JsonSerializerInternalWriter.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Additional text encountered after finished reading JSON content: ,. Path '', line 5, position 2.'',\r\n                () =>\r\n                {\r\n                    while (reader.Read())\r\n                    {\r\n                    }\r\n                })", span="542-549"];
m6_266 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="527-527"];
m6_263 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(''hi'', reader.Value)", span="522-522"];
m6_265 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="525-525"];
m6_273 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="540-540"];
m6_269 [cluster="Newtonsoft.Json.Tests.SlowStream.SlowStream(string, System.Text.Encoding, int)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.SlowStream.SlowStream(string, System.Text.Encoding, int)", span="3307-3307"];
m6_271 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", span="532-532"];
m6_275 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", span="532-532"];
m6_1640 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", span="2637-2637"];
m6_1642 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2648-2648"];
m6_1643 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2650-2650"];
m6_1645 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2653-2653"];
m6_1647 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2656-2656"];
m6_1649 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2659-2659"];
m6_1652 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2663-2663"];
m6_1654 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2666-2666"];
m6_1657 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2670-2670"];
m6_1659 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2673-2673"];
m6_1661 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2676-2676"];
m6_1664 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2680-2680"];
m6_1666 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2683-2683"];
m6_1670 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2688-2688"];
m6_1672 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2691-2691"];
m6_1674 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2694-2694"];
m6_1676 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2697-2697"];
m6_1641 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerInternalWriter.cs", label="string json = @''/*comment*/{/*comment*/Name:/*comment*/true/*comment*/,/*comment*/\r\n        ''''ExpiryDate'''':/*comment*/new\r\n'' + StringUtils.LineFeed +\r\n                          @''Date\r\n(/*comment*/null/*comment*/),\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''':/*comment*/[/*comment*/\r\n          ''''Small''''/*comment*/]/*comment*/}/*comment*/''", span="2639-2646"];
m6_1644 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2651-2651"];
m6_1646 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2654-2654"];
m6_1648 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2657-2657"];
m6_1650 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2660-2660"];
m6_1651 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(''Name'', reader.Value)", span="2661-2661"];
m6_1653 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2664-2664"];
m6_1655 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="2667-2667"];
m6_1656 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(true, reader.Value)", span="2668-2668"];
m6_1658 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2671-2671"];
m6_1660 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2674-2674"];
m6_1662 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2677-2677"];
m6_1663 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(''ExpiryDate'', reader.Value)", span="2678-2678"];
m6_1665 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2681-2681"];
m6_1667 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2684-2684"];
m6_1668 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(5, reader.LineNumber)", span="2685-2685"];
m6_1669 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="2686-2686"];
m6_1671 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2689-2689"];
m6_1673 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="2692-2692"];
m6_1675 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2695-2695"];
m6_1677 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2698-2698"];
m6_1678 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", span="2637-2637"];
m6_85 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsBytes()", span="319-319"];
m6_329 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(2, jsonReader.LineNumber)", span="657-657"];
m6_330 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(15, jsonReader.LinePosition)", span="658-658"];
m6_331 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerInternalWriter.cs", label="jsonReader.Read()", span="660-660"];
m6_333 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(jsonReader.Value, ''Drives'')", span="662-662"];
m6_334 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(3, jsonReader.LineNumber)", span="663-663"];
m6_335 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(10, jsonReader.LinePosition)", span="664-664"];
m6_337 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.StartArray)", span="667-667"];
m6_338 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(3, jsonReader.LineNumber)", span="668-668"];
m6_339 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(12, jsonReader.LinePosition)", span="669-669"];
m6_340 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerInternalWriter.cs", label="jsonReader.Read()", span="671-671"];
m6_341 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.String)", span="672-672"];
m6_342 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(jsonReader.Value, ''DVD read/writer'')", span="673-673"];
m6_344 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(4, jsonReader.LineNumber)", span="675-675"];
m6_345 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(22, jsonReader.LinePosition)", span="676-676"];
m6_347 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.String)", span="679-679"];
m6_349 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(jsonReader.QuoteChar, '''')", span="681-681"];
m6_351 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(30, jsonReader.LinePosition)", span="683-683"];
m6_332 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.PropertyName)", span="661-661"];
m6_348 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(jsonReader.Value, ''500 gigabyte hard drive'')", span="680-680"];
m6_336 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerInternalWriter.cs", label="jsonReader.Read()", span="666-666"];
m6_343 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(jsonReader.QuoteChar, '\'')", span="674-674"];
m6_346 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerInternalWriter.cs", label="jsonReader.Read()", span="678-678"];
m6_350 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(5, jsonReader.LineNumber)", span="682-682"];
m6_352 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerInternalWriter.cs", label="jsonReader.Read()", span="685-685"];
m6_1336 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", span="2146-2146"];
m6_1338 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2150-2150"];
m6_1340 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2153-2153"];
m6_1342 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2156-2156"];
m6_1349 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2166-2166"];
m6_1337 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonSerializerInternalWriter.cs", label="string json = @''{''''Offset'''':''''1/30/2011''''}''", span="2148-2148"];
m6_1339 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonSerializerInternalWriter.cs", label="reader.Culture = new CultureInfo(''en-US'')", span="2151-2151"];
m6_1341 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2154-2154"];
m6_1343 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2157-2157"];
m6_1344 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonSerializerInternalWriter.cs", label="reader.ReadAsDateTimeOffset()", span="2159-2159"];
m6_1345 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2160-2160"];
m6_1346 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2161-2161"];
m6_1347 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonSerializerInternalWriter.cs", label="DateTimeOffset dt = (DateTimeOffset)reader.Value", span="2163-2163"];
m6_1350 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2167-2167"];
m6_1348 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(new DateTime(2011, 1, 30, 0, 0, 0, DateTimeKind.Unspecified), dt.DateTime)", span="2164-2164"];
m6_1351 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", span="2146-2146"];
m6_313 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader jsonReader = new JsonTextReader(sr)", span="633-633"];
m6_314 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.None)", span="639-639"];
m6_315 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(0, jsonReader.LineNumber)", span="640-640"];
m6_947 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(decimal)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(decimal)", span="931-931"];
m6_1876 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", span="3013-3013"];
m6_1878 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                MaxDepth = 1\r\n            }", span="3017-3020"];
m6_1879 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="3022-3022"];
m6_1883 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="3030-3030"];
m6_1885 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="3033-3033"];
m6_1887 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="3036-3036"];
m6_1889 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="3039-3039"];
m6_1891 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="3042-3042"];
m6_1895 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="3050-3050"];
m6_1897 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="3053-3053"];
m6_1899 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="3056-3056"];
m6_1901 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="3059-3059"];
m6_1877 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSerializerInternalWriter.cs", label="string json = ''[[[[]]],[[]]]''", span="3015-3015"];
m6_1880 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(0, reader.Depth)", span="3023-3023"];
m6_1881 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSerializerInternalWriter.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''The reader's MaxDepth of 1 has been exceeded. Path '[0]', line 1, position 2.'',\r\n                () => { Assert.IsTrue(reader.Read()); })", span="3025-3027"];
m6_1882 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(1, reader.Depth)", span="3028-3028"];
m6_1884 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(2, reader.Depth)", span="3031-3031"];
m6_1886 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(3, reader.Depth)", span="3034-3034"];
m6_1888 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(3, reader.Depth)", span="3037-3037"];
m6_1890 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(2, reader.Depth)", span="3040-3040"];
m6_1892 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(1, reader.Depth)", span="3043-3043"];
m6_1893 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSerializerInternalWriter.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''The reader's MaxDepth of 1 has been exceeded. Path '[1]', line 1, position 9.'',\r\n                () => { Assert.IsTrue(reader.Read()); })", span="3045-3047"];
m6_1894 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(1, reader.Depth)", span="3048-3048"];
m6_1896 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(2, reader.Depth)", span="3051-3051"];
m6_1898 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(2, reader.Depth)", span="3054-3054"];
m6_1900 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(1, reader.Depth)", span="3057-3057"];
m6_1902 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(0, reader.Depth)", span="3060-3060"];
m6_1903 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSerializerInternalWriter.cs", label="Assert.IsFalse(reader.Read())", span="3062-3062"];
m6_1904 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", span="3013-3013"];
m6_656 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", span="1139-1139"];
m6_657 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", color=green, community=0, file="JsonSerializerInternalWriter.cs", label="0: JsonReader reader = new JsonTextReader(new StringReader(@''[  ''))", span="1141-1141"];
m6_658 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="1142-1142"];
m6_659 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JsonSerializerInternalWriter.cs", label="Assert.IsNull(reader.ReadAsBytes())", span="1144-1144"];
m6_660 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1145-1145"];
m6_661 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", span="1139-1139"];
m6_22 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="147-147"];
m6_951 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="433-433"];
m6_2074 [cluster="System.IO.TextReader.Read(char[], int, int)", file="JsonSerializerInternalWriter.cs", label="Entry System.IO.TextReader.Read(char[], int, int)", span="0-0"];
m6_279 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", span="1216-1216"];
m6_281 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="writer.WriteStartObject()", span="571-571"];
m6_280 [cluster="Newtonsoft.Json.Serialization.IValueProvider.GetValue(object)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.IValueProvider.GetValue(object)", span="44-44"];
m6_282 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="bool isReference = ResolveIsReference(contract, member, collectionContract, containerProperty) ?? HasFlag(Serializer._preserveReferencesHandling, PreserveReferencesHandling.Objects)", span="573-573"];
m6_283 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="isReference && (member == null || member.Writable || HasCreatorParameter(collectionContract, member))", span="575-575"];
m6_284 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="WriteReferenceIdProperty(writer, contract.UnderlyingType, value)", span="577-577"];
m6_285 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="ShouldWriteType(TypeNameHandling.Objects, contract, member, collectionContract, containerProperty)", span="579-579"];
m6_286 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="WriteTypeProperty(writer, contract.UnderlyingType)", span="581-581"];
m6_287 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="569-569"];
m6_288 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasCreatorParameter(Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasCreatorParameter(Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="585-585"];
m6_289 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)", span="596-596"];
m6_290 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasCreatorParameter(Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="JsonObjectContract objectContract = contract as JsonObjectContract", span="587-587"];
m6_291 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasCreatorParameter(Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="objectContract == null", span="588-588"];
m6_292 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasCreatorParameter(Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="return false;", span="590-590"];
m6_293 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasCreatorParameter(Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="return objectContract.CreatorParameters.Contains(property.PropertyName);", span="593-593"];
m6_1546 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", span="2496-2496"];
m6_1548 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2499-2499"];
m6_1549 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2501-2501"];
m6_1550 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2502-2502"];
m6_1547 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonSerializerInternalWriter.cs", label="string json = ''[true ''", span="2498-2498"];
m6_1551 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonSerializerInternalWriter.cs", label="Assert.IsFalse(reader.Read())", span="2503-2503"];
m6_1552 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", span="2496-2496"];
m6_1105 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", span="1795-1795"];
m6_1107 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader jsonReader = new JsonTextReader(s)", span="1798-1798"];
m6_1106 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonSerializerInternalWriter.cs", label="StringReader s = new StringReader(@''[0372, 0xFA, 0XFA]'')", span="1797-1797"];
m6_1108 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(jsonReader.Read())", span="1800-1800"];
m6_1122 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(jsonReader.Read())", span="1818-1818"];
m6_1109 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="1801-1801"];
m6_1110 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonSerializerInternalWriter.cs", label="jsonReader.Read()", span="1803-1803"];
m6_1111 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1804-1804"];
m6_1112 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(typeof(long), jsonReader.ValueType)", span="1805-1805"];
m6_1113 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual((long)250, (long)jsonReader.Value)", span="1806-1806"];
m6_1114 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonSerializerInternalWriter.cs", label="jsonReader.Read()", span="1808-1808"];
m6_1115 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1809-1809"];
m6_1116 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(typeof(long), jsonReader.ValueType)", span="1810-1810"];
m6_1117 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual((long)250, (long)jsonReader.Value)", span="1811-1811"];
m6_1118 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonSerializerInternalWriter.cs", label="jsonReader.Read()", span="1813-1813"];
m6_1119 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1814-1814"];
m6_1120 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(typeof(long), jsonReader.ValueType)", span="1815-1815"];
m6_1121 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual((long)250, (long)jsonReader.Value)", span="1816-1816"];
m6_1123 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="1819-1819"];
m6_1124 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonSerializerInternalWriter.cs", label="Assert.IsFalse(jsonReader.Read())", span="1821-1821"];
m6_1125 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", span="1795-1795"];
m6_56 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="145-145"];
m6_57 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonTextReader.TokenType)", span="146-146"];
m6_59 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", span="115-115"];
m6_58 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonSerializerInternalWriter.cs", label="Assert.IsFalse(jsonTextReader.Read())", span="148-148"];
m6_948 [cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="365-365"];
m6_55 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonSerializerInternalWriter.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Input string '0f' is not a valid integer. Path '[3]', line 5, position 5.'',\r\n                () => jsonTextReader.ReadAsInt32())", span="141-143"];
m6_209 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(''ABC \ufffd\ufffd\u1234 DEF'', ReadString(''ABC \\ud800\\ud800\\u1234 DEF''))", span="417-417"];
m6_166 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="293-293"];
m6_92 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="193-193"];
m6_93 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="195-195"];
m6_94 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.String, jsonTextReader.TokenType)", span="196-196"];
m6_95 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(@''/Date(9467082_PIE_340000-0631)/'', jsonTextReader.Value)", span="197-197"];
m6_96 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="199-199"];
m6_97 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", span="200-200"];
m6_98 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonSerializerInternalWriter.cs", label="Assert.IsFalse(jsonTextReader.Read())", span="202-202"];
m6_99 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", span="181-181"];
m6_131 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", span="227-227"];
m6_1126 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", span="1825-1825"];
m6_1128 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader jsonReader = new JsonTextReader(s)", span="1828-1828"];
m6_1127 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonSerializerInternalWriter.cs", label="StringReader s = new StringReader(@''[0372, 0xFA, 0XFA]'')", span="1827-1827"];
m6_1129 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(jsonReader.Read())", span="1830-1830"];
m6_1143 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(jsonReader.Read())", span="1848-1848"];
m6_1130 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="1831-1831"];
m6_1131 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonSerializerInternalWriter.cs", label="jsonReader.ReadAsInt32()", span="1833-1833"];
m6_1132 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1834-1834"];
m6_1133 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(typeof(int), jsonReader.ValueType)", span="1835-1835"];
m6_1134 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(250, jsonReader.Value)", span="1836-1836"];
m6_1135 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonSerializerInternalWriter.cs", label="jsonReader.ReadAsInt32()", span="1838-1838"];
m6_1136 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1839-1839"];
m6_1137 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(typeof(int), jsonReader.ValueType)", span="1840-1840"];
m6_1138 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(250, jsonReader.Value)", span="1841-1841"];
m6_1139 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonSerializerInternalWriter.cs", label="jsonReader.ReadAsInt32()", span="1843-1843"];
m6_1140 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1844-1844"];
m6_1141 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(typeof(int), jsonReader.ValueType)", span="1845-1845"];
m6_1142 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(250, jsonReader.Value)", span="1846-1846"];
m6_1144 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="1849-1849"];
m6_1145 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonSerializerInternalWriter.cs", label="Assert.IsFalse(jsonReader.Read())", span="1851-1851"];
m6_1146 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", span="1825-1825"];
m6_312 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.PreserveReferencesHandling, Newtonsoft.Json.PreserveReferencesHandling)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.PreserveReferencesHandling, Newtonsoft.Json.PreserveReferencesHandling)", span="627-627"];
m6_316 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="ShouldWriteReference(value, null, contract, collectionContract, containerProperty)", span="639-639"];
m6_317 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="WriteReference(writer, value)", span="641-641"];
m6_318 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="!CheckForCircularReference(writer, value, null, contract, collectionContract, containerProperty)", span="645-645"];
m6_319 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="return;", span="647-647"];
m6_320 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="_serializeStack.Add(value)", span="650-650"];
m6_321 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="652-652"];
m6_322 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(null, writer.Path, ''Started serializing {0} with converter {1}.''.FormatWith(CultureInfo.InvariantCulture, value.GetType(), converter.GetType())), null)", span="654-654"];
m6_323 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="converter.WriteJson(writer, value, GetInternalSerializer())", span="657-657"];
m6_324 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="659-659"];
m6_325 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(null, writer.Path, ''Finished serializing {0} with converter {1}.''.FormatWith(CultureInfo.InvariantCulture, value.GetType(), converter.GetType())), null)", span="661-661"];
m6_326 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="_serializeStack.RemoveAt(_serializeStack.Count - 1)", span="664-664"];
m6_327 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="637-637"];
m6_354 [cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="434-434"];
m6_356 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="OnSerializing(writer, contract, values)", span="734-734"];
m6_357 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="_serializeStack.Add(values)", span="736-736"];
m6_358 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="bool hasWrittenMetadataObject = WriteStartArray(writer, values, contract, member, collectionContract, containerProperty)", span="738-738"];
m6_359 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="SerializeMultidimensionalArray(writer, values, contract, member, writer.Top, CollectionUtils.ArrayEmpty<int>())", span="740-740"];
m6_360 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label=hasWrittenMetadataObject, span="742-742"];
m6_311 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.PreserveReferencesHandling, Newtonsoft.Json.PreserveReferencesHandling)", file="JsonSerializerInternalWriter.cs", label="return ((value & flag) == flag);", span="629-629"];
m6_361 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="writer.WriteEndObject()", span="744-744"];
m6_716 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", span="1251-1251"];
m6_717 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonSerializerInternalWriter.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''{'hi\r\nbye':1}''))", span="1253-1253"];
m6_718 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="1254-1254"];
m6_719 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="1255-1255"];
m6_722 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="1259-1259"];
m6_725 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="1262-1262"];
m6_727 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonSerializerInternalWriter.cs", label="Assert.IsFalse(reader.Read())", span="1264-1264"];
m6_720 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1256-1256"];
m6_721 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(@''hi\r\nbye'', reader.Value)", span="1257-1258"];
m6_723 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1260-1260"];
m6_724 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(1L, reader.Value)", span="1261-1261"];
m6_726 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1263-1263"];
m6_728 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", span="1251-1251"];
m6_1864 [cluster="double.ToString(System.IFormatProvider)", file="JsonSerializerInternalWriter.cs", label="Entry double.ToString(System.IFormatProvider)", span="0-0"];
m6_2065 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", span="537-537"];
m6_521 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="907-907"];
m6_1428 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", span="2284-2284"];
m6_1430 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2288-2288"];
m6_1431 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2290-2290"];
m6_1433 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2293-2293"];
m6_1439 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2301-2301"];
m6_1429 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonSerializerInternalWriter.cs", label="string json = @''{''''decimal'''':-7.92281625142643E+28}''", span="2286-2286"];
m6_1432 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2291-2291"];
m6_1434 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2294-2294"];
m6_1435 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonSerializerInternalWriter.cs", label="decimal? d = reader.ReadAsDecimal()", span="2296-2296"];
m6_1436 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2297-2297"];
m6_1437 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="2298-2298"];
m6_1440 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2302-2302"];
m6_1438 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(-79228162514264300000000000000m, d)", span="2299-2299"];
m6_1441 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", span="2284-2284"];
m6_161 [cluster="System.Collections.Generic.List<T>.Contains<T>(T, System.Collections.IEqualityComparer)", file="JsonSerializerInternalWriter.cs", label="Entry System.Collections.Generic.List<T>.Contains<T>(T, System.Collections.IEqualityComparer)", span="229-229"];
m6_163 [cluster="string.FormatWith(System.IFormatProvider, object)", file="JsonSerializerInternalWriter.cs", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
m6_165 [cluster="Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", span="139-139"];
m6_671 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", span="1160-1160"];
m6_678 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="1199-1199"];
m6_675 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerInternalWriter.cs", label="StringReader sr = new StringReader(newLinesText)", span="1193-1193"];
m6_679 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="1200-1200"];
m6_681 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="1203-1203"];
m6_684 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="1207-1207"];
m6_686 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="1210-1210"];
m6_690 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="1215-1215"];
m6_693 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="1219-1219"];
m6_696 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="1223-1223"];
m6_699 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="1227-1227"];
m6_701 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="1230-1230"];
m6_703 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="1233-1233"];
m6_705 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="1236-1236"];
m6_708 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="1240-1240"];
m6_710 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="1243-1243"];
m6_712 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="1246-1246"];
m6_673 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerInternalWriter.cs", label="string json =\r\n                newLinesText\r\n                + ''{'' + newLinesText\r\n                + ''''' + newLinesText\r\n                + ''name1'' + newLinesText\r\n                + ''''' + newLinesText\r\n                + '':'' + newLinesText\r\n                + ''['' + newLinesText\r\n                + ''new'' + newLinesText\r\n                + ''Date'' + newLinesText\r\n                + ''('' + newLinesText\r\n                + ''1'' + newLinesText\r\n                + '','' + newLinesText\r\n                + ''null'' + newLinesText\r\n                + ''/*'' + newLinesText\r\n                + ''blah comment'' + newLinesText\r\n                + ''*/'' + newLinesText\r\n                + '')'' + newLinesText\r\n                + '','' + newLinesText\r\n                + ''1.1111'' + newLinesText\r\n                + '']'' + newLinesText\r\n                + '','' + newLinesText\r\n                + ''name2'' + newLinesText\r\n                + '':'' + newLinesText\r\n                + ''{'' + newLinesText\r\n                + ''}'' + newLinesText\r\n                + ''}'' + newLinesText", span="1164-1190"];
m6_676 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerInternalWriter.cs", label="sr.ReadLine() != null", span="1194-1194"];
m6_680 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(7, reader.LineNumber)", span="1201-1201"];
m6_682 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(31, reader.LineNumber)", span="1204-1204"];
m6_683 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(newLinesText + ''name1'' + newLinesText, reader.Value)", span="1205-1205"];
m6_685 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(37, reader.LineNumber)", span="1208-1208"];
m6_687 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(55, reader.LineNumber)", span="1211-1211"];
m6_688 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="1212-1212"];
m6_689 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="1213-1213"];
m6_691 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(61, reader.LineNumber)", span="1216-1216"];
m6_692 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(1L, reader.Value)", span="1217-1217"];
m6_694 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(73, reader.LineNumber)", span="1220-1220"];
m6_695 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(null, reader.Value)", span="1221-1221"];
m6_697 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(91, reader.LineNumber)", span="1224-1224"];
m6_698 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(newLinesText + ''blah comment'' + newLinesText, reader.Value)", span="1225-1225"];
m6_700 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(97, reader.LineNumber)", span="1228-1228"];
m6_702 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(109, reader.LineNumber)", span="1231-1231"];
m6_704 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(115, reader.LineNumber)", span="1234-1234"];
m6_706 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(133, reader.LineNumber)", span="1237-1237"];
m6_707 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(''name2'', reader.Value)", span="1238-1238"];
m6_709 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(139, reader.LineNumber)", span="1241-1241"];
m6_711 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(145, reader.LineNumber)", span="1244-1244"];
m6_713 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(151, reader.LineNumber)", span="1247-1247"];
m6_672 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerInternalWriter.cs", label="string newLinesText = StringUtils.CarriageReturn + StringUtils.CarriageReturnLineFeed + StringUtils.LineFeed + StringUtils.CarriageReturnLineFeed + '' '' + StringUtils.CarriageReturn + StringUtils.CarriageReturnLineFeed", span="1162-1162"];
m6_674 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerInternalWriter.cs", label="int count = 0", span="1192-1192"];
m6_677 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerInternalWriter.cs", label="count++", span="1196-1196"];
m6_714 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", span="1160-1160"];
m6_1553 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", span="2507-2507"];
m6_1555 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2510-2510"];
m6_1554 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="JsonSerializerInternalWriter.cs", label="string json = ''new Dat''", span="2509-2509"];
m6_1556 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="JsonSerializerInternalWriter.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unexpected end while parsing constructor. Path '', line 1, position 7.'',\r\n                () => { reader.Read(); })", span="2512-2514"];
m6_1557 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", span="2507-2507"];
m6_1414 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", span="2264-2264"];
m6_1415 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''/* sdf''))", span="2266-2266"];
m6_1416 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="JsonSerializerInternalWriter.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unexpected end while parsing comment. Path '', line 1, position 6.'',\r\n                () => { reader.Read(); })", span="2268-2270"];
m6_1417 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", span="2264-2264"];
m6_2080 [cluster="Newtonsoft.Json.Tests.SlowStream.SlowStream(string, System.Text.Encoding, int)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.SlowStream.SlowStream(string, System.Text.Encoding, int)", span="3307-3307"];
m6_631 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", span="1106-1106"];
m6_632 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="JsonSerializerInternalWriter.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@'''h\''))", span="1108-1108"];
m6_633 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="JsonSerializerInternalWriter.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unterminated string. Expected delimiter: '. Path '', line 1, position 3.'',\r\n                () => { reader.Read(); })", span="1110-1112"];
m6_634 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", span="1106-1106"];
m6_206 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerialized(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonSerializerInternalWriter.cs", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(null, writer.Path, ''Finished serializing {0}''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType)), null)", span="434-434"];
m6_207 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerialized(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonSerializerInternalWriter.cs", label="contract.InvokeOnSerialized(value, Serializer._context)", span="437-437"];
m6_208 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerialized(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerialized(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", span="430-430"];
m6_210 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="OnSerializing(writer, contract, value)", span="442-442"];
m6_211 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="_serializeStack.Add(value)", span="444-444"];
m6_212 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="WriteObjectStart(writer, value, contract, member, collectionContract, containerProperty)", span="446-446"];
m6_213 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="int initialDepth = writer.Top", span="448-448"];
m6_214 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="int index = 0", span="450-450"];
m6_215 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="index < contract.Properties.Count", span="450-450"];
m6_216 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="JsonProperty property = contract.Properties[index]", span="452-452"];
m6_217 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="object memberValue", span="455-455"];
m6_218 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="JsonContract memberContract", span="456-456"];
m6_219 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="!CalculatePropertyValues(writer, value, contract, member, property, out memberContract, out memberValue)", span="458-458"];
m6_945 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(int)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(int)", span="819-819"];
m6_86 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="732-732"];
m6_87 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", span="409-409"];
m6_90 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="JsonSerializerInternalWriter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="829-829"];
m6_506 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", file="JsonSerializerInternalWriter.cs", label="ClearErrorContext()", span="1186-1186"];
m6_508 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", file="JsonSerializerInternalWriter.cs", label="writer.WriteNull()", span="1190-1190"];
m6_509 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", file="JsonSerializerInternalWriter.cs", label="writer.Top > initialDepth", span="1193-1193"];
m6_511 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", span="1184-1184"];
m6_523 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalWriter.cs", label="return true;", span="1220-1220"];
m6_525 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalWriter.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="1225-1225"];
m6_527 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalWriter.cs", label="return isSpecified;", span="1230-1230"];
m6_529 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSerializerInternalWriter.cs", label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", span=""];
m6_532 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="923-923"];
m6_507 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", file="JsonSerializerInternalWriter.cs", label="writer.WriteState == WriteState.Property", span="1188-1188"];
m6_510 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", file="JsonSerializerInternalWriter.cs", label="writer.WriteEnd()", span="1195-1195"];
m6_520 [cluster="System.Predicate<T>.Invoke(T)", file="JsonSerializerInternalWriter.cs", label="Entry System.Predicate<T>.Invoke(T)", span="0-0"];
m6_522 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalWriter.cs", label="property.GetIsSpecified == null", span="1218-1218"];
m6_524 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalWriter.cs", label="bool isSpecified = property.GetIsSpecified(target)", span="1223-1223"];
m6_526 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalWriter.cs", label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(null, writer.Path, ''IsSpecified result for property '{0}' on {1}: {2}''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName, property.DeclaringType, isSpecified)), null)", span="1227-1227"];
m6_528 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", span="1216-1216"];
m6_530 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="920-920"];
m6_531 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(''\0sd\0f\0'', reader.Value)", span="921-921"];
m6_533 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="924-924"];
m6_534 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(''\0sd\0f\0'', reader.Value)", span="925-925"];
m6_535 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSerializerInternalWriter.cs", label="Assert.IsFalse(reader.Read())", span="927-927"];
m6_536 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", span="884-884"];
m6_119 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", span="227-227"];
m6_820 [cluster="long.ToString()", file="JsonSerializerInternalWriter.cs", label="Entry long.ToString()", span="0-0"];
m6_2 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="59-59"];
m6_3 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="61-61"];
m6_4 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", span="62-62"];
m6_5 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="64-64"];
m6_7 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="67-67"];
m6_8 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Integer, jsonTextReader.TokenType)", span="68-68"];
m6_9 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="70-70"];
m6_10 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="71-71"];
m6_12 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Integer, jsonTextReader.TokenType)", span="74-74"];
m6_13 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(typeof(BigInteger), jsonTextReader.ValueType)", span="75-75"];
m6_6 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="65-65"];
m6_11 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="73-73"];
m6_14 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(BigInteger.Parse(''333333333333333333333333333333333333333''), jsonTextReader.Value)", span="76-76"];
m6_15 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="78-78"];
m6_16 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", span="79-79"];
m6_1220 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", span="1969-1969"];
m6_1222 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1973-1973"];
m6_1223 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="1978-1978"];
m6_1225 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="1981-1981"];
m6_1228 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="1985-1985"];
m6_1231 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="1989-1989"];
m6_1221 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonSerializerInternalWriter.cs", label="string json = @''{''''Message'''':''''Hi,I\u0092ve send you smth''''}''", span="1971-1971"];
m6_1224 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1979-1979"];
m6_1226 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1982-1982"];
m6_1227 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(''Message'', reader.Value)", span="1983-1983"];
m6_1229 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1986-1986"];
m6_1230 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(@''Hi,I'' + '\u0092' + ''ve send you smth'', reader.Value)", span="1987-1987"];
m6_1232 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1990-1990"];
m6_1233 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonSerializerInternalWriter.cs", label="Assert.IsFalse(reader.Read())", span="1992-1992"];
m6_1234 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", span="1969-1969"];
m6_2029 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", span="3280-3280"];
m6_2066 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", file="JsonSerializerInternalWriter.cs", label="_inner = inner", span="3282-3282"];
m6_2067 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", span="3280-3280"];
m6_1865 [cluster="System.Console.WriteLine(string)", file="JsonSerializerInternalWriter.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m6_942 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(bool)", span="875-875"];
m6_227 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="IEnumerable<KeyValuePair<object, object>> extensionData = contract.ExtensionDataGetter?.Invoke(value)", span="479-479"];
m6_645 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsBytes()", span="383-383"];
m6_1613 [cluster="Unk.>", file="JsonSerializerInternalWriter.cs", label="Entry Unk.>", span=""];
m6_592 [cluster="BigInteger.cstr", file="JsonSerializerInternalWriter.cs", label="Entry BigInteger.cstr", span=""];
m6_819 [cluster="int.ToString()", file="JsonSerializerInternalWriter.cs", label="Entry int.ToString()", span="0-0"];
m6_503 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(int)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(int)", span="379-379"];
m6_579 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", span="1013-1013"];
m6_581 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="1017-1017"];
m6_587 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonSerializerInternalWriter.cs", label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="1025-1025"];
m6_580 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonSerializerInternalWriter.cs", label="BigInteger i = new BigInteger(long.MaxValue)", span="1015-1015"];
m6_582 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonSerializerInternalWriter.cs", label="reader.Read()", span="1018-1018"];
m6_583 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(typeof(long), reader.ValueType)", span="1019-1019"];
m6_586 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonSerializerInternalWriter.cs", label="BigInteger total = i + j", span="1023-1023"];
m6_588 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonSerializerInternalWriter.cs", label="reader.Read()", span="1026-1026"];
m6_589 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(typeof(BigInteger), reader.ValueType)", span="1028-1028"];
m6_584 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonSerializerInternalWriter.cs", label="int j = 1", span="1021-1021"];
m6_585 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonSerializerInternalWriter.cs", label="j < 1000", span="1021-1021"];
m6_590 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonSerializerInternalWriter.cs", label="j++", span="1021-1021"];
m6_591 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", span="1013-1013"];
m6_24 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="301-301"];
m6_26 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetInternalSerializer()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetInternalSerializer()", span="105-105"];
m6_243 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="OnSerialized(writer, contract, value)", span="517-517"];
m6_608 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", span="1054-1054"];
m6_610 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1071-1071"];
m6_613 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="1078-1078"];
m6_615 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="1081-1081"];
m6_609 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonSerializerInternalWriter.cs", label="string json = @''\r\n{\r\n  ''''description'''': ''''A person'''',\r\n  ''''type'''': ''''object'''',\r\n  ''''properties'''':\r\n  {\r\n    ''''name'''': {''''type'''':''''string''''},\r\n    ''''hobbies'''': {\r\n      ''''type'''': ''''array'''',\r\n      ''''items'''': {''''type'''':''''string''''}\r\n    }\r\n  }\r\n}\r\n''", span="1056-1069"];
m6_611 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonSerializerInternalWriter.cs", label="int i = 0", span="1076-1076"];
m6_616 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1082-1082"];
m6_617 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(''type'', reader.Value)", span="1083-1083"];
m6_612 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonSerializerInternalWriter.cs", label="i < 14", span="1076-1076"];
m6_614 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonSerializerInternalWriter.cs", label="i++", span="1076-1076"];
m6_618 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", span="1054-1054"];
m6_952 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", span="650-650"];
m6_220 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", span="442-442"];
m6_221 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JsonSerializerInternalWriter.cs", label="MemoryStream ms = new MemoryStream(Encoding.UTF8.GetBytes(@'''''''' + input + @''''''''))", span="444-444"];
m6_223 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JsonSerializerInternalWriter.cs", label="reader.Read()", span="447-447"];
m6_224 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JsonSerializerInternalWriter.cs", label="string s = (string)reader.Value", span="449-449"];
m6_226 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", span="442-442"];
m6_222 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(ms))", span="446-446"];
m6_225 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JsonSerializerInternalWriter.cs", label="return s;", span="451-451"];
m6_228 [cluster="System.Text.Encoding.GetBytes(string)", file="JsonSerializerInternalWriter.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m6_949 [cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="772-772"];
m6_1001 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", span="1644-1644"];
m6_1003 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerInternalWriter.cs", label="JsonReader jsonReader = new JsonTextReader(new StringReader(json))", span="1649-1649"];
m6_1004 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerInternalWriter.cs", label="jsonReader.Read()", span="1651-1651"];
m6_1006 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerInternalWriter.cs", label="jsonReader.Read()", span="1654-1654"];
m6_1009 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerInternalWriter.cs", label="jsonReader.Read()", span="1658-1658"];
m6_1012 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerInternalWriter.cs", label="jsonReader.Read()", span="1662-1662"];
m6_1015 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerInternalWriter.cs", label="jsonReader.Read()", span="1666-1666"];
m6_1018 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerInternalWriter.cs", label="jsonReader.Read()", span="1670-1670"];
m6_1021 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerInternalWriter.cs", label="jsonReader.Read()", span="1674-1674"];
m6_1024 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerInternalWriter.cs", label="jsonReader.Read()", span="1678-1678"];
m6_1027 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerInternalWriter.cs", label="jsonReader.Read()", span="1682-1682"];
m6_1030 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerInternalWriter.cs", label="jsonReader.Read()", span="1686-1686"];
m6_1033 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerInternalWriter.cs", label="jsonReader.Read()", span="1690-1690"];
m6_1036 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerInternalWriter.cs", label="jsonReader.Read()", span="1694-1694"];
m6_1039 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerInternalWriter.cs", label="jsonReader.Read()", span="1698-1698"];
m6_1042 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerInternalWriter.cs", label="jsonReader.Read()", span="1702-1702"];
m6_1045 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerInternalWriter.cs", label="jsonReader.Read()", span="1706-1706"];
m6_1048 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerInternalWriter.cs", label="jsonReader.Read()", span="1710-1710"];
m6_1051 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerInternalWriter.cs", label="jsonReader.Read()", span="1714-1714"];
m6_1054 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerInternalWriter.cs", label="jsonReader.Read()", span="1718-1718"];
m6_1057 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerInternalWriter.cs", label="jsonReader.Read()", span="1722-1722"];
m6_1060 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerInternalWriter.cs", label="jsonReader.Read()", span="1726-1726"];
m6_1002 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerInternalWriter.cs", label="string json =\r\n                @''[0.0,0.0,0.1,1.0,1.000001,1E-06,4.94065645841247E-324,Infinity,-Infinity,NaN,1.7976931348623157E+308,-1.7976931348623157E+308,Infinity,-Infinity,NaN,0e-10,0.25e-5,0.3e10]''", span="1646-1647"];
m6_1005 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="1652-1652"];
m6_1007 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1655-1655"];
m6_1008 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(0.0, jsonReader.Value)", span="1656-1656"];
m6_1010 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1659-1659"];
m6_1011 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(0.0, jsonReader.Value)", span="1660-1660"];
m6_1013 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1663-1663"];
m6_1014 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(0.1, jsonReader.Value)", span="1664-1664"];
m6_1016 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1667-1667"];
m6_1017 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(1.0, jsonReader.Value)", span="1668-1668"];
m6_1019 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1671-1671"];
m6_1020 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(1.000001, jsonReader.Value)", span="1672-1672"];
m6_1022 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1675-1675"];
m6_1023 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(1E-06, jsonReader.Value)", span="1676-1676"];
m6_1025 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1679-1679"];
m6_1026 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(4.94065645841247E-324, jsonReader.Value)", span="1680-1680"];
m6_1028 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1683-1683"];
m6_1029 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(double.PositiveInfinity, jsonReader.Value)", span="1684-1684"];
m6_1031 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1687-1687"];
m6_1032 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(double.NegativeInfinity, jsonReader.Value)", span="1688-1688"];
m6_1034 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1691-1691"];
m6_1035 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(double.NaN, jsonReader.Value)", span="1692-1692"];
m6_1037 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1695-1695"];
m6_1038 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(double.MaxValue, jsonReader.Value)", span="1696-1696"];
m6_1040 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1699-1699"];
m6_1041 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(double.MinValue, jsonReader.Value)", span="1700-1700"];
m6_1043 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1703-1703"];
m6_1044 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(double.PositiveInfinity, jsonReader.Value)", span="1704-1704"];
m6_1046 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1707-1707"];
m6_1047 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(double.NegativeInfinity, jsonReader.Value)", span="1708-1708"];
m6_1049 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1711-1711"];
m6_1050 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(double.NaN, jsonReader.Value)", span="1712-1712"];
m6_1052 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1715-1715"];
m6_1053 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(0d, jsonReader.Value)", span="1716-1716"];
m6_1055 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1719-1719"];
m6_1056 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(0.0000025d, jsonReader.Value)", span="1720-1720"];
m6_1058 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1723-1723"];
m6_1059 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(3000000000d, jsonReader.Value)", span="1724-1724"];
m6_1061 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="1727-1727"];
m6_1062 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", span="1644-1644"];
m6_1262 [cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", file="JsonSerializerInternalWriter.cs", label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", span="0-0"];
m6_1199 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", span="1938-1938"];
m6_1200 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[/*hi*/1/*hi*/,2/*hi*/]''))", span="1940-1940"];
m6_1201 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonSerializerInternalWriter.cs", label="byte[] data = reader.ReadAsBytes()", span="1942-1942"];
m6_1202 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(2, data.Length)", span="1943-1943"];
m6_1203 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(1, data[0])", span="1944-1944"];
m6_1204 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(2, data[1])", span="1945-1945"];
m6_1205 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", span="1938-1938"];
m6_1773 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", span="2854-2854"];
m6_1775 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2858-2858"];
m6_1774 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="JsonSerializerInternalWriter.cs", label="string json = @''/''", span="2856-2856"];
m6_1776 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="JsonSerializerInternalWriter.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unexpected end while parsing comment. Path '', line 1, position 1.'',\r\n                () => { reader.Read(); })", span="2860-2862"];
m6_1777 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", span="2854-2854"];
m6_1160 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", span="1876-1876"];
m6_1161 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''''))", span="1878-1878"];
m6_1162 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="JsonSerializerInternalWriter.cs", label="Assert.IsNull(reader.ReadAsBytes())", span="1880-1880"];
m6_1163 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1881-1881"];
m6_1164 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", span="1876-1876"];
m6_20 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(BigInteger.Parse(''333333333333333333333333333333333333333''), i)", span="85-85"];
m6_115 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", span="328-328"];
m6_1172 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", span="1896-1896"];
m6_1173 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''''))", span="1898-1898"];
m6_1174 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="JsonSerializerInternalWriter.cs", label="Assert.IsNull(reader.ReadAsDateTimeOffset())", span="1900-1900"];
m6_1175 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1901-1901"];
m6_1176 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", span="1896-1896"];
m6_547 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", span="967-967"];
m6_549 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="971-971"];
m6_548 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonSerializerInternalWriter.cs", label="long i = int.MaxValue", span="969-969"];
m6_550 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonSerializerInternalWriter.cs", label="reader.Read()", span="972-972"];
m6_551 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(typeof(long), reader.ValueType)", span="973-973"];
m6_555 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonSerializerInternalWriter.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                    ''JSON integer '' + total + '' is too large or small for an Int32. Path '', line 1, position 10.'',\r\n                    () =>\r\n                    {\r\n                        reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)));\r\n                        reader.ReadAsInt32();\r\n                    })", span="978-984"];
m6_554 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonSerializerInternalWriter.cs", label="long total = j + i", span="977-977"];
m6_552 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonSerializerInternalWriter.cs", label="int j = 1", span="975-975"];
m6_556 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonSerializerInternalWriter.cs", label="j++", span="975-975"];
m6_553 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonSerializerInternalWriter.cs", label="j < 1000", span="975-975"];
m6_557 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", span="967-967"];
m6_1952 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", span="3125-3125"];
m6_1954 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3129-3129"];
m6_1964 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerInternalWriter.cs", label="reader = new JsonTextReader(new StringReader(json))", span="3142-3142"];
m6_1974 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerInternalWriter.cs", label="reader = new JsonTextReader(new StringReader(json))", span="3155-3155"];
m6_1984 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerInternalWriter.cs", label="reader = new JsonTextReader(new StringReader(json))", span="3168-3168"];
m6_1994 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerInternalWriter.cs", label="reader = new JsonTextReader(new StringReader(json))", span="3181-3181"];
m6_1956 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="3132-3132"];
m6_1957 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="3133-3133"];
m6_1960 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="3136-3136"];
m6_1963 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="3139-3139"];
m6_1966 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="3145-3145"];
m6_1967 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="3146-3146"];
m6_1970 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="3149-3149"];
m6_1973 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="3152-3152"];
m6_1976 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="3158-3158"];
m6_1977 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="3159-3159"];
m6_1980 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="3162-3162"];
m6_1983 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="3165-3165"];
m6_1986 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="3171-3171"];
m6_1993 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="3178-3178"];
m6_1996 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="3184-3184"];
m6_2003 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="3191-3191"];
m6_1953 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerInternalWriter.cs", label="string json = @''[''''1970-01-01T00:00:00Z'''',''''\/Date(0)\/'''']''", span="3127-3127"];
m6_1955 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerInternalWriter.cs", label="reader.DateParseHandling = Json.DateParseHandling.DateTime", span="3130-3130"];
m6_1958 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="3134-3134"];
m6_1959 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="3135-3135"];
m6_1961 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="3137-3137"];
m6_1962 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="3138-3138"];
m6_1965 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerInternalWriter.cs", label="reader.DateParseHandling = Json.DateParseHandling.DateTimeOffset", span="3143-3143"];
m6_1968 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="3147-3147"];
m6_1969 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="3148-3148"];
m6_1971 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="3150-3150"];
m6_1972 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="3151-3151"];
m6_1975 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerInternalWriter.cs", label="reader.DateParseHandling = Json.DateParseHandling.None", span="3156-3156"];
m6_1978 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(@''1970-01-01T00:00:00Z'', reader.Value)", span="3160-3160"];
m6_1979 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(typeof(string), reader.ValueType)", span="3161-3161"];
m6_1981 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(@''/Date(0)/'', reader.Value)", span="3163-3163"];
m6_1982 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(typeof(string), reader.ValueType)", span="3164-3164"];
m6_1985 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerInternalWriter.cs", label="reader.DateParseHandling = Json.DateParseHandling.DateTime", span="3169-3169"];
m6_1987 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerInternalWriter.cs", label="reader.ReadAsDateTimeOffset()", span="3172-3172"];
m6_1988 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="3173-3173"];
m6_1989 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="3174-3174"];
m6_1990 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerInternalWriter.cs", label="reader.ReadAsDateTimeOffset()", span="3175-3175"];
m6_1991 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="3176-3176"];
m6_1992 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="3177-3177"];
m6_1995 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerInternalWriter.cs", label="reader.DateParseHandling = Json.DateParseHandling.DateTimeOffset", span="3182-3182"];
m6_1997 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerInternalWriter.cs", label="reader.ReadAsDateTime()", span="3185-3185"];
m6_1998 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="3186-3186"];
m6_1999 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="3187-3187"];
m6_2000 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerInternalWriter.cs", label="reader.ReadAsDateTime()", span="3188-3188"];
m6_2001 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="3189-3189"];
m6_2002 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="3190-3190"];
m6_2004 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", span="3125-3125"];
m6_1468 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", span="2359-2359"];
m6_1470 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2372-2372"];
m6_1473 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2379-2379"];
m6_1475 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2382-2382"];
m6_1469 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonSerializerInternalWriter.cs", label="string json = @''/*comment*/ { /*comment*/\r\n        ''''Name'''': /*comment*/ ''''Apple'''' /*comment*/, /*comment*/\r\n        ''''ExpiryDate'''': ''''\/Date(1230422400000)\/'''',\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': /*comment*/ [ /*comment*/\r\n          ''''Small'''', /*comment*/\r\n          ''''Medium'''' /*comment*/,\r\n          /*comment*/ ''''Large''''\r\n        /*comment*/ ] /*comment*/\r\n      } /*comment*/''", span="2361-2370"];
m6_1471 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonSerializerInternalWriter.cs", label="int i = 0", span="2377-2377"];
m6_1476 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2383-2383"];
m6_1477 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonSerializerInternalWriter.cs", label="Assert.IsFalse(reader.Read())", span="2385-2385"];
m6_1472 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonSerializerInternalWriter.cs", label="i < 26", span="2377-2377"];
m6_1474 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonSerializerInternalWriter.cs", label="i++", span="2377-2377"];
m6_1478 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", span="2359-2359"];
m6_1147 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", span="1855-1855"];
m6_1148 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[}''))", span="1857-1857"];
m6_1149 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="JsonSerializerInternalWriter.cs", label="reader.Read()", span="1859-1859"];
m6_1150 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="JsonSerializerInternalWriter.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unexpected character encountered while parsing value: }. Path '', line 1, position 1.'',\r\n                () => { reader.Read(); })", span="1861-1863"];
m6_1151 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", span="1855-1855"];
m6_944 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="407-407"];
m6_252 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", span="506-506"];
m6_1321 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", span="2124-2124"];
m6_1323 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2128-2128"];
m6_1324 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2130-2130"];
m6_1326 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2133-2133"];
m6_1332 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2141-2141"];
m6_1322 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonSerializerInternalWriter.cs", label="string json = @''{''''Offset'''':''''2011-08-01T21:25Z''''}''", span="2126-2126"];
m6_1325 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2131-2131"];
m6_1327 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2134-2134"];
m6_1328 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonSerializerInternalWriter.cs", label="reader.ReadAsDateTimeOffset()", span="2136-2136"];
m6_1329 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2137-2137"];
m6_1330 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2138-2138"];
m6_1331 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2011, 8, 1, 21, 25, 0, DateTimeKind.Utc), TimeSpan.Zero), reader.Value)", span="2139-2139"];
m6_1333 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2142-2142"];
m6_1334 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", span="2124-2124"];
m6_27 [cluster="Unk.Parse", file="JsonSerializerInternalWriter.cs", label="Entry Unk.Parse", span=""];
m6_253 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonSerializerInternalWriter.cs", label="string json = @''{''''DefaultConverter'''':new Date(0, ''''hi''''),''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}''", span="508-508"];
m6_128 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="242-242"];
m6_940 [cluster="System.IO.StringWriter.StringWriter(System.Text.StringBuilder)", file="JsonSerializerInternalWriter.cs", label="Entry System.IO.StringWriter.StringWriter(System.Text.StringBuilder)", span="0-0"];
m6_53 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonSerializerInternalWriter.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Input string '3.3' is not a valid integer. Path '[1]', line 3, position 6.'',\r\n                () => jsonTextReader.ReadAsInt32())", span="133-135"];
m6_46 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="writer.WriteEndObject()", span="139-139"];
m6_792 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", span="1386-1386"];
m6_794 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSerializerInternalWriter.cs", label="reader = new JsonTextReader(new StringReader(''1''))", span="1390-1390"];
m6_796 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSerializerInternalWriter.cs", label="reader = new JsonTextReader(new StringReader(''-1''))", span="1393-1393"];
m6_798 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSerializerInternalWriter.cs", label="reader = new JsonTextReader(new StringReader(''0''))", span="1396-1396"];
m6_800 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSerializerInternalWriter.cs", label="reader = new JsonTextReader(new StringReader(''-0''))", span="1399-1399"];
m6_802 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSerializerInternalWriter.cs", label="reader = new JsonTextReader(new StringReader(int.MaxValue.ToString()))", span="1402-1402"];
m6_804 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSerializerInternalWriter.cs", label="reader = new JsonTextReader(new StringReader(int.MinValue.ToString()))", span="1405-1405"];
m6_806 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSerializerInternalWriter.cs", label="reader = new JsonTextReader(new StringReader(long.MaxValue.ToString()))", span="1408-1408"];
m6_808 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSerializerInternalWriter.cs", label="reader = new JsonTextReader(new StringReader(''9999999999999999999999999999999999999999999999999999999999999999999999999999asdasdasd''))", span="1411-1411"];
m6_810 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSerializerInternalWriter.cs", label="reader = new JsonTextReader(new StringReader(''1E-06''))", span="1414-1414"];
m6_812 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSerializerInternalWriter.cs", label="reader = new JsonTextReader(new StringReader(''1.1''))", span="1417-1417"];
m6_814 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSerializerInternalWriter.cs", label="reader = new JsonTextReader(new StringReader(''''))", span="1420-1420"];
m6_816 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSerializerInternalWriter.cs", label="reader = new JsonTextReader(new StringReader(''-''))", span="1423-1423"];
m6_793 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = null", span="1388-1388"];
m6_795 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(1, reader.ReadAsInt32())", span="1391-1391"];
m6_797 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(-1, reader.ReadAsInt32())", span="1394-1394"];
m6_799 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(0, reader.ReadAsInt32())", span="1397-1397"];
m6_801 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(0, reader.ReadAsInt32())", span="1400-1400"];
m6_803 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(int.MaxValue, reader.ReadAsInt32())", span="1403-1403"];
m6_805 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(int.MinValue, reader.ReadAsInt32())", span="1406-1406"];
m6_807 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSerializerInternalWriter.cs", label="ExceptionAssert.Throws<JsonReaderException>(''JSON integer 9223372036854775807 is too large or small for an Int32. Path '', line 1, position 19.'', () => reader.ReadAsInt32())", span="1409-1409"];
m6_809 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSerializerInternalWriter.cs", label="ExceptionAssert.Throws<JsonReaderException>(''Input string '9999999999999999999999999999999999999999999999999999999999999999999999999999a' is not a valid integer. Path '', line 1, position 77.'', () => reader.ReadAsInt32())", span="1412-1412"];
m6_811 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSerializerInternalWriter.cs", label="ExceptionAssert.Throws<JsonReaderException>(''Input string '1E-06' is not a valid integer. Path '', line 1, position 5.'', () => reader.ReadAsInt32())", span="1415-1415"];
m6_813 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSerializerInternalWriter.cs", label="ExceptionAssert.Throws<JsonReaderException>(''Input string '1.1' is not a valid integer. Path '', line 1, position 3.'', () => reader.ReadAsInt32())", span="1418-1418"];
m6_815 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(null, reader.ReadAsInt32())", span="1421-1421"];
m6_817 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSerializerInternalWriter.cs", label="ExceptionAssert.Throws<JsonReaderException>(''Input string '-' is not a valid integer. Path '', line 1, position 1.'', () => reader.ReadAsInt32())", span="1424-1424"];
m6_818 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", span="1386-1386"];
m6_941 [cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="373-373"];
m6_2007 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", span="355-355"];
m6_52 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonSerializerInternalWriter.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''JSON integer 333333333333333333333333333333333333333 is too large or small for an Int32. Path '[0]', line 2, position 42.'',\r\n                () => jsonTextReader.ReadAsInt32())", span="129-131"];
m6_302 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", span="604-604"];
m6_304 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="608-608"];
m6_305 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="JsonSerializerInternalWriter.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Additional text encountered after finished reading JSON content: a. Path '', line 1, position 5.'',\r\n                () =>\r\n                {\r\n                    while (reader.Read())\r\n                    {\r\n                    }\r\n                })", span="610-617"];
m6_306 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", span="604-604"];
m6_303 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="JsonSerializerInternalWriter.cs", label="string json = @'''hi' a''", span="606-606"];
m6_1155 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", span="1867-1867"];
m6_1156 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''''))", span="1869-1869"];
m6_1157 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="JsonSerializerInternalWriter.cs", label="Assert.IsNull(reader.ReadAsDecimal())", span="1871-1871"];
m6_1158 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1872-1872"];
m6_1159 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", span="1867-1867"];
m6_1265 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", span="2040-2040"];
m6_1267 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2044-2044"];
m6_1268 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2046-2046"];
m6_1270 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2049-2049"];
m6_1276 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2057-2057"];
m6_1266 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonSerializerInternalWriter.cs", label="string json = @''{''''Offset'''':''''\/Date(946706400000-0600)\/''''}''", span="2042-2042"];
m6_1269 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2047-2047"];
m6_1271 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2050-2050"];
m6_1272 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonSerializerInternalWriter.cs", label="reader.ReadAsDateTimeOffset()", span="2052-2052"];
m6_1273 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2053-2053"];
m6_1274 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2054-2054"];
m6_1275 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(-6)), reader.Value)", span="2055-2055"];
m6_1277 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2058-2058"];
m6_1278 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", span="2040-2040"];
m6_867 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", span="1462-1462"];
m6_869 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonSerializerInternalWriter.cs", label="reader = new JsonTextReader(new StringReader(''1.1''))", span="1466-1466"];
m6_873 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonSerializerInternalWriter.cs", label="reader = new JsonTextReader(new StringReader(''-1.1''))", span="1471-1471"];
m6_877 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonSerializerInternalWriter.cs", label="reader = new JsonTextReader(new StringReader(''0.0''))", span="1476-1476"];
m6_881 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonSerializerInternalWriter.cs", label="reader = new JsonTextReader(new StringReader(''-0.0''))", span="1481-1481"];
m6_885 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonSerializerInternalWriter.cs", label="reader = new JsonTextReader(new StringReader(''9999999999999999999999999999999999999999999999999999999999999999999999999999asdasdasd''))", span="1486-1486"];
m6_887 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonSerializerInternalWriter.cs", label="reader = new JsonTextReader(new StringReader(''1E-06''))", span="1489-1489"];
m6_891 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonSerializerInternalWriter.cs", label="reader = new JsonTextReader(new StringReader(''''))", span="1494-1494"];
m6_893 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonSerializerInternalWriter.cs", label="reader = new JsonTextReader(new StringReader(''-''))", span="1497-1497"];
m6_870 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="1467-1467"];
m6_874 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="1472-1472"];
m6_878 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="1477-1477"];
m6_882 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="1482-1482"];
m6_888 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="1490-1490"];
m6_868 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = null", span="1464-1464"];
m6_871 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1468-1468"];
m6_872 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(1.1d, reader.Value)", span="1469-1469"];
m6_875 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1473-1473"];
m6_876 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(-1.1d, reader.Value)", span="1474-1474"];
m6_879 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1478-1478"];
m6_880 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(0.0d, reader.Value)", span="1479-1479"];
m6_883 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1483-1483"];
m6_884 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(-0.0d, reader.Value)", span="1484-1484"];
m6_886 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonSerializerInternalWriter.cs", label="ExceptionAssert.Throws<JsonReaderException>(''Input string '9999999999999999999999999999999999999999999999999999999999999999999999999999a' is not a valid number. Path '', line 1, position 77.'', () => reader.Read())", span="1487-1487"];
m6_889 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1491-1491"];
m6_890 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(0.000001d, reader.Value)", span="1492-1492"];
m6_892 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonSerializerInternalWriter.cs", label="Assert.IsFalse(reader.Read())", span="1495-1495"];
m6_894 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonSerializerInternalWriter.cs", label="ExceptionAssert.Throws<JsonReaderException>(''Input string '-' is not a valid number. Path '', line 1, position 1.'', () => reader.Read())", span="1498-1498"];
m6_895 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", span="1462-1462"];
m6_130 [cluster="Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", span="172-172"];
m6_744 [cluster="Unk.AreEquivalent", file="JsonSerializerInternalWriter.cs", label="Entry Unk.AreEquivalent", span=""];
m6_1911 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", span="3066-3066"];
m6_1913 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="3070-3070"];
m6_1914 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="3072-3072"];
m6_1915 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="3074-3074"];
m6_1917 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="3077-3077"];
m6_1920 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="3081-3081"];
m6_1923 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="3085-3085"];
m6_1926 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="3089-3089"];
m6_1929 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="3093-3093"];
m6_1932 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="3097-3097"];
m6_1935 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="3101-3101"];
m6_1938 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="3105-3105"];
m6_1941 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="3109-3109"];
m6_1944 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="3113-3113"];
m6_1947 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="3117-3117"];
m6_1950 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="3121-3121"];
m6_1912 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerInternalWriter.cs", label="string json = ''[false, true, true, false, 'test!', 1.11, 0e-10, 0E-10, 0.25e-5, 0.3e10, 6.0221418e23, 'Purple\\r \\n monkey\\'s:\\tdishwasher']''", span="3068-3068"];
m6_1916 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(false, reader.Value)", span="3075-3075"];
m6_1918 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="3078-3078"];
m6_1919 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(true, reader.Value)", span="3079-3079"];
m6_1921 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="3082-3082"];
m6_1922 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(true, reader.Value)", span="3083-3083"];
m6_1924 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="3086-3086"];
m6_1925 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(false, reader.Value)", span="3087-3087"];
m6_1927 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="3090-3090"];
m6_1928 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(''test!'', reader.Value)", span="3091-3091"];
m6_1930 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3094-3094"];
m6_1931 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(1.11d, reader.Value)", span="3095-3095"];
m6_1933 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3098-3098"];
m6_1934 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(0d, reader.Value)", span="3099-3099"];
m6_1936 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3102-3102"];
m6_1937 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(0d, reader.Value)", span="3103-3103"];
m6_1939 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3106-3106"];
m6_1940 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(0.0000025d, reader.Value)", span="3107-3107"];
m6_1942 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3110-3110"];
m6_1943 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(3000000000d, reader.Value)", span="3111-3111"];
m6_1945 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3114-3114"];
m6_1946 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(602214180000000000000000d, reader.Value)", span="3115-3115"];
m6_1948 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="3118-3118"];
m6_1949 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(reader.Value, ''Purple\r \n monkey's:\tdishwasher'')", span="3119-3119"];
m6_1951 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", span="3066-3066"];
m6_1467 [cluster="System.DateTime.DateTime(long)", file="JsonSerializerInternalWriter.cs", label="Entry System.DateTime.DateTime(long)", span="0-0"];
m6_537 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", span="931-931"];
m6_539 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="952-952"];
m6_538 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonSerializerInternalWriter.cs", label="string json = @''[\r\n  {\r\n    ''''$id'''': ''''1'''',\r\n    ''''Name'''': ''''e1'''',\r\n    ''''Manager'''': null\r\n  },\r\n  {\r\n    ''''$id'''': ''''2'''',\r\n    ''''Name'''': ''''e2'''',\r\n    ''''Manager'''': null\r\n  },\r\n  {\r\n    ''''$ref'''': ''''1''''\r\n  },\r\n  {\r\n    ''''$ref'''': ''''2''''\r\n  }\r\n]''", span="933-950"];
m6_540 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonSerializerInternalWriter.cs", label="int i = 0", span="957-957"];
m6_542 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonSerializerInternalWriter.cs", label="reader.Read()", span="959-959"];
m6_544 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonSerializerInternalWriter.cs", label="reader.Read()", span="962-962"];
m6_545 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="963-963"];
m6_541 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonSerializerInternalWriter.cs", label="i < 15", span="957-957"];
m6_543 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonSerializerInternalWriter.cs", label="i++", span="957-957"];
m6_546 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", span="931-931"];
m6_204 [cluster="object.ToString()", file="JsonSerializerInternalWriter.cs", label="Entry object.ToString()", span="0-0"];
m6_1264 [cluster="System.TimeSpan.FromHours(double)", file="JsonSerializerInternalWriter.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m6_505 [cluster="System.IO.StringWriter.ToString()", file="JsonSerializerInternalWriter.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m6_0 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", span="52-52"];
m6_1 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonSerializerInternalWriter.cs", label="string json = @''{\r\n    ParentId: 1,\r\n    ChildId: 333333333333333333333333333333333333333,\r\n}''", span="54-57"];
m6_1305 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", span="2102-2102"];
m6_1307 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2106-2106"];
m6_1308 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2108-2108"];
m6_1310 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2111-2111"];
m6_1316 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2119-2119"];
m6_1306 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonSerializerInternalWriter.cs", label="string json = @''{''''Offset'''':''''\/Date(946708260000-0631)\/''''}''", span="2104-2104"];
m6_1309 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2109-2109"];
m6_1311 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2112-2112"];
m6_1312 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonSerializerInternalWriter.cs", label="reader.ReadAsDateTimeOffset()", span="2114-2114"];
m6_1313 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2115-2115"];
m6_1314 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2116-2116"];
m6_1315 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(-6).Add(TimeSpan.FromMinutes(-31))), reader.Value)", span="2117-2117"];
m6_1317 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2120-2120"];
m6_1318 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", span="2102-2102"];
m6_762 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", span="1310-1310"];
m6_765 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonSerializerInternalWriter.cs", label="JsonReader jsonReader = new JsonTextReader(sr)", span="1316-1316"];
m6_764 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonSerializerInternalWriter.cs", label="StringReader sr = new StringReader(input)", span="1314-1314"];
m6_767 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonSerializerInternalWriter.cs", label="jsonReader.Read()", span="1320-1320"];
m6_770 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonSerializerInternalWriter.cs", label="jsonReader.Read()", span="1324-1324"];
m6_773 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonSerializerInternalWriter.cs", label="jsonReader.Read()", span="1328-1328"];
m6_778 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonSerializerInternalWriter.cs", label="jsonReader.Read()", span="1334-1334"];
m6_766 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(0, jsonReader.Depth)", span="1318-1318"];
m6_768 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.StartObject, jsonReader.TokenType)", span="1321-1321"];
m6_769 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(0, jsonReader.Depth)", span="1322-1322"];
m6_771 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonReader.TokenType)", span="1325-1325"];
m6_772 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(1, jsonReader.Depth)", span="1326-1326"];
m6_774 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.String)", span="1329-1329"];
m6_775 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(''Purple\r \n monkey's:\tdishwasher'', jsonReader.Value)", span="1330-1330"];
m6_776 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual('\'', jsonReader.QuoteChar)", span="1331-1331"];
m6_777 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(1, jsonReader.Depth)", span="1332-1332"];
m6_779 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.EndObject, jsonReader.TokenType)", span="1335-1335"];
m6_780 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(0, jsonReader.Depth)", span="1336-1336"];
m6_763 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonSerializerInternalWriter.cs", label="string input = ''{value:'Purple\\r \\n monkey\\'s:\\tdishwasher'}''", span="1312-1312"];
m6_781 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", span="1310-1310"];
m6_1400 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", span="2244-2244"];
m6_1401 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''nulz''))", span="2246-2246"];
m6_1402 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="JsonSerializerInternalWriter.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Error parsing null value. Path '', line 0, position 0.'',\r\n                () => { reader.Read(); })", span="2248-2250"];
m6_1403 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", span="2244-2244"];
m6_1617 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", span="2601-2601"];
m6_1619 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2604-2604"];
m6_1620 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2606-2606"];
m6_1622 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2609-2609"];
m6_1624 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2612-2612"];
m6_1626 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2615-2615"];
m6_1628 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2618-2618"];
m6_1630 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2621-2621"];
m6_1632 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2624-2624"];
m6_1634 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2627-2627"];
m6_1636 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2630-2630"];
m6_1618 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonSerializerInternalWriter.cs", label="string json = ''\x00a0{\x00a0'h\x00a0i\x00a0'\x00a0:\x00a0[\x00a0true\x00a0,\x00a0new\x00a0Date\x00a0(\x00a0)\x00a0]\x00a0/*\x00a0comment\x00a0*/\x00a0}\x00a0''", span="2603-2603"];
m6_1621 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2607-2607"];
m6_1623 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2610-2610"];
m6_1625 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2613-2613"];
m6_1627 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="2616-2616"];
m6_1629 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2619-2619"];
m6_1631 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2622-2622"];
m6_1633 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2625-2625"];
m6_1635 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2628-2628"];
m6_1637 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2631-2631"];
m6_1638 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonSerializerInternalWriter.cs", label="Assert.IsFalse(reader.Read())", span="2633-2633"];
m6_1639 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", span="2601-2601"];
m6_662 [cluster="Unk.IsNull", file="JsonSerializerInternalWriter.cs", label="Entry Unk.IsNull", span=""];
m6_987 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", span="1621-1621"];
m6_989 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1625-1625"];
m6_988 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonSerializerInternalWriter.cs", label="string json = @''[''''\u003c'''',''''\u5f20'''']''", span="1623-1623"];
m6_990 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonSerializerInternalWriter.cs", label="reader.Read()", span="1630-1630"];
m6_991 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="1631-1631"];
m6_992 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonSerializerInternalWriter.cs", label="reader.Read()", span="1633-1633"];
m6_993 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(''<'', reader.Value)", span="1634-1634"];
m6_994 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonSerializerInternalWriter.cs", label="reader.Read()", span="1636-1636"];
m6_995 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(24352, Convert.ToInt32(Convert.ToChar((string)reader.Value)))", span="1637-1637"];
m6_996 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonSerializerInternalWriter.cs", label="reader.Read()", span="1639-1639"];
m6_997 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="1640-1640"];
m6_998 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", span="1621-1621"];
m6_25 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.ClearErrorContext()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalBase.ClearErrorContext()", span="98-98"];
m6_251 [cluster="System.Console.WriteLine(object)", file="JsonSerializerInternalWriter.cs", label="Entry System.Console.WriteLine(object)", span="0-0"];
m6_1479 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", span="2389-2389"];
m6_1481 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2392-2392"];
m6_1482 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2397-2397"];
m6_1485 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2401-2401"];
m6_1480 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonSerializerInternalWriter.cs", label="string json = ''new Date\0()''", span="2391-2391"];
m6_1483 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="2398-2398"];
m6_1484 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2399-2399"];
m6_1486 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2402-2402"];
m6_1487 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", span="2389-2389"];
m6_1063 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", span="1732-1732"];
m6_1065 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1738-1738"];
m6_1064 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonSerializerInternalWriter.cs", label="string json = @''{\r\n    ''''A'''' : true,\r\n    ''''B'''' ''''''", span="1734-1736"];
m6_1066 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonSerializerInternalWriter.cs", label="reader.Read()", span="1740-1740"];
m6_1067 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1741-1741"];
m6_1068 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonSerializerInternalWriter.cs", label="reader.Read()", span="1743-1743"];
m6_1069 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1744-1744"];
m6_1070 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonSerializerInternalWriter.cs", label="reader.Read()", span="1746-1746"];
m6_1071 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="1747-1747"];
m6_1072 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonSerializerInternalWriter.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                @''Invalid character after parsing property name. Expected ':' but got: ''''. Path 'A', line 3, position 9.'',\r\n                () => { reader.Read(); })", span="1749-1751"];
m6_1073 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", span="1732-1732"];
m6_1515 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", span="2448-2448"];
m6_1516 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''1 2 ''''name'''' [][]null {}{} 1.1''))", span="2450-2450"];
m6_1518 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2453-2453"];
m6_1520 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2456-2456"];
m6_1522 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2459-2459"];
m6_1524 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2462-2462"];
m6_1526 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2465-2465"];
m6_1528 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2468-2468"];
m6_1530 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2471-2471"];
m6_1532 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2474-2474"];
m6_1534 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2477-2477"];
m6_1536 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2480-2480"];
m6_1538 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2483-2483"];
m6_1540 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2486-2486"];
m6_1542 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2489-2489"];
m6_1517 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerInternalWriter.cs", label="reader.SupportMultipleContent = true", span="2451-2451"];
m6_1519 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2454-2454"];
m6_1521 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2457-2457"];
m6_1523 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="2460-2460"];
m6_1525 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2463-2463"];
m6_1527 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2466-2466"];
m6_1529 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2469-2469"];
m6_1531 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2472-2472"];
m6_1533 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="2475-2475"];
m6_1535 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2478-2478"];
m6_1537 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2481-2481"];
m6_1539 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2484-2484"];
m6_1541 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2487-2487"];
m6_1543 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2490-2490"];
m6_1544 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerInternalWriter.cs", label="Assert.IsFalse(reader.Read())", span="2492-2492"];
m6_1545 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", span="2448-2448"];
m6_2008 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", span="3196-3196"];
m6_2010 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(toggleReaderError)", span="3199-3199"];
m6_2009 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonSerializerInternalWriter.cs", label="ToggleReaderError toggleReaderError = new ToggleReaderError(new StringReader(''{'first':1,'second':2,'third':3}''))", span="3198-3198"];
m6_2011 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="3201-3201"];
m6_2016 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="3214-3214"];
m6_2021 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="3225-3225"];
m6_2013 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonSerializerInternalWriter.cs", label="ExceptionAssert.Throws<Exception>(\r\n                ''Read error'',\r\n                () => jsonTextReader.Read())", span="3205-3207"];
m6_2014 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonSerializerInternalWriter.cs", label="ExceptionAssert.Throws<Exception>(\r\n                ''Read error'',\r\n                () => jsonTextReader.Read())", span="3208-3210"];
m6_2017 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(''first'', jsonTextReader.Value)", span="3215-3215"];
m6_2019 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonSerializerInternalWriter.cs", label="ExceptionAssert.Throws<Exception>(\r\n                ''Read error'',\r\n                () => jsonTextReader.Read())", span="3219-3221"];
m6_2022 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(1L, jsonTextReader.Value)", span="3226-3226"];
m6_2024 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonSerializerInternalWriter.cs", label="ExceptionAssert.Throws<Exception>(\r\n                ''Read error'',\r\n                () => jsonTextReader.Read())", span="3230-3232"];
m6_2025 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonSerializerInternalWriter.cs", label="ExceptionAssert.Throws<Exception>(\r\n                ''Read error'',\r\n                () => jsonTextReader.Read())", span="3233-3235"];
m6_2026 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonSerializerInternalWriter.cs", label="ExceptionAssert.Throws<Exception>(\r\n                ''Read error'',\r\n                () => jsonTextReader.Read())", span="3236-3238"];
m6_2012 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonSerializerInternalWriter.cs", label="toggleReaderError.Error = true", span="3203-3203"];
m6_2015 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonSerializerInternalWriter.cs", label="toggleReaderError.Error = false", span="3212-3212"];
m6_2018 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonSerializerInternalWriter.cs", label="toggleReaderError.Error = true", span="3217-3217"];
m6_2020 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonSerializerInternalWriter.cs", label="toggleReaderError.Error = false", span="3223-3223"];
m6_2023 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonSerializerInternalWriter.cs", label="toggleReaderError.Error = true", span="3228-3228"];
m6_2027 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonSerializerInternalWriter.cs", label="toggleReaderError.Error = false", span="3240-3240"];
m6_2028 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", span="3196-3196"];
m6_1291 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", span="2080-2080"];
m6_1293 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2084-2084"];
m6_1294 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2086-2086"];
m6_1296 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2089-2089"];
m6_1302 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2097-2097"];
m6_1292 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonSerializerInternalWriter.cs", label="string json = ''{\''Offset\'':\''\\/Date(946663200000+06)\\/\''}''", span="2082-2082"];
m6_1295 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2087-2087"];
m6_1297 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2090-2090"];
m6_1298 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonSerializerInternalWriter.cs", label="reader.ReadAsDateTimeOffset()", span="2092-2092"];
m6_1299 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2093-2093"];
m6_1300 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2094-2094"];
m6_1301 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), reader.Value)", span="2095-2095"];
m6_1303 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2098-2098"];
m6_1304 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", span="2080-2080"];
m6_42 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", span="175-175"];
m6_48 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonSerializerInternalWriter.cs", label="string json = @''[\r\n  333333333333333333333333333333333333333,\r\n  3.3,\r\n  ,\r\n  0f\r\n]''", span="117-122"];
m6_47 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", span="115-115"];
m6_49 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="124-124"];
m6_1086 [cluster="System.Text.Encoding.GetString(byte[], int, int)", file="JsonSerializerInternalWriter.cs", label="Entry System.Text.Encoding.GetString(byte[], int, int)", span="0-0"];
m6_1795 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", span="2890-2890"];
m6_1797 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2894-2894"];
m6_1796 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonSerializerInternalWriter.cs", label="string json = @''[0,1,2 , 3]''", span="2892-2892"];
m6_1798 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonSerializerInternalWriter.cs", label="reader.Read()", span="2896-2896"];
m6_1799 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2897-2897"];
m6_1800 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonSerializerInternalWriter.cs", label="reader.Read()", span="2899-2899"];
m6_1801 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2900-2900"];
m6_1802 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonSerializerInternalWriter.cs", label="reader.Read()", span="2902-2902"];
m6_1803 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2903-2903"];
m6_1804 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonSerializerInternalWriter.cs", label="reader.Read()", span="2905-2905"];
m6_1805 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2906-2906"];
m6_1806 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonSerializerInternalWriter.cs", label="reader.Read()", span="2908-2908"];
m6_1807 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2909-2909"];
m6_1808 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonSerializerInternalWriter.cs", label="reader.Read()", span="2911-2911"];
m6_1809 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2912-2912"];
m6_1810 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", span="2890-2890"];
m6_50 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="992-992"];
m6_1353 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", span="2171-2171"];
m6_1355 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2175-2175"];
m6_1357 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2178-2178"];
m6_1359 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2181-2181"];
m6_1366 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2191-2191"];
m6_1354 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonSerializerInternalWriter.cs", label="string json = @''{''''Offset'''':''''30/1/2011''''}''", span="2173-2173"];
m6_1356 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonSerializerInternalWriter.cs", label="reader.Culture = new CultureInfo(''en-NZ'')", span="2176-2176"];
m6_1358 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2179-2179"];
m6_1360 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2182-2182"];
m6_1361 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonSerializerInternalWriter.cs", label="reader.ReadAsDateTimeOffset()", span="2184-2184"];
m6_1362 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2185-2185"];
m6_1363 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2186-2186"];
m6_1364 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonSerializerInternalWriter.cs", label="DateTimeOffset dt = (DateTimeOffset)reader.Value", span="2188-2188"];
m6_1367 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2192-2192"];
m6_1365 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(new DateTime(2011, 1, 30, 0, 0, 0, DateTimeKind.Unspecified), dt.DateTime)", span="2189-2189"];
m6_1368 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", span="2171-2171"];
m6_1165 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", span="1885-1885"];
m6_1166 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''{''))", span="1887-1887"];
m6_1167 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="JsonSerializerInternalWriter.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unexpected end when reading bytes. Path '', line 1, position 1.'',\r\n                () => { reader.ReadAsBytes(); })", span="1889-1891"];
m6_1168 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", span="1885-1885"];
m6_1765 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", span="2840-2840"];
m6_1767 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2844-2844"];
m6_1768 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2846-2846"];
m6_1766 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonSerializerInternalWriter.cs", label="string json = @''//comment''", span="2842-2842"];
m6_1769 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2847-2847"];
m6_1770 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(''comment'', reader.Value)", span="2848-2848"];
m6_1771 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonSerializerInternalWriter.cs", label="Assert.IsFalse(reader.Read())", span="2850-2850"];
m6_1772 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", span="2840-2840"];
m6_646 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", span="1126-1126"];
m6_649 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JsonSerializerInternalWriter.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''''' + Convert.ToBase64String(helloWorldData)))", span="1131-1131"];
m6_648 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JsonSerializerInternalWriter.cs", label="byte[] helloWorldData = Encoding.UTF8.GetBytes(helloWorld)", span="1129-1129"];
m6_650 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JsonSerializerInternalWriter.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unterminated string. Expected delimiter: '. Path '', line 1, position 17.'',\r\n                () => { reader.ReadAsBytes(); })", span="1133-1135"];
m6_647 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JsonSerializerInternalWriter.cs", label="string helloWorld = ''Hello world!''", span="1128-1128"];
m6_651 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", span="1126-1126"];
m6_594 [cluster="Unk.ToString", file="JsonSerializerInternalWriter.cs", label="Entry Unk.ToString", span=""];
m6_638 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", span="1116-1116"];
m6_639 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="JsonSerializerInternalWriter.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''true''))", span="1118-1118"];
m6_640 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="JsonSerializerInternalWriter.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Error reading bytes. Unexpected token: Boolean. Path '', line 1, position 4.'',\r\n                () => { reader.ReadAsBytes(); })", span="1120-1122"];
m6_641 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", span="1116-1116"];
m6_1867 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", span="2996-2996"];
m6_1869 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                MaxDepth = 1\r\n            }", span="3000-3003"];
m6_1870 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="3005-3005"];
m6_1868 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JsonSerializerInternalWriter.cs", label="string json = ''[[]]''", span="2998-2998"];
m6_1871 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JsonSerializerInternalWriter.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''The reader's MaxDepth of 1 has been exceeded. Path '[0]', line 1, position 2.'',\r\n                () => { Assert.IsTrue(reader.Read()); })", span="3007-3009"];
m6_1872 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", span="2996-2996"];
m6_2005 [cluster="System.DateTime.DateTime(long, System.DateTimeKind)", file="JsonSerializerInternalWriter.cs", label="Entry System.DateTime.DateTime(long, System.DateTimeKind)", span="0-0"];
m6_1488 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", span="2406-2406"];
m6_1490 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2409-2409"];
m6_1491 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2411-2411"];
m6_1494 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2415-2415"];
m6_1489 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonSerializerInternalWriter.cs", label="string json = ''new Date\n()''", span="2408-2408"];
m6_1492 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="2412-2412"];
m6_1493 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2413-2413"];
m6_1495 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2416-2416"];
m6_1496 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", span="2406-2406"];
m6_504 [cluster="System.Convert.ToString(object, System.IFormatProvider)", file="JsonSerializerInternalWriter.cs", label="Entry System.Convert.ToString(object, System.IFormatProvider)", span="0-0"];
m6_1369 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", span="2197-2197"];
m6_1371 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2201-2201"];
m6_1372 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2203-2203"];
m6_1374 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2206-2206"];
m6_1370 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonSerializerInternalWriter.cs", label="string json = @''{''''Name'''':1}''", span="2199-2199"];
m6_1373 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2204-2204"];
m6_1375 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2207-2207"];
m6_1376 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonSerializerInternalWriter.cs", label="reader.ReadAsDecimal()", span="2209-2209"];
m6_1377 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2210-2210"];
m6_1378 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="2211-2211"];
m6_1379 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(1m, reader.Value)", span="2212-2212"];
m6_1380 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", span="2197-2197"];
m6_1407 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", span="2254-2254"];
m6_1408 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''nullz''))", span="2256-2256"];
m6_1409 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", file="JsonSerializerInternalWriter.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Error parsing null value. Path '', line 1, position 4.'',\r\n                () => { reader.Read(); })", span="2258-2260"];
m6_1410 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", span="2254-2254"];
m6_972 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", span="1598-1598"];
m6_975 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1603-1603"];
m6_982 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="1613-1613"];
m6_974 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonSerializerInternalWriter.cs", label="string json = @''['''''' + new string(' ', length) + @'''''']''", span="1601-1601"];
m6_976 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonSerializerInternalWriter.cs", label="reader.Read()", span="1605-1605"];
m6_977 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="1606-1606"];
m6_978 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonSerializerInternalWriter.cs", label="reader.Read()", span="1608-1608"];
m6_979 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1609-1609"];
m6_980 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(typeof(string), reader.ValueType)", span="1610-1610"];
m6_981 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(20000, reader.Value.ToString().Length)", span="1611-1611"];
m6_983 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="1614-1614"];
m6_984 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonSerializerInternalWriter.cs", label="Assert.IsFalse(reader.Read())", span="1616-1616"];
m6_985 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1617-1617"];
m6_973 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonSerializerInternalWriter.cs", label="int length = 20000", span="1600-1600"];
m6_986 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", span="1598-1598"];
m6_1335 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JsonSerializerInternalWriter.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m6_1600 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", span="2577-2577"];
m6_1602 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2580-2580"];
m6_1603 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2582-2582"];
m6_1605 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonSerializerInternalWriter.cs", label="Assert.IsTrue(reader.Read())", span="2585-2585"];
m6_1601 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonSerializerInternalWriter.cs", label="string json = ''new Date()''", span="2579-2579"];
m6_1604 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2583-2583"];
m6_1606 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2586-2586"];
m6_1607 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", span="2577-2577"];
m6_999 [cluster="System.Convert.ToChar(string)", file="JsonSerializerInternalWriter.cs", label="Entry System.Convert.ToChar(string)", span="0-0"];
m6_1077 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", span="1755-1755"];
m6_1079 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonSerializerInternalWriter.cs", label="JsonTextReader reader = new JsonTextReader(s)", span="1758-1758"];
m6_1078 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonSerializerInternalWriter.cs", label="StringReader s = new StringReader(@''''''SGVsbG8gd29ybGQu'''''')", span="1757-1757"];
m6_1080 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonSerializerInternalWriter.cs", label="byte[] data = reader.ReadAsBytes()", span="1760-1760"];
m6_1083 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonSerializerInternalWriter.cs", label="Assert.AreEqual(''Hello world.'', text)", span="1764-1764"];
m6_1081 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonSerializerInternalWriter.cs", label="Assert.IsNotNull(data)", span="1761-1761"];
m6_1082 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonSerializerInternalWriter.cs", label="string text = Encoding.UTF8.GetString(data, 0, data.Length)", span="1763-1763"];
m6_1084 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", span="1755-1755"];
m6_2113 [file="JsonSerializerInternalWriter.cs", label=total, span=""];
m6_2114 [file="JsonSerializerInternalWriter.cs", label=total, span=""];
m6_2112 [file="JsonSerializerInternalWriter.cs", label=reader, span=""];
m6_2115 [file="JsonSerializerInternalWriter.cs", label=reader, span=""];
m6_2116 [file="JsonSerializerInternalWriter.cs", label=reader, span=""];
m6_2119 [file="JsonSerializerInternalWriter.cs", label=reader, span=""];
m6_2143 [file="JsonSerializerInternalWriter.cs", label=reader, span=""];
m6_2141 [file="JsonSerializerInternalWriter.cs", label=reader, span=""];
m6_2144 [file="JsonSerializerInternalWriter.cs", label=reader, span=""];
m6_2145 [file="JsonSerializerInternalWriter.cs", label=reader, span=""];
m6_2103 [file="JsonSerializerInternalWriter.cs", label=jsonTextReader, span=""];
m6_2104 [file="JsonSerializerInternalWriter.cs", label=jsonTextReader, span=""];
m6_2105 [file="JsonSerializerInternalWriter.cs", label=reader, span=""];
m6_2106 [file="JsonSerializerInternalWriter.cs", label=reader, span=""];
m6_2107 [file="JsonSerializerInternalWriter.cs", label=reader, span=""];
m6_2109 [file="JsonSerializerInternalWriter.cs", label=reader, span=""];
m6_2110 [file="JsonSerializerInternalWriter.cs", label=reader, span=""];
m6_2111 [file="JsonSerializerInternalWriter.cs", label=reader, span=""];
m6_2117 [file="JsonSerializerInternalWriter.cs", label=reader, span=""];
m6_2118 [file="JsonSerializerInternalWriter.cs", label=reader, span=""];
m6_2120 [file="JsonSerializerInternalWriter.cs", label=reader, span=""];
m6_2121 [file="JsonSerializerInternalWriter.cs", label=reader, span=""];
m6_2122 [file="JsonSerializerInternalWriter.cs", label=reader, span=""];
m6_2123 [file="JsonSerializerInternalWriter.cs", label=reader, span=""];
m6_2124 [file="JsonSerializerInternalWriter.cs", label=reader, span=""];
m6_2125 [file="JsonSerializerInternalWriter.cs", label=reader, span=""];
m6_2126 [file="JsonSerializerInternalWriter.cs", label=reader, span=""];
m6_2127 [file="JsonSerializerInternalWriter.cs", label=reader, span=""];
m6_2128 [file="JsonSerializerInternalWriter.cs", label=reader, span=""];
m6_2129 [file="JsonSerializerInternalWriter.cs", label=reader, span=""];
m6_2130 [file="JsonSerializerInternalWriter.cs", label=reader, span=""];
m6_2131 [file="JsonSerializerInternalWriter.cs", label=reader, span=""];
m6_2132 [file="JsonSerializerInternalWriter.cs", label=reader, span=""];
m6_2133 [file="JsonSerializerInternalWriter.cs", label=reader, span=""];
m6_2134 [file="JsonSerializerInternalWriter.cs", label=reader, span=""];
m6_2135 [file="JsonSerializerInternalWriter.cs", label=reader, span=""];
m6_2136 [file="JsonSerializerInternalWriter.cs", label=reader, span=""];
m6_2137 [file="JsonSerializerInternalWriter.cs", label=reader, span=""];
m6_2138 [file="JsonSerializerInternalWriter.cs", label=reader, span=""];
m6_2139 [file="JsonSerializerInternalWriter.cs", label=reader, span=""];
m6_2140 [file="JsonSerializerInternalWriter.cs", label=reader, span=""];
m6_2142 [file="JsonSerializerInternalWriter.cs", label=reader, span=""];
m6_2146 [file="JsonSerializerInternalWriter.cs", label=jsonTextReader, span=""];
m6_2108 [file="JsonSerializerInternalWriter.cs", label="Newtonsoft.Json.Tests.JsonTextReaderTest", span=""];
m6_2147 [file="JsonSerializerInternalWriter.cs", label="Newtonsoft.Json.Tests.ToggleReaderError", span=""];
m9_24 [cluster="System.Text.RegularExpressions.Regex.ToString()", file="RegexConverter.cs", label="Entry System.Text.RegularExpressions.Regex.ToString()", span="0-0"];
m9_99 [cluster="Newtonsoft.Json.Converters.RegexConverter.CanConvert(System.Type)", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Converters.RegexConverter.CanConvert(System.Type)", span="225-225"];
m9_100 [cluster="Newtonsoft.Json.Converters.RegexConverter.CanConvert(System.Type)", color=green, community=0, file="RegexConverter.cs", label="0: return objectType.Name == nameof(Regex) && IsRegex(objectType);", span="228-228"];
m9_101 [cluster="Newtonsoft.Json.Converters.RegexConverter.CanConvert(System.Type)", file="RegexConverter.cs", label="Exit Newtonsoft.Json.Converters.RegexConverter.CanConvert(System.Type)", span="225-225"];
m9_97 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", file="RegexConverter.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", span="838-838"];
m9_9 [cluster="Newtonsoft.Json.Converters.RegexConverter.HasFlag(System.Text.RegularExpressions.RegexOptions, System.Text.RegularExpressions.RegexOptions)", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Converters.RegexConverter.HasFlag(System.Text.RegularExpressions.RegexOptions, System.Text.RegularExpressions.RegexOptions)", span="64-64"];
m9_10 [cluster="Newtonsoft.Json.Converters.RegexConverter.HasFlag(System.Text.RegularExpressions.RegexOptions, System.Text.RegularExpressions.RegexOptions)", file="RegexConverter.cs", label="return ((options & flag) == flag);", span="66-66"];
m9_11 [cluster="Newtonsoft.Json.Converters.RegexConverter.HasFlag(System.Text.RegularExpressions.RegexOptions, System.Text.RegularExpressions.RegexOptions)", file="RegexConverter.cs", label="Exit Newtonsoft.Json.Converters.RegexConverter.HasFlag(System.Text.RegularExpressions.RegexOptions, System.Text.RegularExpressions.RegexOptions)", span="64-64"];
m9_35 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)", span="1642-1642"];
m9_52 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", file="RegexConverter.cs", label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", span="82-82"];
m9_95 [cluster="object.ToString()", file="RegexConverter.cs", label="Entry object.ToString()", span="0-0"];
m9_0 [cluster="Newtonsoft.Json.Converters.RegexConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Converters.RegexConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="47-47"];
m9_1 [cluster="Newtonsoft.Json.Converters.RegexConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="RegexConverter.cs", label="Regex regex = (Regex)value", span="49-49"];
m9_2 [cluster="Newtonsoft.Json.Converters.RegexConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="RegexConverter.cs", label="BsonWriter bsonWriter = writer as BsonWriter", span="52-52"];
m9_5 [cluster="Newtonsoft.Json.Converters.RegexConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="RegexConverter.cs", label="WriteJson(writer, regex, serializer)", span="60-60"];
m9_4 [cluster="Newtonsoft.Json.Converters.RegexConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="RegexConverter.cs", label="WriteBson(bsonWriter, regex)", span="55-55"];
m9_3 [cluster="Newtonsoft.Json.Converters.RegexConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="RegexConverter.cs", label="bsonWriter != null", span="53-53"];
m9_6 [cluster="Newtonsoft.Json.Converters.RegexConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="RegexConverter.cs", label="Exit Newtonsoft.Json.Converters.RegexConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="47-47"];
m9_103 [cluster="Newtonsoft.Json.Converters.RegexConverter.IsRegex(System.Type)", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Converters.RegexConverter.IsRegex(System.Type)", span="232-232"];
m9_104 [cluster="Newtonsoft.Json.Converters.RegexConverter.IsRegex(System.Type)", file="RegexConverter.cs", label="return (objectType == typeof(Regex));", span="234-234"];
m9_105 [cluster="Newtonsoft.Json.Converters.RegexConverter.IsRegex(System.Type)", file="RegexConverter.cs", label="Exit Newtonsoft.Json.Converters.RegexConverter.IsRegex(System.Type)", span="232-232"];
m9_71 [cluster="string.Substring(int, int)", file="RegexConverter.cs", label="Entry string.Substring(int, int)", span="0-0"];
m9_72 [cluster="string.Substring(int)", file="RegexConverter.cs", label="Entry string.Substring(int)", span="0-0"];
m9_102 [cluster="Unk.nameof", file="RegexConverter.cs", label="Newtonsoft.Json.Converters.RegexConverter", span=""];
m9_96 [cluster="string.Equals(string, string, System.StringComparison)", file="RegexConverter.cs", label="Entry string.Equals(string, string, System.StringComparison)", span="0-0"];
m9_40 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Converters.RegexConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="127-127"];
m9_41 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="RegexConverter.cs", label="reader.TokenType", span="129-129"];
m9_43 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="RegexConverter.cs", label="return ReadRegexObject(reader, serializer);", span="132-132"];
m9_45 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="RegexConverter.cs", label="return ReadRegexString(reader);", span="134-134"];
m9_49 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="RegexConverter.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected token when reading Regex.'');", span="139-139"];
m9_42 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="RegexConverter.cs", label="JsonToken.StartObject", span="131-131"];
m9_44 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="RegexConverter.cs", label="JsonToken.String", span="133-133"];
m9_46 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="RegexConverter.cs", label="JsonToken.Null", span="135-135"];
m9_47 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="RegexConverter.cs", label="return null;", span="136-136"];
m9_48 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="RegexConverter.cs", label="Exit Newtonsoft.Json.Converters.RegexConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="127-127"];
m9_98 [cluster="Newtonsoft.Json.JsonReader.Skip()", file="RegexConverter.cs", label="Entry Newtonsoft.Json.JsonReader.Skip()", span="931-931"];
m9_34 [cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="RegexConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="418-418"];
m9_7 [cluster="Newtonsoft.Json.Converters.RegexConverter.WriteBson(Newtonsoft.Json.Bson.BsonWriter, System.Text.RegularExpressions.Regex)", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Converters.RegexConverter.WriteBson(Newtonsoft.Json.Bson.BsonWriter, System.Text.RegularExpressions.Regex)", span="70-70"];
m9_12 [cluster="Newtonsoft.Json.Converters.RegexConverter.WriteBson(Newtonsoft.Json.Bson.BsonWriter, System.Text.RegularExpressions.Regex)", file="RegexConverter.cs", label="string options = null", span="79-79"];
m9_13 [cluster="Newtonsoft.Json.Converters.RegexConverter.WriteBson(Newtonsoft.Json.Bson.BsonWriter, System.Text.RegularExpressions.Regex)", file="RegexConverter.cs", label="HasFlag(regex.Options, RegexOptions.IgnoreCase)", span="81-81"];
m9_15 [cluster="Newtonsoft.Json.Converters.RegexConverter.WriteBson(Newtonsoft.Json.Bson.BsonWriter, System.Text.RegularExpressions.Regex)", file="RegexConverter.cs", label="HasFlag(regex.Options, RegexOptions.Multiline)", span="86-86"];
m9_17 [cluster="Newtonsoft.Json.Converters.RegexConverter.WriteBson(Newtonsoft.Json.Bson.BsonWriter, System.Text.RegularExpressions.Regex)", file="RegexConverter.cs", label="HasFlag(regex.Options, RegexOptions.Singleline)", span="91-91"];
m9_20 [cluster="Newtonsoft.Json.Converters.RegexConverter.WriteBson(Newtonsoft.Json.Bson.BsonWriter, System.Text.RegularExpressions.Regex)", file="RegexConverter.cs", label="HasFlag(regex.Options, RegexOptions.ExplicitCapture)", span="98-98"];
m9_22 [cluster="Newtonsoft.Json.Converters.RegexConverter.WriteBson(Newtonsoft.Json.Bson.BsonWriter, System.Text.RegularExpressions.Regex)", file="RegexConverter.cs", label="writer.WriteRegex(regex.ToString(), options)", span="103-103"];
m9_14 [cluster="Newtonsoft.Json.Converters.RegexConverter.WriteBson(Newtonsoft.Json.Bson.BsonWriter, System.Text.RegularExpressions.Regex)", file="RegexConverter.cs", label="options += ''i''", span="83-83"];
m9_16 [cluster="Newtonsoft.Json.Converters.RegexConverter.WriteBson(Newtonsoft.Json.Bson.BsonWriter, System.Text.RegularExpressions.Regex)", file="RegexConverter.cs", label="options += ''m''", span="88-88"];
m9_18 [cluster="Newtonsoft.Json.Converters.RegexConverter.WriteBson(Newtonsoft.Json.Bson.BsonWriter, System.Text.RegularExpressions.Regex)", file="RegexConverter.cs", label="options += ''s''", span="93-93"];
m9_19 [cluster="Newtonsoft.Json.Converters.RegexConverter.WriteBson(Newtonsoft.Json.Bson.BsonWriter, System.Text.RegularExpressions.Regex)", file="RegexConverter.cs", label="options += ''u''", span="96-96"];
m9_21 [cluster="Newtonsoft.Json.Converters.RegexConverter.WriteBson(Newtonsoft.Json.Bson.BsonWriter, System.Text.RegularExpressions.Regex)", file="RegexConverter.cs", label="options += ''x''", span="100-100"];
m9_23 [cluster="Newtonsoft.Json.Converters.RegexConverter.WriteBson(Newtonsoft.Json.Bson.BsonWriter, System.Text.RegularExpressions.Regex)", file="RegexConverter.cs", label="Exit Newtonsoft.Json.Converters.RegexConverter.WriteBson(Newtonsoft.Json.Bson.BsonWriter, System.Text.RegularExpressions.Regex)", span="70-70"];
m9_39 [cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="RegexConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="426-426"];
m9_25 [cluster="Newtonsoft.Json.Bson.BsonWriter.WriteRegex(string, string)", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteRegex(string, string)", span="528-528"];
m9_37 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="RegexConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="929-929"];
m9_73 [cluster="System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", file="RegexConverter.cs", label="Entry System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", span="0-0"];
m9_8 [cluster="Newtonsoft.Json.Converters.RegexConverter.WriteJson(Newtonsoft.Json.JsonWriter, System.Text.RegularExpressions.Regex, Newtonsoft.Json.JsonSerializer)", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Converters.RegexConverter.WriteJson(Newtonsoft.Json.JsonWriter, System.Text.RegularExpressions.Regex, Newtonsoft.Json.JsonSerializer)", span="107-107"];
m9_26 [cluster="Newtonsoft.Json.Converters.RegexConverter.WriteJson(Newtonsoft.Json.JsonWriter, System.Text.RegularExpressions.Regex, Newtonsoft.Json.JsonSerializer)", file="RegexConverter.cs", label="DefaultContractResolver resolver = serializer.ContractResolver as DefaultContractResolver", span="109-109"];
m9_27 [cluster="Newtonsoft.Json.Converters.RegexConverter.WriteJson(Newtonsoft.Json.JsonWriter, System.Text.RegularExpressions.Regex, Newtonsoft.Json.JsonSerializer)", file="RegexConverter.cs", label="writer.WriteStartObject()", span="111-111"];
m9_28 [cluster="Newtonsoft.Json.Converters.RegexConverter.WriteJson(Newtonsoft.Json.JsonWriter, System.Text.RegularExpressions.Regex, Newtonsoft.Json.JsonSerializer)", file="RegexConverter.cs", label="writer.WritePropertyName((resolver != null) ? resolver.GetResolvedPropertyName(PatternName) : PatternName)", span="112-112"];
m9_29 [cluster="Newtonsoft.Json.Converters.RegexConverter.WriteJson(Newtonsoft.Json.JsonWriter, System.Text.RegularExpressions.Regex, Newtonsoft.Json.JsonSerializer)", file="RegexConverter.cs", label="writer.WriteValue(regex.ToString())", span="113-113"];
m9_30 [cluster="Newtonsoft.Json.Converters.RegexConverter.WriteJson(Newtonsoft.Json.JsonWriter, System.Text.RegularExpressions.Regex, Newtonsoft.Json.JsonSerializer)", file="RegexConverter.cs", label="writer.WritePropertyName((resolver != null) ? resolver.GetResolvedPropertyName(OptionsName) : OptionsName)", span="114-114"];
m9_31 [cluster="Newtonsoft.Json.Converters.RegexConverter.WriteJson(Newtonsoft.Json.JsonWriter, System.Text.RegularExpressions.Regex, Newtonsoft.Json.JsonSerializer)", file="RegexConverter.cs", label="serializer.Serialize(writer, regex.Options)", span="115-115"];
m9_32 [cluster="Newtonsoft.Json.Converters.RegexConverter.WriteJson(Newtonsoft.Json.JsonWriter, System.Text.RegularExpressions.Regex, Newtonsoft.Json.JsonSerializer)", file="RegexConverter.cs", label="writer.WriteEndObject()", span="116-116"];
m9_33 [cluster="Newtonsoft.Json.Converters.RegexConverter.WriteJson(Newtonsoft.Json.JsonWriter, System.Text.RegularExpressions.Regex, Newtonsoft.Json.JsonSerializer)", file="RegexConverter.cs", label="Exit Newtonsoft.Json.Converters.RegexConverter.WriteJson(Newtonsoft.Json.JsonWriter, System.Text.RegularExpressions.Regex, Newtonsoft.Json.JsonSerializer)", span="107-107"];
m9_36 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="RegexConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="468-468"];
m9_94 [cluster="Newtonsoft.Json.JsonReader.Read()", file="RegexConverter.cs", label="Entry Newtonsoft.Json.JsonReader.Read()", span="409-409"];
m9_38 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="RegexConverter.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="1042-1042"];
m9_51 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadRegexString(Newtonsoft.Json.JsonReader)", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Converters.RegexConverter.ReadRegexString(Newtonsoft.Json.JsonReader)", span="142-142"];
m9_53 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadRegexString(Newtonsoft.Json.JsonReader)", file="RegexConverter.cs", label="string regexText = (string)reader.Value", span="144-144"];
m9_54 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadRegexString(Newtonsoft.Json.JsonReader)", file="RegexConverter.cs", label="int patternOptionDelimiterIndex = regexText.LastIndexOf('/')", span="145-145"];
m9_55 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadRegexString(Newtonsoft.Json.JsonReader)", file="RegexConverter.cs", label="string patternText = regexText.Substring(1, patternOptionDelimiterIndex - 1)", span="147-147"];
m9_56 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadRegexString(Newtonsoft.Json.JsonReader)", file="RegexConverter.cs", label="string optionsText = regexText.Substring(patternOptionDelimiterIndex + 1)", span="148-148"];
m9_68 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadRegexString(Newtonsoft.Json.JsonReader)", file="RegexConverter.cs", label="return new Regex(patternText, options);", span="170-170"];
m9_57 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadRegexString(Newtonsoft.Json.JsonReader)", file="RegexConverter.cs", label="RegexOptions options = RegexOptions.None", span="150-150"];
m9_58 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadRegexString(Newtonsoft.Json.JsonReader)", file="RegexConverter.cs", label=optionsText, span="151-151"];
m9_61 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadRegexString(Newtonsoft.Json.JsonReader)", file="RegexConverter.cs", label="options |= RegexOptions.IgnoreCase", span="156-156"];
m9_59 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadRegexString(Newtonsoft.Json.JsonReader)", file="RegexConverter.cs", label=c, span="153-153"];
m9_60 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadRegexString(Newtonsoft.Json.JsonReader)", file="RegexConverter.cs", label="'i'", span="155-155"];
m9_62 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadRegexString(Newtonsoft.Json.JsonReader)", file="RegexConverter.cs", label="'m'", span="158-158"];
m9_64 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadRegexString(Newtonsoft.Json.JsonReader)", file="RegexConverter.cs", label="'s'", span="161-161"];
m9_66 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadRegexString(Newtonsoft.Json.JsonReader)", file="RegexConverter.cs", label="'x'", span="164-164"];
m9_63 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadRegexString(Newtonsoft.Json.JsonReader)", file="RegexConverter.cs", label="options |= RegexOptions.Multiline", span="159-159"];
m9_65 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadRegexString(Newtonsoft.Json.JsonReader)", file="RegexConverter.cs", label="options |= RegexOptions.Singleline", span="162-162"];
m9_67 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadRegexString(Newtonsoft.Json.JsonReader)", file="RegexConverter.cs", label="options |= RegexOptions.ExplicitCapture", span="165-165"];
m9_69 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadRegexString(Newtonsoft.Json.JsonReader)", file="RegexConverter.cs", label="Exit Newtonsoft.Json.Converters.RegexConverter.ReadRegexString(Newtonsoft.Json.JsonReader)", span="142-142"];
m9_70 [cluster="string.LastIndexOf(char)", file="RegexConverter.cs", label="Entry string.LastIndexOf(char)", span="0-0"];
m9_50 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadRegexObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.JsonSerializer)", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Converters.RegexConverter.ReadRegexObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.JsonSerializer)", span="173-173"];
m9_74 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadRegexObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.JsonSerializer)", file="RegexConverter.cs", label="string pattern = null", span="175-175"];
m9_76 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadRegexObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.JsonSerializer)", file="RegexConverter.cs", label="reader.Read()", span="178-178"];
m9_77 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadRegexObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.JsonSerializer)", file="RegexConverter.cs", label="reader.TokenType", span="180-180"];
m9_79 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadRegexObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.JsonSerializer)", file="RegexConverter.cs", label="string propertyName = reader.Value.ToString()", span="183-183"];
m9_80 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadRegexObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.JsonSerializer)", file="RegexConverter.cs", label="!reader.Read()", span="185-185"];
m9_81 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadRegexObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.JsonSerializer)", file="RegexConverter.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected end when reading Regex.'');", span="187-187"];
m9_83 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadRegexObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.JsonSerializer)", file="RegexConverter.cs", label="pattern = (string)reader.Value", span="192-192"];
m9_85 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadRegexObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.JsonSerializer)", file="RegexConverter.cs", label="options = serializer.Deserialize<RegexOptions>(reader)", span="196-196"];
m9_86 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadRegexObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.JsonSerializer)", file="RegexConverter.cs", label="reader.Skip()", span="200-200"];
m9_90 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadRegexObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.JsonSerializer)", file="RegexConverter.cs", label="throw JsonSerializationException.Create(reader, ''Error deserializing Regex. No pattern found.'');", span="208-208"];
m9_92 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadRegexObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.JsonSerializer)", file="RegexConverter.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected end when reading Regex.'');", span="215-215"];
m9_75 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadRegexObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.JsonSerializer)", file="RegexConverter.cs", label="RegexOptions? options = null", span="176-176"];
m9_89 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadRegexObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.JsonSerializer)", file="RegexConverter.cs", label="pattern == null", span="206-206"];
m9_91 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadRegexObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.JsonSerializer)", file="RegexConverter.cs", label="return new Regex(pattern, options ?? RegexOptions.None);", span="211-211"];
m9_78 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadRegexObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.JsonSerializer)", file="RegexConverter.cs", label="JsonToken.PropertyName", span="182-182"];
m9_87 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadRegexObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.JsonSerializer)", file="RegexConverter.cs", label="JsonToken.Comment", span="203-203"];
m9_88 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadRegexObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.JsonSerializer)", file="RegexConverter.cs", label="JsonToken.EndObject", span="205-205"];
m9_82 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadRegexObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.JsonSerializer)", file="RegexConverter.cs", label="string.Equals(propertyName, PatternName, StringComparison.OrdinalIgnoreCase)", span="190-190"];
m9_84 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadRegexObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.JsonSerializer)", file="RegexConverter.cs", label="string.Equals(propertyName, OptionsName, StringComparison.OrdinalIgnoreCase)", span="194-194"];
m9_93 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadRegexObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.JsonSerializer)", file="RegexConverter.cs", label="Exit Newtonsoft.Json.Converters.RegexConverter.ReadRegexObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.JsonSerializer)", span="173-173"];
m10_45 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", span="82-82"];
m10_49 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", span="626-626"];
m10_50 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.FormatValueForPrint(object)", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.FormatValueForPrint(object)", span="142-142"];
m10_47 [cluster="object.ToString()", file="StringEnumConverter.cs", label="Entry object.ToString()", span="0-0"];
m10_29 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs", label="return null;", span="127-127"];
m10_25 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="118-118"];
m10_26 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs", label="reader.TokenType == JsonToken.Null", span="120-120"];
m10_27 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs", label="!ReflectionUtils.IsNullableType(objectType)", span="122-122"];
m10_28 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs", label="throw JsonSerializationException.Create(reader, ''Cannot convert null value to {0}.''.FormatWith(CultureInfo.InvariantCulture, objectType));", span="124-124"];
m10_30 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs", label="bool isNullable = ReflectionUtils.IsNullableType(objectType)", span="130-130"];
m10_31 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs", label="Type t = isNullable ? Nullable.GetUnderlyingType(objectType) : objectType", span="131-131"];
m10_32 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs", label="reader.TokenType == JsonToken.String", span="135-135"];
m10_33 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs", label="string enumText = reader.Value.ToString()", span="137-137"];
m10_35 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs", label="reader.TokenType == JsonToken.Integer", span="142-142"];
m10_37 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs", label="throw JsonSerializationException.Create(reader, ''Integer value {0} is not allowed.''.FormatWith(CultureInfo.InvariantCulture, reader.Value));", span="146-146"];
m10_38 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs", label="return ConvertUtils.ConvertOrCast(reader.Value, CultureInfo.InvariantCulture, t);", span="149-149"];
m10_40 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs", label="throw JsonSerializationException.Create(reader, ''Error converting value {0} to type '{1}'.''.FormatWith(CultureInfo.InvariantCulture, MiscellaneousUtils.FormatValueForPrint(reader.Value), objectType), ex);", span="154-154"];
m10_41 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected token {0} when parsing enum.''.FormatWith(CultureInfo.InvariantCulture, reader.TokenType));", span="158-158"];
m10_34 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs", label="return EnumUtils.ParseEnumName(enumText, isNullable, !AllowIntegerValues, t);", span="139-139"];
m10_36 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs", label="!AllowIntegerValues", span="144-144"];
m10_39 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs", label=Exception, span="152-152"];
m10_42 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs", label="Exit Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="118-118"];
m10_20 [cluster="char.IsNumber(char)", file="StringEnumConverter.cs", label="Entry char.IsNumber(char)", span="0-0"];
m10_3 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter(bool)", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter(bool)", span="71-71"];
m10_4 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter(bool)", file="StringEnumConverter.cs", label="CamelCaseText = camelCaseText", span="74-74"];
m10_5 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter(bool)", file="StringEnumConverter.cs", label="Exit Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter(bool)", span="71-71"];
m10_24 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="929-929"];
m10_57 [cluster="System.Type.IsEnum()", file="StringEnumConverter.cs", label="Entry System.Type.IsEnum()", span="189-189"];
m10_18 [cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="891-891"];
m10_0 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter()", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter()", span="62-62"];
m10_1 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter()", file="StringEnumConverter.cs", label="AllowIntegerValues = true", span="64-64"];
m10_2 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter()", file="StringEnumConverter.cs", label="Exit Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter()", span="62-62"];
m10_6 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="83-83"];
m10_7 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs", label="value == null", span="85-85"];
m10_8 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs", label="writer.WriteNull()", span="87-87"];
m10_10 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs", label="Enum e = (Enum)value", span="91-91"];
m10_13 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", color=green, community=0, file="StringEnumConverter.cs", label="0: !AllowIntegerValues", span="97-97"];
m10_16 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs", label="writer.WriteValue(finalName)", span="106-106"];
m10_9 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs", label="return;", span="88-88"];
m10_11 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs", label="string enumName = e.ToString(''G'')", span="93-93"];
m10_14 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", color=green, community=0, file="StringEnumConverter.cs", label="0: throw JsonSerializationException.Create(null, writer.ContainerPath, ''Integer value {0} is not allowed.''.FormatWith(CultureInfo.InvariantCulture, enumName), null);", span="99-99"];
m10_12 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs", label="char.IsNumber(enumName[0]) || enumName[0] == '-'", span="95-95"];
m10_15 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs", label="writer.WriteValue(value)", span="103-103"];
m10_17 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs", label="Exit Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="83-83"];
m10_51 [cluster="string.FormatWith(System.IFormatProvider, object, object)", file="StringEnumConverter.cs", label="Entry string.FormatWith(System.IFormatProvider, object, object)", span="52-52"];
m10_21 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(object)", span="1408-1408"];
m10_43 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", span="267-267"];
m10_46 [cluster="System.Nullable.GetUnderlyingType(System.Type)", file="StringEnumConverter.cs", label="Entry System.Nullable.GetUnderlyingType(System.Type)", span="0-0"];
m10_48 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ParseEnumName(string, bool, bool, System.Type)", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Utilities.EnumUtils.ParseEnumName(string, bool, bool, System.Type)", span="188-188"];
m10_22 [cluster="object.GetType()", file="StringEnumConverter.cs", label="Entry object.GetType()", span="0-0"];
m10_19 [cluster="System.Enum.ToString(string)", file="StringEnumConverter.cs", label="Entry System.Enum.ToString(string)", span="0-0"];
m10_44 [cluster="string.FormatWith(System.IFormatProvider, object)", file="StringEnumConverter.cs", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
m10_23 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ToEnumName(System.Type, string, bool)", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Utilities.EnumUtils.ToEnumName(System.Type, string, bool)", span="243-243"];
m10_52 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", span="87-87"];
m10_53 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.CanConvert(System.Type)", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Converters.StringEnumConverter.CanConvert(System.Type)", span="168-168"];
m10_54 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.CanConvert(System.Type)", file="StringEnumConverter.cs", label="Type t = (ReflectionUtils.IsNullableType(objectType))\r\n                ? Nullable.GetUnderlyingType(objectType)\r\n                : objectType", span="170-172"];
m10_55 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.CanConvert(System.Type)", file="StringEnumConverter.cs", label="return t.IsEnum();", span="174-174"];
m10_56 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.CanConvert(System.Type)", file="StringEnumConverter.cs", label="Exit Newtonsoft.Json.Converters.StringEnumConverter.CanConvert(System.Type)", span="168-168"];
m10_58 [file="StringEnumConverter.cs", label="Newtonsoft.Json.Converters.StringEnumConverter", span=""];
m11_87 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="StringEnumConverterTests.cs", label="string json = @''{\r\n    ChildId: '\/Date(9467082_PIE_340000-0631)\/'\r\n}''", span="183-185"];
m11_91 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="192-192"];
m11_88 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="StringEnumConverterTests.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="187-187"];
m11_90 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", span="190-190"];
m11_92 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="193-193"];
m11_89 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="189-189"];
m11_93 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="195-195"];
m11_501 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="116-116"];
m11_836 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", span="1428-1428"];
m11_837 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = null", span="1430-1430"];
m11_838 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="StringEnumConverterTests.cs", label="reader = new JsonTextReader(new StringReader(''1.1''))", span="1432-1432"];
m11_839 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(1.1m, reader.ReadAsDecimal())", span="1433-1433"];
m11_840 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="StringEnumConverterTests.cs", label="reader = new JsonTextReader(new StringReader(''-1.1''))", span="1435-1435"];
m11_841 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(-1.1m, reader.ReadAsDecimal())", span="1436-1436"];
m11_842 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="StringEnumConverterTests.cs", label="reader = new JsonTextReader(new StringReader(''0.0''))", span="1438-1438"];
m11_843 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(0.0m, reader.ReadAsDecimal())", span="1439-1439"];
m11_844 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="StringEnumConverterTests.cs", label="reader = new JsonTextReader(new StringReader(''-0.0''))", span="1441-1441"];
m11_845 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(0, reader.ReadAsDecimal())", span="1442-1442"];
m11_846 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="StringEnumConverterTests.cs", label="reader = new JsonTextReader(new StringReader(''9999999999999999999999999999999999999999999999999999999999999999999999999999asdasdasd''))", span="1444-1444"];
m11_847 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="StringEnumConverterTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(''Input string '9999999999999999999999999999999999999999999999999999999999999999999999999999a' is not a valid decimal. Path '', line 1, position 77.'', () => reader.ReadAsDecimal())", span="1445-1445"];
m11_848 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="StringEnumConverterTests.cs", label="reader = new JsonTextReader(new StringReader(''9999999999999999999999999999999999999999999999999999999999999999999999999999asdasdasd''))", span="1447-1447"];
m11_849 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="StringEnumConverterTests.cs", label="reader.FloatParseHandling = Json.FloatParseHandling.Decimal", span="1448-1448"];
m11_850 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="StringEnumConverterTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(''Input string '9999999999999999999999999999999999999999999999999999999999999999999999999999a' is not a valid decimal. Path '', line 1, position 77.'', () => reader.Read())", span="1449-1449"];
m11_851 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="StringEnumConverterTests.cs", label="reader = new JsonTextReader(new StringReader(''1E-06''))", span="1451-1451"];
m11_852 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(0.000001m, reader.ReadAsDecimal())", span="1452-1452"];
m11_853 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="StringEnumConverterTests.cs", label="reader = new JsonTextReader(new StringReader(''''))", span="1454-1454"];
m11_854 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(null, reader.ReadAsDecimal())", span="1455-1455"];
m11_855 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="StringEnumConverterTests.cs", label="reader = new JsonTextReader(new StringReader(''-''))", span="1457-1457"];
m11_856 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="StringEnumConverterTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(''Input string '-' is not a valid decimal. Path '', line 1, position 1.'', () => reader.ReadAsDecimal())", span="1458-1458"];
m11_857 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", span="1428-1428"];
m11_152 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="273-273"];
m11_155 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="277-277"];
m11_158 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="281-281"];
m11_159 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", span="250-250"];
m11_154 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(Convert.ToDecimal(1E-06), reader.Value)", span="276-276"];
m11_156 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="278-278"];
m11_157 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="280-280"];
m11_160 [cluster="System.Convert.ToDecimal(double)", file="StringEnumConverterTests.cs", label="Entry System.Convert.ToDecimal(double)", span="0-0"];
m11_153 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="275-275"];
m11_161 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", span="285-285"];
m11_162 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="StringEnumConverterTests.cs", label="string json = ''[NaN]''", span="287-287"];
m11_1608 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", span="2590-2590"];
m11_1609 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="StringEnumConverterTests.cs", label="string json = ''new Date,()''", span="2592-2592"];
m11_1610 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2593-2593"];
m11_1611 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="StringEnumConverterTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unexpected character while parsing constructor: ,. Path '', line 1, position 8.'',\r\n                () => { Assert.IsTrue(reader.Read()); })", span="2595-2597"];
m11_1612 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", span="2590-2590"];
m11_1421 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", span="2274-2274"];
m11_1422 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''/sdf''))", span="2276-2276"];
m11_1423 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="StringEnumConverterTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Error parsing comment. Expected: *, got s. Path '', line 1, position 1.'',\r\n                () => { reader.Read(); })", span="2278-2280"];
m11_1424 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", span="2274-2274"];
m11_172 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumMemberPlusFlags()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(Foo.Bat, foos[2])", span="491-491"];
m11_173 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumMemberPlusFlags()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(Foo.SerializeAsBaz, foos[3])", span="492-492"];
m11_174 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumMemberPlusFlags()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(Foo.FooBar | Foo.SerializeAsBaz, foos[4])", span="493-493"];
m11_175 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumMemberPlusFlags()", file="StringEnumConverterTests.cs", label="Assert.AreEqual((Foo)int.MaxValue, foos[5])", span="494-494"];
m11_176 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumMemberPlusFlags()", file="StringEnumConverterTests.cs", label="List<Bar> lbar = new List<Bar>() { Bar.FooBar, Bar.Bat, Bar.SerializeAsBaz }", span="496-496"];
m11_177 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumMemberPlusFlags()", file="StringEnumConverterTests.cs", label="string json2 = JsonConvert.SerializeObject(lbar, Formatting.Indented, new StringEnumConverter { CamelCaseText = true })", span="498-498"];
m11_178 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumMemberPlusFlags()", file="StringEnumConverterTests.cs", label="StringAssert.AreEqual(@''[\r\n  ''''foo_bar'''',\r\n  ''''Bat'''',\r\n  ''''baz''''\r\n]'', json2)", span="500-504"];
m11_179 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumMemberPlusFlags()", file="StringEnumConverterTests.cs", label="IList<Bar> bars = JsonConvert.DeserializeObject<List<Bar>>(json2)", span="506-506"];
m11_180 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumMemberPlusFlags()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(3, bars.Count)", span="508-508"];
m11_181 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumMemberPlusFlags()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(Bar.FooBar, bars[0])", span="509-509"];
m11_182 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumMemberPlusFlags()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(Bar.Bat, bars[1])", span="510-510"];
m11_183 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumMemberPlusFlags()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(Bar.SerializeAsBaz, bars[2])", span="511-511"];
m11_184 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumMemberPlusFlags()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumMemberPlusFlags()", span="462-462"];
m11_185 [cluster="System.Collections.Generic.List<T>.List()", file="StringEnumConverterTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m11_186 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DuplicateNameEnumTest()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DuplicateNameEnumTest()", span="515-515"];
m11_187 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DuplicateNameEnumTest()", file="StringEnumConverterTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<DuplicateNameEnum>('''foo_bar''', new StringEnumConverter()),\r\n                @''Error converting value ''''foo_bar'''' to type 'Newtonsoft.Json.Tests.Converters.DuplicateNameEnum'. Path '', line 1, position 9.'')", span="517-519"];
m11_188 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DuplicateNameEnumTest()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DuplicateNameEnumTest()", span="515-515"];
m11_189 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Entry lambda expression", span="518-518"];
m11_190 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="JsonConvert.DeserializeObject<DuplicateNameEnum>('''foo_bar''', new StringEnumConverter())", span="518-518"];
m11_191 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Exit lambda expression", span="518-518"];
m11_244 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", span="473-473"];
m11_245 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="StringEnumConverterTests.cs", label="string input = @''{\r\n''''matches'''' : [\r\n{''''t'''':''''C'''', ''''n'''':''''Citigroup Inc.'''', ''''e'''':''''NYSE'''', ''''id'''':''''662713''''}\r\n,{''''t'''':''''CHL'''', ''''n'''':''''China Mobile Ltd. (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''660998''''}\r\n,{''''t'''':''''PTR'''', ''''n'''':''''PetroChina Company Limited (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''664536''''}\r\n,{''''t'''':''''RIO'''', ''''n'''':''''Companhia Vale do Rio Doce (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''671472''''}\r\n,{''''t'''':''''RIOPR'''', ''''n'''':''''Companhia Vale do Rio Doce (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''3512643''''}\r\n,{''''t'''':''''CSCO'''', ''''n'''':''''Cisco Systems, Inc.'''', ''''e'''':''''NASDAQ'''', ''''id'''':''''99624''''}\r\n,{''''t'''':''''CVX'''', ''''n'''':''''Chevron Corporation'''', ''''e'''':''''NYSE'''', ''''id'''':''''667226''''}\r\n,{''''t'''':''''TM'''', ''''n'''':''''Toyota Motor Corporation (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''655880''''}\r\n,{''''t'''':''''JPM'''', ''''n'''':''''JPMorgan Chase \\x26 Co.'''', ''''e'''':''''NYSE'''', ''''id'''':''''665639''''}\r\n,{''''t'''':''''COP'''', ''''n'''':''''ConocoPhillips'''', ''''e'''':''''NYSE'''', ''''id'''':''''1691168''''}\r\n,{''''t'''':''''LFC'''', ''''n'''':''''China Life Insurance Company Ltd. (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''688679''''}\r\n,{''''t'''':''''NOK'''', ''''n'''':''''Nokia Corporation (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''657729''''}\r\n,{''''t'''':''''KO'''', ''''n'''':''''The Coca-Cola Company'''', ''''e'''':''''NYSE'''', ''''id'''':''''6550''''}\r\n,{''''t'''':''''VZ'''', ''''n'''':''''Verizon Communications Inc.'''', ''''e'''':''''NYSE'''', ''''id'''':''''664887''''}\r\n,{''''t'''':''''AMX'''', ''''n'''':''''America Movil S.A.B de C.V. (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''665834''''}],\r\n''''all'''' : false\r\n}\r\n''", span="475-494"];
m11_247 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="StringEnumConverterTests.cs", label="jsonReader.Read()", span="498-498"];
m11_246 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="StringEnumConverterTests.cs", label="JsonReader jsonReader = new JsonTextReader(new StringReader(input))", span="496-496"];
m11_248 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="StringEnumConverterTests.cs", label="Console.WriteLine(jsonReader.Value)", span="500-500"];
m11_249 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", span="473-473"];
m11_479 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", span="858-858"];
m11_480 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="StringEnumConverterTests.cs", label="int valueCount = 10000", span="860-860"];
m11_481 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="StringEnumConverterTests.cs", label="StringWriter sw = new StringWriter()", span="861-861"];
m11_485 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="StringEnumConverterTests.cs", label="i < valueCount", span="864-864"];
m11_493 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="StringEnumConverterTests.cs", label="i < valueCount", span="874-874"];
m11_482 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="StringEnumConverterTests.cs", label="JsonTextWriter writer = new JsonTextWriter(sw)", span="862-862"];
m11_489 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="StringEnumConverterTests.cs", label="string json = sw.ToString()", span="870-870"];
m11_483 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="StringEnumConverterTests.cs", label="writer.WriteStartArray()", span="863-863"];
m11_486 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="StringEnumConverterTests.cs", label="writer.WriteValue(i)", span="866-866"];
m11_488 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="StringEnumConverterTests.cs", label="writer.WriteEndArray()", span="868-868"];
m11_484 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="StringEnumConverterTests.cs", label="int i = 0", span="864-864"];
m11_487 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="StringEnumConverterTests.cs", label="i++", span="864-864"];
m11_490 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="872-872"];
m11_491 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="873-873"];
m11_494 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="876-876"];
m11_495 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="StringEnumConverterTests.cs", label="Assert.AreEqual((long)i, reader.Value)", span="877-877"];
m11_497 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="879-879"];
m11_498 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="StringEnumConverterTests.cs", label="Assert.IsFalse(reader.Read())", span="880-880"];
m11_492 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="StringEnumConverterTests.cs", label="int i = 0", span="874-874"];
m11_496 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="StringEnumConverterTests.cs", label="i++", span="874-874"];
m11_499 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", span="858-858"];
m11_593 [cluster="StringReader.cstr", file="StringEnumConverterTests.cs", label="Entry StringReader.cstr", span=""];
m11_663 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", span="1149-1149"];
m11_664 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="StringEnumConverterTests.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''{aww''))", span="1151-1151"];
m11_665 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="1152-1152"];
m11_666 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="StringEnumConverterTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unexpected end while parsing unquoted property name. Path '', line 1, position 4.'',\r\n                () => { reader.Read(); })", span="1154-1156"];
m11_667 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", span="1149-1149"];
m11_1248 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", span="2018-2018"];
m11_1249 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="StringEnumConverterTests.cs", label="string json = ''{\''Offset\'':\''\\/Date(946663200000+0600)\\/\''}''", span="2020-2020"];
m11_1250 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2022-2022"];
m11_1251 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2024-2024"];
m11_1252 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2025-2025"];
m11_1253 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2027-2027"];
m11_1254 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2028-2028"];
m11_1255 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="StringEnumConverterTests.cs", label="reader.ReadAsDateTimeOffset()", span="2030-2030"];
m11_1256 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2031-2031"];
m11_1257 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2032-2032"];
m11_1258 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), reader.Value)", span="2033-2033"];
m11_1259 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2035-2035"];
m11_1260 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2036-2036"];
m11_1261 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", span="2018-2018"];
m11_1263 [cluster="System.DateTime.DateTime(int, int, int)", file="StringEnumConverterTests.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m11_1593 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", span="2567-2567"];
m11_1594 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''true/''))", span="2569-2569"];
m11_1595 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", file="StringEnumConverterTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Error parsing boolean value. Path '', line 1, position 4.'',\r\n                () => { reader.Read(); })", span="2571-2573"];
m11_1596 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", span="2567-2567"];
m11_71 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Exit lambda expression", span="143-143"];
m11_76 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", span="161-161"];
m11_72 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", span="152-152"];
m11_75 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="160-160"];
m11_77 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="163-163"];
m11_73 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="StringEnumConverterTests.cs", label="string json = @''{\r\n    ChildId: '123'\r\n}''", span="154-156"];
m11_74 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="StringEnumConverterTests.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="158-158"];
m11_78 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="164-164"];
m11_1206 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", span="1949-1949"];
m11_1207 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[1''))", span="1951-1951"];
m11_1208 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="StringEnumConverterTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unexpected end when reading bytes. Path '[0]', line 1, position 2.'',\r\n                () => { reader.ReadAsBytes(); })", span="1953-1955"];
m11_1209 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", span="1949-1949"];
m11_1585 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", span="2554-2554"];
m11_1586 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="StringEnumConverterTests.cs", label="string json = ''{}''", span="2556-2556"];
m11_1587 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2557-2557"];
m11_1588 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2559-2559"];
m11_1589 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2560-2560"];
m11_1590 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2562-2562"];
m11_1591 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2563-2563"];
m11_1592 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", span="2554-2554"];
m11_2093 [cluster="Newtonsoft.Json.Tests.SlowStream.Seek(long, System.IO.SeekOrigin)", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.SlowStream.Seek(long, System.IO.SeekOrigin)", span="3355-3355"];
m11_2094 [cluster="Newtonsoft.Json.Tests.SlowStream.Seek(long, System.IO.SeekOrigin)", file="StringEnumConverterTests.cs", label="throw new NotSupportedException();", span="3357-3357"];
m11_2095 [cluster="Newtonsoft.Json.Tests.SlowStream.Seek(long, System.IO.SeekOrigin)", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.SlowStream.Seek(long, System.IO.SeekOrigin)", span="3355-3355"];
m11_1192 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", span="1927-1927"];
m11_1193 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''new Date()''))", span="1929-1929"];
m11_1194 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="StringEnumConverterTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Error reading date. Unexpected token: StartConstructor. Path '', line 1, position 9.'',\r\n                () => { reader.ReadAsDateTimeOffset(); })", span="1931-1933"];
m11_1195 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", span="1927-1927"];
m11_1213 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", span="1959-1959"];
m11_1214 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[1.0]''))", span="1961-1961"];
m11_1215 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="StringEnumConverterTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unexpected token when reading bytes: Float. Path '[0]', line 1, position 4.'',\r\n                () => { reader.ReadAsBytes(); })", span="1963-1965"];
m11_1216 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", span="1959-1959"];
m11_362 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", span="700-700"];
m11_363 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="string input = @''{\r\n  value:'Purple',\r\n  array:[1,2,new Date(1)],\r\n  subobject:{prop:1,proparray:[1]}\r\n}''", span="702-706"];
m11_364 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="StringReader sr = new StringReader(input)", span="708-708"];
m11_365 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="JsonReader reader = new JsonTextReader(sr)", span="710-710"];
m11_366 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(0, reader.Depth)", span="712-712"];
m11_367 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="reader.Read()", span="714-714"];
m11_368 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.StartObject)", span="715-715"];
m11_369 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(0, reader.Depth)", span="716-716"];
m11_370 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual('''', reader.Path)", span="717-717"];
m11_371 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="reader.Read()", span="719-719"];
m11_372 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="720-720"];
m11_373 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(1, reader.Depth)", span="721-721"];
m11_374 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''value'', reader.Path)", span="722-722"];
m11_375 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="reader.Read()", span="724-724"];
m11_376 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.String)", span="725-725"];
m11_377 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(reader.Value, @''Purple'')", span="726-726"];
m11_378 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(reader.QuoteChar, '\'')", span="727-727"];
m11_379 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(1, reader.Depth)", span="728-728"];
m11_380 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''value'', reader.Path)", span="729-729"];
m11_381 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="reader.Read()", span="731-731"];
m11_382 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="732-732"];
m11_383 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(1, reader.Depth)", span="733-733"];
m11_384 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''array'', reader.Path)", span="734-734"];
m11_385 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="reader.Read()", span="736-736"];
m11_386 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.StartArray)", span="737-737"];
m11_387 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(1, reader.Depth)", span="738-738"];
m11_388 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''array'', reader.Path)", span="739-739"];
m11_389 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="reader.Read()", span="741-741"];
m11_390 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="742-742"];
m11_391 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(1L, reader.Value)", span="743-743"];
m11_392 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(2, reader.Depth)", span="744-744"];
m11_393 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''array[0]'', reader.Path)", span="745-745"];
m11_394 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="reader.Read()", span="747-747"];
m11_395 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="748-748"];
m11_396 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(2L, reader.Value)", span="749-749"];
m11_397 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(2, reader.Depth)", span="750-750"];
m11_398 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''array[1]'', reader.Path)", span="751-751"];
m11_399 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="reader.Read()", span="753-753"];
m11_400 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.StartConstructor)", span="754-754"];
m11_401 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="755-755"];
m11_402 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(2, reader.Depth)", span="756-756"];
m11_403 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''array[2]'', reader.Path)", span="757-757"];
m11_404 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="reader.Read()", span="759-759"];
m11_405 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="760-760"];
m11_406 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(1L, reader.Value)", span="761-761"];
m11_407 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(3, reader.Depth)", span="762-762"];
m11_408 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''array[2][0]'', reader.Path)", span="763-763"];
m11_409 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="reader.Read()", span="765-765"];
m11_410 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.EndConstructor)", span="766-766"];
m11_411 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(null, reader.Value)", span="767-767"];
m11_412 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(2, reader.Depth)", span="768-768"];
m11_413 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''array[2]'', reader.Path)", span="769-769"];
m11_414 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="reader.Read()", span="771-771"];
m11_415 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.EndArray)", span="772-772"];
m11_416 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(1, reader.Depth)", span="773-773"];
m11_417 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''array'', reader.Path)", span="774-774"];
m11_418 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="reader.Read()", span="776-776"];
m11_419 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="777-777"];
m11_420 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(1, reader.Depth)", span="778-778"];
m11_421 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''subobject'', reader.Path)", span="779-779"];
m11_422 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="reader.Read()", span="781-781"];
m11_423 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.StartObject)", span="782-782"];
m11_424 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(1, reader.Depth)", span="783-783"];
m11_425 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''subobject'', reader.Path)", span="784-784"];
m11_426 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="reader.Read()", span="786-786"];
m11_427 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="787-787"];
m11_428 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(2, reader.Depth)", span="788-788"];
m11_429 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''subobject.prop'', reader.Path)", span="789-789"];
m11_430 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="reader.Read()", span="791-791"];
m11_431 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="792-792"];
m11_432 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(2, reader.Depth)", span="793-793"];
m11_433 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''subobject.prop'', reader.Path)", span="794-794"];
m11_434 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="reader.Read()", span="796-796"];
m11_435 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="797-797"];
m11_436 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(2, reader.Depth)", span="798-798"];
m11_437 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''subobject.proparray'', reader.Path)", span="799-799"];
m11_438 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="reader.Read()", span="801-801"];
m11_439 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.StartArray)", span="802-802"];
m11_440 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(2, reader.Depth)", span="803-803"];
m11_441 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''subobject.proparray'', reader.Path)", span="804-804"];
m11_442 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="reader.Read()", span="806-806"];
m11_443 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="807-807"];
m11_444 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(3, reader.Depth)", span="808-808"];
m11_445 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''subobject.proparray[0]'', reader.Path)", span="809-809"];
m11_446 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="reader.Read()", span="811-811"];
m11_447 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.EndArray)", span="812-812"];
m11_448 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(2, reader.Depth)", span="813-813"];
m11_449 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''subobject.proparray'', reader.Path)", span="814-814"];
m11_450 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="reader.Read()", span="816-816"];
m11_451 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.EndObject)", span="817-817"];
m11_452 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(1, reader.Depth)", span="818-818"];
m11_453 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''subobject'', reader.Path)", span="819-819"];
m11_454 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="reader.Read()", span="821-821"];
m11_455 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.EndObject)", span="822-822"];
m11_456 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(0, reader.Depth)", span="823-823"];
m11_457 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Assert.AreEqual('''', reader.Path)", span="824-824"];
m11_458 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", span="700-700"];
m11_595 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", span="1033-1033"];
m11_596 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="StringEnumConverterTests.cs", label="BigInteger i = new BigInteger(long.MinValue)", span="1035-1035"];
m11_597 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="1037-1037"];
m11_602 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="StringEnumConverterTests.cs", label="BigInteger total = i + -j", span="1043-1043"];
m11_598 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="StringEnumConverterTests.cs", label="reader.Read()", span="1038-1038"];
m11_599 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(typeof(long), reader.ValueType)", span="1039-1039"];
m11_600 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="StringEnumConverterTests.cs", label="int j = 1", span="1041-1041"];
m11_601 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="StringEnumConverterTests.cs", label="j < 1000", span="1041-1041"];
m11_606 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="StringEnumConverterTests.cs", label="j++", span="1041-1041"];
m11_603 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="StringEnumConverterTests.cs", label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="1045-1045"];
m11_604 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="StringEnumConverterTests.cs", label="reader.Read()", span="1046-1046"];
m11_605 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(typeof(BigInteger), reader.ValueType)", span="1048-1048"];
m11_607 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", span="1033-1033"];
m11_902 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", span="1502-1502"];
m11_903 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="StringEnumConverterTests.cs", label="StringBuilder sb = new StringBuilder()", span="1504-1504"];
m11_904 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="StringEnumConverterTests.cs", label="StringWriter sw = new StringWriter(sb)", span="1505-1505"];
m11_930 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="StringEnumConverterTests.cs", label="string json = sb.ToString()", span="1544-1544"];
m11_905 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="StringEnumConverterTests.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)\r\n            {\r\n                Formatting = Formatting.Indented\r\n            }", span="1507-1510"];
m11_906 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="StringEnumConverterTests.cs", label="jsonWriter.WriteStartArray()", span="1512-1512"];
m11_907 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="StringEnumConverterTests.cs", label="jsonWriter.WriteValue(true)", span="1513-1513"];
m11_908 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="StringEnumConverterTests.cs", label="jsonWriter.WriteStartObject()", span="1515-1515"];
m11_909 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="StringEnumConverterTests.cs", label="jsonWriter.WritePropertyName(''integer'')", span="1516-1516"];
m11_910 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="StringEnumConverterTests.cs", label="jsonWriter.WriteValue(99)", span="1517-1517"];
m11_911 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="StringEnumConverterTests.cs", label="jsonWriter.WritePropertyName(''string'')", span="1518-1518"];
m11_912 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="StringEnumConverterTests.cs", label="jsonWriter.WriteValue(''how now brown cow?'')", span="1519-1519"];
m11_913 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="StringEnumConverterTests.cs", label="jsonWriter.WritePropertyName(''array'')", span="1520-1520"];
m11_914 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="StringEnumConverterTests.cs", label="jsonWriter.WriteStartArray()", span="1522-1522"];
m11_917 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="StringEnumConverterTests.cs", label="jsonWriter.WriteValue(i)", span="1525-1525"];
m11_919 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="StringEnumConverterTests.cs", label="jsonWriter.WriteStartObject()", span="1528-1528"];
m11_920 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="StringEnumConverterTests.cs", label="jsonWriter.WritePropertyName(''decimal'')", span="1529-1529"];
m11_921 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="StringEnumConverterTests.cs", label="jsonWriter.WriteValue(990.00990099m)", span="1530-1530"];
m11_922 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="StringEnumConverterTests.cs", label="jsonWriter.WriteEndObject()", span="1531-1531"];
m11_923 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="StringEnumConverterTests.cs", label="jsonWriter.WriteValue(5)", span="1533-1533"];
m11_924 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="StringEnumConverterTests.cs", label="jsonWriter.WriteEndArray()", span="1534-1534"];
m11_925 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="StringEnumConverterTests.cs", label="jsonWriter.WriteEndObject()", span="1536-1536"];
m11_926 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="StringEnumConverterTests.cs", label="jsonWriter.WriteValue(''This is a string.'')", span="1538-1538"];
m11_927 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="StringEnumConverterTests.cs", label="jsonWriter.WriteNull()", span="1539-1539"];
m11_928 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="StringEnumConverterTests.cs", label="jsonWriter.WriteNull()", span="1540-1540"];
m11_929 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="StringEnumConverterTests.cs", label="jsonWriter.WriteEndArray()", span="1541-1541"];
m11_915 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="StringEnumConverterTests.cs", label="int i = 0", span="1523-1523"];
m11_916 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="StringEnumConverterTests.cs", label="i < 5", span="1523-1523"];
m11_918 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="StringEnumConverterTests.cs", label="i++", span="1523-1523"];
m11_931 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="StringEnumConverterTests.cs", label="JsonSerializer serializer = new JsonSerializer()", span="1546-1546"];
m11_932 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="StringEnumConverterTests.cs", label="object jsonObject = serializer.Deserialize(new JsonTextReader(new StringReader(json)))", span="1548-1548"];
m11_937 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(json, sb.ToString())", span="1561-1561"];
m11_936 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="StringEnumConverterTests.cs", label="serializer.Serialize(jsonWriter, jsonObject)", span="1558-1558"];
m11_933 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="StringEnumConverterTests.cs", label="sb = new StringBuilder()", span="1550-1550"];
m11_934 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="StringEnumConverterTests.cs", label="sw = new StringWriter(sb)", span="1551-1551"];
m11_935 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="StringEnumConverterTests.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)\r\n            {\r\n                Formatting = Formatting.Indented\r\n            }", span="1553-1556"];
m11_938 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", span="1502-1502"];
m11_1185 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", span="1916-1916"];
m11_1186 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''new Date()''))", span="1918-1918"];
m11_1187 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="StringEnumConverterTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Error reading bytes. Unexpected token: StartConstructor. Path '', line 1, position 9.'',\r\n                () => { reader.ReadAsBytes(); })", span="1920-1922"];
m11_1188 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", span="1916-1916"];
m11_1352 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="StringEnumConverterTests.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m11_624 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", span="1096-1096"];
m11_625 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="StringEnumConverterTests.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@'''h\u123''))", span="1098-1098"];
m11_626 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="StringEnumConverterTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unexpected end while parsing unicode character. Path '', line 1, position 4.'',\r\n                () => { reader.Read(); })", span="1100-1102"];
m11_627 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", span="1096-1096"];
m11_1561 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", span="2518-2518"];
m11_1562 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="StringEnumConverterTests.cs", label="string json = ''new Date !''", span="2520-2520"];
m11_1563 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2521-2521"];
m11_1564 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="StringEnumConverterTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unexpected character while parsing constructor: !. Path '', line 1, position 9.'',\r\n                () => { reader.Read(); })", span="2523-2525"];
m11_1565 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", span="2518-2518"];
m11_30 [cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="329-329"];
m11_31 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.NamedEnumCommaTest()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.NamedEnumCommaTest()", span="179-179"];
m11_32 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.NamedEnumCommaTest()", file="StringEnumConverterTests.cs", label="EnumContainer<NamedEnumWithComma> c = new EnumContainer<NamedEnumWithComma>\r\n            {\r\n                Enum = NamedEnumWithComma.Third\r\n            }", span="181-184"];
m11_33 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.NamedEnumCommaTest()", file="StringEnumConverterTests.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented, new StringEnumConverter())", span="186-186"];
m11_34 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.NamedEnumCommaTest()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(@''{\r\n  ''''Enum'''': '''',third''''\r\n}'', json)", span="187-189"];
m11_35 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.NamedEnumCommaTest()", file="StringEnumConverterTests.cs", label="EnumContainer<NamedEnumWithComma> c2 = JsonConvert.DeserializeObject<EnumContainer<NamedEnumWithComma>>(json, new StringEnumConverter())", span="191-191"];
m11_36 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.NamedEnumCommaTest()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(NamedEnumWithComma.Third, c2.Enum)", span="192-192"];
m11_37 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.NamedEnumCommaTest()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.NamedEnumCommaTest()", span="179-179"];
m11_38 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", span="751-751"];
m11_39 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.NamedEnumCommaTest2()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.NamedEnumCommaTest2()", span="196-196"];
m11_40 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.NamedEnumCommaTest2()", file="StringEnumConverterTests.cs", label="EnumContainer<NamedEnumWithComma> c = new EnumContainer<NamedEnumWithComma>\r\n            {\r\n                Enum = NamedEnumWithComma.JustComma\r\n            }", span="198-201"];
m11_41 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.NamedEnumCommaTest2()", file="StringEnumConverterTests.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented, new StringEnumConverter())", span="203-203"];
m11_1393 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", span="2234-2234"];
m11_1394 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''nul''))", span="2236-2236"];
m11_1395 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="StringEnumConverterTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Error parsing null value. Path '', line 0, position 0.'',\r\n                () => { reader.Read(); })", span="2238-2240"];
m11_1396 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", span="2234-2234"];
m11_1497 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", span="2420-2420"];
m11_1498 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="StringEnumConverterTests.cs", label="string json = ''[,,, \n\r\n \0   \r  , ,    ]''", span="2422-2422"];
m11_1499 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2423-2423"];
m11_1500 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2425-2425"];
m11_1501 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2426-2426"];
m11_1502 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2428-2428"];
m11_1503 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2429-2429"];
m11_1504 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2431-2431"];
m11_1505 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2432-2432"];
m11_1506 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2434-2434"];
m11_1507 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2435-2435"];
m11_1508 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2437-2437"];
m11_1509 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2438-2438"];
m11_1510 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2440-2440"];
m11_1511 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2441-2441"];
m11_1512 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2443-2443"];
m11_1513 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2444-2444"];
m11_1514 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", span="2420-2420"];
m11_205 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Assert.AreEqual(DuplicateNameEnum2.FooBar, o.Value2)", span="568-568"];
m11_127 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="240-240"];
m11_129 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="243-243"];
m11_130 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="StringEnumConverterTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(''Unexpected content while parsing JSON. Path 'u', line 1, position 27.'',\r\n                () => { reader.Read(); })", span="245-246"];
m11_128 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="242-242"];
m11_131 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", span="227-227"];
m11_297 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", span="587-587"];
m11_298 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", file="StringEnumConverterTests.cs", label="string json = @''[\r\n''''Small'''',\r\n''''Medium'''',\r\n''''Large''''\r\n]   \r\n\r\n''", span="589-595"];
m11_299 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="597-597"];
m11_300 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", file="StringEnumConverterTests.cs", label="reader.Read()", span="598-598"];
m11_301 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", span="587-587"];
m11_503 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(int)", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(int)", span="379-379"];
m11_197 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="397-397"];
m11_242 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Exit lambda expression", span="623-626"];
m11_270 [cluster="System.Text.UTF8Encoding.UTF8Encoding(bool)", file="StringEnumConverterTests.cs", label=s, span=""];
m11_465 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", span="838-838"];
m11_466 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", file="StringEnumConverterTests.cs", label="JsonReader reader = new JsonTextReader(new StringReader('''hi''))", span="840-840"];
m11_467 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", file="StringEnumConverterTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unterminated string. Expected delimiter: '. Path '', line 1, position 3.'',\r\n                () => { reader.Read(); })", span="842-844"];
m11_468 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", span="838-838"];
m11_1569 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", span="2529-2529"];
m11_1570 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="StringEnumConverterTests.cs", label="string json = ''{hi:1, ''", span="2531-2531"];
m11_1571 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2532-2532"];
m11_1572 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2534-2534"];
m11_1573 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2535-2535"];
m11_1574 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2536-2536"];
m11_1575 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="StringEnumConverterTests.cs", label="Assert.IsFalse(reader.Read())", span="2537-2537"];
m11_1576 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", span="2529-2529"];
m11_1811 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", span="2916-2916"];
m11_1812 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="StringEnumConverterTests.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''{}}''))", span="2918-2918"];
m11_1813 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2919-2919"];
m11_1814 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2920-2920"];
m11_1815 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="StringEnumConverterTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Additional text encountered after finished reading JSON content: }. Path '', line 1, position 2.'',\r\n                () => { reader.Read(); })", span="2922-2924"];
m11_1816 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", span="2916-2916"];
m11_2006 [cluster="System.DateTimeOffset.DateTimeOffset(long, System.TimeSpan)", file="StringEnumConverterTests.cs", label="Entry System.DateTimeOffset.DateTimeOffset(long, System.TimeSpan)", span="0-0"];
m11_20 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(BigInteger.Parse(''333333333333333333333333333333333333333''), i)", span="85-85"];
m11_1177 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", span="365-365"];
m11_2068 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", span="3285-3285"];
m11_2069 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="StringEnumConverterTests.cs", label=Error, span="3287-3287"];
m11_2071 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="StringEnumConverterTests.cs", label="return _inner.Read(buffer, index, 1);", span="3290-3290"];
m11_2070 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="StringEnumConverterTests.cs", label="throw new Exception(''Read error'');", span="3288-3288"];
m11_2072 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", span="3285-3285"];
m11_200 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(2, s.Length)", span="401-401"];
m11_44 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.NamedEnumCommaTest2()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(NamedEnumWithComma.JustComma, c2.Enum)", span="209-209"];
m11_43 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.NamedEnumCommaTest2()", file="StringEnumConverterTests.cs", label="EnumContainer<NamedEnumWithComma> c2 = JsonConvert.DeserializeObject<EnumContainer<NamedEnumWithComma>>(json, new StringEnumConverter())", span="208-208"];
m11_45 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.NamedEnumCommaTest2()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.NamedEnumCommaTest2()", span="196-196"];
m11_61 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClass()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClass()", span="232-232"];
m11_64 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClassWithCamelCase()", file="StringEnumConverterTests.cs", label="EnumClass enumClass = new EnumClass()", span="251-251"];
m11_67 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClassWithCamelCase()", file="StringEnumConverterTests.cs", label="enumClass.NullableStoreColor2 = null", span="254-254"];
m11_70 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClassWithCamelCase()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClassWithCamelCase()", span="249-249"];
m11_60 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClass()", file="StringEnumConverterTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''StoreColor'''': ''''Red'''',\r\n  ''''NullableStoreColor1'''': ''''White'''',\r\n  ''''NullableStoreColor2'''': null\r\n}'', json)", span="241-245"];
m11_63 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClassWithCamelCase()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClassWithCamelCase()", span="249-249"];
m11_66 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClassWithCamelCase()", file="StringEnumConverterTests.cs", label="enumClass.NullableStoreColor1 = StoreColor.DarkGoldenrod", span="253-253"];
m11_69 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClassWithCamelCase()", file="StringEnumConverterTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''StoreColor'''': ''''red'''',\r\n  ''''NullableStoreColor1'''': ''''darkGoldenrod'''',\r\n  ''''NullableStoreColor2'''': null\r\n}'', json)", span="258-262"];
m11_62 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumClass.EnumClass()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumClass.EnumClass()", span="47-47"];
m11_65 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClassWithCamelCase()", file="StringEnumConverterTests.cs", label="enumClass.StoreColor = StoreColor.Red", span="252-252"];
m11_68 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClassWithCamelCase()", file="StringEnumConverterTests.cs", label="string json = JsonConvert.SerializeObject(enumClass, Formatting.Indented, new StringEnumConverter { CamelCaseText = true })", span="256-256"];
m11_110 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEnumClass()", file="StringEnumConverterTests.cs", label="EnumClass enumClass = JsonConvert.DeserializeObject<EnumClass>(json, new StringEnumConverter())", span="353-353"];
m11_109 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEnumClass()", file="StringEnumConverterTests.cs", label="string json = @''{\r\n  ''''StoreColor'''': ''''Red'''',\r\n  ''''NullableStoreColor1'''': ''''White'''',\r\n  ''''NullableStoreColor2'''': null\r\n}''", span="347-351"];
m11_113 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEnumClass()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(null, enumClass.NullableStoreColor2)", span="357-357"];
m11_112 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEnumClass()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(StoreColor.White, enumClass.NullableStoreColor1)", span="356-356"];
m11_117 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEnumClassUndefined()", file="StringEnumConverterTests.cs", label="EnumClass enumClass = JsonConvert.DeserializeObject<EnumClass>(json, new StringEnumConverter())", span="369-369"];
m11_116 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEnumClassUndefined()", file="StringEnumConverterTests.cs", label="string json = @''{\r\n  ''''StoreColor'''': 1000,\r\n  ''''NullableStoreColor1'''': 1000,\r\n  ''''NullableStoreColor2'''': null\r\n}''", span="363-367"];
m11_111 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEnumClass()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(StoreColor.Red, enumClass.StoreColor)", span="355-355"];
m11_114 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEnumClass()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEnumClass()", span="345-345"];
m11_118 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEnumClassUndefined()", file="StringEnumConverterTests.cs", label="Assert.AreEqual((StoreColor)1000, enumClass.StoreColor)", span="371-371"];
m11_133 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEmptyStringIntoNullable()", file="StringEnumConverterTests.cs", label="string json = @''{\r\n  ''''StoreColor'''': ''''Red'''',\r\n  ''''NullableStoreColor1'''': ''''White'''',\r\n  ''''NullableStoreColor2'''': ''''''''\r\n}''", span="404-408"];
m11_132 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEmptyStringIntoNullable()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEmptyStringIntoNullable()", span="402-402"];
m11_134 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEmptyStringIntoNullable()", file="StringEnumConverterTests.cs", label="EnumClass c = JsonConvert.DeserializeObject<EnumClass>(json, new StringEnumConverter())", span="410-410"];
m11_170 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumMemberPlusFlags()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(Foo.Bat | Foo.SerializeAsBaz, foos[0])", span="489-489"];
m11_169 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumMemberPlusFlags()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(6, foos.Count)", span="488-488"];
m11_171 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumMemberPlusFlags()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(Foo.FooBar, foos[1])", span="490-490"];
m11_277 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="reader.Read()", span="546-546"];
m11_276 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Entry lambda expression", span="544-549"];
m11_278 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Exit lambda expression", span="544-549"];
m11_295 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="reader.Read()", span="583-583"];
m11_294 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Entry lambda expression", span="583-583"];
m11_296 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Exit lambda expression", span="583-583"];
m11_308 [cluster="lambda expression", color=red, community=0, file="StringEnumConverterTests.cs", label="0: reader.Read()", span="614-614"];
m11_307 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Entry lambda expression", span="612-617"];
m11_309 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Exit lambda expression", span="612-617"];
m11_462 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Entry lambda expression", span="834-834"];
m11_463 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="new JsonTextReader(null)", span="834-834"];
m11_464 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Exit lambda expression", span="834-834"];
m11_470 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="reader.Read()", span="844-844"];
m11_469 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Entry lambda expression", span="844-844"];
m11_471 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Exit lambda expression", span="844-844"];
m11_560 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="982-982"];
m11_559 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Entry lambda expression", span="980-984"];
m11_561 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="reader.ReadAsInt32()", span="983-983"];
m11_562 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Exit lambda expression", span="980-984"];
m11_576 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="1005-1005"];
m11_575 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Entry lambda expression", span="1003-1007"];
m11_577 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="reader.ReadAsInt32()", span="1006-1006"];
m11_578 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Exit lambda expression", span="1003-1007"];
m11_629 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="reader.Read()", span="1102-1102"];
m11_628 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Entry lambda expression", span="1102-1102"];
m11_630 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Exit lambda expression", span="1102-1102"];
m11_636 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="reader.Read()", span="1112-1112"];
m11_635 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Entry lambda expression", span="1112-1112"];
m11_637 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Exit lambda expression", span="1112-1112"];
m11_643 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="reader.ReadAsBytes()", span="1122-1122"];
m11_642 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Entry lambda expression", span="1122-1122"];
m11_644 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Exit lambda expression", span="1122-1122"];
m11_654 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="reader.ReadAsBytes()", span="1135-1135"];
m11_653 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Entry lambda expression", span="1135-1135"];
m11_655 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Exit lambda expression", span="1135-1135"];
m11_669 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="reader.Read()", span="1156-1156"];
m11_668 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Entry lambda expression", span="1156-1156"];
m11_670 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Exit lambda expression", span="1156-1156"];
m11_822 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="reader.ReadAsInt32()", span="1409-1409"];
m11_821 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Entry lambda expression", span="1409-1409"];
m11_825 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="reader.ReadAsInt32()", span="1412-1412"];
m11_824 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Entry lambda expression", span="1412-1412"];
m11_828 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="reader.ReadAsInt32()", span="1415-1415"];
m11_827 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Entry lambda expression", span="1415-1415"];
m11_831 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="reader.ReadAsInt32()", span="1418-1418"];
m11_830 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Entry lambda expression", span="1418-1418"];
m11_834 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="reader.ReadAsInt32()", span="1424-1424"];
m11_833 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Entry lambda expression", span="1424-1424"];
m11_823 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Exit lambda expression", span="1409-1409"];
m11_826 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Exit lambda expression", span="1412-1412"];
m11_829 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Exit lambda expression", span="1415-1415"];
m11_832 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Exit lambda expression", span="1418-1418"];
m11_835 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Exit lambda expression", span="1424-1424"];
m11_859 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="reader.ReadAsDecimal()", span="1445-1445"];
m11_858 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Entry lambda expression", span="1445-1445"];
m11_862 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="reader.Read()", span="1449-1449"];
m11_861 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Entry lambda expression", span="1449-1449"];
m11_865 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="reader.ReadAsDecimal()", span="1458-1458"];
m11_864 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Entry lambda expression", span="1458-1458"];
m11_860 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Exit lambda expression", span="1445-1445"];
m11_863 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Exit lambda expression", span="1449-1449"];
m11_866 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Exit lambda expression", span="1458-1458"];
m11_897 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="reader.Read()", span="1487-1487"];
m11_896 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Entry lambda expression", span="1487-1487"];
m11_900 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="reader.Read()", span="1498-1498"];
m11_899 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Entry lambda expression", span="1498-1498"];
m11_898 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Exit lambda expression", span="1487-1487"];
m11_901 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Exit lambda expression", span="1498-1498"];
m11_1075 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="reader.Read()", span="1751-1751"];
m11_1074 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Entry lambda expression", span="1751-1751"];
m11_1076 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Exit lambda expression", span="1751-1751"];
m11_1153 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="reader.Read()", span="1863-1863"];
m11_1152 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Entry lambda expression", span="1863-1863"];
m11_1154 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Exit lambda expression", span="1863-1863"];
m11_1170 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="reader.ReadAsBytes()", span="1891-1891"];
m11_1169 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Entry lambda expression", span="1891-1891"];
m11_1171 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Exit lambda expression", span="1891-1891"];
m11_1183 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="reader.ReadAsDecimal()", span="1912-1912"];
m11_1182 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Entry lambda expression", span="1912-1912"];
m11_1184 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Exit lambda expression", span="1912-1912"];
m11_1190 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="reader.ReadAsBytes()", span="1922-1922"];
m11_1189 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Entry lambda expression", span="1922-1922"];
m11_1191 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Exit lambda expression", span="1922-1922"];
m11_1197 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="reader.ReadAsDateTimeOffset()", span="1933-1933"];
m11_1196 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Entry lambda expression", span="1933-1933"];
m11_1198 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Exit lambda expression", span="1933-1933"];
m11_1211 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="reader.ReadAsBytes()", span="1955-1955"];
m11_1210 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Entry lambda expression", span="1955-1955"];
m11_1212 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Exit lambda expression", span="1955-1955"];
m11_1218 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="reader.ReadAsBytes()", span="1965-1965"];
m11_1217 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Entry lambda expression", span="1965-1965"];
m11_1219 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Exit lambda expression", span="1965-1965"];
m11_1289 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="reader.ReadAsDateTimeOffset()", span="2076-2076"];
m11_1288 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Entry lambda expression", span="2076-2076"];
m11_1290 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Exit lambda expression", span="2076-2076"];
m11_1391 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="reader.ReadAsInt32()", span="2230-2230"];
m11_1390 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Entry lambda expression", span="2230-2230"];
m11_1392 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Exit lambda expression", span="2230-2230"];
m11_1398 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="reader.Read()", span="2240-2240"];
m11_1397 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Entry lambda expression", span="2240-2240"];
m11_1399 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Exit lambda expression", span="2240-2240"];
m11_1405 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="reader.Read()", span="2250-2250"];
m11_1404 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Entry lambda expression", span="2250-2250"];
m11_1406 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Exit lambda expression", span="2250-2250"];
m11_1412 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="reader.Read()", span="2260-2260"];
m11_1411 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Entry lambda expression", span="2260-2260"];
m11_1413 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Exit lambda expression", span="2260-2260"];
m11_1419 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="reader.Read()", span="2270-2270"];
m11_1418 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Entry lambda expression", span="2270-2270"];
m11_1420 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Exit lambda expression", span="2270-2270"];
m11_1426 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="reader.Read()", span="2280-2280"];
m11_1425 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Entry lambda expression", span="2280-2280"];
m11_1427 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Exit lambda expression", span="2280-2280"];
m11_1559 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="reader.Read()", span="2514-2514"];
m11_1558 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Entry lambda expression", span="2514-2514"];
m11_1560 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Exit lambda expression", span="2514-2514"];
m11_1567 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="reader.Read()", span="2525-2525"];
m11_1566 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Entry lambda expression", span="2525-2525"];
m11_1568 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Exit lambda expression", span="2525-2525"];
m11_1598 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="reader.Read()", span="2573-2573"];
m11_1597 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Entry lambda expression", span="2573-2573"];
m11_1599 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Exit lambda expression", span="2573-2573"];
m11_1615 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2597-2597"];
m11_1614 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Entry lambda expression", span="2597-2597"];
m11_1616 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Exit lambda expression", span="2597-2597"];
m11_1779 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="reader.Read()", span="2862-2862"];
m11_1778 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Entry lambda expression", span="2862-2862"];
m11_1780 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Exit lambda expression", span="2862-2862"];
m11_1818 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="reader.Read()", span="2924-2924"];
m11_1817 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Entry lambda expression", span="2924-2924"];
m11_1819 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Exit lambda expression", span="2924-2924"];
m11_1874 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="3009-3009"];
m11_1873 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Entry lambda expression", span="3009-3009"];
m11_1875 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Exit lambda expression", span="3009-3009"];
m11_1906 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="3027-3027"];
m11_1909 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="3047-3047"];
m11_1905 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Entry lambda expression", span="3027-3027"];
m11_1908 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Entry lambda expression", span="3047-3047"];
m11_1907 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Exit lambda expression", span="3027-3027"];
m11_1910 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Exit lambda expression", span="3047-3047"];
m11_2031 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="jsonTextReader.Read()", span="3207-3207"];
m11_2034 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="jsonTextReader.Read()", span="3210-3210"];
m11_2037 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="jsonTextReader.Read()", span="3221-3221"];
m11_2040 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="jsonTextReader.Read()", span="3232-3232"];
m11_2043 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="jsonTextReader.Read()", span="3235-3235"];
m11_2046 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="jsonTextReader.Read()", span="3238-3238"];
m11_2030 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Entry lambda expression", span="3207-3207"];
m11_2033 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Entry lambda expression", span="3210-3210"];
m11_2036 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Entry lambda expression", span="3221-3221"];
m11_2039 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Entry lambda expression", span="3232-3232"];
m11_2042 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Entry lambda expression", span="3235-3235"];
m11_2045 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Entry lambda expression", span="3238-3238"];
m11_2032 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Exit lambda expression", span="3207-3207"];
m11_2035 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Exit lambda expression", span="3210-3210"];
m11_2038 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Exit lambda expression", span="3221-3221"];
m11_2041 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Exit lambda expression", span="3232-3232"];
m11_2044 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Exit lambda expression", span="3235-3235"];
m11_2047 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Exit lambda expression", span="3238-3238"];
m11_234 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="StringEnumConverterTests.cs", label="reader.Close()", span="461-461"];
m11_235 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", color=green, community=0, file="StringEnumConverterTests.cs", label="0: Assert.IsFalse(ms.CanRead)", span="462-462"];
m11_236 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="StringEnumConverterTests.cs", label="ms = new MemoryStream()", span="464-464"];
m11_240 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(ms.CanRead)", span="469-469"];
m11_241 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", color=green, community=0, file="StringEnumConverterTests.cs", label="0: Exit Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", span="455-455"];
m11_17 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="StringEnumConverterTests.cs", label="Assert.IsFalse(jsonTextReader.Read())", span="81-81"];
m11_144 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="263-263"];
m11_204 [cluster="object.ToString()", file="StringEnumConverterTests.cs", label="Entry object.ToString()", span="0-0"];
m11_142 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(1.0m, reader.Value)", span="261-261"];
m11_16 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", span="79-79"];
m11_143 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="262-262"];
m11_145 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="265-265"];
m11_203 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", span="388-388"];
m11_206 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", span="408-408"];
m11_202 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(1, stringInfo.LengthInTextElements)", span="404-404"];
m11_201 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="StringEnumConverterTests.cs", label="StringInfo stringInfo = new StringInfo(s)", span="403-403"];
m11_146 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(1L, reader.Value)", span="266-266"];
m11_2073 [cluster="System.Exception.Exception(string)", file="StringEnumConverterTests.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m11_950 [cluster="System.Text.StringBuilder.ToString()", file="StringEnumConverterTests.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m11_1000 [cluster="System.Convert.ToInt32(char)", file="StringEnumConverterTests.cs", label="Entry System.Convert.ToInt32(char)", span="0-0"];
m11_729 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", span="1268-1268"];
m11_730 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="StringEnumConverterTests.cs", label="string helloWorld = ''Hello world!''", span="1270-1270"];
m11_731 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="StringEnumConverterTests.cs", label="byte[] helloWorldData = Encoding.UTF8.GetBytes(helloWorld)", span="1271-1271"];
m11_732 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="StringEnumConverterTests.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''[1,''' + Convert.ToBase64String(helloWorldData) + @''']''))", span="1273-1273"];
m11_738 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="StringEnumConverterTests.cs", label="CollectionAssert.AreEquivalent(helloWorldData, data)", span="1279-1279"];
m11_733 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="1274-1274"];
m11_734 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="1275-1275"];
m11_735 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="1276-1276"];
m11_736 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1277-1277"];
m11_737 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="StringEnumConverterTests.cs", label="byte[] data = reader.ReadAsBytes()", span="1278-1278"];
m11_739 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Bytes, reader.TokenType)", span="1280-1280"];
m11_740 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="1281-1281"];
m11_741 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="1282-1282"];
m11_742 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="StringEnumConverterTests.cs", label="Assert.IsFalse(reader.Read())", span="1284-1284"];
m11_743 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", span="1268-1268"];
m11_787 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", span="1355-1355"];
m11_788 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="StringEnumConverterTests.cs", label="string json = @''[\r\n  true,\r\n  {\r\n    ''''integer'''': 99,\r\n    ''''string'''': ''''how now brown cow?'''',\r\n    ''''array'''': [\r\n      0,\r\n      1,\r\n      2,\r\n      3,\r\n      4,\r\n      {\r\n        ''''decimal'''': 990.00990099\r\n      },\r\n      5\r\n    ]\r\n  },\r\n  ''''This is a string.'''',\r\n  null,\r\n  null\r\n]''", span="1357-1377"];
m11_789 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1379-1379"];
m11_790 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="StringEnumConverterTests.cs", label="reader.Read()", span="1380-1380"];
m11_791 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", span="1355-1355"];
m11_500 [cluster="System.IO.StringWriter.StringWriter()", file="StringEnumConverterTests.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m11_1788 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", span="2878-2878"];
m11_1789 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="StringEnumConverterTests.cs", label="string json = @''0x20''", span="2880-2880"];
m11_1790 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2882-2882"];
m11_1791 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="StringEnumConverterTests.cs", label="reader.ReadAsDecimal()", span="2884-2884"];
m11_1792 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2885-2885"];
m11_1793 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(32m, reader.Value)", span="2886-2886"];
m11_1794 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", span="2878-2878"];
m11_943 [cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="357-357"];
m11_2048 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", span="3247-3247"];
m11_2049 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="StringEnumConverterTests.cs", label="StringWriter sw = new StringWriter()", span="3249-3249"];
m11_2050 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="StringEnumConverterTests.cs", label="JsonTextWriter writer = new JsonTextWriter(sw)", span="3250-3250"];
m11_2055 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="StringEnumConverterTests.cs", label="string json = sw.ToString()", span="3257-3257"];
m11_2051 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="StringEnumConverterTests.cs", label="writer.WriteStartArray()", span="3252-3252"];
m11_2052 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="StringEnumConverterTests.cs", label="writer.WriteValue(decimal.MaxValue)", span="3253-3253"];
m11_2053 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="StringEnumConverterTests.cs", label="writer.WriteValue(decimal.MinValue)", span="3254-3254"];
m11_2054 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="StringEnumConverterTests.cs", label="writer.WriteEndArray()", span="3255-3255"];
m11_2056 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="StringEnumConverterTests.cs", label="StringReader sr = new StringReader(json)", span="3259-3259"];
m11_2057 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(sr)", span="3260-3260"];
m11_2058 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="3262-3262"];
m11_2059 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="StringEnumConverterTests.cs", label="decimal? max = reader.ReadAsDecimal()", span="3264-3264"];
m11_2061 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="StringEnumConverterTests.cs", label="decimal? min = reader.ReadAsDecimal()", span="3267-3267"];
m11_2063 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="3270-3270"];
m11_2060 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(decimal.MaxValue, max)", span="3265-3265"];
m11_2062 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(decimal.MinValue, min)", span="3268-3268"];
m11_2064 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", span="3247-3247"];
m11_1178 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", span="1906-1906"];
m11_1179 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''new Date()''))", span="1908-1908"];
m11_1180 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="StringEnumConverterTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Error reading decimal. Unexpected token: StartConstructor. Path '', line 1, position 9.'',\r\n                () => { reader.ReadAsDecimal(); })", span="1910-1912"];
m11_1181 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", span="1906-1906"];
m11_163 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="289-289"];
m11_2081 [cluster="Newtonsoft.Json.Tests.SlowStream.Flush()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.SlowStream.Flush()", span="3327-3327"];
m11_2082 [cluster="Newtonsoft.Json.Tests.SlowStream.Flush()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.SlowStream.Flush()", span="3327-3327"];
m11_715 [cluster="System.IO.StringReader.ReadLine()", file="StringEnumConverterTests.cs", label="Entry System.IO.StringReader.ReadLine()", span="0-0"];
m11_745 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", span="1288-1288"];
m11_746 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="StringEnumConverterTests.cs", label="string helloWorld = ''Hello world!''", span="1290-1290"];
m11_747 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="StringEnumConverterTests.cs", label="byte[] helloWorldData = Encoding.UTF8.GetBytes(helloWorld)", span="1291-1291"];
m11_748 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="StringEnumConverterTests.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''{num:1,data:''' + Convert.ToBase64String(helloWorldData) + @'''}''))", span="1293-1293"];
m11_756 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="StringEnumConverterTests.cs", label="CollectionAssert.AreEquivalent(helloWorldData, data)", span="1301-1301"];
m11_749 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="1294-1294"];
m11_750 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1295-1295"];
m11_751 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="1296-1296"];
m11_752 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="1297-1297"];
m11_753 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1298-1298"];
m11_754 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="1299-1299"];
m11_755 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="StringEnumConverterTests.cs", label="byte[] data = reader.ReadAsBytes()", span="1300-1300"];
m11_757 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Bytes, reader.TokenType)", span="1302-1302"];
m11_758 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="1303-1303"];
m11_759 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1304-1304"];
m11_760 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="StringEnumConverterTests.cs", label="Assert.IsFalse(reader.Read())", span="1306-1306"];
m11_761 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", span="1288-1288"];
m11_558 [cluster="long.ToString(System.IFormatProvider)", file="StringEnumConverterTests.cs", label="Entry long.ToString(System.IFormatProvider)", span="0-0"];
m11_946 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="810-810"];
m11_1381 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", span="2216-2216"];
m11_1382 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="StringEnumConverterTests.cs", label="string json = @''{''''Name'''': 1.1}''", span="2218-2218"];
m11_1383 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2220-2220"];
m11_1384 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2222-2222"];
m11_1385 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2223-2223"];
m11_1386 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2225-2225"];
m11_1387 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2226-2226"];
m11_1388 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="StringEnumConverterTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Input string '1.1' is not a valid integer. Path 'Name', line 1, position 12.'',\r\n                () => { reader.ReadAsInt32(); })", span="2228-2230"];
m11_1389 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", span="2216-2216"];
m11_1781 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", span="2866-2866"];
m11_1782 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="StringEnumConverterTests.cs", label="string json = @''010''", span="2868-2868"];
m11_1783 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2870-2870"];
m11_1784 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="StringEnumConverterTests.cs", label="reader.ReadAsDecimal()", span="2872-2872"];
m11_1785 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2873-2873"];
m11_1786 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(8m, reader.Value)", span="2874-2874"];
m11_1787 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", span="2866-2866"];
m11_230 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.AllowIntegerValueAndStringNumber()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.AllowIntegerValueAndStringNumber()", span="610-610"];
m11_231 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.AllowIntegerValueAndStringNumber()", color=green, community=0, file="StringEnumConverterTests.cs", label="0: JsonSerializationException ex = ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject<StoreColor>(''\''1\'''', new StringEnumConverter { AllowIntegerValues = false });\r\n            })", span="612-615"];
m11_232 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.AllowIntegerValueAndStringNumber()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''Integer string '1' is not allowed.'', ex.InnerException.Message)", span="617-617"];
m11_233 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.AllowIntegerValueAndStringNumber()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.AllowIntegerValueAndStringNumber()", span="610-610"];
m11_237 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.AllowIntegerValueAndNonNamedValue()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.AllowIntegerValueAndNonNamedValue()", span="621-621"];
m11_238 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.AllowIntegerValueAndNonNamedValue()", color=green, community=1, file="StringEnumConverterTests.cs", label="0: ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.SerializeObject((StoreColor)999, new StringEnumConverter { AllowIntegerValues = false });\r\n            }, ''Integer value 999 is not allowed. Path ''.'')", span="623-626"];
m11_239 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.AllowIntegerValueAndNonNamedValue()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.AllowIntegerValueAndNonNamedValue()", span="621-621"];
m11_504 [cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="381-381"];
m11_2096 [cluster="System.NotSupportedException.NotSupportedException()", file="StringEnumConverterTests.cs", label="Entry System.NotSupportedException.NotSupportedException()", span="0-0"];
m11_1679 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", span="2702-2702"];
m11_1680 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="string json = @''//comment*//*hi*/\r\n{//comment\r\nName://comment\r\ntrue//comment after true'' + StringUtils.CarriageReturn + @''\r\n,//comment after comma'' + StringUtils.CarriageReturnLineFeed + @''\r\n''''ExpiryDate''''://comment''  + StringUtils.LineFeed + @''\r\nnew\r\n'' + StringUtils.LineFeed +\r\n                          @''Date\r\n(//comment\r\nnull//comment\r\n),\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': //comment\r\n[//comment\r\n\r\n          ''''Small''''//comment\r\n]//comment\r\n}//comment \r\n//comment 1 ''", span="2704-2723"];
m11_1681 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2725-2725"];
m11_1682 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2727-2727"];
m11_1683 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2728-2728"];
m11_1684 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''comment*//*hi*/'', reader.Value)", span="2729-2729"];
m11_1685 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(2, reader.LineNumber)", span="2730-2730"];
m11_1686 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2732-2732"];
m11_1687 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(2, reader.LineNumber)", span="2733-2733"];
m11_1688 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2734-2734"];
m11_1689 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2736-2736"];
m11_1690 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2737-2737"];
m11_1691 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(3, reader.LineNumber)", span="2738-2738"];
m11_1692 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2740-2740"];
m11_1693 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2741-2741"];
m11_1694 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''Name'', reader.Value)", span="2742-2742"];
m11_1695 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(3, reader.LineNumber)", span="2743-2743"];
m11_1696 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2745-2745"];
m11_1697 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2746-2746"];
m11_1698 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(4, reader.LineNumber)", span="2747-2747"];
m11_1699 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2749-2749"];
m11_1700 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="2750-2750"];
m11_1701 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(true, reader.Value)", span="2751-2751"];
m11_1702 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(4, reader.LineNumber)", span="2752-2752"];
m11_1703 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2754-2754"];
m11_1704 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2755-2755"];
m11_1705 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''comment after true'', reader.Value)", span="2756-2756"];
m11_1706 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(5, reader.LineNumber)", span="2757-2757"];
m11_1707 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2759-2759"];
m11_1708 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2760-2760"];
m11_1709 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''comment after comma'', reader.Value)", span="2761-2761"];
m11_1710 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(7, reader.LineNumber)", span="2762-2762"];
m11_1711 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2764-2764"];
m11_1712 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2765-2765"];
m11_1713 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''ExpiryDate'', reader.Value)", span="2766-2766"];
m11_1714 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(8, reader.LineNumber)", span="2767-2767"];
m11_1715 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2769-2769"];
m11_1716 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2770-2770"];
m11_1717 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(9, reader.LineNumber)", span="2771-2771"];
m11_1718 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2773-2773"];
m11_1719 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2774-2774"];
m11_1720 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(13, reader.LineNumber)", span="2775-2775"];
m11_1721 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="2776-2776"];
m11_1722 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2778-2778"];
m11_1723 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2779-2779"];
m11_1724 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2781-2781"];
m11_1725 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="2782-2782"];
m11_1726 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(14, reader.LineNumber)", span="2783-2783"];
m11_1727 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2785-2785"];
m11_1728 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2786-2786"];
m11_1729 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(15, reader.LineNumber)", span="2787-2787"];
m11_1730 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2789-2789"];
m11_1731 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2790-2790"];
m11_1732 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(15, reader.LineNumber)", span="2791-2791"];
m11_1733 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2793-2793"];
m11_1734 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2794-2794"];
m11_1735 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''Price'', reader.Value)", span="2795-2795"];
m11_1736 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2797-2797"];
m11_1737 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2798-2798"];
m11_1738 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2800-2800"];
m11_1739 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2801-2801"];
m11_1740 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''Sizes'', reader.Value)", span="2802-2802"];
m11_1741 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2804-2804"];
m11_1742 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2805-2805"];
m11_1743 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2807-2807"];
m11_1744 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2808-2808"];
m11_1745 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2810-2810"];
m11_1746 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2811-2811"];
m11_1747 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2813-2813"];
m11_1748 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="2814-2814"];
m11_1749 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2816-2816"];
m11_1750 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2817-2817"];
m11_1751 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2819-2819"];
m11_1752 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2820-2820"];
m11_1753 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2822-2822"];
m11_1754 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2823-2823"];
m11_1755 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2825-2825"];
m11_1756 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2826-2826"];
m11_1757 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2828-2828"];
m11_1758 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2829-2829"];
m11_1759 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''comment '', reader.Value)", span="2830-2830"];
m11_1760 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2832-2832"];
m11_1761 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2833-2833"];
m11_1762 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''comment 1 '', reader.Value)", span="2834-2834"];
m11_1763 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Assert.IsFalse(reader.Read())", span="2836-2836"];
m11_1764 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", span="2702-2702"];
m11_1235 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", span="1996-1996"];
m11_1236 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="StringEnumConverterTests.cs", label="string json = @''{''''text'''':0xabcdef12345}''", span="1998-1998"];
m11_1237 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2000-2000"];
m11_1238 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2002-2002"];
m11_1239 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2003-2003"];
m11_1240 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2005-2005"];
m11_1241 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2006-2006"];
m11_1242 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2008-2008"];
m11_1243 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2009-2009"];
m11_1244 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(11806310474565, reader.Value)", span="2010-2010"];
m11_1245 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2012-2012"];
m11_1246 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2013-2013"];
m11_1247 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", span="1996-1996"];
m11_953 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="848-848"];
m11_1863 [cluster="System.Convert.ToDouble(string, System.IFormatProvider)", file="StringEnumConverterTests.cs", label="Entry System.Convert.ToDouble(string, System.IFormatProvider)", span="0-0"];
m11_115 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", span="328-328"];
m11_119 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", span="227-227"];
m11_120 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="StringEnumConverterTests.cs", label="string json = @''{ ''''ItemName'''': ''''value'''', ''''u'''':netanelsalinger,''''r'''':9 }''", span="229-229"];
m11_121 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="231-231"];
m11_1085 [cluster="Unk.IsNotNull", file="StringEnumConverterTests.cs", label="Entry Unk.IsNotNull", span=""];
m11_1319 [cluster="System.TimeSpan.FromMinutes(double)", file="StringEnumConverterTests.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m11_2097 [cluster="Newtonsoft.Json.Tests.SlowStream.SetLength(long)", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.SlowStream.SetLength(long)", span="3360-3360"];
m11_2098 [cluster="Newtonsoft.Json.Tests.SlowStream.SetLength(long)", file="StringEnumConverterTests.cs", label="throw new NotSupportedException();", span="3362-3362"];
m11_2099 [cluster="Newtonsoft.Json.Tests.SlowStream.SetLength(long)", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.SlowStream.SetLength(long)", span="3360-3360"];
m11_212 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''ABC \ufffd'', ReadString(''ABC \\ud800''))", span="426-426"];
m11_213 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''ABC \ufffd DEF'', ReadString(''ABC \\ud800 DEF''))", span="429-429"];
m11_214 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''ABC \ufffd\ufffd DEF'', ReadString(''ABC \\udc00\\ud800 DEF''))", span="432-432"];
m11_216 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''ABC \ufffd\b'', ReadString(''ABC \\ud800\\b''))", span="437-437"];
m11_218 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''ABC \b\ufffd'', ReadString(''ABC \\b\\ud800''))", span="439-439"];
m11_215 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''\ufffd\ufffd\ufffd'', ReadString(''\udc00\ud800\ud800''))", span="435-435"];
m11_217 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''ABC \ufffd '', ReadString(''ABC \\ud800 ''))", span="438-438"];
m11_219 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", span="408-408"];
m11_220 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", span="442-442"];
m11_79 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeFlagEnum()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeFlagEnum()", span="283-283"];
m11_81 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeFlagEnum()", file="StringEnumConverterTests.cs", label="enumClass.StoreColor = StoreColor.Red | StoreColor.White", span="286-286"];
m11_82 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeFlagEnum()", file="StringEnumConverterTests.cs", label="enumClass.NullableStoreColor1 = StoreColor.White & StoreColor.Yellow", span="287-287"];
m11_83 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeFlagEnum()", file="StringEnumConverterTests.cs", label="enumClass.NullableStoreColor2 = StoreColor.Red | StoreColor.White | StoreColor.Black", span="288-288"];
m11_80 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeFlagEnum()", file="StringEnumConverterTests.cs", label="EnumClass enumClass = new EnumClass()", span="285-285"];
m11_84 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeFlagEnum()", file="StringEnumConverterTests.cs", label="string json = JsonConvert.SerializeObject(enumClass, Formatting.Indented, new StringEnumConverter())", span="290-290"];
m11_939 [cluster="System.Text.StringBuilder.StringBuilder()", file="StringEnumConverterTests.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m11_1820 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", span="2928-2928"];
m11_1821 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="StringEnumConverterTests.cs", label="double d", span="2930-2930"];
m11_1822 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="StringEnumConverterTests.cs", label="d = Convert.ToDouble(''6.0221418e23'', CultureInfo.InvariantCulture)", span="2932-2932"];
m11_1823 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="StringEnumConverterTests.cs", label="Console.WriteLine(d.ToString(new CultureInfo(''fr-FR'')))", span="2933-2933"];
m11_1824 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="StringEnumConverterTests.cs", label="Console.WriteLine(d.ToString(''0.#############################################################################''))", span="2934-2934"];
m11_1825 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="StringEnumConverterTests.cs", label="string json = @''[0e-10,0E-10,0.25e-5,0.3e10,6.0221418e23]''", span="2939-2939"];
m11_1826 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2941-2941"];
m11_1844 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="StringEnumConverterTests.cs", label="reader = new JsonTextReader(new StringReader(json))", span="2968-2968"];
m11_1827 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="StringEnumConverterTests.cs", label="reader.Read()", span="2943-2943"];
m11_1828 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="StringEnumConverterTests.cs", label="reader.Read()", span="2945-2945"];
m11_1829 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2946-2946"];
m11_1830 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(0d, reader.Value)", span="2947-2947"];
m11_1831 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="StringEnumConverterTests.cs", label="reader.Read()", span="2949-2949"];
m11_1832 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2950-2950"];
m11_1833 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(0d, reader.Value)", span="2951-2951"];
m11_1834 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="StringEnumConverterTests.cs", label="reader.Read()", span="2953-2953"];
m11_1835 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2954-2954"];
m11_1836 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(0.0000025d, reader.Value)", span="2955-2955"];
m11_1837 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="StringEnumConverterTests.cs", label="reader.Read()", span="2957-2957"];
m11_1838 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2958-2958"];
m11_1839 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(3000000000d, reader.Value)", span="2959-2959"];
m11_1840 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="StringEnumConverterTests.cs", label="reader.Read()", span="2961-2961"];
m11_1841 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2962-2962"];
m11_1842 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(602214180000000000000000d, reader.Value)", span="2963-2963"];
m11_1843 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="StringEnumConverterTests.cs", label="reader.Read()", span="2965-2965"];
m11_1845 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="StringEnumConverterTests.cs", label="reader.Read()", span="2970-2970"];
m11_1846 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="StringEnumConverterTests.cs", label="reader.ReadAsDecimal()", span="2972-2972"];
m11_1847 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2973-2973"];
m11_1848 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(0m, reader.Value)", span="2974-2974"];
m11_1849 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="StringEnumConverterTests.cs", label="reader.ReadAsDecimal()", span="2976-2976"];
m11_1850 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2977-2977"];
m11_1851 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(0m, reader.Value)", span="2978-2978"];
m11_1852 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="StringEnumConverterTests.cs", label="reader.ReadAsDecimal()", span="2980-2980"];
m11_1853 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2981-2981"];
m11_1854 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(0.0000025m, reader.Value)", span="2982-2982"];
m11_1855 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="StringEnumConverterTests.cs", label="reader.ReadAsDecimal()", span="2984-2984"];
m11_1856 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2985-2985"];
m11_1857 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(3000000000m, reader.Value)", span="2986-2986"];
m11_1858 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="StringEnumConverterTests.cs", label="reader.ReadAsDecimal()", span="2988-2988"];
m11_1859 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2989-2989"];
m11_1860 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(602214180000000000000000m, reader.Value)", span="2990-2990"];
m11_1861 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="StringEnumConverterTests.cs", label="reader.Read()", span="2992-2992"];
m11_1862 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", span="2928-2928"];
m11_1320 [cluster="System.TimeSpan.Add(System.TimeSpan)", file="StringEnumConverterTests.cs", label="Entry System.TimeSpan.Add(System.TimeSpan)", span="0-0"];
m11_1279 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", span="2062-2062"];
m11_1280 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="StringEnumConverterTests.cs", label="string json = @''{''''Offset'''':''''blablahbla''''}''", span="2064-2064"];
m11_1281 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2066-2066"];
m11_1282 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2068-2068"];
m11_1283 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2069-2069"];
m11_1284 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2071-2071"];
m11_1285 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2072-2072"];
m11_1286 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="StringEnumConverterTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Could not convert string to DateTimeOffset: blablahbla. Path 'Offset', line 1, position 22.'',\r\n                () => { reader.ReadAsDateTimeOffset(); })", span="2074-2076"];
m11_1287 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", span="2062-2062"];
m11_11 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="73-73"];
m11_12 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Integer, jsonTextReader.TokenType)", span="74-74"];
m11_13 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(typeof(BigInteger), jsonTextReader.ValueType)", span="75-75"];
m11_221 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="StringEnumConverterTests.cs", label="MemoryStream ms = new MemoryStream(Encoding.UTF8.GetBytes(@'''''''' + input + @''''''''))", span="444-444"];
m11_222 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(ms))", span="446-446"];
m11_223 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="StringEnumConverterTests.cs", label="reader.Read()", span="447-447"];
m11_225 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="StringEnumConverterTests.cs", label="return s;", span="451-451"];
m11_227 [cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="StringEnumConverterTests.cs", label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0"];
m11_224 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="StringEnumConverterTests.cs", label="string s = (string)reader.Value", span="449-449"];
m11_226 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", span="442-442"];
m11_228 [cluster="System.Text.Encoding.GetBytes(string)", file="StringEnumConverterTests.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m11_229 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="StringEnumConverterTests.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m11_1457 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", span="2329-2329"];
m11_1458 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="StringEnumConverterTests.cs", label="string json = @''[\r\n  {\r\n    ''''Name'''': ''''Jim'''',\r\n    ''''BirthDate'''': ''''\/Date(978048000000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(978048000000)\/''''\r\n  },\r\n  {\r\n    ''''Name'''': ''''Jim'''',\r\n    ''''BirthDate'''': ''''\/Date(978048000000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(978048000000)\/''''\r\n  }\r\n]''", span="2331-2342"];
m11_1459 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2344-2344"];
m11_1460 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="StringEnumConverterTests.cs", label="int i = 0", span="2349-2349"];
m11_1462 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="StringEnumConverterTests.cs", label="reader.Read()", span="2351-2351"];
m11_1464 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2354-2354"];
m11_1465 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(new DateTime(631136448000000000), reader.Value)", span="2355-2355"];
m11_1461 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="StringEnumConverterTests.cs", label="i < 13", span="2349-2349"];
m11_1463 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="StringEnumConverterTests.cs", label="i++", span="2349-2349"];
m11_1466 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", span="2329-2329"];
m11_28 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeNameEnumTest()", file="StringEnumConverterTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Enum'''': ''''Third''''\r\n}'', json)", span="173-175"];
m11_563 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", span="989-989"];
m11_564 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="StringEnumConverterTests.cs", label="long i = int.MinValue", span="991-991"];
m11_565 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="993-993"];
m11_568 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(i, reader.Value)", span="996-996"];
m11_571 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="StringEnumConverterTests.cs", label="long total = -j + i", span="1000-1000"];
m11_566 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="StringEnumConverterTests.cs", label="reader.Read()", span="994-994"];
m11_567 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(typeof(long), reader.ValueType)", span="995-995"];
m11_572 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="StringEnumConverterTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                    ''JSON integer '' + total + '' is too large or small for an Int32. Path '', line 1, position 11.'',\r\n                    () =>\r\n                    {\r\n                        reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)));\r\n                        reader.ReadAsInt32();\r\n                    })", span="1001-1007"];
m11_569 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="StringEnumConverterTests.cs", label="int j = 1", span="998-998"];
m11_570 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="StringEnumConverterTests.cs", label="j < 1000", span="998-998"];
m11_573 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="StringEnumConverterTests.cs", label="j++", span="998-998"];
m11_574 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", span="989-989"];
m11_95 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(@''/Date(9467082_PIE_340000-0631)/'', jsonTextReader.Value)", span="197-197"];
m11_97 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", span="200-200"];
m11_98 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="StringEnumConverterTests.cs", label="Assert.IsFalse(jsonTextReader.Read())", span="202-202"];
m11_99 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", span="181-181"];
m11_96 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="199-199"];
m11_100 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", span="206-206"];
m11_1087 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", span="1768-1768"];
m11_1088 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="StringEnumConverterTests.cs", label="StringReader s = new StringReader(@''[0372, 0xFA, 0XFA]'')", span="1770-1770"];
m11_1089 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="StringEnumConverterTests.cs", label="JsonTextReader jsonReader = new JsonTextReader(s)", span="1771-1771"];
m11_1090 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(jsonReader.Read())", span="1773-1773"];
m11_1091 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="1774-1774"];
m11_1092 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(jsonReader.Read())", span="1776-1776"];
m11_1093 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1777-1777"];
m11_1094 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(250L, jsonReader.Value)", span="1778-1778"];
m11_1095 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(jsonReader.Read())", span="1780-1780"];
m11_1096 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1781-1781"];
m11_1097 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(250L, jsonReader.Value)", span="1782-1782"];
m11_1098 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(jsonReader.Read())", span="1784-1784"];
m11_1099 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1785-1785"];
m11_1100 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(250L, jsonReader.Value)", span="1786-1786"];
m11_1101 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(jsonReader.Read())", span="1788-1788"];
m11_1102 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="1789-1789"];
m11_1103 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="StringEnumConverterTests.cs", label="Assert.IsFalse(jsonReader.Read())", span="1791-1791"];
m11_1104 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", span="1768-1768"];
m11_2100 [cluster="Newtonsoft.Json.Tests.SlowStream.Write(byte[], int, int)", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.SlowStream.Write(byte[], int, int)", span="3365-3365"];
m11_2101 [cluster="Newtonsoft.Json.Tests.SlowStream.Write(byte[], int, int)", file="StringEnumConverterTests.cs", label="throw new NotSupportedException();", span="3367-3367"];
m11_2102 [cluster="Newtonsoft.Json.Tests.SlowStream.Write(byte[], int, int)", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.SlowStream.Write(byte[], int, int)", span="3365-3365"];
m11_29 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeNameEnumTest()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeNameEnumTest()", span="155-155"];
m11_138 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="StringEnumConverterTests.cs", label="reader.FloatParseHandling = Json.FloatParseHandling.Decimal", span="255-255"];
m11_140 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="258-258"];
m11_139 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="257-257"];
m11_141 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="260-260"];
m11_786 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string)", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string)", span="690-690"];
m11_101 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeFlagEnum()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeFlagEnum()", span="329-329"];
m11_102 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeFlagEnum()", file="StringEnumConverterTests.cs", label="string json = @''{\r\n  ''''StoreColor'''': ''''Red, White'''',\r\n  ''''NullableStoreColor1'''': 0,\r\n  ''''NullableStoreColor2'''': ''''black, Red, White''''\r\n}''", span="331-335"];
m11_104 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeFlagEnum()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(StoreColor.Red | StoreColor.White, enumClass.StoreColor)", span="339-339"];
m11_106 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeFlagEnum()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(StoreColor.Red | StoreColor.White | StoreColor.Black, enumClass.NullableStoreColor2)", span="341-341"];
m11_103 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeFlagEnum()", file="StringEnumConverterTests.cs", label="EnumClass enumClass = JsonConvert.DeserializeObject<EnumClass>(json, new StringEnumConverter())", span="337-337"];
m11_105 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeFlagEnum()", file="StringEnumConverterTests.cs", label="Assert.AreEqual((StoreColor)0, enumClass.NullableStoreColor1)", span="340-340"];
m11_107 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeFlagEnum()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeFlagEnum()", span="329-329"];
m11_108 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEnumClass()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEnumClass()", span="345-345"];
m11_1866 [cluster="double.ToString(string)", file="StringEnumConverterTests.cs", label="Entry double.ToString(string)", span="0-0"];
m11_192 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DataContractSerializerDuplicateNameEnumTest()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DataContractSerializerDuplicateNameEnumTest()", span="547-547"];
m11_193 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DataContractSerializerDuplicateNameEnumTest()", file="StringEnumConverterTests.cs", label="MemoryStream ms = new MemoryStream()", span="549-549"];
m11_194 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DataContractSerializerDuplicateNameEnumTest()", file="StringEnumConverterTests.cs", label="var s = new DataContractSerializer(typeof(DuplicateEnumNameTestClass))", span="550-550"];
m11_195 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DataContractSerializerDuplicateNameEnumTest()", file="StringEnumConverterTests.cs", label="ExceptionAssert.Throws<InvalidDataContractException>(() =>\r\n            {\r\n                s.WriteObject(ms, new DuplicateEnumNameTestClass\r\n                {\r\n                    Value = DuplicateNameEnum.foo_bar,\r\n                    Value2 = DuplicateNameEnum2.foo_bar_NOT_USED\r\n                });\r\n\r\n                string xml = @''<DuplicateEnumNameTestClass xmlns=''''http://schemas.datacontract.org/2004/07/Newtonsoft.Json.Tests.Converters'''' xmlns:i=''''http://www.w3.org/2001/XMLSchema-instance''''>\r\n    <Value>foo_bar</Value>\r\n    <Value2>foo_bar</Value2>\r\n</DuplicateEnumNameTestClass>'';\r\n\r\n                var o = (DuplicateEnumNameTestClass)s.ReadObject(new MemoryStream(Encoding.UTF8.GetBytes(xml)));\r\n\r\n                Assert.AreEqual(DuplicateNameEnum.foo_bar, o.Value);\r\n                Assert.AreEqual(DuplicateNameEnum2.FooBar, o.Value2);\r\n            }, ''Type 'Newtonsoft.Json.Tests.Converters.DuplicateNameEnum' contains two members 'foo_bar' 'and 'FooBar' with the same name 'foo_bar'. Multiple members with the same name in one type are not supported. Consider changing one of the member names using EnumMemberAttribute attribute.'')", span="552-569"];
m11_196 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DataContractSerializerDuplicateNameEnumTest()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DataContractSerializerDuplicateNameEnumTest()", span="547-547"];
m11_198 [cluster="DataContractSerializer.cstr", file="StringEnumConverterTests.cs", label="Entry DataContractSerializer.cstr", span=""];
m11_199 [cluster="Unk.>", file="StringEnumConverterTests.cs", label="Entry Unk.>", span=""];
m11_164 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="StringEnumConverterTests.cs", label="reader.FloatParseHandling = Json.FloatParseHandling.Decimal", span="290-290"];
m11_166 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="293-293"];
m11_165 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="292-292"];
m11_167 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="StringEnumConverterTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Cannot read NaN as a decimal.'',\r\n                () => reader.Read())", span="295-297"];
m11_168 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", span="285-285"];
m11_1577 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", span="2541-2541"];
m11_1578 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="StringEnumConverterTests.cs", label="string json = ''[]''", span="2543-2543"];
m11_1579 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2544-2544"];
m11_1580 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2546-2546"];
m11_1581 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2547-2547"];
m11_1582 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2549-2549"];
m11_1583 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2550-2550"];
m11_1584 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", span="2541-2541"];
m11_1442 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", span="2306-2306"];
m11_1443 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="StringEnumConverterTests.cs", label="string json = @''{''''decimal'''':''''9,99''''}''", span="2308-2308"];
m11_1444 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2310-2310"];
m11_1445 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="StringEnumConverterTests.cs", label="reader.Culture = new CultureInfo(''fr-FR'')", span="2311-2311"];
m11_1446 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2313-2313"];
m11_1447 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2314-2314"];
m11_1448 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2316-2316"];
m11_1449 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2317-2317"];
m11_1450 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="StringEnumConverterTests.cs", label="decimal? d = reader.ReadAsDecimal()", span="2319-2319"];
m11_1451 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2320-2320"];
m11_1452 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="2321-2321"];
m11_1454 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2324-2324"];
m11_1455 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2325-2325"];
m11_1453 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(9.99m, d)", span="2322-2322"];
m11_1456 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", span="2306-2306"];
m11_2091 [cluster="System.Math.Min(int, int)", file="StringEnumConverterTests.cs", label="Entry System.Math.Min(int, int)", span="0-0"];
m11_619 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", span="1087-1087"];
m11_620 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="StringEnumConverterTests.cs", label="JsonReader reader = new JsonTextReader(new StringReader('''h\0i'''))", span="1089-1089"];
m11_621 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="1090-1090"];
m11_622 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''h\0i'', reader.Value)", span="1092-1092"];
m11_623 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", span="1087-1087"];
m11_954 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", span="1565-1565"];
m11_955 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="StringEnumConverterTests.cs", label="string input = @''[\r\n  NaN,\r\n  Infinity,\r\n  -Infinity\r\n]''", span="1567-1571"];
m11_956 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="StringEnumConverterTests.cs", label="StringReader sr = new StringReader(input)", span="1573-1573"];
m11_957 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="StringEnumConverterTests.cs", label="JsonReader jsonReader = new JsonTextReader(sr)", span="1575-1575"];
m11_958 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="StringEnumConverterTests.cs", label="jsonReader.Read()", span="1577-1577"];
m11_959 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.StartArray)", span="1578-1578"];
m11_960 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="StringEnumConverterTests.cs", label="jsonReader.Read()", span="1580-1580"];
m11_961 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.Float)", span="1581-1581"];
m11_962 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(jsonReader.Value, double.NaN)", span="1582-1582"];
m11_963 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="StringEnumConverterTests.cs", label="jsonReader.Read()", span="1584-1584"];
m11_964 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.Float)", span="1585-1585"];
m11_965 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(jsonReader.Value, double.PositiveInfinity)", span="1586-1586"];
m11_966 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="StringEnumConverterTests.cs", label="jsonReader.Read()", span="1588-1588"];
m11_967 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.Float)", span="1589-1589"];
m11_968 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(jsonReader.Value, double.NegativeInfinity)", span="1590-1590"];
m11_969 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="StringEnumConverterTests.cs", label="jsonReader.Read()", span="1592-1592"];
m11_970 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.EndArray)", span="1593-1593"];
m11_971 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", span="1565-1565"];
m11_135 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", span="250-250"];
m11_136 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="StringEnumConverterTests.cs", label="string json = ''[1.0,1,9.9,1E-06]''", span="252-252"];
m11_1640 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", span="2637-2637"];
m11_1641 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="StringEnumConverterTests.cs", label="string json = @''/*comment*/{/*comment*/Name:/*comment*/true/*comment*/,/*comment*/\r\n        ''''ExpiryDate'''':/*comment*/new\r\n'' + StringUtils.LineFeed +\r\n                          @''Date\r\n(/*comment*/null/*comment*/),\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''':/*comment*/[/*comment*/\r\n          ''''Small''''/*comment*/]/*comment*/}/*comment*/''", span="2639-2646"];
m11_1642 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2648-2648"];
m11_1643 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2650-2650"];
m11_1644 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2651-2651"];
m11_1645 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2653-2653"];
m11_1646 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2654-2654"];
m11_1647 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2656-2656"];
m11_1648 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2657-2657"];
m11_1649 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2659-2659"];
m11_1650 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2660-2660"];
m11_1651 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''Name'', reader.Value)", span="2661-2661"];
m11_1652 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2663-2663"];
m11_1653 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2664-2664"];
m11_1654 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2666-2666"];
m11_1655 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="2667-2667"];
m11_1656 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(true, reader.Value)", span="2668-2668"];
m11_1657 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2670-2670"];
m11_1658 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2671-2671"];
m11_1659 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2673-2673"];
m11_1660 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2674-2674"];
m11_1661 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2676-2676"];
m11_1662 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2677-2677"];
m11_1663 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''ExpiryDate'', reader.Value)", span="2678-2678"];
m11_1664 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2680-2680"];
m11_1665 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2681-2681"];
m11_1666 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2683-2683"];
m11_1667 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2684-2684"];
m11_1668 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(5, reader.LineNumber)", span="2685-2685"];
m11_1669 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="2686-2686"];
m11_1670 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2688-2688"];
m11_1671 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2689-2689"];
m11_1672 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2691-2691"];
m11_1673 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="2692-2692"];
m11_1674 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2694-2694"];
m11_1675 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2695-2695"];
m11_1676 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2697-2697"];
m11_1677 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2698-2698"];
m11_1678 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", span="2637-2637"];
m11_1336 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", span="2146-2146"];
m11_1337 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="StringEnumConverterTests.cs", label="string json = @''{''''Offset'''':''''1/30/2011''''}''", span="2148-2148"];
m11_1338 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2150-2150"];
m11_1339 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="StringEnumConverterTests.cs", label="reader.Culture = new CultureInfo(''en-US'')", span="2151-2151"];
m11_1340 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2153-2153"];
m11_1341 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2154-2154"];
m11_1342 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2156-2156"];
m11_1343 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2157-2157"];
m11_1344 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="StringEnumConverterTests.cs", label="reader.ReadAsDateTimeOffset()", span="2159-2159"];
m11_1345 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2160-2160"];
m11_1346 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2161-2161"];
m11_1347 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="StringEnumConverterTests.cs", label="DateTimeOffset dt = (DateTimeOffset)reader.Value", span="2163-2163"];
m11_1349 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2166-2166"];
m11_1350 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2167-2167"];
m11_1348 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(new DateTime(2011, 1, 30, 0, 0, 0, DateTimeKind.Unspecified), dt.DateTime)", span="2164-2164"];
m11_1351 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", span="2146-2146"];
m11_947 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(decimal)", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(decimal)", span="931-931"];
m11_2074 [cluster="System.IO.TextReader.Read(char[], int, int)", file="StringEnumConverterTests.cs", label="Entry System.IO.TextReader.Read(char[], int, int)", span="0-0"];
m11_1876 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", span="3013-3013"];
m11_1877 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="StringEnumConverterTests.cs", label="string json = ''[[[[]]],[[]]]''", span="3015-3015"];
m11_1878 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                MaxDepth = 1\r\n            }", span="3017-3020"];
m11_1879 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="3022-3022"];
m11_1880 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(0, reader.Depth)", span="3023-3023"];
m11_1881 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="StringEnumConverterTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''The reader's MaxDepth of 1 has been exceeded. Path '[0]', line 1, position 2.'',\r\n                () => { Assert.IsTrue(reader.Read()); })", span="3025-3027"];
m11_1882 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(1, reader.Depth)", span="3028-3028"];
m11_1883 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="3030-3030"];
m11_1884 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(2, reader.Depth)", span="3031-3031"];
m11_1885 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="3033-3033"];
m11_1886 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(3, reader.Depth)", span="3034-3034"];
m11_1887 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="3036-3036"];
m11_1888 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(3, reader.Depth)", span="3037-3037"];
m11_1889 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="3039-3039"];
m11_1890 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(2, reader.Depth)", span="3040-3040"];
m11_1891 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="3042-3042"];
m11_1892 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(1, reader.Depth)", span="3043-3043"];
m11_1893 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="StringEnumConverterTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''The reader's MaxDepth of 1 has been exceeded. Path '[1]', line 1, position 9.'',\r\n                () => { Assert.IsTrue(reader.Read()); })", span="3045-3047"];
m11_1894 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(1, reader.Depth)", span="3048-3048"];
m11_1895 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="3050-3050"];
m11_1896 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(2, reader.Depth)", span="3051-3051"];
m11_1897 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="3053-3053"];
m11_1898 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(2, reader.Depth)", span="3054-3054"];
m11_1899 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="3056-3056"];
m11_1900 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(1, reader.Depth)", span="3057-3057"];
m11_1901 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="3059-3059"];
m11_1902 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(0, reader.Depth)", span="3060-3060"];
m11_1903 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="StringEnumConverterTests.cs", label="Assert.IsFalse(reader.Read())", span="3062-3062"];
m11_1904 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", span="3013-3013"];
m11_656 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", span="1139-1139"];
m11_657 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="StringEnumConverterTests.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''[  ''))", span="1141-1141"];
m11_658 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="1142-1142"];
m11_659 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="StringEnumConverterTests.cs", label="Assert.IsNull(reader.ReadAsBytes())", span="1144-1144"];
m11_660 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1145-1145"];
m11_661 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", span="1139-1139"];
m11_149 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="270-270"];
m11_22 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeNameEnumTest()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeNameEnumTest()", span="155-155"];
m11_147 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(typeof(long), reader.ValueType)", span="267-267"];
m11_951 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="433-433"];
m11_459 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", span="829-829"];
m11_460 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", file="StringEnumConverterTests.cs", label="ExceptionAssert.Throws<ArgumentNullException>(\r\n                @''Value cannot be null.\r\nParameter name: reader'',\r\n                () => { new JsonTextReader(null); })", span="831-834"];
m11_461 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", span="829-829"];
m11_262 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="521-521"];
m11_263 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''hi'', reader.Value)", span="522-522"];
m11_265 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="525-525"];
m11_264 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="524-524"];
m11_266 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="527-527"];
m11_267 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''MemberConverter'', reader.Value)", span="528-528"];
m11_279 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", span="553-553"];
m11_280 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="StringEnumConverterTests.cs", label="string json = @''[\r\n''''Small'''',\r\n''''Medium'''',\r\n''''Large''''\r\n]content''", span="555-559"];
m11_281 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="561-561"];
m11_282 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="StringEnumConverterTests.cs", label="reader.Read()", span="566-566"];
m11_283 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(1, reader.LineNumber)", span="567-567"];
m11_284 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="StringEnumConverterTests.cs", label="reader.Read()", span="569-569"];
m11_285 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(2, reader.LineNumber)", span="570-570"];
m11_286 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="StringEnumConverterTests.cs", label="reader.Read()", span="572-572"];
m11_287 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(3, reader.LineNumber)", span="573-573"];
m11_288 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="StringEnumConverterTests.cs", label="reader.Read()", span="575-575"];
m11_289 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(4, reader.LineNumber)", span="576-576"];
m11_290 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="StringEnumConverterTests.cs", label="reader.Read()", span="578-578"];
m11_291 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(5, reader.LineNumber)", span="579-579"];
m11_292 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="StringEnumConverterTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Additional text encountered after finished reading JSON content: c. Path '', line 5, position 2.'',\r\n                () => { reader.Read(); })", span="581-583"];
m11_293 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", span="553-553"];
m11_1546 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", span="2496-2496"];
m11_1547 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="StringEnumConverterTests.cs", label="string json = ''[true ''", span="2498-2498"];
m11_1548 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2499-2499"];
m11_1549 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2501-2501"];
m11_1550 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2502-2502"];
m11_1551 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="StringEnumConverterTests.cs", label="Assert.IsFalse(reader.Read())", span="2503-2503"];
m11_1552 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", span="2496-2496"];
m11_24 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="301-301"];
m11_27 [cluster="Unk.Parse", file="StringEnumConverterTests.cs", label="Entry Unk.Parse", span=""];
m11_23 [cluster="System.IO.StringReader.StringReader(string)", file="StringEnumConverterTests.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m11_25 [cluster="Unk.IsTrue", file="StringEnumConverterTests.cs", label="Entry Unk.IsTrue", span=""];
m11_26 [cluster="Unk.AreEqual", file="StringEnumConverterTests.cs", label="Entry Unk.AreEqual", span=""];
m11_1105 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", span="1795-1795"];
m11_1106 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="StringEnumConverterTests.cs", label="StringReader s = new StringReader(@''[0372, 0xFA, 0XFA]'')", span="1797-1797"];
m11_1107 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="StringEnumConverterTests.cs", label="JsonTextReader jsonReader = new JsonTextReader(s)", span="1798-1798"];
m11_1108 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(jsonReader.Read())", span="1800-1800"];
m11_1109 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="1801-1801"];
m11_1110 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="StringEnumConverterTests.cs", label="jsonReader.Read()", span="1803-1803"];
m11_1111 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1804-1804"];
m11_1112 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(typeof(long), jsonReader.ValueType)", span="1805-1805"];
m11_1113 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="StringEnumConverterTests.cs", label="Assert.AreEqual((long)250, (long)jsonReader.Value)", span="1806-1806"];
m11_1114 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="StringEnumConverterTests.cs", label="jsonReader.Read()", span="1808-1808"];
m11_1115 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1809-1809"];
m11_1116 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(typeof(long), jsonReader.ValueType)", span="1810-1810"];
m11_1117 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="StringEnumConverterTests.cs", label="Assert.AreEqual((long)250, (long)jsonReader.Value)", span="1811-1811"];
m11_1118 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="StringEnumConverterTests.cs", label="jsonReader.Read()", span="1813-1813"];
m11_1119 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1814-1814"];
m11_1120 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(typeof(long), jsonReader.ValueType)", span="1815-1815"];
m11_1121 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="StringEnumConverterTests.cs", label="Assert.AreEqual((long)250, (long)jsonReader.Value)", span="1816-1816"];
m11_1122 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(jsonReader.Read())", span="1818-1818"];
m11_1123 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="1819-1819"];
m11_1124 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="StringEnumConverterTests.cs", label="Assert.IsFalse(jsonReader.Read())", span="1821-1821"];
m11_1125 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", span="1795-1795"];
m11_948 [cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="365-365"];
m11_94 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.String, jsonTextReader.TokenType)", span="196-196"];
m11_243 [cluster="Newtonsoft.Json.JsonTextReader.Close()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.Close()", span="1581-1581"];
m11_271 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", span="532-532"];
m11_272 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="StringEnumConverterTests.cs", label="string json = @''[\r\n''''Small'''',\r\n''''Medium'''',\r\n''''Large''''\r\n],''", span="534-538"];
m11_273 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="540-540"];
m11_274 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="StringEnumConverterTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Additional text encountered after finished reading JSON content: ,. Path '', line 5, position 2.'',\r\n                () =>\r\n                {\r\n                    while (reader.Read())\r\n                    {\r\n                    }\r\n                })", span="542-549"];
m11_275 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", span="532-532"];
m11_1126 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", span="1825-1825"];
m11_1127 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="StringEnumConverterTests.cs", label="StringReader s = new StringReader(@''[0372, 0xFA, 0XFA]'')", span="1827-1827"];
m11_1128 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="StringEnumConverterTests.cs", label="JsonTextReader jsonReader = new JsonTextReader(s)", span="1828-1828"];
m11_1129 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(jsonReader.Read())", span="1830-1830"];
m11_1130 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="1831-1831"];
m11_1131 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="StringEnumConverterTests.cs", label="jsonReader.ReadAsInt32()", span="1833-1833"];
m11_1132 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1834-1834"];
m11_1133 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(typeof(int), jsonReader.ValueType)", span="1835-1835"];
m11_1134 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(250, jsonReader.Value)", span="1836-1836"];
m11_1135 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="StringEnumConverterTests.cs", label="jsonReader.ReadAsInt32()", span="1838-1838"];
m11_1136 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1839-1839"];
m11_1137 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(typeof(int), jsonReader.ValueType)", span="1840-1840"];
m11_1138 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(250, jsonReader.Value)", span="1841-1841"];
m11_1139 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="StringEnumConverterTests.cs", label="jsonReader.ReadAsInt32()", span="1843-1843"];
m11_1140 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1844-1844"];
m11_1141 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(typeof(int), jsonReader.ValueType)", span="1845-1845"];
m11_1142 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(250, jsonReader.Value)", span="1846-1846"];
m11_1143 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(jsonReader.Read())", span="1848-1848"];
m11_1144 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="1849-1849"];
m11_1145 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="StringEnumConverterTests.cs", label="Assert.IsFalse(jsonReader.Read())", span="1851-1851"];
m11_1146 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", span="1825-1825"];
m11_310 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", span="621-621"];
m11_311 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="StringEnumConverterTests.cs", label="string input = @''{\r\n  CPU: 'Intel',\r\n  Drives: [\r\n    'DVD read/writer',\r\n    ''''500 gigabyte hard drive''''\r\n  ]\r\n}''", span="623-629"];
m11_312 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="StringEnumConverterTests.cs", label="StringReader sr = new StringReader(input)", span="631-631"];
m11_313 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="StringEnumConverterTests.cs", label="JsonTextReader jsonReader = new JsonTextReader(sr)", span="633-633"];
m11_314 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.None)", span="639-639"];
m11_315 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(0, jsonReader.LineNumber)", span="640-640"];
m11_316 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(0, jsonReader.LinePosition)", span="641-641"];
m11_317 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="StringEnumConverterTests.cs", label="jsonReader.Read()", span="643-643"];
m11_318 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.StartObject)", span="644-644"];
m11_319 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(1, jsonReader.LineNumber)", span="645-645"];
m11_320 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(1, jsonReader.LinePosition)", span="646-646"];
m11_321 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="StringEnumConverterTests.cs", label="jsonReader.Read()", span="648-648"];
m11_322 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.PropertyName)", span="649-649"];
m11_323 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(jsonReader.Value, ''CPU'')", span="650-650"];
m11_324 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(2, jsonReader.LineNumber)", span="651-651"];
m11_325 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(7, jsonReader.LinePosition)", span="652-652"];
m11_326 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="StringEnumConverterTests.cs", label="jsonReader.Read()", span="654-654"];
m11_327 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.String, jsonReader.TokenType)", span="655-655"];
m11_328 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''Intel'', jsonReader.Value)", span="656-656"];
m11_329 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(2, jsonReader.LineNumber)", span="657-657"];
m11_330 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(15, jsonReader.LinePosition)", span="658-658"];
m11_331 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="StringEnumConverterTests.cs", label="jsonReader.Read()", span="660-660"];
m11_332 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.PropertyName)", span="661-661"];
m11_333 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(jsonReader.Value, ''Drives'')", span="662-662"];
m11_334 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(3, jsonReader.LineNumber)", span="663-663"];
m11_335 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(10, jsonReader.LinePosition)", span="664-664"];
m11_336 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="StringEnumConverterTests.cs", label="jsonReader.Read()", span="666-666"];
m11_337 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.StartArray)", span="667-667"];
m11_338 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(3, jsonReader.LineNumber)", span="668-668"];
m11_339 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(12, jsonReader.LinePosition)", span="669-669"];
m11_340 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="StringEnumConverterTests.cs", label="jsonReader.Read()", span="671-671"];
m11_341 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.String)", span="672-672"];
m11_342 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(jsonReader.Value, ''DVD read/writer'')", span="673-673"];
m11_343 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(jsonReader.QuoteChar, '\'')", span="674-674"];
m11_344 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(4, jsonReader.LineNumber)", span="675-675"];
m11_345 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(22, jsonReader.LinePosition)", span="676-676"];
m11_346 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="StringEnumConverterTests.cs", label="jsonReader.Read()", span="678-678"];
m11_347 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.String)", span="679-679"];
m11_348 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(jsonReader.Value, ''500 gigabyte hard drive'')", span="680-680"];
m11_349 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(jsonReader.QuoteChar, '''')", span="681-681"];
m11_350 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(5, jsonReader.LineNumber)", span="682-682"];
m11_351 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(30, jsonReader.LinePosition)", span="683-683"];
m11_352 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="StringEnumConverterTests.cs", label="jsonReader.Read()", span="685-685"];
m11_353 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.EndArray)", span="686-686"];
m11_354 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(6, jsonReader.LineNumber)", span="687-687"];
m11_355 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(4, jsonReader.LinePosition)", span="688-688"];
m11_356 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="StringEnumConverterTests.cs", label="jsonReader.Read()", span="690-690"];
m11_357 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.EndObject)", span="691-691"];
m11_358 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(7, jsonReader.LineNumber)", span="692-692"];
m11_359 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(2, jsonReader.LinePosition)", span="693-693"];
m11_360 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="StringEnumConverterTests.cs", label="Assert.IsFalse(jsonReader.Read())", span="695-695"];
m11_361 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", span="621-621"];
m11_716 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", span="1251-1251"];
m11_717 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="StringEnumConverterTests.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''{'hi\r\nbye':1}''))", span="1253-1253"];
m11_718 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="1254-1254"];
m11_719 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="1255-1255"];
m11_720 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1256-1256"];
m11_721 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(@''hi\r\nbye'', reader.Value)", span="1257-1258"];
m11_722 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="1259-1259"];
m11_723 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1260-1260"];
m11_724 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(1L, reader.Value)", span="1261-1261"];
m11_725 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="1262-1262"];
m11_726 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1263-1263"];
m11_727 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="StringEnumConverterTests.cs", label="Assert.IsFalse(reader.Read())", span="1264-1264"];
m11_728 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", span="1251-1251"];
m11_1864 [cluster="double.ToString(System.IFormatProvider)", file="StringEnumConverterTests.cs", label="Entry double.ToString(System.IFormatProvider)", span="0-0"];
m11_2065 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", span="537-537"];
m11_1428 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", span="2284-2284"];
m11_1429 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="StringEnumConverterTests.cs", label="string json = @''{''''decimal'''':-7.92281625142643E+28}''", span="2286-2286"];
m11_1430 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2288-2288"];
m11_1431 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2290-2290"];
m11_1432 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2291-2291"];
m11_1433 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2293-2293"];
m11_1434 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2294-2294"];
m11_1435 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="StringEnumConverterTests.cs", label="decimal? d = reader.ReadAsDecimal()", span="2296-2296"];
m11_1436 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2297-2297"];
m11_1437 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="2298-2298"];
m11_1439 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2301-2301"];
m11_1440 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2302-2302"];
m11_1438 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(-79228162514264300000000000000m, d)", span="2299-2299"];
m11_1441 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", span="2284-2284"];
m11_671 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", span="1160-1160"];
m11_672 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="StringEnumConverterTests.cs", label="string newLinesText = StringUtils.CarriageReturn + StringUtils.CarriageReturnLineFeed + StringUtils.LineFeed + StringUtils.CarriageReturnLineFeed + '' '' + StringUtils.CarriageReturn + StringUtils.CarriageReturnLineFeed", span="1162-1162"];
m11_673 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="StringEnumConverterTests.cs", label="string json =\r\n                newLinesText\r\n                + ''{'' + newLinesText\r\n                + ''''' + newLinesText\r\n                + ''name1'' + newLinesText\r\n                + ''''' + newLinesText\r\n                + '':'' + newLinesText\r\n                + ''['' + newLinesText\r\n                + ''new'' + newLinesText\r\n                + ''Date'' + newLinesText\r\n                + ''('' + newLinesText\r\n                + ''1'' + newLinesText\r\n                + '','' + newLinesText\r\n                + ''null'' + newLinesText\r\n                + ''/*'' + newLinesText\r\n                + ''blah comment'' + newLinesText\r\n                + ''*/'' + newLinesText\r\n                + '')'' + newLinesText\r\n                + '','' + newLinesText\r\n                + ''1.1111'' + newLinesText\r\n                + '']'' + newLinesText\r\n                + '','' + newLinesText\r\n                + ''name2'' + newLinesText\r\n                + '':'' + newLinesText\r\n                + ''{'' + newLinesText\r\n                + ''}'' + newLinesText\r\n                + ''}'' + newLinesText", span="1164-1190"];
m11_675 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="StringEnumConverterTests.cs", label="StringReader sr = new StringReader(newLinesText)", span="1193-1193"];
m11_683 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(newLinesText + ''name1'' + newLinesText, reader.Value)", span="1205-1205"];
m11_698 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(newLinesText + ''blah comment'' + newLinesText, reader.Value)", span="1225-1225"];
m11_674 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="StringEnumConverterTests.cs", label="int count = 0", span="1192-1192"];
m11_678 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="1199-1199"];
m11_677 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="StringEnumConverterTests.cs", label="count++", span="1196-1196"];
m11_676 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="StringEnumConverterTests.cs", label="sr.ReadLine() != null", span="1194-1194"];
m11_679 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="1200-1200"];
m11_680 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(7, reader.LineNumber)", span="1201-1201"];
m11_681 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="1203-1203"];
m11_682 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(31, reader.LineNumber)", span="1204-1204"];
m11_684 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="1207-1207"];
m11_685 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(37, reader.LineNumber)", span="1208-1208"];
m11_686 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="1210-1210"];
m11_687 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(55, reader.LineNumber)", span="1211-1211"];
m11_688 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="1212-1212"];
m11_689 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="1213-1213"];
m11_690 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="1215-1215"];
m11_691 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(61, reader.LineNumber)", span="1216-1216"];
m11_692 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(1L, reader.Value)", span="1217-1217"];
m11_693 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="1219-1219"];
m11_694 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(73, reader.LineNumber)", span="1220-1220"];
m11_695 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(null, reader.Value)", span="1221-1221"];
m11_696 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="1223-1223"];
m11_697 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(91, reader.LineNumber)", span="1224-1224"];
m11_699 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="1227-1227"];
m11_700 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(97, reader.LineNumber)", span="1228-1228"];
m11_701 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="1230-1230"];
m11_702 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(109, reader.LineNumber)", span="1231-1231"];
m11_703 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="1233-1233"];
m11_704 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(115, reader.LineNumber)", span="1234-1234"];
m11_705 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="1236-1236"];
m11_706 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(133, reader.LineNumber)", span="1237-1237"];
m11_707 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''name2'', reader.Value)", span="1238-1238"];
m11_708 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="1240-1240"];
m11_709 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(139, reader.LineNumber)", span="1241-1241"];
m11_710 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="1243-1243"];
m11_711 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(145, reader.LineNumber)", span="1244-1244"];
m11_712 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="1246-1246"];
m11_713 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(151, reader.LineNumber)", span="1247-1247"];
m11_714 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", span="1160-1160"];
m11_1553 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", span="2507-2507"];
m11_1554 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="StringEnumConverterTests.cs", label="string json = ''new Dat''", span="2509-2509"];
m11_1555 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2510-2510"];
m11_1556 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="StringEnumConverterTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unexpected end while parsing constructor. Path '', line 1, position 7.'',\r\n                () => { reader.Read(); })", span="2512-2514"];
m11_1557 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", span="2507-2507"];
m11_46 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsInt32()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsInt32()", span="337-337"];
m11_48 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="StringEnumConverterTests.cs", label="string json = @''[\r\n  333333333333333333333333333333333333333,\r\n  3.3,\r\n  ,\r\n  0f\r\n]''", span="117-122"];
m11_51 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonTextReader.TokenType)", span="127-127"];
m11_49 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="StringEnumConverterTests.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="124-124"];
m11_52 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="StringEnumConverterTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''JSON integer 333333333333333333333333333333333333333 is too large or small for an Int32. Path '[0]', line 2, position 42.'',\r\n                () => jsonTextReader.ReadAsInt32())", span="129-131"];
m11_47 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", span="115-115"];
m11_50 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="126-126"];
m11_53 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="StringEnumConverterTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Input string '3.3' is not a valid integer. Path '[1]', line 3, position 6.'',\r\n                () => jsonTextReader.ReadAsInt32())", span="133-135"];
m11_4 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", span="62-62"];
m11_1414 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", span="2264-2264"];
m11_1415 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''/* sdf''))", span="2266-2266"];
m11_1416 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="StringEnumConverterTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unexpected end while parsing comment. Path '', line 1, position 6.'',\r\n                () => { reader.Read(); })", span="2268-2270"];
m11_1417 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", span="2264-2264"];
m11_2075 [cluster="Newtonsoft.Json.Tests.SlowStream.SlowStream(byte[], int)", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.SlowStream.SlowStream(byte[], int)", span="3300-3300"];
m11_2076 [cluster="Newtonsoft.Json.Tests.SlowStream.SlowStream(byte[], int)", file="StringEnumConverterTests.cs", label="bytes = content", span="3302-3302"];
m11_2078 [cluster="Newtonsoft.Json.Tests.SlowStream.SlowStream(byte[], int)", file="StringEnumConverterTests.cs", label="this.bytesPerRead = bytesPerRead", span="3304-3304"];
m11_2077 [cluster="Newtonsoft.Json.Tests.SlowStream.SlowStream(byte[], int)", file="StringEnumConverterTests.cs", label="totalBytesRead = 0", span="3303-3303"];
m11_2079 [cluster="Newtonsoft.Json.Tests.SlowStream.SlowStream(byte[], int)", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.SlowStream.SlowStream(byte[], int)", span="3300-3300"];
m11_151 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="272-272"];
m11_269 [cluster="Newtonsoft.Json.Tests.SlowStream.SlowStream(string, System.Text.Encoding, int)", file="StringEnumConverterTests.cs", label=ms, span=""];
m11_2080 [cluster="Newtonsoft.Json.Tests.SlowStream.SlowStream(string, System.Text.Encoding, int)", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.SlowStream.SlowStream(string, System.Text.Encoding, int)", span="3307-3307"];
m11_207 [cluster="Newtonsoft.Json.Tests.Converters.DuplicateEnumNameTestClass.DuplicateEnumNameTestClass()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.DuplicateEnumNameTestClass.DuplicateEnumNameTestClass()", span="699-699"];
m11_208 [cluster="Unk.WriteObject", file="StringEnumConverterTests.cs", label="Entry Unk.WriteObject", span=""];
m11_209 [cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="StringEnumConverterTests.cs", label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0"];
m11_210 [cluster="System.Text.Encoding.GetBytes(string)", file="StringEnumConverterTests.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m11_211 [cluster="Unk.ReadObject", file="StringEnumConverterTests.cs", label="Entry Unk.ReadObject", span=""];
m11_631 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", span="1106-1106"];
m11_632 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="StringEnumConverterTests.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@'''h\''))", span="1108-1108"];
m11_633 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="StringEnumConverterTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unterminated string. Expected delimiter: '. Path '', line 1, position 3.'',\r\n                () => { reader.Read(); })", span="1110-1112"];
m11_634 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", span="1106-1106"];
m11_945 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(int)", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(int)", span="819-819"];
m11_86 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeFlagEnum()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeFlagEnum()", span="283-283"];
m11_10 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="71-71"];
m11_506 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", span="884-884"];
m11_507 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="StringEnumConverterTests.cs", label="string json = ''\0{\0'\0h\0i\0'\0:\0[\01\0,\0'\0'\0\0,\0null\0]\0,\0do\0:true\0}\0\0/*\0sd\0f\0*/\0/*\0sd\0f\0*/ \0''", span="886-886"];
m11_508 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="887-887"];
m11_509 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="889-889"];
m11_510 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="890-890"];
m11_511 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="892-892"];
m11_512 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="893-893"];
m11_513 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="895-895"];
m11_514 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="896-896"];
m11_515 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="898-898"];
m11_516 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="899-899"];
m11_517 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="901-901"];
m11_518 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="902-902"];
m11_519 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="904-904"];
m11_520 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="905-905"];
m11_521 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="907-907"];
m11_522 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="908-908"];
m11_523 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="910-910"];
m11_524 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="911-911"];
m11_525 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="913-913"];
m11_526 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="914-914"];
m11_527 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="916-916"];
m11_528 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="917-917"];
m11_529 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="919-919"];
m11_530 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="920-920"];
m11_531 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''\0sd\0f\0'', reader.Value)", span="921-921"];
m11_532 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="923-923"];
m11_533 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="924-924"];
m11_534 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''\0sd\0f\0'', reader.Value)", span="925-925"];
m11_535 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="StringEnumConverterTests.cs", label="Assert.IsFalse(reader.Read())", span="927-927"];
m11_536 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", span="884-884"];
m11_820 [cluster="long.ToString()", file="StringEnumConverterTests.cs", label="Entry long.ToString()", span="0-0"];
m11_1865 [cluster="System.Console.WriteLine(string)", file="StringEnumConverterTests.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m11_1220 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", span="1969-1969"];
m11_1221 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="StringEnumConverterTests.cs", label="string json = @''{''''Message'''':''''Hi,I\u0092ve send you smth''''}''", span="1971-1971"];
m11_1222 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1973-1973"];
m11_1223 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="1978-1978"];
m11_1224 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1979-1979"];
m11_1225 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="1981-1981"];
m11_1226 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1982-1982"];
m11_1227 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''Message'', reader.Value)", span="1983-1983"];
m11_1228 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="1985-1985"];
m11_1229 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1986-1986"];
m11_1230 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(@''Hi,I'' + '\u0092' + ''ve send you smth'', reader.Value)", span="1987-1987"];
m11_1231 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="1989-1989"];
m11_1232 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1990-1990"];
m11_1233 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="StringEnumConverterTests.cs", label="Assert.IsFalse(reader.Read())", span="1992-1992"];
m11_1234 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", span="1969-1969"];
m11_2029 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", span="3280-3280"];
m11_2066 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", file="StringEnumConverterTests.cs", label="_inner = inner", span="3282-3282"];
m11_2067 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", span="3280-3280"];
m11_85 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsBytes()", span="319-319"];
m11_942 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool)", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(bool)", span="875-875"];
m11_645 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsBytes()", span="383-383"];
m11_1613 [cluster="Unk.>", file="StringEnumConverterTests.cs", label="Entry Unk.>", span=""];
m11_592 [cluster="BigInteger.cstr", file="StringEnumConverterTests.cs", label="Entry BigInteger.cstr", span=""];
m11_819 [cluster="int.ToString()", file="StringEnumConverterTests.cs", label="Entry int.ToString()", span="0-0"];
m11_579 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", span="1013-1013"];
m11_580 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="StringEnumConverterTests.cs", label="BigInteger i = new BigInteger(long.MaxValue)", span="1015-1015"];
m11_581 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="1017-1017"];
m11_586 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="StringEnumConverterTests.cs", label="BigInteger total = i + j", span="1023-1023"];
m11_582 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="StringEnumConverterTests.cs", label="reader.Read()", span="1018-1018"];
m11_583 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(typeof(long), reader.ValueType)", span="1019-1019"];
m11_584 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="StringEnumConverterTests.cs", label="int j = 1", span="1021-1021"];
m11_585 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="StringEnumConverterTests.cs", label="j < 1000", span="1021-1021"];
m11_590 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="StringEnumConverterTests.cs", label="j++", span="1021-1021"];
m11_587 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="StringEnumConverterTests.cs", label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="1025-1025"];
m11_588 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="StringEnumConverterTests.cs", label="reader.Read()", span="1026-1026"];
m11_589 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(typeof(BigInteger), reader.ValueType)", span="1028-1028"];
m11_591 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", span="1013-1013"];
m11_5 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="64-64"];
m11_608 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", span="1054-1054"];
m11_609 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="StringEnumConverterTests.cs", label="string json = @''\r\n{\r\n  ''''description'''': ''''A person'''',\r\n  ''''type'''': ''''object'''',\r\n  ''''properties'''':\r\n  {\r\n    ''''name'''': {''''type'''':''''string''''},\r\n    ''''hobbies'''': {\r\n      ''''type'''': ''''array'''',\r\n      ''''items'''': {''''type'''':''''string''''}\r\n    }\r\n  }\r\n}\r\n''", span="1056-1069"];
m11_610 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1071-1071"];
m11_611 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="StringEnumConverterTests.cs", label="int i = 0", span="1076-1076"];
m11_613 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="1078-1078"];
m11_615 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="1081-1081"];
m11_616 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1082-1082"];
m11_617 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''type'', reader.Value)", span="1083-1083"];
m11_612 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="StringEnumConverterTests.cs", label="i < 14", span="1076-1076"];
m11_614 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="StringEnumConverterTests.cs", label="i++", span="1076-1076"];
m11_618 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", span="1054-1054"];
m11_952 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", span="650-650"];
m11_137 [cluster="Unk.IsNull", file="StringEnumConverterTests.cs", label="Entry Unk.IsNull", span=""];
m11_148 [cluster="System.Collections.ObjectModel.Collection<T>.Add(T)", file="StringEnumConverterTests.cs", label="Entry System.Collections.ObjectModel.Collection<T>.Add(T)", span="0-0"];
m11_150 [cluster="System.IO.StringReader.StringReader(string)", file="StringEnumConverterTests.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m11_949 [cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="772-772"];
m11_1001 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", span="1644-1644"];
m11_1002 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="StringEnumConverterTests.cs", label="string json =\r\n                @''[0.0,0.0,0.1,1.0,1.000001,1E-06,4.94065645841247E-324,Infinity,-Infinity,NaN,1.7976931348623157E+308,-1.7976931348623157E+308,Infinity,-Infinity,NaN,0e-10,0.25e-5,0.3e10]''", span="1646-1647"];
m11_1003 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="StringEnumConverterTests.cs", label="JsonReader jsonReader = new JsonTextReader(new StringReader(json))", span="1649-1649"];
m11_1004 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="StringEnumConverterTests.cs", label="jsonReader.Read()", span="1651-1651"];
m11_1005 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="1652-1652"];
m11_1006 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="StringEnumConverterTests.cs", label="jsonReader.Read()", span="1654-1654"];
m11_1007 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1655-1655"];
m11_1008 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(0.0, jsonReader.Value)", span="1656-1656"];
m11_1009 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="StringEnumConverterTests.cs", label="jsonReader.Read()", span="1658-1658"];
m11_1010 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1659-1659"];
m11_1011 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(0.0, jsonReader.Value)", span="1660-1660"];
m11_1012 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="StringEnumConverterTests.cs", label="jsonReader.Read()", span="1662-1662"];
m11_1013 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1663-1663"];
m11_1014 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(0.1, jsonReader.Value)", span="1664-1664"];
m11_1015 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="StringEnumConverterTests.cs", label="jsonReader.Read()", span="1666-1666"];
m11_1016 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1667-1667"];
m11_1017 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(1.0, jsonReader.Value)", span="1668-1668"];
m11_1018 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="StringEnumConverterTests.cs", label="jsonReader.Read()", span="1670-1670"];
m11_1019 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1671-1671"];
m11_1020 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(1.000001, jsonReader.Value)", span="1672-1672"];
m11_1021 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="StringEnumConverterTests.cs", label="jsonReader.Read()", span="1674-1674"];
m11_1022 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1675-1675"];
m11_1023 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(1E-06, jsonReader.Value)", span="1676-1676"];
m11_1024 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="StringEnumConverterTests.cs", label="jsonReader.Read()", span="1678-1678"];
m11_1025 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1679-1679"];
m11_1026 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(4.94065645841247E-324, jsonReader.Value)", span="1680-1680"];
m11_1027 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="StringEnumConverterTests.cs", label="jsonReader.Read()", span="1682-1682"];
m11_1028 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1683-1683"];
m11_1029 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(double.PositiveInfinity, jsonReader.Value)", span="1684-1684"];
m11_1030 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="StringEnumConverterTests.cs", label="jsonReader.Read()", span="1686-1686"];
m11_1031 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1687-1687"];
m11_1032 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(double.NegativeInfinity, jsonReader.Value)", span="1688-1688"];
m11_1033 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="StringEnumConverterTests.cs", label="jsonReader.Read()", span="1690-1690"];
m11_1034 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1691-1691"];
m11_1035 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(double.NaN, jsonReader.Value)", span="1692-1692"];
m11_1036 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="StringEnumConverterTests.cs", label="jsonReader.Read()", span="1694-1694"];
m11_1037 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1695-1695"];
m11_1038 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(double.MaxValue, jsonReader.Value)", span="1696-1696"];
m11_1039 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="StringEnumConverterTests.cs", label="jsonReader.Read()", span="1698-1698"];
m11_1040 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1699-1699"];
m11_1041 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(double.MinValue, jsonReader.Value)", span="1700-1700"];
m11_1042 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="StringEnumConverterTests.cs", label="jsonReader.Read()", span="1702-1702"];
m11_1043 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1703-1703"];
m11_1044 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(double.PositiveInfinity, jsonReader.Value)", span="1704-1704"];
m11_1045 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="StringEnumConverterTests.cs", label="jsonReader.Read()", span="1706-1706"];
m11_1046 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1707-1707"];
m11_1047 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(double.NegativeInfinity, jsonReader.Value)", span="1708-1708"];
m11_1048 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="StringEnumConverterTests.cs", label="jsonReader.Read()", span="1710-1710"];
m11_1049 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1711-1711"];
m11_1050 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(double.NaN, jsonReader.Value)", span="1712-1712"];
m11_1051 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="StringEnumConverterTests.cs", label="jsonReader.Read()", span="1714-1714"];
m11_1052 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1715-1715"];
m11_1053 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(0d, jsonReader.Value)", span="1716-1716"];
m11_1054 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="StringEnumConverterTests.cs", label="jsonReader.Read()", span="1718-1718"];
m11_1055 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1719-1719"];
m11_1056 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(0.0000025d, jsonReader.Value)", span="1720-1720"];
m11_1057 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="StringEnumConverterTests.cs", label="jsonReader.Read()", span="1722-1722"];
m11_1058 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1723-1723"];
m11_1059 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(3000000000d, jsonReader.Value)", span="1724-1724"];
m11_1060 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="StringEnumConverterTests.cs", label="jsonReader.Read()", span="1726-1726"];
m11_1061 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="1727-1727"];
m11_1062 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", span="1644-1644"];
m11_1262 [cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", file="StringEnumConverterTests.cs", label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", span="0-0"];
m11_1773 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", span="2854-2854"];
m11_1774 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="StringEnumConverterTests.cs", label="string json = @''/''", span="2856-2856"];
m11_1775 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2858-2858"];
m11_1776 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="StringEnumConverterTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unexpected end while parsing comment. Path '', line 1, position 1.'',\r\n                () => { reader.Read(); })", span="2860-2862"];
m11_1777 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", span="2854-2854"];
m11_1199 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", span="1938-1938"];
m11_1200 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[/*hi*/1/*hi*/,2/*hi*/]''))", span="1940-1940"];
m11_1201 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="StringEnumConverterTests.cs", label="byte[] data = reader.ReadAsBytes()", span="1942-1942"];
m11_1202 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(2, data.Length)", span="1943-1943"];
m11_1203 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(1, data[0])", span="1944-1944"];
m11_1204 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(2, data[1])", span="1945-1945"];
m11_1205 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", span="1938-1938"];
m11_6 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="65-65"];
m11_8 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Integer, jsonTextReader.TokenType)", span="68-68"];
m11_7 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="67-67"];
m11_9 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="70-70"];
m11_1160 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", span="1876-1876"];
m11_1161 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''''))", span="1878-1878"];
m11_1162 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="StringEnumConverterTests.cs", label="Assert.IsNull(reader.ReadAsBytes())", span="1880-1880"];
m11_1163 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1881-1881"];
m11_1164 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", span="1876-1876"];
m11_1172 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", span="1896-1896"];
m11_1173 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''''))", span="1898-1898"];
m11_1174 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="StringEnumConverterTests.cs", label="Assert.IsNull(reader.ReadAsDateTimeOffset())", span="1900-1900"];
m11_1175 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1901-1901"];
m11_1176 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", span="1896-1896"];
m11_547 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", span="967-967"];
m11_548 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="StringEnumConverterTests.cs", label="long i = int.MaxValue", span="969-969"];
m11_549 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="971-971"];
m11_554 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="StringEnumConverterTests.cs", label="long total = j + i", span="977-977"];
m11_550 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="StringEnumConverterTests.cs", label="reader.Read()", span="972-972"];
m11_551 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(typeof(long), reader.ValueType)", span="973-973"];
m11_555 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="StringEnumConverterTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                    ''JSON integer '' + total + '' is too large or small for an Int32. Path '', line 1, position 10.'',\r\n                    () =>\r\n                    {\r\n                        reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)));\r\n                        reader.ReadAsInt32();\r\n                    })", span="978-984"];
m11_552 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="StringEnumConverterTests.cs", label="int j = 1", span="975-975"];
m11_553 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="StringEnumConverterTests.cs", label="j < 1000", span="975-975"];
m11_556 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="StringEnumConverterTests.cs", label="j++", span="975-975"];
m11_557 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", span="967-967"];
m11_21 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", span="52-52"];
m11_502 [cluster="Newtonsoft.Json.JsonTextWriter.WriteStartArray()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteStartArray()", span="166-166"];
m11_1468 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", span="2359-2359"];
m11_1469 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="StringEnumConverterTests.cs", label="string json = @''/*comment*/ { /*comment*/\r\n        ''''Name'''': /*comment*/ ''''Apple'''' /*comment*/, /*comment*/\r\n        ''''ExpiryDate'''': ''''\/Date(1230422400000)\/'''',\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': /*comment*/ [ /*comment*/\r\n          ''''Small'''', /*comment*/\r\n          ''''Medium'''' /*comment*/,\r\n          /*comment*/ ''''Large''''\r\n        /*comment*/ ] /*comment*/\r\n      } /*comment*/''", span="2361-2370"];
m11_1470 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2372-2372"];
m11_1471 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="StringEnumConverterTests.cs", label="int i = 0", span="2377-2377"];
m11_1473 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2379-2379"];
m11_1475 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2382-2382"];
m11_1476 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2383-2383"];
m11_1477 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="StringEnumConverterTests.cs", label="Assert.IsFalse(reader.Read())", span="2385-2385"];
m11_1472 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="StringEnumConverterTests.cs", label="i < 26", span="2377-2377"];
m11_1474 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="StringEnumConverterTests.cs", label="i++", span="2377-2377"];
m11_1478 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", span="2359-2359"];
m11_1952 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", span="3125-3125"];
m11_1953 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="StringEnumConverterTests.cs", label="string json = @''[''''1970-01-01T00:00:00Z'''',''''\/Date(0)\/'''']''", span="3127-3127"];
m11_1954 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3129-3129"];
m11_1964 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="StringEnumConverterTests.cs", label="reader = new JsonTextReader(new StringReader(json))", span="3142-3142"];
m11_1974 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="StringEnumConverterTests.cs", label="reader = new JsonTextReader(new StringReader(json))", span="3155-3155"];
m11_1984 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="StringEnumConverterTests.cs", label="reader = new JsonTextReader(new StringReader(json))", span="3168-3168"];
m11_1994 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="StringEnumConverterTests.cs", label="reader = new JsonTextReader(new StringReader(json))", span="3181-3181"];
m11_1955 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="StringEnumConverterTests.cs", label="reader.DateParseHandling = Json.DateParseHandling.DateTime", span="3130-3130"];
m11_1956 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="3132-3132"];
m11_1957 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="3133-3133"];
m11_1958 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="3134-3134"];
m11_1959 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="3135-3135"];
m11_1960 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="3136-3136"];
m11_1961 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="3137-3137"];
m11_1962 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="3138-3138"];
m11_1963 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="3139-3139"];
m11_1965 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="StringEnumConverterTests.cs", label="reader.DateParseHandling = Json.DateParseHandling.DateTimeOffset", span="3143-3143"];
m11_1966 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="3145-3145"];
m11_1967 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="3146-3146"];
m11_1968 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="3147-3147"];
m11_1969 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="3148-3148"];
m11_1970 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="3149-3149"];
m11_1971 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="3150-3150"];
m11_1972 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="3151-3151"];
m11_1973 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="3152-3152"];
m11_1975 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="StringEnumConverterTests.cs", label="reader.DateParseHandling = Json.DateParseHandling.None", span="3156-3156"];
m11_1976 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="3158-3158"];
m11_1977 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="3159-3159"];
m11_1978 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(@''1970-01-01T00:00:00Z'', reader.Value)", span="3160-3160"];
m11_1979 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(typeof(string), reader.ValueType)", span="3161-3161"];
m11_1980 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="3162-3162"];
m11_1981 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(@''/Date(0)/'', reader.Value)", span="3163-3163"];
m11_1982 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(typeof(string), reader.ValueType)", span="3164-3164"];
m11_1983 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="3165-3165"];
m11_1985 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="StringEnumConverterTests.cs", label="reader.DateParseHandling = Json.DateParseHandling.DateTime", span="3169-3169"];
m11_1986 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="3171-3171"];
m11_1987 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="StringEnumConverterTests.cs", label="reader.ReadAsDateTimeOffset()", span="3172-3172"];
m11_1988 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="3173-3173"];
m11_1989 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="3174-3174"];
m11_1990 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="StringEnumConverterTests.cs", label="reader.ReadAsDateTimeOffset()", span="3175-3175"];
m11_1991 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="3176-3176"];
m11_1992 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="3177-3177"];
m11_1993 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="3178-3178"];
m11_1995 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="StringEnumConverterTests.cs", label="reader.DateParseHandling = Json.DateParseHandling.DateTimeOffset", span="3182-3182"];
m11_1996 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="3184-3184"];
m11_1997 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="StringEnumConverterTests.cs", label="reader.ReadAsDateTime()", span="3185-3185"];
m11_1998 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="3186-3186"];
m11_1999 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="3187-3187"];
m11_2000 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="StringEnumConverterTests.cs", label="reader.ReadAsDateTime()", span="3188-3188"];
m11_2001 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="3189-3189"];
m11_2002 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="3190-3190"];
m11_2003 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="3191-3191"];
m11_2004 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", span="3125-3125"];
m11_1147 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", span="1855-1855"];
m11_1148 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[}''))", span="1857-1857"];
m11_1149 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="StringEnumConverterTests.cs", label="reader.Read()", span="1859-1859"];
m11_1150 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="StringEnumConverterTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unexpected character encountered while parsing value: }. Path '', line 1, position 1.'',\r\n                () => { reader.Read(); })", span="1861-1863"];
m11_1151 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", span="1855-1855"];
m11_944 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="407-407"];
m11_1321 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", span="2124-2124"];
m11_1322 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="StringEnumConverterTests.cs", label="string json = @''{''''Offset'''':''''2011-08-01T21:25Z''''}''", span="2126-2126"];
m11_1323 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2128-2128"];
m11_1324 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2130-2130"];
m11_1325 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2131-2131"];
m11_1326 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2133-2133"];
m11_1327 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2134-2134"];
m11_1328 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="StringEnumConverterTests.cs", label="reader.ReadAsDateTimeOffset()", span="2136-2136"];
m11_1329 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2137-2137"];
m11_1330 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2138-2138"];
m11_1331 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2011, 8, 1, 21, 25, 0, DateTimeKind.Utc), TimeSpan.Zero), reader.Value)", span="2139-2139"];
m11_1332 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2141-2141"];
m11_1333 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2142-2142"];
m11_1334 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", span="2124-2124"];
m11_940 [cluster="System.IO.StringWriter.StringWriter(System.Text.StringBuilder)", file="StringEnumConverterTests.cs", label="Entry System.IO.StringWriter.StringWriter(System.Text.StringBuilder)", span="0-0"];
m11_792 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", span="1386-1386"];
m11_793 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = null", span="1388-1388"];
m11_794 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="StringEnumConverterTests.cs", label="reader = new JsonTextReader(new StringReader(''1''))", span="1390-1390"];
m11_795 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(1, reader.ReadAsInt32())", span="1391-1391"];
m11_796 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="StringEnumConverterTests.cs", label="reader = new JsonTextReader(new StringReader(''-1''))", span="1393-1393"];
m11_797 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(-1, reader.ReadAsInt32())", span="1394-1394"];
m11_798 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="StringEnumConverterTests.cs", label="reader = new JsonTextReader(new StringReader(''0''))", span="1396-1396"];
m11_799 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(0, reader.ReadAsInt32())", span="1397-1397"];
m11_800 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="StringEnumConverterTests.cs", label="reader = new JsonTextReader(new StringReader(''-0''))", span="1399-1399"];
m11_801 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(0, reader.ReadAsInt32())", span="1400-1400"];
m11_802 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="StringEnumConverterTests.cs", label="reader = new JsonTextReader(new StringReader(int.MaxValue.ToString()))", span="1402-1402"];
m11_803 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(int.MaxValue, reader.ReadAsInt32())", span="1403-1403"];
m11_804 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="StringEnumConverterTests.cs", label="reader = new JsonTextReader(new StringReader(int.MinValue.ToString()))", span="1405-1405"];
m11_805 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(int.MinValue, reader.ReadAsInt32())", span="1406-1406"];
m11_806 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="StringEnumConverterTests.cs", label="reader = new JsonTextReader(new StringReader(long.MaxValue.ToString()))", span="1408-1408"];
m11_807 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="StringEnumConverterTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(''JSON integer 9223372036854775807 is too large or small for an Int32. Path '', line 1, position 19.'', () => reader.ReadAsInt32())", span="1409-1409"];
m11_808 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="StringEnumConverterTests.cs", label="reader = new JsonTextReader(new StringReader(''9999999999999999999999999999999999999999999999999999999999999999999999999999asdasdasd''))", span="1411-1411"];
m11_809 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="StringEnumConverterTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(''Input string '9999999999999999999999999999999999999999999999999999999999999999999999999999a' is not a valid integer. Path '', line 1, position 77.'', () => reader.ReadAsInt32())", span="1412-1412"];
m11_810 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="StringEnumConverterTests.cs", label="reader = new JsonTextReader(new StringReader(''1E-06''))", span="1414-1414"];
m11_811 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="StringEnumConverterTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(''Input string '1E-06' is not a valid integer. Path '', line 1, position 5.'', () => reader.ReadAsInt32())", span="1415-1415"];
m11_812 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="StringEnumConverterTests.cs", label="reader = new JsonTextReader(new StringReader(''1.1''))", span="1417-1417"];
m11_813 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="StringEnumConverterTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(''Input string '1.1' is not a valid integer. Path '', line 1, position 3.'', () => reader.ReadAsInt32())", span="1418-1418"];
m11_814 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="StringEnumConverterTests.cs", label="reader = new JsonTextReader(new StringReader(''''))", span="1420-1420"];
m11_815 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(null, reader.ReadAsInt32())", span="1421-1421"];
m11_816 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="StringEnumConverterTests.cs", label="reader = new JsonTextReader(new StringReader(''-''))", span="1423-1423"];
m11_817 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="StringEnumConverterTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(''Input string '-' is not a valid integer. Path '', line 1, position 1.'', () => reader.ReadAsInt32())", span="1424-1424"];
m11_818 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", span="1386-1386"];
m11_941 [cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="373-373"];
m11_2007 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", span="355-355"];
m11_1155 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", span="1867-1867"];
m11_1156 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''''))", span="1869-1869"];
m11_1157 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="StringEnumConverterTests.cs", label="Assert.IsNull(reader.ReadAsDecimal())", span="1871-1871"];
m11_1158 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1872-1872"];
m11_1159 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", span="1867-1867"];
m11_478 [cluster="string.String(char, int)", file="StringEnumConverterTests.cs", label="Entry string.String(char, int)", span="0-0"];
m11_1265 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", span="2040-2040"];
m11_1266 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="StringEnumConverterTests.cs", label="string json = @''{''''Offset'''':''''\/Date(946706400000-0600)\/''''}''", span="2042-2042"];
m11_1267 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2044-2044"];
m11_1268 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2046-2046"];
m11_1269 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2047-2047"];
m11_1270 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2049-2049"];
m11_1271 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2050-2050"];
m11_1272 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="StringEnumConverterTests.cs", label="reader.ReadAsDateTimeOffset()", span="2052-2052"];
m11_1273 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2053-2053"];
m11_1274 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2054-2054"];
m11_1275 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(-6)), reader.Value)", span="2055-2055"];
m11_1276 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2057-2057"];
m11_1277 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2058-2058"];
m11_1278 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", span="2040-2040"];
m11_867 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", span="1462-1462"];
m11_868 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = null", span="1464-1464"];
m11_869 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="StringEnumConverterTests.cs", label="reader = new JsonTextReader(new StringReader(''1.1''))", span="1466-1466"];
m11_870 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="1467-1467"];
m11_871 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1468-1468"];
m11_872 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(1.1d, reader.Value)", span="1469-1469"];
m11_873 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="StringEnumConverterTests.cs", label="reader = new JsonTextReader(new StringReader(''-1.1''))", span="1471-1471"];
m11_874 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="1472-1472"];
m11_875 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1473-1473"];
m11_876 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(-1.1d, reader.Value)", span="1474-1474"];
m11_877 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="StringEnumConverterTests.cs", label="reader = new JsonTextReader(new StringReader(''0.0''))", span="1476-1476"];
m11_878 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="1477-1477"];
m11_879 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1478-1478"];
m11_880 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(0.0d, reader.Value)", span="1479-1479"];
m11_881 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="StringEnumConverterTests.cs", label="reader = new JsonTextReader(new StringReader(''-0.0''))", span="1481-1481"];
m11_882 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="1482-1482"];
m11_883 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1483-1483"];
m11_884 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(-0.0d, reader.Value)", span="1484-1484"];
m11_885 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="StringEnumConverterTests.cs", label="reader = new JsonTextReader(new StringReader(''9999999999999999999999999999999999999999999999999999999999999999999999999999asdasdasd''))", span="1486-1486"];
m11_886 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="StringEnumConverterTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(''Input string '9999999999999999999999999999999999999999999999999999999999999999999999999999a' is not a valid number. Path '', line 1, position 77.'', () => reader.Read())", span="1487-1487"];
m11_887 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="StringEnumConverterTests.cs", label="reader = new JsonTextReader(new StringReader(''1E-06''))", span="1489-1489"];
m11_888 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="1490-1490"];
m11_889 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1491-1491"];
m11_890 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(0.000001d, reader.Value)", span="1492-1492"];
m11_891 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="StringEnumConverterTests.cs", label="reader = new JsonTextReader(new StringReader(''''))", span="1494-1494"];
m11_892 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="StringEnumConverterTests.cs", label="Assert.IsFalse(reader.Read())", span="1495-1495"];
m11_893 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="StringEnumConverterTests.cs", label="reader = new JsonTextReader(new StringReader(''-''))", span="1497-1497"];
m11_894 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="StringEnumConverterTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(''Input string '-' is not a valid number. Path '', line 1, position 1.'', () => reader.Read())", span="1498-1498"];
m11_895 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", span="1462-1462"];
m11_782 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewlineLastCharacter()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewlineLastCharacter()", span="1341-1341"];
m11_783 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewlineLastCharacter()", file="StringEnumConverterTests.cs", label="string input = @''{\r\n  CPU: 'Intel',\r\n  Drives: [ /* Com*ment */\r\n    'DVD read/writer',\r\n    ''''500 gigabyte hard drive''''\r\n  ]\r\n}'' + '\n'", span="1343-1349"];
m11_784 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewlineLastCharacter()", file="StringEnumConverterTests.cs", label="object o = JsonConvert.DeserializeObject(input)", span="1351-1351"];
m11_785 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewlineLastCharacter()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewlineLastCharacter()", span="1341-1341"];
m11_122 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.CamelCaseTextFlagEnumSerialization()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.CamelCaseTextFlagEnumSerialization()", span="377-377"];
m11_123 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.CamelCaseTextFlagEnumSerialization()", file="StringEnumConverterTests.cs", label="EnumContainer<FlagsTestEnum> c = new EnumContainer<FlagsTestEnum>\r\n            {\r\n                Enum = FlagsTestEnum.First | FlagsTestEnum.Second\r\n            }", span="379-382"];
m11_124 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.CamelCaseTextFlagEnumSerialization()", file="StringEnumConverterTests.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented, new StringEnumConverter { CamelCaseText = true })", span="384-384"];
m11_125 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.CamelCaseTextFlagEnumSerialization()", file="StringEnumConverterTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Enum'''': ''''first, second''''\r\n}'', json)", span="385-387"];
m11_126 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.CamelCaseTextFlagEnumSerialization()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.CamelCaseTextFlagEnumSerialization()", span="377-377"];
m11_42 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", span="175-175"];
m11_744 [cluster="Unk.AreEquivalent", file="StringEnumConverterTests.cs", label="Entry Unk.AreEquivalent", span=""];
m11_1911 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", span="3066-3066"];
m11_1912 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="StringEnumConverterTests.cs", label="string json = ''[false, true, true, false, 'test!', 1.11, 0e-10, 0E-10, 0.25e-5, 0.3e10, 6.0221418e23, 'Purple\\r \\n monkey\\'s:\\tdishwasher']''", span="3068-3068"];
m11_1913 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="3070-3070"];
m11_1914 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="3072-3072"];
m11_1915 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="3074-3074"];
m11_1916 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(false, reader.Value)", span="3075-3075"];
m11_1917 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="3077-3077"];
m11_1918 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="3078-3078"];
m11_1919 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(true, reader.Value)", span="3079-3079"];
m11_1920 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="3081-3081"];
m11_1921 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="3082-3082"];
m11_1922 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(true, reader.Value)", span="3083-3083"];
m11_1923 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="3085-3085"];
m11_1924 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="3086-3086"];
m11_1925 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(false, reader.Value)", span="3087-3087"];
m11_1926 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="3089-3089"];
m11_1927 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="3090-3090"];
m11_1928 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''test!'', reader.Value)", span="3091-3091"];
m11_1929 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="3093-3093"];
m11_1930 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3094-3094"];
m11_1931 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(1.11d, reader.Value)", span="3095-3095"];
m11_1932 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="3097-3097"];
m11_1933 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3098-3098"];
m11_1934 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(0d, reader.Value)", span="3099-3099"];
m11_1935 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="3101-3101"];
m11_1936 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3102-3102"];
m11_1937 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(0d, reader.Value)", span="3103-3103"];
m11_1938 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="3105-3105"];
m11_1939 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3106-3106"];
m11_1940 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(0.0000025d, reader.Value)", span="3107-3107"];
m11_1941 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="3109-3109"];
m11_1942 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3110-3110"];
m11_1943 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(3000000000d, reader.Value)", span="3111-3111"];
m11_1944 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="3113-3113"];
m11_1945 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3114-3114"];
m11_1946 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(602214180000000000000000d, reader.Value)", span="3115-3115"];
m11_1947 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="3117-3117"];
m11_1948 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="3118-3118"];
m11_1949 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(reader.Value, ''Purple\r \n monkey's:\tdishwasher'')", span="3119-3119"];
m11_1950 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="3121-3121"];
m11_1951 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", span="3066-3066"];
m11_1467 [cluster="System.DateTime.DateTime(long)", file="StringEnumConverterTests.cs", label="Entry System.DateTime.DateTime(long)", span="0-0"];
m11_537 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", span="931-931"];
m11_538 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="StringEnumConverterTests.cs", label="string json = @''[\r\n  {\r\n    ''''$id'''': ''''1'''',\r\n    ''''Name'''': ''''e1'''',\r\n    ''''Manager'''': null\r\n  },\r\n  {\r\n    ''''$id'''': ''''2'''',\r\n    ''''Name'''': ''''e2'''',\r\n    ''''Manager'''': null\r\n  },\r\n  {\r\n    ''''$ref'''': ''''1''''\r\n  },\r\n  {\r\n    ''''$ref'''': ''''2''''\r\n  }\r\n]''", span="933-950"];
m11_539 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="952-952"];
m11_540 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="StringEnumConverterTests.cs", label="int i = 0", span="957-957"];
m11_542 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="StringEnumConverterTests.cs", label="reader.Read()", span="959-959"];
m11_544 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="StringEnumConverterTests.cs", label="reader.Read()", span="962-962"];
m11_545 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="963-963"];
m11_541 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="StringEnumConverterTests.cs", label="i < 15", span="957-957"];
m11_543 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="StringEnumConverterTests.cs", label="i++", span="957-957"];
m11_546 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", span="931-931"];
m11_1264 [cluster="System.TimeSpan.FromHours(double)", file="StringEnumConverterTests.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m11_0 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", span="52-52"];
m11_2 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="StringEnumConverterTests.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="59-59"];
m11_1 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="StringEnumConverterTests.cs", label="string json = @''{\r\n    ParentId: 1,\r\n    ChildId: 333333333333333333333333333333333333333,\r\n}''", span="54-57"];
m11_3 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="61-61"];
m11_54 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="StringEnumConverterTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Error reading integer. Unexpected token: Undefined. Path '[2]', line 4, position 3.'',\r\n                () => jsonTextReader.ReadAsInt32())", span="137-139"];
m11_59 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", span="115-115"];
m11_55 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="StringEnumConverterTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Input string '0f' is not a valid integer. Path '[3]', line 5, position 5.'',\r\n                () => jsonTextReader.ReadAsInt32())", span="141-143"];
m11_58 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="StringEnumConverterTests.cs", label="Assert.IsFalse(jsonTextReader.Read())", span="148-148"];
m11_56 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="145-145"];
m11_57 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonTextReader.TokenType)", span="146-146"];
m11_1305 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", span="2102-2102"];
m11_1306 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="StringEnumConverterTests.cs", label="string json = @''{''''Offset'''':''''\/Date(946708260000-0631)\/''''}''", span="2104-2104"];
m11_1307 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2106-2106"];
m11_1308 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2108-2108"];
m11_1309 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2109-2109"];
m11_1310 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2111-2111"];
m11_1311 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2112-2112"];
m11_1312 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="StringEnumConverterTests.cs", label="reader.ReadAsDateTimeOffset()", span="2114-2114"];
m11_1313 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2115-2115"];
m11_1314 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2116-2116"];
m11_1315 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(-6).Add(TimeSpan.FromMinutes(-31))), reader.Value)", span="2117-2117"];
m11_1316 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2119-2119"];
m11_1317 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2120-2120"];
m11_1318 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", span="2102-2102"];
m11_662 [cluster="Unk.IsNull", file="StringEnumConverterTests.cs", label="Entry Unk.IsNull", span=""];
m11_762 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", span="1310-1310"];
m11_763 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="StringEnumConverterTests.cs", label="string input = ''{value:'Purple\\r \\n monkey\\'s:\\tdishwasher'}''", span="1312-1312"];
m11_764 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="StringEnumConverterTests.cs", label="StringReader sr = new StringReader(input)", span="1314-1314"];
m11_765 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="StringEnumConverterTests.cs", label="JsonReader jsonReader = new JsonTextReader(sr)", span="1316-1316"];
m11_766 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(0, jsonReader.Depth)", span="1318-1318"];
m11_767 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="StringEnumConverterTests.cs", label="jsonReader.Read()", span="1320-1320"];
m11_768 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.StartObject, jsonReader.TokenType)", span="1321-1321"];
m11_769 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(0, jsonReader.Depth)", span="1322-1322"];
m11_770 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="StringEnumConverterTests.cs", label="jsonReader.Read()", span="1324-1324"];
m11_771 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonReader.TokenType)", span="1325-1325"];
m11_772 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(1, jsonReader.Depth)", span="1326-1326"];
m11_773 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="StringEnumConverterTests.cs", label="jsonReader.Read()", span="1328-1328"];
m11_774 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.String)", span="1329-1329"];
m11_775 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''Purple\r \n monkey's:\tdishwasher'', jsonReader.Value)", span="1330-1330"];
m11_776 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="StringEnumConverterTests.cs", label="Assert.AreEqual('\'', jsonReader.QuoteChar)", span="1331-1331"];
m11_777 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(1, jsonReader.Depth)", span="1332-1332"];
m11_778 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="StringEnumConverterTests.cs", label="jsonReader.Read()", span="1334-1334"];
m11_779 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.EndObject, jsonReader.TokenType)", span="1335-1335"];
m11_780 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(0, jsonReader.Depth)", span="1336-1336"];
m11_781 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", span="1310-1310"];
m11_1400 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", span="2244-2244"];
m11_1401 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''nulz''))", span="2246-2246"];
m11_1402 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="StringEnumConverterTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Error parsing null value. Path '', line 0, position 0.'',\r\n                () => { reader.Read(); })", span="2248-2250"];
m11_1403 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", span="2244-2244"];
m11_1617 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", span="2601-2601"];
m11_1618 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="StringEnumConverterTests.cs", label="string json = ''\x00a0{\x00a0'h\x00a0i\x00a0'\x00a0:\x00a0[\x00a0true\x00a0,\x00a0new\x00a0Date\x00a0(\x00a0)\x00a0]\x00a0/*\x00a0comment\x00a0*/\x00a0}\x00a0''", span="2603-2603"];
m11_1619 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2604-2604"];
m11_1620 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2606-2606"];
m11_1621 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2607-2607"];
m11_1622 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2609-2609"];
m11_1623 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2610-2610"];
m11_1624 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2612-2612"];
m11_1625 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2613-2613"];
m11_1626 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2615-2615"];
m11_1627 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="2616-2616"];
m11_1628 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2618-2618"];
m11_1629 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2619-2619"];
m11_1630 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2621-2621"];
m11_1631 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2622-2622"];
m11_1632 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2624-2624"];
m11_1633 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2625-2625"];
m11_1634 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2627-2627"];
m11_1635 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2628-2628"];
m11_1636 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2630-2630"];
m11_1637 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2631-2631"];
m11_1638 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="StringEnumConverterTests.cs", label="Assert.IsFalse(reader.Read())", span="2633-2633"];
m11_1639 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", span="2601-2601"];
m11_987 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", span="1621-1621"];
m11_988 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="StringEnumConverterTests.cs", label="string json = @''[''''\u003c'''',''''\u5f20'''']''", span="1623-1623"];
m11_989 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1625-1625"];
m11_990 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="StringEnumConverterTests.cs", label="reader.Read()", span="1630-1630"];
m11_991 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="1631-1631"];
m11_992 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="StringEnumConverterTests.cs", label="reader.Read()", span="1633-1633"];
m11_993 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''<'', reader.Value)", span="1634-1634"];
m11_994 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="StringEnumConverterTests.cs", label="reader.Read()", span="1636-1636"];
m11_995 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(24352, Convert.ToInt32(Convert.ToChar((string)reader.Value)))", span="1637-1637"];
m11_996 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="StringEnumConverterTests.cs", label="reader.Read()", span="1639-1639"];
m11_997 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="1640-1640"];
m11_998 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", span="1621-1621"];
m11_18 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="StringEnumConverterTests.cs", label="JObject o = JObject.Parse(json)", span="83-83"];
m11_14 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="358-358"];
m11_15 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="78-78"];
m11_19 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumContainer<T>.EnumContainer()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumContainer<T>.EnumContainer()", span="54-54"];
m11_1479 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", span="2389-2389"];
m11_1480 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="StringEnumConverterTests.cs", label="string json = ''new Date\0()''", span="2391-2391"];
m11_1481 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2392-2392"];
m11_1482 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2397-2397"];
m11_1483 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="2398-2398"];
m11_1484 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2399-2399"];
m11_1485 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2401-2401"];
m11_1486 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2402-2402"];
m11_1487 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", span="2389-2389"];
m11_1063 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", span="1732-1732"];
m11_1064 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="StringEnumConverterTests.cs", label="string json = @''{\r\n    ''''A'''' : true,\r\n    ''''B'''' ''''''", span="1734-1736"];
m11_1065 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1738-1738"];
m11_1066 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="StringEnumConverterTests.cs", label="reader.Read()", span="1740-1740"];
m11_1067 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1741-1741"];
m11_1068 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="StringEnumConverterTests.cs", label="reader.Read()", span="1743-1743"];
m11_1069 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1744-1744"];
m11_1070 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="StringEnumConverterTests.cs", label="reader.Read()", span="1746-1746"];
m11_1071 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="1747-1747"];
m11_1072 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="StringEnumConverterTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                @''Invalid character after parsing property name. Expected ':' but got: ''''. Path 'A', line 3, position 9.'',\r\n                () => { reader.Read(); })", span="1749-1751"];
m11_1073 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", span="1732-1732"];
m11_256 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="513-513"];
m11_257 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="514-514"];
m11_259 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="516-516"];
m11_258 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="515-515"];
m11_260 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="518-518"];
m11_261 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(0L, reader.Value)", span="519-519"];
m11_1515 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", span="2448-2448"];
m11_1516 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''1 2 ''''name'''' [][]null {}{} 1.1''))", span="2450-2450"];
m11_1517 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="StringEnumConverterTests.cs", label="reader.SupportMultipleContent = true", span="2451-2451"];
m11_1518 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2453-2453"];
m11_1519 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2454-2454"];
m11_1520 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2456-2456"];
m11_1521 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2457-2457"];
m11_1522 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2459-2459"];
m11_1523 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="2460-2460"];
m11_1524 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2462-2462"];
m11_1525 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2463-2463"];
m11_1526 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2465-2465"];
m11_1527 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2466-2466"];
m11_1528 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2468-2468"];
m11_1529 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2469-2469"];
m11_1530 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2471-2471"];
m11_1531 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2472-2472"];
m11_1532 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2474-2474"];
m11_1533 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="2475-2475"];
m11_1534 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2477-2477"];
m11_1535 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2478-2478"];
m11_1536 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2480-2480"];
m11_1537 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2481-2481"];
m11_1538 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2483-2483"];
m11_1539 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2484-2484"];
m11_1540 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2486-2486"];
m11_1541 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2487-2487"];
m11_1542 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2489-2489"];
m11_1543 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2490-2490"];
m11_1544 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="StringEnumConverterTests.cs", label="Assert.IsFalse(reader.Read())", span="2492-2492"];
m11_1545 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", span="2448-2448"];
m11_1086 [cluster="System.Text.Encoding.GetString(byte[], int, int)", file="StringEnumConverterTests.cs", label="Entry System.Text.Encoding.GetString(byte[], int, int)", span="0-0"];
m11_1291 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", span="2080-2080"];
m11_1292 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="StringEnumConverterTests.cs", label="string json = ''{\''Offset\'':\''\\/Date(946663200000+06)\\/\''}''", span="2082-2082"];
m11_1293 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2084-2084"];
m11_1294 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2086-2086"];
m11_1295 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2087-2087"];
m11_1296 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2089-2089"];
m11_1297 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2090-2090"];
m11_1298 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="StringEnumConverterTests.cs", label="reader.ReadAsDateTimeOffset()", span="2092-2092"];
m11_1299 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2093-2093"];
m11_1300 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2094-2094"];
m11_1301 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), reader.Value)", span="2095-2095"];
m11_1302 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2097-2097"];
m11_1303 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2098-2098"];
m11_1304 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", span="2080-2080"];
m11_2008 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", span="3196-3196"];
m11_2009 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="StringEnumConverterTests.cs", label="ToggleReaderError toggleReaderError = new ToggleReaderError(new StringReader(''{'first':1,'second':2,'third':3}''))", span="3198-3198"];
m11_2010 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="StringEnumConverterTests.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(toggleReaderError)", span="3199-3199"];
m11_2012 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="StringEnumConverterTests.cs", label="toggleReaderError.Error = true", span="3203-3203"];
m11_2015 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="StringEnumConverterTests.cs", label="toggleReaderError.Error = false", span="3212-3212"];
m11_2018 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="StringEnumConverterTests.cs", label="toggleReaderError.Error = true", span="3217-3217"];
m11_2020 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="StringEnumConverterTests.cs", label="toggleReaderError.Error = false", span="3223-3223"];
m11_2023 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="StringEnumConverterTests.cs", label="toggleReaderError.Error = true", span="3228-3228"];
m11_2027 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="StringEnumConverterTests.cs", label="toggleReaderError.Error = false", span="3240-3240"];
m11_2011 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="3201-3201"];
m11_2013 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="StringEnumConverterTests.cs", label="ExceptionAssert.Throws<Exception>(\r\n                ''Read error'',\r\n                () => jsonTextReader.Read())", span="3205-3207"];
m11_2014 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="StringEnumConverterTests.cs", label="ExceptionAssert.Throws<Exception>(\r\n                ''Read error'',\r\n                () => jsonTextReader.Read())", span="3208-3210"];
m11_2016 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="3214-3214"];
m11_2017 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''first'', jsonTextReader.Value)", span="3215-3215"];
m11_2019 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="StringEnumConverterTests.cs", label="ExceptionAssert.Throws<Exception>(\r\n                ''Read error'',\r\n                () => jsonTextReader.Read())", span="3219-3221"];
m11_2021 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="3225-3225"];
m11_2022 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(1L, jsonTextReader.Value)", span="3226-3226"];
m11_2024 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="StringEnumConverterTests.cs", label="ExceptionAssert.Throws<Exception>(\r\n                ''Read error'',\r\n                () => jsonTextReader.Read())", span="3230-3232"];
m11_2025 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="StringEnumConverterTests.cs", label="ExceptionAssert.Throws<Exception>(\r\n                ''Read error'',\r\n                () => jsonTextReader.Read())", span="3233-3235"];
m11_2026 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="StringEnumConverterTests.cs", label="ExceptionAssert.Throws<Exception>(\r\n                ''Read error'',\r\n                () => jsonTextReader.Read())", span="3236-3238"];
m11_2028 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", span="3196-3196"];
m11_302 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", span="604-604"];
m11_303 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="StringEnumConverterTests.cs", label="string json = @'''hi' a''", span="606-606"];
m11_304 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="608-608"];
m11_305 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", color=red, community=0, file="StringEnumConverterTests.cs", label="0: ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Additional text encountered after finished reading JSON content: a. Path '', line 1, position 5.'',\r\n                () =>\r\n                {\r\n                    while (reader.Read())\r\n                    {\r\n                    }\r\n                })", span="610-617"];
m11_306 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", span="604-604"];
m11_1795 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", span="2890-2890"];
m11_1796 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="StringEnumConverterTests.cs", label="string json = @''[0,1,2 , 3]''", span="2892-2892"];
m11_1797 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2894-2894"];
m11_1798 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="StringEnumConverterTests.cs", label="reader.Read()", span="2896-2896"];
m11_1799 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2897-2897"];
m11_1800 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="StringEnumConverterTests.cs", label="reader.Read()", span="2899-2899"];
m11_1801 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2900-2900"];
m11_1802 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="StringEnumConverterTests.cs", label="reader.Read()", span="2902-2902"];
m11_1803 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2903-2903"];
m11_1804 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="StringEnumConverterTests.cs", label="reader.Read()", span="2905-2905"];
m11_1805 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2906-2906"];
m11_1806 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="StringEnumConverterTests.cs", label="reader.Read()", span="2908-2908"];
m11_1807 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2909-2909"];
m11_1808 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="StringEnumConverterTests.cs", label="reader.Read()", span="2911-2911"];
m11_1809 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2912-2912"];
m11_1810 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", span="2890-2890"];
m11_1353 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", span="2171-2171"];
m11_1354 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="StringEnumConverterTests.cs", label="string json = @''{''''Offset'''':''''30/1/2011''''}''", span="2173-2173"];
m11_1355 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2175-2175"];
m11_1356 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="StringEnumConverterTests.cs", label="reader.Culture = new CultureInfo(''en-NZ'')", span="2176-2176"];
m11_1357 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2178-2178"];
m11_1358 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2179-2179"];
m11_1359 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2181-2181"];
m11_1360 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2182-2182"];
m11_1361 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="StringEnumConverterTests.cs", label="reader.ReadAsDateTimeOffset()", span="2184-2184"];
m11_1362 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2185-2185"];
m11_1363 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2186-2186"];
m11_1364 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="StringEnumConverterTests.cs", label="DateTimeOffset dt = (DateTimeOffset)reader.Value", span="2188-2188"];
m11_1366 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2191-2191"];
m11_1367 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2192-2192"];
m11_1365 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(new DateTime(2011, 1, 30, 0, 0, 0, DateTimeKind.Unspecified), dt.DateTime)", span="2189-2189"];
m11_1368 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", span="2171-2171"];
m11_2083 [cluster="Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", span="3342-3342"];
m11_2084 [cluster="Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", file="StringEnumConverterTests.cs", label="int toReturn = Math.Min(count, bytesPerRead)", span="3344-3344"];
m11_2087 [cluster="Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", file="StringEnumConverterTests.cs", label="Array.Copy(bytes, totalBytesRead, buffer, offset, toReturn)", span="3348-3348"];
m11_2085 [cluster="Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", file="StringEnumConverterTests.cs", label="toReturn = Math.Min(toReturn, bytes.Length - totalBytesRead)", span="3345-3345"];
m11_2086 [cluster="Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", file="StringEnumConverterTests.cs", label="toReturn > 0", span="3346-3346"];
m11_2088 [cluster="Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", file="StringEnumConverterTests.cs", label="totalBytesRead += toReturn", span="3351-3351"];
m11_2089 [cluster="Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", file="StringEnumConverterTests.cs", label="return toReturn;", span="3352-3352"];
m11_2090 [cluster="Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", span="3342-3342"];
m11_1165 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", span="1885-1885"];
m11_1166 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''{''))", span="1887-1887"];
m11_1167 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="StringEnumConverterTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unexpected end when reading bytes. Path '', line 1, position 1.'',\r\n                () => { reader.ReadAsBytes(); })", span="1889-1891"];
m11_1168 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", span="1885-1885"];
m11_1765 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", span="2840-2840"];
m11_1766 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="StringEnumConverterTests.cs", label="string json = @''//comment''", span="2842-2842"];
m11_1767 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2844-2844"];
m11_1768 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2846-2846"];
m11_1769 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2847-2847"];
m11_1770 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''comment'', reader.Value)", span="2848-2848"];
m11_1771 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="StringEnumConverterTests.cs", label="Assert.IsFalse(reader.Read())", span="2850-2850"];
m11_1772 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", span="2840-2840"];
m11_472 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", span="848-848"];
m11_473 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="StringEnumConverterTests.cs", label="string s = new string('a', 10000)", span="850-850"];
m11_474 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="StringEnumConverterTests.cs", label="JsonReader reader = new JsonTextReader(new StringReader(''''' + s + '''''))", span="851-851"];
m11_476 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(s, reader.Value)", span="854-854"];
m11_475 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="StringEnumConverterTests.cs", label="reader.Read()", span="852-852"];
m11_477 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", span="848-848"];
m11_594 [cluster="Unk.ToString", file="StringEnumConverterTests.cs", label="Entry Unk.ToString", span=""];
m11_646 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", span="1126-1126"];
m11_647 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="StringEnumConverterTests.cs", label="string helloWorld = ''Hello world!''", span="1128-1128"];
m11_648 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="StringEnumConverterTests.cs", label="byte[] helloWorldData = Encoding.UTF8.GetBytes(helloWorld)", span="1129-1129"];
m11_649 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="StringEnumConverterTests.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''''' + Convert.ToBase64String(helloWorldData)))", span="1131-1131"];
m11_650 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="StringEnumConverterTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unterminated string. Expected delimiter: '. Path '', line 1, position 17.'',\r\n                () => { reader.ReadAsBytes(); })", span="1133-1135"];
m11_651 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", span="1126-1126"];
m11_638 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", span="1116-1116"];
m11_639 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="StringEnumConverterTests.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''true''))", span="1118-1118"];
m11_640 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="StringEnumConverterTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Error reading bytes. Unexpected token: Boolean. Path '', line 1, position 4.'',\r\n                () => { reader.ReadAsBytes(); })", span="1120-1122"];
m11_641 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", span="1116-1116"];
m11_1867 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", span="2996-2996"];
m11_1868 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="StringEnumConverterTests.cs", label="string json = ''[[]]''", span="2998-2998"];
m11_1869 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                MaxDepth = 1\r\n            }", span="3000-3003"];
m11_1870 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="3005-3005"];
m11_1871 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="StringEnumConverterTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''The reader's MaxDepth of 1 has been exceeded. Path '[0]', line 1, position 2.'',\r\n                () => { Assert.IsTrue(reader.Read()); })", span="3007-3009"];
m11_1872 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", span="2996-2996"];
m11_2005 [cluster="System.DateTime.DateTime(long, System.DateTimeKind)", file="StringEnumConverterTests.cs", label="Entry System.DateTime.DateTime(long, System.DateTimeKind)", span="0-0"];
m11_252 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEnumWithDifferentCases()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(EnumWithDifferentCases.M, e)", span="652-652"];
m11_253 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEnumWithDifferentCases()", file="StringEnumConverterTests.cs", label="e = JsonConvert.DeserializeObject<EnumWithDifferentCases>(@''''''m'''''', new StringEnumConverter())", span="654-654"];
m11_254 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEnumWithDifferentCases()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(EnumWithDifferentCases.M, e)", span="658-658"];
m11_255 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEnumWithDifferentCases()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEnumWithDifferentCases()", span="648-648"];
m11_268 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="StringEnumConverterTests.cs", label=json, span=""];
m11_2092 [cluster="System.Array.Copy(System.Array, int, System.Array, int, int)", file="StringEnumConverterTests.cs", label="Entry System.Array.Copy(System.Array, int, System.Array, int, int)", span="0-0"];
m11_1488 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", span="2406-2406"];
m11_1489 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="StringEnumConverterTests.cs", label="string json = ''new Date\n()''", span="2408-2408"];
m11_1490 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2409-2409"];
m11_1491 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2411-2411"];
m11_1492 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="2412-2412"];
m11_1493 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2413-2413"];
m11_1494 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2415-2415"];
m11_1495 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2416-2416"];
m11_1496 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", span="2406-2406"];
m11_1369 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", span="2197-2197"];
m11_1370 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="StringEnumConverterTests.cs", label="string json = @''{''''Name'''':1}''", span="2199-2199"];
m11_1371 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2201-2201"];
m11_1372 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2203-2203"];
m11_1373 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2204-2204"];
m11_1374 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2206-2206"];
m11_1375 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2207-2207"];
m11_1376 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="StringEnumConverterTests.cs", label="reader.ReadAsDecimal()", span="2209-2209"];
m11_1377 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2210-2210"];
m11_1378 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="2211-2211"];
m11_1379 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(1m, reader.Value)", span="2212-2212"];
m11_1380 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", span="2197-2197"];
m11_1407 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", span="2254-2254"];
m11_1408 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''nullz''))", span="2256-2256"];
m11_1409 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", file="StringEnumConverterTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Error parsing null value. Path '', line 1, position 4.'',\r\n                () => { reader.Read(); })", span="2258-2260"];
m11_1410 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", span="2254-2254"];
m11_250 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEnumWithDifferentCases()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEnumWithDifferentCases()", span="648-648"];
m11_972 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", span="1598-1598"];
m11_973 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="StringEnumConverterTests.cs", label="int length = 20000", span="1600-1600"];
m11_974 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="StringEnumConverterTests.cs", label="string json = @''['''''' + new string(' ', length) + @'''''']''", span="1601-1601"];
m11_975 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1603-1603"];
m11_976 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="StringEnumConverterTests.cs", label="reader.Read()", span="1605-1605"];
m11_977 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="1606-1606"];
m11_978 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="StringEnumConverterTests.cs", label="reader.Read()", span="1608-1608"];
m11_979 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1609-1609"];
m11_980 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(typeof(string), reader.ValueType)", span="1610-1610"];
m11_981 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(20000, reader.Value.ToString().Length)", span="1611-1611"];
m11_982 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="1613-1613"];
m11_983 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="1614-1614"];
m11_984 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="StringEnumConverterTests.cs", label="Assert.IsFalse(reader.Read())", span="1616-1616"];
m11_985 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1617-1617"];
m11_986 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", span="1598-1598"];
m11_1335 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="StringEnumConverterTests.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m11_1600 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", span="2577-2577"];
m11_1601 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="StringEnumConverterTests.cs", label="string json = ''new Date()''", span="2579-2579"];
m11_1602 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2580-2580"];
m11_1603 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2582-2582"];
m11_1604 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2583-2583"];
m11_1605 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(reader.Read())", span="2585-2585"];
m11_1606 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2586-2586"];
m11_1607 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", span="2577-2577"];
m11_251 [cluster="System.Console.WriteLine(object)", file="StringEnumConverterTests.cs", label="Entry System.Console.WriteLine(object)", span="0-0"];
m11_999 [cluster="System.Convert.ToChar(string)", file="StringEnumConverterTests.cs", label="Entry System.Convert.ToChar(string)", span="0-0"];
m11_505 [cluster="System.IO.StringWriter.ToString()", file="StringEnumConverterTests.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m11_1077 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", span="1755-1755"];
m11_1078 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="StringEnumConverterTests.cs", label="StringReader s = new StringReader(@''''''SGVsbG8gd29ybGQu'''''')", span="1757-1757"];
m11_1079 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(s)", span="1758-1758"];
m11_1080 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="StringEnumConverterTests.cs", label="byte[] data = reader.ReadAsBytes()", span="1760-1760"];
m11_1081 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="StringEnumConverterTests.cs", label="Assert.IsNotNull(data)", span="1761-1761"];
m11_1082 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="StringEnumConverterTests.cs", label="string text = Encoding.UTF8.GetString(data, 0, data.Length)", span="1763-1763"];
m11_1083 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''Hello world.'', text)", span="1764-1764"];
m11_1084 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", span="1755-1755"];
m11_652 [cluster="System.Convert.ToBase64String(byte[])", file="StringEnumConverterTests.cs", label="Entry System.Convert.ToBase64String(byte[])", span="0-0"];
m11_2103 [file="StringEnumConverterTests.cs", label=jsonTextReader, span=""];
m11_2104 [file="StringEnumConverterTests.cs", label=jsonTextReader, span=""];
m11_2105 [file="StringEnumConverterTests.cs", label=reader, span=""];
m11_2106 [file="StringEnumConverterTests.cs", label=reader, span=""];
m11_2107 [file="StringEnumConverterTests.cs", label=reader, span=""];
m11_2108 [file="StringEnumConverterTests.cs", label="Newtonsoft.Json.Tests.JsonTextReaderTest", span=""];
m11_2109 [file="StringEnumConverterTests.cs", label=reader, span=""];
m11_2110 [file="StringEnumConverterTests.cs", label=reader, span=""];
m11_2111 [file="StringEnumConverterTests.cs", label=reader, span=""];
m11_2112 [file="StringEnumConverterTests.cs", label=reader, span=""];
m11_2113 [file="StringEnumConverterTests.cs", label=total, span=""];
m11_2114 [file="StringEnumConverterTests.cs", label=total, span=""];
m11_2115 [file="StringEnumConverterTests.cs", label=reader, span=""];
m11_2116 [file="StringEnumConverterTests.cs", label=reader, span=""];
m11_2117 [file="StringEnumConverterTests.cs", label=reader, span=""];
m11_2118 [file="StringEnumConverterTests.cs", label=reader, span=""];
m11_2119 [file="StringEnumConverterTests.cs", label=reader, span=""];
m11_2120 [file="StringEnumConverterTests.cs", label=reader, span=""];
m11_2121 [file="StringEnumConverterTests.cs", label=reader, span=""];
m11_2122 [file="StringEnumConverterTests.cs", label=reader, span=""];
m11_2123 [file="StringEnumConverterTests.cs", label=reader, span=""];
m11_2124 [file="StringEnumConverterTests.cs", label=reader, span=""];
m11_2125 [file="StringEnumConverterTests.cs", label=reader, span=""];
m11_2126 [file="StringEnumConverterTests.cs", label=reader, span=""];
m11_2127 [file="StringEnumConverterTests.cs", label=reader, span=""];
m11_2128 [file="StringEnumConverterTests.cs", label=reader, span=""];
m11_2129 [file="StringEnumConverterTests.cs", label=reader, span=""];
m11_2130 [file="StringEnumConverterTests.cs", label=reader, span=""];
m11_2131 [file="StringEnumConverterTests.cs", label=reader, span=""];
m11_2132 [file="StringEnumConverterTests.cs", label=reader, span=""];
m11_2133 [file="StringEnumConverterTests.cs", label=reader, span=""];
m11_2134 [file="StringEnumConverterTests.cs", label=reader, span=""];
m11_2135 [file="StringEnumConverterTests.cs", label=reader, span=""];
m11_2136 [file="StringEnumConverterTests.cs", label=reader, span=""];
m11_2137 [file="StringEnumConverterTests.cs", label=reader, span=""];
m11_2138 [file="StringEnumConverterTests.cs", label=reader, span=""];
m11_2139 [file="StringEnumConverterTests.cs", label=reader, span=""];
m11_2140 [file="StringEnumConverterTests.cs", label=reader, span=""];
m11_2141 [file="StringEnumConverterTests.cs", label=reader, span=""];
m11_2142 [file="StringEnumConverterTests.cs", label=reader, span=""];
m11_2143 [file="StringEnumConverterTests.cs", label=reader, span=""];
m11_2144 [file="StringEnumConverterTests.cs", label=reader, span=""];
m11_2145 [file="StringEnumConverterTests.cs", label=reader, span=""];
m11_2146 [file="StringEnumConverterTests.cs", label=jsonTextReader, span=""];
m11_2147 [file="StringEnumConverterTests.cs", label="Newtonsoft.Json.Tests.ToggleReaderError", span=""];
m11_2148 [file="StringEnumConverterTests.cs", label="Newtonsoft.Json.Tests.SlowStream", span=""];
m12_63 [cluster="System.Type.GetInterfaces()", file="TypeExtensions.cs", label="Entry System.Type.GetInterfaces()", span="0-0"];
m12_62 [cluster="System.Type.BaseType()", file="TypeExtensions.cs", label="Entry System.Type.BaseType()", span="171-171"];
m12_79 [cluster="System.Type.ImplementInterface(System.Type)", file="TypeExtensions.cs", label="Entry System.Type.ImplementInterface(System.Type)", span="587-587"];
m12_20 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.BaseType(System.Type)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.BaseType(System.Type)", span="171-171"];
m12_21 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.BaseType(System.Type)", file="TypeExtensions.cs", label="return type.GetTypeInfo().BaseType;", span="176-176"];
m12_22 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.BaseType(System.Type)", file="TypeExtensions.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.BaseType(System.Type)", span="171-171"];
m12_41 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsValueType(System.Type)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsValueType(System.Type)", span="535-535"];
m12_42 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsValueType(System.Type)", file="TypeExtensions.cs", label="return type.GetTypeInfo().IsValueType;", span="540-540"];
m12_43 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsValueType(System.Type)", file="TypeExtensions.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsValueType(System.Type)", span="535-535"];
m12_47 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, bool, out System.Type)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, bool, out System.Type)", span="553-553"];
m12_48 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, bool, out System.Type)", file="TypeExtensions.cs", label="Type current = type", span="555-555"];
m12_50 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, bool, out System.Type)", file="TypeExtensions.cs", label="string.Equals(current.FullName, fullTypeName, StringComparison.Ordinal)", span="559-559"];
m12_54 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, bool, out System.Type)", color=green, community=0, file="TypeExtensions.cs", label="0: searchInterfaces", span="568-568"];
m12_55 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, bool, out System.Type)", color=green, community=0, file="TypeExtensions.cs", label="0: type.GetInterfaces()", span="570-570"];
m12_56 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, bool, out System.Type)", color=green, community=0, file="TypeExtensions.cs", label="0: string.Equals(i.Name, fullTypeName, StringComparison.Ordinal)", span="572-572"];
m12_49 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, bool, out System.Type)", file="TypeExtensions.cs", label="current != null", span="557-557"];
m12_51 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, bool, out System.Type)", file="TypeExtensions.cs", label="match = current", span="561-561"];
m12_53 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, bool, out System.Type)", file="TypeExtensions.cs", label="current = current.BaseType()", span="565-565"];
m12_52 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, bool, out System.Type)", file="TypeExtensions.cs", label="return true;", span="562-562"];
m12_58 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, bool, out System.Type)", color=green, community=0, file="TypeExtensions.cs", label="2: return true;", span="575-575"];
m12_57 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, bool, out System.Type)", color=green, community=0, file="TypeExtensions.cs", label="3: match = type", span="574-574"];
m12_59 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, bool, out System.Type)", file="TypeExtensions.cs", label="match = null", span="580-580"];
m12_60 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, bool, out System.Type)", file="TypeExtensions.cs", label="return false;", span="581-581"];
m12_17 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsGenericTypeDefinition(System.Type)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsGenericTypeDefinition(System.Type)", span="162-162"];
m12_18 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsGenericTypeDefinition(System.Type)", file="TypeExtensions.cs", label="return type.GetTypeInfo().IsGenericTypeDefinition;", span="167-167"];
m12_19 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsGenericTypeDefinition(System.Type)", file="TypeExtensions.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsGenericTypeDefinition(System.Type)", span="162-162"];
m12_65 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string)", file="TypeExtensions.cs", label="Type match", span="583-583"];
m12_67 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string)", color=green, community=0, file="TypeExtensions.cs", label="0: Exit Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string)", span="581-581"];
m12_66 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string)", color=red, community=0, file="TypeExtensions.cs", label="1: return type.AssignableToTypeName(fullTypeName, out match);", span="584-584"];
m12_68 [cluster="System.Type.AssignableToTypeName(string, out System.Type)", file="TypeExtensions.cs", label="Entry System.Type.AssignableToTypeName(string, out System.Type)", span="553-553"];
m12_0 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.Method(System.Delegate)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.Method(System.Delegate)", span="98-98"];
m12_1 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.Method(System.Delegate)", file="TypeExtensions.cs", label="return d.GetMethodInfo();", span="103-103"];
m12_2 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.Method(System.Delegate)", file="TypeExtensions.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.Method(System.Delegate)", span="98-98"];
m12_10 [cluster="System.Type.GetTypeInfo()", file="TypeExtensions.cs", label="Entry System.Type.GetTypeInfo()", span="0-0"];
m12_29 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsClass(System.Type)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsClass(System.Type)", span="198-198"];
m12_30 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsClass(System.Type)", file="TypeExtensions.cs", label="return type.GetTypeInfo().IsClass;", span="203-203"];
m12_31 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsClass(System.Type)", file="TypeExtensions.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsClass(System.Type)", span="198-198"];
m12_26 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsEnum(System.Type)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsEnum(System.Type)", span="189-189"];
m12_27 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsEnum(System.Type)", file="TypeExtensions.cs", label="return type.GetTypeInfo().IsEnum;", span="194-194"];
m12_28 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsEnum(System.Type)", file="TypeExtensions.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsEnum(System.Type)", span="189-189"];
m12_23 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.Assembly(System.Type)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.Assembly(System.Type)", span="180-180"];
m12_24 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.Assembly(System.Type)", file="TypeExtensions.cs", label="return type.GetTypeInfo().Assembly;", span="185-185"];
m12_25 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.Assembly(System.Type)", file="TypeExtensions.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.Assembly(System.Type)", span="180-180"];
m12_38 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsVisible(System.Type)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsVisible(System.Type)", span="526-526"];
m12_39 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsVisible(System.Type)", file="TypeExtensions.cs", label="return type.GetTypeInfo().IsVisible;", span="531-531"];
m12_40 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsVisible(System.Type)", file="TypeExtensions.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsVisible(System.Type)", span="526-526"];
m12_61 [cluster="string.Equals(string, string, System.StringComparison)", file="TypeExtensions.cs", label="Entry string.Equals(string, string, System.StringComparison)", span="0-0"];
m12_35 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsAbstract(System.Type)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsAbstract(System.Type)", span="517-517"];
m12_36 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsAbstract(System.Type)", file="TypeExtensions.cs", label="return type.GetTypeInfo().IsAbstract;", span="522-522"];
m12_37 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsAbstract(System.Type)", file="TypeExtensions.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsAbstract(System.Type)", span="517-517"];
m12_69 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.ImplementInterface(System.Type, System.Type)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.ImplementInterface(System.Type, System.Type)", span="587-587"];
m12_7 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.ContainsGenericParameters(System.Type)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.ContainsGenericParameters(System.Type)", span="135-135"];
m12_8 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.ContainsGenericParameters(System.Type)", file="TypeExtensions.cs", label="return type.GetTypeInfo().ContainsGenericParameters;", span="140-140"];
m12_9 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.ContainsGenericParameters(System.Type)", file="TypeExtensions.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.ContainsGenericParameters(System.Type)", span="135-135"];
m12_14 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsGenericType(System.Type)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsGenericType(System.Type)", span="153-153"];
m12_15 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsGenericType(System.Type)", file="TypeExtensions.cs", label="return type.GetTypeInfo().IsGenericType;", span="158-158"];
m12_16 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsGenericType(System.Type)", file="TypeExtensions.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsGenericType(System.Type)", span="153-153"];
m12_11 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsInterface(System.Type)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsInterface(System.Type)", span="144-144"];
m12_12 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsInterface(System.Type)", file="TypeExtensions.cs", label="return type.GetTypeInfo().IsInterface;", span="149-149"];
m12_13 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsInterface(System.Type)", file="TypeExtensions.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsInterface(System.Type)", span="144-144"];
m12_3 [cluster="System.Delegate.GetMethodInfo()", file="TypeExtensions.cs", label="Entry System.Delegate.GetMethodInfo()", span="0-0"];
m12_4 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.MemberType(System.Reflection.MemberInfo)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.MemberType(System.Reflection.MemberInfo)", span="107-107"];
m12_5 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.MemberType(System.Reflection.MemberInfo)", file="TypeExtensions.cs", label="return memberInfo.MemberType;", span="110-110"];
m12_6 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.MemberType(System.Reflection.MemberInfo)", file="TypeExtensions.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.MemberType(System.Reflection.MemberInfo)", span="107-107"];
m12_70 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.ImplementInterface(System.Type, System.Type)", file="TypeExtensions.cs", label="Type currentType = type", span="589-589"];
m12_74 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.ImplementInterface(System.Type, System.Type)", file="TypeExtensions.cs", label="i == interfaceType || (i != null && i.ImplementInterface(interfaceType))", span="594-594"];
m12_71 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.ImplementInterface(System.Type, System.Type)", file="TypeExtensions.cs", label="currentType != null", span="589-589"];
m12_72 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.ImplementInterface(System.Type, System.Type)", file="TypeExtensions.cs", label="IEnumerable<Type> interfaces = currentType.GetInterfaces()", span="591-591"];
m12_76 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.ImplementInterface(System.Type, System.Type)", file="TypeExtensions.cs", label="currentType = currentType.BaseType()", span="589-589"];
m12_77 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.ImplementInterface(System.Type, System.Type)", file="TypeExtensions.cs", label="return false;", span="601-601"];
m12_73 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.ImplementInterface(System.Type, System.Type)", file="TypeExtensions.cs", label=interfaces, span="592-592"];
m12_75 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.ImplementInterface(System.Type, System.Type)", file="TypeExtensions.cs", label="return true;", span="596-596"];
m12_78 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.ImplementInterface(System.Type, System.Type)", file="TypeExtensions.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.ImplementInterface(System.Type, System.Type)", span="587-587"];
m12_64 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string)", span="581-581"];
m12_44 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsPrimitive(System.Type)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsPrimitive(System.Type)", span="544-544"];
m12_45 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsPrimitive(System.Type)", file="TypeExtensions.cs", label="return type.GetTypeInfo().IsPrimitive;", span="549-549"];
m12_46 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsPrimitive(System.Type)", file="TypeExtensions.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsPrimitive(System.Type)", span="544-544"];
m12_32 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsSealed(System.Type)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsSealed(System.Type)", span="207-207"];
m12_33 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsSealed(System.Type)", file="TypeExtensions.cs", label="return type.GetTypeInfo().IsSealed;", span="212-212"];
m12_34 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsSealed(System.Type)", file="TypeExtensions.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsSealed(System.Type)", span="207-207"];
m14_123 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="XmlNodeConverterTest.cs", label="_readType = ReadType.Read", span="303-303"];
m14_128 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.JsonTextReader.Read()", span="301-301"];
m14_130 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", span="823-823"];
m14_127 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="XmlNodeConverterTest.cs", label="return true;", span="310-310"];
m14_129 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadInternal()", span="371-371"];
m14_124 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="XmlNodeConverterTest.cs", label="!ReadInternal()", span="304-304"];
m14_125 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="XmlNodeConverterTest.cs", label="SetToken(JsonToken.None)", span="306-306"];
m14_126 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="XmlNodeConverterTest.cs", label="return false;", span="307-307"];
m14_131 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsBytes()", span="319-319"];
m14_61 [cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="XmlNodeConverterTest.cs", label="int length = _chars.Length", span="180-180"];
m14_586 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="XmlNodeConverterTest.cs", label="ateWhitespace = true", span="1056-1056"];
m14_593 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="XmlNodeConverterTest.cs", label="int initialPosition = _charPos", span="1076-1076"];
m14_595 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="XmlNodeConverterTest.cs", label=true, span="1079-1079"];
m14_592 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="XmlNodeConverterTest.cs", label="EatWhitespace(false)", span="1074-1074"];
m14_594 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="XmlNodeConverterTest.cs", label="int endPosition", span="1077-1077"];
m14_596 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="XmlNodeConverterTest.cs", label="char currentChar = _chars[_charPos]", span="1081-1081"];
m14_587 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="XmlNodeConverterTest.cs", label="_charPos++", span="1057-1057"];
m14_591 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="XmlNodeConverterTest.cs", label="MatchValueWithTrailingSeparator(''new'')", span="1072-1072"];
m14_588 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="XmlNodeConverterTest.cs", label="finished = true", span="1061-1061"];
m14_589 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="XmlNodeConverterTest.cs", label="return (!oneOrMore || ateWhitespace);", span="1067-1067"];
m14_590 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", span="1026-1026"];
m14_597 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="XmlNodeConverterTest.cs", label="currentChar == '\0'", span="1082-1082"];
m14_598 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="XmlNodeConverterTest.cs", label="_charsUsed == _charPos", span="1084-1084"];
m14_628 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="XmlNodeConverterTest.cs", label="ShiftBufferIfNeeded()", span="1151-1151"];
m14_632 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="XmlNodeConverterTest.cs", label="SetPostValueState(true)", span="1159-1159"];
m14_633 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="XmlNodeConverterTest.cs", label="_stringReference = new StringReference(_chars, initialPosition, _charPos - initialPosition)", span="1161-1161"];
m14_630 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="XmlNodeConverterTest.cs", label="int initialPosition = _charPos", span="1154-1154"];
m14_631 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="XmlNodeConverterTest.cs", label="ReadNumberIntoBuffer()", span="1156-1156"];
m14_629 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="XmlNodeConverterTest.cs", label="char firstChar = _chars[_charPos]", span="1153-1153"];
m14_634 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="XmlNodeConverterTest.cs", label="object numberValue", span="1163-1163"];
m14_706 [cluster="System.Convert.ToInt32(string, int)", file="XmlNodeConverterTest.cs", label="Entry System.Convert.ToInt32(string, int)", span="0-0"];
m14_710 [cluster="System.Convert.ToDecimal(long)", file="XmlNodeConverterTest.cs", label="Entry System.Convert.ToDecimal(long)", span="0-0"];
m14_714 [cluster="double.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out double)", file="XmlNodeConverterTest.cs", label="Entry double.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out double)", span="0-0"];
m14_709 [cluster="System.Convert.ToInt64(string, int)", file="XmlNodeConverterTest.cs", label="Entry System.Convert.ToInt64(string, int)", span="0-0"];
m14_711 [cluster="decimal.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out decimal)", file="XmlNodeConverterTest.cs", label="Entry decimal.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out decimal)", span="0-0"];
m14_713 [cluster="Unk.Parse", file="XmlNodeConverterTest.cs", label="Entry Unk.Parse", span=""];
m14_712 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", span="705-705"];
m14_708 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", span="640-640"];
m14_707 [cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", span="113-113"];
m14_715 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="XmlNodeConverterTest.cs", label="_charPos++", span="1331-1331"];
m14_892 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="149-149"];
m14_705 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeAttributePropertyNotAtStart()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeAttributePropertyNotAtStart()", span="2611-2611"];
m14_320 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="XmlNodeConverterTest.cs", label="charPos--", span="638-638"];
m14_52 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", span="135-135"];
m14_60 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", span="135-135"];
m14_20 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="XmlNodeConverterTest.cs", label="_charPos++", span="113-113"];
m14_377 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="XmlNodeConverterTest.cs", label="SetToken(JsonToken.EndArray)", span="720-720"];
m14_378 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", color=green, community=0, file="XmlNodeConverterTest.cs", label="0: return true;", span="721-721"];
m14_379 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="XmlNodeConverterTest.cs", label="')'", span="722-722"];
m14_152 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="XmlNodeConverterTest.cs", label="return ReadAsDateTimeOffsetInternal();", span="367-367"];
m14_161 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="XmlNodeConverterTest.cs", label="State.Constructor", span="381-381"];
m14_158 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="XmlNodeConverterTest.cs", label="State.Property", span="378-378"];
m14_157 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="XmlNodeConverterTest.cs", label="State.Start", span="377-377"];
m14_156 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="XmlNodeConverterTest.cs", label=_currentState, span="375-375"];
m14_154 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", span="411-411"];
m14_160 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="XmlNodeConverterTest.cs", label="State.ArrayStart", span="380-380"];
m14_159 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="XmlNodeConverterTest.cs", label="State.Array", span="379-379"];
m14_153 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", span="365-365"];
m14_155 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="XmlNodeConverterTest.cs", label=true, span="373-373"];
m14_162 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="XmlNodeConverterTest.cs", label="State.ConstructorStart", span="382-382"];
m14_76 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="XmlNodeConverterTest.cs", label="return 0;", span="202-202"];
m14_82 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="XmlNodeConverterTest.cs", label="_chars = dst", span="217-217"];
m14_80 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="XmlNodeConverterTest.cs", label="char[] dst = new char[newArrayLength]", span="213-213"];
m14_81 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="XmlNodeConverterTest.cs", label="BlockCopyChars(_chars, 0, dst, 0, _chars.Length)", span="215-215"];
m14_78 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="XmlNodeConverterTest.cs", label=append, span="207-207"];
m14_79 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="XmlNodeConverterTest.cs", label="int newArrayLength = Math.Max(_chars.Length * 2, _charsUsed + charsRequired + 1)", span="210-210"];
m14_77 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="XmlNodeConverterTest.cs", label="_charsUsed + charsRequired >= _chars.Length - 1", span="205-205"];
m14_83 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="XmlNodeConverterTest.cs", label="int remainingCharCount = _charsUsed - _charPos", span="221-221"];
m14_356 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleTextNode()", file="XmlNodeConverterTest.cs", label="XmlDocument doc = new XmlDocument()", span="983-983"];
m14_357 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleTextNode()", file="XmlNodeConverterTest.cs", label="doc.LoadXml(xml)", span="984-984"];
m14_358 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleTextNode()", file="XmlNodeConverterTest.cs", label="string jsonText = SerializeXmlNode(doc)", span="986-986"];
m14_359 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleTextNode()", file="XmlNodeConverterTest.cs", label="XmlDocument newDoc = (XmlDocument)DeserializeXmlNode(jsonText)", span="988-988"];
m14_360 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleTextNode()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(doc.InnerXml, newDoc.InnerXml)", span="990-990"];
m14_431 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="XmlNodeConverterTest.cs", label="char quoteChar", span="816-816"];
m14_433 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="XmlNodeConverterTest.cs", label="_charPos++", span="820-820"];
m14_432 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="XmlNodeConverterTest.cs", label="firstChar == '''' || firstChar == '\''", span="818-818"];
m14_434 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="XmlNodeConverterTest.cs", label="quoteChar = firstChar", span="821-821"];
m14_312 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Utf8StringWriter.Utf8StringWriter(System.Text.StringBuilder)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Utf8StringWriter.Utf8StringWriter(System.Text.StringBuilder)", span="806-806"];
m14_64 [cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="XmlNodeConverterTest.cs", label="count > 0", span="184-184"];
m14_741 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="XmlNodeConverterTest.cs", label="_chars[_charPos] == '/'", span="1379-1379"];
m14_743 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="XmlNodeConverterTest.cs", label="_charPos++", span="1383-1383"];
m14_745 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="XmlNodeConverterTest.cs", label="StringUtils.CarriageReturn", span="1389-1389"];
m14_742 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="XmlNodeConverterTest.cs", label="_stringReference = new StringReference(_chars, initialPosition, _charPos - initialPosition - 1)", span="1381-1381"];
m14_744 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="XmlNodeConverterTest.cs", label="commentFinished = true", span="1384-1384"];
m14_746 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", color=red, community=0, file="XmlNodeConverterTest.cs", label="0: singlelineComment", span="1390-1390"];
m14_747 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="XmlNodeConverterTest.cs", label="_stringReference = new StringReference(_chars, initialPosition, _charPos - initialPosition)", span="1392-1392"];
m14_627 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteAttributes()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteAttributes()", span="2005-2005"];
m14_770 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Serialize_XDocument_NoRoot()", file="XmlNodeConverterTest.cs", label="XDocument d = new XDocument()", span="2784-2784"];
m14_771 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Serialize_XDocument_NoRoot()", file="XmlNodeConverterTest.cs", label="string json = JsonConvert.SerializeXNode(d)", span="2786-2786"];
m14_772 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Serialize_XDocument_NoRoot()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''{}'', json)", span="2788-2788"];
m14_773 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Serialize_XDocument_NoRoot()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Serialize_XDocument_NoRoot()", span="2782-2782"];
m14_774 [cluster="XDocument.cstr", file="XmlNodeConverterTest.cs", label="Entry XDocument.cstr", span=""];
m14_775 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Deserialize_XDocument_NoRoot()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Deserialize_XDocument_NoRoot()", span="2792-2792"];
m14_776 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Deserialize_XDocument_NoRoot()", file="XmlNodeConverterTest.cs", label="XDocument d = JsonConvert.DeserializeXNode(@''{}'')", span="2794-2794"];
m14_51 [cluster="Unk.ToString", file="XmlNodeConverterTest.cs", label="Entry Unk.ToString", span=""];
m14_559 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="1755-1755"];
m14_816 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Unspecified_Precision()", file="XmlNodeConverterTest.cs", label="string json = @''{''''CreatedDate'''': ''''2014-01-23T00:00:00.1234567''''}''", span="2857-2857"];
m14_817 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Unspecified_Precision()", file="XmlNodeConverterTest.cs", label="var dxml = JsonConvert.DeserializeXNode(json, ''root'')", span="2858-2858"];
m14_820 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Unspecified_Precision()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Unspecified_Precision()", span="2855-2855"];
m14_818 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Unspecified_Precision()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''2014-01-23T00:00:00.1234567'', dxml.Root.Element(''CreatedDate'').Value)", span="2859-2859"];
m14_819 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Unspecified_Precision()", file="XmlNodeConverterTest.cs", label="Console.WriteLine(''DateTimeToXml_Unspecified: '' + dxml.Root.Element(''CreatedDate'').Value)", span="2861-2861"];
m14_821 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Utc_Precision()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Utc_Precision()", span="2865-2865"];
m14_95 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="XmlNodeConverterTest.cs", label="int charsRead = _reader.Read(_chars, _charsUsed, attemptCharReadCount)", span="248-248"];
m14_557 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeMetadataPropertyWithBadValue()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => { JsonConvert.DeserializeXmlNode(json, ''root''); },\r\n                ''Unexpected JsonToken: StartArray. Path '$id', line 2, position 10.'')", span="1754-1756"];
m14_829 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Local_Precision()", file="XmlNodeConverterTest.cs", label="string json = @''{''''CreatedDate'''': ''''2014-01-23T00:00:00.1234567+01:00''''}''", span="2879-2879"];
m14_830 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Local_Precision()", file="XmlNodeConverterTest.cs", label="var dxml = JsonConvert.DeserializeXNode(json, ''root'')", span="2880-2880"];
m14_833 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Local_Precision()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Local_Precision()", span="2875-2875"];
m14_831 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Local_Precision()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(dt.ToString(''yyyy-MM-ddTHH:mm:ss.FFFFFFFK'', CultureInfo.InvariantCulture), dxml.Root.Element(''CreatedDate'').Value)", span="2881-2881"];
m14_832 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Local_Precision()", file="XmlNodeConverterTest.cs", label="Console.WriteLine(''DateTimeToXml_Local: '' + dxml.Root.Element(''CreatedDate'').Value)", span="2883-2883"];
m14_834 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyNodeAndOmitRoot_XElement()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyNodeAndOmitRoot_XElement()", span="2887-2887"];
m14_612 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="XmlNodeConverterTest.cs", label="endPosition = _charPos", span="1114-1114"];
m14_616 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="XmlNodeConverterTest.cs", label="throw JsonReaderException.Create(this, ''Unexpected character while parsing constructor: {0}.''.FormatWith(CultureInfo.InvariantCulture, currentChar));", span="1125-1125"];
m14_617 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="XmlNodeConverterTest.cs", label="_stringReference = new StringReference(_chars, initialPosition, endPosition - initialPosition)", span="1129-1129"];
m14_614 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="XmlNodeConverterTest.cs", label="currentChar == '('", span="1118-1118"];
m14_615 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="XmlNodeConverterTest.cs", label="endPosition = _charPos", span="1120-1120"];
m14_613 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="XmlNodeConverterTest.cs", label="_charPos++", span="1115-1115"];
m14_618 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="XmlNodeConverterTest.cs", label="string constructorName = _stringReference.ToString()", span="1130-1130"];
m14_165 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="XmlNodeConverterTest.cs", label="State.ObjectStart", span="385-385"];
m14_63 [cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="XmlNodeConverterTest.cs", label="int count = _charsUsed - _charPos", span="183-183"];
m14_277 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="initialPosition == lastWritePosition", span="575-575"];
m14_183 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GroupElementsOfTheSameName()", file="XmlNodeConverterTest.cs", label="string xml = ''<root><p>Text1<span>Span1</span> <span>Span2</span> Text2</p></root>''", span="417-417"];
m14_403 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="string expected = @''{\r\n  ''''root'''': {\r\n    ''''person'''': {\r\n      ''''@id'''': ''''1'''',\r\n      ''''name'''': ''''Alan'''',\r\n      ''''url'''': ''''http://www.google.com'''',\r\n      ''''role'''': [\r\n        ''''Admin''''\r\n      ]\r\n    }\r\n  }\r\n}''", span="1106-1117"];
m14_404 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(expected, arrayJsonText)", span="1118-1118"];
m14_405 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="arrayXml = @''<root xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n			  <person id=''''1''''>\r\n				  <name>Alan</name>\r\n				  <url>http://www.google.com</url>\r\n				  <role json:Array=''''true''''>Admin1</role>\r\n				  <role json:Array=''''true''''>Admin2</role>\r\n			  </person>\r\n			</root>''", span="1120-1127"];
m14_425 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXmlDocument()", file="XmlNodeConverterTest.cs", label="string json = @''{''''count'''': 773840,''''photos'''': null}''", span="1202-1202"];
m14_406 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="arrayDoc = new XmlDocument()", span="1129-1129"];
m14_411 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="arrayXml = @''<root xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n			  <person id=''''1''''>\r\n				  <name>Alan</name>\r\n				  <url>http://www.google.com</url>\r\n				  <role json:Array=''''false''''>Admin1</role>\r\n			  </person>\r\n			</root>''", span="1148-1154"];
m14_415 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="expected = @''{\r\n  ''''root'''': {\r\n    ''''person'''': {\r\n      ''''@id'''': ''''1'''',\r\n      ''''name'''': ''''Alan'''',\r\n      ''''url'''': ''''http://www.google.com'''',\r\n      ''''role'''': ''''Admin1''''\r\n    }\r\n  }\r\n}''", span="1160-1169"];
m14_418 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="arrayDoc = new XmlDocument()", span="1180-1180"];
m14_420 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="arrayJsonText = SerializeXmlNode(arrayDoc)", span="1183-1183"];
m14_422 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(expected, arrayJsonText)", span="1196-1196"];
m14_407 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="arrayDoc.LoadXml(arrayXml)", span="1130-1130"];
m14_408 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="arrayJsonText = SerializeXmlNode(arrayDoc)", span="1132-1132"];
m14_410 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(expected, arrayJsonText)", span="1146-1146"];
m14_409 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="expected = @''{\r\n  ''''root'''': {\r\n    ''''person'''': {\r\n      ''''@id'''': ''''1'''',\r\n      ''''name'''': ''''Alan'''',\r\n      ''''url'''': ''''http://www.google.com'''',\r\n      ''''role'''': [\r\n        ''''Admin1'''',\r\n        ''''Admin2''''\r\n      ]\r\n    }\r\n  }\r\n}''", span="1133-1145"];
m14_412 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="arrayDoc = new XmlDocument()", span="1156-1156"];
m14_413 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="arrayDoc.LoadXml(arrayXml)", span="1157-1157"];
m14_414 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="arrayJsonText = SerializeXmlNode(arrayDoc)", span="1159-1159"];
m14_416 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(expected, arrayJsonText)", span="1170-1170"];
m14_417 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="arrayXml = @''<root>\r\n			  <person id=''''1''''>\r\n				  <name>Alan</name>\r\n				  <url>http://www.google.com</url>\r\n				  <role json:Array=''''true'''' xmlns:json=''''http://james.newtonking.com/projects/json''''>Admin</role>\r\n			  </person>\r\n			</root>''", span="1172-1178"];
m14_419 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="arrayDoc.LoadXml(arrayXml)", span="1181-1181"];
m14_421 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="expected = @''{\r\n  ''''root'''': {\r\n    ''''person'''': {\r\n      ''''@id'''': ''''1'''',\r\n      ''''name'''': ''''Alan'''',\r\n      ''''url'''': ''''http://www.google.com'''',\r\n      ''''role'''': [\r\n        ''''Admin''''\r\n      ]\r\n    }\r\n  }\r\n}''", span="1184-1195"];
m14_423 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", span="1092-1092"];
m14_424 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXmlDocument()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXmlDocument()", span="1200-1200"];
m14_426 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXmlDocument()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => { JsonConvert.DeserializeXmlNode(json); },\r\n                ''JSON root object has multiple properties. The root object must have a single property in order to create a valid XML document. Consider specifying a DeserializeRootElementName. Path 'photos', line 1, position 26.'')", span="1204-1206"];
m14_427 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXmlDocument()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXmlDocument()", span="1200-1200"];
m14_428 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="1205-1205"];
m14_466 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="XmlNodeConverterTest.cs", label="return;", span="876-876"];
m14_468 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="XmlNodeConverterTest.cs", label="ValidIdentifierChar(currentChar)", span="880-880"];
m14_467 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="XmlNodeConverterTest.cs", label="char currentChar = _chars[_charPos]", span="878-878"];
m14_469 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="XmlNodeConverterTest.cs", label="_charPos++", span="882-882"];
m14_471 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="XmlNodeConverterTest.cs", label="_stringReference = new StringReference(_chars, initialPosition, _charPos - initialPosition)", span="887-887"];
m14_470 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="XmlNodeConverterTest.cs", label="char.IsWhiteSpace(currentChar) || currentChar == ':'", span="885-885"];
m14_472 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="XmlNodeConverterTest.cs", label="return;", span="888-888"];
m14_657 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="XmlNodeConverterTest.cs", label="numberValue = (decimal)firstChar - 48", span="1215-1215"];
m14_800 [cluster="Newtonsoft.Json.JsonTextReader.ParseTrue()", file="XmlNodeConverterTest.cs", label="MatchValueWithTrailingSeparator(JsonConvert.True)", span="1487-1487"];
m14_803 [cluster="Newtonsoft.Json.JsonTextReader.ParseTrue()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseTrue()", span="1482-1482"];
m14_802 [cluster="Newtonsoft.Json.JsonTextReader.ParseTrue()", file="XmlNodeConverterTest.cs", label="throw JsonReaderException.Create(this, ''Error parsing boolean value.'');", span="1493-1493"];
m14_804 [cluster="Newtonsoft.Json.JsonTextReader.ParseNull()", file="XmlNodeConverterTest.cs", label="MatchValueWithTrailingSeparator(JsonConvert.Null)", span="1499-1499"];
m14_801 [cluster="Newtonsoft.Json.JsonTextReader.ParseTrue()", file="XmlNodeConverterTest.cs", label="SetToken(JsonToken.Boolean, true)", span="1489-1489"];
m14_805 [cluster="Newtonsoft.Json.JsonTextReader.ParseNull()", file="XmlNodeConverterTest.cs", label="SetToken(JsonToken.Null)", span="1501-1501"];
m14_151 [cluster="Unk.Nodes", file="XmlNodeConverterTest.cs", label="Entry Unk.Nodes", span=""];
m14_583 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="XmlNodeConverterTest.cs", label="StringUtils.LineFeed", span="1050-1050"];
m14_380 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="XmlNodeConverterTest.cs", label="_charPos++", span="723-723"];
m14_381 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", color=green, community=0, file="XmlNodeConverterTest.cs", label="0: SetToken(JsonToken.EndConstructor)", span="724-724"];
m14_382 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="XmlNodeConverterTest.cs", label="return true;", span="725-725"];
m14_227 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="writeChar = '\\'", span="478-478"];
m14_387 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="XmlNodeConverterTest.cs", label="_charPos++", span="730-730"];
m14_429 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseProperty()", span="813-813"];
m14_560 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseNumber()", span="1149-1149"];
m14_760 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="XmlNodeConverterTest.cs", label="!EnsureChars(value.Length - 1, true)", span="1418-1418"];
m14_226 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="charPos++", span="477-477"];
m14_386 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="XmlNodeConverterTest.cs", label="','", span="729-729"];
m14_435 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="XmlNodeConverterTest.cs", label="ShiftBufferIfNeeded()", span="822-822"];
m14_759 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.MatchValue(string)", span="1416-1416"];
m14_228 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="''''", span="480-480"];
m14_388 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="XmlNodeConverterTest.cs", label="SetStateBasedOnCurrent()", span="733-733"];
m14_430 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="XmlNodeConverterTest.cs", label="char firstChar = _chars[_charPos]", span="815-815"];
m14_561 [cluster="Newtonsoft.Json.JsonTextReader.ParseUndefined()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseUndefined()", span="1509-1509"];
m14_761 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="XmlNodeConverterTest.cs", label="return false;", span="1419-1419"];
m14_584 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="XmlNodeConverterTest.cs", label="ProcessLineFeed()", span="1051-1051"];
m14_436 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="XmlNodeConverterTest.cs", label="ReadStringIntoBuffer(quoteChar)", span="823-823"];
m14_437 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="XmlNodeConverterTest.cs", label="ValidIdentifierChar(firstChar)", span="825-825"];
m14_585 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="XmlNodeConverterTest.cs", label="currentChar == ' ' || char.IsWhiteSpace(currentChar)", span="1054-1054"];
m14_570 [cluster="Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", span="1016-1016"];
m14_572 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="XmlNodeConverterTest.cs", label="bool ateWhitespace = false", span="1029-1029"];
m14_575 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="XmlNodeConverterTest.cs", label=currentChar, span="1034-1034"];
m14_571 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="XmlNodeConverterTest.cs", label="bool finished = false", span="1028-1028"];
m14_573 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="XmlNodeConverterTest.cs", label="!finished", span="1030-1030"];
m14_576 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="XmlNodeConverterTest.cs", label="'\0'", span="1036-1036"];
m14_574 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="XmlNodeConverterTest.cs", label="char currentChar = _chars[_charPos]", span="1032-1032"];
m14_577 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="XmlNodeConverterTest.cs", label="_charsUsed == _charPos", span="1037-1037"];
m14_701 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="XmlNodeConverterTest.cs", label="ClearRecentString()", span="1322-1322"];
m14_703 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseNumber()", span="1149-1149"];
m14_702 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="XmlNodeConverterTest.cs", label="SetToken(numberType, numberValue, false)", span="1325-1325"];
m14_704 [cluster="char.IsDigit(char)", file="XmlNodeConverterTest.cs", label="Entry char.IsDigit(char)", span="0-0"];
m14_321 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="XmlNodeConverterTest.cs", label="_charPos = charPos", span="639-639"];
m14_296 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="XmlNodeConverterTest.cs", label="string expected = @''{\r\n  ''''?xml'''': {\r\n    ''''@version'''': ''''1.0'''',\r\n    ''''@encoding'''': ''''utf-8''''\r\n  },\r\n  ''''!DOCTYPE'''': {\r\n    ''''@name'''': ''''STOCKQUOTE'''',\r\n    ''''@public'''': ''''-//W3C//DTD StockQuote 1.5//EN'''',\r\n    ''''@system'''': ''''http://www.idontexistnopenopewhatnope123.org/dtd/stockquote_1.5.dtd''''\r\n  },\r\n  ''''STOCKQUOTE'''': {\r\n    ''''@ROWCOUNT'''': ''''2'''',\r\n    ''''RESULT'''': {\r\n      ''''ROW'''': [\r\n        {\r\n          ''''ASK'''': ''''0'''',\r\n          ''''BID'''': ''''0'''',\r\n          ''''CHANGE'''': ''''-16.310'''',\r\n          ''''COMPANYNAME'''': ''''Dow Jones'''',\r\n          ''''DATETIME'''': ''''2014-04-17 15:50:37'''',\r\n          ''''DIVIDEND'''': ''''0'''',\r\n          ''''EPS'''': ''''0'''',\r\n          ''''EXCHANGE'''': '''''''',\r\n          ''''HIGH'''': ''''16460.490'''',\r\n          ''''LASTDATETIME'''': ''''2014-04-17 15:50:37'''',\r\n          ''''LASTPRICE'''': ''''16408.540'''',\r\n          ''''LOW'''': ''''16368.140'''',\r\n          ''''OPEN'''': ''''16424.140'''',\r\n          ''''PCHANGE'''': ''''-0.099'''',\r\n          ''''PE'''': ''''0'''',\r\n          ''''PREVIOUSCLOSE'''': ''''16424.850'''',\r\n          ''''SHARES'''': ''''0'''',\r\n          ''''TICKER'''': ''''DJII'''',\r\n          ''''TRADES'''': ''''0'''',\r\n          ''''VOLUME'''': ''''136188700'''',\r\n          ''''YEARHIGH'''': ''''11309.000'''',\r\n          ''''YEARLOW'''': ''''9302.280'''',\r\n          ''''YIELD'''': ''''0''''\r\n        },\r\n        {\r\n          ''''ASK'''': ''''0'''',\r\n          ''''BID'''': ''''0'''',\r\n          ''''CHANGE'''': ''''9.290'''',\r\n          ''''COMPANYNAME'''': ''''NASDAQ'''',\r\n          ''''DATETIME'''': ''''2014-04-17 15:40:01'''',\r\n          ''''DIVIDEND'''': ''''0'''',\r\n          ''''EPS'''': ''''0'''',\r\n          ''''EXCHANGE'''': '''''''',\r\n          ''''HIGH'''': ''''4110.460'''',\r\n          ''''LASTDATETIME'''': ''''2014-04-17 15:40:01'''',\r\n          ''''LASTPRICE'''': ''''4095.520'''',\r\n          ''''LOW'''': ''''4064.700'''',\r\n          ''''OPEN'''': ''''4080.300'''',\r\n          ''''PCHANGE'''': ''''0.227'''',\r\n          ''''PE'''': ''''0'''',\r\n          ''''PREVIOUSCLOSE'''': ''''4086.230'''',\r\n          ''''SHARES'''': ''''0'''',\r\n          ''''TICKER'''': ''''COMP'''',\r\n          ''''TRADES'''': ''''0'''',\r\n          ''''VOLUME'''': ''''1784210100'''',\r\n          ''''YEARHIGH'''': ''''4371.710'''',\r\n          ''''YEARLOW'''': ''''3154.960'''',\r\n          ''''YIELD'''': ''''0''''\r\n        }\r\n      ]\r\n    },\r\n    ''''STATUS'''': ''''Couldn't find ticker: SPIC?'''',\r\n    ''''STATUSCODE'''': ''''2''''\r\n  }\r\n}''", span="702-771"];
m14_842 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementExplicitAttributeNamespace()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''<MyElement xmlns=''''http://example.com'''' />'', original.ToString())", span="2902-2902"];
m14_62 [cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="XmlNodeConverterTest.cs", label="length - _charPos <= length * 0.1", span="181-181"];
m14_455 [cluster="Newtonsoft.Json.JsonTextReader.ValidIdentifierChar(char)", file="XmlNodeConverterTest.cs", label="return (char.IsLetterOrDigit(value) || value == '_' || value == '$');", span="854-854"];
m14_813 [cluster="Newtonsoft.Json.JsonTextReader.ParseFalse()", file="XmlNodeConverterTest.cs", label="SetToken(JsonToken.Boolean, false)", span="1525-1525"];
m14_501 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="XmlNodeConverterTest.cs", label="throw JsonReaderException.Create(this, ''Unexpected end.'');", span="939-939"];
m14_503 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="XmlNodeConverterTest.cs", label="'N'", span="942-942"];
m14_502 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="XmlNodeConverterTest.cs", label="return true;", span="941-941"];
m14_504 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="XmlNodeConverterTest.cs", label="ParseNumberNaN()", span="943-943"];
m14_505 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="XmlNodeConverterTest.cs", label="return true;", span="944-944"];
m14_54 [cluster="Newtonsoft.Json.Utilities.StringReference.ToString()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Utilities.StringReference.ToString()", span="55-55"];
m14_53 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", span="838-838"];
m14_55 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(string, Newtonsoft.Json.DateParseHandling, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out object)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(string, Newtonsoft.Json.DateParseHandling, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out object)", span="286-286"];
m14_59 [cluster="Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", span="169-169"];
m14_58 [cluster="Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", file="XmlNodeConverterTest.cs", label="Buffer.BlockCopy(src, srcOffset * charByteCount, dst, dstOffset * charByteCount, count * charByteCount)", span="173-173"];
m14_56 [cluster="Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", span="169-169"];
m14_57 [cluster="Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", file="XmlNodeConverterTest.cs", label="int charByteCount = 2", span="171-171"];
m14_635 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="XmlNodeConverterTest.cs", label="JsonToken numberType", span="1164-1164"];
m14_641 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="XmlNodeConverterTest.cs", label=nonBase10, span="1179-1179"];
m14_638 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="XmlNodeConverterTest.cs", label="_readType == ReadType.ReadAsInt32", span="1172-1172"];
m14_640 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="XmlNodeConverterTest.cs", label="numberValue = firstChar - 48", span="1177-1177"];
m14_637 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="XmlNodeConverterTest.cs", label="bool nonBase10 = (firstChar == '0' && _stringReference.Length > 1\r\n                              && _stringReference.Chars[_stringReference.StartIndex + 1] != '.'\r\n                              && _stringReference.Chars[_stringReference.StartIndex + 1] != 'e'\r\n                              && _stringReference.Chars[_stringReference.StartIndex + 1] != 'E')", span="1167-1170"];
m14_639 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="XmlNodeConverterTest.cs", label=singleDigit, span="1174-1174"];
m14_636 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="XmlNodeConverterTest.cs", label="bool singleDigit = (char.IsDigit(firstChar) && _stringReference.Length == 1)", span="1166-1166"];
m14_642 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="XmlNodeConverterTest.cs", label="string number = _stringReference.ToString()", span="1181-1181"];
m14_99 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="XmlNodeConverterTest.cs", label="_chars[_charsUsed] = '\0'", span="255-255"];
m14_762 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="XmlNodeConverterTest.cs", label="int i = 0", span="1421-1421"];
m14_766 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="XmlNodeConverterTest.cs", label="i++", span="1421-1421"];
m14_764 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="XmlNodeConverterTest.cs", label="_chars[_charPos + i] != value[i]", span="1423-1423"];
m14_765 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="XmlNodeConverterTest.cs", label="return false;", span="1425-1425"];
m14_767 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="XmlNodeConverterTest.cs", label="_charPos += value.Length", span="1429-1429"];
m14_763 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="XmlNodeConverterTest.cs", label="i < value.Length", span="1421-1421"];
m14_768 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="XmlNodeConverterTest.cs", label="return true;", span="1431-1431"];
m14_454 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", span="1241-1241"];
m14_288 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs", label="fragement.InnerXml = ''<Item>widget</Item><Item>widget</Item>''", span="687-687"];
m14_302 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="XmlNodeConverterTest.cs", label="XmlDocument doc11 = JsonConvert.DeserializeXmlNode(json1)", span="781-781"];
m14_303 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(xml, ToStringWithDeclaration(doc11))", span="783-783"];
m14_309 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", span="698-698"];
m14_304 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="XmlNodeConverterTest.cs", label="XDocument doc2 = XDocument.Parse(xml)", span="786-786"];
m14_308 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(xml, ToStringWithDeclaration(doc22))", span="794-794"];
m14_305 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="XmlNodeConverterTest.cs", label="string json2 = JsonConvert.SerializeXNode(doc2, Formatting.Indented)", span="788-788"];
m14_306 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(expected, json2)", span="790-790"];
m14_307 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="XmlNodeConverterTest.cs", label="XDocument doc22 = JsonConvert.DeserializeXNode(json2)", span="792-792"];
m14_310 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XmlDocument, bool)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XmlDocument, bool)", span="823-823"];
m14_724 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="XmlNodeConverterTest.cs", label="_charPos++", span="1345-1345"];
m14_285 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="_charPos = charPos", span="591-591"];
m14_289 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsLowSurrogate(char)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.IsLowSurrogate(char)", span="191-191"];
m14_290 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsHighSurrogate(char)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.IsHighSurrogate(char)", span="182-182"];
m14_291 [cluster="Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(Newtonsoft.Json.Utilities.StringBuffer, char, int, int)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(Newtonsoft.Json.Utilities.StringBuffer, char, int, int)", span="599-599"];
m14_287 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", span="416-416"];
m14_286 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="return;", span="592-592"];
m14_292 [cluster="Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", span="1016-1016"];
m14_163 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="XmlNodeConverterTest.cs", label="return ParseValue();", span="383-383"];
m14_530 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="XmlNodeConverterTest.cs", label="SetToken(JsonToken.EndArray)", span="970-970"];
m14_532 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="XmlNodeConverterTest.cs", label="','", span="972-972"];
m14_535 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="XmlNodeConverterTest.cs", label="')'", span="977-977"];
m14_531 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="XmlNodeConverterTest.cs", label="return true;", span="971-971"];
m14_533 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="XmlNodeConverterTest.cs", label="SetToken(JsonToken.Undefined)", span="975-975"];
m14_536 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="XmlNodeConverterTest.cs", label="_charPos++", span="978-978"];
m14_534 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="XmlNodeConverterTest.cs", label="return true;", span="976-976"];
m14_537 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="XmlNodeConverterTest.cs", label="SetToken(JsonToken.EndConstructor)", span="979-979"];
m14_685 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="XmlNodeConverterTest.cs", label="string number = _stringReference.ToString()", span="1285-1285"];
m14_692 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="XmlNodeConverterTest.cs", label="decimal d", span="1302-1302"];
m14_689 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="XmlNodeConverterTest.cs", label="numberType = JsonToken.Integer", span="1291-1291"];
m14_691 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="XmlNodeConverterTest.cs", label="_floatParseHandling == FloatParseHandling.Decimal", span="1300-1300"];
m14_693 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="XmlNodeConverterTest.cs", label="decimal.TryParse(number, NumberStyles.Number | NumberStyles.AllowExponent, CultureInfo.InvariantCulture, out d)", span="1303-1303"];
m14_695 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="XmlNodeConverterTest.cs", label="throw JsonReaderException.Create(this, ''Input string '{0}' is not a valid decimal.''.FormatWith(CultureInfo.InvariantCulture, number));", span="1306-1306"];
m14_699 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="XmlNodeConverterTest.cs", label="throw JsonReaderException.Create(this, ''Input string '{0}' is not a valid number.''.FormatWith(CultureInfo.InvariantCulture, number));", span="1314-1314"];
m14_687 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="XmlNodeConverterTest.cs", label="throw JsonReaderException.Create(this, ''JSON integer {0} is too large to parse.''.FormatWith(CultureInfo.InvariantCulture, _stringReference.ToString()));", span="1288-1288"];
m14_688 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", color=red, community=0, file="XmlNodeConverterTest.cs", label="0: numberValue = BigInteger.Parse(number, CultureInfo.InvariantCulture)", span="1290-1290"];
m14_690 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="XmlNodeConverterTest.cs", label="string number = _stringReference.ToString()", span="1298-1298"];
m14_694 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="XmlNodeConverterTest.cs", label="numberValue = d", span="1304-1304"];
m14_697 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="XmlNodeConverterTest.cs", label="double.TryParse(number, NumberStyles.Float | NumberStyles.AllowThousands, CultureInfo.InvariantCulture, out d)", span="1311-1311"];
m14_696 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="XmlNodeConverterTest.cs", label="double d", span="1310-1310"];
m14_698 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="XmlNodeConverterTest.cs", label="numberValue = d", span="1312-1312"];
m14_686 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="XmlNodeConverterTest.cs", label="number.Length > MaximumJavascriptIntegerCharacterLength", span="1287-1287"];
m14_700 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="XmlNodeConverterTest.cs", label="numberType = JsonToken.Float", span="1317-1317"];
m14_353 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="XmlNodeConverterTest.cs", label="_charPos = charPos - 1", span="678-678"];
m14_186 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GroupElementsOfTheSameName()", file="XmlNodeConverterTest.cs", label="XDocument doc = JsonConvert.DeserializeXNode(json)", span="423-423"];
m14_716 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", span="2656-2656"];
m14_717 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", file="XmlNodeConverterTest.cs", label="var xml = new NullableXml { Name = ''test'', notNull = XElement.Parse(''<root>test</root>'') }", span="2658-2658"];
m14_718 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", file="XmlNodeConverterTest.cs", label="var json = JsonConvert.SerializeObject(xml)", span="2659-2659"];
m14_719 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", file="XmlNodeConverterTest.cs", label="var w2 = JsonConvert.DeserializeObject<NullableXml>(json)", span="2661-2661"];
m14_732 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElementWithNamespaceInChildrenRootDontHaveNameSpace()", span="2670-2670"];
m14_739 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''<root><b xmlns=''''http://www.example.com/ns''''>Asd</b><c>AAA</c><test>adad</test></root>'', xmlBack.OuterXml)", span="2704-2704"];
m14_751 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlIncompatibleCharsInPropertyName()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''<_x0025_name>value</_x0025_name>'', node.OuterXml)", span="2730-2730"];
m14_720 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(xml.Name, w2.Name)", span="2662-2662"];
m14_721 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(xml.isNull, w2.isNull)", span="2663-2663"];
m14_722 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(xml.notNull.ToString(), w2.notNull.ToString())", span="2664-2664"];
m14_723 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", span="2656-2656"];
m14_725 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElementWithNamespaceInChildrenRootDontHaveNameSpace()", span="2670-2670"];
m14_726 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs", label="var xmlString = @''<root>\r\n                              <b xmlns='http://www.example.com/ns'>Asd</b>\r\n                              <c>AAA</c>\r\n                              <test>adad</test>\r\n                              </root>''", span="2672-2676"];
m14_734 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs", label="var xmlString = @''<root>\r\n                              <b xmlns='http://www.example.com/ns'>Asd</b>\r\n                              <c>AAA</c>\r\n                              <test>adad</test>\r\n                              </root>''", span="2692-2696"];
m14_752 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlIncompatibleCharsInPropertyName()", file="XmlNodeConverterTest.cs", label="string json2 = JsonConvert.SerializeXmlNode(node)", span="2732-2732"];
m14_727 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElementWithNamespaceInChildrenRootDontHaveNameSpace()", color=red, community=0, file="XmlNodeConverterTest.cs", label="0: var xml = XElement.Parse(xmlString)", span="2678-2678"];
m14_728 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs", label="var json1 = JsonConvert.SerializeXNode(xml)", span="2680-2680"];
m14_756 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RootPropertyError()", file="XmlNodeConverterTest.cs", label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''AOSLocaleName'''': ''''en-US'''',\r\n  ''''AXLanguage'''': ''''EN-AU'''',\r\n  ''''Company'''': ''''AURE'''',\r\n  ''''CompanyTimeZone'''': 8,\r\n  ''''CurrencyInfo'''': {\r\n    ''''$id'''': ''''2'''',\r\n    ''''CurrencyCode'''': ''''AUD'''',\r\n    ''''Description'''': ''''Australian Dollar'''',\r\n    ''''ExchangeRate'''': 100.0,\r\n    ''''ISOCurrencyCode'''': ''''AUD'''',\r\n    ''''Prefix'''': '''''''',\r\n    ''''Suffix'''': ''''''''\r\n  },\r\n  ''''IsSysAdmin'''': true,\r\n  ''''UserId'''': ''''lamar.miller'''',\r\n  ''''UserPreferredCalendar'''': 0,\r\n  ''''UserPreferredTimeZone'''': 8\r\n}''", span="2740-2759"];
m14_729 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs", label="var xmlBack = JsonConvert.DeserializeObject<XElement>(json1)", span="2681-2681"];
m14_737 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs", label="var json1 = JsonConvert.SerializeXmlNode(xml)", span="2701-2701"];
m14_750 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlIncompatibleCharsInPropertyName()", file="XmlNodeConverterTest.cs", label="XmlDocument node = JsonConvert.DeserializeXmlNode(json)", span="2728-2728"];
m14_755 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RootPropertyError()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RootPropertyError()", span="2738-2738"];
m14_730 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs", label="var equals = XElement.DeepEquals(xmlBack, xml)", span="2683-2683"];
m14_731 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(equals)", span="2684-2684"];
m14_736 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs", label="xml.LoadXml(xmlString)", span="2699-2699"];
m14_733 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlElementWithNamespaceInChildrenRootDontHaveNameSpace()", span="2690-2690"];
m14_735 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs", label="XmlDocument xml = new XmlDocument()", span="2698-2698"];
m14_738 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs", label="var xmlBack = JsonConvert.DeserializeObject<XmlDocument>(json1)", span="2702-2702"];
m14_740 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlElementWithNamespaceInChildrenRootDontHaveNameSpace()", color=red, community=0, file="XmlNodeConverterTest.cs", label="0: Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlElementWithNamespaceInChildrenRootDontHaveNameSpace()", span="2690-2690"];
m14_749 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlIncompatibleCharsInPropertyName()", file="XmlNodeConverterTest.cs", label="var json = ''{\''%name\'':\''value\''}''", span="2726-2726"];
m14_748 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlIncompatibleCharsInPropertyName()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlIncompatibleCharsInPropertyName()", span="2724-2724"];
m14_754 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlIncompatibleCharsInPropertyName()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlIncompatibleCharsInPropertyName()", span="2724-2724"];
m14_753 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlIncompatibleCharsInPropertyName()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(json, json2)", span="2734-2734"];
m14_757 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RootPropertyError()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeXmlNode(json),\r\n                ''JSON root object has property '$id' that will be converted to an attribute. A root object cannot have any attribute properties. Consider specifying a DeserializeRootElementName. Path '$id', line 2, position 12.'')", span="2761-2763"];
m14_758 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RootPropertyError()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RootPropertyError()", span="2738-2738"];
m14_893 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="1042-1042"];
m14_294 [cluster="Newtonsoft.Json.Utilities.StringReference.StringReference(char[], int, int)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Utilities.StringReference.StringReference(char[], int, int)", span="48-48"];
m14_300 [cluster="Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(Newtonsoft.Json.Utilities.StringBuffer, char, int, int)", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(Newtonsoft.Json.Utilities.StringBuffer, char, int, int)", span="599-599"];
m14_301 [cluster="Newtonsoft.Json.Utilities.StringBuffer.Append(char)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Utilities.StringBuffer.Append(char)", span="55-55"];
m14_299 [cluster="Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(Newtonsoft.Json.Utilities.StringBuffer, char, int, int)", file="XmlNodeConverterTest.cs", label="buffer.Append(writeChar)", span="606-606"];
m14_298 [cluster="Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(Newtonsoft.Json.Utilities.StringBuffer, char, int, int)", file="XmlNodeConverterTest.cs", label="buffer.Append(_chars, lastWritePosition, writeToPosition - lastWritePosition)", span="603-603"];
m14_295 [cluster="Newtonsoft.Json.Utilities.StringBuffer.Append(char[], int, int)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Utilities.StringBuffer.Append(char[], int, int)", span="65-65"];
m14_297 [cluster="Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(Newtonsoft.Json.Utilities.StringBuffer, char, int, int)", file="XmlNodeConverterTest.cs", label="writeToPosition > lastWritePosition", span="601-601"];
m14_527 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="XmlNodeConverterTest.cs", label="return true;", span="967-967"];
m14_179 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="XmlNodeConverterTest.cs", label="return false;", span="409-409"];
m14_808 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Local()", file="XmlNodeConverterTest.cs", label="string json = @''{''''CreatedDate'''': ''''2014-01-23T00:00:00+01:00''''}''", span="2847-2847"];
m14_809 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Local()", file="XmlNodeConverterTest.cs", label="var dxml = JsonConvert.DeserializeXNode(json, ''root'')", span="2848-2848"];
m14_810 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Local()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(dt.ToString(''yyyy-MM-ddTHH:mm:sszzzzzzz'', CultureInfo.InvariantCulture), dxml.Root.Element(''CreatedDate'').Value)", span="2849-2849"];
m14_811 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Local()", file="XmlNodeConverterTest.cs", label="Console.WriteLine(''DateTimeToXml_Local: '' + dxml.Root.Element(''CreatedDate'').Value)", span="2851-2851"];
m14_857 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentExplicitAttributeNamespace()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentExplicitAttributeNamespace()", span="2925-2925"];
m14_859 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentExplicitAttributeNamespace()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''<MyElement xmlns=''''http://example.com'''' />'', original.ToString())", span="2928-2928"];
m14_861 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentExplicitAttributeNamespace()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''{''''MyElement'''':{''''@xmlns'''':''''http://example.com''''}}'', json)", span="2931-2931"];
m14_863 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentExplicitAttributeNamespace()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''<MyElement xmlns=''''http://example.com'''' />'', deserialized.ToString())", span="2934-2934"];
m14_858 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentExplicitAttributeNamespace()", file="XmlNodeConverterTest.cs", label="var original = XDocument.Parse(''<MyElement xmlns=\''http://example.com\'' />'')", span="2927-2927"];
m14_860 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentExplicitAttributeNamespace()", file="XmlNodeConverterTest.cs", label="var json = JsonConvert.SerializeObject(original)", span="2930-2930"];
m14_862 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentExplicitAttributeNamespace()", file="XmlNodeConverterTest.cs", label="var deserialized = JsonConvert.DeserializeObject<XDocument>(json)", span="2933-2933"];
m14_864 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentExplicitAttributeNamespace()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentExplicitAttributeNamespace()", span="2925-2925"];
m14_319 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="XmlNodeConverterTest.cs", label="_charsUsed == charPos - 1", span="636-636"];
m14_27 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="XmlNodeConverterTest.cs", label="data = new byte[0]", span="124-124"];
m14_28 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="XmlNodeConverterTest.cs", label="data = Convert.FromBase64CharArray(_stringReference.Chars, _stringReference.StartIndex, _stringReference.Length)", span="128-128"];
m14_29 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="XmlNodeConverterTest.cs", label="SetToken(JsonToken.Bytes, data, false)", span="131-131"];
m14_32 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="XmlNodeConverterTest.cs", label="SetToken(JsonToken.String, text, false)", span="137-137"];
m14_33 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="XmlNodeConverterTest.cs", label="_quoteChar = quote", span="138-138"];
m14_36 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="XmlNodeConverterTest.cs", label="DateParseHandling dateParseHandling", span="146-146"];
m14_34 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="XmlNodeConverterTest.cs", label="string text = _stringReference.ToString()", span="142-142"];
m14_42 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="XmlNodeConverterTest.cs", label="object dt", span="156-156"];
m14_39 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="XmlNodeConverterTest.cs", label="_readType == ReadType.ReadAsDateTimeOffset", span="150-150"];
m14_43 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="XmlNodeConverterTest.cs", label="DateTimeUtils.TryParseDateTime(text, dateParseHandling, DateTimeZoneHandling, DateFormatString, Culture, out dt)", span="157-157"];
m14_30 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="XmlNodeConverterTest.cs", label="_readType == ReadType.ReadAsString", span="133-133"];
m14_31 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="XmlNodeConverterTest.cs", label="string text = _stringReference.ToString()", span="135-135"];
m14_38 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="XmlNodeConverterTest.cs", label="dateParseHandling = DateParseHandling.DateTime", span="148-148"];
m14_35 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="XmlNodeConverterTest.cs", label="_dateParseHandling != DateParseHandling.None", span="144-144"];
m14_37 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="XmlNodeConverterTest.cs", label="_readType == ReadType.ReadAsDateTime", span="147-147"];
m14_40 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="XmlNodeConverterTest.cs", label="dateParseHandling = DateParseHandling.DateTimeOffset", span="151-151"];
m14_41 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="XmlNodeConverterTest.cs", label="dateParseHandling = _dateParseHandling", span="154-154"];
m14_44 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="XmlNodeConverterTest.cs", label="SetToken(JsonToken.Date, dt, false)", span="159-159"];
m14_19 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseString(char)", span="111-111"];
m14_49 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="530-530"];
m14_65 [cluster="Unk.WriteNode", file="XmlNodeConverterTest.cs", label="Entry Unk.WriteNode", span=""];
m14_68 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDollarProperty()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDollarProperty()", span="154-154"];
m14_66 [cluster="Unk.Flush", file="XmlNodeConverterTest.cs", label="Entry Unk.Flush", span=""];
m14_67 [cluster="System.IO.StringWriter.ToString()", file="XmlNodeConverterTest.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m14_69 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDollarProperty()", file="XmlNodeConverterTest.cs", label="string json1 = @''{''''$'''':''''test''''}''", span="156-156"];
m14_70 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDollarProperty()", file="XmlNodeConverterTest.cs", label="var doc = JsonConvert.DeserializeXNode(json1)", span="158-158"];
m14_180 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="XmlNodeConverterTest.cs", label="throw JsonReaderException.Create(this, ''Unexpected state: {0}.''.FormatWith(CultureInfo.InvariantCulture, CurrentState));", span="411-411"];
m14_18 [cluster="Newtonsoft.Json.JsonTextReader.OnNewLine(int)", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.JsonTextReader.OnNewLine(int)", span="105-105"];
m14_337 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="XmlNodeConverterTest.cs", label="'E'", span="660-660"];
m14_339 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="XmlNodeConverterTest.cs", label="'F'", span="662-662"];
m14_341 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="XmlNodeConverterTest.cs", label="'X'", span="664-664"];
m14_342 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="XmlNodeConverterTest.cs", label="'.'", span="665-665"];
m14_338 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="XmlNodeConverterTest.cs", label="'f'", span="661-661"];
m14_340 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="XmlNodeConverterTest.cs", label="'x'", span="663-663"];
m14_343 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="XmlNodeConverterTest.cs", label="'0'", span="666-666"];
m14_7 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs", label="XmlAttribute attribute = (XmlAttribute)node", span="79-79"];
m14_780 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="XmlNodeConverterTest.cs", label="']'", span="1453-1453"];
m14_784 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="XmlNodeConverterTest.cs", label="!EnsureChars(1, false)", span="1458-1458"];
m14_783 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="XmlNodeConverterTest.cs", label="'/'", span="1456-1456"];
m14_782 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="XmlNodeConverterTest.cs", label="return true;", span="1455-1455"];
m14_781 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="XmlNodeConverterTest.cs", label="','", span="1454-1454"];
m14_785 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="XmlNodeConverterTest.cs", label="return false;", span="1459-1459"];
m14_215 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="writeChar = '\t'", span="462-462"];
m14_216 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="'n'", span="464-464"];
m14_217 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="charPos++", span="465-465"];
m14_219 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="'f'", span="468-468"];
m14_218 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="writeChar = '\n'", span="466-466"];
m14_220 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="charPos++", span="469-469"];
m14_121 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", span="267-267"];
m14_648 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="XmlNodeConverterTest.cs", label="ParseResult parseResult = ConvertUtils.Int32TryParse(_stringReference.Chars, _stringReference.StartIndex, _stringReference.Length, out value)", span="1199-1199"];
m14_653 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="XmlNodeConverterTest.cs", label="throw JsonReaderException.Create(this, ''Input string '{0}' is not a valid integer.''.FormatWith(CultureInfo.InvariantCulture, _stringReference.ToString()));", span="1205-1205"];
m14_652 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="XmlNodeConverterTest.cs", label="throw JsonReaderException.Create(this, ''JSON integer {0} is too large or small for an Int32.''.FormatWith(CultureInfo.InvariantCulture, _stringReference.ToString()));", span="1203-1203"];
m14_650 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="XmlNodeConverterTest.cs", label="numberValue = value", span="1201-1201"];
m14_651 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="XmlNodeConverterTest.cs", label="parseResult == ParseResult.Overflow", span="1202-1202"];
m14_649 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="XmlNodeConverterTest.cs", label="parseResult == ParseResult.Success", span="1200-1200"];
m14_654 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="XmlNodeConverterTest.cs", label="numberType = JsonToken.Integer", span="1208-1208"];
m14_555 [cluster="Newtonsoft.Json.JsonTextReader.ParseNull()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseNull()", span="1497-1497"];
m14_556 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseConstructor()", span="1070-1070"];
m14_558 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity()", span="1548-1548"];
m14_506 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="XmlNodeConverterTest.cs", label="'I'", span="945-945"];
m14_510 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="XmlNodeConverterTest.cs", label="EnsureChars(1, true) && _chars[_charPos + 1] == 'I'", span="949-949"];
m14_508 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="XmlNodeConverterTest.cs", label="return true;", span="947-947"];
m14_511 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="XmlNodeConverterTest.cs", label="ParseNumberNegativeInfinity()", span="950-950"];
m14_507 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="XmlNodeConverterTest.cs", label="ParseNumberPositiveInfinity()", span="946-946"];
m14_509 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="XmlNodeConverterTest.cs", label="'-'", span="948-948"];
m14_512 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="XmlNodeConverterTest.cs", label="ParseNumber()", span="952-952"];
m14_74 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDollarProperty()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDollarProperty()", span="154-154"];
m14_75 [cluster="Unk.DeserializeXNode", file="XmlNodeConverterTest.cs", label="Entry Unk.DeserializeXNode", span=""];
m14_84 [cluster="Unk.WriteLine", file="XmlNodeConverterTest.cs", label="Entry Unk.WriteLine", span=""];
m14_85 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ConvertNullString()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ConvertNullString()", span="189-189"];
m14_94 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ConvertNullString()", color=red, community=0, file="XmlNodeConverterTest.cs", label="0: Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ConvertNullString()", span="189-189"];
m14_86 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ConvertNullString()", file="XmlNodeConverterTest.cs", label="JObject json = new JObject()", span="191-191"];
m14_87 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ConvertNullString()", file="XmlNodeConverterTest.cs", label="json[''Prop1''] = (string)null", span="192-192"];
m14_89 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ConvertNullString()", file="XmlNodeConverterTest.cs", label="var xmlNodeConverter = new XmlNodeConverter { DeserializeRootElementName = ''object'' }", span="195-195"];
m14_90 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ConvertNullString()", file="XmlNodeConverterTest.cs", label="var jsonSerializerSettings = new JsonSerializerSettings { Converters = new JsonConverter[] { xmlNodeConverter } }", span="196-196"];
m14_93 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ConvertNullString()", file="XmlNodeConverterTest.cs", label="StringAssert.Equals(@''<object>\r\n  <Prop1 />\r\n  <Prop2 />\r\n</object>'', d.ToString())", span="200-203"];
m14_88 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ConvertNullString()", file="XmlNodeConverterTest.cs", label="json[''Prop2''] = new MyModel().MyProperty", span="193-193"];
m14_91 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ConvertNullString()", file="XmlNodeConverterTest.cs", label="var jsonSerializer = JsonSerializer.CreateDefault(jsonSerializerSettings)", span="197-197"];
m14_92 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ConvertNullString()", file="XmlNodeConverterTest.cs", label="XDocument d = json.ToObject<XDocument>(jsonSerializer)", span="198-198"];
m14_96 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MyModel.MyModel()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MyModel.MyModel()", span="183-183"];
m14_97 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="428-428"];
m14_100 [cluster="Unk.Equals", file="XmlNodeConverterTest.cs", label="Entry Unk.Equals", span=""];
m14_98 [cluster="Newtonsoft.Json.JsonSerializer.CreateDefault(Newtonsoft.Json.JsonSerializerSettings)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.CreateDefault(Newtonsoft.Json.JsonSerializerSettings)", span="615-615"];
m14_101 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElement()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElement()", span="212-212"];
m14_150 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXElement()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXElement()", span="321-321"];
m14_112 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="XmlNodeConverterTest.cs", label="int charsRequired = _charPos + relativePosition - _charsUsed + 1", span="272-272"];
m14_116 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="XmlNodeConverterTest.cs", label="totalCharsRead += charsRead", span="286-286"];
m14_118 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="XmlNodeConverterTest.cs", label="totalCharsRead < charsRequired", span="289-289"];
m14_115 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="XmlNodeConverterTest.cs", label="charsRead == 0", span="283-283"];
m14_117 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="XmlNodeConverterTest.cs", label="totalCharsRead < charsRequired", span="287-287"];
m14_113 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="XmlNodeConverterTest.cs", label="int totalCharsRead = 0", span="274-274"];
m14_114 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="XmlNodeConverterTest.cs", label="int charsRead = ReadData(append, charsRequired - totalCharsRead)", span="280-280"];
m14_119 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="XmlNodeConverterTest.cs", label="return false;", span="290-290"];
m14_499 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="XmlNodeConverterTest.cs", label="ParseConstructor()", span="933-933"];
m14_14 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", span="60-60"];
m14_104 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElement()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''{''''Bar'''':null}'', json)", span="217-217"];
m14_105 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElement()", file="XmlNodeConverterTest.cs", label="Foo foo2 = JsonConvert.DeserializeObject<Foo>(json)", span="218-218"];
m14_106 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElement()", file="XmlNodeConverterTest.cs", label="Assert.IsNull(foo2.Bar)", span="220-220"];
m14_107 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElement()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElement()", span="212-212"];
m14_108 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Foo.Foo()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Foo.Foo()", span="206-206"];
m14_213 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="'t'", span="460-460"];
m14_658 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="XmlNodeConverterTest.cs", label=nonBase10, span="1217-1217"];
m14_661 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="XmlNodeConverterTest.cs", label="numberValue = Convert.ToDecimal(integer)", span="1228-1228"];
m14_664 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="XmlNodeConverterTest.cs", label="string number = _stringReference.ToString()", span="1237-1237"];
m14_662 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="XmlNodeConverterTest.cs", label=Exception, span="1230-1230"];
m14_663 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="XmlNodeConverterTest.cs", label="throw JsonReaderException.Create(this, ''Input string '{0}' is not a valid decimal.''.FormatWith(CultureInfo.InvariantCulture, number), ex);", span="1232-1232"];
m14_668 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="XmlNodeConverterTest.cs", label="throw JsonReaderException.Create(this, ''Input string '{0}' is not a valid decimal.''.FormatWith(CultureInfo.InvariantCulture, _stringReference.ToString()));", span="1243-1243"];
m14_669 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="XmlNodeConverterTest.cs", label="numberType = JsonToken.Float", span="1246-1246"];
m14_666 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="XmlNodeConverterTest.cs", label="decimal.TryParse(number, NumberStyles.Number | NumberStyles.AllowExponent, CultureInfo.InvariantCulture, out value)", span="1240-1240"];
m14_665 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="XmlNodeConverterTest.cs", label="decimal value", span="1239-1239"];
m14_667 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="XmlNodeConverterTest.cs", label="numberValue = value", span="1241-1241"];
m14_670 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="XmlNodeConverterTest.cs", label=singleDigit, span="1250-1250"];
m14_276 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="charPos--", span="573-573"];
m14_888 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Model.Model()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Model.Model()", span="2950-2950"];
m14_673 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="XmlNodeConverterTest.cs", label=nonBase10, span="1256-1256"];
m14_177 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="XmlNodeConverterTest.cs", label="return true;", span="404-404"];
m14_840 [cluster="Newtonsoft.Json.JsonTextReader.Close()", file="XmlNodeConverterTest.cs", label="_buffer.Clear()", span="1593-1593"];
m14_844 [cluster="Newtonsoft.Json.Utilities.StringBuffer.Clear()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Utilities.StringBuffer.Clear()", span="75-75"];
m14_846 [cluster="Newtonsoft.Json.JsonTextReader.HasLineInfo()", file="XmlNodeConverterTest.cs", label="return true;", span="1604-1604"];
m14_841 [cluster="Newtonsoft.Json.JsonTextReader.Close()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.JsonTextReader.Close()", span="1581-1581"];
m14_843 [cluster="System.IO.TextReader.Close()", file="XmlNodeConverterTest.cs", label="Entry System.IO.TextReader.Close()", span="0-0"];
m14_845 [cluster="Newtonsoft.Json.JsonTextReader.HasLineInfo()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.HasLineInfo()", span="1602-1602"];
m14_847 [cluster="Newtonsoft.Json.JsonTextReader.HasLineInfo()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.JsonTextReader.HasLineInfo()", span="1602-1602"];
m14_344 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="XmlNodeConverterTest.cs", label="'1'", span="667-667"];
m14_538 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="XmlNodeConverterTest.cs", label="return true;", span="980-980"];
m14_540 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="XmlNodeConverterTest.cs", label="ProcessCarriageReturn(false)", span="982-982"];
m14_543 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="XmlNodeConverterTest.cs", label="' '", span="987-987"];
m14_539 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="XmlNodeConverterTest.cs", label="StringUtils.CarriageReturn", span="981-981"];
m14_541 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="XmlNodeConverterTest.cs", label="StringUtils.LineFeed", span="984-984"];
m14_545 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="XmlNodeConverterTest.cs", label="_charPos++", span="990-990"];
m14_542 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="XmlNodeConverterTest.cs", label="ProcessLineFeed()", span="985-985"];
m14_544 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="XmlNodeConverterTest.cs", label="StringUtils.Tab", span="988-988"];
m14_546 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="XmlNodeConverterTest.cs", label="char.IsWhiteSpace(currentChar)", span="993-993"];
m14_143 [cluster="Unk.ToArray", file="XmlNodeConverterTest.cs", label="Entry Unk.ToArray", span=""];
m14_144 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXElement()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXElement()", span="321-321"];
m14_145 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXElement()", file="XmlNodeConverterTest.cs", label="string xml = @''<payload>\r\n    <Country>6</Country>\r\n    <FinancialTransactionApprovalRequestUID>79</FinancialTransactionApprovalRequestUID>\r\n    <TransactionStatus>Approved</TransactionStatus>\r\n    <StatusChangeComment></StatusChangeComment>\r\n    <RequestedBy>Someone</RequestedBy>\r\n</payload>''", span="323-329"];
m14_873 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeDateInElementText()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeDateInElementText()", span="2956-2956"];
m14_882 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeDateInElementText()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''{''''Document'''':{''''Value'''':{''''@foo'''':''''bar'''',''''#text'''':''''2001-01-01T11:11:11''''}}}'', json.ToString())", span="2977-2977"];
m14_886 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeDateInElementText()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(@''<Document>\r\n  <Value foo=''''bar''''>2001-01-01T11:11:11</Value>\r\n</Document>'', document.ToString())", span="2985-2987"];
m14_875 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeDateInElementText()", file="XmlNodeConverterTest.cs", label="model.Document = new XElement(''Value'', new XAttribute(''foo'', ''bar''))\r\n            {\r\n                Value = ''2001-01-01T11:11:11''\r\n            }", span="2959-2962"];
m14_876 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeDateInElementText()", file="XmlNodeConverterTest.cs", label="var serializer = JsonSerializer.Create(new JsonSerializerSettings\r\n            {\r\n                Converters = new List<JsonConverter>(new[] { new XmlNodeConverter() })\r\n            })", span="2964-2967"];
m14_881 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeDateInElementText()", file="XmlNodeConverterTest.cs", label="serializer.Serialize(jsonWriter, model)", span="2975-2975"];
m14_877 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeDateInElementText()", file="XmlNodeConverterTest.cs", label="var json = new StringBuilder(1024)", span="2969-2969"];
m14_883 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeDateInElementText()", file="XmlNodeConverterTest.cs", label="var stringReader = new StringReader(json.ToString())", span="2980-2980"];
m14_885 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeDateInElementText()", file="XmlNodeConverterTest.cs", label="var document = (XDocument)serializer.Deserialize(jsonReader, typeof(XDocument))", span="2983-2983"];
m14_874 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeDateInElementText()", file="XmlNodeConverterTest.cs", label="Model model = new Model()", span="2958-2958"];
m14_884 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeDateInElementText()", file="XmlNodeConverterTest.cs", label="var jsonReader = new JsonTextReader(stringReader)", span="2981-2981"];
m14_879 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeDateInElementText()", file="XmlNodeConverterTest.cs", label="var jsonWriter = new JsonTextWriter(stringWriter)", span="2972-2972"];
m14_880 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeDateInElementText()", file="XmlNodeConverterTest.cs", label="jsonWriter.Formatting = Formatting.None", span="2974-2974"];
m14_878 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeDateInElementText()", file="XmlNodeConverterTest.cs", label="var stringWriter = new StringWriter(json, CultureInfo.InvariantCulture)", span="2971-2971"];
m14_887 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeDateInElementText()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeDateInElementText()", span="2956-2956"];
m14_578 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="XmlNodeConverterTest.cs", label="ReadData(false) == 0", span="1039-1039"];
m14_580 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="XmlNodeConverterTest.cs", label="_charPos++", span="1044-1044"];
m14_579 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="XmlNodeConverterTest.cs", label="finished = true", span="1040-1040"];
m14_581 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", color=red, community=0, file="XmlNodeConverterTest.cs", label="0: StringUtils.CarriageReturn", span="1047-1047"];
m14_103 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElement()", file="XmlNodeConverterTest.cs", label="string json = JsonConvert.SerializeObject(foo)", span="215-215"];
m14_675 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="XmlNodeConverterTest.cs", label="numberValue = number.StartsWith(''0x'', StringComparison.OrdinalIgnoreCase)\r\n                            ? Convert.ToInt64(number, 16)\r\n                            : Convert.ToInt64(number, 8)", span="1262-1264"];
m14_679 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="XmlNodeConverterTest.cs", label="long value", span="1275-1275"];
m14_683 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="XmlNodeConverterTest.cs", label="numberType = JsonToken.Integer", span="1280-1280"];
m14_677 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="XmlNodeConverterTest.cs", label="throw JsonReaderException.Create(this, ''Input string '{0}' is not a valid number.''.FormatWith(CultureInfo.InvariantCulture, number), ex);", span="1268-1268"];
m14_680 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="XmlNodeConverterTest.cs", label="ParseResult parseResult = ConvertUtils.Int64TryParse(_stringReference.Chars, _stringReference.StartIndex, _stringReference.Length, out value)", span="1276-1276"];
m14_678 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="XmlNodeConverterTest.cs", label="numberType = JsonToken.Integer", span="1271-1271"];
m14_681 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="XmlNodeConverterTest.cs", label="parseResult == ParseResult.Success", span="1277-1277"];
m14_682 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="XmlNodeConverterTest.cs", label="numberValue = value", span="1279-1279"];
m14_676 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="XmlNodeConverterTest.cs", label=Exception, span="1266-1266"];
m14_684 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="XmlNodeConverterTest.cs", label="parseResult == ParseResult.Overflow", span="1282-1282"];
m14_362 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="XmlNodeConverterTest.cs", label=true, span="694-694"];
m14_366 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="XmlNodeConverterTest.cs", label="_charsUsed == _charPos", span="701-701"];
m14_368 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="XmlNodeConverterTest.cs", label="_currentState = State.Finished", span="705-705"];
m14_367 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="XmlNodeConverterTest.cs", label="ReadData(false) == 0", span="703-703"];
m14_364 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="XmlNodeConverterTest.cs", label=currentChar, span="698-698"];
m14_365 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="XmlNodeConverterTest.cs", label="'\0'", span="700-700"];
m14_369 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="XmlNodeConverterTest.cs", label="return false;", span="706-706"];
m14_363 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="XmlNodeConverterTest.cs", label="char currentChar = _chars[_charPos]", span="696-696"];
m14_370 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="XmlNodeConverterTest.cs", label="_charPos++", span="711-711"];
m14_45 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="XmlNodeConverterTest.cs", label="return;", span="160-160"];
m14_0 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", span="60-60"];
m14_1 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs", label="string json = JsonConvert.SerializeXmlNode(node, Formatting.Indented)", span="62-62"];
m14_3 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs", label="XObject xNode", span="72-72"];
m14_2 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", color=green, community=0, file="XmlNodeConverterTest.cs", label="0: XmlReader reader = new XmlNodeReader(node)", span="66-66"];
m14_4 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs", label="node is XmlDocument", span="73-73"];
m14_5 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs", label="xNode = XDocument.Load(reader)", span="75-75"];
m14_6 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs", label="node is XmlAttribute", span="77-77"];
m14_138 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlElement()", file="XmlNodeConverterTest.cs", label="var result = xmlDocument.FirstChild.ChildNodes.Cast<XmlNode>().ToArray()", span="295-295"];
m14_647 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="XmlNodeConverterTest.cs", label="int value", span="1198-1198"];
m14_769 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Serialize_XDocument_NoRoot()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Serialize_XDocument_NoRoot()", span="2782-2782"];
m14_671 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", color=red, community=0, file="XmlNodeConverterTest.cs", label="0: numberValue = (long)firstChar - 48", span="1253-1253"];
m14_656 [cluster="System.Text.Encoding.GetBytes(string)", file="XmlNodeConverterTest.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m14_655 [cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="XmlNodeConverterTest.cs", label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0"];
m14_643 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="XmlNodeConverterTest.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m14_646 [cluster="Newtonsoft.Json.Linq.JToken.CreateReader()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Linq.JToken.CreateReader()", span="1886-1886"];
m14_644 [cluster="Newtonsoft.Json.Linq.JObject.FromObject(object)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.FromObject(object)", span="442-442"];
m14_645 [cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", span="574-574"];
m14_659 [cluster="System.IO.MemoryStream.ToArray()", file="XmlNodeConverterTest.cs", label="Entry System.IO.MemoryStream.ToArray()", span="0-0"];
m14_660 [cluster="System.Text.Encoding.GetString(byte[])", file="XmlNodeConverterTest.cs", label="Entry System.Text.Encoding.GetString(byte[])", span="0-0"];
m14_672 [cluster="Unk.Add", file="XmlNodeConverterTest.cs", label="Entry Unk.Add", span=""];
m14_674 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="52-52"];
m14_610 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="XmlNodeConverterTest.cs", label="ProcessLineFeed()", span="1109-1109"];
m14_371 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="XmlNodeConverterTest.cs", label="'}'", span="714-714"];
m14_373 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="XmlNodeConverterTest.cs", label="SetToken(JsonToken.EndObject)", span="716-716"];
m14_372 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="XmlNodeConverterTest.cs", label="_charPos++", span="715-715"];
m14_375 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="XmlNodeConverterTest.cs", label="']'", span="718-718"];
m14_374 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="XmlNodeConverterTest.cs", label="return true;", span="717-717"];
m14_376 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="XmlNodeConverterTest.cs", label="_charPos++", span="719-719"];
m14_824 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity()", file="XmlNodeConverterTest.cs", label="_floatParseHandling == FloatParseHandling.Decimal", span="1552-1552"];
m14_823 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity()", file="XmlNodeConverterTest.cs", label="MatchValueWithTrailingSeparator(JsonConvert.PositiveInfinity)", span="1550-1550"];
m14_825 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity()", file="XmlNodeConverterTest.cs", label="throw new JsonReaderException(''Cannot read Infinity as a decimal.'');", span="1553-1553"];
m14_822 [cluster="Newtonsoft.Json.JsonReaderException.JsonReaderException(string)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonReaderException.JsonReaderException(string)", span="70-70"];
m14_826 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity()", file="XmlNodeConverterTest.cs", label="SetToken(JsonToken.Float, double.PositiveInfinity)", span="1555-1555"];
m14_787 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="XmlNodeConverterTest.cs", label="return (nextChart == '*' || nextChart == '/');", span="1463-1463"];
m14_789 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="XmlNodeConverterTest.cs", label="CurrentState == State.Constructor || CurrentState == State.ConstructorStart", span="1465-1465"];
m14_790 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="XmlNodeConverterTest.cs", label="return true;", span="1466-1466"];
m14_791 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="XmlNodeConverterTest.cs", label="' '", span="1468-1468"];
m14_792 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="XmlNodeConverterTest.cs", label="StringUtils.Tab", span="1469-1469"];
m14_788 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="XmlNodeConverterTest.cs", label="')'", span="1464-1464"];
m14_793 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="XmlNodeConverterTest.cs", label="StringUtils.LineFeed", span="1470-1470"];
m14_806 [cluster="Newtonsoft.Json.JsonTextReader.ParseNull()", file="XmlNodeConverterTest.cs", label="throw JsonReaderException.Create(this, ''Error parsing null value.'');", span="1505-1505"];
m14_807 [cluster="Newtonsoft.Json.JsonTextReader.ParseNull()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseNull()", span="1497-1497"];
m14_812 [cluster="Newtonsoft.Json.JsonTextReader.ParseFalse()", file="XmlNodeConverterTest.cs", label="MatchValueWithTrailingSeparator(JsonConvert.False)", span="1523-1523"];
m14_102 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElement()", file="XmlNodeConverterTest.cs", label="Foo foo = new Foo { Bar = null }", span="214-214"];
m14_448 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", file="XmlNodeConverterTest.cs", label="string xml = IndentXml(newDoc.InnerXml)", span="1262-1262"];
m14_438 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", span="1223-1223"];
m14_441 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''<myRoot><count>773840</count><photos>773840</photos></myRoot>'', newDoc.InnerXml)", span="1230-1230"];
m14_439 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", file="XmlNodeConverterTest.cs", label="string json = @''{''''count'''': 773840,''''photos'''': 773840}''", span="1225-1225"];
m14_440 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", file="XmlNodeConverterTest.cs", label="XmlDocument newDoc = JsonConvert.DeserializeXmlNode(json, ''myRoot'')", span="1228-1228"];
m14_442 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", file="XmlNodeConverterTest.cs", label="XDocument newXDoc = JsonConvert.DeserializeXNode(json, ''myRoot'')", span="1234-1234"];
m14_443 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''<myRoot><count>773840</count><photos>773840</photos></myRoot>'', newXDoc.ToString(SaveOptions.DisableFormatting))", span="1236-1236"];
m14_447 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", color=green, community=0, file="XmlNodeConverterTest.cs", label="0: XmlDocument newDoc = JsonConvert.DeserializeXmlNode(json, ''myRoot'')", span="1260-1260"];
m14_444 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", span="1223-1223"];
m14_445 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", span="1241-1241"];
m14_446 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", file="XmlNodeConverterTest.cs", label="string json = @''{\r\n  ''''available_sizes'''': [\r\n    [\r\n      ''''assets/images/resized/0001/1070/11070v1-max-150x150.jpg'''',\r\n      ''''assets/images/resized/0001/1070/11070v1-max-150x150.jpg''''\r\n    ],\r\n    [\r\n      ''''assets/images/resized/0001/1070/11070v1-max-250x250.jpg'''',\r\n      ''''assets/images/resized/0001/1070/11070v1-max-250x250.jpg''''\r\n    ],\r\n    [\r\n      ''''assets/images/resized/0001/1070/11070v1-max-250x250.jpg''''\r\n    ]\r\n  ]\r\n}''", span="1243-1257"];
m14_449 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(@''<myRoot>\r\n  <available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-150x150.jpg</available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-150x150.jpg</available_sizes>\r\n  </available_sizes>\r\n  <available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes>\r\n  </available_sizes>\r\n  <available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes>\r\n  </available_sizes>\r\n</myRoot>'', IndentXml(newDoc.InnerXml))", span="1264-1276"];
m14_450 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", file="XmlNodeConverterTest.cs", label="XDocument newXDoc = JsonConvert.DeserializeXNode(json, ''myRoot'')", span="1280-1280"];
m14_451 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(@''<myRoot>\r\n  <available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-150x150.jpg</available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-150x150.jpg</available_sizes>\r\n  </available_sizes>\r\n  <available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes>\r\n  </available_sizes>\r\n  <available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes>\r\n  </available_sizes>\r\n</myRoot>'', IndentXml(newXDoc.ToString(SaveOptions.DisableFormatting)))", span="1282-1294"];
m14_601 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="XmlNodeConverterTest.cs", label="endPosition = _charPos", span="1091-1091"];
m14_182 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GroupElementsOfTheSameName()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GroupElementsOfTheSameName()", span="415-415"];
m14_475 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Encoding()", file="XmlNodeConverterTest.cs", label="doc.LoadXml(@''<name>O''''Connor</name>'')", span="1403-1403"];
m14_476 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Encoding()", file="XmlNodeConverterTest.cs", label="string json = SerializeXmlNode(doc)", span="1405-1405"];
m14_477 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Encoding()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''name'''': ''''O\''''Connor''''\r\n}'', json)", span="1406-1408"];
m14_485 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(expected, jsonText)", span="1435-1435"];
m14_548 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayWithIdLast()", file="XmlNodeConverterTest.cs", label="string json = @''{\r\n  ''''$values'''': [\r\n    ''''1'''',\r\n    ''''2'''',\r\n    ''''3'''',\r\n    ''''4'''',\r\n    ''''5''''\r\n  ],\r\n  ''''$id'''': ''''1''''\r\n}''", span="1710-1719"];
m14_551 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayWithIdLast()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(@''<?xml version=''''1.0'''' encoding=''''utf-16''''?>\r\n<root xmlns:json=''''http://james.newtonking.com/projects/json'''' json:id=''''1''''>\r\n  <values xmlns=''''http://james.newtonking.com/projects/json''''>1</values>\r\n  <values xmlns=''''http://james.newtonking.com/projects/json''''>2</values>\r\n  <values xmlns=''''http://james.newtonking.com/projects/json''''>3</values>\r\n  <values xmlns=''''http://james.newtonking.com/projects/json''''>4</values>\r\n  <values xmlns=''''http://james.newtonking.com/projects/json''''>5</values>\r\n</root>'', xml)", span="1724-1731"];
m14_478 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Encoding()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Encoding()", span="1399-1399"];
m14_483 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="XmlNodeConverterTest.cs", label="string jsonText = SerializeXmlNode(doc)", span="1422-1422"];
m14_487 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''<span class=''''vevent''''><a class=''''url'''' href=''''http://www.web2con.com/''''><!-- Hi --><span>Text</span></a><!-- Hi! --></span>'', newDoc.InnerXml)", span="1438-1438"];
m14_490 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", file="XmlNodeConverterTest.cs", label="string xml = @''<?xml version=''''1.0'''' standalone=''''no''''?>\r\n			<root>\r\n			  <person id=''''1''''>\r\n				<name>Alan</name>\r\n				<url>http://www.google.com</url>\r\n			  </person>\r\n			  <person id=''''2''''>\r\n				<name>Louis</name>\r\n				<url>http://www.yahoo.com</url>\r\n			  </person>\r\n			</root>''", span="1444-1454"];
m14_493 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", file="XmlNodeConverterTest.cs", label="string jsonText = SerializeXmlNode(doc)", span="1459-1459"];
m14_514 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs", label="PreserveReferencesHandlingTests.CircularDictionary circularDictionary = new PreserveReferencesHandlingTests.CircularDictionary()", span="1597-1597"];
m14_517 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs", label="string json = JsonConvert.SerializeObject(circularDictionary, Formatting.Indented,\r\n                new JsonSerializerSettings { PreserveReferencesHandling = PreserveReferencesHandling.All })", span="1601-1602"];
m14_520 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs", label="string xml = GetIndentedInnerXml(node)", span="1616-1616"];
m14_524 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs", label="string expectedXmlJson = @''{\r\n  ''''root'''': {\r\n    ''''$id'''': ''''1'''',\r\n    ''''other'''': {\r\n      ''''$id'''': ''''2'''',\r\n      ''''blah'''': null\r\n    },\r\n    ''''self'''': {\r\n      ''''$ref'''': ''''1''''\r\n    }\r\n  }\r\n}''", span="1628-1639"];
m14_528 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="XmlNodeConverterTest.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m14_479 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", span="1414-1414"];
m14_480 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="XmlNodeConverterTest.cs", label="string xml = @''<span class=''''vevent''''>\r\n  <a class=''''url'''' href=''''http://www.web2con.com/''''><!-- Hi --><span>Text</span></a><!-- Hi! -->\r\n</span>''", span="1416-1418"];
m14_482 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="XmlNodeConverterTest.cs", label="doc.LoadXml(xml)", span="1420-1420"];
m14_481 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="XmlNodeConverterTest.cs", label="XmlDocument doc = new XmlDocument()", span="1419-1419"];
m14_484 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="XmlNodeConverterTest.cs", label="string expected = @''{\r\n  ''''span'''': {\r\n    ''''@class'''': ''''vevent'''',\r\n    ''''a'''': {\r\n      ''''@class'''': ''''url'''',\r\n      ''''@href'''': ''''http://www.web2con.com/''''/* Hi */,\r\n      ''''span'''': ''''Text''''\r\n    }/* Hi! */\r\n  }\r\n}''", span="1424-1433"];
m14_486 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="XmlNodeConverterTest.cs", label="XmlDocument newDoc = (XmlDocument)DeserializeXmlNode(jsonText)", span="1437-1437"];
m14_488 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", span="1414-1414"];
m14_489 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", span="1442-1442"];
m14_491 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", file="XmlNodeConverterTest.cs", label="XmlDocument doc = new XmlDocument()", span="1456-1456"];
m14_492 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", file="XmlNodeConverterTest.cs", label="doc.LoadXml(xml)", span="1457-1457"];
m14_494 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", file="XmlNodeConverterTest.cs", label="jsonText = JObject.Parse(jsonText).ToString()", span="1482-1482"];
m14_495 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''?xml'''': {\r\n    ''''@version'''': ''''1.0'''',\r\n    ''''@standalone'''': ''''no''''\r\n  },\r\n  ''''root'''': {\r\n    ''''person'''': [\r\n      {\r\n        ''''@id'''': ''''1'''',\r\n        ''''name'''': ''''Alan'''',\r\n        ''''url'''': ''''http://www.google.com''''\r\n      },\r\n      {\r\n        ''''@id'''': ''''2'''',\r\n        ''''name'''': ''''Louis'''',\r\n        ''''url'''': ''''http://www.yahoo.com''''\r\n      }\r\n    ]\r\n  }\r\n}'', jsonText)", span="1484-1503"];
m14_496 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", file="XmlNodeConverterTest.cs", label="XmlDocument newDoc = (XmlDocument)DeserializeXmlNode(jsonText)", span="1505-1505"];
m14_498 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", span="1442-1442"];
m14_497 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(doc.InnerXml, newDoc.InnerXml)", span="1507-1507"];
m14_500 [cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="422-422"];
m14_513 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", span="1595-1595"];
m14_515 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs", label="circularDictionary.Add(''other'', new PreserveReferencesHandlingTests.CircularDictionary { { ''blah'', null } })", span="1598-1598"];
m14_516 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs", label="circularDictionary.Add(''self'', circularDictionary)", span="1599-1599"];
m14_518 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''other'''': {\r\n    ''''$id'''': ''''2'''',\r\n    ''''blah'''': null\r\n  },\r\n  ''''self'''': {\r\n    ''''$ref'''': ''''1''''\r\n  }\r\n}'', json)", span="1604-1613"];
m14_519 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs", label="XmlNode node = DeserializeXmlNode(json, ''root'')", span="1615-1615"];
m14_521 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs", label="string expected = @''<?xml version=''''1.0'''' encoding=''''utf-16''''?>\r\n<root xmlns:json=''''http://james.newtonking.com/projects/json'''' json:id=''''1''''>\r\n  <other json:id=''''2''''>\r\n    <blah />\r\n  </other>\r\n  <self json:ref=''''1'''' />\r\n</root>''", span="1617-1623"];
m14_522 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(expected, xml)", span="1625-1625"];
m14_523 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs", label="string xmlJson = SerializeXmlNode(node)", span="1627-1627"];
m14_525 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(expectedXmlJson, xmlJson)", span="1641-1641"];
m14_526 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", span="1595-1595"];
m14_529 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="618-618"];
m14_547 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayWithIdLast()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayWithIdLast()", span="1708-1708"];
m14_549 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayWithIdLast()", file="XmlNodeConverterTest.cs", label="XmlNode node = JsonConvert.DeserializeXmlNode(json, ''root'')", span="1721-1721"];
m14_550 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayWithIdLast()", file="XmlNodeConverterTest.cs", label="string xml = GetIndentedInnerXml(node)", span="1722-1722"];
m14_552 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayWithIdLast()", file="XmlNodeConverterTest.cs", label="string newJson = JsonConvert.SerializeXmlNode(node, Formatting.Indented, true)", span="1733-1733"];
m14_205 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="throw JsonReaderException.Create(this, ''Unterminated string. Expected delimiter: {0}.''.FormatWith(CultureInfo.InvariantCulture, quote));", span="444-444"];
m14_209 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label=currentChar, span="454-454"];
m14_208 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="char writeChar", span="452-452"];
m14_210 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="'b'", span="456-456"];
m14_207 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="char currentChar = _chars[charPos]", span="450-450"];
m14_211 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="charPos++", span="457-457"];
m14_206 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="int escapeStartPos = charPos - 1", span="448-448"];
m14_212 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="writeChar = '\b'", span="458-458"];
m14_891 [cluster="System.IO.StringWriter.StringWriter(System.Text.StringBuilder, System.IFormatProvider)", file="XmlNodeConverterTest.cs", label="Entry System.IO.StringWriter.StringWriter(System.Text.StringBuilder, System.IFormatProvider)", span="0-0"];
m14_311 [cluster="string.String(char[], int, int)", file="XmlNodeConverterTest.cs", label="Entry string.String(char[], int, int)", span="0-0"];
m14_314 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", span="627-627"];
m14_315 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="XmlNodeConverterTest.cs", label="int charPos = _charPos", span="629-629"];
m14_316 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="XmlNodeConverterTest.cs", label=true, span="631-631"];
m14_317 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="XmlNodeConverterTest.cs", label="_chars[charPos++]", span="633-633"];
m14_318 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="XmlNodeConverterTest.cs", label="'\0'", span="635-635"];
m14_229 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="'\''", span="481-481"];
m14_233 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", color=red, community=0, file="XmlNodeConverterTest.cs", label="0: 'u'", span="486-486"];
m14_235 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="_charPos = charPos", span="488-488"];
m14_231 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="writeChar = currentChar", span="483-483"];
m14_232 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="charPos++", span="484-484"];
m14_234 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="charPos++", span="487-487"];
m14_230 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="'/'", span="482-482"];
m14_236 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="writeChar = ParseUnicode()", span="489-489"];
m14_109 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", span="267-267"];
m14_184 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GroupElementsOfTheSameName()", file="XmlNodeConverterTest.cs", label="string json = JsonConvert.SerializeXNode(XElement.Parse(xml))", span="419-419"];
m14_397 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", span="1066-1066"];
m14_399 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="string arrayXml = @''<root xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n			  <person id=''''1''''>\r\n				  <name>Alan</name>\r\n				  <url>http://www.google.com</url>\r\n				  <role json:Array=''''true''''>Admin</role>\r\n			  </person>\r\n			</root>''", span="1094-1100"];
m14_383 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RootObjectMultipleProperties()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RootObjectMultipleProperties()", span="1058-1058"];
m14_390 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="XmlNodeConverterTest.cs", label="string jsonText = @''{root:{r:new Date(34343, 55)}}''", span="1068-1068"];
m14_393 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(expected, newDoc.InnerXml)", span="1074-1074"];
m14_395 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="XmlNodeConverterTest.cs", label="expected = @''{\r\n  ''''root'''': {\r\n    ''''r'''': {\r\n      ''''Date'''': [\r\n        ''''34343'''',\r\n        ''''55''''\r\n      ]\r\n    }\r\n  }\r\n}''", span="1077-1086"];
m14_384 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RootObjectMultipleProperties()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => { XmlDocument newDoc = (XmlDocument)JsonConvert.DeserializeXmlNode(@''{Prop1:1,Prop2:2}''); },\r\n                ''JSON root object has multiple properties. The root object must have a single property in order to create a valid XML document. Consider specifying a DeserializeRootElementName. Path 'Prop2', line 1, position 15.'')", span="1060-1062"];
m14_385 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RootObjectMultipleProperties()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RootObjectMultipleProperties()", span="1058-1058"];
m14_389 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", span="1066-1066"];
m14_391 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="XmlNodeConverterTest.cs", label="XmlDocument newDoc = (XmlDocument)DeserializeXmlNode(jsonText)", span="1070-1070"];
m14_392 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="XmlNodeConverterTest.cs", label="string expected = @''<root><r><Date>34343</Date><Date>55</Date></r></root>''", span="1072-1072"];
m14_394 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="XmlNodeConverterTest.cs", label="string json = SerializeXmlNode(newDoc)", span="1076-1076"];
m14_396 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(expected, json)", span="1088-1088"];
m14_398 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", span="1092-1092"];
m14_400 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="XmlDocument arrayDoc = new XmlDocument()", span="1102-1102"];
m14_794 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="XmlNodeConverterTest.cs", label="StringUtils.CarriageReturn", span="1471-1471"];
m14_797 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="XmlNodeConverterTest.cs", label="return true;", span="1475-1475"];
m14_796 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="XmlNodeConverterTest.cs", label="char.IsWhiteSpace(c)", span="1474-1474"];
m14_798 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="XmlNodeConverterTest.cs", label="return false;", span="1479-1479"];
m14_795 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="XmlNodeConverterTest.cs", label="return true;", span="1472-1472"];
m14_799 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.JsonTextReader.IsSeparator(char)", span="1448-1448"];
m14_327 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="XmlNodeConverterTest.cs", label="'+'", span="650-650"];
m14_331 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="XmlNodeConverterTest.cs", label="'B'", span="654-654"];
m14_334 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="XmlNodeConverterTest.cs", label="'d'", span="657-657"];
m14_333 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="XmlNodeConverterTest.cs", label="'C'", span="656-656"];
m14_329 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="XmlNodeConverterTest.cs", label="'A'", span="652-652"];
m14_330 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="XmlNodeConverterTest.cs", label="'b'", span="653-653"];
m14_332 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="XmlNodeConverterTest.cs", label="'c'", span="655-655"];
m14_335 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="XmlNodeConverterTest.cs", label="'D'", span="658-658"];
m14_328 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="XmlNodeConverterTest.cs", label="'a'", span="651-651"];
m14_336 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="XmlNodeConverterTest.cs", label="'e'", span="659-659"];
m14_313 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Utf8StringWriter.Utf8StringWriter(System.Text.StringBuilder)", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Utf8StringWriter.Utf8StringWriter(System.Text.StringBuilder)", span="806-806"];
m14_452 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", file="XmlNodeConverterTest.cs", label="string newJson = JsonConvert.SerializeXmlNode(newDoc, Formatting.Indented)", span="1298-1298"];
m14_456 [cluster="System.Console.WriteLine(string)", file="XmlNodeConverterTest.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m14_271 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="ProcessLineFeed()", span="566-566"];
m14_221 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="writeChar = '\f'", span="470-470"];
m14_8 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs", label="xNode = new XAttribute(XName.Get(attribute.LocalName, attribute.NamespaceURI), attribute.Value)", span="80-80"];
m14_9 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs", label="reader.MoveToContent()", span="84-84"];
m14_10 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs", label="xNode = XNode.ReadFrom(reader)", span="85-85"];
m14_11 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs", label="string linqJson = JsonConvert.SerializeXNode(xNode, Formatting.Indented)", span="88-88"];
m14_12 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(json, linqJson)", span="90-90"];
m14_13 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs", label="return json;", span="93-93"];
m14_453 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", span="857-857"];
m14_189 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="int charPos = _charPos", span="418-418"];
m14_192 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="StringBuffer buffer = null", span="421-421"];
m14_196 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="_charsUsed == charPos - 1", span="428-428"];
m14_190 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="int initialPosition = _charPos", span="419-419"];
m14_191 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="int lastWritePosition = _charPos", span="420-420"];
m14_193 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label=true, span="423-423"];
m14_194 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", color=red, community=0, file="XmlNodeConverterTest.cs", label="0: _chars[charPos++]", span="425-425"];
m14_195 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="'\0'", span="427-427"];
m14_197 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="charPos--", span="430-430"];
m14_200 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="throw JsonReaderException.Create(this, ''Unterminated string. Expected delimiter: {0}.''.FormatWith(CultureInfo.InvariantCulture, quote));", span="435-435"];
m14_203 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="!EnsureChars(0, true)", span="441-441"];
m14_199 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="_charPos = charPos", span="434-434"];
m14_202 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="_charPos = charPos", span="440-440"];
m14_198 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="ReadData(true) == 0", span="432-432"];
m14_201 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="'\\'", span="439-439"];
m14_204 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="_charPos = charPos", span="443-443"];
m14_814 [cluster="Newtonsoft.Json.JsonTextReader.ParseFalse()", file="XmlNodeConverterTest.cs", label="throw JsonReaderException.Create(this, ''Error parsing boolean value.'');", span="1529-1529"];
m14_164 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="XmlNodeConverterTest.cs", label="State.Object", span="384-384"];
m14_24 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="XmlNodeConverterTest.cs", label="_readType == ReadType.ReadAsBytes", span="119-119"];
m14_25 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="XmlNodeConverterTest.cs", label="byte[] data", span="121-121"];
m14_26 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="XmlNodeConverterTest.cs", label="_stringReference.Length == 0", span="122-122"];
m14_361 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleTextNode()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleTextNode()", span="969-969"];
m14_149 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", span="355-355"];
m14_147 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", span="355-355"];
m14_148 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", file="XmlNodeConverterTest.cs", label="return ReadAsDateTimeInternal();", span="357-357"];
m14_146 [cluster="Newtonsoft.Json.JsonReader.ReadAsStringInternal()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsStringInternal()", span="673-673"];
m14_322 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="XmlNodeConverterTest.cs", label="ReadData(true) == 0", span="640-640"];
m14_323 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="XmlNodeConverterTest.cs", label="return;", span="641-641"];
m14_324 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="XmlNodeConverterTest.cs", label="_charPos = charPos - 1", span="645-645"];
m14_325 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="XmlNodeConverterTest.cs", label="return;", span="646-646"];
m14_326 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="XmlNodeConverterTest.cs", label="'-'", span="649-649"];
m14_110 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="XmlNodeConverterTest.cs", label=_isEndOfFile, span="269-269"];
m14_562 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataWithNullValue()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataWithNullValue()", span="1760-1760"];
m14_134 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlElement()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlElement()", span="281-281"];
m14_566 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataWithNullValue()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(@''<?xml version=''''1.0'''' encoding=''''utf-16''''?>\r\n<root xmlns:json=''''http://james.newtonking.com/projects/json'''' json:id='''''''' />'', xml)", span="1769-1770"];
m14_567 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataWithNullValue()", file="XmlNodeConverterTest.cs", label="string newJson = JsonConvert.SerializeXmlNode(node, Formatting.Indented, true)", span="1772-1772"];
m14_568 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataWithNullValue()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''$id'''': ''''''''\r\n}'', newJson)", span="1774-1776"];
m14_569 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataWithNullValue()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataWithNullValue()", span="1760-1760"];
m14_554 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayWithIdLast()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayWithIdLast()", span="1708-1708"];
m14_815 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Unspecified_Precision()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Unspecified_Precision()", span="2855-2855"];
m14_237 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="StringUtils.IsLowSurrogate(writeChar)", span="491-491"];
m14_245 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="writeChar = ParseUnicode()", span="511-511"];
m14_252 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="buffer = GetBuffer()", span="530-530"];
m14_255 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="writeChar = UnicodeReplacementChar", span="539-539"];
m14_268 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="charPos = _charPos", span="562-562"];
m14_269 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="StringUtils.LineFeed", span="564-564"];
m14_243 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="char highSurrogate = writeChar", span="508-508"];
m14_244 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="_charPos += 2", span="510-510"];
m14_246 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="StringUtils.IsLowSurrogate(writeChar)", span="513-513"];
m14_251 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="buffer == null", span="529-529"];
m14_253 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="WriteCharToBuffer(buffer, highSurrogate, lastWritePosition, escapeStartPos)", span="532-532"];
m14_254 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="lastWritePosition = _charPos", span="533-533"];
m14_256 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label=anotherHighSurrogate, span="541-541"];
m14_257 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="charPos = _charPos", span="544-544"];
m14_267 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="ProcessCarriageReturn(true)", span="561-561"];
m14_250 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="highSurrogate = UnicodeReplacementChar", span="526-526"];
m14_249 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="anotherHighSurrogate = true", span="521-521"];
m14_241 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="anotherHighSurrogate = false", span="503-503"];
m14_242 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="EnsureChars(2, true) && _chars[_charPos] == '\\' && _chars[_charPos + 1] == 'u'", span="506-506"];
m14_247 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="StringUtils.IsHighSurrogate(writeChar)", span="517-517"];
m14_238 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="writeChar = UnicodeReplacementChar", span="494-494"];
m14_265 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="StringUtils.CarriageReturn", span="559-559"];
m14_266 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="_charPos = charPos - 1", span="560-560"];
m14_258 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="charPos++", span="547-547"];
m14_261 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="buffer == null", span="552-552"];
m14_264 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="lastWritePosition = charPos", span="557-557"];
m14_248 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="highSurrogate = UnicodeReplacementChar", span="520-520"];
m14_240 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="bool anotherHighSurrogate", span="498-498"];
m14_239 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="StringUtils.IsHighSurrogate(writeChar)", span="496-496"];
m14_259 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="_charPos = charPos", span="548-548"];
m14_262 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="buffer = GetBuffer()", span="553-553"];
m14_260 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="throw JsonReaderException.Create(this, ''Bad JSON escape sequence: {0}.''.FormatWith(CultureInfo.InvariantCulture, @''\'' + currentChar));", span="549-549"];
m14_263 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="WriteCharToBuffer(buffer, writeChar, lastWritePosition, escapeStartPos)", span="555-555"];
m14_270 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="_charPos = charPos - 1", span="565-565"];
m14_611 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="XmlNodeConverterTest.cs", label="char.IsWhiteSpace(currentChar)", span="1112-1112"];
m14_602 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="XmlNodeConverterTest.cs", label="_charPos++", span="1092-1092"];
m14_605 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="XmlNodeConverterTest.cs", label="currentChar == StringUtils.CarriageReturn", span="1100-1100"];
m14_607 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="XmlNodeConverterTest.cs", label="ProcessCarriageReturn(true)", span="1103-1103"];
m14_604 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="XmlNodeConverterTest.cs", label="_charPos++", span="1098-1098"];
m14_606 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="XmlNodeConverterTest.cs", label="endPosition = _charPos", span="1102-1102"];
m14_608 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="XmlNodeConverterTest.cs", label="currentChar == StringUtils.LineFeed", span="1106-1106"];
m14_603 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="XmlNodeConverterTest.cs", label="char.IsLetterOrDigit(currentChar)", span="1096-1096"];
m14_609 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="XmlNodeConverterTest.cs", label="endPosition = _charPos", span="1108-1108"];
m14_50 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", span="416-416"];
m14_142 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", span="616-616"];
m14_835 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyNodeAndOmitRoot_XElement()", file="XmlNodeConverterTest.cs", label="string xmlString = @''<myemptynode />''", span="2889-2889"];
m14_836 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyNodeAndOmitRoot_XElement()", file="XmlNodeConverterTest.cs", label="var xml = XElement.Parse(xmlString)", span="2891-2891"];
m14_837 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyNodeAndOmitRoot_XElement()", file="XmlNodeConverterTest.cs", label="string json = JsonConvert.SerializeXNode(xml, Formatting.Indented, true)", span="2893-2893"];
m14_838 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyNodeAndOmitRoot_XElement()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''null'', json)", span="2895-2895"];
m14_839 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyNodeAndOmitRoot_XElement()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyNodeAndOmitRoot_XElement()", span="2887-2887"];
m14_222 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="'r'", span="472-472"];
m14_224 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="writeChar = '\r'", span="474-474"];
m14_223 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="charPos++", span="473-473"];
m14_225 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="'\\'", span="476-476"];
m14_23 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="XmlNodeConverterTest.cs", label="SetPostValueState(true)", span="117-117"];
m14_619 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="XmlNodeConverterTest.cs", label="EatWhitespace(false)", span="1132-1132"];
m14_625 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="XmlNodeConverterTest.cs", label="throw JsonReaderException.Create(this, ''Unexpected content while parsing JSON.'');", span="1145-1145"];
m14_623 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="XmlNodeConverterTest.cs", label="ClearRecentString()", span="1139-1139"];
m14_624 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="XmlNodeConverterTest.cs", label="SetToken(JsonToken.StartConstructor, constructorName)", span="1141-1141"];
m14_626 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseConstructor()", span="1070-1070"];
m14_621 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="XmlNodeConverterTest.cs", label="throw JsonReaderException.Create(this, ''Unexpected character while parsing constructor: {0}.''.FormatWith(CultureInfo.InvariantCulture, _chars[_charPos]));", span="1135-1135"];
m14_622 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="XmlNodeConverterTest.cs", label="_charPos++", span="1137-1137"];
m14_620 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="XmlNodeConverterTest.cs", label="_chars[_charPos] != '('", span="1134-1134"];
m14_17 [cluster="Newtonsoft.Json.JsonTextReader.OnNewLine(int)", file="XmlNodeConverterTest.cs", label="_lineStartPos = pos - 1", span="108-108"];
m14_553 [cluster="Newtonsoft.Json.JsonTextReader.ParseTrue()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseTrue()", span="1482-1482"];
m14_71 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDollarProperty()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''<_x0024_>test</_x0024_>'', doc.ToString())", span="160-160"];
m14_72 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDollarProperty()", file="XmlNodeConverterTest.cs", label="var json2 = JsonConvert.SerializeXNode(doc)", span="162-162"];
m14_73 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDollarProperty()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(json1, json2)", span="164-164"];
m14_21 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="XmlNodeConverterTest.cs", label="ShiftBufferIfNeeded()", span="115-115"];
m14_181 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadInternal()", span="371-371"];
m14_274 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="XmlNodeConverterTest.cs", label="'\''", span="570-570"];
m14_47 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="XmlNodeConverterTest.cs", label="_quoteChar = quote", span="165-165"];
m14_122 [cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="329-329"];
m14_354 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="XmlNodeConverterTest.cs", label="return;", span="679-679"];
m14_355 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", span="627-627"];
m14_167 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeParseHandlingOffset()", file="XmlNodeConverterTest.cs", label="DateTimeOffset d = new DateTimeOffset(2012, 12, 12, 12, 44, 1, TimeSpan.FromHours(12).Add(TimeSpan.FromMinutes(34)))", span="393-393"];
m14_170 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeParseHandlingOffset()", file="XmlNodeConverterTest.cs", label="XDocument doc1 = JsonConvert.DeserializeObject<XDocument>(json, new JsonSerializerSettings\r\n            {\r\n                Converters = { new XmlNodeConverter() },\r\n                DateParseHandling = DateParseHandling.DateTimeOffset\r\n            })", span="398-402"];
m14_166 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeParseHandlingOffset()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeParseHandlingOffset()", span="391-391"];
m14_168 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeParseHandlingOffset()", file="XmlNodeConverterTest.cs", label="var x = new DateTimeOffsetContainer { Date = d }", span="394-394"];
m14_169 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeParseHandlingOffset()", file="XmlNodeConverterTest.cs", label="var json = JsonConvert.SerializeObject(x, Formatting.Indented)", span="396-396"];
m14_171 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeParseHandlingOffset()", file="XmlNodeConverterTest.cs", label="var xml = doc1.ToString()", span="404-404"];
m14_172 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeParseHandlingOffset()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''<Date>2012-12-12T12:44:01+12:34</Date>'', xml)", span="405-405"];
m14_173 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeParseHandlingOffset()", file="XmlNodeConverterTest.cs", label="string json2 = JsonConvert.SerializeObject(doc1, Formatting.Indented)", span="407-407"];
m14_174 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeParseHandlingOffset()", file="XmlNodeConverterTest.cs", label="DateTimeOffsetContainer x2 = JsonConvert.DeserializeObject<DateTimeOffsetContainer>(json2)", span="409-409"];
m14_175 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeParseHandlingOffset()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(x.Date, x2.Date)", span="411-411"];
m14_176 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeParseHandlingOffset()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeParseHandlingOffset()", span="391-391"];
m14_178 [cluster="System.TimeSpan.FromHours(double)", file="XmlNodeConverterTest.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m14_275 [cluster="Unk.CreateElement", file="XmlNodeConverterTest.cs", label="Entry Unk.CreateElement", span=""];
m14_278 [cluster="Unk.AppendChild", file="XmlNodeConverterTest.cs", label="Entry Unk.AppendChild", span=""];
m14_279 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes_Encoding()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes_Encoding()", span="653-653"];
m14_282 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes_Encoding()", file="XmlNodeConverterTest.cs", label="string json = SerializeXmlNode(node)", span="667-667"];
m14_283 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes_Encoding()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''xs!:Choice!'''': {\r\n    ''''@msdata:IsDataSet!'''': '''''''',\r\n    ''''@xmlns:xs!'''': ''''http://www.w3.org/2001/XMLSchema'''',\r\n    ''''@xmlns:msdata'''': ''''urn:schemas-microsoft-com:xml-msdata'''',\r\n    ''''?xml-stylesheet'''': ''''href=\''''classic.xsl\'''' type=\''''text/xml\'''''''',\r\n    ''''#cdata-section'''': ''''<Kiwi>true</Kiwi>''''\r\n  }\r\n}'', json)", span="669-677"];
m14_273 [cluster="Unk.CreateProcessingInstruction", file="XmlNodeConverterTest.cs", label="Entry Unk.CreateProcessingInstruction", span=""];
m14_214 [cluster="Unk.IsTrue", file="XmlNodeConverterTest.cs", label="Entry Unk.IsTrue", span=""];
m14_272 [cluster="Unk.Attribute", file="XmlNodeConverterTest.cs", label="Entry Unk.Attribute", span=""];
m14_281 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes_Encoding()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''<xs_x0021_:Choice_x0021_ msdata:IsDataSet_x0021_='''''''' xmlns:xs_x0021_=''''http://www.w3.org/2001/XMLSchema'''' xmlns:msdata=''''urn:schemas-microsoft-com:xml-msdata''''><?xml-stylesheet href=''''classic.xsl'''' type=''''text/xml''''?><![CDATA[<Kiwi>true</Kiwi>]]></xs_x0021_:Choice_x0021_>'', node.InnerXml)", span="665-665"];
m14_284 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes_Encoding()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes_Encoding()", span="653-653"];
m14_280 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes_Encoding()", file="XmlNodeConverterTest.cs", label="XmlNode node = DeserializeXmlNode(@''{\r\n  ''''xs!:Choice!'''': {\r\n    ''''@msdata:IsDataSet!'''': '''''''',\r\n    ''''@xmlns:xs!'''': ''''http://www.w3.org/2001/XMLSchema'''',\r\n    ''''@xmlns:msdata'''': ''''urn:schemas-microsoft-com:xml-msdata'''',\r\n    ''''?xml-stylesheet'''': ''''href=\''''classic.xsl\'''' type=\''''text/xml\'''''''',\r\n    ''''#cdata-section'''': ''''<Kiwi>true</Kiwi>''''\r\n  }\r\n}'')", span="655-663"];
m14_777 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Deserialize_XDocument_NoRoot()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(null, d.Root)", span="2796-2796"];
m14_778 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Deserialize_XDocument_NoRoot()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(null, d.Declaration)", span="2797-2797"];
m14_779 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Deserialize_XDocument_NoRoot()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Deserialize_XDocument_NoRoot()", span="2792-2792"];
m14_786 [cluster="XDeclaration.cstr", file="XmlNodeConverterTest.cs", label="Entry XDeclaration.cstr", span=""];
m14_111 [cluster="Unk.IsNull", file="XmlNodeConverterTest.cs", label="Entry Unk.IsNull", span=""];
m14_120 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="XmlNodeConverterTest.cs", label="return true;", span="291-291"];
m14_187 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GroupElementsOfTheSameName()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(@''<root>\r\n  <p>Text1 Text2<span>Span1</span><span>Span2</span></p>\r\n</root>'', doc.ToString())", span="425-427"];
m14_457 [cluster="char.IsLetterOrDigit(char)", file="XmlNodeConverterTest.cs", label="Entry char.IsLetterOrDigit(char)", span="0-0"];
m14_459 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="XmlNodeConverterTest.cs", label=true, span="862-862"];
m14_458 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="XmlNodeConverterTest.cs", label="int initialPosition = _charPos", span="859-859"];
m14_463 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="XmlNodeConverterTest.cs", label="ReadData(true) == 0", span="869-869"];
m14_460 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="XmlNodeConverterTest.cs", label="_chars[_charPos]", span="864-864"];
m14_461 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="XmlNodeConverterTest.cs", label="'\0'", span="866-866"];
m14_464 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="XmlNodeConverterTest.cs", label="throw JsonReaderException.Create(this, ''Unexpected end while parsing unquoted property name.'');", span="870-870"];
m14_462 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="XmlNodeConverterTest.cs", label="_charsUsed == _charPos", span="867-867"];
m14_465 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="XmlNodeConverterTest.cs", label="_stringReference = new StringReference(_chars, initialPosition, _charPos - initialPosition)", span="875-875"];
m14_22 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="XmlNodeConverterTest.cs", label="ReadStringIntoBuffer(quote)", span="116-116"];
m14_848 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementImplicitAttributeNamespace()", file="XmlNodeConverterTest.cs", label="Newtonsoft.Json.JsonTextReader", span=""];
m14_850 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementImplicitAttributeNamespace()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''<MyElement xmlns=''''http://example.com'''' />'', original.ToString())", span="2915-2915"];
m14_852 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementImplicitAttributeNamespace()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''{''''MyElement'''':{''''@xmlns'''':''''http://example.com''''}}'', json)", span="2918-2918"];
m14_854 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementImplicitAttributeNamespace()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''<MyElement xmlns=''''http://example.com'''' />'', deserialized.ToString())", span="2921-2921"];
m14_849 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementImplicitAttributeNamespace()", file="XmlNodeConverterTest.cs", label="var original = new XElement(''{http://example.com}MyElement'')", span="2914-2914"];
m14_851 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementImplicitAttributeNamespace()", file="XmlNodeConverterTest.cs", label="var json = JsonConvert.SerializeObject(original)", span="2917-2917"];
m14_853 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementImplicitAttributeNamespace()", file="XmlNodeConverterTest.cs", label="var deserialized = JsonConvert.DeserializeObject<XElement>(json)", span="2920-2920"];
m14_855 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementImplicitAttributeNamespace()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementImplicitAttributeNamespace()", span="2912-2912"];
m14_139 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlElement()", file="XmlNodeConverterTest.cs", label="var json = JsonConvert.SerializeObject(result, Formatting.Indented)", span="297-297"];
m14_140 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlElement()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(@''[\r\n  {\r\n    ''''Country'''': ''''6''''\r\n  },\r\n  {\r\n    ''''FinancialTransactionApprovalRequestUID'''': ''''79''''\r\n  },\r\n  {\r\n    ''''TransactionStatus'''': ''''Approved''''\r\n  },\r\n  {\r\n    ''''StatusChangeComment'''': ''''''''\r\n  },\r\n  {\r\n    ''''RequestedBy'''': ''''Someone''''\r\n  }\r\n]'', json)", span="299-315"];
m14_141 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlElement()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlElement()", span="281-281"];
m14_15 [cluster="Unk.SerializeXmlNode", file="XmlNodeConverterTest.cs", label="Entry Unk.SerializeXmlNode", span=""];
m14_16 [cluster="XmlNodeReader.cstr", file="XmlNodeConverterTest.cs", label="Entry XmlNodeReader.cstr", span=""];
m14_599 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="XmlNodeConverterTest.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m14_600 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", span="34-34"];
m14_473 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Encoding()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Encoding()", span="1399-1399"];
m14_474 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Encoding()", file="XmlNodeConverterTest.cs", label="XmlDocument doc = new XmlDocument()", span="1401-1401"];
m14_132 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="XmlNodeConverterTest.cs", label="return ReadAsBytesInternal();", span="321-321"];
m14_48 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseString(char)", span="111-111"];
m14_185 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", span="1026-1026"];
m14_188 [cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", span="108-108"];
m14_46 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="XmlNodeConverterTest.cs", label="SetToken(JsonToken.String, text, false)", span="164-164"];
m14_133 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadAsBytes()", span="319-319"];
m14_582 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="358-358"];
m14_889 [cluster="List<JsonConverter>.cstr", file="XmlNodeConverterTest.cs", label="Entry List<JsonConverter>.cstr", span=""];
m14_865 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentImplicitAttributeNamespace()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentImplicitAttributeNamespace()", span="2938-2938"];
m14_867 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentImplicitAttributeNamespace()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''<MyElement xmlns=''''http://example.com'''' />'', original.ToString())", span="2941-2941"];
m14_869 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentImplicitAttributeNamespace()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''{''''MyElement'''':{''''@xmlns'''':''''http://example.com''''}}'', json)", span="2944-2944"];
m14_871 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentImplicitAttributeNamespace()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''<MyElement xmlns=''''http://example.com'''' />'', deserialized.ToString())", span="2947-2947"];
m14_866 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentImplicitAttributeNamespace()", file="XmlNodeConverterTest.cs", label="var original = new XDocument(new XElement(''{http://example.com}MyElement''))", span="2940-2940"];
m14_868 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentImplicitAttributeNamespace()", file="XmlNodeConverterTest.cs", label="var json = JsonConvert.SerializeObject(original)", span="2943-2943"];
m14_870 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentImplicitAttributeNamespace()", file="XmlNodeConverterTest.cs", label="var deserialized = JsonConvert.DeserializeObject<XDocument>(json)", span="2946-2946"];
m14_872 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentImplicitAttributeNamespace()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentImplicitAttributeNamespace()", span="2938-2938"];
m14_293 [cluster="Newtonsoft.Json.JsonTextReader.ProcessLineFeed()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.ProcessLineFeed()", span="1010-1010"];
m14_890 [cluster="System.Text.StringBuilder.StringBuilder(int)", file="XmlNodeConverterTest.cs", label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0"];
m14_402 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="string arrayJsonText = SerializeXmlNode(arrayDoc)", span="1105-1105"];
m14_856 [cluster="XElement.cstr", file="XmlNodeConverterTest.cs", label="Entry XElement.cstr", span=""];
m14_827 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Local_Precision()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Local_Precision()", span="2875-2875"];
m14_828 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Local_Precision()", file="XmlNodeConverterTest.cs", label="DateTime dt = DateTime.Parse(''2014-01-23T00:00:00.1234567+01:00'')", span="2877-2877"];
m14_401 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="arrayDoc.LoadXml(arrayXml)", span="1103-1103"];
m14_563 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataWithNullValue()", file="XmlNodeConverterTest.cs", label="string json = @''{\r\n  ''''$id'''': null\r\n}''", span="1762-1764"];
m14_564 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataWithNullValue()", file="XmlNodeConverterTest.cs", label="XmlNode node = JsonConvert.DeserializeXmlNode(json, ''root'')", span="1766-1766"];
m14_565 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataWithNullValue()", file="XmlNodeConverterTest.cs", label="string xml = GetIndentedInnerXml(node)", span="1767-1767"];
m14_136 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="XmlNodeConverterTest.cs", label="return ReadAsDecimalInternal();", span="330-330"];
m14_137 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", span="328-328"];
m14_135 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", span="328-328"];
m14_345 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", span="953-953"];
m14_346 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", file="XmlNodeConverterTest.cs", label="XmlWriterSettings settings = new XmlWriterSettings()", span="955-955"];
m14_347 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", file="XmlNodeConverterTest.cs", label="settings.Indent = true", span="956-956"];
m14_348 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", file="XmlNodeConverterTest.cs", label="StringWriter sw = new StringWriter()", span="958-958"];
m14_349 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", file="XmlNodeConverterTest.cs", label="XmlWriter writer = XmlWriter.Create(sw, settings)", span="960-960"];
m14_350 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", file="XmlNodeConverterTest.cs", label="node.WriteTo(writer)", span="962-962"];
m14_351 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", file="XmlNodeConverterTest.cs", label="return sw.ToString();", span="965-965"];
m14_352 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", span="953-953"];
m14_894 [file="XmlNodeConverterTest.cs", label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", span=""];
m14_895 [file="XmlNodeConverterTest.cs", label=json, span=""];
m14_896 [file="XmlNodeConverterTest.cs", label=json, span=""];
m14_898 [file="XmlNodeConverterTest.cs", label=json, span=""];
m14_900 [file="XmlNodeConverterTest.cs", label=json, span=""];
m14_899 [file="XmlNodeConverterTest.cs", label=json, span=""];
m14_897 [file="XmlNodeConverterTest.cs", label=json, span=""];
m0_688 -> m0_689  [key=0, style=solid];
m0_688 -> m0_690  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_688 -> m0_691  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_688 -> m0_688  [color=darkorchid, key=3, label="method methodReturn string ResolveExtensionDataName", style=bold];
m0_688 -> m0_24  [key=2, style=dotted];
m0_688 -> m0_25  [key=2, style=dotted];
m0_689 -> m0_690  [key=0, style=solid];
m0_689 -> m0_691  [key=0, style=solid];
m0_689 -> m0_26  [key=2, style=dotted];
m0_690 -> m0_692  [key=0, style=solid];
m0_690 -> m0_693  [key=2, style=dotted];
m0_690 -> m0_26  [key=2, style=dotted];
m0_690 -> m0_691  [key=0, style=solid];
m0_691 -> m0_692  [key=0, style=solid];
m0_691 -> m0_26  [key=2, style=dotted];
m0_692 -> m0_688  [color=blue, key=0, style=bold];
m0_692 -> m0_24  [key=2, style=dotted];
m0_692 -> m0_25  [key=2, style=dotted];
m0_692 -> m0_693  [key=0, style=solid];
m0_153 -> m0_154  [key=0, style=solid];
m0_153 -> m0_26  [key=2, style=dotted];
m0_191 -> m0_26  [key=2, style=dotted];
m0_191 -> m0_192  [key=0, style=solid];
m0_904 -> m0_905  [key=0, style=solid];
m0_939 -> m0_26  [key=2, style=dotted];
m0_939 -> m0_940  [key=0, style=solid];
m0_939 -> m0_952  [key=2, style=dotted];
m0_934 -> m0_22  [key=2, style=dotted];
m0_934 -> m0_23  [key=2, style=dotted];
m0_934 -> m0_935  [key=0, style=solid];
m0_934 -> m0_954  [key=2, style=dotted];
m0_934 -> m0_938  [color=darkseagreen4, key=1, label=jsonObject, style=dashed];
m0_932 -> m0_939  [color=darkseagreen4, key=1, label=json, style=dashed];
m0_932 -> m0_934  [color=darkseagreen4, key=1, label=json, style=dashed];
m0_932 -> m0_933  [key=0, style=solid];
m0_932 -> m0_952  [key=2, style=dotted];
m0_938 -> m0_939  [key=0, style=solid];
m0_938 -> m0_955  [key=2, style=dotted];
m0_935 -> m0_939  [color=darkseagreen4, key=1, label=sb, style=dashed];
m0_935 -> m0_936  [key=0, style=solid];
m0_935 -> m0_941  [key=2, style=dotted];
m0_933 -> m0_934  [key=0, style=solid];
m0_933 -> m0_938  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m0_933 -> m0_953  [key=2, style=dotted];
m0_905 -> m0_932  [color=darkseagreen4, key=1, label=sb, style=dashed];
m0_905 -> m0_906  [key=0, style=solid];
m0_905 -> m0_941  [key=2, style=dotted];
m0_931 -> m0_932  [key=0, style=solid];
m0_931 -> m0_506  [key=2, style=dotted];
m0_937 -> m0_938  [key=0, style=solid];
m0_937 -> m0_503  [key=2, style=dotted];
m0_936 -> m0_937  [key=0, style=solid];
m0_936 -> m0_942  [key=2, style=dotted];
m0_906 -> m0_907  [key=0, style=solid];
m0_906 -> m0_942  [key=2, style=dotted];
m0_907 -> m0_931  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m0_907 -> m0_908  [key=0, style=solid];
m0_907 -> m0_503  [key=2, style=dotted];
m0_907 -> m0_909  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m0_907 -> m0_910  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m0_907 -> m0_911  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m0_907 -> m0_912  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m0_907 -> m0_913  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m0_907 -> m0_914  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m0_907 -> m0_915  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m0_907 -> m0_916  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m0_907 -> m0_919  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m0_907 -> m0_921  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m0_907 -> m0_922  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m0_907 -> m0_923  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m0_907 -> m0_924  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m0_907 -> m0_925  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m0_907 -> m0_926  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m0_907 -> m0_927  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m0_907 -> m0_928  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m0_907 -> m0_929  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m0_907 -> m0_930  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m0_930 -> m0_931  [key=0, style=solid];
m0_930 -> m0_951  [key=2, style=dotted];
m0_908 -> m0_909  [key=0, style=solid];
m0_908 -> m0_943  [key=2, style=dotted];
m0_909 -> m0_910  [key=0, style=solid];
m0_909 -> m0_944  [key=2, style=dotted];
m0_910 -> m0_911  [key=0, style=solid];
m0_910 -> m0_945  [key=2, style=dotted];
m0_911 -> m0_912  [key=0, style=solid];
m0_911 -> m0_946  [key=2, style=dotted];
m0_912 -> m0_913  [key=0, style=solid];
m0_912 -> m0_947  [key=2, style=dotted];
m0_913 -> m0_914  [key=0, style=solid];
m0_913 -> m0_946  [key=2, style=dotted];
m0_914 -> m0_915  [key=0, style=solid];
m0_914 -> m0_948  [key=2, style=dotted];
m0_915 -> m0_916  [key=0, style=solid];
m0_915 -> m0_946  [key=2, style=dotted];
m0_916 -> m0_917  [key=0, style=solid];
m0_916 -> m0_943  [key=2, style=dotted];
m0_919 -> m0_920  [key=0, style=solid];
m0_919 -> m0_947  [key=2, style=dotted];
m0_921 -> m0_922  [key=0, style=solid];
m0_921 -> m0_945  [key=2, style=dotted];
m0_922 -> m0_923  [key=0, style=solid];
m0_922 -> m0_946  [key=2, style=dotted];
m0_923 -> m0_924  [key=0, style=solid];
m0_923 -> m0_949  [key=2, style=dotted];
m0_924 -> m0_925  [key=0, style=solid];
m0_924 -> m0_950  [key=2, style=dotted];
m0_925 -> m0_926  [key=0, style=solid];
m0_925 -> m0_947  [key=2, style=dotted];
m0_926 -> m0_506  [key=2, style=dotted];
m0_926 -> m0_927  [key=0, style=solid];
m0_927 -> m0_928  [key=0, style=solid];
m0_927 -> m0_950  [key=2, style=dotted];
m0_928 -> m0_929  [key=0, style=solid];
m0_928 -> m0_948  [key=2, style=dotted];
m0_929 -> m0_930  [key=0, style=solid];
m0_929 -> m0_951  [key=2, style=dotted];
m0_917 -> m0_919  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_917 -> m0_918  [key=0, style=solid];
m0_917 -> m0_920  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_918 -> m0_919  [key=0, style=solid];
m0_918 -> m0_921  [key=0, style=solid];
m0_920 -> m0_918  [key=0, style=solid];
m0_920 -> m0_920  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_940 -> m0_904  [color=blue, key=0, style=bold];
m0_569 -> m0_26  [key=2, style=dotted];
m0_569 -> m0_570  [key=0, style=solid];
m0_30 -> m0_31  [key=0, style=solid];
m0_30 -> m0_48  [key=2, style=dotted];
m0_30 -> m0_49  [key=2, style=dotted];
m0_30 -> m0_51  [key=2, style=dotted];
m0_30 -> m0_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_30 -> m0_33  [color=darkseagreen4, key=1, label=defaultMembers, style=dashed];
m0_34 -> m0_26  [key=2, style=dotted];
m0_34 -> m0_35  [key=0, style=solid];
m0_34 -> m0_31  [key=0, style=solid];
m0_34 -> m0_54  [key=2, style=dotted];
m0_36 -> m0_26  [key=2, style=dotted];
m0_36 -> m0_37  [key=0, style=solid];
m0_36 -> m0_31  [key=0, style=solid];
m0_36 -> m0_54  [key=2, style=dotted];
m0_39 -> m0_26  [key=2, style=dotted];
m0_39 -> m0_40  [key=0, style=solid];
m0_39 -> m0_31  [key=0, style=solid];
m0_39 -> m0_56  [key=2, style=dotted];
m0_32 -> m0_22  [key=2, style=dotted];
m0_32 -> m0_23  [key=2, style=dotted];
m0_32 -> m0_34  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_32 -> m0_36  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_32 -> m0_39  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_35  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_32 -> m0_37  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_32 -> m0_44  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_32 -> m0_38  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_32 -> m0_40  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_32 -> m0_31  [key=0, style=solid];
m0_32 -> m0_52  [key=2, style=dotted];
m0_33 -> m0_24  [key=2, style=dotted];
m0_33 -> m0_25  [key=2, style=dotted];
m0_33 -> m0_34  [key=0, style=solid];
m0_33 -> m0_35  [key=0, style=solid];
m0_33 -> m0_53  [key=2, style=dotted];
m0_35 -> m0_24  [key=2, style=dotted];
m0_35 -> m0_25  [key=2, style=dotted];
m0_35 -> m0_36  [key=0, style=solid];
m0_35 -> m0_37  [key=0, style=solid];
m0_35 -> m0_55  [key=2, style=dotted];
m0_38 -> m0_24  [key=2, style=dotted];
m0_38 -> m0_25  [key=2, style=dotted];
m0_38 -> m0_39  [key=0, style=solid];
m0_38 -> m0_31  [key=0, style=solid];
m0_38 -> m0_54  [key=2, style=dotted];
m0_40 -> m0_24  [key=2, style=dotted];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_28  [key=2, style=dotted];
m0_40 -> m0_31  [key=0, style=solid];
m0_40 -> m0_54  [key=2, style=dotted];
m0_37 -> m0_38  [key=0, style=solid];
m0_37 -> m0_42  [key=2, style=dotted];
m0_37 -> m0_43  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_37 -> m0_39  [key=0, style=solid];
m0_37 -> m0_55  [key=2, style=dotted];
m0_31 -> m0_32  [key=0, style=solid];
m0_31 -> m0_45  [key=0, style=solid];
m0_31 -> m0_33  [color=darkseagreen4, key=1, label=member, style=dashed];
m0_31 -> m0_34  [color=darkseagreen4, key=1, label=member, style=dashed];
m0_31 -> m0_35  [color=darkseagreen4, key=1, label=member, style=dashed];
m0_31 -> m0_36  [color=darkseagreen4, key=1, label=member, style=dashed];
m0_31 -> m0_37  [color=darkseagreen4, key=1, label=member, style=dashed];
m0_31 -> m0_38  [color=darkseagreen4, key=1, label=member, style=dashed];
m0_31 -> m0_39  [color=darkseagreen4, key=1, label=member, style=dashed];
m0_31 -> m0_40  [color=darkseagreen4, key=1, label=member, style=dashed];
m0_41 -> m0_30  [color=blue, key=0, style=bold];
m0_41 -> m0_42  [key=0, style=solid];
m0_41 -> m0_45  [key=0, style=solid];
m0_41 -> m0_44  [color=darkseagreen4, key=1, label=member, style=dashed];
m0_505 -> m0_498  [color=blue, key=0, style=bold];
m0_272 -> m0_273  [key=0, style=solid];
m0_272 -> m0_274  [key=0, style=solid];
m0_244 -> m0_245  [key=0, style=solid];
m0_244 -> m0_246  [key=0, style=solid];
m0_537 -> m0_24  [key=2, style=dotted];
m0_537 -> m0_538  [key=0, style=solid];
m0_537 -> m0_28  [key=2, style=dotted];
m0_1819 -> m0_1820  [key=0, style=solid];
m0_57 -> m0_58  [key=0, style=solid];
m0_57 -> m0_26  [key=2, style=dotted];
m0_61 -> m0_62  [key=0, style=solid];
m0_61 -> m0_46  [key=2, style=dotted];
m0_58 -> m0_59  [key=0, style=solid];
m0_58 -> m0_60  [key=2, style=dotted];
m0_58 -> m0_24  [key=2, style=dotted];
m0_58 -> m0_28  [key=2, style=dotted];
m0_59 -> m0_57  [color=blue, key=0, style=bold];
m0_59 -> m0_47  [color=blue, key=0, style=bold];
m0_62 -> m0_63  [key=0, style=solid];
m0_62 -> m0_60  [key=2, style=dotted];
m0_63 -> m0_61  [color=blue, key=0, style=bold];
m0_63 -> m0_64  [key=0, style=solid];
m0_117 -> m0_118  [key=0, style=solid];
m0_117 -> m0_119  [key=2, style=dotted];
m0_116 -> m0_117  [key=0, style=solid];
m0_116 -> m0_114  [color=blue, key=0, style=bold];
m0_118 -> m0_116  [color=blue, key=0, style=bold];
m0_118 -> m0_119  [key=0, style=solid];
m0_127 -> m0_128  [key=0, style=solid];
m0_127 -> m0_129  [color=darkseagreen4, key=1, label="?", style=dashed];
m0_127 -> m0_130  [color=darkseagreen4, key=1, label="?", style=dashed];
m0_127 -> m0_26  [key=2, style=dotted];
m0_136 -> m0_137  [key=0, style=solid];
m0_136 -> m0_140  [color=darkseagreen4, key=1, label="?", style=dashed];
m0_136 -> m0_142  [color=darkseagreen4, key=1, label="?", style=dashed];
m0_136 -> m0_143  [color=darkseagreen4, key=1, label="?", style=dashed];
m0_136 -> m0_144  [color=darkseagreen4, key=1, label="?", style=dashed];
m0_136 -> m0_151  [color=darkseagreen4, key=1, label="?", style=dashed];
m0_136 -> m0_134  [color=blue, key=0, style=bold];
m0_128 -> m0_129  [key=0, style=solid];
m0_128 -> m0_50  [key=2, style=dotted];
m0_128 -> m0_130  [color=darkseagreen4, key=1, label=m, style=dashed];
m0_128 -> m0_131  [color=darkseagreen4, key=1, label=m, style=dashed];
m0_128 -> m0_24  [key=2, style=dotted];
m0_128 -> m0_25  [key=2, style=dotted];
m0_129 -> m0_130  [key=0, style=solid];
m0_129 -> m0_133  [key=2, style=dotted];
m0_129 -> m0_134  [key=2, style=dotted];
m0_129 -> m0_26  [key=2, style=dotted];
m0_130 -> m0_131  [key=0, style=solid];
m0_130 -> m0_135  [key=2, style=dotted];
m0_130 -> m0_134  [key=2, style=dotted];
m0_130 -> m0_24  [key=2, style=dotted];
m0_130 -> m0_25  [key=2, style=dotted];
m0_131 -> m0_132  [key=0, style=solid];
m0_131 -> m0_26  [key=2, style=dotted];
m0_132 -> m0_127  [color=blue, key=0, style=bold];
m0_132 -> m0_133  [key=0, style=solid];
m0_132 -> m0_42  [key=2, style=dotted];
m0_132 -> m0_134  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_137 -> m0_138  [key=0, style=solid];
m0_137 -> m0_153  [key=2, style=dotted];
m0_140 -> m0_141  [key=0, style=solid];
m0_140 -> m0_142  [key=0, style=solid];
m0_140 -> m0_154  [key=2, style=dotted];
m0_142 -> m0_143  [key=0, style=solid];
m0_142 -> m0_144  [key=0, style=solid];
m0_142 -> m0_155  [key=2, style=dotted];
m0_142 -> m0_26  [key=2, style=dotted];
m0_143 -> m0_152  [key=0, style=solid];
m0_143 -> m0_156  [key=2, style=dotted];
m0_143 -> m0_157  [key=2, style=dotted];
m0_143 -> m0_158  [key=2, style=dotted];
m0_143 -> m0_144  [key=0, style=solid];
m0_143 -> m0_24  [key=2, style=dotted];
m0_143 -> m0_25  [key=2, style=dotted];
m0_144 -> m0_145  [key=0, style=solid];
m0_144 -> m0_159  [key=2, style=dotted];
m0_144 -> m0_146  [color=darkseagreen4, key=1, label=t, style=dashed];
m0_144 -> m0_26  [key=2, style=dotted];
m0_151 -> m0_152  [color=green, key=0, style=solid];
m0_151 -> m0_156  [key=2, style=dotted];
m0_151 -> m0_157  [key=2, style=dotted];
m0_151 -> m0_158  [key=2, style=dotted];
m0_151 -> m0_24  [key=2, style=dotted];
m0_151 -> m0_25  [key=2, style=dotted];
m0_138 -> m0_139  [key=0, style=solid];
m0_138 -> m0_140  [key=0, style=solid];
m0_139 -> m0_152  [key=0, style=solid];
m0_139 -> m0_140  [key=0, style=solid];
m0_139 -> m0_22  [key=2, style=dotted];
m0_139 -> m0_23  [key=2, style=dotted];
m0_139 -> m0_141  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_139 -> m0_142  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_139 -> m0_143  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_139 -> m0_144  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_139 -> m0_145  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_139 -> m0_146  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_139 -> m0_147  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_139 -> m0_148  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_139 -> m0_149  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_139 -> m0_150  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_139 -> m0_151  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_139 -> m0_153  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_139 -> m0_154  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_139 -> m0_155  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_139 -> m0_156  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_139 -> m0_157  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_139 -> m0_158  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_139 -> m0_159  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_139 -> m0_160  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_141 -> m0_152  [key=0, style=solid];
m0_141 -> m0_142  [key=0, style=solid];
m0_141 -> m0_24  [key=2, style=dotted];
m0_141 -> m0_25  [key=2, style=dotted];
m0_145 -> m0_146  [key=0, style=solid];
m0_145 -> m0_26  [key=2, style=dotted];
m0_146 -> m0_147  [key=0, style=solid];
m0_146 -> m0_151  [key=0, style=solid];
m0_146 -> m0_160  [key=2, style=dotted];
m0_146 -> m0_148  [color=darkseagreen4, key=1, label=dictionaryType, style=dashed];
m0_146 -> m0_26  [key=2, style=dotted];
m0_147 -> m0_148  [key=0, style=solid];
m0_147 -> m0_161  [key=2, style=dotted];
m0_147 -> m0_149  [color=darkseagreen4, key=1, label=keyType, style=dashed];
m0_147 -> m0_24  [key=2, style=dotted];
m0_147 -> m0_25  [key=2, style=dotted];
m0_148 -> m0_149  [key=0, style=solid];
m0_148 -> m0_161  [key=2, style=dotted];
m0_148 -> m0_26  [key=2, style=dotted];
m0_149 -> m0_150  [key=0, style=solid];
m0_149 -> m0_151  [key=0, style=solid];
m0_149 -> m0_162  [key=2, style=dotted];
m0_149 -> m0_26  [key=2, style=dotted];
m0_150 -> m0_152  [key=0, style=solid];
m0_150 -> m0_151  [key=0, style=solid];
m0_150 -> m0_26  [key=2, style=dotted];
m0_152 -> m0_136  [color=blue, key=0, style=bold];
m0_152 -> m0_153  [color=green, key=0, style=solid];
m0_152 -> m0_26  [color=green, key=2, style=dotted];
m0_207 -> m0_211  [key=0, style=solid];
m0_207 -> m0_213  [key=2, style=dotted];
m0_207 -> m0_214  [key=2, style=dotted];
m0_204 -> m0_205  [key=0, style=solid];
m0_204 -> m0_212  [key=2, style=dotted];
m0_204 -> m0_210  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m0_204 -> m0_26  [key=2, style=dotted];
m0_219 -> m0_220  [key=0, style=solid];
m0_219 -> m0_212  [key=2, style=dotted];
m0_219 -> m0_222  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m0_219 -> m0_26  [key=2, style=dotted];
m0_206 -> m0_207  [key=0, style=solid];
m0_206 -> m0_208  [key=0, style=solid];
m0_209 -> m0_210  [key=0, style=solid];
m0_209 -> m0_216  [key=2, style=dotted];
m0_209 -> m0_26  [key=2, style=dotted];
m0_209 -> m0_222  [key=2, style=dotted];
m0_208 -> m0_209  [key=0, style=solid];
m0_208 -> m0_215  [key=2, style=dotted];
m0_208 -> m0_210  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m0_210 -> m0_211  [key=0, style=solid];
m0_210 -> m0_217  [key=2, style=dotted];
m0_210 -> m0_26  [key=2, style=dotted];
m0_210 -> m0_222  [key=2, style=dotted];
m0_222 -> m0_223  [key=0, style=solid];
m0_222 -> m0_224  [key=2, style=dotted];
m0_203 -> m0_204  [key=0, style=solid];
m0_203 -> m0_209  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_203 -> m0_210  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_203 -> m0_207  [key=2, style=dotted];
m0_205 -> m0_206  [key=0, style=solid];
m0_205 -> m0_210  [key=0, style=solid];
m0_205 -> m0_194  [color=blue, key=0, style=bold];
m0_211 -> m0_203  [color=blue, key=0, style=bold];
m0_211 -> m0_26  [key=2, style=dotted];
m0_211 -> m0_212  [key=0, style=solid];
m0_211 -> m0_222  [key=2, style=dotted];
m0_218 -> m0_219  [key=0, style=solid];
m0_218 -> m0_26  [key=2, style=dotted];
m0_218 -> m0_222  [key=2, style=dotted];
m0_220 -> m0_221  [key=0, style=solid];
m0_220 -> m0_222  [key=0, style=solid];
m0_220 -> m0_26  [key=2, style=dotted];
m0_221 -> m0_223  [key=0, style=solid];
m0_221 -> m0_208  [color=blue, key=0, style=bold];
m0_223 -> m0_218  [color=blue, key=0, style=bold];
m0_223 -> m0_224  [key=0, style=solid];
m0_223 -> m0_229  [key=2, style=dotted];
m0_223 -> m0_230  [key=2, style=dotted];
m0_252 -> m0_253  [key=0, style=solid];
m0_253 -> m0_254  [key=0, style=solid];
m0_253 -> m0_154  [key=2, style=dotted];
m0_254 -> m0_252  [color=blue, key=0, style=bold];
m0_254 -> m0_255  [key=0, style=solid];
m0_442 -> m0_443  [key=0, style=solid];
m0_442 -> m0_119  [key=2, style=dotted];
m0_442 -> m0_26  [key=2, style=dotted];
m0_441 -> m0_442  [key=0, style=solid];
m0_441 -> m0_26  [key=2, style=dotted];
m0_443 -> m0_441  [color=blue, key=0, style=bold];
m0_443 -> m0_26  [key=2, style=dotted];
m0_443 -> m0_444  [key=0, style=solid];
m0_557 -> m0_558  [key=0, style=solid];
m0_557 -> m0_42  [key=2, style=dotted];
m0_557 -> m0_561  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_558 -> m0_559  [key=0, style=solid];
m0_558 -> m0_555  [key=0, style=solid];
m0_558 -> m0_558  [color=darkseagreen4, key=1, label=j, style=dashed];
m0_559 -> m0_557  [color=blue, key=0, style=bold];
m0_559 -> m0_549  [color=blue, key=0, style=bold];
m0_667 -> m0_668  [key=0, style=solid];
m0_667 -> m0_217  [key=2, style=dotted];
m0_667 -> m0_25  [key=2, style=dotted];
m0_667 -> m0_252  [key=2, style=dotted];
m0_666 -> m0_667  [key=0, style=solid];
m0_666 -> m0_22  [key=2, style=dotted];
m0_666 -> m0_23  [key=2, style=dotted];
m0_666 -> m0_668  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_666 -> m0_671  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_668 -> m0_666  [color=blue, key=0, style=bold];
m0_668 -> m0_669  [key=0, style=solid];
m0_668 -> m0_42  [key=2, style=dotted];
m0_668 -> m0_670  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_682 -> m0_683  [key=0, style=solid];
m0_682 -> m0_212  [key=2, style=dotted];
m0_682 -> m0_26  [key=2, style=dotted];
m0_681 -> m0_682  [key=0, style=solid];
m0_681 -> m0_24  [key=2, style=dotted];
m0_681 -> m0_25  [key=2, style=dotted];
m0_683 -> m0_681  [color=blue, key=0, style=bold];
m0_683 -> m0_24  [key=2, style=dotted];
m0_683 -> m0_25  [key=2, style=dotted];
m0_683 -> m0_684  [key=0, style=solid];
m0_465 -> m0_22  [key=2, style=dotted];
m0_465 -> m0_466  [key=0, style=solid];
m0_562 -> m0_22  [key=2, style=dotted];
m0_562 -> m0_23  [key=2, style=dotted];
m0_562 -> m0_563  [key=0, style=solid];
m0_562 -> m0_560  [key=2, style=dotted];
m0_562 -> m0_565  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m0_562 -> m0_566  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m0_562 -> m0_553  [color=darkorchid, key=3, label="Parameter variable System.Reflection.MemberInfo member", style=bold];
m0_578 -> m0_22  [key=2, style=dotted];
m0_578 -> m0_23  [key=2, style=dotted];
m0_578 -> m0_579  [key=0, style=solid];
m0_578 -> m0_560  [key=2, style=dotted];
m0_578 -> m0_581  [key=0, style=solid];
m0_112 -> m0_24  [key=2, style=dotted];
m0_112 -> m0_113  [key=0, style=solid];
m0_135 -> m0_24  [key=2, style=dotted];
m0_135 -> m0_136  [key=0, style=solid];
m0_172 -> m0_24  [key=2, style=dotted];
m0_172 -> m0_173  [key=0, style=solid];
m0_172 -> m0_174  [key=0, style=solid];
m0_172 -> m0_193  [key=2, style=dotted];
m0_279 -> m0_24  [key=2, style=dotted];
m0_279 -> m0_279  [key=0, style=solid];
m0_279 -> m0_280  [key=0, style=solid];
m0_279 -> m0_270  [key=2, style=dotted];
m0_279 -> m0_281  [color=darkseagreen4, key=1, label=matchingMemberProperty, style=dashed];
m0_297 -> m0_24  [key=2, style=dotted];
m0_297 -> m0_298  [key=0, style=solid];
m0_297 -> m0_319  [key=2, style=dotted];
m0_297 -> m0_299  [color=darkseagreen4, key=1, label=property, style=dashed];
m0_297 -> m0_301  [color=darkseagreen4, key=1, label=property, style=dashed];
m0_297 -> m0_302  [color=darkseagreen4, key=1, label=property, style=dashed];
m0_297 -> m0_303  [color=darkseagreen4, key=1, label=property, style=dashed];
m0_297 -> m0_305  [color=darkseagreen4, key=1, label=property, style=dashed];
m0_297 -> m0_306  [color=darkseagreen4, key=1, label=property, style=dashed];
m0_297 -> m0_307  [color=darkseagreen4, key=1, label=property, style=dashed];
m0_297 -> m0_308  [color=darkseagreen4, key=1, label=property, style=dashed];
m0_297 -> m0_309  [color=darkseagreen4, key=1, label=property, style=dashed];
m0_297 -> m0_310  [color=darkseagreen4, key=1, label=property, style=dashed];
m0_297 -> m0_311  [color=darkseagreen4, key=1, label=property, style=dashed];
m0_297 -> m0_312  [color=darkseagreen4, key=1, label=property, style=dashed];
m0_297 -> m0_313  [color=darkseagreen4, key=1, label=property, style=dashed];
m0_297 -> m0_314  [color=darkseagreen4, key=1, label=property, style=dashed];
m0_297 -> m0_315  [color=darkseagreen4, key=1, label=property, style=dashed];
m0_297 -> m0_316  [color=darkseagreen4, key=1, label=property, style=dashed];
m0_297 -> m0_317  [color=darkseagreen4, key=1, label=property, style=dashed];
m0_310 -> m0_24  [key=2, style=dotted];
m0_310 -> m0_310  [key=0, style=solid];
m0_310 -> m0_311  [key=0, style=solid];
m0_864 -> m0_24  [key=2, style=dotted];
m0_864 -> m0_865  [key=0, style=solid];
m0_899 -> m0_24  [key=2, style=dotted];
m0_899 -> m0_900  [key=0, style=solid];
m0_902 -> m0_24  [key=2, style=dotted];
m0_902 -> m0_903  [key=0, style=solid];
m0_1077 -> m0_24  [key=2, style=dotted];
m0_1077 -> m0_1078  [key=0, style=solid];
m0_1155 -> m0_24  [key=2, style=dotted];
m0_1155 -> m0_1156  [key=0, style=solid];
m0_1400 -> m0_24  [key=2, style=dotted];
m0_1400 -> m0_1401  [key=0, style=solid];
m0_1407 -> m0_24  [key=2, style=dotted];
m0_1407 -> m0_1408  [key=0, style=solid];
m0_1414 -> m0_24  [key=2, style=dotted];
m0_1414 -> m0_1415  [key=0, style=solid];
m0_1421 -> m0_24  [key=2, style=dotted];
m0_1421 -> m0_1422  [key=0, style=solid];
m0_1428 -> m0_24  [key=2, style=dotted];
m0_1428 -> m0_1429  [key=0, style=solid];
m0_1561 -> m0_24  [key=2, style=dotted];
m0_1561 -> m0_1562  [key=0, style=solid];
m0_1569 -> m0_24  [key=2, style=dotted];
m0_1569 -> m0_1570  [key=0, style=solid];
m0_1600 -> m0_24  [key=2, style=dotted];
m0_1600 -> m0_1601  [key=0, style=solid];
m0_1617 -> m0_24  [key=2, style=dotted];
m0_1617 -> m0_25  [key=2, style=dotted];
m0_1617 -> m0_1618  [key=0, style=solid];
m0_1781 -> m0_24  [key=2, style=dotted];
m0_1781 -> m0_1782  [key=0, style=solid];
m0_1876 -> m0_24  [key=2, style=dotted];
m0_1876 -> m0_25  [key=2, style=dotted];
m0_1876 -> m0_1877  [key=0, style=solid];
m0_1908 -> m0_24  [key=2, style=dotted];
m0_1908 -> m0_25  [key=2, style=dotted];
m0_1908 -> m0_1909  [key=0, style=solid];
m0_1911 -> m0_24  [key=2, style=dotted];
m0_1911 -> m0_25  [key=2, style=dotted];
m0_1911 -> m0_1912  [key=0, style=solid];
m0_2033 -> m0_24  [key=2, style=dotted];
m0_2033 -> m0_2034  [key=0, style=solid];
m0_2036 -> m0_24  [key=2, style=dotted];
m0_2036 -> m0_2037  [key=0, style=solid];
m0_2039 -> m0_24  [key=2, style=dotted];
m0_2039 -> m0_2040  [key=0, style=solid];
m0_2042 -> m0_24  [key=2, style=dotted];
m0_2042 -> m0_2043  [key=0, style=solid];
m0_2045 -> m0_24  [key=2, style=dotted];
m0_2045 -> m0_2046  [key=0, style=solid];
m0_2048 -> m0_24  [key=2, style=dotted];
m0_2048 -> m0_2049  [key=0, style=solid];
m0_44 -> m0_46  [key=2, style=dotted];
m0_44 -> m0_45  [key=0, style=solid];
m0_44 -> m0_41  [key=0, style=solid];
m0_44 -> m0_54  [key=2, style=dotted];
m0_64 -> m0_46  [key=2, style=dotted];
m0_64 -> m0_65  [key=0, style=solid];
m0_64 -> m0_20  [color=darkorchid, key=3, label="Parameter variable System.Type objectType", style=bold];
m0_67 -> m0_46  [key=2, style=dotted];
m0_67 -> m0_68  [key=0, style=solid];
m0_70 -> m0_46  [key=2, style=dotted];
m0_70 -> m0_71  [key=0, style=solid];
m0_70 -> m0_104  [key=2, style=dotted];
m0_70 -> m0_105  [key=2, style=dotted];
m0_85 -> m0_86  [key=0, style=solid];
m0_85 -> m0_87  [key=2, style=dotted];
m0_85 -> m0_97  [key=0, style=solid];
m0_85 -> m0_110  [key=2, style=dotted];
m0_85 -> m0_105  [key=2, style=dotted];
m0_115 -> m0_117  [key=2, style=dotted];
m0_115 -> m0_116  [key=0, style=solid];
m0_115 -> m0_163  [key=0, style=solid];
m0_115 -> m0_166  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m0_115 -> m0_175  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m0_115 -> m0_177  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m0_115 -> m0_181  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m0_115 -> m0_207  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m0_115 -> m0_182  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m0_115 -> m0_188  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m0_115 -> m0_189  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m0_115 -> m0_65  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonObjectContract contract", style=bold];
m0_115 -> m0_97  [color=darkorchid, key=3, label="Parameter variable System.Reflection.MemberInfo member", style=bold];
m0_119 -> m0_46  [key=2, style=dotted];
m0_119 -> m0_120  [key=0, style=solid];
m0_464 -> m0_465  [key=0, style=solid];
m0_464 -> m0_460  [color=blue, key=0, style=bold];
m0_466 -> m0_464  [color=blue, key=0, style=bold];
m0_466 -> m0_467  [key=0, style=solid];
m0_466 -> m0_20  [color=darkorchid, key=3, label="Parameter variable System.Type objectType", style=bold];
m0_472 -> m0_473  [key=0, style=solid];
m0_472 -> m0_252  [key=2, style=dotted];
m0_472 -> m0_20  [color=darkorchid, key=3, label="Parameter variable System.Type objectType", style=bold];
m0_561 -> m0_562  [key=0, style=solid];
m0_561 -> m0_552  [color=blue, key=0, style=bold];
m0_563 -> m0_46  [key=2, style=dotted];
m0_563 -> m0_564  [key=0, style=solid];
m0_577 -> m0_578  [key=0, style=solid];
m0_577 -> m0_321  [key=2, style=dotted];
m0_577 -> m0_579  [color=darkseagreen4, key=1, label=allowNonPublicAccess, style=dashed];
m0_577 -> m0_580  [color=darkseagreen4, key=1, label=allowNonPublicAccess, style=dashed];
m0_577 -> m0_584  [color=darkseagreen4, key=1, label=allowNonPublicAccess, style=dashed];
m0_579 -> m0_46  [key=2, style=dotted];
m0_579 -> m0_580  [key=0, style=solid];
m0_579 -> m0_587  [key=2, style=dotted];
m0_631 -> m0_632  [key=0, style=solid];
m0_631 -> m0_252  [key=2, style=dotted];
m0_638 -> m0_639  [key=0, style=solid];
m0_638 -> m0_252  [key=2, style=dotted];
m0_638 -> m0_55  [key=2, style=dotted];
m0_638 -> m0_641  [color=darkseagreen4, key=1, label=hasJsonIgnoreAttribute, style=dashed];
m0_638 -> m0_642  [color=darkseagreen4, key=1, label=hasJsonIgnoreAttribute, style=dashed];
m0_645 -> m0_646  [key=0, style=solid];
m0_645 -> m0_647  [key=2, style=dotted];
m0_645 -> m0_55  [key=2, style=dotted];
m0_656 -> m0_657  [key=0, style=solid];
m0_656 -> m0_647  [key=2, style=dotted];
m0_671 -> m0_672  [key=0, style=solid];
m0_671 -> m0_252  [key=2, style=dotted];
m0_671 -> m0_680  [key=2, style=dotted];
m0_671 -> m0_674  [color=darkseagreen4, key=1, label=specifiedMember, style=dashed];
m0_671 -> m0_676  [color=darkseagreen4, key=1, label=specifiedMember, style=dashed];
m0_671 -> m0_677  [color=darkseagreen4, key=1, label=specifiedMember, style=dashed];
m0_824 -> m0_46  [key=2, style=dotted];
m0_824 -> m0_825  [key=0, style=solid];
m0_827 -> m0_46  [key=2, style=dotted];
m0_827 -> m0_828  [key=0, style=solid];
m0_830 -> m0_46  [key=2, style=dotted];
m0_830 -> m0_831  [key=0, style=solid];
m0_833 -> m0_46  [key=2, style=dotted];
m0_833 -> m0_834  [key=0, style=solid];
m0_836 -> m0_46  [key=2, style=dotted];
m0_836 -> m0_837  [key=0, style=solid];
m0_861 -> m0_117  [key=2, style=dotted];
m0_861 -> m0_862  [key=0, style=solid];
m0_867 -> m0_117  [key=2, style=dotted];
m0_867 -> m0_868  [key=0, style=solid];
m0_1172 -> m0_1173  [key=0, style=solid];
m0_1172 -> m0_87  [key=2, style=dotted];
m0_1185 -> m0_117  [key=2, style=dotted];
m0_1185 -> m0_1186  [key=0, style=solid];
m0_1192 -> m0_1193  [key=0, style=solid];
m0_1192 -> m0_87  [key=2, style=dotted];
m0_1199 -> m0_1200  [key=0, style=solid];
m0_1199 -> m0_1179  [key=2, style=dotted];
m0_1213 -> m0_1214  [key=0, style=solid];
m0_1213 -> m0_87  [key=2, style=dotted];
m0_1220 -> m0_1221  [key=0, style=solid];
m0_1220 -> m0_87  [key=2, style=dotted];
m0_1291 -> m0_1292  [key=0, style=solid];
m0_1291 -> m0_1179  [key=2, style=dotted];
m0_1393 -> m0_46  [key=2, style=dotted];
m0_1393 -> m0_1394  [key=0, style=solid];
m0_1820 -> m0_1821  [key=0, style=solid];
m0_1820 -> m0_252  [key=2, style=dotted];
m0_111 -> m0_112  [key=0, style=solid];
m0_111 -> m0_271  [key=0, style=solid];
m0_111 -> m0_71  [color=darkorchid, key=3, label="method methodReturn System.Reflection.ConstructorInfo GetParameterizedConstructor", style=bold];
m0_113 -> m0_111  [color=blue, key=0, style=bold];
m0_113 -> m0_255  [key=0, style=solid];
m0_113 -> m0_263  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonPropertyCollection", style=dashed];
m0_113 -> m0_71  [color=darkorchid, key=3, label="method methodReturn System.Reflection.ConstructorInfo GetImmutableConstructor", style=bold];
m0_113 -> m0_258  [color=darkorchid, key=3, label="method methodReturn System.Reflection.ConstructorInfo GetImmutableConstructor", style=bold];
m0_134 -> m0_135  [key=0, style=solid];
m0_171 -> m0_172  [key=0, style=solid];
m0_171 -> m0_166  [color=darkorchid, key=3, label="Local variable System.Type createdType", style=bold];
m0_173 -> m0_171  [color=blue, key=0, style=bold];
m0_173 -> m0_175  [key=0, style=solid];
m0_173 -> m0_194  [key=2, style=dotted];
m0_173 -> m0_178  [color=darkseagreen4, key=1, label=createdType, style=dashed];
m0_278 -> m0_279  [key=0, style=solid];
m0_278 -> m0_284  [key=0, style=solid];
m0_278 -> m0_280  [color=darkseagreen4, key=1, label=parameterInfo, style=dashed];
m0_278 -> m0_281  [color=darkseagreen4, key=1, label=parameterInfo, style=dashed];
m0_280 -> m0_278  [color=blue, key=0, style=solid];
m0_280 -> m0_281  [key=0, style=solid];
m0_296 -> m0_297  [key=0, style=solid];
m0_298 -> m0_296  [color=blue, key=0, style=bold];
m0_298 -> m0_299  [key=0, style=solid];
m0_309 -> m0_310  [key=0, style=solid];
m0_311 -> m0_309  [color=blue, key=0, style=bold];
m0_311 -> m0_312  [key=0, style=solid];
m0_863 -> m0_864  [key=0, style=solid];
m0_865 -> m0_863  [color=blue, key=0, style=bold];
m0_898 -> m0_899  [key=0, style=solid];
m0_900 -> m0_898  [color=blue, key=0, style=bold];
m0_901 -> m0_902  [key=0, style=solid];
m0_903 -> m0_901  [color=blue, key=0, style=bold];
m0_1076 -> m0_1077  [key=0, style=solid];
m0_1078 -> m0_1076  [color=blue, key=0, style=bold];
m0_1154 -> m0_1155  [key=0, style=solid];
m0_1156 -> m0_1154  [color=blue, key=0, style=bold];
m0_1399 -> m0_1400  [key=0, style=solid];
m0_1401 -> m0_1399  [color=blue, key=0, style=bold];
m0_1406 -> m0_1407  [key=0, style=solid];
m0_1408 -> m0_1406  [color=blue, key=0, style=bold];
m0_1413 -> m0_1414  [key=0, style=solid];
m0_1415 -> m0_1413  [color=blue, key=0, style=bold];
m0_1420 -> m0_1421  [key=0, style=solid];
m0_1422 -> m0_1420  [color=blue, key=0, style=bold];
m0_1427 -> m0_1428  [key=0, style=solid];
m0_1429 -> m0_1427  [color=blue, key=0, style=bold];
m0_1560 -> m0_1561  [key=0, style=solid];
m0_1562 -> m0_1560  [color=blue, key=0, style=bold];
m0_1568 -> m0_1569  [key=0, style=solid];
m0_1570 -> m0_1568  [color=blue, key=0, style=bold];
m0_1599 -> m0_1600  [key=0, style=solid];
m0_1601 -> m0_1599  [color=blue, key=0, style=bold];
m0_1616 -> m0_1617  [key=0, style=solid];
m0_1618 -> m0_1616  [color=blue, key=0, style=bold];
m0_1780 -> m0_1781  [key=0, style=solid];
m0_1782 -> m0_1780  [color=blue, key=0, style=bold];
m0_1875 -> m0_1876  [key=0, style=solid];
m0_1877 -> m0_1875  [color=blue, key=0, style=bold];
m0_1907 -> m0_1908  [key=0, style=solid];
m0_1909 -> m0_1907  [color=blue, key=0, style=bold];
m0_1910 -> m0_1911  [key=0, style=solid];
m0_1912 -> m0_1910  [color=blue, key=0, style=bold];
m0_2032 -> m0_2033  [key=0, style=solid];
m0_2034 -> m0_2032  [color=blue, key=0, style=bold];
m0_2035 -> m0_2036  [key=0, style=solid];
m0_2037 -> m0_2035  [color=blue, key=0, style=bold];
m0_2038 -> m0_2039  [key=0, style=solid];
m0_2040 -> m0_2038  [color=blue, key=0, style=bold];
m0_2041 -> m0_2042  [key=0, style=solid];
m0_2043 -> m0_2041  [color=blue, key=0, style=bold];
m0_2044 -> m0_2045  [key=0, style=solid];
m0_2046 -> m0_2044  [color=blue, key=0, style=bold];
m0_2047 -> m0_2048  [key=0, style=solid];
m0_2049 -> m0_2047  [color=blue, key=0, style=bold];
m0_43 -> m0_44  [key=0, style=solid];
m0_43 -> m0_41  [key=0, style=solid];
m0_60 -> m0_61  [key=0, style=solid];
m0_84 -> m0_85  [key=0, style=solid];
m0_84 -> m0_109  [key=2, style=dotted];
m0_1290 -> m0_1291  [key=0, style=solid];
m0_1392 -> m0_1393  [key=0, style=solid];
m0_45 -> m0_43  [color=blue, key=0, style=bold];
m0_45 -> m0_46  [key=0, style=solid];
m0_65 -> m0_63  [color=blue, key=0, style=bold];
m0_65 -> m0_66  [key=0, style=solid];
m0_65 -> m0_102  [key=2, style=dotted];
m0_65 -> m0_69  [color=darkseagreen4, key=1, label=contract, style=dashed];
m0_65 -> m0_70  [color=darkseagreen4, key=1, label=contract, style=dashed];
m0_65 -> m0_72  [color=darkseagreen4, key=1, label=contract, style=dashed];
m0_65 -> m0_74  [color=darkseagreen4, key=1, label=contract, style=dashed];
m0_65 -> m0_80  [color=darkseagreen4, key=1, label=contract, style=dashed];
m0_65 -> m0_81  [color=darkseagreen4, key=1, label=contract, style=dashed];
m0_65 -> m0_82  [color=darkseagreen4, key=1, label=contract, style=dashed];
m0_65 -> m0_84  [color=darkseagreen4, key=1, label=contract, style=dashed];
m0_65 -> m0_85  [color=darkseagreen4, key=1, label=contract, style=dashed];
m0_65 -> m0_86  [color=darkseagreen4, key=1, label=contract, style=dashed];
m0_65 -> m0_87  [color=darkseagreen4, key=1, label=contract, style=dashed];
m0_65 -> m0_88  [color=darkseagreen4, key=1, label=contract, style=dashed];
m0_65 -> m0_90  [color=darkseagreen4, key=1, label=contract, style=dashed];
m0_65 -> m0_91  [color=darkseagreen4, key=1, label=contract, style=dashed];
m0_65 -> m0_92  [color=darkseagreen4, key=1, label=contract, style=dashed];
m0_65 -> m0_93  [color=darkseagreen4, key=1, label=contract, style=dashed];
m0_65 -> m0_95  [color=darkseagreen4, key=1, label=contract, style=dashed];
m0_65 -> m0_96  [color=darkseagreen4, key=1, label=contract, style=dashed];
m0_65 -> m0_97  [color=darkseagreen4, key=1, label=contract, style=dashed];
m0_65 -> m0_99  [color=darkseagreen4, key=1, label=contract, style=dashed];
m0_65 -> m0_100  [color=darkseagreen4, key=1, label=contract, style=dashed];
m0_66 -> m0_67  [key=0, style=solid];
m0_66 -> m0_103  [key=2, style=dotted];
m0_68 -> m0_66  [color=blue, key=0, style=bold];
m0_68 -> m0_69  [key=0, style=solid];
m0_69 -> m0_70  [key=0, style=solid];
m0_69 -> m0_47  [key=2, style=dotted];
m0_71 -> m0_69  [color=blue, key=0, style=bold];
m0_71 -> m0_72  [key=0, style=solid];
m0_71 -> m0_78  [color=darkseagreen4, key=1, label=extensionDataNameResolver, style=dashed];
m0_71 -> m0_80  [color=darkseagreen4, key=1, label=extensionDataNameResolver, style=dashed];
m0_71 -> m0_71  [color=darkorchid, key=3, label="Local variable Newtonsoft.Json.Serialization.Func<string, string> extensionDataNameResolver", style=bold];
m0_71 -> m0_77  [color=darkorchid, key=3, label="Local variable Newtonsoft.Json.Serialization.Func<string, string> extensionDataNameResolver", style=bold];
m0_71 -> m0_688  [color=darkorchid, key=3, label="Local variable Newtonsoft.Json.Serialization.Func<string, string> extensionDataNameResolver", style=bold];
m0_86 -> m0_84  [color=blue, key=0, style=bold];
m0_86 -> m0_87  [key=0, style=solid];
m0_86 -> m0_97  [key=0, style=solid];
m0_114 -> m0_115  [key=0, style=solid];
m0_114 -> m0_120  [key=0, style=solid];
m0_114 -> m0_121  [color=darkorchid, key=3, label="method methodReturn System.Reflection.MemberInfo GetExtensionDataMemberForType", style=bold];
m0_120 -> m0_118  [color=blue, key=0, style=bold];
m0_120 -> m0_121  [key=0, style=solid];
m0_120 -> m0_124  [key=2, style=dotted];
m0_120 -> m0_125  [key=2, style=dotted];
m0_120 -> m0_127  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_120 -> m0_120  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IList<System.Reflection.MemberInfo> ", style=bold];
m0_471 -> m0_472  [key=0, style=solid];
m0_473 -> m0_471  [color=blue, key=0, style=bold];
m0_473 -> m0_474  [key=0, style=solid];
m0_473 -> m0_477  [key=2, style=dotted];
m0_473 -> m0_475  [color=darkseagreen4, key=1, label=contract, style=dashed];
m0_564 -> m0_561  [color=blue, key=0, style=bold];
m0_564 -> m0_565  [key=0, style=solid];
m0_564 -> m0_566  [key=0, style=solid];
m0_580 -> m0_577  [color=blue, key=0, style=bold];
m0_580 -> m0_583  [key=0, style=solid];
m0_580 -> m0_196  [key=2, style=dotted];
m0_630 -> m0_631  [key=0, style=solid];
m0_632 -> m0_630  [color=blue, key=0, style=bold];
m0_632 -> m0_633  [key=0, style=solid];
m0_637 -> m0_638  [key=0, style=solid];
m0_639 -> m0_637  [color=blue, key=0, style=bold];
m0_639 -> m0_640  [key=0, style=solid];
m0_639 -> m0_642  [key=0, style=solid];
m0_644 -> m0_645  [key=0, style=solid];
m0_644 -> m0_325  [key=2, style=dotted];
m0_646 -> m0_644  [color=blue, key=0, style=bold];
m0_646 -> m0_647  [key=0, style=solid];
m0_646 -> m0_648  [key=0, style=solid];
m0_655 -> m0_656  [key=0, style=solid];
m0_655 -> m0_321  [color=blue, key=0, style=bold];
m0_657 -> m0_655  [color=blue, key=0, style=bold];
m0_670 -> m0_671  [key=0, style=solid];
m0_670 -> m0_672  [key=0, style=solid];
m0_672 -> m0_670  [color=blue, key=0, style=bold];
m0_672 -> m0_673  [key=0, style=solid];
m0_672 -> m0_674  [key=0, style=solid];
m0_672 -> m0_192  [key=2, style=dotted];
m0_823 -> m0_824  [key=0, style=solid];
m0_825 -> m0_823  [color=blue, key=0, style=bold];
m0_826 -> m0_827  [key=0, style=solid];
m0_828 -> m0_826  [color=blue, key=0, style=bold];
m0_829 -> m0_830  [key=0, style=solid];
m0_831 -> m0_829  [color=blue, key=0, style=bold];
m0_832 -> m0_833  [key=0, style=solid];
m0_834 -> m0_832  [color=blue, key=0, style=bold];
m0_835 -> m0_836  [key=0, style=solid];
m0_837 -> m0_835  [color=blue, key=0, style=bold];
m0_860 -> m0_861  [key=0, style=solid];
m0_862 -> m0_860  [color=blue, key=0, style=bold];
m0_866 -> m0_867  [key=0, style=solid];
m0_868 -> m0_866  [color=blue, key=0, style=bold];
m0_1171 -> m0_1172  [key=0, style=solid];
m0_1173 -> m0_1171  [color=blue, key=0, style=bold];
m0_1184 -> m0_1185  [key=0, style=solid];
m0_1186 -> m0_1184  [color=blue, key=0, style=bold];
m0_1191 -> m0_1192  [key=0, style=solid];
m0_1193 -> m0_1191  [color=blue, key=0, style=bold];
m0_1198 -> m0_1199  [key=0, style=solid];
m0_1200 -> m0_1198  [color=blue, key=0, style=bold];
m0_1212 -> m0_1213  [key=0, style=solid];
m0_1214 -> m0_1212  [color=blue, key=0, style=bold];
m0_1219 -> m0_1220  [key=0, style=solid];
m0_1221 -> m0_1219  [color=blue, key=0, style=bold];
m0_1292 -> m0_1290  [color=blue, key=0, style=bold];
m0_1394 -> m0_1392  [color=blue, key=0, style=bold];
m0_1821 -> m0_1819  [color=blue, key=0, style=bold];
m0_326 -> m0_327  [key=0, style=solid];
m0_326 -> m0_26  [key=2, style=dotted];
m0_327 -> m0_328  [key=0, style=solid];
m0_327 -> m0_198  [key=2, style=dotted];
m0_327 -> m0_26  [key=2, style=dotted];
m0_328 -> m0_326  [color=blue, key=0, style=bold];
m0_328 -> m0_24  [key=2, style=dotted];
m0_328 -> m0_329  [key=0, style=solid];
m0_288 -> m0_24  [key=2, style=dotted];
m0_288 -> m0_289  [key=0, style=solid];
m0_501 -> m0_481  [color=blue, key=0, style=bold];
m0_403 -> m0_26  [key=2, style=dotted];
m0_403 -> m0_404  [key=0, style=solid];
m0_1681 -> m0_1682  [key=0, style=solid];
m0_1685 -> m0_26  [key=2, style=dotted];
m0_1685 -> m0_1686  [key=0, style=solid];
m0_1686 -> m0_26  [key=2, style=dotted];
m0_1686 -> m0_1687  [key=0, style=solid];
m0_1687 -> m0_26  [key=2, style=dotted];
m0_1687 -> m0_1688  [key=0, style=solid];
m0_1689 -> m0_26  [key=2, style=dotted];
m0_1689 -> m0_1690  [key=0, style=solid];
m0_1690 -> m0_26  [key=2, style=dotted];
m0_1690 -> m0_1691  [key=0, style=solid];
m0_1692 -> m0_26  [key=2, style=dotted];
m0_1692 -> m0_1693  [key=0, style=solid];
m0_1693 -> m0_26  [key=2, style=dotted];
m0_1693 -> m0_1694  [key=0, style=solid];
m0_1695 -> m0_26  [key=2, style=dotted];
m0_1695 -> m0_1696  [key=0, style=solid];
m0_1696 -> m0_26  [key=2, style=dotted];
m0_1696 -> m0_1697  [key=0, style=solid];
m0_1697 -> m0_26  [key=2, style=dotted];
m0_1697 -> m0_1698  [key=0, style=solid];
m0_1699 -> m0_26  [key=2, style=dotted];
m0_1699 -> m0_1700  [key=0, style=solid];
m0_1700 -> m0_26  [key=2, style=dotted];
m0_1700 -> m0_1701  [key=0, style=solid];
m0_1702 -> m0_26  [key=2, style=dotted];
m0_1702 -> m0_1703  [key=0, style=solid];
m0_1703 -> m0_26  [key=2, style=dotted];
m0_1703 -> m0_1704  [key=0, style=solid];
m0_1704 -> m0_26  [key=2, style=dotted];
m0_1704 -> m0_1705  [key=0, style=solid];
m0_1706 -> m0_26  [key=2, style=dotted];
m0_1706 -> m0_1707  [key=0, style=solid];
m0_1707 -> m0_26  [key=2, style=dotted];
m0_1707 -> m0_1708  [key=0, style=solid];
m0_1708 -> m0_26  [key=2, style=dotted];
m0_1708 -> m0_1709  [key=0, style=solid];
m0_1710 -> m0_26  [key=2, style=dotted];
m0_1710 -> m0_1711  [key=0, style=solid];
m0_1711 -> m0_26  [key=2, style=dotted];
m0_1711 -> m0_1712  [key=0, style=solid];
m0_1712 -> m0_26  [key=2, style=dotted];
m0_1712 -> m0_1713  [key=0, style=solid];
m0_1714 -> m0_26  [key=2, style=dotted];
m0_1714 -> m0_1715  [key=0, style=solid];
m0_1715 -> m0_26  [key=2, style=dotted];
m0_1715 -> m0_1716  [key=0, style=solid];
m0_1716 -> m0_26  [key=2, style=dotted];
m0_1716 -> m0_1717  [key=0, style=solid];
m0_1718 -> m0_26  [key=2, style=dotted];
m0_1718 -> m0_1719  [key=0, style=solid];
m0_1719 -> m0_26  [key=2, style=dotted];
m0_1719 -> m0_1720  [key=0, style=solid];
m0_1721 -> m0_26  [key=2, style=dotted];
m0_1721 -> m0_1722  [key=0, style=solid];
m0_1722 -> m0_26  [key=2, style=dotted];
m0_1722 -> m0_1723  [key=0, style=solid];
m0_1723 -> m0_26  [key=2, style=dotted];
m0_1723 -> m0_1724  [key=0, style=solid];
m0_1725 -> m0_26  [key=2, style=dotted];
m0_1725 -> m0_1726  [key=0, style=solid];
m0_1727 -> m0_26  [key=2, style=dotted];
m0_1727 -> m0_1728  [key=0, style=solid];
m0_1728 -> m0_26  [key=2, style=dotted];
m0_1728 -> m0_1729  [key=0, style=solid];
m0_1730 -> m0_26  [key=2, style=dotted];
m0_1730 -> m0_1731  [key=0, style=solid];
m0_1731 -> m0_26  [key=2, style=dotted];
m0_1731 -> m0_1732  [key=0, style=solid];
m0_1733 -> m0_26  [key=2, style=dotted];
m0_1733 -> m0_1734  [key=0, style=solid];
m0_1734 -> m0_26  [key=2, style=dotted];
m0_1734 -> m0_1735  [key=0, style=solid];
m0_1736 -> m0_26  [key=2, style=dotted];
m0_1736 -> m0_1737  [key=0, style=solid];
m0_1737 -> m0_26  [key=2, style=dotted];
m0_1737 -> m0_1738  [key=0, style=solid];
m0_1739 -> m0_26  [key=2, style=dotted];
m0_1739 -> m0_1740  [key=0, style=solid];
m0_1741 -> m0_26  [key=2, style=dotted];
m0_1741 -> m0_1742  [key=0, style=solid];
m0_1742 -> m0_26  [key=2, style=dotted];
m0_1742 -> m0_1743  [key=0, style=solid];
m0_1744 -> m0_26  [key=2, style=dotted];
m0_1744 -> m0_1745  [key=0, style=solid];
m0_1746 -> m0_26  [key=2, style=dotted];
m0_1746 -> m0_1747  [key=0, style=solid];
m0_1748 -> m0_26  [key=2, style=dotted];
m0_1748 -> m0_1749  [key=0, style=solid];
m0_1750 -> m0_26  [key=2, style=dotted];
m0_1750 -> m0_1751  [key=0, style=solid];
m0_1752 -> m0_26  [key=2, style=dotted];
m0_1752 -> m0_1753  [key=0, style=solid];
m0_1754 -> m0_26  [key=2, style=dotted];
m0_1754 -> m0_1755  [key=0, style=solid];
m0_1756 -> m0_26  [key=2, style=dotted];
m0_1756 -> m0_1757  [key=0, style=solid];
m0_1758 -> m0_26  [key=2, style=dotted];
m0_1758 -> m0_1759  [key=0, style=solid];
m0_1760 -> m0_26  [key=2, style=dotted];
m0_1760 -> m0_1761  [key=0, style=solid];
m0_1761 -> m0_26  [key=2, style=dotted];
m0_1761 -> m0_1762  [key=0, style=solid];
m0_1763 -> m0_26  [key=2, style=dotted];
m0_1763 -> m0_1764  [key=0, style=solid];
m0_1764 -> m0_26  [key=2, style=dotted];
m0_1764 -> m0_1765  [key=0, style=solid];
m0_1683 -> m0_22  [key=2, style=dotted];
m0_1683 -> m0_1685  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1686  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1687  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1689  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1690  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1692  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1693  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1695  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1696  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1697  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1699  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1700  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1702  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1703  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1704  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1706  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1707  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1708  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1710  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1711  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1712  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1714  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1715  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1716  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1718  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1719  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1721  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1722  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1723  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1725  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1727  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1728  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1730  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1731  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1733  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1734  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1736  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1737  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1739  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1741  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1742  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1744  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1746  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1748  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1750  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1752  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1754  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1756  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1758  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1760  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1761  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1763  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1764  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1684  [key=0, style=solid];
m0_1683 -> m0_231  [key=2, style=dotted];
m0_1683 -> m0_271  [key=2, style=dotted];
m0_1683 -> m0_272  [key=2, style=dotted];
m0_1683 -> m0_1688  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1691  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1694  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1698  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1701  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1705  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1709  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1713  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1717  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1720  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1724  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1726  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1729  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1732  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1735  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1738  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1740  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1743  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1745  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1747  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1749  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1751  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1753  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1755  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1757  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1759  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1762  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1683 -> m0_1765  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1684 -> m0_24  [key=2, style=dotted];
m0_1684 -> m0_25  [key=2, style=dotted];
m0_1684 -> m0_1685  [key=0, style=solid];
m0_1688 -> m0_24  [key=2, style=dotted];
m0_1688 -> m0_25  [key=2, style=dotted];
m0_1688 -> m0_1689  [key=0, style=solid];
m0_1691 -> m0_24  [key=2, style=dotted];
m0_1691 -> m0_25  [key=2, style=dotted];
m0_1691 -> m0_1692  [key=0, style=solid];
m0_1694 -> m0_24  [key=2, style=dotted];
m0_1694 -> m0_25  [key=2, style=dotted];
m0_1694 -> m0_1695  [key=0, style=solid];
m0_1698 -> m0_24  [key=2, style=dotted];
m0_1698 -> m0_25  [key=2, style=dotted];
m0_1698 -> m0_1699  [key=0, style=solid];
m0_1701 -> m0_24  [key=2, style=dotted];
m0_1701 -> m0_25  [key=2, style=dotted];
m0_1701 -> m0_1702  [key=0, style=solid];
m0_1705 -> m0_24  [key=2, style=dotted];
m0_1705 -> m0_25  [key=2, style=dotted];
m0_1705 -> m0_1706  [key=0, style=solid];
m0_1709 -> m0_24  [key=2, style=dotted];
m0_1709 -> m0_25  [key=2, style=dotted];
m0_1709 -> m0_1710  [key=0, style=solid];
m0_1713 -> m0_24  [key=2, style=dotted];
m0_1713 -> m0_25  [key=2, style=dotted];
m0_1713 -> m0_1714  [key=0, style=solid];
m0_1717 -> m0_24  [key=2, style=dotted];
m0_1717 -> m0_25  [key=2, style=dotted];
m0_1717 -> m0_1718  [key=0, style=solid];
m0_1720 -> m0_24  [key=2, style=dotted];
m0_1720 -> m0_25  [key=2, style=dotted];
m0_1720 -> m0_1721  [key=0, style=solid];
m0_1724 -> m0_24  [key=2, style=dotted];
m0_1724 -> m0_25  [key=2, style=dotted];
m0_1724 -> m0_1725  [key=0, style=solid];
m0_1726 -> m0_24  [key=2, style=dotted];
m0_1726 -> m0_25  [key=2, style=dotted];
m0_1726 -> m0_1727  [key=0, style=solid];
m0_1729 -> m0_24  [key=2, style=dotted];
m0_1729 -> m0_25  [key=2, style=dotted];
m0_1729 -> m0_1730  [key=0, style=solid];
m0_1732 -> m0_24  [key=2, style=dotted];
m0_1732 -> m0_25  [key=2, style=dotted];
m0_1732 -> m0_1733  [key=0, style=solid];
m0_1735 -> m0_24  [key=2, style=dotted];
m0_1735 -> m0_25  [key=2, style=dotted];
m0_1735 -> m0_1736  [key=0, style=solid];
m0_1738 -> m0_24  [key=2, style=dotted];
m0_1738 -> m0_25  [key=2, style=dotted];
m0_1738 -> m0_1739  [key=0, style=solid];
m0_1740 -> m0_24  [key=2, style=dotted];
m0_1740 -> m0_25  [key=2, style=dotted];
m0_1740 -> m0_1741  [key=0, style=solid];
m0_1743 -> m0_24  [key=2, style=dotted];
m0_1743 -> m0_25  [key=2, style=dotted];
m0_1743 -> m0_1744  [key=0, style=solid];
m0_1745 -> m0_24  [key=2, style=dotted];
m0_1745 -> m0_25  [key=2, style=dotted];
m0_1745 -> m0_1746  [key=0, style=solid];
m0_1747 -> m0_24  [key=2, style=dotted];
m0_1747 -> m0_25  [key=2, style=dotted];
m0_1747 -> m0_1748  [key=0, style=solid];
m0_1749 -> m0_24  [key=2, style=dotted];
m0_1749 -> m0_25  [key=2, style=dotted];
m0_1749 -> m0_1750  [key=0, style=solid];
m0_1751 -> m0_24  [key=2, style=dotted];
m0_1751 -> m0_25  [key=2, style=dotted];
m0_1751 -> m0_1752  [key=0, style=solid];
m0_1753 -> m0_24  [key=2, style=dotted];
m0_1753 -> m0_25  [key=2, style=dotted];
m0_1753 -> m0_1754  [key=0, style=solid];
m0_1755 -> m0_24  [key=2, style=dotted];
m0_1755 -> m0_25  [key=2, style=dotted];
m0_1755 -> m0_1756  [key=0, style=solid];
m0_1757 -> m0_24  [key=2, style=dotted];
m0_1757 -> m0_25  [key=2, style=dotted];
m0_1757 -> m0_1758  [key=0, style=solid];
m0_1759 -> m0_24  [key=2, style=dotted];
m0_1759 -> m0_25  [key=2, style=dotted];
m0_1759 -> m0_1760  [key=0, style=solid];
m0_1762 -> m0_24  [key=2, style=dotted];
m0_1762 -> m0_25  [key=2, style=dotted];
m0_1762 -> m0_1763  [key=0, style=solid];
m0_1765 -> m0_24  [key=2, style=dotted];
m0_1765 -> m0_1766  [key=0, style=solid];
m0_1765 -> m0_28  [key=2, style=dotted];
m0_1682 -> m0_1683  [key=0, style=solid];
m0_1766 -> m0_1681  [color=blue, key=0, style=bold];
m0_72 -> m0_73  [key=0, style=solid];
m0_72 -> m0_106  [key=2, style=dotted];
m0_72 -> m0_74  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m0_72 -> m0_75  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m0_72 -> m0_76  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m0_76 -> m0_26  [key=2, style=dotted];
m0_76 -> m0_77  [key=0, style=solid];
m0_76 -> m0_107  [key=2, style=dotted];
m0_76 -> m0_117  [color=darkseagreen4, key=1, label=namingStrategy, style=dashed];
m0_78 -> m0_26  [key=2, style=dotted];
m0_78 -> m0_79  [key=0, style=solid];
m0_78 -> m0_80  [key=0, style=solid];
m0_81 -> m0_26  [key=2, style=dotted];
m0_81 -> m0_82  [key=0, style=solid];
m0_81 -> m0_97  [key=0, style=solid];
m0_74 -> m0_22  [key=2, style=dotted];
m0_74 -> m0_23  [key=2, style=dotted];
m0_74 -> m0_76  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_74 -> m0_78  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_74 -> m0_81  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_74 -> m0_75  [key=0, style=solid];
m0_74 -> m0_77  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_74 -> m0_79  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_74 -> m0_85  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_74 -> m0_80  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_74 -> m0_82  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_75 -> m0_24  [key=2, style=dotted];
m0_75 -> m0_25  [key=2, style=dotted];
m0_75 -> m0_76  [key=0, style=solid];
m0_75 -> m0_78  [key=0, style=solid];
m0_77 -> m0_24  [key=2, style=dotted];
m0_77 -> m0_25  [key=2, style=dotted];
m0_77 -> m0_78  [key=0, style=solid];
m0_77 -> m0_117  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_77 -> m0_80  [color=darkseagreen4, key=1, label=extensionDataNameResolver, style=dashed];
m0_80 -> m0_24  [key=2, style=dotted];
m0_80 -> m0_25  [key=2, style=dotted];
m0_80 -> m0_81  [key=0, style=solid];
m0_82 -> m0_24  [key=2, style=dotted];
m0_82 -> m0_83  [key=0, style=solid];
m0_82 -> m0_28  [key=2, style=dotted];
m0_82 -> m0_108  [key=2, style=dotted];
m0_82 -> m0_84  [color=darkseagreen4, key=1, label=overrideConstructor, style=dashed];
m0_82 -> m0_85  [color=darkseagreen4, key=1, label=overrideConstructor, style=dashed];
m0_79 -> m0_80  [key=0, style=solid];
m0_79 -> m0_42  [key=2, style=dotted];
m0_79 -> m0_84  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_73 -> m0_74  [key=0, style=solid];
m0_73 -> m0_78  [key=0, style=solid];
m0_83 -> m0_72  [color=blue, key=0, style=bold];
m0_83 -> m0_84  [key=0, style=solid];
m0_83 -> m0_86  [key=0, style=solid];
m0_1822 -> m0_1823  [key=0, style=solid];
m0_1831 -> m0_26  [key=2, style=dotted];
m0_1831 -> m0_1832  [key=0, style=solid];
m0_1832 -> m0_26  [key=2, style=dotted];
m0_1832 -> m0_1833  [key=0, style=solid];
m0_1834 -> m0_26  [key=2, style=dotted];
m0_1834 -> m0_1835  [key=0, style=solid];
m0_1835 -> m0_26  [key=2, style=dotted];
m0_1835 -> m0_1836  [key=0, style=solid];
m0_1837 -> m0_26  [key=2, style=dotted];
m0_1837 -> m0_1838  [key=0, style=solid];
m0_1838 -> m0_26  [key=2, style=dotted];
m0_1838 -> m0_1839  [key=0, style=solid];
m0_1840 -> m0_26  [key=2, style=dotted];
m0_1840 -> m0_1841  [key=0, style=solid];
m0_1841 -> m0_26  [key=2, style=dotted];
m0_1841 -> m0_1842  [key=0, style=solid];
m0_1843 -> m0_26  [key=2, style=dotted];
m0_1843 -> m0_1844  [key=0, style=solid];
m0_1844 -> m0_26  [key=2, style=dotted];
m0_1844 -> m0_1845  [key=0, style=solid];
m0_1849 -> m0_26  [key=2, style=dotted];
m0_1849 -> m0_1850  [key=0, style=solid];
m0_1850 -> m0_26  [key=2, style=dotted];
m0_1850 -> m0_1851  [key=0, style=solid];
m0_1852 -> m0_26  [key=2, style=dotted];
m0_1852 -> m0_1853  [key=0, style=solid];
m0_1853 -> m0_26  [key=2, style=dotted];
m0_1853 -> m0_1854  [key=0, style=solid];
m0_1855 -> m0_26  [key=2, style=dotted];
m0_1855 -> m0_1856  [key=0, style=solid];
m0_1856 -> m0_26  [key=2, style=dotted];
m0_1856 -> m0_1857  [key=0, style=solid];
m0_1858 -> m0_26  [key=2, style=dotted];
m0_1858 -> m0_1859  [key=0, style=solid];
m0_1859 -> m0_26  [key=2, style=dotted];
m0_1859 -> m0_1860  [key=0, style=solid];
m0_1861 -> m0_26  [key=2, style=dotted];
m0_1861 -> m0_1862  [key=0, style=solid];
m0_1862 -> m0_26  [key=2, style=dotted];
m0_1862 -> m0_1863  [key=0, style=solid];
m0_1828 -> m0_22  [key=2, style=dotted];
m0_1828 -> m0_23  [key=2, style=dotted];
m0_1828 -> m0_1831  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1828 -> m0_1832  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1828 -> m0_1834  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1828 -> m0_1835  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1828 -> m0_1837  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1828 -> m0_1838  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1828 -> m0_1840  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1828 -> m0_1841  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1828 -> m0_1843  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1828 -> m0_1844  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1828 -> m0_1829  [key=0, style=solid];
m0_1828 -> m0_1830  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1828 -> m0_1833  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1828 -> m0_1836  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1828 -> m0_1839  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1828 -> m0_1842  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1828 -> m0_1845  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1846 -> m0_22  [key=2, style=dotted];
m0_1846 -> m0_23  [key=2, style=dotted];
m0_1846 -> m0_1849  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1846 -> m0_1850  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1846 -> m0_1852  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1846 -> m0_1853  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1846 -> m0_1855  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1846 -> m0_1856  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1846 -> m0_1858  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1846 -> m0_1859  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1846 -> m0_1861  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1846 -> m0_1862  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1846 -> m0_1847  [key=0, style=solid];
m0_1846 -> m0_1848  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1846 -> m0_1851  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1846 -> m0_1854  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1846 -> m0_1857  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1846 -> m0_1860  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1846 -> m0_1863  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1829 -> m0_24  [key=2, style=dotted];
m0_1829 -> m0_1830  [key=0, style=solid];
m0_1830 -> m0_24  [key=2, style=dotted];
m0_1830 -> m0_1831  [key=0, style=solid];
m0_1833 -> m0_24  [key=2, style=dotted];
m0_1833 -> m0_1834  [key=0, style=solid];
m0_1836 -> m0_24  [key=2, style=dotted];
m0_1836 -> m0_1837  [key=0, style=solid];
m0_1839 -> m0_24  [key=2, style=dotted];
m0_1839 -> m0_1840  [key=0, style=solid];
m0_1842 -> m0_24  [key=2, style=dotted];
m0_1842 -> m0_1843  [key=0, style=solid];
m0_1845 -> m0_24  [key=2, style=dotted];
m0_1845 -> m0_1846  [key=0, style=solid];
m0_1847 -> m0_24  [key=2, style=dotted];
m0_1847 -> m0_1848  [key=0, style=solid];
m0_1863 -> m0_24  [key=2, style=dotted];
m0_1863 -> m0_1864  [key=0, style=solid];
m0_1848 -> m0_1849  [key=0, style=solid];
m0_1848 -> m0_117  [key=2, style=dotted];
m0_1851 -> m0_1852  [key=0, style=solid];
m0_1851 -> m0_117  [key=2, style=dotted];
m0_1854 -> m0_1855  [key=0, style=solid];
m0_1854 -> m0_117  [key=2, style=dotted];
m0_1857 -> m0_1858  [key=0, style=solid];
m0_1857 -> m0_117  [key=2, style=dotted];
m0_1860 -> m0_1861  [key=0, style=solid];
m0_1860 -> m0_117  [key=2, style=dotted];
m0_1827 -> m0_1828  [key=0, style=solid];
m0_1827 -> m0_1846  [color=darkseagreen4, key=1, label=json, style=dashed];
m0_1826 -> m0_1827  [key=0, style=solid];
m0_1826 -> m0_1868  [key=2, style=dotted];
m0_1826 -> m0_1867  [key=2, style=dotted];
m0_1825 -> m0_1354  [key=2, style=dotted];
m0_1825 -> m0_1826  [key=0, style=solid];
m0_1825 -> m0_1866  [key=2, style=dotted];
m0_1825 -> m0_1867  [key=2, style=dotted];
m0_1824 -> m0_1826  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_1824 -> m0_1825  [key=0, style=solid];
m0_1824 -> m0_1865  [key=2, style=dotted];
m0_1823 -> m0_1824  [key=0, style=solid];
m0_1864 -> m0_1822  [color=blue, key=0, style=bold];
m0_1281 -> m0_1282  [key=0, style=solid];
m0_1285 -> m0_26  [key=2, style=dotted];
m0_1285 -> m0_1286  [key=0, style=solid];
m0_1287 -> m0_26  [key=2, style=dotted];
m0_1287 -> m0_1288  [key=0, style=solid];
m0_1283 -> m0_22  [key=2, style=dotted];
m0_1283 -> m0_23  [key=2, style=dotted];
m0_1283 -> m0_1285  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1283 -> m0_1287  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1283 -> m0_1284  [key=0, style=solid];
m0_1283 -> m0_1286  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1283 -> m0_1288  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1283 -> m0_1291  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1284 -> m0_24  [key=2, style=dotted];
m0_1284 -> m0_25  [key=2, style=dotted];
m0_1284 -> m0_1285  [key=0, style=solid];
m0_1286 -> m0_24  [key=2, style=dotted];
m0_1286 -> m0_25  [key=2, style=dotted];
m0_1286 -> m0_1287  [key=0, style=solid];
m0_1288 -> m0_1289  [key=0, style=solid];
m0_1288 -> m0_42  [key=2, style=dotted];
m0_1288 -> m0_1290  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_1282 -> m0_1283  [key=0, style=solid];
m0_1289 -> m0_1281  [color=blue, key=0, style=bold];
m0_699 -> m0_700  [key=0, style=solid];
m0_699 -> m0_658  [color=darkorchid, key=3, label="method methodReturn string GetResolvedPropertyName", style=bold];
m0_699 -> m0_26  [key=2, style=dotted];
m0_700 -> m0_701  [key=0, style=solid];
m0_700 -> m0_658  [key=2, style=dotted];
m0_700 -> m0_26  [key=2, style=dotted];
m0_701 -> m0_699  [color=blue, key=0, style=bold];
m0_701 -> m0_24  [key=2, style=dotted];
m0_701 -> m0_25  [key=2, style=dotted];
m0_701 -> m0_702  [key=0, style=solid];
m0_1089 -> m0_1090  [key=0, style=solid];
m0_1093 -> m0_26  [key=2, style=dotted];
m0_1093 -> m0_1094  [key=0, style=solid];
m0_1095 -> m0_26  [key=2, style=dotted];
m0_1095 -> m0_1096  [key=0, style=solid];
m0_1096 -> m0_26  [key=2, style=dotted];
m0_1096 -> m0_1097  [key=0, style=solid];
m0_1098 -> m0_26  [key=2, style=dotted];
m0_1098 -> m0_1099  [key=0, style=solid];
m0_1099 -> m0_26  [key=2, style=dotted];
m0_1099 -> m0_1100  [key=0, style=solid];
m0_1101 -> m0_26  [key=2, style=dotted];
m0_1101 -> m0_1102  [key=0, style=solid];
m0_1102 -> m0_26  [key=2, style=dotted];
m0_1102 -> m0_1103  [key=0, style=solid];
m0_1104 -> m0_26  [key=2, style=dotted];
m0_1104 -> m0_1105  [key=0, style=solid];
m0_1091 -> m0_22  [key=2, style=dotted];
m0_1091 -> m0_1093  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1091 -> m0_1095  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1091 -> m0_1096  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1091 -> m0_1098  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1091 -> m0_1099  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1091 -> m0_1101  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1091 -> m0_1102  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1091 -> m0_1104  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1091 -> m0_1092  [key=0, style=solid];
m0_1091 -> m0_1094  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1091 -> m0_1097  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1091 -> m0_1100  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1091 -> m0_1103  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1091 -> m0_1105  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1090 -> m0_23  [key=2, style=dotted];
m0_1090 -> m0_1091  [key=0, style=solid];
m0_1092 -> m0_24  [key=2, style=dotted];
m0_1092 -> m0_25  [key=2, style=dotted];
m0_1092 -> m0_1093  [key=0, style=solid];
m0_1094 -> m0_24  [key=2, style=dotted];
m0_1094 -> m0_25  [key=2, style=dotted];
m0_1094 -> m0_1095  [key=0, style=solid];
m0_1097 -> m0_24  [key=2, style=dotted];
m0_1097 -> m0_25  [key=2, style=dotted];
m0_1097 -> m0_1098  [key=0, style=solid];
m0_1100 -> m0_24  [key=2, style=dotted];
m0_1100 -> m0_25  [key=2, style=dotted];
m0_1100 -> m0_1101  [key=0, style=solid];
m0_1103 -> m0_24  [key=2, style=dotted];
m0_1103 -> m0_25  [key=2, style=dotted];
m0_1103 -> m0_1104  [key=0, style=solid];
m0_1105 -> m0_24  [key=2, style=dotted];
m0_1105 -> m0_1106  [key=0, style=solid];
m0_1105 -> m0_28  [key=2, style=dotted];
m0_1106 -> m0_1089  [color=blue, key=0, style=bold];
m0_121 -> m0_122  [key=0, style=solid];
m0_121 -> m0_126  [key=2, style=dotted];
m0_121 -> m0_136  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_121 -> m0_121  [color=darkorchid, key=3, label="method methodReturn bool ", style=bold];
m0_122 -> m0_123  [key=0, style=solid];
m0_123 -> m0_114  [color=blue, key=0, style=bold];
m0_123 -> m0_22  [key=2, style=dotted];
m0_123 -> m0_23  [key=2, style=dotted];
m0_123 -> m0_125  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_123 -> m0_127  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_123 -> m0_129  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_123 -> m0_131  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_123 -> m0_124  [key=0, style=solid];
m0_123 -> m0_126  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_123 -> m0_128  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_123 -> m0_130  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_123 -> m0_132  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_123 -> m0_135  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_29 -> m0_30  [key=0, style=solid];
m0_29 -> m0_41  [key=0, style=solid];
m0_270 -> m0_289  [key=0, style=solid];
m0_270 -> m0_291  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonPropertyCollection", style=dashed];
m0_270 -> m0_292  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_270 -> m0_113  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonPropertyCollection properties", style=bold];
m0_270 -> m0_110  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonPropertyCollection properties", style=bold];
m0_270 -> m0_71  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Serialization.JsonProperty MatchProperty", style=bold];
m0_270 -> m0_254  [color=blue, key=0, style=bold];
m0_289 -> m0_290  [key=0, style=solid];
m0_289 -> m0_291  [key=0, style=solid];
m0_289 -> m0_26  [key=2, style=dotted];
m0_291 -> m0_292  [key=0, style=solid];
m0_291 -> m0_296  [key=2, style=dotted];
m0_291 -> m0_294  [color=darkseagreen4, key=1, label=property, style=dashed];
m0_291 -> m0_26  [key=2, style=dotted];
m0_292 -> m0_293  [key=0, style=solid];
m0_292 -> m0_294  [key=0, style=solid];
m0_292 -> m0_24  [key=2, style=dotted];
m0_290 -> m0_295  [key=0, style=solid];
m0_290 -> m0_24  [key=2, style=dotted];
m0_290 -> m0_291  [key=0, style=solid];
m0_294 -> m0_295  [key=0, style=solid];
m0_294 -> m0_42  [key=2, style=dotted];
m0_294 -> m0_296  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_293 -> m0_295  [key=0, style=solid];
m0_293 -> m0_26  [key=2, style=dotted];
m0_293 -> m0_294  [key=0, style=solid];
m0_295 -> m0_270  [color=blue, key=0, style=bold];
m0_295 -> m0_281  [color=blue, key=0, style=bold];
m0_102 -> m0_103  [key=0, style=solid];
m0_104 -> m0_22  [key=2, style=dotted];
m0_104 -> m0_23  [key=2, style=dotted];
m0_104 -> m0_105  [key=0, style=solid];
m0_104 -> m0_112  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_104 -> m0_538  [key=0, style=solid];
m0_104 -> m0_542  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_104 -> m0_544  [color=darkseagreen4, key=1, label="Newtonsoft.Json.MemberSerialization", style=dashed];
m0_104 -> m0_549  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IList<Newtonsoft.Json.Serialization.JsonProperty> CreateProperties", style=bold];
m0_106 -> m0_22  [key=2, style=dotted];
m0_106 -> m0_23  [key=2, style=dotted];
m0_106 -> m0_107  [key=0, style=solid];
m0_106 -> m0_115  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_108 -> m0_22  [key=2, style=dotted];
m0_108 -> m0_23  [key=2, style=dotted];
m0_108 -> m0_109  [key=0, style=solid];
m0_108 -> m0_119  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_108 -> m0_238  [key=0, style=solid];
m0_108 -> m0_244  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_108 -> m0_245  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_108 -> m0_240  [color=darkorchid, key=3, label="method methodReturn System.Reflection.ConstructorInfo GetAttributeConstructor", style=bold];
m0_108 -> m0_71  [color=darkorchid, key=3, label="method methodReturn System.Reflection.ConstructorInfo GetAttributeConstructor", style=bold];
m0_103 -> m0_104  [key=0, style=solid];
m0_103 -> m0_106  [color=darkseagreen4, key=1, label=json, style=dashed];
m0_103 -> m0_108  [color=darkseagreen4, key=1, label=json, style=dashed];
m0_103 -> m0_329  [key=0, style=solid];
m0_103 -> m0_331  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m0_103 -> m0_332  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m0_103 -> m0_333  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m0_103 -> m0_334  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m0_103 -> m0_335  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m0_103 -> m0_336  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m0_103 -> m0_337  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m0_103 -> m0_65  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m0_103 -> m0_420  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m0_103 -> m0_445  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m0_103 -> m0_461  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m0_103 -> m0_467  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m0_103 -> m0_473  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m0_105 -> m0_106  [key=0, style=solid];
m0_105 -> m0_42  [key=2, style=dotted];
m0_105 -> m0_111  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_107 -> m0_108  [key=0, style=solid];
m0_107 -> m0_42  [key=2, style=dotted];
m0_107 -> m0_114  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_109 -> m0_110  [key=0, style=solid];
m0_109 -> m0_42  [key=2, style=dotted];
m0_109 -> m0_118  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_110 -> m0_102  [color=blue, key=0, style=bold];
m0_110 -> m0_276  [key=0, style=solid];
m0_110 -> m0_277  [color=darkseagreen4, key=1, label="System.Reflection.ConstructorInfo", style=dashed];
m0_110 -> m0_279  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonPropertyCollection", style=dashed];
m0_110 -> m0_82  [color=darkorchid, key=3, label="Parameter variable System.Reflection.ConstructorInfo constructor", style=bold];
m0_110 -> m0_88  [color=darkorchid, key=3, label="Parameter variable System.Reflection.ConstructorInfo constructor", style=bold];
m0_110 -> m0_93  [color=darkorchid, key=3, label="Parameter variable System.Reflection.ConstructorInfo constructor", style=bold];
m0_956 -> m0_957  [key=0, style=solid];
m0_961 -> m0_26  [key=2, style=dotted];
m0_961 -> m0_962  [key=0, style=solid];
m0_963 -> m0_26  [key=2, style=dotted];
m0_963 -> m0_964  [key=0, style=solid];
m0_964 -> m0_26  [key=2, style=dotted];
m0_964 -> m0_965  [key=0, style=solid];
m0_966 -> m0_26  [key=2, style=dotted];
m0_966 -> m0_967  [key=0, style=solid];
m0_967 -> m0_26  [key=2, style=dotted];
m0_967 -> m0_968  [key=0, style=solid];
m0_969 -> m0_26  [key=2, style=dotted];
m0_969 -> m0_970  [key=0, style=solid];
m0_970 -> m0_26  [key=2, style=dotted];
m0_970 -> m0_971  [key=0, style=solid];
m0_972 -> m0_26  [key=2, style=dotted];
m0_972 -> m0_973  [key=0, style=solid];
m0_959 -> m0_22  [key=2, style=dotted];
m0_959 -> m0_961  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_959 -> m0_963  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_959 -> m0_964  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_959 -> m0_966  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_959 -> m0_967  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_959 -> m0_969  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_959 -> m0_970  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_959 -> m0_972  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_959 -> m0_960  [key=0, style=solid];
m0_959 -> m0_962  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_959 -> m0_965  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_959 -> m0_968  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_959 -> m0_971  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_958 -> m0_23  [key=2, style=dotted];
m0_958 -> m0_959  [key=0, style=solid];
m0_960 -> m0_961  [key=0, style=solid];
m0_960 -> m0_252  [key=2, style=dotted];
m0_962 -> m0_963  [key=0, style=solid];
m0_962 -> m0_252  [key=2, style=dotted];
m0_965 -> m0_966  [key=0, style=solid];
m0_965 -> m0_252  [key=2, style=dotted];
m0_968 -> m0_969  [key=0, style=solid];
m0_968 -> m0_252  [key=2, style=dotted];
m0_971 -> m0_972  [key=0, style=solid];
m0_971 -> m0_252  [key=2, style=dotted];
m0_957 -> m0_958  [key=0, style=solid];
m0_973 -> m0_956  [color=blue, key=0, style=bold];
m0_231 -> m0_232  [key=0, style=solid];
m0_231 -> m0_233  [key=0, style=solid];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_29  [key=2, style=dotted];
m0_1548 -> m0_1549  [key=0, style=solid];
m0_1550 -> m0_22  [key=2, style=dotted];
m0_1550 -> m0_23  [key=2, style=dotted];
m0_1550 -> m0_1551  [key=0, style=solid];
m0_1550 -> m0_1552  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1550 -> m0_1553  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1551 -> m0_24  [key=2, style=dotted];
m0_1551 -> m0_25  [key=2, style=dotted];
m0_1551 -> m0_1552  [key=0, style=solid];
m0_1552 -> m0_24  [key=2, style=dotted];
m0_1552 -> m0_25  [key=2, style=dotted];
m0_1552 -> m0_1553  [key=0, style=solid];
m0_1553 -> m0_24  [key=2, style=dotted];
m0_1553 -> m0_1554  [key=0, style=solid];
m0_1553 -> m0_28  [key=2, style=dotted];
m0_1549 -> m0_1550  [key=0, style=solid];
m0_1554 -> m0_1548  [color=blue, key=0, style=bold];
m0_250 -> m0_249  [key=0, style=solid];
m0_250 -> m0_253  [key=2, style=dotted];
m0_312 -> m0_313  [key=0, style=solid];
m0_316 -> m0_26  [key=2, style=dotted];
m0_316 -> m0_317  [key=0, style=solid];
m0_317 -> m0_26  [key=2, style=dotted];
m0_317 -> m0_318  [key=0, style=solid];
m0_318 -> m0_26  [key=2, style=dotted];
m0_318 -> m0_319  [key=0, style=solid];
m0_318 -> m0_287  [color=blue, key=0, style=bold];
m0_320 -> m0_26  [key=2, style=dotted];
m0_320 -> m0_321  [key=0, style=solid];
m0_321 -> m0_26  [key=2, style=dotted];
m0_321 -> m0_322  [key=0, style=solid];
m0_321 -> m0_590  [key=0, style=solid];
m0_321 -> m0_591  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_321 -> m0_597  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_321 -> m0_599  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_321 -> m0_607  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m0_321 -> m0_608  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m0_321 -> m0_609  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m0_321 -> m0_612  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m0_321 -> m0_613  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m0_321 -> m0_614  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m0_321 -> m0_616  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m0_321 -> m0_617  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m0_321 -> m0_618  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m0_321 -> m0_619  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m0_321 -> m0_620  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m0_321 -> m0_621  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m0_321 -> m0_622  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m0_321 -> m0_623  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m0_321 -> m0_624  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m0_321 -> m0_625  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m0_321 -> m0_626  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m0_321 -> m0_627  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m0_321 -> m0_628  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m0_321 -> m0_629  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m0_321 -> m0_630  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m0_321 -> m0_631  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m0_321 -> m0_632  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m0_321 -> m0_633  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m0_321 -> m0_635  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m0_321 -> m0_637  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m0_321 -> m0_638  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_321 -> m0_639  [color=darkseagreen4, key=1, label="Newtonsoft.Json.MemberSerialization", style=dashed];
m0_321 -> m0_641  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m0_321 -> m0_642  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m0_321 -> m0_643  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m0_321 -> m0_644  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m0_321 -> m0_645  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_321 -> m0_647  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m0_321 -> m0_653  [color=darkseagreen4, key=1, label="Newtonsoft.Json.MemberSerialization", style=dashed];
m0_321 -> m0_297  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty property", style=bold];
m0_321 -> m0_571  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty property", style=bold];
m0_321 -> m0_287  [color=darkorchid, key=3, label="Parameter variable object attributeProvider", style=bold];
m0_321 -> m0_553  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.MemberSerialization memberSerialization", style=bold];
m0_321 -> m0_301  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.MemberSerialization memberSerialization", style=bold];
m0_321 -> m0_300  [color=darkorchid, key=3, label="Parameter variable bool allowNonPublicAccess", style=bold];
m0_321 -> m0_576  [color=darkorchid, key=3, label="Parameter variable bool allowNonPublicAccess", style=bold];
m0_322 -> m0_26  [key=2, style=dotted];
m0_322 -> m0_323  [key=0, style=solid];
m0_324 -> m0_26  [key=2, style=dotted];
m0_324 -> m0_325  [key=0, style=solid];
m0_324 -> m0_322  [color=blue, key=0, style=bold];
m0_325 -> m0_26  [key=2, style=dotted];
m0_325 -> m0_326  [key=0, style=solid];
m0_329 -> m0_26  [key=2, style=dotted];
m0_329 -> m0_330  [key=0, style=solid];
m0_329 -> m0_106  [key=2, style=dotted];
m0_329 -> m0_331  [color=darkseagreen4, key=1, label=containerAttribute, style=dashed];
m0_330 -> m0_26  [key=2, style=dotted];
m0_330 -> m0_331  [key=0, style=solid];
m0_330 -> m0_332  [key=0, style=solid];
m0_331 -> m0_26  [key=2, style=dotted];
m0_331 -> m0_332  [key=0, style=solid];
m0_332 -> m0_26  [key=2, style=dotted];
m0_332 -> m0_333  [key=0, style=solid];
m0_332 -> m0_322  [key=2, style=dotted];
m0_334 -> m0_26  [key=2, style=dotted];
m0_334 -> m0_335  [key=0, style=solid];
m0_334 -> m0_337  [key=0, style=solid];
m0_334 -> m0_340  [key=2, style=dotted];
m0_334 -> m0_112  [key=2, style=dotted];
m0_335 -> m0_26  [key=2, style=dotted];
m0_335 -> m0_336  [key=0, style=solid];
m0_335 -> m0_326  [key=2, style=dotted];
m0_336 -> m0_26  [key=2, style=dotted];
m0_336 -> m0_337  [key=0, style=solid];
m0_336 -> m0_112  [key=2, style=dotted];
m0_336 -> m0_341  [key=2, style=dotted];
m0_337 -> m0_26  [key=2, style=dotted];
m0_337 -> m0_338  [key=0, style=solid];
m0_337 -> m0_342  [key=2, style=dotted];
m0_339 -> m0_26  [key=2, style=dotted];
m0_339 -> m0_340  [key=0, style=solid];
m0_340 -> m0_26  [key=2, style=dotted];
m0_340 -> m0_341  [key=0, style=solid];
m0_341 -> m0_26  [key=2, style=dotted];
m0_341 -> m0_342  [key=0, style=solid];
m0_343 -> m0_26  [key=2, style=dotted];
m0_343 -> m0_344  [key=0, style=solid];
m0_344 -> m0_26  [key=2, style=dotted];
m0_344 -> m0_345  [key=0, style=solid];
m0_345 -> m0_26  [key=2, style=dotted];
m0_345 -> m0_346  [key=0, style=solid];
m0_346 -> m0_26  [key=2, style=dotted];
m0_346 -> m0_347  [key=0, style=solid];
m0_347 -> m0_26  [key=2, style=dotted];
m0_347 -> m0_348  [key=0, style=solid];
m0_349 -> m0_26  [key=2, style=dotted];
m0_349 -> m0_350  [key=0, style=solid];
m0_349 -> m0_351  [key=0, style=solid];
m0_350 -> m0_26  [key=2, style=dotted];
m0_350 -> m0_351  [key=0, style=solid];
m0_350 -> m0_105  [key=2, style=dotted];
m0_351 -> m0_26  [key=2, style=dotted];
m0_351 -> m0_352  [key=0, style=solid];
m0_351 -> m0_353  [key=0, style=solid];
m0_352 -> m0_26  [key=2, style=dotted];
m0_352 -> m0_353  [key=0, style=solid];
m0_352 -> m0_105  [key=2, style=dotted];
m0_353 -> m0_26  [key=2, style=dotted];
m0_353 -> m0_354  [key=0, style=solid];
m0_353 -> m0_355  [key=0, style=solid];
m0_355 -> m0_26  [key=2, style=dotted];
m0_355 -> m0_356  [key=0, style=solid];
m0_355 -> m0_357  [key=0, style=solid];
m0_356 -> m0_26  [key=2, style=dotted];
m0_356 -> m0_357  [key=0, style=solid];
m0_356 -> m0_105  [key=2, style=dotted];
m0_357 -> m0_26  [key=2, style=dotted];
m0_357 -> m0_358  [key=0, style=solid];
m0_357 -> m0_359  [key=0, style=solid];
m0_359 -> m0_26  [key=2, style=dotted];
m0_359 -> m0_360  [key=0, style=solid];
m0_359 -> m0_342  [color=blue, key=0, style=bold];
m0_360 -> m0_26  [key=2, style=dotted];
m0_360 -> m0_361  [key=0, style=solid];
m0_360 -> m0_366  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_360 -> m0_342  [color=darkorchid, key=3, label="Parameter variable System.Type type", style=bold];
m0_360 -> m0_343  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback> onSerializing", style=bold];
m0_360 -> m0_344  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback> onSerialized", style=bold];
m0_360 -> m0_345  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback> onDeserializing", style=bold];
m0_360 -> m0_346  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback> onDeserialized", style=bold];
m0_360 -> m0_347  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback> onError", style=bold];
m0_361 -> m0_26  [key=2, style=dotted];
m0_361 -> m0_362  [key=0, style=solid];
m0_361 -> m0_379  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m0_361 -> m0_398  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m0_315 -> m0_22  [key=2, style=dotted];
m0_315 -> m0_316  [key=0, style=solid];
m0_315 -> m0_317  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_315 -> m0_318  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_315 -> m0_320  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_315 -> m0_321  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_315 -> m0_322  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_315 -> m0_324  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_315 -> m0_325  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_315 -> m0_326  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_315 -> m0_327  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_315 -> m0_329  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_315 -> m0_330  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_315 -> m0_331  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_315 -> m0_332  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_315 -> m0_334  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_315 -> m0_335  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_315 -> m0_336  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_315 -> m0_337  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_315 -> m0_339  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_315 -> m0_340  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_315 -> m0_341  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_315 -> m0_343  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_315 -> m0_344  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_315 -> m0_345  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_315 -> m0_346  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_315 -> m0_347  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_315 -> m0_349  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_315 -> m0_350  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_315 -> m0_351  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_315 -> m0_352  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_315 -> m0_353  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_315 -> m0_355  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_315 -> m0_356  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_315 -> m0_357  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_315 -> m0_359  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_315 -> m0_360  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_315 -> m0_361  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_315 -> m0_319  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_315 -> m0_323  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_315 -> m0_328  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_315 -> m0_333  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_315 -> m0_338  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_315 -> m0_342  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_315 -> m0_348  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_315 -> m0_354  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_315 -> m0_358  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_315 -> m0_362  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_314 -> m0_23  [key=2, style=dotted];
m0_314 -> m0_315  [key=0, style=solid];
m0_319 -> m0_24  [key=2, style=dotted];
m0_319 -> m0_320  [key=0, style=solid];
m0_323 -> m0_24  [key=2, style=dotted];
m0_323 -> m0_324  [key=0, style=solid];
m0_323 -> m0_325  [key=2, style=dotted];
m0_333 -> m0_24  [key=2, style=dotted];
m0_333 -> m0_334  [key=0, style=solid];
m0_333 -> m0_339  [key=2, style=dotted];
m0_338 -> m0_24  [key=2, style=dotted];
m0_338 -> m0_339  [key=0, style=solid];
m0_338 -> m0_103  [color=blue, key=0, style=bold];
m0_342 -> m0_24  [key=2, style=dotted];
m0_342 -> m0_343  [key=0, style=solid];
m0_342 -> m0_348  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_342 -> m0_350  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m0_342 -> m0_352  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m0_342 -> m0_354  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m0_342 -> m0_356  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m0_342 -> m0_358  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m0_342 -> m0_103  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m0_348 -> m0_24  [key=2, style=dotted];
m0_348 -> m0_349  [key=0, style=solid];
m0_348 -> m0_360  [key=2, style=dotted];
m0_348 -> m0_350  [color=darkseagreen4, key=1, label=onSerializing, style=dashed];
m0_348 -> m0_351  [color=darkseagreen4, key=1, label=onSerialized, style=dashed];
m0_348 -> m0_352  [color=darkseagreen4, key=1, label=onSerialized, style=dashed];
m0_348 -> m0_353  [color=darkseagreen4, key=1, label=onDeserializing, style=dashed];
m0_348 -> m0_354  [color=darkseagreen4, key=1, label=onDeserializing, style=dashed];
m0_348 -> m0_355  [color=darkseagreen4, key=1, label=onDeserialized, style=dashed];
m0_348 -> m0_356  [color=darkseagreen4, key=1, label=onDeserialized, style=dashed];
m0_348 -> m0_357  [color=darkseagreen4, key=1, label=onError, style=dashed];
m0_348 -> m0_358  [color=darkseagreen4, key=1, label=onError, style=dashed];
m0_354 -> m0_24  [key=2, style=dotted];
m0_354 -> m0_355  [key=0, style=solid];
m0_354 -> m0_105  [key=2, style=dotted];
m0_358 -> m0_24  [key=2, style=dotted];
m0_358 -> m0_359  [key=0, style=solid];
m0_358 -> m0_105  [key=2, style=dotted];
m0_362 -> m0_24  [key=2, style=dotted];
m0_362 -> m0_363  [key=0, style=solid];
m0_362 -> m0_28  [key=2, style=dotted];
m0_362 -> m0_383  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m0_362 -> m0_398  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m0_313 -> m0_314  [key=0, style=solid];
m0_363 -> m0_312  [color=blue, key=0, style=bold];
m0_363 -> m0_364  [key=0, style=solid];
m0_363 -> m0_387  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m0_363 -> m0_398  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m0_52 -> m0_53  [key=0, style=solid];
m0_52 -> m0_42  [key=2, style=dotted];
m0_52 -> m0_60  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_531 -> m0_24  [key=2, style=dotted];
m0_531 -> m0_25  [key=2, style=dotted];
m0_531 -> m0_532  [key=0, style=solid];
m0_444 -> m0_445  [key=0, style=solid];
m0_444 -> m0_20  [color=darkorchid, key=3, label="Parameter variable System.Type objectType", style=bold];
m0_444 -> m0_252  [key=2, style=dotted];
m0_445 -> m0_446  [key=0, style=solid];
m0_445 -> m0_459  [key=2, style=dotted];
m0_445 -> m0_447  [color=darkseagreen4, key=1, label=contract, style=dashed];
m0_445 -> m0_450  [color=darkseagreen4, key=1, label=contract, style=dashed];
m0_445 -> m0_452  [color=darkseagreen4, key=1, label=contract, style=dashed];
m0_445 -> m0_454  [color=darkseagreen4, key=1, label=contract, style=dashed];
m0_445 -> m0_455  [color=darkseagreen4, key=1, label=contract, style=dashed];
m0_445 -> m0_456  [color=darkseagreen4, key=1, label=contract, style=dashed];
m0_445 -> m0_457  [color=darkseagreen4, key=1, label=contract, style=dashed];
m0_445 -> m0_26  [key=2, style=dotted];
m0_446 -> m0_447  [key=0, style=solid];
m0_446 -> m0_103  [key=2, style=dotted];
m0_446 -> m0_26  [key=2, style=dotted];
m0_447 -> m0_448  [key=0, style=solid];
m0_447 -> m0_108  [key=2, style=dotted];
m0_447 -> m0_449  [color=darkseagreen4, key=1, label=overrideConstructor, style=dashed];
m0_447 -> m0_456  [color=darkseagreen4, key=1, label=overrideConstructor, style=dashed];
m0_447 -> m0_26  [key=2, style=dotted];
m0_450 -> m0_451  [key=0, style=solid];
m0_450 -> m0_194  [key=2, style=dotted];
m0_450 -> m0_453  [color=darkseagreen4, key=1, label=expectedParameterType, style=dashed];
m0_450 -> m0_455  [color=darkseagreen4, key=1, label=expectedParameterType, style=dashed];
m0_450 -> m0_26  [key=2, style=dotted];
m0_452 -> m0_456  [key=0, style=solid];
m0_452 -> m0_453  [key=0, style=solid];
m0_452 -> m0_252  [key=2, style=dotted];
m0_454 -> m0_456  [key=0, style=solid];
m0_454 -> m0_26  [key=2, style=dotted];
m0_454 -> m0_455  [key=0, style=solid];
m0_455 -> m0_458  [key=0, style=solid];
m0_455 -> m0_156  [key=2, style=dotted];
m0_455 -> m0_440  [key=2, style=dotted];
m0_455 -> m0_26  [key=2, style=dotted];
m0_455 -> m0_456  [key=0, style=solid];
m0_456 -> m0_457  [key=0, style=solid];
m0_456 -> m0_109  [key=2, style=dotted];
m0_456 -> m0_252  [key=2, style=dotted];
m0_457 -> m0_458  [key=0, style=solid];
m0_457 -> m0_26  [key=2, style=dotted];
m0_448 -> m0_449  [key=0, style=solid];
m0_448 -> m0_457  [key=0, style=solid];
m0_448 -> m0_252  [key=2, style=dotted];
m0_449 -> m0_450  [key=0, style=solid];
m0_449 -> m0_269  [key=2, style=dotted];
m0_449 -> m0_451  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m0_449 -> m0_453  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m0_449 -> m0_26  [key=2, style=dotted];
m0_451 -> m0_452  [key=0, style=solid];
m0_451 -> m0_453  [key=0, style=solid];
m0_451 -> m0_26  [key=2, style=dotted];
m0_453 -> m0_454  [key=0, style=solid];
m0_453 -> m0_455  [key=0, style=solid];
m0_453 -> m0_162  [key=2, style=dotted];
m0_453 -> m0_26  [key=2, style=dotted];
m0_458 -> m0_444  [color=blue, key=0, style=bold];
m0_458 -> m0_26  [key=2, style=dotted];
m0_458 -> m0_459  [key=0, style=solid];
m0_498 -> m0_503  [key=0, style=solid];
m0_498 -> m0_20  [color=darkorchid, key=3, label="Parameter variable System.Type t", style=bold];
m0_498 -> m0_498  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_498 -> m0_495  [key=0, style=solid];
m0_503 -> m0_504  [key=0, style=solid];
m0_503 -> m0_506  [key=2, style=dotted];
m0_504 -> m0_505  [key=0, style=solid];
m0_1416 -> m0_1417  [key=0, style=solid];
m0_1417 -> m0_22  [key=2, style=dotted];
m0_1417 -> m0_23  [key=2, style=dotted];
m0_1417 -> m0_1418  [key=0, style=solid];
m0_1417 -> m0_1421  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1418 -> m0_1419  [key=0, style=solid];
m0_1418 -> m0_42  [key=2, style=dotted];
m0_1418 -> m0_1420  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_1419 -> m0_1416  [color=blue, key=0, style=bold];
m0_286 -> m0_24  [key=2, style=dotted];
m0_286 -> m0_287  [key=0, style=solid];
m0_212 -> m0_26  [key=2, style=dotted];
m0_212 -> m0_213  [key=0, style=solid];
m0_212 -> m0_222  [key=2, style=dotted];
m0_213 -> m0_26  [key=2, style=dotted];
m0_213 -> m0_214  [key=0, style=solid];
m0_213 -> m0_222  [key=2, style=dotted];
m0_214 -> m0_26  [key=2, style=dotted];
m0_214 -> m0_215  [key=0, style=solid];
m0_214 -> m0_222  [key=2, style=dotted];
m0_215 -> m0_26  [key=2, style=dotted];
m0_215 -> m0_216  [key=0, style=solid];
m0_215 -> m0_222  [key=2, style=dotted];
m0_216 -> m0_26  [key=2, style=dotted];
m0_216 -> m0_217  [key=0, style=solid];
m0_216 -> m0_222  [key=2, style=dotted];
m0_217 -> m0_26  [key=2, style=dotted];
m0_217 -> m0_218  [key=0, style=solid];
m0_217 -> m0_222  [key=2, style=dotted];
m0_1222 -> m0_1223  [key=0, style=solid];
m0_1226 -> m0_26  [key=2, style=dotted];
m0_1226 -> m0_1227  [key=0, style=solid];
m0_1228 -> m0_26  [key=2, style=dotted];
m0_1228 -> m0_1229  [key=0, style=solid];
m0_1229 -> m0_26  [key=2, style=dotted];
m0_1229 -> m0_1230  [key=0, style=solid];
m0_1231 -> m0_26  [key=2, style=dotted];
m0_1231 -> m0_1232  [key=0, style=solid];
m0_1232 -> m0_26  [key=2, style=dotted];
m0_1232 -> m0_1233  [key=0, style=solid];
m0_1234 -> m0_26  [key=2, style=dotted];
m0_1234 -> m0_1235  [key=0, style=solid];
m0_1224 -> m0_22  [key=2, style=dotted];
m0_1224 -> m0_23  [key=2, style=dotted];
m0_1224 -> m0_1226  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1224 -> m0_1228  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1224 -> m0_1229  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1224 -> m0_1231  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1224 -> m0_1232  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1224 -> m0_1234  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1224 -> m0_1225  [key=0, style=solid];
m0_1224 -> m0_1227  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1224 -> m0_1230  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1224 -> m0_1233  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1224 -> m0_1235  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1225 -> m0_24  [key=2, style=dotted];
m0_1225 -> m0_25  [key=2, style=dotted];
m0_1225 -> m0_1226  [key=0, style=solid];
m0_1227 -> m0_24  [key=2, style=dotted];
m0_1227 -> m0_25  [key=2, style=dotted];
m0_1227 -> m0_1228  [key=0, style=solid];
m0_1230 -> m0_24  [key=2, style=dotted];
m0_1230 -> m0_25  [key=2, style=dotted];
m0_1230 -> m0_1231  [key=0, style=solid];
m0_1233 -> m0_24  [key=2, style=dotted];
m0_1233 -> m0_25  [key=2, style=dotted];
m0_1233 -> m0_1234  [key=0, style=solid];
m0_1235 -> m0_24  [key=2, style=dotted];
m0_1235 -> m0_1236  [key=0, style=solid];
m0_1235 -> m0_28  [key=2, style=dotted];
m0_1223 -> m0_1224  [key=0, style=solid];
m0_1236 -> m0_1222  [color=blue, key=0, style=bold];
m0_47 -> m0_48  [key=0, style=solid];
m0_50 -> m0_24  [key=2, style=dotted];
m0_50 -> m0_25  [key=2, style=dotted];
m0_50 -> m0_51  [key=0, style=solid];
m0_679 -> m0_678  [key=0, style=solid];
m0_679 -> m0_679  [color=darkseagreen4, key=1, label=count, style=dashed];
m0_647 -> m0_648  [key=0, style=solid];
m0_1003 -> m0_1004  [key=0, style=solid];
m0_1007 -> m0_26  [key=2, style=dotted];
m0_1007 -> m0_1008  [key=0, style=solid];
m0_1009 -> m0_26  [key=2, style=dotted];
m0_1009 -> m0_1010  [key=0, style=solid];
m0_1010 -> m0_26  [key=2, style=dotted];
m0_1010 -> m0_1011  [key=0, style=solid];
m0_1012 -> m0_26  [key=2, style=dotted];
m0_1012 -> m0_1013  [key=0, style=solid];
m0_1013 -> m0_26  [key=2, style=dotted];
m0_1013 -> m0_1014  [key=0, style=solid];
m0_1015 -> m0_26  [key=2, style=dotted];
m0_1015 -> m0_1016  [key=0, style=solid];
m0_1016 -> m0_26  [key=2, style=dotted];
m0_1016 -> m0_1017  [key=0, style=solid];
m0_1018 -> m0_26  [key=2, style=dotted];
m0_1018 -> m0_1019  [key=0, style=solid];
m0_1019 -> m0_26  [key=2, style=dotted];
m0_1019 -> m0_1020  [key=0, style=solid];
m0_1021 -> m0_26  [key=2, style=dotted];
m0_1021 -> m0_1022  [key=0, style=solid];
m0_1022 -> m0_26  [key=2, style=dotted];
m0_1022 -> m0_1023  [key=0, style=solid];
m0_1024 -> m0_26  [key=2, style=dotted];
m0_1024 -> m0_1025  [key=0, style=solid];
m0_1025 -> m0_26  [key=2, style=dotted];
m0_1025 -> m0_1026  [key=0, style=solid];
m0_1027 -> m0_26  [key=2, style=dotted];
m0_1027 -> m0_1028  [key=0, style=solid];
m0_1028 -> m0_26  [key=2, style=dotted];
m0_1028 -> m0_1029  [key=0, style=solid];
m0_1030 -> m0_26  [key=2, style=dotted];
m0_1030 -> m0_1031  [key=0, style=solid];
m0_1031 -> m0_26  [key=2, style=dotted];
m0_1031 -> m0_1032  [key=0, style=solid];
m0_1033 -> m0_26  [key=2, style=dotted];
m0_1033 -> m0_1034  [key=0, style=solid];
m0_1034 -> m0_26  [key=2, style=dotted];
m0_1034 -> m0_1035  [key=0, style=solid];
m0_1036 -> m0_26  [key=2, style=dotted];
m0_1036 -> m0_1037  [key=0, style=solid];
m0_1037 -> m0_26  [key=2, style=dotted];
m0_1037 -> m0_1038  [key=0, style=solid];
m0_1039 -> m0_26  [key=2, style=dotted];
m0_1039 -> m0_1040  [key=0, style=solid];
m0_1040 -> m0_26  [key=2, style=dotted];
m0_1040 -> m0_1041  [key=0, style=solid];
m0_1042 -> m0_26  [key=2, style=dotted];
m0_1042 -> m0_1043  [key=0, style=solid];
m0_1043 -> m0_26  [key=2, style=dotted];
m0_1043 -> m0_1044  [key=0, style=solid];
m0_1045 -> m0_26  [key=2, style=dotted];
m0_1045 -> m0_1046  [key=0, style=solid];
m0_1046 -> m0_26  [key=2, style=dotted];
m0_1046 -> m0_1047  [key=0, style=solid];
m0_1048 -> m0_26  [key=2, style=dotted];
m0_1048 -> m0_1049  [key=0, style=solid];
m0_1049 -> m0_26  [key=2, style=dotted];
m0_1049 -> m0_1050  [key=0, style=solid];
m0_1051 -> m0_26  [key=2, style=dotted];
m0_1051 -> m0_1052  [key=0, style=solid];
m0_1052 -> m0_26  [key=2, style=dotted];
m0_1052 -> m0_1053  [key=0, style=solid];
m0_1054 -> m0_26  [key=2, style=dotted];
m0_1054 -> m0_1055  [key=0, style=solid];
m0_1055 -> m0_26  [key=2, style=dotted];
m0_1055 -> m0_1056  [key=0, style=solid];
m0_1057 -> m0_26  [key=2, style=dotted];
m0_1057 -> m0_1058  [key=0, style=solid];
m0_1058 -> m0_26  [key=2, style=dotted];
m0_1058 -> m0_1059  [key=0, style=solid];
m0_1060 -> m0_26  [key=2, style=dotted];
m0_1060 -> m0_1061  [key=0, style=solid];
m0_1061 -> m0_26  [key=2, style=dotted];
m0_1061 -> m0_1062  [key=0, style=solid];
m0_1063 -> m0_26  [key=2, style=dotted];
m0_1063 -> m0_1064  [key=0, style=solid];
m0_1005 -> m0_22  [key=2, style=dotted];
m0_1005 -> m0_23  [key=2, style=dotted];
m0_1005 -> m0_1007  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1005 -> m0_1009  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1005 -> m0_1010  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1005 -> m0_1012  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1005 -> m0_1013  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1005 -> m0_1015  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1005 -> m0_1016  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1005 -> m0_1018  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1005 -> m0_1019  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1005 -> m0_1021  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1005 -> m0_1022  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1005 -> m0_1024  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1005 -> m0_1025  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1005 -> m0_1027  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1005 -> m0_1028  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1005 -> m0_1030  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1005 -> m0_1031  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1005 -> m0_1033  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1005 -> m0_1034  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1005 -> m0_1036  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1005 -> m0_1037  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1005 -> m0_1039  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1005 -> m0_1040  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1005 -> m0_1042  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1005 -> m0_1043  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1005 -> m0_1045  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1005 -> m0_1046  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1005 -> m0_1048  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1005 -> m0_1049  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1005 -> m0_1051  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1005 -> m0_1052  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1005 -> m0_1054  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1005 -> m0_1055  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1005 -> m0_1057  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1005 -> m0_1058  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1005 -> m0_1060  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1005 -> m0_1061  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1005 -> m0_1063  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1005 -> m0_1006  [key=0, style=solid];
m0_1005 -> m0_1008  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1005 -> m0_1011  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1005 -> m0_1014  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1005 -> m0_1017  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1005 -> m0_1020  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1005 -> m0_1023  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1005 -> m0_1026  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1005 -> m0_1029  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1005 -> m0_1032  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1005 -> m0_1035  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1005 -> m0_1038  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1005 -> m0_1041  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1005 -> m0_1044  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1005 -> m0_1047  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1005 -> m0_1050  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1005 -> m0_1053  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1005 -> m0_1056  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1005 -> m0_1059  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1005 -> m0_1062  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1006 -> m0_1007  [key=0, style=solid];
m0_1006 -> m0_252  [key=2, style=dotted];
m0_1008 -> m0_1009  [key=0, style=solid];
m0_1008 -> m0_252  [key=2, style=dotted];
m0_1011 -> m0_1012  [key=0, style=solid];
m0_1011 -> m0_252  [key=2, style=dotted];
m0_1014 -> m0_1015  [key=0, style=solid];
m0_1014 -> m0_252  [key=2, style=dotted];
m0_1017 -> m0_1018  [key=0, style=solid];
m0_1017 -> m0_252  [key=2, style=dotted];
m0_1020 -> m0_1021  [key=0, style=solid];
m0_1020 -> m0_252  [key=2, style=dotted];
m0_1023 -> m0_1024  [key=0, style=solid];
m0_1023 -> m0_252  [key=2, style=dotted];
m0_1026 -> m0_1027  [key=0, style=solid];
m0_1026 -> m0_252  [key=2, style=dotted];
m0_1029 -> m0_1030  [key=0, style=solid];
m0_1029 -> m0_252  [key=2, style=dotted];
m0_1032 -> m0_1033  [key=0, style=solid];
m0_1032 -> m0_252  [key=2, style=dotted];
m0_1035 -> m0_1036  [key=0, style=solid];
m0_1035 -> m0_252  [key=2, style=dotted];
m0_1038 -> m0_1039  [key=0, style=solid];
m0_1038 -> m0_252  [key=2, style=dotted];
m0_1041 -> m0_1042  [key=0, style=solid];
m0_1041 -> m0_252  [key=2, style=dotted];
m0_1044 -> m0_1045  [key=0, style=solid];
m0_1044 -> m0_252  [key=2, style=dotted];
m0_1047 -> m0_1048  [key=0, style=solid];
m0_1047 -> m0_252  [key=2, style=dotted];
m0_1050 -> m0_1051  [key=0, style=solid];
m0_1050 -> m0_252  [key=2, style=dotted];
m0_1053 -> m0_1054  [key=0, style=solid];
m0_1053 -> m0_252  [key=2, style=dotted];
m0_1056 -> m0_1057  [key=0, style=solid];
m0_1056 -> m0_252  [key=2, style=dotted];
m0_1059 -> m0_1060  [key=0, style=solid];
m0_1059 -> m0_252  [key=2, style=dotted];
m0_1062 -> m0_1063  [key=0, style=solid];
m0_1062 -> m0_252  [key=2, style=dotted];
m0_1004 -> m0_1005  [key=0, style=solid];
m0_1064 -> m0_1003  [color=blue, key=0, style=bold];
m0_590 -> m0_591  [key=0, style=solid];
m0_590 -> m0_55  [key=2, style=dotted];
m0_590 -> m0_594  [color=darkseagreen4, key=1, label=propertyAttribute, style=dashed];
m0_590 -> m0_595  [color=darkseagreen4, key=1, label=propertyAttribute, style=dashed];
m0_590 -> m0_601  [color=darkseagreen4, key=1, label=propertyAttribute, style=dashed];
m0_590 -> m0_602  [color=darkseagreen4, key=1, label=propertyAttribute, style=dashed];
m0_590 -> m0_611  [color=darkseagreen4, key=1, label=propertyAttribute, style=dashed];
m0_590 -> m0_612  [color=darkseagreen4, key=1, label=propertyAttribute, style=dashed];
m0_590 -> m0_613  [color=darkseagreen4, key=1, label=propertyAttribute, style=dashed];
m0_590 -> m0_614  [color=darkseagreen4, key=1, label=propertyAttribute, style=dashed];
m0_590 -> m0_616  [color=darkseagreen4, key=1, label=propertyAttribute, style=dashed];
m0_590 -> m0_617  [color=darkseagreen4, key=1, label=propertyAttribute, style=dashed];
m0_590 -> m0_618  [color=darkseagreen4, key=1, label=propertyAttribute, style=dashed];
m0_590 -> m0_619  [color=darkseagreen4, key=1, label=propertyAttribute, style=dashed];
m0_590 -> m0_620  [color=darkseagreen4, key=1, label=propertyAttribute, style=dashed];
m0_590 -> m0_621  [color=darkseagreen4, key=1, label=propertyAttribute, style=dashed];
m0_590 -> m0_622  [color=darkseagreen4, key=1, label=propertyAttribute, style=dashed];
m0_590 -> m0_623  [color=darkseagreen4, key=1, label=propertyAttribute, style=dashed];
m0_590 -> m0_624  [color=darkseagreen4, key=1, label=propertyAttribute, style=dashed];
m0_590 -> m0_24  [key=2, style=dotted];
m0_591 -> m0_592  [key=0, style=solid];
m0_591 -> m0_55  [key=2, style=dotted];
m0_591 -> m0_634  [color=darkseagreen4, key=1, label=requiredAttribute, style=dashed];
m0_591 -> m0_26  [key=2, style=dotted];
m0_597 -> m0_598  [key=0, style=solid];
m0_597 -> m0_607  [color=darkseagreen4, key=1, label=mappedName, style=dashed];
m0_597 -> m0_608  [color=darkseagreen4, key=1, label=mappedName, style=dashed];
m0_599 -> m0_600  [key=0, style=solid];
m0_599 -> m0_55  [key=2, style=dotted];
m0_599 -> m0_603  [color=darkseagreen4, key=1, label=containerAttribute, style=dashed];
m0_599 -> m0_604  [color=darkseagreen4, key=1, label=containerAttribute, style=dashed];
m0_599 -> m0_22  [key=2, style=dotted];
m0_599 -> m0_601  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_599 -> m0_595  [key=2, style=dotted];
m0_599 -> m0_596  [key=2, style=dotted];
m0_607 -> m0_609  [key=0, style=solid];
m0_607 -> m0_657  [key=2, style=dotted];
m0_607 -> m0_26  [key=2, style=dotted];
m0_607 -> m0_608  [key=0, style=solid];
m0_608 -> m0_609  [key=0, style=solid];
m0_608 -> m0_658  [key=2, style=dotted];
m0_608 -> m0_608  [color=darkseagreen4, key=1, label=j, style=dashed];
m0_608 -> m0_603  [key=0, style=solid];
m0_609 -> m0_610  [key=0, style=solid];
m0_609 -> m0_597  [color=blue, key=0, style=bold];
m0_612 -> m0_613  [key=0, style=solid];
m0_612 -> m0_22  [key=2, style=dotted];
m0_612 -> m0_23  [key=2, style=dotted];
m0_612 -> m0_618  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_612 -> m0_619  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_612 -> m0_615  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_612 -> m0_617  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_613 -> m0_614  [key=0, style=solid];
m0_613 -> m0_616  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_614 -> m0_615  [key=0, style=solid];
m0_614 -> m0_617  [key=0, style=solid];
m0_616 -> m0_617  [key=0, style=solid];
m0_616 -> m0_614  [key=0, style=solid];
m0_616 -> m0_616  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_617 -> m0_618  [key=0, style=solid];
m0_617 -> m0_24  [key=2, style=dotted];
m0_617 -> m0_25  [key=2, style=dotted];
m0_618 -> m0_619  [key=0, style=solid];
m0_618 -> m0_26  [key=2, style=dotted];
m0_619 -> m0_620  [key=0, style=solid];
m0_619 -> m0_26  [key=2, style=dotted];
m0_620 -> m0_621  [key=0, style=solid];
m0_620 -> m0_610  [color=blue, key=0, style=bold];
m0_621 -> m0_622  [key=0, style=solid];
m0_622 -> m0_623  [key=0, style=solid];
m0_622 -> m0_659  [key=2, style=dotted];
m0_622 -> m0_22  [key=2, style=dotted];
m0_622 -> m0_23  [key=2, style=dotted];
m0_622 -> m0_624  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_623 -> m0_624  [key=0, style=solid];
m0_623 -> m0_25  [key=2, style=dotted];
m0_623 -> m0_252  [key=2, style=dotted];
m0_624 -> m0_634  [key=0, style=solid];
m0_624 -> m0_26  [key=2, style=dotted];
m0_624 -> m0_625  [key=0, style=solid];
m0_625 -> m0_626  [key=0, style=solid];
m0_625 -> m0_621  [color=blue, key=0, style=bold];
m0_626 -> m0_627  [key=0, style=solid];
m0_627 -> m0_628  [key=0, style=solid];
m0_627 -> m0_22  [key=2, style=dotted];
m0_627 -> m0_23  [key=2, style=dotted];
m0_627 -> m0_631  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_628 -> m0_629  [key=0, style=solid];
m0_628 -> m0_42  [key=2, style=dotted];
m0_628 -> m0_630  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_629 -> m0_630  [key=0, style=solid];
m0_629 -> m0_626  [color=blue, key=0, style=bold];
m0_633 -> m0_634  [key=0, style=solid];
m0_635 -> m0_636  [key=0, style=solid];
m0_635 -> m0_42  [key=2, style=dotted];
m0_635 -> m0_637  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_641 -> m0_643  [key=0, style=solid];
m0_641 -> m0_22  [key=2, style=dotted];
m0_641 -> m0_23  [key=2, style=dotted];
m0_641 -> m0_642  [key=0, style=solid];
m0_641 -> m0_645  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_642 -> m0_643  [key=0, style=solid];
m0_642 -> m0_42  [key=2, style=dotted];
m0_642 -> m0_644  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_643 -> m0_644  [key=0, style=solid];
m0_643 -> m0_325  [key=2, style=dotted];
m0_643 -> m0_640  [color=blue, key=0, style=bold];
m0_653 -> m0_654  [key=0, style=solid];
m0_653 -> m0_655  [key=0, style=solid];
m0_653 -> m0_648  [color=blue, key=0, style=bold];
m0_594 -> m0_595  [key=0, style=solid];
m0_594 -> m0_597  [key=0, style=solid];
m0_595 -> m0_596  [key=0, style=solid];
m0_595 -> m0_607  [color=darkseagreen4, key=1, label=mappedName, style=dashed];
m0_595 -> m0_608  [color=darkseagreen4, key=1, label=mappedName, style=dashed];
m0_601 -> m0_602  [key=0, style=solid];
m0_601 -> m0_603  [key=0, style=solid];
m0_601 -> m0_26  [key=2, style=dotted];
m0_602 -> m0_606  [key=0, style=solid];
m0_602 -> m0_656  [key=2, style=dotted];
m0_602 -> m0_607  [color=darkseagreen4, key=1, label=namingStrategy, style=dashed];
m0_602 -> m0_603  [key=0, style=solid];
m0_602 -> m0_604  [color=darkseagreen4, key=1, label=j, style=dashed];
m0_602 -> m0_608  [color=darkseagreen4, key=1, label=j, style=dashed];
m0_611 -> m0_612  [key=0, style=solid];
m0_611 -> m0_625  [key=0, style=solid];
m0_592 -> m0_593  [key=0, style=solid];
m0_592 -> m0_321  [color=darkorchid, key=3, label="Local variable string mappedName", style=bold];
m0_592 -> m0_592  [color=darkseagreen4, key=1, label=j, style=dashed];
m0_592 -> m0_587  [key=0, style=solid];
m0_634 -> m0_635  [key=0, style=solid];
m0_634 -> m0_637  [key=0, style=solid];
m0_634 -> m0_22  [key=2, style=dotted];
m0_634 -> m0_23  [key=2, style=dotted];
m0_634 -> m0_638  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_593 -> m0_594  [key=0, style=solid];
m0_593 -> m0_581  [color=blue, key=0, style=bold];
m0_596 -> m0_599  [key=0, style=solid];
m0_596 -> m0_607  [color=darkseagreen4, key=1, label=hasSpecifiedName, style=dashed];
m0_598 -> m0_599  [key=0, style=solid];
m0_598 -> m0_607  [color=darkseagreen4, key=1, label=hasSpecifiedName, style=dashed];
m0_598 -> m0_594  [key=2, style=dotted];
m0_598 -> m0_604  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_600 -> m0_601  [key=0, style=solid];
m0_600 -> m0_24  [key=2, style=dotted];
m0_603 -> m0_604  [key=0, style=solid];
m0_603 -> m0_605  [key=0, style=solid];
m0_603 -> m0_609  [key=0, style=solid];
m0_604 -> m0_606  [key=0, style=solid];
m0_604 -> m0_107  [key=2, style=dotted];
m0_604 -> m0_607  [color=darkseagreen4, key=1, label=namingStrategy, style=dashed];
m0_604 -> m0_605  [key=0, style=solid];
m0_605 -> m0_606  [key=0, style=solid];
m0_605 -> m0_607  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_605 -> m0_22  [key=2, style=dotted];
m0_605 -> m0_595  [key=2, style=dotted];
m0_605 -> m0_596  [key=2, style=dotted];
m0_606 -> m0_607  [key=0, style=solid];
m0_606 -> m0_608  [key=0, style=solid];
m0_606 -> m0_24  [key=2, style=dotted];
m0_610 -> m0_611  [key=0, style=solid];
m0_610 -> m0_637  [color=darkseagreen4, key=1, label=hasMemberAttribute, style=dashed];
m0_610 -> m0_642  [color=darkseagreen4, key=1, label=hasMemberAttribute, style=dashed];
m0_610 -> m0_651  [color=darkseagreen4, key=1, label=hasMemberAttribute, style=dashed];
m0_610 -> m0_121  [color=darkorchid, key=3, label="Local variable bool hasMemberAttribute", style=bold];
m0_651 -> m0_652  [key=0, style=solid];
m0_651 -> m0_653  [key=0, style=solid];
m0_651 -> m0_22  [key=2, style=dotted];
m0_651 -> m0_23  [key=2, style=dotted];
m0_651 -> m0_654  [key=2, style=dotted];
m0_651 -> m0_656  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_615 -> m0_616  [key=0, style=solid];
m0_615 -> m0_637  [color=darkseagreen4, key=1, label=hasMemberAttribute, style=dashed];
m0_615 -> m0_642  [color=darkseagreen4, key=1, label=hasMemberAttribute, style=dashed];
m0_615 -> m0_651  [color=darkseagreen4, key=1, label=hasMemberAttribute, style=dashed];
m0_615 -> m0_24  [key=2, style=dotted];
m0_615 -> m0_25  [key=2, style=dotted];
m0_636 -> m0_637  [key=0, style=solid];
m0_636 -> m0_642  [color=darkseagreen4, key=1, label=hasMemberAttribute, style=dashed];
m0_636 -> m0_651  [color=darkseagreen4, key=1, label=hasMemberAttribute, style=dashed];
m0_636 -> m0_633  [color=blue, key=0, style=bold];
m0_640 -> m0_641  [key=0, style=solid];
m0_640 -> m0_121  [color=darkorchid, key=3, label="Local variable bool hasIgnoreDataMemberAttribute", style=bold];
m0_648 -> m0_649  [key=0, style=solid];
m0_648 -> m0_655  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m0_649 -> m0_650  [key=0, style=solid];
m0_649 -> m0_651  [key=0, style=solid];
m0_650 -> m0_651  [key=0, style=solid];
m0_650 -> m0_655  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m0_650 -> m0_230  [key=2, style=dotted];
m0_652 -> m0_653  [key=0, style=solid];
m0_652 -> m0_655  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_652 -> m0_42  [key=2, style=dotted];
m0_654 -> m0_655  [key=0, style=solid];
m0_230 -> m0_231  [key=0, style=solid];
m0_230 -> m0_232  [color=crimson, key=0, style=bold];
m0_197 -> m0_24  [key=2, style=dotted];
m0_197 -> m0_25  [key=2, style=dotted];
m0_197 -> m0_198  [key=0, style=solid];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_48  [key=2, style=dotted];
m0_27 -> m0_49  [key=2, style=dotted];
m0_27 -> m0_57  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_27 -> m0_31  [color=darkseagreen4, key=1, label=allMembers, style=dashed];
m0_27 -> m0_41  [color=darkseagreen4, key=1, label=allMembers, style=dashed];
m0_794 -> m0_795  [key=0, style=solid];
m0_797 -> m0_26  [key=2, style=dotted];
m0_797 -> m0_798  [key=0, style=solid];
m0_797 -> m0_46  [key=2, style=dotted];
m0_799 -> m0_26  [key=2, style=dotted];
m0_799 -> m0_800  [key=0, style=solid];
m0_799 -> m0_46  [key=2, style=dotted];
m0_801 -> m0_26  [key=2, style=dotted];
m0_801 -> m0_802  [key=0, style=solid];
m0_801 -> m0_46  [key=2, style=dotted];
m0_803 -> m0_26  [key=2, style=dotted];
m0_803 -> m0_804  [key=0, style=solid];
m0_803 -> m0_46  [key=2, style=dotted];
m0_805 -> m0_26  [key=2, style=dotted];
m0_805 -> m0_806  [key=0, style=solid];
m0_805 -> m0_46  [key=2, style=dotted];
m0_807 -> m0_26  [key=2, style=dotted];
m0_807 -> m0_808  [key=0, style=solid];
m0_807 -> m0_46  [key=2, style=dotted];
m0_817 -> m0_26  [key=2, style=dotted];
m0_817 -> m0_818  [key=0, style=solid];
m0_817 -> m0_46  [key=2, style=dotted];
m0_796 -> m0_22  [key=2, style=dotted];
m0_796 -> m0_23  [key=2, style=dotted];
m0_796 -> m0_797  [key=0, style=solid];
m0_798 -> m0_22  [key=2, style=dotted];
m0_798 -> m0_23  [key=2, style=dotted];
m0_798 -> m0_799  [key=0, style=solid];
m0_800 -> m0_22  [key=2, style=dotted];
m0_800 -> m0_23  [key=2, style=dotted];
m0_800 -> m0_801  [key=0, style=solid];
m0_802 -> m0_22  [key=2, style=dotted];
m0_802 -> m0_23  [key=2, style=dotted];
m0_802 -> m0_803  [key=0, style=solid];
m0_804 -> m0_22  [key=2, style=dotted];
m0_804 -> m0_23  [key=2, style=dotted];
m0_804 -> m0_805  [key=0, style=solid];
m0_804 -> m0_821  [key=2, style=dotted];
m0_806 -> m0_22  [key=2, style=dotted];
m0_806 -> m0_23  [key=2, style=dotted];
m0_806 -> m0_807  [key=0, style=solid];
m0_806 -> m0_821  [key=2, style=dotted];
m0_808 -> m0_22  [key=2, style=dotted];
m0_808 -> m0_23  [key=2, style=dotted];
m0_808 -> m0_809  [key=0, style=solid];
m0_808 -> m0_822  [key=2, style=dotted];
m0_808 -> m0_824  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_810 -> m0_22  [key=2, style=dotted];
m0_810 -> m0_23  [key=2, style=dotted];
m0_810 -> m0_811  [key=0, style=solid];
m0_810 -> m0_827  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_812 -> m0_22  [key=2, style=dotted];
m0_812 -> m0_23  [key=2, style=dotted];
m0_812 -> m0_813  [key=0, style=solid];
m0_812 -> m0_830  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_814 -> m0_22  [key=2, style=dotted];
m0_814 -> m0_23  [key=2, style=dotted];
m0_814 -> m0_815  [key=0, style=solid];
m0_814 -> m0_833  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_816 -> m0_22  [key=2, style=dotted];
m0_816 -> m0_23  [key=2, style=dotted];
m0_816 -> m0_817  [key=0, style=solid];
m0_818 -> m0_22  [key=2, style=dotted];
m0_818 -> m0_23  [key=2, style=dotted];
m0_818 -> m0_819  [key=0, style=solid];
m0_818 -> m0_836  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_795 -> m0_796  [key=0, style=solid];
m0_809 -> m0_810  [key=0, style=solid];
m0_809 -> m0_42  [key=2, style=dotted];
m0_809 -> m0_823  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_811 -> m0_812  [key=0, style=solid];
m0_811 -> m0_42  [key=2, style=dotted];
m0_811 -> m0_826  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_813 -> m0_814  [key=0, style=solid];
m0_813 -> m0_42  [key=2, style=dotted];
m0_813 -> m0_829  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_815 -> m0_816  [key=0, style=solid];
m0_815 -> m0_42  [key=2, style=dotted];
m0_815 -> m0_832  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_819 -> m0_820  [key=0, style=solid];
m0_819 -> m0_42  [key=2, style=dotted];
m0_819 -> m0_835  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_820 -> m0_794  [color=blue, key=0, style=bold];
m0_539 -> m0_540  [key=0, style=solid];
m0_539 -> m0_541  [key=0, style=solid];
m0_547 -> m0_26  [key=2, style=dotted];
m0_547 -> m0_548  [key=0, style=solid];
m0_547 -> m0_554  [key=2, style=dotted];
m0_541 -> m0_22  [key=2, style=dotted];
m0_541 -> m0_23  [key=2, style=dotted];
m0_541 -> m0_547  [color=darkseagreen4, key=1, label=nameTable, style=dashed];
m0_541 -> m0_542  [key=0, style=solid];
m0_541 -> m0_544  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_541 -> m0_546  [color=darkseagreen4, key=1, label=nameTable, style=dashed];
m0_541 -> m0_552  [key=2, style=dotted];
m0_544 -> m0_24  [key=2, style=dotted];
m0_544 -> m0_545  [key=0, style=solid];
m0_544 -> m0_553  [key=2, style=dotted];
m0_544 -> m0_547  [color=darkseagreen4, key=1, label=property, style=dashed];
m0_544 -> m0_548  [color=darkseagreen4, key=1, label=property, style=dashed];
m0_546 -> m0_24  [key=2, style=dotted];
m0_546 -> m0_547  [key=0, style=solid];
m0_540 -> m0_541  [key=0, style=solid];
m0_540 -> m0_551  [key=0, style=solid];
m0_540 -> m0_213  [key=2, style=dotted];
m0_542 -> m0_543  [key=0, style=solid];
m0_542 -> m0_545  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_542 -> m0_286  [key=2, style=dotted];
m0_542 -> m0_548  [color=darkseagreen4, key=1, label=properties, style=dashed];
m0_542 -> m0_549  [color=darkseagreen4, key=1, label=properties, style=dashed];
m0_543 -> m0_544  [key=0, style=solid];
m0_543 -> m0_546  [key=0, style=solid];
m0_543 -> m0_549  [key=0, style=solid];
m0_545 -> m0_543  [key=0, style=solid];
m0_545 -> m0_545  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_545 -> m0_546  [key=0, style=solid];
m0_548 -> m0_539  [color=blue, key=0, style=bold];
m0_548 -> m0_543  [key=0, style=solid];
m0_548 -> m0_288  [key=2, style=dotted];
m0_555 -> m0_556  [key=0, style=solid];
m0_555 -> m0_559  [key=0, style=solid];
m0_1307 -> m0_1308  [key=0, style=solid];
m0_1311 -> m0_26  [key=2, style=dotted];
m0_1311 -> m0_1312  [key=0, style=solid];
m0_1313 -> m0_26  [key=2, style=dotted];
m0_1313 -> m0_1314  [key=0, style=solid];
m0_1315 -> m0_26  [key=2, style=dotted];
m0_1315 -> m0_1316  [key=0, style=solid];
m0_1316 -> m0_26  [key=2, style=dotted];
m0_1316 -> m0_1317  [key=0, style=solid];
m0_1317 -> m0_26  [key=2, style=dotted];
m0_1317 -> m0_1318  [key=0, style=solid];
m0_1317 -> m0_1264  [key=2, style=dotted];
m0_1317 -> m0_1265  [key=2, style=dotted];
m0_1317 -> m0_1266  [key=2, style=dotted];
m0_1317 -> m0_1321  [key=2, style=dotted];
m0_1317 -> m0_1322  [key=2, style=dotted];
m0_1319 -> m0_26  [key=2, style=dotted];
m0_1319 -> m0_1320  [key=0, style=solid];
m0_1309 -> m0_22  [key=2, style=dotted];
m0_1309 -> m0_23  [key=2, style=dotted];
m0_1309 -> m0_1311  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1309 -> m0_1313  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1309 -> m0_1315  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1309 -> m0_1316  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1309 -> m0_1317  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1309 -> m0_1319  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1309 -> m0_1310  [key=0, style=solid];
m0_1309 -> m0_1312  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1309 -> m0_1314  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1309 -> m0_1318  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1310 -> m0_24  [key=2, style=dotted];
m0_1310 -> m0_25  [key=2, style=dotted];
m0_1310 -> m0_1311  [key=0, style=solid];
m0_1312 -> m0_24  [key=2, style=dotted];
m0_1312 -> m0_25  [key=2, style=dotted];
m0_1312 -> m0_1313  [key=0, style=solid];
m0_1318 -> m0_24  [key=2, style=dotted];
m0_1318 -> m0_25  [key=2, style=dotted];
m0_1318 -> m0_1319  [key=0, style=solid];
m0_1314 -> m0_1315  [key=0, style=solid];
m0_1314 -> m0_1179  [key=2, style=dotted];
m0_1308 -> m0_1309  [key=0, style=solid];
m0_1320 -> m0_1307  [color=blue, key=0, style=bold];
m0_764 -> m0_765  [key=0, style=solid];
m0_768 -> m0_26  [key=2, style=dotted];
m0_768 -> m0_769  [key=0, style=solid];
m0_770 -> m0_26  [key=2, style=dotted];
m0_770 -> m0_771  [key=0, style=solid];
m0_771 -> m0_26  [key=2, style=dotted];
m0_771 -> m0_772  [key=0, style=solid];
m0_773 -> m0_26  [key=2, style=dotted];
m0_773 -> m0_774  [key=0, style=solid];
m0_774 -> m0_26  [key=2, style=dotted];
m0_774 -> m0_775  [key=0, style=solid];
m0_776 -> m0_26  [key=2, style=dotted];
m0_776 -> m0_777  [key=0, style=solid];
m0_777 -> m0_26  [key=2, style=dotted];
m0_777 -> m0_778  [key=0, style=solid];
m0_778 -> m0_26  [key=2, style=dotted];
m0_778 -> m0_779  [key=0, style=solid];
m0_779 -> m0_26  [key=2, style=dotted];
m0_779 -> m0_780  [key=0, style=solid];
m0_781 -> m0_26  [key=2, style=dotted];
m0_781 -> m0_782  [key=0, style=solid];
m0_782 -> m0_26  [key=2, style=dotted];
m0_782 -> m0_783  [key=0, style=solid];
m0_767 -> m0_22  [key=2, style=dotted];
m0_767 -> m0_768  [key=0, style=solid];
m0_767 -> m0_770  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_767 -> m0_771  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_767 -> m0_773  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_767 -> m0_774  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_767 -> m0_776  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_767 -> m0_777  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_767 -> m0_778  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_767 -> m0_779  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_767 -> m0_781  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_767 -> m0_782  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_767 -> m0_769  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_767 -> m0_772  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_767 -> m0_775  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_767 -> m0_780  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_766 -> m0_23  [key=2, style=dotted];
m0_766 -> m0_767  [key=0, style=solid];
m0_769 -> m0_770  [key=0, style=solid];
m0_769 -> m0_252  [key=2, style=dotted];
m0_772 -> m0_773  [key=0, style=solid];
m0_772 -> m0_252  [key=2, style=dotted];
m0_775 -> m0_776  [key=0, style=solid];
m0_775 -> m0_252  [key=2, style=dotted];
m0_780 -> m0_781  [key=0, style=solid];
m0_780 -> m0_252  [key=2, style=dotted];
m0_765 -> m0_766  [key=0, style=solid];
m0_783 -> m0_764  [color=blue, key=0, style=bold];
m0_2010 -> m0_2011  [key=0, style=solid];
m0_2019 -> m0_26  [key=2, style=dotted];
m0_2019 -> m0_2020  [key=0, style=solid];
m0_2024 -> m0_26  [key=2, style=dotted];
m0_2024 -> m0_2025  [key=0, style=solid];
m0_2012 -> m0_22  [key=2, style=dotted];
m0_2012 -> m0_2019  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_2012 -> m0_2024  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_2012 -> m0_2013  [key=0, style=solid];
m0_2012 -> m0_2015  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_2012 -> m0_2033  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_2012 -> m0_2016  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_2012 -> m0_2036  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_2012 -> m0_2018  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_2012 -> m0_2021  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_2012 -> m0_2039  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_2012 -> m0_2023  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_2012 -> m0_2026  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_2012 -> m0_2042  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_2012 -> m0_2027  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_2012 -> m0_2045  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_2012 -> m0_2028  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_2012 -> m0_2048  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_2011 -> m0_23  [key=2, style=dotted];
m0_2011 -> m0_2012  [key=0, style=solid];
m0_2011 -> m0_2031  [key=2, style=dotted];
m0_2011 -> m0_2014  [color=darkseagreen4, key=1, label=toggleReaderError, style=dashed];
m0_2011 -> m0_2017  [color=darkseagreen4, key=1, label=toggleReaderError, style=dashed];
m0_2011 -> m0_2020  [color=darkseagreen4, key=1, label=toggleReaderError, style=dashed];
m0_2011 -> m0_2022  [color=darkseagreen4, key=1, label=toggleReaderError, style=dashed];
m0_2011 -> m0_2025  [color=darkseagreen4, key=1, label=toggleReaderError, style=dashed];
m0_2011 -> m0_2029  [color=darkseagreen4, key=1, label=toggleReaderError, style=dashed];
m0_2013 -> m0_24  [key=2, style=dotted];
m0_2013 -> m0_25  [key=2, style=dotted];
m0_2013 -> m0_2014  [key=0, style=solid];
m0_2018 -> m0_24  [key=2, style=dotted];
m0_2018 -> m0_25  [key=2, style=dotted];
m0_2018 -> m0_2019  [key=0, style=solid];
m0_2023 -> m0_24  [key=2, style=dotted];
m0_2023 -> m0_25  [key=2, style=dotted];
m0_2023 -> m0_2024  [key=0, style=solid];
m0_2020 -> m0_2021  [key=0, style=solid];
m0_2025 -> m0_2026  [key=0, style=solid];
m0_2015 -> m0_2016  [key=0, style=solid];
m0_2015 -> m0_42  [key=2, style=dotted];
m0_2015 -> m0_2032  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_2016 -> m0_2017  [key=0, style=solid];
m0_2016 -> m0_42  [key=2, style=dotted];
m0_2016 -> m0_2035  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_2021 -> m0_2022  [key=0, style=solid];
m0_2021 -> m0_42  [key=2, style=dotted];
m0_2021 -> m0_2038  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_2026 -> m0_2027  [key=0, style=solid];
m0_2026 -> m0_42  [key=2, style=dotted];
m0_2026 -> m0_2041  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_2027 -> m0_2028  [key=0, style=solid];
m0_2027 -> m0_42  [key=2, style=dotted];
m0_2027 -> m0_2044  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_2028 -> m0_2029  [key=0, style=solid];
m0_2028 -> m0_42  [key=2, style=dotted];
m0_2028 -> m0_2047  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_2014 -> m0_2015  [key=0, style=solid];
m0_2017 -> m0_2018  [key=0, style=solid];
m0_2022 -> m0_2023  [key=0, style=solid];
m0_2029 -> m0_2030  [key=0, style=solid];
m0_2030 -> m0_2010  [color=blue, key=0, style=bold];
m0_1355 -> m0_1356  [key=0, style=solid];
m0_1360 -> m0_26  [key=2, style=dotted];
m0_1360 -> m0_1361  [key=0, style=solid];
m0_1362 -> m0_26  [key=2, style=dotted];
m0_1362 -> m0_1363  [key=0, style=solid];
m0_1364 -> m0_26  [key=2, style=dotted];
m0_1364 -> m0_1365  [key=0, style=solid];
m0_1365 -> m0_26  [key=2, style=dotted];
m0_1365 -> m0_1366  [key=0, style=solid];
m0_1369 -> m0_26  [key=2, style=dotted];
m0_1369 -> m0_1370  [key=0, style=solid];
m0_1367 -> m0_26  [key=2, style=dotted];
m0_1367 -> m0_1367  [color=darkseagreen4, key=1, label=dt, style=dashed];
m0_1367 -> m0_1368  [key=0, style=solid];
m0_1367 -> m0_1337  [key=2, style=dotted];
m0_1357 -> m0_22  [key=2, style=dotted];
m0_1357 -> m0_23  [key=2, style=dotted];
m0_1357 -> m0_1360  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1357 -> m0_1362  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1357 -> m0_1364  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1357 -> m0_1365  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1357 -> m0_1369  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1357 -> m0_1358  [key=0, style=solid];
m0_1357 -> m0_1359  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1357 -> m0_1361  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1357 -> m0_1363  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1357 -> m0_1366  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1357 -> m0_1368  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1359 -> m0_24  [key=2, style=dotted];
m0_1359 -> m0_25  [key=2, style=dotted];
m0_1359 -> m0_1360  [key=0, style=solid];
m0_1361 -> m0_24  [key=2, style=dotted];
m0_1361 -> m0_25  [key=2, style=dotted];
m0_1361 -> m0_1362  [key=0, style=solid];
m0_1368 -> m0_24  [key=2, style=dotted];
m0_1368 -> m0_25  [key=2, style=dotted];
m0_1368 -> m0_1369  [key=0, style=solid];
m0_1363 -> m0_1364  [key=0, style=solid];
m0_1363 -> m0_1179  [key=2, style=dotted];
m0_1366 -> m0_1367  [key=0, style=solid];
m0_1356 -> m0_1357  [key=0, style=solid];
m0_1358 -> m0_1359  [key=0, style=solid];
m0_1358 -> m0_1354  [key=2, style=dotted];
m0_1370 -> m0_1355  [color=blue, key=0, style=bold];
m0_1767 -> m0_1768  [key=0, style=solid];
m0_1771 -> m0_26  [key=2, style=dotted];
m0_1771 -> m0_1772  [key=0, style=solid];
m0_1772 -> m0_26  [key=2, style=dotted];
m0_1772 -> m0_1773  [key=0, style=solid];
m0_1769 -> m0_22  [key=2, style=dotted];
m0_1769 -> m0_1771  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1769 -> m0_1772  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1769 -> m0_1770  [key=0, style=solid];
m0_1769 -> m0_231  [key=2, style=dotted];
m0_1769 -> m0_271  [key=2, style=dotted];
m0_1769 -> m0_272  [key=2, style=dotted];
m0_1769 -> m0_1773  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1770 -> m0_24  [key=2, style=dotted];
m0_1770 -> m0_25  [key=2, style=dotted];
m0_1770 -> m0_1771  [key=0, style=solid];
m0_1773 -> m0_24  [key=2, style=dotted];
m0_1773 -> m0_1774  [key=0, style=solid];
m0_1773 -> m0_28  [key=2, style=dotted];
m0_1768 -> m0_1769  [key=0, style=solid];
m0_1774 -> m0_1767  [color=blue, key=0, style=bold];
m0_474 -> m0_475  [key=0, style=solid];
m0_474 -> m0_103  [key=2, style=dotted];
m0_478 -> m0_26  [key=2, style=dotted];
m0_478 -> m0_479  [key=0, style=solid];
m0_478 -> m0_480  [key=0, style=solid];
m0_478 -> m0_498  [key=2, style=dotted];
m0_476 -> m0_22  [key=2, style=dotted];
m0_476 -> m0_23  [key=2, style=dotted];
m0_476 -> m0_478  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_476 -> m0_477  [key=0, style=solid];
m0_476 -> m0_472  [color=blue, key=0, style=bold];
m0_475 -> m0_478  [color=darkseagreen4, key=1, label=s, style=dashed];
m0_475 -> m0_476  [key=0, style=solid];
m0_475 -> m0_480  [key=2, style=dotted];
m0_477 -> m0_478  [key=0, style=solid];
m0_477 -> m0_252  [key=2, style=dotted];
m0_479 -> m0_474  [color=blue, key=0, style=bold];
m0_479 -> m0_497  [key=0, style=solid];
m0_479 -> m0_460  [key=2, style=dotted];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_18  [color=darkseagreen4, key=1, label=json, style=dashed];
m0_2 -> m0_0  [color=blue, key=0, style=bold];
m0_2 -> m0_22  [key=2, style=dotted];
m0_2 -> m0_23  [key=2, style=dotted];
m0_2 -> m0_4  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_2 -> m0_6  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_2 -> m0_8  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_2 -> m0_10  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_2 -> m0_12  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_2 -> m0_13  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_2 -> m0_14  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_2 -> m0_16  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_5  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_2 -> m0_7  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_2 -> m0_9  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_2 -> m0_11  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_2 -> m0_15  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_2 -> m0_17  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_1371 -> m0_1372  [key=0, style=solid];
m0_1375 -> m0_26  [key=2, style=dotted];
m0_1375 -> m0_1376  [key=0, style=solid];
m0_1377 -> m0_26  [key=2, style=dotted];
m0_1377 -> m0_1378  [key=0, style=solid];
m0_1379 -> m0_26  [key=2, style=dotted];
m0_1379 -> m0_1380  [key=0, style=solid];
m0_1380 -> m0_26  [key=2, style=dotted];
m0_1380 -> m0_1381  [key=0, style=solid];
m0_1381 -> m0_26  [key=2, style=dotted];
m0_1381 -> m0_1382  [key=0, style=solid];
m0_1373 -> m0_22  [key=2, style=dotted];
m0_1373 -> m0_23  [key=2, style=dotted];
m0_1373 -> m0_1375  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1373 -> m0_1377  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1373 -> m0_1379  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1373 -> m0_1380  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1373 -> m0_1381  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1373 -> m0_1374  [key=0, style=solid];
m0_1373 -> m0_1376  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1373 -> m0_1378  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1374 -> m0_24  [key=2, style=dotted];
m0_1374 -> m0_25  [key=2, style=dotted];
m0_1374 -> m0_1375  [key=0, style=solid];
m0_1376 -> m0_24  [key=2, style=dotted];
m0_1376 -> m0_25  [key=2, style=dotted];
m0_1376 -> m0_1377  [key=0, style=solid];
m0_1378 -> m0_1379  [key=0, style=solid];
m0_1378 -> m0_117  [key=2, style=dotted];
m0_1372 -> m0_1373  [key=0, style=solid];
m0_1382 -> m0_1371  [color=blue, key=0, style=bold];
m0_1409 -> m0_1410  [key=0, style=solid];
m0_1410 -> m0_22  [key=2, style=dotted];
m0_1410 -> m0_23  [key=2, style=dotted];
m0_1410 -> m0_1411  [key=0, style=solid];
m0_1410 -> m0_1414  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1411 -> m0_1412  [key=0, style=solid];
m0_1411 -> m0_42  [key=2, style=dotted];
m0_1411 -> m0_1413  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_1412 -> m0_1409  [color=blue, key=0, style=bold];
m0_192 -> m0_26  [key=2, style=dotted];
m0_192 -> m0_193  [key=0, style=solid];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_5  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_3 -> m0_8  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_3 -> m0_9  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_3 -> m0_13  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_3 -> m0_6  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Serialization.JsonContract ResolveContract", style=bold];
m0_3 -> m0_24  [key=2, style=dotted];
m0_3 -> m0_25  [key=2, style=dotted];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_6  [key=0, style=solid];
m0_4 -> m0_26  [key=2, style=dotted];
m0_5 -> m0_16  [key=0, style=solid];
m0_5 -> m0_17  [key=2, style=dotted];
m0_5 -> m0_18  [key=2, style=dotted];
m0_5 -> m0_24  [key=2, style=dotted];
m0_5 -> m0_25  [key=2, style=dotted];
m0_5 -> m0_6  [key=0, style=solid];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_15  [key=0, style=solid];
m0_8 -> m0_19  [key=2, style=dotted];
m0_8 -> m0_26  [key=2, style=dotted];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_20  [key=2, style=dotted];
m0_9 -> m0_13  [color=darkseagreen4, key=1, label=contract, style=dashed];
m0_9 -> m0_15  [color=darkseagreen4, key=1, label=contract, style=dashed];
m0_9 -> m0_24  [key=2, style=dotted];
m0_9 -> m0_25  [key=2, style=dotted];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_26  [key=2, style=dotted];
m0_6 -> m0_7  [key=0, style=solid];
m0_6 -> m0_20  [color=darkorchid, key=3, label="Local variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m0_6 -> m0_26  [key=2, style=dotted];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_24  [key=2, style=dotted];
m0_7 -> m0_25  [key=2, style=dotted];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_24  [key=2, style=dotted];
m0_15 -> m0_25  [key=2, style=dotted];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_26  [key=2, style=dotted];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_24  [key=2, style=dotted];
m0_11 -> m0_25  [key=2, style=dotted];
m0_12 -> m0_13  [key=0, style=solid];
m0_12 -> m0_21  [key=2, style=dotted];
m0_12 -> m0_22  [key=2, style=dotted];
m0_12 -> m0_14  [color=darkseagreen4, key=1, label=updatedCache, style=dashed];
m0_12 -> m0_26  [key=2, style=dotted];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_26  [key=2, style=dotted];
m0_14 -> m0_27  [key=2, style=dotted];
m0_16 -> m0_3  [color=blue, key=0, style=bold];
m0_16 -> m0_26  [key=2, style=dotted];
m0_16 -> m0_17  [key=0, style=solid];
m0_1194 -> m0_1195  [key=0, style=solid];
m0_1195 -> m0_22  [key=2, style=dotted];
m0_1195 -> m0_23  [key=2, style=dotted];
m0_1195 -> m0_1196  [key=0, style=solid];
m0_1195 -> m0_1199  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1196 -> m0_1197  [key=0, style=solid];
m0_1196 -> m0_42  [key=2, style=dotted];
m0_1196 -> m0_1198  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_1197 -> m0_1194  [color=blue, key=0, style=bold];
m0_417 -> m0_26  [key=2, style=dotted];
m0_417 -> m0_418  [key=0, style=solid];
m0_1423 -> m0_1424  [key=0, style=solid];
m0_1424 -> m0_22  [key=2, style=dotted];
m0_1424 -> m0_23  [key=2, style=dotted];
m0_1424 -> m0_1425  [key=0, style=solid];
m0_1424 -> m0_1428  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1425 -> m0_1426  [key=0, style=solid];
m0_1425 -> m0_42  [key=2, style=dotted];
m0_1425 -> m0_1427  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_1426 -> m0_1423  [color=blue, key=0, style=bold];
m0_1250 -> m0_1251  [key=0, style=solid];
m0_1254 -> m0_26  [key=2, style=dotted];
m0_1254 -> m0_1255  [key=0, style=solid];
m0_1256 -> m0_26  [key=2, style=dotted];
m0_1256 -> m0_1257  [key=0, style=solid];
m0_1258 -> m0_26  [key=2, style=dotted];
m0_1258 -> m0_1259  [key=0, style=solid];
m0_1259 -> m0_26  [key=2, style=dotted];
m0_1259 -> m0_1260  [key=0, style=solid];
m0_1260 -> m0_26  [key=2, style=dotted];
m0_1260 -> m0_1261  [key=0, style=solid];
m0_1260 -> m0_1264  [key=2, style=dotted];
m0_1260 -> m0_1265  [key=2, style=dotted];
m0_1260 -> m0_1266  [key=2, style=dotted];
m0_1262 -> m0_26  [key=2, style=dotted];
m0_1262 -> m0_1263  [key=0, style=solid];
m0_1252 -> m0_22  [key=2, style=dotted];
m0_1252 -> m0_23  [key=2, style=dotted];
m0_1252 -> m0_1254  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1252 -> m0_1256  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1252 -> m0_1258  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1252 -> m0_1259  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1252 -> m0_1260  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1252 -> m0_1262  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1252 -> m0_1253  [key=0, style=solid];
m0_1252 -> m0_1255  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1252 -> m0_1257  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1252 -> m0_1261  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1253 -> m0_24  [key=2, style=dotted];
m0_1253 -> m0_25  [key=2, style=dotted];
m0_1253 -> m0_1254  [key=0, style=solid];
m0_1255 -> m0_24  [key=2, style=dotted];
m0_1255 -> m0_25  [key=2, style=dotted];
m0_1255 -> m0_1256  [key=0, style=solid];
m0_1261 -> m0_24  [key=2, style=dotted];
m0_1261 -> m0_25  [key=2, style=dotted];
m0_1261 -> m0_1262  [key=0, style=solid];
m0_1257 -> m0_1258  [key=0, style=solid];
m0_1257 -> m0_1179  [key=2, style=dotted];
m0_1251 -> m0_1252  [key=0, style=solid];
m0_1263 -> m0_1250  [color=blue, key=0, style=bold];
m0_1595 -> m0_1596  [key=0, style=solid];
m0_1596 -> m0_22  [key=2, style=dotted];
m0_1596 -> m0_23  [key=2, style=dotted];
m0_1596 -> m0_1597  [key=0, style=solid];
m0_1596 -> m0_1600  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1597 -> m0_1598  [key=0, style=solid];
m0_1597 -> m0_42  [key=2, style=dotted];
m0_1597 -> m0_1599  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_1598 -> m0_1595  [color=blue, key=0, style=bold];
m0_693 -> m0_26  [key=2, style=dotted];
m0_693 -> m0_694  [key=0, style=solid];
m0_1215 -> m0_1216  [key=0, style=solid];
m0_1216 -> m0_22  [key=2, style=dotted];
m0_1216 -> m0_23  [key=2, style=dotted];
m0_1216 -> m0_1217  [key=0, style=solid];
m0_1216 -> m0_1220  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1217 -> m0_1218  [key=0, style=solid];
m0_1217 -> m0_42  [key=2, style=dotted];
m0_1217 -> m0_1219  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_1218 -> m0_1215  [color=blue, key=0, style=bold];
m0_157 -> m0_26  [key=2, style=dotted];
m0_157 -> m0_158  [key=0, style=solid];
m0_133 -> m0_121  [color=blue, key=0, style=bold];
m0_200 -> m0_26  [key=2, style=dotted];
m0_200 -> m0_201  [key=0, style=solid];
m0_234 -> m0_22  [key=2, style=dotted];
m0_234 -> m0_235  [key=0, style=solid];
m0_234 -> m0_231  [key=2, style=dotted];
m0_234 -> m0_236  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_299 -> m0_300  [key=0, style=solid];
m0_299 -> m0_320  [key=2, style=dotted];
m0_301 -> m0_22  [key=2, style=dotted];
m0_301 -> m0_23  [key=2, style=dotted];
m0_301 -> m0_302  [key=0, style=solid];
m0_301 -> m0_321  [key=2, style=dotted];
m0_302 -> m0_24  [key=2, style=dotted];
m0_302 -> m0_302  [key=0, style=solid];
m0_302 -> m0_303  [key=0, style=solid];
m0_300 -> m0_301  [key=0, style=solid];
m0_303 -> m0_299  [color=blue, key=0, style=bold];
m0_303 -> m0_304  [key=0, style=solid];
m0_731 -> m0_732  [key=0, style=solid];
m0_736 -> m0_26  [key=2, style=dotted];
m0_736 -> m0_737  [key=0, style=solid];
m0_738 -> m0_26  [key=2, style=dotted];
m0_738 -> m0_739  [key=0, style=solid];
m0_741 -> m0_26  [key=2, style=dotted];
m0_741 -> m0_742  [key=0, style=solid];
m0_743 -> m0_26  [key=2, style=dotted];
m0_743 -> m0_744  [key=0, style=solid];
m0_734 -> m0_22  [key=2, style=dotted];
m0_734 -> m0_23  [key=2, style=dotted];
m0_734 -> m0_736  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_734 -> m0_738  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_734 -> m0_741  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_734 -> m0_743  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_734 -> m0_735  [key=0, style=solid];
m0_734 -> m0_654  [key=2, style=dotted];
m0_734 -> m0_737  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_734 -> m0_739  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_734 -> m0_742  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_734 -> m0_744  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_735 -> m0_25  [key=2, style=dotted];
m0_735 -> m0_736  [key=0, style=solid];
m0_735 -> m0_252  [key=2, style=dotted];
m0_737 -> m0_25  [key=2, style=dotted];
m0_737 -> m0_738  [key=0, style=solid];
m0_737 -> m0_252  [key=2, style=dotted];
m0_742 -> m0_25  [key=2, style=dotted];
m0_742 -> m0_743  [key=0, style=solid];
m0_742 -> m0_252  [key=2, style=dotted];
m0_739 -> m0_740  [key=0, style=solid];
m0_739 -> m0_647  [key=2, style=dotted];
m0_740 -> m0_741  [key=0, style=solid];
m0_740 -> m0_746  [key=2, style=dotted];
m0_744 -> m0_745  [key=0, style=solid];
m0_744 -> m0_252  [key=2, style=dotted];
m0_744 -> m0_28  [key=2, style=dotted];
m0_733 -> m0_734  [key=0, style=solid];
m0_733 -> m0_740  [color=darkseagreen4, key=1, label=helloWorldData, style=dashed];
m0_733 -> m0_230  [key=2, style=dotted];
m0_732 -> m0_733  [key=0, style=solid];
m0_745 -> m0_731  [color=blue, key=0, style=bold];
m0_789 -> m0_790  [key=0, style=solid];
m0_791 -> m0_22  [key=2, style=dotted];
m0_791 -> m0_23  [key=2, style=dotted];
m0_791 -> m0_792  [key=0, style=solid];
m0_792 -> m0_24  [key=2, style=dotted];
m0_792 -> m0_792  [key=0, style=solid];
m0_792 -> m0_793  [key=0, style=solid];
m0_790 -> m0_791  [key=0, style=solid];
m0_793 -> m0_789  [color=blue, key=0, style=bold];
m0_2050 -> m0_2051  [key=0, style=solid];
m0_2062 -> m0_26  [key=2, style=dotted];
m0_2062 -> m0_2063  [key=0, style=solid];
m0_2064 -> m0_26  [key=2, style=dotted];
m0_2064 -> m0_2065  [key=0, style=solid];
m0_2059 -> m0_22  [key=2, style=dotted];
m0_2059 -> m0_2060  [key=0, style=solid];
m0_2059 -> m0_2061  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_2059 -> m0_2063  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_2059 -> m0_2065  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_2058 -> m0_23  [key=2, style=dotted];
m0_2058 -> m0_2059  [key=0, style=solid];
m0_2060 -> m0_24  [key=2, style=dotted];
m0_2060 -> m0_25  [key=2, style=dotted];
m0_2060 -> m0_2061  [key=0, style=solid];
m0_2065 -> m0_24  [key=2, style=dotted];
m0_2065 -> m0_25  [key=2, style=dotted];
m0_2065 -> m0_2066  [key=0, style=solid];
m0_2061 -> m0_2062  [key=0, style=solid];
m0_2061 -> m0_117  [key=2, style=dotted];
m0_2063 -> m0_2064  [key=0, style=solid];
m0_2063 -> m0_117  [key=2, style=dotted];
m0_2057 -> m0_2058  [key=0, style=solid];
m0_2057 -> m0_507  [key=2, style=dotted];
m0_2051 -> m0_2057  [color=darkseagreen4, key=1, label=sw, style=dashed];
m0_2051 -> m0_2052  [key=0, style=solid];
m0_2051 -> m0_502  [key=2, style=dotted];
m0_2056 -> m0_2057  [key=0, style=solid];
m0_2056 -> m0_506  [key=2, style=dotted];
m0_2052 -> m0_2056  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_2052 -> m0_503  [key=2, style=dotted];
m0_2052 -> m0_2053  [key=0, style=solid];
m0_2052 -> m0_2054  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_2052 -> m0_2055  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_2055 -> m0_2056  [key=0, style=solid];
m0_2055 -> m0_2067  [key=2, style=dotted];
m0_2053 -> m0_2054  [key=0, style=solid];
m0_2053 -> m0_504  [key=2, style=dotted];
m0_2054 -> m0_2055  [key=0, style=solid];
m0_2054 -> m0_2067  [key=2, style=dotted];
m0_2066 -> m0_2050  [color=blue, key=0, style=bold];
m0_560 -> m0_561  [key=0, style=solid];
m0_1383 -> m0_1384  [key=0, style=solid];
m0_1387 -> m0_26  [key=2, style=dotted];
m0_1387 -> m0_1388  [key=0, style=solid];
m0_1389 -> m0_26  [key=2, style=dotted];
m0_1389 -> m0_1390  [key=0, style=solid];
m0_1385 -> m0_22  [key=2, style=dotted];
m0_1385 -> m0_23  [key=2, style=dotted];
m0_1385 -> m0_1387  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1385 -> m0_1389  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1385 -> m0_1386  [key=0, style=solid];
m0_1385 -> m0_1388  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1385 -> m0_1390  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1385 -> m0_1393  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1386 -> m0_24  [key=2, style=dotted];
m0_1386 -> m0_25  [key=2, style=dotted];
m0_1386 -> m0_1387  [key=0, style=solid];
m0_1388 -> m0_24  [key=2, style=dotted];
m0_1388 -> m0_25  [key=2, style=dotted];
m0_1388 -> m0_1389  [key=0, style=solid];
m0_1390 -> m0_1391  [key=0, style=solid];
m0_1390 -> m0_42  [key=2, style=dotted];
m0_1390 -> m0_1392  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_1384 -> m0_1385  [key=0, style=solid];
m0_1391 -> m0_1383  [color=blue, key=0, style=bold];
m0_565 -> m0_567  [key=0, style=solid];
m0_565 -> m0_569  [key=2, style=dotted];
m0_565 -> m0_566  [key=0, style=solid];
m0_566 -> m0_567  [key=0, style=solid];
m0_566 -> m0_570  [key=2, style=dotted];
m0_566 -> m0_573  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_567 -> m0_568  [key=0, style=solid];
m0_567 -> m0_22  [key=2, style=dotted];
m0_567 -> m0_23  [key=2, style=dotted];
m0_567 -> m0_570  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_567 -> m0_569  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_567 -> m0_560  [key=2, style=dotted];
m0_567 -> m0_574  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_568 -> m0_562  [color=blue, key=0, style=bold];
m0_568 -> m0_24  [key=2, style=dotted];
m0_568 -> m0_569  [key=0, style=solid];
m0_232 -> m0_233  [key=0, style=solid];
m0_232 -> m0_231  [key=0, style=solid];
m0_232 -> m0_234  [key=2, style=dotted];
m0_232 -> m0_232  [color=darkseagreen4, key=1, label=item, style=dashed];
m0_239 -> m0_22  [key=2, style=dotted];
m0_239 -> m0_240  [key=0, style=solid];
m0_239 -> m0_231  [key=2, style=dotted];
m0_239 -> m0_241  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_239 -> m0_244  [key=0, style=solid];
m0_239 -> m0_250  [key=2, style=dotted];
m0_235 -> m0_25  [key=2, style=dotted];
m0_235 -> m0_236  [key=0, style=solid];
m0_235 -> m0_230  [color=darkorchid, key=3, label="method methodReturn System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator", style=bold];
m0_240 -> m0_25  [key=2, style=dotted];
m0_240 -> m0_241  [key=0, style=solid];
m0_240 -> m0_243  [color=darkseagreen4, key=1, label=conInfo, style=dashed];
m0_242 -> m0_25  [key=2, style=dotted];
m0_242 -> m0_243  [key=0, style=solid];
m0_242 -> m0_247  [key=0, style=solid];
m0_242 -> m0_156  [key=2, style=dotted];
m0_233 -> m0_234  [key=0, style=solid];
m0_233 -> m0_235  [color=darkseagreen4, key=1, label=ms, style=dashed];
m0_233 -> m0_244  [key=2, style=dotted];
m0_233 -> m0_237  [color=darkseagreen4, key=1, label=ms, style=dashed];
m0_233 -> m0_230  [color=blue, key=0, style=bold];
m0_236 -> m0_237  [key=0, style=solid];
m0_236 -> m0_245  [key=2, style=dotted];
m0_236 -> m0_230  [key=2, style=dotted];
m0_238 -> m0_239  [key=0, style=solid];
m0_238 -> m0_240  [color=darkseagreen4, key=1, label=en, style=dashed];
m0_238 -> m0_242  [color=darkseagreen4, key=1, label=ms, style=dashed];
m0_238 -> m0_244  [key=2, style=dotted];
m0_238 -> m0_248  [key=2, style=dotted];
m0_238 -> m0_49  [key=2, style=dotted];
m0_238 -> m0_249  [key=2, style=dotted];
m0_238 -> m0_252  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_238 -> m0_241  [color=darkseagreen4, key=1, label=en, style=dashed];
m0_241 -> m0_242  [key=0, style=solid];
m0_241 -> m0_245  [key=2, style=dotted];
m0_241 -> m0_243  [key=0, style=solid];
m0_241 -> m0_250  [key=2, style=dotted];
m0_237 -> m0_238  [key=0, style=solid];
m0_237 -> m0_28  [key=2, style=dotted];
m0_237 -> m0_235  [color=blue, key=0, style=bold];
m0_243 -> m0_232  [color=blue, key=0, style=bold];
m0_243 -> m0_247  [key=0, style=solid];
m0_1237 -> m0_1238  [key=0, style=solid];
m0_1241 -> m0_26  [key=2, style=dotted];
m0_1241 -> m0_1242  [key=0, style=solid];
m0_1243 -> m0_26  [key=2, style=dotted];
m0_1243 -> m0_1244  [key=0, style=solid];
m0_1245 -> m0_26  [key=2, style=dotted];
m0_1245 -> m0_1246  [key=0, style=solid];
m0_1246 -> m0_26  [key=2, style=dotted];
m0_1246 -> m0_1247  [key=0, style=solid];
m0_1248 -> m0_26  [key=2, style=dotted];
m0_1248 -> m0_1249  [key=0, style=solid];
m0_1239 -> m0_22  [key=2, style=dotted];
m0_1239 -> m0_23  [key=2, style=dotted];
m0_1239 -> m0_1241  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1239 -> m0_1243  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1239 -> m0_1245  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1239 -> m0_1246  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1239 -> m0_1248  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1239 -> m0_1240  [key=0, style=solid];
m0_1239 -> m0_1242  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1239 -> m0_1244  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1239 -> m0_1247  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1240 -> m0_24  [key=2, style=dotted];
m0_1240 -> m0_25  [key=2, style=dotted];
m0_1240 -> m0_1241  [key=0, style=solid];
m0_1242 -> m0_24  [key=2, style=dotted];
m0_1242 -> m0_25  [key=2, style=dotted];
m0_1242 -> m0_1243  [key=0, style=solid];
m0_1244 -> m0_24  [key=2, style=dotted];
m0_1244 -> m0_25  [key=2, style=dotted];
m0_1244 -> m0_1245  [key=0, style=solid];
m0_1247 -> m0_24  [key=2, style=dotted];
m0_1247 -> m0_25  [key=2, style=dotted];
m0_1247 -> m0_1248  [key=0, style=solid];
m0_1238 -> m0_1239  [key=0, style=solid];
m0_1249 -> m0_1237  [color=blue, key=0, style=bold];
m0_28 -> m0_29  [key=0, style=solid];
m0_28 -> m0_50  [key=2, style=dotted];
m0_28 -> m0_34  [color=darkseagreen4, key=1, label=serializableMembers, style=dashed];
m0_28 -> m0_36  [color=darkseagreen4, key=1, label=serializableMembers, style=dashed];
m0_28 -> m0_38  [color=darkseagreen4, key=1, label=serializableMembers, style=dashed];
m0_28 -> m0_40  [color=darkseagreen4, key=1, label=serializableMembers, style=dashed];
m0_28 -> m0_44  [color=darkseagreen4, key=1, label=serializableMembers, style=dashed];
m0_28 -> m0_45  [color=darkseagreen4, key=1, label=serializableMembers, style=dashed];
m0_17 -> m0_24  [key=2, style=dotted];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_28  [key=2, style=dotted];
m0_246 -> m0_247  [key=0, style=solid];
m0_248 -> m0_22  [key=2, style=dotted];
m0_248 -> m0_23  [key=2, style=dotted];
m0_248 -> m0_249  [key=0, style=solid];
m0_248 -> m0_250  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_247 -> m0_248  [key=0, style=solid];
m0_247 -> m0_108  [color=blue, key=0, style=bold];
m0_249 -> m0_250  [key=0, style=solid];
m0_249 -> m0_251  [key=0, style=solid];
m0_249 -> m0_252  [key=2, style=dotted];
m0_251 -> m0_246  [color=blue, key=0, style=bold];
m0_530 -> m0_26  [key=2, style=dotted];
m0_530 -> m0_531  [key=0, style=solid];
m0_439 -> m0_26  [key=2, style=dotted];
m0_439 -> m0_440  [key=0, style=solid];
m0_1444 -> m0_1445  [key=0, style=solid];
m0_1449 -> m0_26  [key=2, style=dotted];
m0_1449 -> m0_1450  [key=0, style=solid];
m0_1451 -> m0_26  [key=2, style=dotted];
m0_1451 -> m0_1452  [key=0, style=solid];
m0_1453 -> m0_26  [key=2, style=dotted];
m0_1453 -> m0_1454  [key=0, style=solid];
m0_1454 -> m0_26  [key=2, style=dotted];
m0_1454 -> m0_1455  [key=0, style=solid];
m0_1457 -> m0_26  [key=2, style=dotted];
m0_1457 -> m0_1458  [key=0, style=solid];
m0_1455 -> m0_26  [key=2, style=dotted];
m0_1455 -> m0_1456  [key=0, style=solid];
m0_1446 -> m0_22  [key=2, style=dotted];
m0_1446 -> m0_23  [key=2, style=dotted];
m0_1446 -> m0_1449  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1446 -> m0_1451  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1446 -> m0_1453  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1446 -> m0_1454  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1446 -> m0_1457  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1446 -> m0_1447  [key=0, style=solid];
m0_1446 -> m0_1448  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1446 -> m0_1450  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1446 -> m0_1452  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1446 -> m0_1456  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1448 -> m0_24  [key=2, style=dotted];
m0_1448 -> m0_25  [key=2, style=dotted];
m0_1448 -> m0_1449  [key=0, style=solid];
m0_1450 -> m0_24  [key=2, style=dotted];
m0_1450 -> m0_25  [key=2, style=dotted];
m0_1450 -> m0_1451  [key=0, style=solid];
m0_1456 -> m0_24  [key=2, style=dotted];
m0_1456 -> m0_25  [key=2, style=dotted];
m0_1456 -> m0_1457  [key=0, style=solid];
m0_1452 -> m0_1453  [key=0, style=solid];
m0_1452 -> m0_1455  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_1452 -> m0_117  [key=2, style=dotted];
m0_1445 -> m0_1446  [key=0, style=solid];
m0_1447 -> m0_1448  [key=0, style=solid];
m0_1447 -> m0_1354  [key=2, style=dotted];
m0_1458 -> m0_1444  [color=blue, key=0, style=bold];
m0_255 -> m0_256  [key=0, style=solid];
m0_255 -> m0_201  [key=2, style=dotted];
m0_263 -> m0_264  [key=0, style=solid];
m0_263 -> m0_270  [key=2, style=dotted];
m0_263 -> m0_26  [key=2, style=dotted];
m0_256 -> m0_257  [key=0, style=solid];
m0_256 -> m0_249  [key=2, style=dotted];
m0_256 -> m0_258  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_256 -> m0_259  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_256 -> m0_22  [key=2, style=dotted];
m0_256 -> m0_260  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_256 -> m0_261  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_256 -> m0_263  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_256 -> m0_265  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_256 -> m0_267  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_256 -> m0_269  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_256 -> m0_231  [key=2, style=dotted];
m0_256 -> m0_271  [key=2, style=dotted];
m0_256 -> m0_272  [key=2, style=dotted];
m0_256 -> m0_262  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_256 -> m0_264  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_256 -> m0_266  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_256 -> m0_268  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_257 -> m0_258  [key=0, style=solid];
m0_257 -> m0_267  [key=0, style=solid];
m0_257 -> m0_250  [key=2, style=dotted];
m0_257 -> m0_25  [key=2, style=dotted];
m0_257 -> m0_252  [key=2, style=dotted];
m0_258 -> m0_259  [key=0, style=solid];
m0_258 -> m0_260  [color=darkseagreen4, key=1, label=constructor, style=dashed];
m0_258 -> m0_266  [color=darkseagreen4, key=1, label=constructor, style=dashed];
m0_258 -> m0_25  [key=2, style=dotted];
m0_258 -> m0_252  [key=2, style=dotted];
m0_259 -> m0_260  [key=0, style=solid];
m0_259 -> m0_267  [key=0, style=solid];
m0_259 -> m0_250  [key=2, style=dotted];
m0_259 -> m0_25  [key=2, style=dotted];
m0_259 -> m0_252  [key=2, style=dotted];
m0_267 -> m0_268  [key=0, style=solid];
m0_267 -> m0_26  [key=2, style=dotted];
m0_260 -> m0_261  [key=0, style=solid];
m0_260 -> m0_269  [key=2, style=dotted];
m0_260 -> m0_262  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m0_260 -> m0_26  [key=2, style=dotted];
m0_266 -> m0_268  [key=0, style=solid];
m0_266 -> m0_25  [key=2, style=dotted];
m0_266 -> m0_267  [key=0, style=solid];
m0_266 -> m0_252  [key=2, style=dotted];
m0_261 -> m0_262  [key=0, style=solid];
m0_261 -> m0_267  [key=0, style=solid];
m0_261 -> m0_26  [key=2, style=dotted];
m0_262 -> m0_263  [key=0, style=solid];
m0_262 -> m0_266  [key=0, style=solid];
m0_262 -> m0_25  [key=2, style=dotted];
m0_262 -> m0_252  [key=2, style=dotted];
m0_264 -> m0_265  [key=0, style=solid];
m0_264 -> m0_262  [key=0, style=solid];
m0_264 -> m0_25  [key=2, style=dotted];
m0_264 -> m0_252  [key=2, style=dotted];
m0_265 -> m0_268  [key=0, style=solid];
m0_265 -> m0_26  [key=2, style=dotted];
m0_265 -> m0_266  [key=0, style=solid];
m0_268 -> m0_113  [color=blue, key=0, style=bold];
m0_268 -> m0_25  [key=2, style=dotted];
m0_268 -> m0_269  [key=0, style=solid];
m0_268 -> m0_252  [key=2, style=dotted];
m0_1642 -> m0_1643  [key=0, style=solid];
m0_1646 -> m0_26  [key=2, style=dotted];
m0_1646 -> m0_1647  [key=0, style=solid];
m0_1648 -> m0_26  [key=2, style=dotted];
m0_1648 -> m0_1649  [key=0, style=solid];
m0_1650 -> m0_26  [key=2, style=dotted];
m0_1650 -> m0_1651  [key=0, style=solid];
m0_1652 -> m0_26  [key=2, style=dotted];
m0_1652 -> m0_1653  [key=0, style=solid];
m0_1653 -> m0_26  [key=2, style=dotted];
m0_1653 -> m0_1654  [key=0, style=solid];
m0_1655 -> m0_26  [key=2, style=dotted];
m0_1655 -> m0_1656  [key=0, style=solid];
m0_1657 -> m0_26  [key=2, style=dotted];
m0_1657 -> m0_1658  [key=0, style=solid];
m0_1658 -> m0_26  [key=2, style=dotted];
m0_1658 -> m0_1659  [key=0, style=solid];
m0_1660 -> m0_26  [key=2, style=dotted];
m0_1660 -> m0_1661  [key=0, style=solid];
m0_1662 -> m0_26  [key=2, style=dotted];
m0_1662 -> m0_1663  [key=0, style=solid];
m0_1664 -> m0_26  [key=2, style=dotted];
m0_1664 -> m0_1665  [key=0, style=solid];
m0_1665 -> m0_26  [key=2, style=dotted];
m0_1665 -> m0_1666  [key=0, style=solid];
m0_1667 -> m0_26  [key=2, style=dotted];
m0_1667 -> m0_1668  [key=0, style=solid];
m0_1669 -> m0_26  [key=2, style=dotted];
m0_1669 -> m0_1670  [key=0, style=solid];
m0_1670 -> m0_26  [key=2, style=dotted];
m0_1670 -> m0_1671  [key=0, style=solid];
m0_1671 -> m0_26  [key=2, style=dotted];
m0_1671 -> m0_1672  [key=0, style=solid];
m0_1673 -> m0_26  [key=2, style=dotted];
m0_1673 -> m0_1674  [key=0, style=solid];
m0_1675 -> m0_26  [key=2, style=dotted];
m0_1675 -> m0_1676  [key=0, style=solid];
m0_1677 -> m0_26  [key=2, style=dotted];
m0_1677 -> m0_1678  [key=0, style=solid];
m0_1679 -> m0_26  [key=2, style=dotted];
m0_1679 -> m0_1680  [key=0, style=solid];
m0_1644 -> m0_22  [key=2, style=dotted];
m0_1644 -> m0_1646  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1644 -> m0_1648  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1644 -> m0_1650  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1644 -> m0_1652  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1644 -> m0_1653  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1644 -> m0_1655  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1644 -> m0_1657  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1644 -> m0_1658  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1644 -> m0_1660  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1644 -> m0_1662  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1644 -> m0_1664  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1644 -> m0_1665  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1644 -> m0_1667  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1644 -> m0_1669  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1644 -> m0_1670  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1644 -> m0_1671  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1644 -> m0_1673  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1644 -> m0_1675  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1644 -> m0_1677  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1644 -> m0_1679  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1644 -> m0_1645  [key=0, style=solid];
m0_1644 -> m0_231  [key=2, style=dotted];
m0_1644 -> m0_271  [key=2, style=dotted];
m0_1644 -> m0_272  [key=2, style=dotted];
m0_1644 -> m0_1647  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1644 -> m0_1649  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1644 -> m0_1651  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1644 -> m0_1654  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1644 -> m0_1656  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1644 -> m0_1659  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1644 -> m0_1661  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1644 -> m0_1663  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1644 -> m0_1666  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1644 -> m0_1668  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1644 -> m0_1672  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1644 -> m0_1674  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1644 -> m0_1676  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1644 -> m0_1678  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1645 -> m0_24  [key=2, style=dotted];
m0_1645 -> m0_25  [key=2, style=dotted];
m0_1645 -> m0_1646  [key=0, style=solid];
m0_1647 -> m0_24  [key=2, style=dotted];
m0_1647 -> m0_25  [key=2, style=dotted];
m0_1647 -> m0_1648  [key=0, style=solid];
m0_1649 -> m0_24  [key=2, style=dotted];
m0_1649 -> m0_25  [key=2, style=dotted];
m0_1649 -> m0_1650  [key=0, style=solid];
m0_1651 -> m0_24  [key=2, style=dotted];
m0_1651 -> m0_25  [key=2, style=dotted];
m0_1651 -> m0_1652  [key=0, style=solid];
m0_1654 -> m0_24  [key=2, style=dotted];
m0_1654 -> m0_25  [key=2, style=dotted];
m0_1654 -> m0_1655  [key=0, style=solid];
m0_1656 -> m0_24  [key=2, style=dotted];
m0_1656 -> m0_25  [key=2, style=dotted];
m0_1656 -> m0_1657  [key=0, style=solid];
m0_1659 -> m0_24  [key=2, style=dotted];
m0_1659 -> m0_25  [key=2, style=dotted];
m0_1659 -> m0_1660  [key=0, style=solid];
m0_1661 -> m0_24  [key=2, style=dotted];
m0_1661 -> m0_25  [key=2, style=dotted];
m0_1661 -> m0_1662  [key=0, style=solid];
m0_1663 -> m0_24  [key=2, style=dotted];
m0_1663 -> m0_25  [key=2, style=dotted];
m0_1663 -> m0_1664  [key=0, style=solid];
m0_1666 -> m0_24  [key=2, style=dotted];
m0_1666 -> m0_25  [key=2, style=dotted];
m0_1666 -> m0_1667  [key=0, style=solid];
m0_1668 -> m0_24  [key=2, style=dotted];
m0_1668 -> m0_25  [key=2, style=dotted];
m0_1668 -> m0_1669  [key=0, style=solid];
m0_1672 -> m0_24  [key=2, style=dotted];
m0_1672 -> m0_25  [key=2, style=dotted];
m0_1672 -> m0_1673  [key=0, style=solid];
m0_1674 -> m0_24  [key=2, style=dotted];
m0_1674 -> m0_25  [key=2, style=dotted];
m0_1674 -> m0_1675  [key=0, style=solid];
m0_1676 -> m0_24  [key=2, style=dotted];
m0_1676 -> m0_25  [key=2, style=dotted];
m0_1676 -> m0_1677  [key=0, style=solid];
m0_1678 -> m0_24  [key=2, style=dotted];
m0_1678 -> m0_25  [key=2, style=dotted];
m0_1678 -> m0_1679  [key=0, style=solid];
m0_1643 -> m0_1644  [key=0, style=solid];
m0_1680 -> m0_1642  [color=blue, key=0, style=bold];
m0_401 -> m0_402  [key=0, style=solid];
m0_401 -> m0_252  [key=2, style=dotted];
m0_1338 -> m0_1339  [key=0, style=solid];
m0_1343 -> m0_26  [key=2, style=dotted];
m0_1343 -> m0_1344  [key=0, style=solid];
m0_1345 -> m0_26  [key=2, style=dotted];
m0_1345 -> m0_1346  [key=0, style=solid];
m0_1347 -> m0_26  [key=2, style=dotted];
m0_1347 -> m0_1348  [key=0, style=solid];
m0_1348 -> m0_26  [key=2, style=dotted];
m0_1348 -> m0_1349  [key=0, style=solid];
m0_1352 -> m0_26  [key=2, style=dotted];
m0_1352 -> m0_1353  [key=0, style=solid];
m0_1350 -> m0_26  [key=2, style=dotted];
m0_1350 -> m0_1350  [color=darkseagreen4, key=1, label=dt, style=dashed];
m0_1350 -> m0_1351  [key=0, style=solid];
m0_1350 -> m0_1337  [key=2, style=dotted];
m0_1340 -> m0_22  [key=2, style=dotted];
m0_1340 -> m0_23  [key=2, style=dotted];
m0_1340 -> m0_1343  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1340 -> m0_1345  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1340 -> m0_1347  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1340 -> m0_1348  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1340 -> m0_1352  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1340 -> m0_1341  [key=0, style=solid];
m0_1340 -> m0_1342  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1340 -> m0_1344  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1340 -> m0_1346  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1340 -> m0_1349  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1340 -> m0_1351  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1342 -> m0_24  [key=2, style=dotted];
m0_1342 -> m0_25  [key=2, style=dotted];
m0_1342 -> m0_1343  [key=0, style=solid];
m0_1344 -> m0_24  [key=2, style=dotted];
m0_1344 -> m0_25  [key=2, style=dotted];
m0_1344 -> m0_1345  [key=0, style=solid];
m0_1351 -> m0_24  [key=2, style=dotted];
m0_1351 -> m0_25  [key=2, style=dotted];
m0_1351 -> m0_1352  [key=0, style=solid];
m0_1346 -> m0_1347  [key=0, style=solid];
m0_1346 -> m0_1179  [key=2, style=dotted];
m0_1349 -> m0_1350  [key=0, style=solid];
m0_1339 -> m0_1340  [key=0, style=solid];
m0_1341 -> m0_1342  [key=0, style=solid];
m0_1341 -> m0_1354  [key=2, style=dotted];
m0_1353 -> m0_1338  [color=blue, key=0, style=bold];
m0_460 -> m0_461  [key=0, style=solid];
m0_460 -> m0_20  [color=darkorchid, key=3, label="Parameter variable System.Type objectType", style=bold];
m0_460 -> m0_364  [color=blue, key=0, style=bold];
m0_461 -> m0_462  [key=0, style=solid];
m0_461 -> m0_465  [key=2, style=dotted];
m0_461 -> m0_463  [color=darkseagreen4, key=1, label=contract, style=dashed];
m0_462 -> m0_463  [key=0, style=solid];
m0_462 -> m0_103  [key=2, style=dotted];
m0_462 -> m0_464  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_462 -> m0_42  [key=2, style=dotted];
m0_463 -> m0_464  [key=0, style=solid];
m0_463 -> m0_461  [color=blue, key=0, style=bold];
m0_1128 -> m0_1129  [key=0, style=solid];
m0_1132 -> m0_26  [key=2, style=dotted];
m0_1132 -> m0_1133  [key=0, style=solid];
m0_1134 -> m0_26  [key=2, style=dotted];
m0_1134 -> m0_1135  [key=0, style=solid];
m0_1135 -> m0_26  [key=2, style=dotted];
m0_1135 -> m0_1136  [key=0, style=solid];
m0_1136 -> m0_26  [key=2, style=dotted];
m0_1136 -> m0_1137  [key=0, style=solid];
m0_1138 -> m0_26  [key=2, style=dotted];
m0_1138 -> m0_1139  [key=0, style=solid];
m0_1139 -> m0_26  [key=2, style=dotted];
m0_1139 -> m0_1140  [key=0, style=solid];
m0_1140 -> m0_26  [key=2, style=dotted];
m0_1140 -> m0_1141  [key=0, style=solid];
m0_1142 -> m0_26  [key=2, style=dotted];
m0_1142 -> m0_1143  [key=0, style=solid];
m0_1143 -> m0_26  [key=2, style=dotted];
m0_1143 -> m0_1144  [key=0, style=solid];
m0_1144 -> m0_26  [key=2, style=dotted];
m0_1144 -> m0_1145  [key=0, style=solid];
m0_1146 -> m0_26  [key=2, style=dotted];
m0_1146 -> m0_1147  [key=0, style=solid];
m0_1130 -> m0_22  [key=2, style=dotted];
m0_1130 -> m0_1132  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1130 -> m0_1134  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1130 -> m0_1135  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1130 -> m0_1136  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1130 -> m0_1138  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1130 -> m0_1139  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1130 -> m0_1140  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1130 -> m0_1142  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1130 -> m0_1143  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1130 -> m0_1144  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1130 -> m0_1146  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1130 -> m0_1131  [key=0, style=solid];
m0_1130 -> m0_1133  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1130 -> m0_1137  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1130 -> m0_1141  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1130 -> m0_1145  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1130 -> m0_1147  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1129 -> m0_23  [key=2, style=dotted];
m0_1129 -> m0_1130  [key=0, style=solid];
m0_1131 -> m0_24  [key=2, style=dotted];
m0_1131 -> m0_25  [key=2, style=dotted];
m0_1131 -> m0_1132  [key=0, style=solid];
m0_1145 -> m0_24  [key=2, style=dotted];
m0_1145 -> m0_25  [key=2, style=dotted];
m0_1145 -> m0_1146  [key=0, style=solid];
m0_1147 -> m0_24  [key=2, style=dotted];
m0_1147 -> m0_1148  [key=0, style=solid];
m0_1147 -> m0_28  [key=2, style=dotted];
m0_1133 -> m0_1134  [key=0, style=solid];
m0_1133 -> m0_46  [key=2, style=dotted];
m0_1137 -> m0_1138  [key=0, style=solid];
m0_1137 -> m0_46  [key=2, style=dotted];
m0_1141 -> m0_1142  [key=0, style=solid];
m0_1141 -> m0_46  [key=2, style=dotted];
m0_1148 -> m0_1128  [color=blue, key=0, style=bold];
m0_718 -> m0_719  [key=0, style=solid];
m0_722 -> m0_26  [key=2, style=dotted];
m0_722 -> m0_723  [key=0, style=solid];
m0_723 -> m0_26  [key=2, style=dotted];
m0_723 -> m0_724  [key=0, style=solid];
m0_725 -> m0_26  [key=2, style=dotted];
m0_725 -> m0_726  [key=0, style=solid];
m0_726 -> m0_26  [key=2, style=dotted];
m0_726 -> m0_727  [key=0, style=solid];
m0_728 -> m0_26  [key=2, style=dotted];
m0_728 -> m0_729  [key=0, style=solid];
m0_719 -> m0_22  [key=2, style=dotted];
m0_719 -> m0_23  [key=2, style=dotted];
m0_719 -> m0_722  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_719 -> m0_723  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_719 -> m0_725  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_719 -> m0_726  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_719 -> m0_728  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_719 -> m0_720  [key=0, style=solid];
m0_719 -> m0_721  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_719 -> m0_724  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_719 -> m0_727  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_719 -> m0_729  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_720 -> m0_25  [key=2, style=dotted];
m0_720 -> m0_721  [key=0, style=solid];
m0_720 -> m0_252  [key=2, style=dotted];
m0_721 -> m0_25  [key=2, style=dotted];
m0_721 -> m0_722  [key=0, style=solid];
m0_721 -> m0_252  [key=2, style=dotted];
m0_724 -> m0_25  [key=2, style=dotted];
m0_724 -> m0_725  [key=0, style=solid];
m0_724 -> m0_252  [key=2, style=dotted];
m0_727 -> m0_25  [key=2, style=dotted];
m0_727 -> m0_728  [key=0, style=solid];
m0_727 -> m0_252  [key=2, style=dotted];
m0_729 -> m0_730  [key=0, style=solid];
m0_729 -> m0_252  [key=2, style=dotted];
m0_729 -> m0_28  [key=2, style=dotted];
m0_730 -> m0_718  [color=blue, key=0, style=bold];
m0_680 -> m0_22  [key=2, style=dotted];
m0_680 -> m0_685  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_680 -> m0_700  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_680 -> m0_682  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_680 -> m0_684  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_680 -> m0_687  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_680 -> m0_689  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_680 -> m0_690  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_680 -> m0_691  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_680 -> m0_693  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_680 -> m0_694  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_680 -> m0_696  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_680 -> m0_697  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_680 -> m0_699  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_680 -> m0_702  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_680 -> m0_704  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_680 -> m0_706  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_680 -> m0_708  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_680 -> m0_709  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_680 -> m0_711  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_680 -> m0_713  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_680 -> m0_715  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_680 -> m0_681  [key=0, style=solid];
m0_680 -> m0_231  [key=2, style=dotted];
m0_680 -> m0_271  [key=2, style=dotted];
m0_680 -> m0_272  [key=2, style=dotted];
m0_680 -> m0_683  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_680 -> m0_686  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_680 -> m0_688  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_680 -> m0_692  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_680 -> m0_695  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_680 -> m0_698  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_680 -> m0_701  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_680 -> m0_703  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_680 -> m0_705  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_680 -> m0_707  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_680 -> m0_710  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_680 -> m0_712  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_680 -> m0_714  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_502 -> m0_507  [key=0, style=solid];
m0_502 -> m0_480  [color=darkorchid, key=3, label="Parameter variable System.Type type", style=bold];
m0_502 -> m0_121  [color=darkorchid, key=3, label="method methodReturn bool CanConvertToString", style=bold];
m0_507 -> m0_508  [key=0, style=solid];
m0_507 -> m0_509  [key=0, style=solid];
m0_507 -> m0_500  [key=2, style=dotted];
m0_508 -> m0_510  [key=0, style=solid];
m0_508 -> m0_509  [key=0, style=solid];
m0_509 -> m0_510  [key=0, style=solid];
m0_510 -> m0_502  [color=blue, key=0, style=bold];
m0_510 -> m0_22  [key=2, style=dotted];
m0_510 -> m0_512  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_510 -> m0_514  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_510 -> m0_516  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_510 -> m0_518  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_510 -> m0_520  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_510 -> m0_522  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_510 -> m0_524  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_510 -> m0_526  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_510 -> m0_528  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_510 -> m0_530  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_510 -> m0_532  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_510 -> m0_533  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_510 -> m0_535  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_510 -> m0_536  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_510 -> m0_511  [key=0, style=solid];
m0_510 -> m0_231  [key=2, style=dotted];
m0_510 -> m0_271  [key=2, style=dotted];
m0_510 -> m0_272  [key=2, style=dotted];
m0_510 -> m0_513  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_510 -> m0_515  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_510 -> m0_517  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_510 -> m0_519  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_510 -> m0_521  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_510 -> m0_523  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_510 -> m0_525  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_510 -> m0_527  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_510 -> m0_529  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_510 -> m0_531  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_510 -> m0_534  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_510 -> m0_537  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_55 -> m0_56  [key=0, style=solid];
m0_55 -> m0_42  [key=2, style=dotted];
m0_55 -> m0_69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_88 -> m0_89  [key=0, style=solid];
m0_88 -> m0_111  [key=2, style=dotted];
m0_88 -> m0_90  [color=darkseagreen4, key=1, label=constructor, style=dashed];
m0_88 -> m0_91  [color=darkseagreen4, key=1, label=constructor, style=dashed];
m0_92 -> m0_26  [key=2, style=dotted];
m0_92 -> m0_93  [key=0, style=solid];
m0_92 -> m0_97  [key=0, style=solid];
m0_92 -> m0_112  [key=2, style=dotted];
m0_94 -> m0_26  [key=2, style=dotted];
m0_94 -> m0_95  [key=0, style=solid];
m0_94 -> m0_97  [key=0, style=solid];
m0_96 -> m0_26  [key=2, style=dotted];
m0_96 -> m0_97  [key=0, style=solid];
m0_96 -> m0_110  [key=2, style=dotted];
m0_96 -> m0_105  [key=2, style=dotted];
m0_97 -> m0_26  [key=2, style=dotted];
m0_97 -> m0_98  [key=0, style=solid];
m0_97 -> m0_114  [key=2, style=dotted];
m0_97 -> m0_99  [color=darkseagreen4, key=1, label=extensionDataMember, style=dashed];
m0_99 -> m0_26  [key=2, style=dotted];
m0_99 -> m0_100  [key=0, style=solid];
m0_99 -> m0_115  [key=2, style=dotted];
m0_90 -> m0_22  [key=2, style=dotted];
m0_90 -> m0_23  [key=2, style=dotted];
m0_90 -> m0_92  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_90 -> m0_94  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_90 -> m0_96  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_90 -> m0_97  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_90 -> m0_99  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_90 -> m0_91  [key=0, style=solid];
m0_90 -> m0_93  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_90 -> m0_95  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_90 -> m0_98  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_90 -> m0_100  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_90 -> m0_109  [key=2, style=dotted];
m0_91 -> m0_24  [key=2, style=dotted];
m0_91 -> m0_25  [key=2, style=dotted];
m0_91 -> m0_92  [key=0, style=solid];
m0_91 -> m0_97  [key=0, style=solid];
m0_91 -> m0_110  [key=2, style=dotted];
m0_91 -> m0_105  [key=2, style=dotted];
m0_93 -> m0_24  [key=2, style=dotted];
m0_93 -> m0_25  [key=2, style=dotted];
m0_93 -> m0_94  [key=0, style=solid];
m0_93 -> m0_113  [key=2, style=dotted];
m0_93 -> m0_95  [color=darkseagreen4, key=1, label=constructor, style=dashed];
m0_93 -> m0_96  [color=darkseagreen4, key=1, label=constructor, style=dashed];
m0_95 -> m0_24  [key=2, style=dotted];
m0_95 -> m0_25  [key=2, style=dotted];
m0_95 -> m0_96  [key=0, style=solid];
m0_95 -> m0_109  [key=2, style=dotted];
m0_98 -> m0_24  [key=2, style=dotted];
m0_98 -> m0_25  [key=2, style=dotted];
m0_98 -> m0_99  [key=0, style=solid];
m0_98 -> m0_100  [key=0, style=solid];
m0_100 -> m0_24  [key=2, style=dotted];
m0_100 -> m0_101  [key=0, style=solid];
m0_100 -> m0_28  [key=2, style=dotted];
m0_89 -> m0_90  [key=0, style=solid];
m0_89 -> m0_97  [key=0, style=solid];
m0_101 -> m0_88  [color=blue, key=0, style=bold];
m0_101 -> m0_64  [color=blue, key=0, style=bold];
m0_404 -> m0_26  [key=2, style=dotted];
m0_404 -> m0_405  [key=0, style=solid];
m0_536 -> m0_26  [key=2, style=dotted];
m0_536 -> m0_537  [key=0, style=solid];
m0_512 -> m0_26  [key=2, style=dotted];
m0_512 -> m0_513  [key=0, style=solid];
m0_512 -> m0_528  [key=0, style=solid];
m0_514 -> m0_26  [key=2, style=dotted];
m0_514 -> m0_515  [key=0, style=solid];
m0_514 -> m0_528  [key=0, style=solid];
m0_514 -> m0_156  [key=2, style=dotted];
m0_514 -> m0_529  [key=2, style=dotted];
m0_514 -> m0_530  [key=2, style=dotted];
m0_516 -> m0_26  [key=2, style=dotted];
m0_516 -> m0_517  [key=0, style=solid];
m0_516 -> m0_528  [key=0, style=solid];
m0_516 -> m0_156  [key=2, style=dotted];
m0_516 -> m0_529  [key=2, style=dotted];
m0_516 -> m0_530  [key=2, style=dotted];
m0_518 -> m0_26  [key=2, style=dotted];
m0_518 -> m0_519  [key=0, style=solid];
m0_518 -> m0_528  [key=0, style=solid];
m0_518 -> m0_156  [key=2, style=dotted];
m0_518 -> m0_529  [key=2, style=dotted];
m0_518 -> m0_531  [key=2, style=dotted];
m0_520 -> m0_26  [key=2, style=dotted];
m0_520 -> m0_521  [key=0, style=solid];
m0_520 -> m0_528  [key=0, style=solid];
m0_520 -> m0_156  [key=2, style=dotted];
m0_520 -> m0_529  [key=2, style=dotted];
m0_520 -> m0_440  [key=2, style=dotted];
m0_522 -> m0_26  [key=2, style=dotted];
m0_522 -> m0_523  [key=0, style=solid];
m0_522 -> m0_526  [key=0, style=solid];
m0_524 -> m0_26  [key=2, style=dotted];
m0_524 -> m0_525  [key=0, style=solid];
m0_524 -> m0_526  [key=0, style=solid];
m0_526 -> m0_26  [key=2, style=dotted];
m0_526 -> m0_527  [key=0, style=solid];
m0_526 -> m0_528  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
m0_528 -> m0_26  [key=2, style=dotted];
m0_528 -> m0_529  [key=0, style=solid];
m0_528 -> m0_402  [color=blue, key=0, style=bold];
m0_532 -> m0_26  [key=2, style=dotted];
m0_532 -> m0_533  [key=0, style=solid];
m0_532 -> m0_534  [key=0, style=solid];
m0_532 -> m0_536  [key=2, style=dotted];
m0_532 -> m0_537  [key=2, style=dotted];
m0_533 -> m0_26  [key=2, style=dotted];
m0_533 -> m0_534  [key=0, style=solid];
m0_533 -> m0_535  [key=0, style=solid];
m0_535 -> m0_26  [key=2, style=dotted];
m0_535 -> m0_536  [key=0, style=solid];
m0_535 -> m0_529  [color=blue, key=0, style=bold];
m0_511 -> m0_24  [key=2, style=dotted];
m0_511 -> m0_25  [key=2, style=dotted];
m0_511 -> m0_512  [key=0, style=solid];
m0_511 -> m0_513  [key=0, style=solid];
m0_511 -> m0_52  [key=2, style=dotted];
m0_513 -> m0_24  [key=2, style=dotted];
m0_513 -> m0_25  [key=2, style=dotted];
m0_513 -> m0_514  [key=0, style=solid];
m0_513 -> m0_515  [key=0, style=solid];
m0_515 -> m0_24  [key=2, style=dotted];
m0_515 -> m0_25  [key=2, style=dotted];
m0_515 -> m0_516  [key=0, style=solid];
m0_515 -> m0_517  [key=0, style=solid];
m0_517 -> m0_24  [key=2, style=dotted];
m0_517 -> m0_25  [key=2, style=dotted];
m0_517 -> m0_518  [key=0, style=solid];
m0_517 -> m0_519  [key=0, style=solid];
m0_519 -> m0_24  [key=2, style=dotted];
m0_519 -> m0_25  [key=2, style=dotted];
m0_519 -> m0_520  [key=0, style=solid];
m0_519 -> m0_521  [key=0, style=solid];
m0_521 -> m0_24  [key=2, style=dotted];
m0_521 -> m0_25  [key=2, style=dotted];
m0_521 -> m0_522  [key=0, style=solid];
m0_521 -> m0_524  [key=0, style=solid];
m0_523 -> m0_24  [key=2, style=dotted];
m0_523 -> m0_25  [key=2, style=dotted];
m0_523 -> m0_524  [key=0, style=solid];
m0_523 -> m0_528  [key=0, style=solid];
m0_523 -> m0_156  [key=2, style=dotted];
m0_523 -> m0_529  [key=2, style=dotted];
m0_523 -> m0_530  [key=2, style=dotted];
m0_525 -> m0_24  [key=2, style=dotted];
m0_525 -> m0_25  [key=2, style=dotted];
m0_525 -> m0_526  [key=0, style=solid];
m0_525 -> m0_528  [key=0, style=solid];
m0_525 -> m0_156  [key=2, style=dotted];
m0_525 -> m0_529  [key=2, style=dotted];
m0_525 -> m0_531  [key=2, style=dotted];
m0_527 -> m0_24  [key=2, style=dotted];
m0_527 -> m0_25  [key=2, style=dotted];
m0_527 -> m0_528  [key=0, style=solid];
m0_529 -> m0_24  [key=2, style=dotted];
m0_529 -> m0_25  [key=2, style=dotted];
m0_529 -> m0_530  [key=0, style=solid];
m0_529 -> m0_532  [key=0, style=solid];
m0_529 -> m0_533  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_529 -> m0_534  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_534 -> m0_24  [key=2, style=dotted];
m0_534 -> m0_25  [key=2, style=dotted];
m0_534 -> m0_535  [key=0, style=solid];
m0_534 -> m0_440  [key=2, style=dotted];
m0_538 -> m0_508  [color=blue, key=0, style=bold];
m0_538 -> m0_539  [key=0, style=solid];
m0_538 -> m0_23  [key=2, style=dotted];
m0_538 -> m0_543  [color=darkseagreen4, key=1, label=members, style=dashed];
m0_552 -> m0_560  [key=0, style=solid];
m0_552 -> m0_24  [key=2, style=dotted];
m0_552 -> m0_553  [key=0, style=solid];
m0_126 -> m0_24  [key=2, style=dotted];
m0_126 -> m0_25  [key=2, style=dotted];
m0_126 -> m0_127  [key=0, style=solid];
m0_418 -> m0_26  [key=2, style=dotted];
m0_418 -> m0_419  [key=0, style=solid];
m0_1162 -> m0_1163  [key=0, style=solid];
m0_1165 -> m0_26  [key=2, style=dotted];
m0_1165 -> m0_1166  [key=0, style=solid];
m0_1163 -> m0_22  [key=2, style=dotted];
m0_1163 -> m0_23  [key=2, style=dotted];
m0_1163 -> m0_1165  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1163 -> m0_1164  [key=0, style=solid];
m0_1164 -> m0_1165  [key=0, style=solid];
m0_1164 -> m0_87  [key=2, style=dotted];
m0_1164 -> m0_664  [key=2, style=dotted];
m0_1166 -> m0_1162  [color=blue, key=0, style=bold];
m0_694 -> m0_695  [key=0, style=solid];
m0_694 -> m0_696  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_694 -> m0_697  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_694 -> m0_658  [color=darkorchid, key=3, label="method methodReturn string ResolveDictionaryKey", style=bold];
m0_694 -> m0_26  [key=2, style=dotted];
m0_695 -> m0_696  [key=0, style=solid];
m0_695 -> m0_697  [key=0, style=solid];
m0_695 -> m0_24  [key=2, style=dotted];
m0_695 -> m0_25  [key=2, style=dotted];
m0_696 -> m0_698  [key=0, style=solid];
m0_696 -> m0_119  [key=2, style=dotted];
m0_696 -> m0_26  [key=2, style=dotted];
m0_696 -> m0_697  [key=0, style=solid];
m0_697 -> m0_698  [key=0, style=solid];
m0_697 -> m0_658  [key=2, style=dotted];
m0_697 -> m0_26  [key=2, style=dotted];
m0_698 -> m0_694  [color=blue, key=0, style=bold];
m0_698 -> m0_24  [key=2, style=dotted];
m0_698 -> m0_25  [key=2, style=dotted];
m0_698 -> m0_699  [key=0, style=solid];
m0_1470 -> m0_1471  [key=0, style=solid];
m0_1478 -> m0_26  [key=2, style=dotted];
m0_1478 -> m0_1479  [key=0, style=solid];
m0_1472 -> m0_22  [key=2, style=dotted];
m0_1472 -> m0_23  [key=2, style=dotted];
m0_1472 -> m0_1478  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1472 -> m0_1473  [key=0, style=solid];
m0_1472 -> m0_1475  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1472 -> m0_1477  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1472 -> m0_1479  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1475 -> m0_24  [key=2, style=dotted];
m0_1475 -> m0_25  [key=2, style=dotted];
m0_1475 -> m0_1476  [key=0, style=solid];
m0_1477 -> m0_24  [key=2, style=dotted];
m0_1477 -> m0_25  [key=2, style=dotted];
m0_1477 -> m0_1478  [key=0, style=solid];
m0_1479 -> m0_24  [key=2, style=dotted];
m0_1479 -> m0_1480  [key=0, style=solid];
m0_1479 -> m0_28  [key=2, style=dotted];
m0_1471 -> m0_1472  [key=0, style=solid];
m0_1473 -> m0_1474  [key=0, style=solid];
m0_1473 -> m0_1476  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_1474 -> m0_1475  [key=0, style=solid];
m0_1474 -> m0_1477  [key=0, style=solid];
m0_1476 -> m0_1474  [key=0, style=solid];
m0_1476 -> m0_1476  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_1480 -> m0_1470  [color=blue, key=0, style=bold];
m0_1954 -> m0_1955  [key=0, style=solid];
m0_1960 -> m0_26  [key=2, style=dotted];
m0_1960 -> m0_1961  [key=0, style=solid];
m0_1960 -> m0_2007  [key=2, style=dotted];
m0_1961 -> m0_26  [key=2, style=dotted];
m0_1961 -> m0_1962  [key=0, style=solid];
m0_1963 -> m0_26  [key=2, style=dotted];
m0_1963 -> m0_1964  [key=0, style=solid];
m0_1963 -> m0_2007  [key=2, style=dotted];
m0_1964 -> m0_26  [key=2, style=dotted];
m0_1964 -> m0_1965  [key=0, style=solid];
m0_1970 -> m0_26  [key=2, style=dotted];
m0_1970 -> m0_1971  [key=0, style=solid];
m0_1970 -> m0_2008  [key=2, style=dotted];
m0_1971 -> m0_26  [key=2, style=dotted];
m0_1971 -> m0_1972  [key=0, style=solid];
m0_1973 -> m0_26  [key=2, style=dotted];
m0_1973 -> m0_1974  [key=0, style=solid];
m0_1973 -> m0_2008  [key=2, style=dotted];
m0_1974 -> m0_26  [key=2, style=dotted];
m0_1974 -> m0_1975  [key=0, style=solid];
m0_1980 -> m0_26  [key=2, style=dotted];
m0_1980 -> m0_1981  [key=0, style=solid];
m0_1981 -> m0_26  [key=2, style=dotted];
m0_1981 -> m0_1982  [key=0, style=solid];
m0_1983 -> m0_26  [key=2, style=dotted];
m0_1983 -> m0_1984  [key=0, style=solid];
m0_1984 -> m0_26  [key=2, style=dotted];
m0_1984 -> m0_1985  [key=0, style=solid];
m0_1990 -> m0_26  [key=2, style=dotted];
m0_1990 -> m0_1991  [key=0, style=solid];
m0_1990 -> m0_2008  [key=2, style=dotted];
m0_1991 -> m0_26  [key=2, style=dotted];
m0_1991 -> m0_1992  [key=0, style=solid];
m0_1993 -> m0_26  [key=2, style=dotted];
m0_1993 -> m0_1994  [key=0, style=solid];
m0_1993 -> m0_2008  [key=2, style=dotted];
m0_1994 -> m0_26  [key=2, style=dotted];
m0_1994 -> m0_1995  [key=0, style=solid];
m0_2000 -> m0_26  [key=2, style=dotted];
m0_2000 -> m0_2001  [key=0, style=solid];
m0_2000 -> m0_2007  [key=2, style=dotted];
m0_2001 -> m0_26  [key=2, style=dotted];
m0_2001 -> m0_2002  [key=0, style=solid];
m0_2003 -> m0_26  [key=2, style=dotted];
m0_2003 -> m0_2004  [key=0, style=solid];
m0_2003 -> m0_2007  [key=2, style=dotted];
m0_2004 -> m0_26  [key=2, style=dotted];
m0_2004 -> m0_2005  [key=0, style=solid];
m0_1956 -> m0_22  [key=2, style=dotted];
m0_1956 -> m0_23  [key=2, style=dotted];
m0_1956 -> m0_1960  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1956 -> m0_1961  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1956 -> m0_1963  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1956 -> m0_1964  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1956 -> m0_1957  [key=0, style=solid];
m0_1956 -> m0_1958  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1956 -> m0_1959  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1956 -> m0_1962  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1956 -> m0_1965  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1966 -> m0_22  [key=2, style=dotted];
m0_1966 -> m0_23  [key=2, style=dotted];
m0_1966 -> m0_1970  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1966 -> m0_1971  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1966 -> m0_1973  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1966 -> m0_1974  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1966 -> m0_1967  [key=0, style=solid];
m0_1966 -> m0_1968  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1966 -> m0_1969  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1966 -> m0_1972  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1966 -> m0_1975  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1976 -> m0_22  [key=2, style=dotted];
m0_1976 -> m0_23  [key=2, style=dotted];
m0_1976 -> m0_1980  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1976 -> m0_1981  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1976 -> m0_1983  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1976 -> m0_1984  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1976 -> m0_1977  [key=0, style=solid];
m0_1976 -> m0_1978  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1976 -> m0_1979  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1976 -> m0_1982  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1976 -> m0_1985  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1986 -> m0_22  [key=2, style=dotted];
m0_1986 -> m0_23  [key=2, style=dotted];
m0_1986 -> m0_1990  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1986 -> m0_1991  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1986 -> m0_1993  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1986 -> m0_1994  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1986 -> m0_1987  [key=0, style=solid];
m0_1986 -> m0_1988  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1986 -> m0_1989  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1986 -> m0_1992  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1986 -> m0_1995  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1996 -> m0_22  [key=2, style=dotted];
m0_1996 -> m0_23  [key=2, style=dotted];
m0_1996 -> m0_2000  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1996 -> m0_2001  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1996 -> m0_2003  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1996 -> m0_2004  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1996 -> m0_1997  [key=0, style=solid];
m0_1996 -> m0_1998  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1996 -> m0_1999  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1996 -> m0_2002  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1996 -> m0_2005  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1958 -> m0_24  [key=2, style=dotted];
m0_1958 -> m0_25  [key=2, style=dotted];
m0_1958 -> m0_1959  [key=0, style=solid];
m0_1959 -> m0_24  [key=2, style=dotted];
m0_1959 -> m0_25  [key=2, style=dotted];
m0_1959 -> m0_1960  [key=0, style=solid];
m0_1962 -> m0_24  [key=2, style=dotted];
m0_1962 -> m0_25  [key=2, style=dotted];
m0_1962 -> m0_1963  [key=0, style=solid];
m0_1965 -> m0_24  [key=2, style=dotted];
m0_1965 -> m0_25  [key=2, style=dotted];
m0_1965 -> m0_1966  [key=0, style=solid];
m0_1968 -> m0_24  [key=2, style=dotted];
m0_1968 -> m0_25  [key=2, style=dotted];
m0_1968 -> m0_1969  [key=0, style=solid];
m0_1969 -> m0_24  [key=2, style=dotted];
m0_1969 -> m0_25  [key=2, style=dotted];
m0_1969 -> m0_1970  [key=0, style=solid];
m0_1972 -> m0_24  [key=2, style=dotted];
m0_1972 -> m0_25  [key=2, style=dotted];
m0_1972 -> m0_1973  [key=0, style=solid];
m0_1975 -> m0_24  [key=2, style=dotted];
m0_1975 -> m0_25  [key=2, style=dotted];
m0_1975 -> m0_1976  [key=0, style=solid];
m0_1978 -> m0_24  [key=2, style=dotted];
m0_1978 -> m0_25  [key=2, style=dotted];
m0_1978 -> m0_1979  [key=0, style=solid];
m0_1979 -> m0_24  [key=2, style=dotted];
m0_1979 -> m0_25  [key=2, style=dotted];
m0_1979 -> m0_1980  [key=0, style=solid];
m0_1982 -> m0_24  [key=2, style=dotted];
m0_1982 -> m0_25  [key=2, style=dotted];
m0_1982 -> m0_1983  [key=0, style=solid];
m0_1985 -> m0_24  [key=2, style=dotted];
m0_1985 -> m0_25  [key=2, style=dotted];
m0_1985 -> m0_1986  [key=0, style=solid];
m0_1988 -> m0_24  [key=2, style=dotted];
m0_1988 -> m0_25  [key=2, style=dotted];
m0_1988 -> m0_1989  [key=0, style=solid];
m0_1995 -> m0_24  [key=2, style=dotted];
m0_1995 -> m0_25  [key=2, style=dotted];
m0_1995 -> m0_1996  [key=0, style=solid];
m0_1998 -> m0_24  [key=2, style=dotted];
m0_1998 -> m0_25  [key=2, style=dotted];
m0_1998 -> m0_1999  [key=0, style=solid];
m0_2005 -> m0_24  [key=2, style=dotted];
m0_2005 -> m0_25  [key=2, style=dotted];
m0_2005 -> m0_2006  [key=0, style=solid];
m0_1989 -> m0_1990  [key=0, style=solid];
m0_1989 -> m0_1179  [key=2, style=dotted];
m0_1992 -> m0_1993  [key=0, style=solid];
m0_1992 -> m0_1179  [key=2, style=dotted];
m0_1999 -> m0_2000  [key=0, style=solid];
m0_1999 -> m0_2009  [key=2, style=dotted];
m0_2002 -> m0_2003  [key=0, style=solid];
m0_2002 -> m0_2009  [key=2, style=dotted];
m0_1955 -> m0_1956  [key=0, style=solid];
m0_1955 -> m0_1966  [color=darkseagreen4, key=1, label=json, style=dashed];
m0_1955 -> m0_1976  [color=darkseagreen4, key=1, label=json, style=dashed];
m0_1955 -> m0_1986  [color=darkseagreen4, key=1, label=json, style=dashed];
m0_1955 -> m0_1996  [color=darkseagreen4, key=1, label=json, style=dashed];
m0_1957 -> m0_1958  [key=0, style=solid];
m0_1967 -> m0_1968  [key=0, style=solid];
m0_1977 -> m0_1978  [key=0, style=solid];
m0_1987 -> m0_1988  [key=0, style=solid];
m0_1997 -> m0_1998  [key=0, style=solid];
m0_2006 -> m0_1954  [color=blue, key=0, style=bold];
m0_195 -> m0_196  [key=0, style=solid];
m0_1157 -> m0_1158  [key=0, style=solid];
m0_1160 -> m0_26  [key=2, style=dotted];
m0_1160 -> m0_1161  [key=0, style=solid];
m0_1158 -> m0_22  [key=2, style=dotted];
m0_1158 -> m0_23  [key=2, style=dotted];
m0_1158 -> m0_1160  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1158 -> m0_1159  [key=0, style=solid];
m0_1159 -> m0_1160  [key=0, style=solid];
m0_1159 -> m0_117  [key=2, style=dotted];
m0_1159 -> m0_664  [key=2, style=dotted];
m0_1161 -> m0_1157  [color=blue, key=0, style=bold];
m0_480 -> m0_481  [key=0, style=solid];
m0_480 -> m0_499  [key=2, style=dotted];
m0_480 -> m0_488  [color=darkseagreen4, key=1, label=t, style=dashed];
m0_480 -> m0_490  [color=darkseagreen4, key=1, label=t, style=dashed];
m0_480 -> m0_492  [color=darkseagreen4, key=1, label=t, style=dashed];
m0_480 -> m0_494  [color=darkseagreen4, key=1, label=t, style=dashed];
m0_154 -> m0_26  [key=2, style=dotted];
m0_154 -> m0_155  [key=0, style=solid];
m0_869 -> m0_870  [key=0, style=solid];
m0_873 -> m0_26  [key=2, style=dotted];
m0_873 -> m0_874  [key=0, style=solid];
m0_874 -> m0_26  [key=2, style=dotted];
m0_874 -> m0_875  [key=0, style=solid];
m0_877 -> m0_26  [key=2, style=dotted];
m0_877 -> m0_878  [key=0, style=solid];
m0_878 -> m0_26  [key=2, style=dotted];
m0_878 -> m0_879  [key=0, style=solid];
m0_881 -> m0_26  [key=2, style=dotted];
m0_881 -> m0_882  [key=0, style=solid];
m0_882 -> m0_26  [key=2, style=dotted];
m0_882 -> m0_883  [key=0, style=solid];
m0_885 -> m0_26  [key=2, style=dotted];
m0_885 -> m0_886  [key=0, style=solid];
m0_886 -> m0_26  [key=2, style=dotted];
m0_886 -> m0_887  [key=0, style=solid];
m0_891 -> m0_26  [key=2, style=dotted];
m0_891 -> m0_892  [key=0, style=solid];
m0_892 -> m0_26  [key=2, style=dotted];
m0_892 -> m0_893  [key=0, style=solid];
m0_871 -> m0_22  [key=2, style=dotted];
m0_871 -> m0_23  [key=2, style=dotted];
m0_871 -> m0_873  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_871 -> m0_874  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_871 -> m0_872  [key=0, style=solid];
m0_875 -> m0_22  [key=2, style=dotted];
m0_875 -> m0_23  [key=2, style=dotted];
m0_875 -> m0_877  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_875 -> m0_878  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_875 -> m0_876  [key=0, style=solid];
m0_879 -> m0_22  [key=2, style=dotted];
m0_879 -> m0_23  [key=2, style=dotted];
m0_879 -> m0_881  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_879 -> m0_882  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_879 -> m0_880  [key=0, style=solid];
m0_883 -> m0_22  [key=2, style=dotted];
m0_883 -> m0_23  [key=2, style=dotted];
m0_883 -> m0_885  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_883 -> m0_886  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_883 -> m0_884  [key=0, style=solid];
m0_887 -> m0_22  [key=2, style=dotted];
m0_887 -> m0_23  [key=2, style=dotted];
m0_887 -> m0_888  [key=0, style=solid];
m0_887 -> m0_899  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_889 -> m0_22  [key=2, style=dotted];
m0_889 -> m0_23  [key=2, style=dotted];
m0_889 -> m0_891  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_889 -> m0_892  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_889 -> m0_890  [key=0, style=solid];
m0_893 -> m0_22  [key=2, style=dotted];
m0_893 -> m0_23  [key=2, style=dotted];
m0_893 -> m0_894  [key=0, style=solid];
m0_895 -> m0_22  [key=2, style=dotted];
m0_895 -> m0_23  [key=2, style=dotted];
m0_895 -> m0_896  [key=0, style=solid];
m0_895 -> m0_902  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_872 -> m0_24  [key=2, style=dotted];
m0_872 -> m0_25  [key=2, style=dotted];
m0_872 -> m0_873  [key=0, style=solid];
m0_876 -> m0_24  [key=2, style=dotted];
m0_876 -> m0_25  [key=2, style=dotted];
m0_876 -> m0_877  [key=0, style=solid];
m0_880 -> m0_24  [key=2, style=dotted];
m0_880 -> m0_25  [key=2, style=dotted];
m0_880 -> m0_881  [key=0, style=solid];
m0_884 -> m0_24  [key=2, style=dotted];
m0_884 -> m0_25  [key=2, style=dotted];
m0_884 -> m0_885  [key=0, style=solid];
m0_890 -> m0_24  [key=2, style=dotted];
m0_890 -> m0_25  [key=2, style=dotted];
m0_890 -> m0_891  [key=0, style=solid];
m0_894 -> m0_24  [key=2, style=dotted];
m0_894 -> m0_895  [key=0, style=solid];
m0_894 -> m0_28  [key=2, style=dotted];
m0_870 -> m0_871  [key=0, style=solid];
m0_888 -> m0_889  [key=0, style=solid];
m0_888 -> m0_42  [key=2, style=dotted];
m0_888 -> m0_898  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_896 -> m0_897  [key=0, style=solid];
m0_896 -> m0_42  [key=2, style=dotted];
m0_896 -> m0_901  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_897 -> m0_869  [color=blue, key=0, style=bold];
m0_125 -> m0_26  [key=2, style=dotted];
m0_125 -> m0_126  [key=0, style=solid];
m0_124 -> m0_24  [key=2, style=dotted];
m0_124 -> m0_25  [key=2, style=dotted];
m0_124 -> m0_125  [key=0, style=solid];
m0_124 -> m0_409  [key=0, style=solid];
m0_124 -> m0_410  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_124 -> m0_114  [color=darkorchid, key=3, label="Parameter variable System.Type type", style=bold];
m0_124 -> m0_360  [color=darkorchid, key=3, label="Parameter variable System.Type type", style=bold];
m0_553 -> m0_571  [key=0, style=solid];
m0_553 -> m0_572  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m0_553 -> m0_573  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m0_553 -> m0_574  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m0_553 -> m0_575  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m0_553 -> m0_577  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m0_553 -> m0_578  [color=darkseagreen4, key=1, label="Newtonsoft.Json.MemberSerialization", style=dashed];
m0_553 -> m0_579  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m0_553 -> m0_580  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m0_553 -> m0_583  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m0_553 -> m0_584  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m0_553 -> m0_543  [color=darkorchid, key=3, label="Parameter variable System.Reflection.MemberInfo member", style=bold];
m0_553 -> m0_104  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.MemberSerialization memberSerialization", style=bold];
m0_553 -> m0_26  [key=2, style=dotted];
m0_553 -> m0_554  [key=0, style=solid];
m0_571 -> m0_572  [key=0, style=solid];
m0_571 -> m0_319  [key=2, style=dotted];
m0_571 -> m0_573  [color=darkseagreen4, key=1, label=j, style=dashed];
m0_571 -> m0_574  [color=darkseagreen4, key=1, label=property, style=dashed];
m0_571 -> m0_575  [color=darkseagreen4, key=1, label=j, style=dashed];
m0_571 -> m0_577  [color=darkseagreen4, key=1, label=property, style=dashed];
m0_571 -> m0_579  [color=darkseagreen4, key=1, label=property, style=dashed];
m0_571 -> m0_580  [color=darkseagreen4, key=1, label=property, style=dashed];
m0_571 -> m0_581  [color=darkseagreen4, key=1, label=property, style=dashed];
m0_571 -> m0_582  [color=darkseagreen4, key=1, label=property, style=dashed];
m0_571 -> m0_583  [color=darkseagreen4, key=1, label=property, style=dashed];
m0_571 -> m0_584  [color=darkseagreen4, key=1, label=property, style=dashed];
m0_571 -> m0_585  [color=darkseagreen4, key=1, label=property, style=dashed];
m0_572 -> m0_573  [key=0, style=solid];
m0_572 -> m0_192  [key=2, style=dotted];
m0_572 -> m0_576  [key=0, style=solid];
m0_573 -> m0_574  [key=0, style=solid];
m0_573 -> m0_578  [color=darkseagreen4, key=1, label=total, style=dashed];
m0_574 -> m0_575  [key=0, style=solid];
m0_574 -> m0_562  [key=2, style=dotted];
m0_574 -> m0_42  [key=2, style=dotted];
m0_574 -> m0_577  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_575 -> m0_576  [key=0, style=solid];
m0_575 -> m0_320  [key=2, style=dotted];
m0_575 -> m0_572  [key=0, style=solid];
m0_575 -> m0_575  [color=darkseagreen4, key=1, label=j, style=dashed];
m0_583 -> m0_584  [key=0, style=solid];
m0_583 -> m0_588  [key=2, style=dotted];
m0_583 -> m0_22  [key=2, style=dotted];
m0_583 -> m0_585  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_583 -> m0_595  [key=2, style=dotted];
m0_583 -> m0_596  [key=2, style=dotted];
m0_584 -> m0_585  [key=0, style=solid];
m0_584 -> m0_589  [key=2, style=dotted];
m0_584 -> m0_24  [key=2, style=dotted];
m0_581 -> m0_582  [key=0, style=solid];
m0_582 -> m0_583  [key=0, style=solid];
m0_582 -> m0_594  [key=2, style=dotted];
m0_582 -> m0_588  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_585 -> m0_586  [key=0, style=solid];
m0_585 -> m0_26  [key=2, style=dotted];
m0_576 -> m0_577  [key=0, style=solid];
m0_576 -> m0_565  [color=blue, key=0, style=bold];
m0_586 -> m0_553  [color=blue, key=0, style=bold];
m0_586 -> m0_587  [key=0, style=solid];
m0_586 -> m0_588  [color=darkseagreen4, key=1, label=j, style=dashed];
m0_586 -> m0_592  [color=darkseagreen4, key=1, label=j, style=dashed];
m0_400 -> m0_405  [key=0, style=solid];
m0_400 -> m0_366  [color=darkorchid, key=3, label="Parameter variable System.Type t", style=bold];
m0_400 -> m0_121  [color=darkorchid, key=3, label="method methodReturn bool ShouldSkipDeserialized", style=bold];
m0_400 -> m0_26  [key=2, style=dotted];
m0_400 -> m0_401  [key=0, style=solid];
m0_405 -> m0_406  [key=0, style=solid];
m0_405 -> m0_26  [key=2, style=dotted];
m0_406 -> m0_400  [color=blue, key=0, style=bold];
m0_406 -> m0_407  [key=0, style=solid];
m0_406 -> m0_252  [key=2, style=dotted];
m0_276 -> m0_277  [key=0, style=solid];
m0_276 -> m0_269  [key=2, style=dotted];
m0_276 -> m0_278  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_276 -> m0_42  [key=2, style=dotted];
m0_277 -> m0_278  [key=0, style=solid];
m0_277 -> m0_286  [key=2, style=dotted];
m0_277 -> m0_283  [color=darkseagreen4, key=1, label=parameterCollection, style=dashed];
m0_277 -> m0_284  [color=darkseagreen4, key=1, label=parameterCollection, style=dashed];
m0_277 -> m0_273  [color=blue, key=0, style=bold];
m0_283 -> m0_278  [key=0, style=solid];
m0_283 -> m0_288  [key=2, style=dotted];
m0_283 -> m0_22  [key=2, style=dotted];
m0_283 -> m0_23  [key=2, style=dotted];
m0_283 -> m0_285  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_283 -> m0_287  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_283 -> m0_289  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_283 -> m0_291  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_283 -> m0_293  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_283 -> m0_284  [key=0, style=solid];
m0_283 -> m0_286  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_283 -> m0_290  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_283 -> m0_292  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_283 -> m0_294  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_283 -> m0_297  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_284 -> m0_285  [key=0, style=solid];
m0_284 -> m0_24  [key=2, style=dotted];
m0_281 -> m0_282  [key=0, style=solid];
m0_281 -> m0_287  [key=2, style=dotted];
m0_281 -> m0_283  [color=darkseagreen4, key=1, label=property, style=dashed];
m0_282 -> m0_283  [key=0, style=solid];
m0_282 -> m0_278  [key=0, style=solid];
m0_285 -> m0_110  [color=blue, key=0, style=bold];
m0_285 -> m0_26  [key=2, style=dotted];
m0_285 -> m0_286  [key=0, style=solid];
m0_402 -> m0_511  [key=0, style=solid];
m0_402 -> m0_513  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m0_402 -> m0_514  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m0_402 -> m0_515  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
m0_402 -> m0_516  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m0_402 -> m0_517  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m0_402 -> m0_518  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m0_402 -> m0_519  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m0_402 -> m0_520  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m0_402 -> m0_521  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_402 -> m0_522  [color=darkseagreen4, key=1, label="System.Reflection.ParameterInfo[]", style=dashed];
m0_402 -> m0_523  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m0_402 -> m0_524  [color=darkseagreen4, key=1, label="System.Reflection.ParameterInfo[]", style=dashed];
m0_402 -> m0_525  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m0_402 -> m0_526  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_402 -> m0_374  [color=darkorchid, key=3, label="Parameter variable System.Reflection.MethodInfo method", style=bold];
m0_402 -> m0_377  [color=darkorchid, key=3, label="Parameter variable System.Reflection.ParameterInfo[] parameters", style=bold];
m0_402 -> m0_367  [color=darkorchid, key=3, label="Parameter variable System.Reflection.MethodInfo currentCallback", style=bold];
m0_402 -> m0_368  [color=darkorchid, key=3, label="Parameter variable System.Reflection.MethodInfo currentCallback", style=bold];
m0_402 -> m0_369  [color=darkorchid, key=3, label="Parameter variable System.Reflection.MethodInfo currentCallback", style=bold];
m0_402 -> m0_370  [color=darkorchid, key=3, label="Parameter variable System.Reflection.MethodInfo currentCallback", style=bold];
m0_402 -> m0_371  [color=darkorchid, key=3, label="Parameter variable System.Reflection.MethodInfo currentCallback", style=bold];
m0_402 -> m0_376  [color=darkorchid, key=3, label="Parameter variable System.Type prevAttributeType", style=bold];
m0_402 -> m0_402  [color=darkorchid, key=3, label="Parameter variable System.Type prevAttributeType", style=bold];
m0_402 -> m0_121  [color=darkorchid, key=3, label="method methodReturn bool IsValidCallback", style=bold];
m0_402 -> m0_26  [key=2, style=dotted];
m0_402 -> m0_403  [key=0, style=solid];
m0_989 -> m0_990  [key=0, style=solid];
m0_993 -> m0_26  [key=2, style=dotted];
m0_993 -> m0_994  [key=0, style=solid];
m0_995 -> m0_26  [key=2, style=dotted];
m0_995 -> m0_996  [key=0, style=solid];
m0_997 -> m0_26  [key=2, style=dotted];
m0_997 -> m0_998  [key=0, style=solid];
m0_997 -> m0_1001  [key=2, style=dotted];
m0_997 -> m0_1002  [key=2, style=dotted];
m0_999 -> m0_26  [key=2, style=dotted];
m0_999 -> m0_1000  [key=0, style=solid];
m0_991 -> m0_22  [key=2, style=dotted];
m0_991 -> m0_23  [key=2, style=dotted];
m0_991 -> m0_993  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_991 -> m0_995  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_991 -> m0_997  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_991 -> m0_999  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_991 -> m0_992  [key=0, style=solid];
m0_991 -> m0_994  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_991 -> m0_996  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_991 -> m0_998  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_992 -> m0_24  [key=2, style=dotted];
m0_992 -> m0_993  [key=0, style=solid];
m0_994 -> m0_24  [key=2, style=dotted];
m0_994 -> m0_995  [key=0, style=solid];
m0_996 -> m0_24  [key=2, style=dotted];
m0_996 -> m0_997  [key=0, style=solid];
m0_998 -> m0_24  [key=2, style=dotted];
m0_998 -> m0_999  [key=0, style=solid];
m0_990 -> m0_991  [key=0, style=solid];
m0_1000 -> m0_989  [color=blue, key=0, style=bold];
m0_25 -> m0_26  [key=0, style=solid];
m0_194 -> m0_195  [key=0, style=solid];
m0_1065 -> m0_1066  [key=0, style=solid];
m0_1069 -> m0_26  [key=2, style=dotted];
m0_1069 -> m0_1070  [key=0, style=solid];
m0_1071 -> m0_26  [key=2, style=dotted];
m0_1071 -> m0_1072  [key=0, style=solid];
m0_1073 -> m0_26  [key=2, style=dotted];
m0_1073 -> m0_1074  [key=0, style=solid];
m0_1067 -> m0_22  [key=2, style=dotted];
m0_1067 -> m0_23  [key=2, style=dotted];
m0_1067 -> m0_1069  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1067 -> m0_1071  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1067 -> m0_1073  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1067 -> m0_1068  [key=0, style=solid];
m0_1067 -> m0_1070  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1067 -> m0_1072  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1067 -> m0_1074  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1067 -> m0_1077  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1068 -> m0_24  [key=2, style=dotted];
m0_1068 -> m0_1069  [key=0, style=solid];
m0_1070 -> m0_24  [key=2, style=dotted];
m0_1070 -> m0_1071  [key=0, style=solid];
m0_1072 -> m0_24  [key=2, style=dotted];
m0_1072 -> m0_1073  [key=0, style=solid];
m0_1074 -> m0_1075  [key=0, style=solid];
m0_1074 -> m0_42  [key=2, style=dotted];
m0_1074 -> m0_1076  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_1066 -> m0_1067  [key=0, style=solid];
m0_1075 -> m0_1065  [color=blue, key=0, style=bold];
m0_1517 -> m0_1518  [key=0, style=solid];
m0_1521 -> m0_26  [key=2, style=dotted];
m0_1521 -> m0_1522  [key=0, style=solid];
m0_1523 -> m0_26  [key=2, style=dotted];
m0_1523 -> m0_1524  [key=0, style=solid];
m0_1525 -> m0_26  [key=2, style=dotted];
m0_1525 -> m0_1526  [key=0, style=solid];
m0_1527 -> m0_26  [key=2, style=dotted];
m0_1527 -> m0_1528  [key=0, style=solid];
m0_1529 -> m0_26  [key=2, style=dotted];
m0_1529 -> m0_1530  [key=0, style=solid];
m0_1531 -> m0_26  [key=2, style=dotted];
m0_1531 -> m0_1532  [key=0, style=solid];
m0_1533 -> m0_26  [key=2, style=dotted];
m0_1533 -> m0_1534  [key=0, style=solid];
m0_1535 -> m0_26  [key=2, style=dotted];
m0_1535 -> m0_1536  [key=0, style=solid];
m0_1537 -> m0_26  [key=2, style=dotted];
m0_1537 -> m0_1538  [key=0, style=solid];
m0_1539 -> m0_26  [key=2, style=dotted];
m0_1539 -> m0_1540  [key=0, style=solid];
m0_1541 -> m0_26  [key=2, style=dotted];
m0_1541 -> m0_1542  [key=0, style=solid];
m0_1543 -> m0_26  [key=2, style=dotted];
m0_1543 -> m0_1544  [key=0, style=solid];
m0_1545 -> m0_26  [key=2, style=dotted];
m0_1545 -> m0_1546  [key=0, style=solid];
m0_1518 -> m0_22  [key=2, style=dotted];
m0_1518 -> m0_23  [key=2, style=dotted];
m0_1518 -> m0_1521  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1518 -> m0_1523  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1518 -> m0_1525  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1518 -> m0_1527  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1518 -> m0_1529  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1518 -> m0_1531  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1518 -> m0_1533  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1518 -> m0_1535  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1518 -> m0_1537  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1518 -> m0_1539  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1518 -> m0_1541  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1518 -> m0_1543  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1518 -> m0_1545  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1518 -> m0_1519  [key=0, style=solid];
m0_1518 -> m0_1520  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1518 -> m0_1522  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1518 -> m0_1524  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1518 -> m0_1526  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1518 -> m0_1528  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1518 -> m0_1530  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1518 -> m0_1532  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1518 -> m0_1534  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1518 -> m0_1536  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1518 -> m0_1538  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1518 -> m0_1540  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1518 -> m0_1542  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1518 -> m0_1544  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1518 -> m0_1546  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1520 -> m0_24  [key=2, style=dotted];
m0_1520 -> m0_25  [key=2, style=dotted];
m0_1520 -> m0_1521  [key=0, style=solid];
m0_1522 -> m0_24  [key=2, style=dotted];
m0_1522 -> m0_25  [key=2, style=dotted];
m0_1522 -> m0_1523  [key=0, style=solid];
m0_1524 -> m0_24  [key=2, style=dotted];
m0_1524 -> m0_25  [key=2, style=dotted];
m0_1524 -> m0_1525  [key=0, style=solid];
m0_1526 -> m0_24  [key=2, style=dotted];
m0_1526 -> m0_25  [key=2, style=dotted];
m0_1526 -> m0_1527  [key=0, style=solid];
m0_1528 -> m0_24  [key=2, style=dotted];
m0_1528 -> m0_25  [key=2, style=dotted];
m0_1528 -> m0_1529  [key=0, style=solid];
m0_1530 -> m0_24  [key=2, style=dotted];
m0_1530 -> m0_25  [key=2, style=dotted];
m0_1530 -> m0_1531  [key=0, style=solid];
m0_1532 -> m0_24  [key=2, style=dotted];
m0_1532 -> m0_25  [key=2, style=dotted];
m0_1532 -> m0_1533  [key=0, style=solid];
m0_1534 -> m0_24  [key=2, style=dotted];
m0_1534 -> m0_25  [key=2, style=dotted];
m0_1534 -> m0_1535  [key=0, style=solid];
m0_1536 -> m0_24  [key=2, style=dotted];
m0_1536 -> m0_25  [key=2, style=dotted];
m0_1536 -> m0_1537  [key=0, style=solid];
m0_1538 -> m0_24  [key=2, style=dotted];
m0_1538 -> m0_25  [key=2, style=dotted];
m0_1538 -> m0_1539  [key=0, style=solid];
m0_1540 -> m0_24  [key=2, style=dotted];
m0_1540 -> m0_25  [key=2, style=dotted];
m0_1540 -> m0_1541  [key=0, style=solid];
m0_1542 -> m0_24  [key=2, style=dotted];
m0_1542 -> m0_25  [key=2, style=dotted];
m0_1542 -> m0_1543  [key=0, style=solid];
m0_1544 -> m0_24  [key=2, style=dotted];
m0_1544 -> m0_25  [key=2, style=dotted];
m0_1544 -> m0_1545  [key=0, style=solid];
m0_1546 -> m0_24  [key=2, style=dotted];
m0_1546 -> m0_1547  [key=0, style=solid];
m0_1546 -> m0_28  [key=2, style=dotted];
m0_1519 -> m0_1520  [key=0, style=solid];
m0_1547 -> m0_1517  [color=blue, key=0, style=bold];
m0_409 -> m0_410  [key=0, style=solid];
m0_409 -> m0_50  [key=2, style=dotted];
m0_409 -> m0_412  [color=darkseagreen4, key=1, label=ret, style=dashed];
m0_409 -> m0_414  [color=darkseagreen4, key=1, label=ret, style=dashed];
m0_409 -> m0_415  [color=darkseagreen4, key=1, label=ret, style=dashed];
m0_409 -> m0_26  [key=2, style=dotted];
m0_410 -> m0_411  [key=0, style=solid];
m0_410 -> m0_412  [color=darkseagreen4, key=1, label=current, style=dashed];
m0_410 -> m0_413  [color=darkseagreen4, key=1, label=current, style=dashed];
m0_410 -> m0_124  [color=darkorchid, key=3, label="Local variable System.Type current", style=bold];
m0_410 -> m0_26  [key=2, style=dotted];
m0_412 -> m0_413  [key=0, style=solid];
m0_412 -> m0_54  [key=2, style=dotted];
m0_412 -> m0_26  [key=2, style=dotted];
m0_414 -> m0_415  [key=0, style=solid];
m0_414 -> m0_418  [key=2, style=dotted];
m0_414 -> m0_26  [key=2, style=dotted];
m0_415 -> m0_416  [key=0, style=solid];
m0_415 -> m0_26  [key=2, style=dotted];
m0_411 -> m0_412  [key=0, style=solid];
m0_411 -> m0_414  [key=0, style=solid];
m0_411 -> m0_252  [key=2, style=dotted];
m0_413 -> m0_411  [key=0, style=solid];
m0_413 -> m0_417  [key=2, style=dotted];
m0_413 -> m0_413  [color=darkseagreen4, key=1, label=current, style=dashed];
m0_413 -> m0_26  [key=2, style=dotted];
m0_413 -> m0_414  [key=0, style=solid];
m0_416 -> m0_124  [color=blue, key=0, style=bold];
m0_416 -> m0_417  [key=0, style=solid];
m0_416 -> m0_252  [key=2, style=dotted];
m0_224 -> m0_22  [key=2, style=dotted];
m0_224 -> m0_225  [key=0, style=solid];
m0_224 -> m0_231  [key=2, style=dotted];
m0_224 -> m0_226  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_225 -> m0_24  [key=2, style=dotted];
m0_225 -> m0_226  [key=0, style=solid];
m0_225 -> m0_227  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TEnumeratorKey, TEnumeratorValue>>", style=dashed];
m0_226 -> m0_227  [key=0, style=solid];
m0_226 -> m0_18  [key=2, style=dotted];
m0_226 -> m0_229  [key=2, style=dotted];
m0_227 -> m0_228  [key=0, style=solid];
m0_228 -> m0_222  [color=blue, key=0, style=bold];
m0_228 -> m0_225  [color=blue, key=0, style=bold];
m0_304 -> m0_305  [key=0, style=solid];
m0_304 -> m0_317  [key=0, style=solid];
m0_306 -> m0_22  [key=2, style=dotted];
m0_306 -> m0_23  [key=2, style=dotted];
m0_306 -> m0_307  [key=0, style=solid];
m0_306 -> m0_310  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_305 -> m0_306  [key=0, style=solid];
m0_307 -> m0_308  [key=0, style=solid];
m0_307 -> m0_42  [key=2, style=dotted];
m0_307 -> m0_309  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_308 -> m0_304  [color=blue, key=0, style=bold];
m0_308 -> m0_309  [key=0, style=solid];
m0_308 -> m0_310  [key=0, style=solid];
m0_51 -> m0_26  [key=2, style=dotted];
m0_51 -> m0_52  [key=0, style=solid];
m0_49 -> m0_22  [key=2, style=dotted];
m0_49 -> m0_23  [key=2, style=dotted];
m0_49 -> m0_51  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_49 -> m0_57  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_49 -> m0_50  [key=0, style=solid];
m0_49 -> m0_52  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_49 -> m0_61  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_49 -> m0_53  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_49 -> m0_64  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_49 -> m0_54  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_49 -> m0_67  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_49 -> m0_55  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_49 -> m0_70  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_49 -> m0_56  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_49 -> m0_58  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_56 -> m0_24  [key=2, style=dotted];
m0_56 -> m0_25  [key=2, style=dotted];
m0_56 -> m0_57  [key=0, style=solid];
m0_48 -> m0_49  [key=0, style=solid];
m0_48 -> m0_270  [color=darkorchid, key=3, label="Local variable Newtonsoft.Json.Serialization.JsonProperty matchingMemberProperty", style=bold];
m0_53 -> m0_54  [key=0, style=solid];
m0_53 -> m0_42  [key=2, style=dotted];
m0_53 -> m0_63  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_54 -> m0_55  [key=0, style=solid];
m0_54 -> m0_42  [key=2, style=dotted];
m0_54 -> m0_66  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_161 -> m0_137  [color=blue, key=0, style=bold];
m0_269 -> m0_26  [key=2, style=dotted];
m0_269 -> m0_270  [key=0, style=solid];
m0_245 -> m0_247  [key=0, style=solid];
m0_245 -> m0_251  [key=2, style=dotted];
m0_42 -> m0_43  [key=0, style=solid];
m0_1079 -> m0_1080  [key=0, style=solid];
m0_1085 -> m0_26  [key=2, style=dotted];
m0_1085 -> m0_1086  [key=0, style=solid];
m0_1081 -> m0_22  [key=2, style=dotted];
m0_1081 -> m0_1082  [key=0, style=solid];
m0_1080 -> m0_23  [key=2, style=dotted];
m0_1080 -> m0_1081  [key=0, style=solid];
m0_1084 -> m0_1085  [key=0, style=solid];
m0_1084 -> m0_1088  [key=2, style=dotted];
m0_1082 -> m0_1084  [color=darkseagreen4, key=1, label=data, style=dashed];
m0_1082 -> m0_1083  [key=0, style=solid];
m0_1082 -> m0_87  [key=2, style=dotted];
m0_1083 -> m0_1084  [key=0, style=solid];
m0_1083 -> m0_1087  [key=2, style=dotted];
m0_1086 -> m0_1079  [color=blue, key=0, style=bold];
m0_589 -> m0_669  [key=0, style=solid];
m0_589 -> m0_671  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m0_589 -> m0_675  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m0_589 -> m0_676  [color=darkseagreen4, key=1, label=bool, style=dashed];
m0_589 -> m0_677  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m0_589 -> m0_571  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty property", style=bold];
m0_589 -> m0_553  [color=darkorchid, key=3, label="Parameter variable System.Reflection.MemberInfo member", style=bold];
m0_589 -> m0_576  [color=darkorchid, key=3, label="Parameter variable bool allowNonPublicAccess", style=bold];
m0_589 -> m0_22  [key=2, style=dotted];
m0_589 -> m0_591  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_589 -> m0_590  [key=0, style=solid];
m0_589 -> m0_595  [key=2, style=dotted];
m0_589 -> m0_596  [key=2, style=dotted];
m0_669 -> m0_670  [key=0, style=solid];
m0_669 -> m0_679  [key=2, style=dotted];
m0_669 -> m0_672  [color=darkseagreen4, key=1, label=specifiedMember, style=dashed];
m0_669 -> m0_674  [color=darkseagreen4, key=1, label=specifiedMember, style=dashed];
m0_669 -> m0_676  [color=darkseagreen4, key=1, label=specifiedMember, style=dashed];
m0_669 -> m0_677  [color=darkseagreen4, key=1, label=specifiedMember, style=dashed];
m0_669 -> m0_665  [color=blue, key=0, style=bold];
m0_675 -> m0_676  [key=0, style=solid];
m0_675 -> m0_682  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_675 -> m0_680  [color=darkseagreen4, key=1, label=json, style=dashed];
m0_676 -> m0_677  [key=0, style=solid];
m0_676 -> m0_678  [key=0, style=solid];
m0_676 -> m0_196  [key=2, style=dotted];
m0_676 -> m0_679  [color=darkseagreen4, key=1, label=count, style=dashed];
m0_677 -> m0_678  [key=0, style=solid];
m0_677 -> m0_197  [key=2, style=dotted];
m0_677 -> m0_23  [key=2, style=dotted];
m0_674 -> m0_675  [key=0, style=solid];
m0_674 -> m0_195  [key=2, style=dotted];
m0_674 -> m0_682  [color=darkseagreen4, key=1, label=specifiedPropertyGet, style=dashed];
m0_674 -> m0_685  [color=darkseagreen4, key=1, label=newLinesText, style=dashed];
m0_674 -> m0_700  [color=darkseagreen4, key=1, label=newLinesText, style=dashed];
m0_674 -> m0_677  [color=darkseagreen4, key=1, label=newLinesText, style=dashed];
m0_673 -> m0_678  [key=0, style=solid];
m0_673 -> m0_674  [key=0, style=solid];
m0_678 -> m0_589  [color=blue, key=0, style=bold];
m0_678 -> m0_680  [key=0, style=solid];
m0_678 -> m0_679  [key=0, style=solid];
m0_678 -> m0_717  [key=2, style=dotted];
m0_1610 -> m0_1611  [key=0, style=solid];
m0_1612 -> m0_22  [key=2, style=dotted];
m0_1612 -> m0_23  [key=2, style=dotted];
m0_1612 -> m0_1613  [key=0, style=solid];
m0_1612 -> m0_1617  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1611 -> m0_1612  [key=0, style=solid];
m0_1613 -> m0_1614  [key=0, style=solid];
m0_1613 -> m0_1615  [key=2, style=dotted];
m0_1613 -> m0_1616  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_1614 -> m0_1610  [color=blue, key=0, style=bold];
m0_199 -> m0_24  [key=2, style=dotted];
m0_199 -> m0_25  [key=2, style=dotted];
m0_199 -> m0_200  [key=0, style=solid];
m0_174 -> m0_175  [key=0, style=solid];
m0_174 -> m0_178  [color=darkseagreen4, key=1, label=createdType, style=dashed];
m0_178 -> m0_26  [key=2, style=dotted];
m0_178 -> m0_179  [key=0, style=solid];
m0_178 -> m0_198  [key=2, style=dotted];
m0_178 -> m0_181  [color=darkseagreen4, key=1, label=createExtensionDataDictionary, style=dashed];
m0_178 -> m0_208  [color=darkseagreen4, key=1, label=createExtensionDataDictionary, style=dashed];
m0_180 -> m0_26  [key=2, style=dotted];
m0_180 -> m0_181  [key=0, style=solid];
m0_180 -> m0_200  [key=2, style=dotted];
m0_180 -> m0_210  [color=darkseagreen4, key=1, label=setExtensionDataDictionaryValue, style=dashed];
m0_182 -> m0_26  [key=2, style=dotted];
m0_182 -> m0_183  [key=0, style=solid];
m0_184 -> m0_26  [key=2, style=dotted];
m0_184 -> m0_185  [key=0, style=solid];
m0_184 -> m0_194  [key=2, style=dotted];
m0_186 -> m0_26  [key=2, style=dotted];
m0_186 -> m0_187  [key=0, style=solid];
m0_186 -> m0_109  [key=2, style=dotted];
m0_186 -> m0_222  [color=darkseagreen4, key=1, label=createEnumerableWrapper, style=dashed];
m0_188 -> m0_26  [key=2, style=dotted];
m0_188 -> m0_189  [key=0, style=solid];
m0_189 -> m0_26  [key=2, style=dotted];
m0_189 -> m0_190  [key=0, style=solid];
m0_176 -> m0_22  [key=2, style=dotted];
m0_176 -> m0_23  [key=2, style=dotted];
m0_176 -> m0_178  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_176 -> m0_180  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_176 -> m0_182  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_176 -> m0_184  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_176 -> m0_186  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_176 -> m0_188  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_176 -> m0_189  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_176 -> m0_191  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_176 -> m0_192  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_176 -> m0_177  [key=0, style=solid];
m0_176 -> m0_179  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_176 -> m0_181  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_176 -> m0_183  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_176 -> m0_185  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_176 -> m0_187  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_176 -> m0_190  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_177 -> m0_24  [key=2, style=dotted];
m0_177 -> m0_25  [key=2, style=dotted];
m0_177 -> m0_178  [key=0, style=solid];
m0_177 -> m0_196  [key=2, style=dotted];
m0_177 -> m0_197  [key=2, style=dotted];
m0_177 -> m0_181  [color=darkseagreen4, key=1, label=setExtensionDataDictionary, style=dashed];
m0_177 -> m0_206  [color=darkseagreen4, key=1, label=setExtensionDataDictionary, style=dashed];
m0_177 -> m0_209  [color=darkseagreen4, key=1, label=setExtensionDataDictionary, style=dashed];
m0_179 -> m0_24  [key=2, style=dotted];
m0_179 -> m0_25  [key=2, style=dotted];
m0_179 -> m0_180  [key=0, style=solid];
m0_179 -> m0_199  [key=2, style=dotted];
m0_181 -> m0_24  [key=2, style=dotted];
m0_181 -> m0_25  [key=2, style=dotted];
m0_181 -> m0_182  [key=0, style=solid];
m0_181 -> m0_204  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_181 -> m0_209  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_181 -> m0_210  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_181 -> m0_181  [color=darkorchid, key=3, label="Local variable Newtonsoft.Json.Serialization.ExtensionDataSetter extensionDataSetter", style=bold];
m0_183 -> m0_24  [key=2, style=dotted];
m0_183 -> m0_25  [key=2, style=dotted];
m0_183 -> m0_184  [key=0, style=solid];
m0_183 -> m0_189  [key=0, style=solid];
m0_185 -> m0_24  [key=2, style=dotted];
m0_185 -> m0_25  [key=2, style=dotted];
m0_185 -> m0_186  [key=0, style=solid];
m0_185 -> m0_201  [key=2, style=dotted];
m0_185 -> m0_202  [key=2, style=dotted];
m0_187 -> m0_24  [key=2, style=dotted];
m0_187 -> m0_25  [key=2, style=dotted];
m0_187 -> m0_188  [key=0, style=solid];
m0_187 -> m0_219  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_187 -> m0_71  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<object, object>> ", style=bold];
m0_187 -> m0_187  [color=darkorchid, key=3, label="Local variable Newtonsoft.Json.Serialization.ExtensionDataGetter extensionDataGetter", style=bold];
m0_190 -> m0_24  [key=2, style=dotted];
m0_190 -> m0_25  [key=2, style=dotted];
m0_190 -> m0_191  [key=0, style=solid];
m0_190 -> m0_115  [color=blue, key=0, style=bold];
m0_175 -> m0_176  [key=0, style=solid];
m0_175 -> m0_195  [key=2, style=dotted];
m0_175 -> m0_181  [color=darkseagreen4, key=1, label=getExtensionDataDictionary, style=dashed];
m0_175 -> m0_204  [color=darkseagreen4, key=1, label=getExtensionDataDictionary, style=dashed];
m0_175 -> m0_187  [color=darkseagreen4, key=1, label=getExtensionDataDictionary, style=dashed];
m0_175 -> m0_219  [color=darkseagreen4, key=1, label=getExtensionDataDictionary, style=dashed];
m0_193 -> m0_174  [color=blue, key=0, style=bold];
m0_481 -> m0_482  [key=0, style=solid];
m0_481 -> m0_106  [key=2, style=dotted];
m0_481 -> m0_484  [color=darkseagreen4, key=1, label=containerAttribute, style=dashed];
m0_481 -> m0_486  [color=darkseagreen4, key=1, label=containerAttribute, style=dashed];
m0_497 -> m0_26  [key=2, style=dotted];
m0_497 -> m0_498  [key=0, style=solid];
m0_497 -> m0_20  [color=blue, key=0, style=bold];
m0_492 -> m0_22  [key=2, style=dotted];
m0_492 -> m0_23  [key=2, style=dotted];
m0_492 -> m0_497  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_492 -> m0_493  [key=0, style=solid];
m0_492 -> m0_496  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_492 -> m0_499  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_492 -> m0_500  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_492 -> m0_494  [key=0, style=solid];
m0_492 -> m0_162  [key=2, style=dotted];
m0_493 -> m0_24  [key=2, style=dotted];
m0_493 -> m0_25  [key=2, style=dotted];
m0_493 -> m0_494  [key=0, style=solid];
m0_493 -> m0_497  [key=0, style=solid];
m0_493 -> m0_444  [key=2, style=dotted];
m0_496 -> m0_24  [key=2, style=dotted];
m0_496 -> m0_25  [key=2, style=dotted];
m0_496 -> m0_497  [key=0, style=solid];
m0_496 -> m0_64  [key=2, style=dotted];
m0_499 -> m0_24  [key=2, style=dotted];
m0_499 -> m0_25  [key=2, style=dotted];
m0_499 -> m0_500  [key=0, style=solid];
m0_500 -> m0_24  [key=2, style=dotted];
m0_500 -> m0_501  [key=0, style=solid];
m0_500 -> m0_28  [key=2, style=dotted];
m0_494 -> m0_497  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_494 -> m0_495  [key=0, style=solid];
m0_494 -> m0_498  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_494 -> m0_496  [key=0, style=solid];
m0_494 -> m0_502  [key=2, style=dotted];
m0_491 -> m0_492  [key=0, style=solid];
m0_491 -> m0_507  [key=2, style=dotted];
m0_491 -> m0_497  [key=0, style=solid];
m0_491 -> m0_419  [key=2, style=dotted];
m0_495 -> m0_496  [key=0, style=solid];
m0_495 -> m0_499  [key=0, style=solid];
m0_495 -> m0_497  [key=0, style=solid];
m0_495 -> m0_472  [key=2, style=dotted];
m0_483 -> m0_491  [color=darkseagreen4, key=1, label=sw, style=dashed];
m0_483 -> m0_484  [key=0, style=solid];
m0_483 -> m0_502  [key=2, style=dotted];
m0_483 -> m0_497  [key=0, style=solid];
m0_483 -> m0_64  [key=2, style=dotted];
m0_490 -> m0_491  [key=0, style=solid];
m0_490 -> m0_506  [key=2, style=dotted];
m0_490 -> m0_492  [key=0, style=solid];
m0_490 -> m0_501  [key=2, style=dotted];
m0_482 -> m0_495  [color=darkseagreen4, key=1, label=valueCount, style=dashed];
m0_482 -> m0_483  [key=0, style=solid];
m0_482 -> m0_487  [color=darkseagreen4, key=1, label=valueCount, style=dashed];
m0_482 -> m0_484  [key=0, style=solid];
m0_484 -> m0_490  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_484 -> m0_503  [key=2, style=dotted];
m0_484 -> m0_485  [key=0, style=solid];
m0_484 -> m0_488  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_484 -> m0_486  [key=0, style=solid];
m0_487 -> m0_490  [key=0, style=solid];
m0_487 -> m0_488  [key=0, style=solid];
m0_487 -> m0_497  [key=0, style=solid];
m0_487 -> m0_419  [key=2, style=dotted];
m0_485 -> m0_486  [key=0, style=solid];
m0_485 -> m0_504  [key=2, style=dotted];
m0_485 -> m0_497  [key=0, style=solid];
m0_485 -> m0_444  [key=2, style=dotted];
m0_488 -> m0_489  [key=0, style=solid];
m0_488 -> m0_505  [key=2, style=dotted];
m0_488 -> m0_490  [key=0, style=solid];
m0_488 -> m0_500  [key=2, style=dotted];
m0_486 -> m0_487  [key=0, style=solid];
m0_486 -> m0_488  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_486 -> m0_489  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_489 -> m0_487  [key=0, style=solid];
m0_489 -> m0_489  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_489 -> m0_497  [key=0, style=solid];
m0_489 -> m0_466  [key=2, style=dotted];
m0_1208 -> m0_1209  [key=0, style=solid];
m0_1209 -> m0_22  [key=2, style=dotted];
m0_1209 -> m0_23  [key=2, style=dotted];
m0_1209 -> m0_1210  [key=0, style=solid];
m0_1209 -> m0_1213  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1210 -> m0_1211  [key=0, style=solid];
m0_1210 -> m0_42  [key=2, style=dotted];
m0_1210 -> m0_1212  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_1211 -> m0_1208  [color=blue, key=0, style=bold];
m0_1187 -> m0_1188  [key=0, style=solid];
m0_1188 -> m0_22  [key=2, style=dotted];
m0_1188 -> m0_23  [key=2, style=dotted];
m0_1188 -> m0_1189  [key=0, style=solid];
m0_1188 -> m0_1192  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1189 -> m0_1190  [key=0, style=solid];
m0_1189 -> m0_42  [key=2, style=dotted];
m0_1189 -> m0_1191  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_1190 -> m0_1187  [color=blue, key=0, style=bold];
m0_1499 -> m0_1500  [key=0, style=solid];
m0_1503 -> m0_26  [key=2, style=dotted];
m0_1503 -> m0_1504  [key=0, style=solid];
m0_1505 -> m0_26  [key=2, style=dotted];
m0_1505 -> m0_1506  [key=0, style=solid];
m0_1507 -> m0_26  [key=2, style=dotted];
m0_1507 -> m0_1508  [key=0, style=solid];
m0_1509 -> m0_26  [key=2, style=dotted];
m0_1509 -> m0_1510  [key=0, style=solid];
m0_1511 -> m0_26  [key=2, style=dotted];
m0_1511 -> m0_1512  [key=0, style=solid];
m0_1513 -> m0_26  [key=2, style=dotted];
m0_1513 -> m0_1514  [key=0, style=solid];
m0_1515 -> m0_26  [key=2, style=dotted];
m0_1515 -> m0_1516  [key=0, style=solid];
m0_1501 -> m0_22  [key=2, style=dotted];
m0_1501 -> m0_23  [key=2, style=dotted];
m0_1501 -> m0_1503  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1501 -> m0_1505  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1501 -> m0_1507  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1501 -> m0_1509  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1501 -> m0_1511  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1501 -> m0_1513  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1501 -> m0_1515  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1501 -> m0_1502  [key=0, style=solid];
m0_1501 -> m0_1504  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1501 -> m0_1506  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1501 -> m0_1508  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1501 -> m0_1510  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1501 -> m0_1512  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1501 -> m0_1514  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1502 -> m0_24  [key=2, style=dotted];
m0_1502 -> m0_25  [key=2, style=dotted];
m0_1502 -> m0_1503  [key=0, style=solid];
m0_1504 -> m0_24  [key=2, style=dotted];
m0_1504 -> m0_25  [key=2, style=dotted];
m0_1504 -> m0_1505  [key=0, style=solid];
m0_1506 -> m0_24  [key=2, style=dotted];
m0_1506 -> m0_25  [key=2, style=dotted];
m0_1506 -> m0_1507  [key=0, style=solid];
m0_1508 -> m0_24  [key=2, style=dotted];
m0_1508 -> m0_25  [key=2, style=dotted];
m0_1508 -> m0_1509  [key=0, style=solid];
m0_1510 -> m0_24  [key=2, style=dotted];
m0_1510 -> m0_25  [key=2, style=dotted];
m0_1510 -> m0_1511  [key=0, style=solid];
m0_1512 -> m0_24  [key=2, style=dotted];
m0_1512 -> m0_25  [key=2, style=dotted];
m0_1512 -> m0_1513  [key=0, style=solid];
m0_1514 -> m0_24  [key=2, style=dotted];
m0_1514 -> m0_25  [key=2, style=dotted];
m0_1514 -> m0_1515  [key=0, style=solid];
m0_1500 -> m0_1501  [key=0, style=solid];
m0_1516 -> m0_1499  [color=blue, key=0, style=bold];
m0_155 -> m0_156  [key=0, style=solid];
m0_155 -> m0_24  [key=2, style=dotted];
m0_155 -> m0_25  [key=2, style=dotted];
m0_1571 -> m0_1572  [key=0, style=solid];
m0_1573 -> m0_22  [key=2, style=dotted];
m0_1573 -> m0_23  [key=2, style=dotted];
m0_1573 -> m0_1574  [key=0, style=solid];
m0_1573 -> m0_1575  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1573 -> m0_1576  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1573 -> m0_1577  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1574 -> m0_24  [key=2, style=dotted];
m0_1574 -> m0_25  [key=2, style=dotted];
m0_1574 -> m0_1575  [key=0, style=solid];
m0_1575 -> m0_24  [key=2, style=dotted];
m0_1575 -> m0_25  [key=2, style=dotted];
m0_1575 -> m0_1576  [key=0, style=solid];
m0_1576 -> m0_24  [key=2, style=dotted];
m0_1576 -> m0_25  [key=2, style=dotted];
m0_1576 -> m0_1577  [key=0, style=solid];
m0_1577 -> m0_24  [key=2, style=dotted];
m0_1577 -> m0_1578  [key=0, style=solid];
m0_1577 -> m0_28  [key=2, style=dotted];
m0_1572 -> m0_1573  [key=0, style=solid];
m0_1578 -> m0_1571  [color=blue, key=0, style=bold];
m0_556 -> m0_562  [color=darkseagreen4, key=1, label=total, style=dashed];
m0_556 -> m0_557  [key=0, style=solid];
m0_1180 -> m0_1181  [key=0, style=solid];
m0_1181 -> m0_22  [key=2, style=dotted];
m0_1181 -> m0_23  [key=2, style=dotted];
m0_1181 -> m0_1182  [key=0, style=solid];
m0_1181 -> m0_1185  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1182 -> m0_1183  [key=0, style=solid];
m0_1182 -> m0_42  [key=2, style=dotted];
m0_1182 -> m0_1184  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_1183 -> m0_1180  [color=blue, key=0, style=bold];
m0_202 -> m0_26  [key=2, style=dotted];
m0_202 -> m0_203  [key=0, style=solid];
m0_1783 -> m0_1784  [key=0, style=solid];
m0_1787 -> m0_26  [key=2, style=dotted];
m0_1787 -> m0_1788  [key=0, style=solid];
m0_1788 -> m0_26  [key=2, style=dotted];
m0_1788 -> m0_1789  [key=0, style=solid];
m0_1785 -> m0_22  [key=2, style=dotted];
m0_1785 -> m0_23  [key=2, style=dotted];
m0_1785 -> m0_1787  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1785 -> m0_1788  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1785 -> m0_1786  [key=0, style=solid];
m0_1786 -> m0_1787  [key=0, style=solid];
m0_1786 -> m0_117  [key=2, style=dotted];
m0_1784 -> m0_1785  [key=0, style=solid];
m0_1789 -> m0_1783  [color=blue, key=0, style=bold];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_26  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_23 -> m0_27  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_23 -> m0_30  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_23 -> m0_28  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.List<System.Reflection.MemberInfo> GetSerializableMembers", style=bold];
m0_23 -> m0_104  [color=darkorchid, key=3, label="Parameter variable System.Type objectType", style=bold];
m0_24 -> m0_25  [key=0, style=solid];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_47  [key=2, style=dotted];
m0_26 -> m0_29  [color=darkseagreen4, key=1, label=memberSerialization, style=dashed];
m0_26 -> m0_39  [color=darkseagreen4, key=1, label=memberSerialization, style=dashed];
m0_46 -> m0_23  [color=blue, key=0, style=bold];
m0_19 -> m0_20  [key=0, style=solid];
m0_196 -> m0_22  [key=2, style=dotted];
m0_196 -> m0_23  [key=2, style=dotted];
m0_196 -> m0_200  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_196 -> m0_197  [key=0, style=solid];
m0_196 -> m0_198  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_196 -> m0_199  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_196 -> m0_201  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_198 -> m0_24  [key=2, style=dotted];
m0_198 -> m0_25  [key=2, style=dotted];
m0_198 -> m0_199  [key=0, style=solid];
m0_201 -> m0_202  [key=0, style=solid];
m0_201 -> m0_206  [key=2, style=dotted];
m0_201 -> m0_203  [color=darkseagreen4, key=1, label=s, style=dashed];
m0_1579 -> m0_1580  [key=0, style=solid];
m0_1583 -> m0_26  [key=2, style=dotted];
m0_1583 -> m0_1584  [key=0, style=solid];
m0_1585 -> m0_26  [key=2, style=dotted];
m0_1585 -> m0_1586  [key=0, style=solid];
m0_1581 -> m0_22  [key=2, style=dotted];
m0_1581 -> m0_23  [key=2, style=dotted];
m0_1581 -> m0_1583  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1581 -> m0_1585  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1581 -> m0_1582  [key=0, style=solid];
m0_1581 -> m0_1584  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1582 -> m0_24  [key=2, style=dotted];
m0_1582 -> m0_25  [key=2, style=dotted];
m0_1582 -> m0_1583  [key=0, style=solid];
m0_1584 -> m0_24  [key=2, style=dotted];
m0_1584 -> m0_25  [key=2, style=dotted];
m0_1584 -> m0_1585  [key=0, style=solid];
m0_1580 -> m0_1581  [key=0, style=solid];
m0_1586 -> m0_1579  [color=blue, key=0, style=bold];
m0_87 -> m0_88  [key=0, style=solid];
m0_87 -> m0_92  [key=0, style=solid];
m0_156 -> m0_26  [key=2, style=dotted];
m0_156 -> m0_157  [key=0, style=solid];
m0_156 -> m0_162  [key=2, style=dotted];
m0_1107 -> m0_1108  [key=0, style=solid];
m0_1111 -> m0_26  [key=2, style=dotted];
m0_1111 -> m0_1112  [key=0, style=solid];
m0_1113 -> m0_26  [key=2, style=dotted];
m0_1113 -> m0_1114  [key=0, style=solid];
m0_1114 -> m0_26  [key=2, style=dotted];
m0_1114 -> m0_1115  [key=0, style=solid];
m0_1115 -> m0_26  [key=2, style=dotted];
m0_1115 -> m0_1116  [key=0, style=solid];
m0_1117 -> m0_26  [key=2, style=dotted];
m0_1117 -> m0_1118  [key=0, style=solid];
m0_1118 -> m0_26  [key=2, style=dotted];
m0_1118 -> m0_1119  [key=0, style=solid];
m0_1119 -> m0_26  [key=2, style=dotted];
m0_1119 -> m0_1120  [key=0, style=solid];
m0_1121 -> m0_26  [key=2, style=dotted];
m0_1121 -> m0_1122  [key=0, style=solid];
m0_1122 -> m0_26  [key=2, style=dotted];
m0_1122 -> m0_1123  [key=0, style=solid];
m0_1123 -> m0_26  [key=2, style=dotted];
m0_1123 -> m0_1124  [key=0, style=solid];
m0_1125 -> m0_26  [key=2, style=dotted];
m0_1125 -> m0_1126  [key=0, style=solid];
m0_1109 -> m0_22  [key=2, style=dotted];
m0_1109 -> m0_1111  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1109 -> m0_1113  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1109 -> m0_1114  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1109 -> m0_1115  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1109 -> m0_1117  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1109 -> m0_1118  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1109 -> m0_1119  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1109 -> m0_1121  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1109 -> m0_1122  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1109 -> m0_1123  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1109 -> m0_1125  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1109 -> m0_1110  [key=0, style=solid];
m0_1109 -> m0_1112  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1109 -> m0_1116  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1109 -> m0_1120  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1109 -> m0_1124  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1109 -> m0_1126  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m0_1108 -> m0_23  [key=2, style=dotted];
m0_1108 -> m0_1109  [key=0, style=solid];
m0_1110 -> m0_24  [key=2, style=dotted];
m0_1110 -> m0_25  [key=2, style=dotted];
m0_1110 -> m0_1111  [key=0, style=solid];
m0_1112 -> m0_24  [key=2, style=dotted];
m0_1112 -> m0_1113  [key=0, style=solid];
m0_1116 -> m0_24  [key=2, style=dotted];
m0_1116 -> m0_1117  [key=0, style=solid];
m0_1120 -> m0_24  [key=2, style=dotted];
m0_1120 -> m0_1121  [key=0, style=solid];
m0_1124 -> m0_24  [key=2, style=dotted];
m0_1124 -> m0_25  [key=2, style=dotted];
m0_1124 -> m0_1125  [key=0, style=solid];
m0_1126 -> m0_24  [key=2, style=dotted];
m0_1126 -> m0_1127  [key=0, style=solid];
m0_1126 -> m0_28  [key=2, style=dotted];
m0_1127 -> m0_1107  [color=blue, key=0, style=bold];
m0_160 -> m0_26  [key=2, style=dotted];
m0_160 -> m0_161  [key=0, style=solid];
m0_1555 -> m0_1556  [key=0, style=solid];
m0_1557 -> m0_22  [key=2, style=dotted];
m0_1557 -> m0_23  [key=2, style=dotted];
m0_1557 -> m0_1558  [key=0, style=solid];
m0_1557 -> m0_1561  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1556 -> m0_1557  [key=0, style=solid];
m0_1558 -> m0_1559  [key=0, style=solid];
m0_1558 -> m0_42  [key=2, style=dotted];
m0_1558 -> m0_1560  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_1559 -> m0_1555  [color=blue, key=0, style=bold];
m0_163 -> m0_164  [key=0, style=solid];
m0_163 -> m0_191  [key=2, style=dotted];
m0_163 -> m0_176  [color=darkseagreen4, key=1, label=extensionDataAttribute, style=dashed];
m0_163 -> m0_183  [color=darkseagreen4, key=1, label=extensionDataAttribute, style=dashed];
m0_168 -> m0_26  [key=2, style=dotted];
m0_168 -> m0_169  [key=0, style=solid];
m0_168 -> m0_160  [key=2, style=dotted];
m0_168 -> m0_170  [color=darkseagreen4, key=1, label=dictionaryType, style=dashed];
m0_165 -> m0_22  [key=2, style=dotted];
m0_165 -> m0_23  [key=2, style=dotted];
m0_165 -> m0_168  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_165 -> m0_166  [key=0, style=solid];
m0_165 -> m0_167  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_165 -> m0_169  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_165 -> m0_172  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_165 -> m0_190  [key=0, style=solid];
m0_167 -> m0_24  [key=2, style=dotted];
m0_167 -> m0_25  [key=2, style=dotted];
m0_167 -> m0_168  [key=0, style=solid];
m0_169 -> m0_170  [key=0, style=solid];
m0_169 -> m0_42  [key=2, style=dotted];
m0_169 -> m0_171  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_169 -> m0_161  [key=2, style=dotted];
m0_169 -> m0_173  [color=darkseagreen4, key=1, label=keyType, style=dashed];
m0_169 -> m0_179  [color=darkseagreen4, key=1, label=keyType, style=dashed];
m0_169 -> m0_184  [color=darkseagreen4, key=1, label=keyType, style=dashed];
m0_164 -> m0_165  [key=0, style=solid];
m0_164 -> m0_166  [key=0, style=solid];
m0_166 -> m0_167  [key=0, style=solid];
m0_166 -> m0_192  [key=2, style=dotted];
m0_166 -> m0_168  [color=darkseagreen4, key=1, label=t, style=dashed];
m0_166 -> m0_172  [color=darkseagreen4, key=1, label=t, style=dashed];
m0_166 -> m0_174  [color=darkseagreen4, key=1, label=t, style=dashed];
m0_166 -> m0_179  [color=darkseagreen4, key=1, label=t, style=dashed];
m0_170 -> m0_163  [color=blue, key=0, style=bold];
m0_170 -> m0_171  [key=0, style=solid];
m0_170 -> m0_161  [key=2, style=dotted];
m0_170 -> m0_173  [color=darkseagreen4, key=1, label=valueType, style=dashed];
m0_170 -> m0_179  [color=darkseagreen4, key=1, label=valueType, style=dashed];
m0_170 -> m0_184  [color=darkseagreen4, key=1, label=valueType, style=dashed];
m0_170 -> m0_189  [color=darkseagreen4, key=1, label=valueType, style=dashed];
m0_685 -> m0_26  [key=2, style=dotted];
m0_685 -> m0_686  [key=0, style=solid];
m0_685 -> m0_687  [key=0, style=solid];
m0_685 -> m0_657  [key=2, style=dotted];
m0_684 -> m0_26  [key=2, style=dotted];
m0_684 -> m0_685  [key=0, style=solid];
m0_684 -> m0_686  [key=0, style=solid];
m0_687 -> m0_26  [key=2, style=dotted];
m0_687 -> m0_688  [key=0, style=solid];
m0_687 -> m0_658  [color=blue, key=0, style=bold];
m0_702 -> m0_26  [key=2, style=dotted];
m0_702 -> m0_703  [key=0, style=solid];
m0_702 -> m0_1  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m0_702 -> m0_7  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m0_702 -> m0_9  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m0_702 -> m0_10  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m0_702 -> m0_11  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m0_702 -> m0_14  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m0_702 -> m0_30  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m0_702 -> m0_32  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m0_702 -> m0_66  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m0_702 -> m0_70  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m0_702 -> m0_79  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m0_702 -> m0_82  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m0_702 -> m0_85  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m0_702 -> m0_88  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m0_702 -> m0_91  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m0_702 -> m0_93  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m0_702 -> m0_96  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m0_702 -> m0_97  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m0_702 -> m0_120  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m0_702 -> m0_121  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m0_702 -> m0_143  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m0_702 -> m0_151  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m0_702 -> m0_263  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m0_702 -> m0_279  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m0_702 -> m0_281  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m0_702 -> m0_301  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m0_702 -> m0_332  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m0_702 -> m0_335  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m0_702 -> m0_337  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m0_702 -> m0_348  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m0_702 -> m0_366  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m0_702 -> m0_421  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m0_702 -> m0_426  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m0_702 -> m0_427  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m0_702 -> m0_446  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m0_702 -> m0_447  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m0_702 -> m0_462  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m0_702 -> m0_468  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m0_702 -> m0_474  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m0_702 -> m0_479  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m0_702 -> m0_483  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m0_702 -> m0_485  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m0_702 -> m0_487  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m0_702 -> m0_489  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m0_702 -> m0_491  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m0_702 -> m0_493  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m0_702 -> m0_495  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m0_702 -> m0_496  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m0_702 -> m0_538  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m0_702 -> m0_541  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m0_702 -> m0_544  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m0_702 -> m0_560  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m0_702 -> m0_564  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m0_702 -> m0_574  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m0_702 -> m0_577  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m0_702 -> m0_583  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m0_702 -> m0_584  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m0_702 -> m0_605  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m0_702 -> m0_608  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m0_702 -> m0_649  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m0_702 -> m0_684  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m0_702 -> m0_685  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m0_702 -> m0_689  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m0_702 -> m0_690  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m0_702 -> m0_695  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m0_702 -> m0_696  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m0_702 -> m0_697  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m0_702 -> m0_700  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m0_704 -> m0_26  [key=2, style=dotted];
m0_704 -> m0_705  [key=0, style=solid];
m0_704 -> m0_204  [color=darkseagreen4, key=1, label=getExtensionDataDictionary, style=dashed];
m0_704 -> m0_219  [color=darkseagreen4, key=1, label=getExtensionDataDictionary, style=dashed];
m0_706 -> m0_26  [key=2, style=dotted];
m0_706 -> m0_707  [key=0, style=solid];
m0_706 -> m0_207  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m0_708 -> m0_26  [key=2, style=dotted];
m0_708 -> m0_709  [key=0, style=solid];
m0_708 -> m0_210  [color=darkseagreen4, key=1, label=setExtensionDataDictionaryValue, style=dashed];
m0_709 -> m0_26  [key=2, style=dotted];
m0_709 -> m0_710  [key=0, style=solid];
m0_709 -> m0_222  [color=darkseagreen4, key=1, label=createEnumerableWrapper, style=dashed];
m0_711 -> m0_26  [key=2, style=dotted];
m0_711 -> m0_712  [key=0, style=solid];
m0_711 -> m0_442  [color=darkseagreen4, key=1, label=namingStrategy, style=dashed];
m0_713 -> m0_26  [key=2, style=dotted];
m0_713 -> m0_714  [key=0, style=solid];
m0_713 -> m0_682  [color=darkseagreen4, key=1, label=specifiedPropertyGet, style=dashed];
m0_715 -> m0_26  [key=2, style=dotted];
m0_715 -> m0_716  [key=0, style=solid];
m0_686 -> m0_24  [key=2, style=dotted];
m0_686 -> m0_25  [key=2, style=dotted];
m0_686 -> m0_687  [key=0, style=solid];
m0_703 -> m0_24  [key=2, style=dotted];
m0_703 -> m0_25  [key=2, style=dotted];
m0_703 -> m0_704  [key=0, style=solid];
m0_703 -> m0_117  [color=darkseagreen4, key=1, label=namingStrategy, style=dashed];
m0_705 -> m0_24  [key=2, style=dotted];
m0_705 -> m0_25  [key=2, style=dotted];
m0_705 -> m0_706  [key=0, style=solid];
m0_705 -> m0_206  [color=darkseagreen4, key=1, label=setExtensionDataDictionary, style=dashed];
m0_705 -> m0_209  [color=darkseagreen4, key=1, label=setExtensionDataDictionary, style=dashed];
m0_707 -> m0_24  [key=2, style=dotted];
m0_707 -> m0_25  [key=2, style=dotted];
m0_707 -> m0_708  [key=0, style=solid];
m0_707 -> m0_208  [color=darkseagreen4, key=1, label=createExtensionDataDictionary, style=dashed];
m0_710 -> m0_24  [key=2, style=dotted];
m0_710 -> m0_25  [key=2, style=dotted];
m0_710 -> m0_711  [key=0, style=solid];
m0_710 -> m0_227  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>", style=dashed];
m0_710 -> m0_231  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>", style=dashed];
m0_710 -> m0_236  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>", style=dashed];
m0_712 -> m0_24  [key=2, style=dotted];
m0_712 -> m0_25  [key=2, style=dotted];
m0_712 -> m0_713  [key=0, style=solid];
m0_712 -> m0_667  [color=darkseagreen4, key=1, label=shouldSerializeCall, style=dashed];
m0_714 -> m0_24  [key=2, style=dotted];
m0_714 -> m0_25  [key=2, style=dotted];
m0_714 -> m0_715  [key=0, style=solid];
m0_716 -> m0_673  [color=blue, key=0, style=bold];
m0_2031 -> m0_2068  [key=0, style=solid];
m0_2068 -> m0_2069  [key=0, style=solid];
m0_2069 -> m0_2031  [color=blue, key=0, style=bold];
m0_588 -> m0_589  [key=0, style=solid];
m0_588 -> m0_660  [key=0, style=solid];
m0_588 -> m0_553  [color=darkorchid, key=3, label="Parameter variable System.Reflection.MemberInfo member", style=bold];
m0_588 -> m0_71  [color=darkorchid, key=3, label="method methodReturn System.Predicate<object> CreateShouldSerializeTest", style=bold];
m0_588 -> m0_664  [color=darkorchid, key=3, label="method methodReturn System.Predicate<object> CreateShouldSerializeTest", style=bold];
m0_587 -> m0_588  [key=0, style=solid];
m0_587 -> m0_593  [key=0, style=solid];
m0_1775 -> m0_1776  [key=0, style=solid];
m0_1777 -> m0_22  [key=2, style=dotted];
m0_1777 -> m0_1778  [key=0, style=solid];
m0_1777 -> m0_231  [key=2, style=dotted];
m0_1777 -> m0_271  [key=2, style=dotted];
m0_1777 -> m0_272  [key=2, style=dotted];
m0_1777 -> m0_1781  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1776 -> m0_1777  [key=0, style=solid];
m0_1778 -> m0_1779  [key=0, style=solid];
m0_1778 -> m0_42  [key=2, style=dotted];
m0_1778 -> m0_1780  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_1779 -> m0_1775  [color=blue, key=0, style=bold];
m0_1149 -> m0_1150  [key=0, style=solid];
m0_1150 -> m0_22  [key=2, style=dotted];
m0_1150 -> m0_23  [key=2, style=dotted];
m0_1150 -> m0_1151  [key=0, style=solid];
m0_1150 -> m0_1152  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1150 -> m0_1155  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1151 -> m0_24  [key=2, style=dotted];
m0_1151 -> m0_1152  [key=0, style=solid];
m0_1152 -> m0_1153  [key=0, style=solid];
m0_1152 -> m0_42  [key=2, style=dotted];
m0_1152 -> m0_1154  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_1153 -> m0_1149  [color=blue, key=0, style=bold];
m0_1323 -> m0_1324  [key=0, style=solid];
m0_1327 -> m0_26  [key=2, style=dotted];
m0_1327 -> m0_1328  [key=0, style=solid];
m0_1329 -> m0_26  [key=2, style=dotted];
m0_1329 -> m0_1330  [key=0, style=solid];
m0_1331 -> m0_26  [key=2, style=dotted];
m0_1331 -> m0_1332  [key=0, style=solid];
m0_1332 -> m0_26  [key=2, style=dotted];
m0_1332 -> m0_1333  [key=0, style=solid];
m0_1333 -> m0_26  [key=2, style=dotted];
m0_1333 -> m0_1334  [key=0, style=solid];
m0_1333 -> m0_1264  [key=2, style=dotted];
m0_1333 -> m0_1337  [key=2, style=dotted];
m0_1335 -> m0_26  [key=2, style=dotted];
m0_1335 -> m0_1336  [key=0, style=solid];
m0_1325 -> m0_22  [key=2, style=dotted];
m0_1325 -> m0_23  [key=2, style=dotted];
m0_1325 -> m0_1327  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1325 -> m0_1329  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1325 -> m0_1331  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1325 -> m0_1332  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1325 -> m0_1333  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1325 -> m0_1335  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1325 -> m0_1326  [key=0, style=solid];
m0_1325 -> m0_1328  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1325 -> m0_1330  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1325 -> m0_1334  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1326 -> m0_24  [key=2, style=dotted];
m0_1326 -> m0_25  [key=2, style=dotted];
m0_1326 -> m0_1327  [key=0, style=solid];
m0_1328 -> m0_24  [key=2, style=dotted];
m0_1328 -> m0_25  [key=2, style=dotted];
m0_1328 -> m0_1329  [key=0, style=solid];
m0_1334 -> m0_24  [key=2, style=dotted];
m0_1334 -> m0_25  [key=2, style=dotted];
m0_1334 -> m0_1335  [key=0, style=solid];
m0_1330 -> m0_1331  [key=0, style=solid];
m0_1330 -> m0_1179  [key=2, style=dotted];
m0_1324 -> m0_1325  [key=0, style=solid];
m0_1336 -> m0_1323  [color=blue, key=0, style=bold];
m0_399 -> m0_407  [key=0, style=solid];
m0_399 -> m0_366  [color=darkorchid, key=3, label="Parameter variable System.Type t", style=bold];
m0_399 -> m0_121  [color=darkorchid, key=3, label="method methodReturn bool ShouldSkipSerializing", style=bold];
m0_399 -> m0_26  [key=2, style=dotted];
m0_399 -> m0_400  [key=0, style=solid];
m0_407 -> m0_408  [key=0, style=solid];
m0_407 -> m0_26  [key=2, style=dotted];
m0_408 -> m0_399  [color=blue, key=0, style=bold];
m0_408 -> m0_26  [key=2, style=dotted];
m0_408 -> m0_409  [key=0, style=solid];
m0_1267 -> m0_1268  [key=0, style=solid];
m0_1271 -> m0_26  [key=2, style=dotted];
m0_1271 -> m0_1272  [key=0, style=solid];
m0_1273 -> m0_26  [key=2, style=dotted];
m0_1273 -> m0_1274  [key=0, style=solid];
m0_1275 -> m0_26  [key=2, style=dotted];
m0_1275 -> m0_1276  [key=0, style=solid];
m0_1276 -> m0_26  [key=2, style=dotted];
m0_1276 -> m0_1277  [key=0, style=solid];
m0_1277 -> m0_26  [key=2, style=dotted];
m0_1277 -> m0_1278  [key=0, style=solid];
m0_1277 -> m0_1264  [key=2, style=dotted];
m0_1277 -> m0_1265  [key=2, style=dotted];
m0_1277 -> m0_1266  [key=2, style=dotted];
m0_1279 -> m0_26  [key=2, style=dotted];
m0_1279 -> m0_1280  [key=0, style=solid];
m0_1269 -> m0_22  [key=2, style=dotted];
m0_1269 -> m0_23  [key=2, style=dotted];
m0_1269 -> m0_1271  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1269 -> m0_1273  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1269 -> m0_1275  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1269 -> m0_1276  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1269 -> m0_1277  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1269 -> m0_1279  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1269 -> m0_1270  [key=0, style=solid];
m0_1269 -> m0_1272  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1269 -> m0_1274  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1269 -> m0_1278  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1270 -> m0_24  [key=2, style=dotted];
m0_1270 -> m0_25  [key=2, style=dotted];
m0_1270 -> m0_1271  [key=0, style=solid];
m0_1272 -> m0_24  [key=2, style=dotted];
m0_1272 -> m0_25  [key=2, style=dotted];
m0_1272 -> m0_1273  [key=0, style=solid];
m0_1278 -> m0_24  [key=2, style=dotted];
m0_1278 -> m0_25  [key=2, style=dotted];
m0_1278 -> m0_1279  [key=0, style=solid];
m0_1274 -> m0_1275  [key=0, style=solid];
m0_1274 -> m0_1179  [key=2, style=dotted];
m0_1268 -> m0_1269  [key=0, style=solid];
m0_1280 -> m0_1267  [color=blue, key=0, style=bold];
m0_1913 -> m0_1914  [key=0, style=solid];
m0_1918 -> m0_26  [key=2, style=dotted];
m0_1918 -> m0_1919  [key=0, style=solid];
m0_1920 -> m0_26  [key=2, style=dotted];
m0_1920 -> m0_1921  [key=0, style=solid];
m0_1921 -> m0_26  [key=2, style=dotted];
m0_1921 -> m0_1922  [key=0, style=solid];
m0_1923 -> m0_26  [key=2, style=dotted];
m0_1923 -> m0_1924  [key=0, style=solid];
m0_1924 -> m0_26  [key=2, style=dotted];
m0_1924 -> m0_1925  [key=0, style=solid];
m0_1926 -> m0_26  [key=2, style=dotted];
m0_1926 -> m0_1927  [key=0, style=solid];
m0_1927 -> m0_26  [key=2, style=dotted];
m0_1927 -> m0_1928  [key=0, style=solid];
m0_1929 -> m0_26  [key=2, style=dotted];
m0_1929 -> m0_1930  [key=0, style=solid];
m0_1930 -> m0_26  [key=2, style=dotted];
m0_1930 -> m0_1931  [key=0, style=solid];
m0_1932 -> m0_26  [key=2, style=dotted];
m0_1932 -> m0_1933  [key=0, style=solid];
m0_1933 -> m0_26  [key=2, style=dotted];
m0_1933 -> m0_1934  [key=0, style=solid];
m0_1935 -> m0_26  [key=2, style=dotted];
m0_1935 -> m0_1936  [key=0, style=solid];
m0_1936 -> m0_26  [key=2, style=dotted];
m0_1936 -> m0_1937  [key=0, style=solid];
m0_1938 -> m0_26  [key=2, style=dotted];
m0_1938 -> m0_1939  [key=0, style=solid];
m0_1939 -> m0_26  [key=2, style=dotted];
m0_1939 -> m0_1940  [key=0, style=solid];
m0_1941 -> m0_26  [key=2, style=dotted];
m0_1941 -> m0_1942  [key=0, style=solid];
m0_1942 -> m0_26  [key=2, style=dotted];
m0_1942 -> m0_1943  [key=0, style=solid];
m0_1944 -> m0_26  [key=2, style=dotted];
m0_1944 -> m0_1945  [key=0, style=solid];
m0_1945 -> m0_26  [key=2, style=dotted];
m0_1945 -> m0_1946  [key=0, style=solid];
m0_1947 -> m0_26  [key=2, style=dotted];
m0_1947 -> m0_1948  [key=0, style=solid];
m0_1948 -> m0_26  [key=2, style=dotted];
m0_1948 -> m0_1949  [key=0, style=solid];
m0_1950 -> m0_26  [key=2, style=dotted];
m0_1950 -> m0_1951  [key=0, style=solid];
m0_1951 -> m0_26  [key=2, style=dotted];
m0_1951 -> m0_1952  [key=0, style=solid];
m0_1915 -> m0_22  [key=2, style=dotted];
m0_1915 -> m0_1918  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1915 -> m0_1920  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1915 -> m0_1921  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1915 -> m0_1923  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1915 -> m0_1924  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1915 -> m0_1926  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1915 -> m0_1927  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1915 -> m0_1929  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1915 -> m0_1930  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1915 -> m0_1932  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1915 -> m0_1933  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1915 -> m0_1935  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1915 -> m0_1936  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1915 -> m0_1938  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1915 -> m0_1939  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1915 -> m0_1941  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1915 -> m0_1942  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1915 -> m0_1944  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1915 -> m0_1945  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1915 -> m0_1947  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1915 -> m0_1948  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1915 -> m0_1950  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1915 -> m0_1951  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1915 -> m0_1916  [key=0, style=solid];
m0_1915 -> m0_231  [key=2, style=dotted];
m0_1915 -> m0_271  [key=2, style=dotted];
m0_1915 -> m0_272  [key=2, style=dotted];
m0_1915 -> m0_1917  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1915 -> m0_1919  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1915 -> m0_1922  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1915 -> m0_1925  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1915 -> m0_1928  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1915 -> m0_1931  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1915 -> m0_1934  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1915 -> m0_1937  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1915 -> m0_1940  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1915 -> m0_1943  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1915 -> m0_1946  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1915 -> m0_1949  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1915 -> m0_1952  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1916 -> m0_24  [key=2, style=dotted];
m0_1916 -> m0_25  [key=2, style=dotted];
m0_1916 -> m0_1917  [key=0, style=solid];
m0_1917 -> m0_24  [key=2, style=dotted];
m0_1917 -> m0_25  [key=2, style=dotted];
m0_1917 -> m0_1918  [key=0, style=solid];
m0_1919 -> m0_24  [key=2, style=dotted];
m0_1919 -> m0_25  [key=2, style=dotted];
m0_1919 -> m0_1920  [key=0, style=solid];
m0_1922 -> m0_24  [key=2, style=dotted];
m0_1922 -> m0_25  [key=2, style=dotted];
m0_1922 -> m0_1923  [key=0, style=solid];
m0_1925 -> m0_24  [key=2, style=dotted];
m0_1925 -> m0_25  [key=2, style=dotted];
m0_1925 -> m0_1926  [key=0, style=solid];
m0_1928 -> m0_24  [key=2, style=dotted];
m0_1928 -> m0_25  [key=2, style=dotted];
m0_1928 -> m0_1929  [key=0, style=solid];
m0_1931 -> m0_24  [key=2, style=dotted];
m0_1931 -> m0_25  [key=2, style=dotted];
m0_1931 -> m0_1932  [key=0, style=solid];
m0_1934 -> m0_24  [key=2, style=dotted];
m0_1934 -> m0_25  [key=2, style=dotted];
m0_1934 -> m0_1935  [key=0, style=solid];
m0_1937 -> m0_24  [key=2, style=dotted];
m0_1937 -> m0_25  [key=2, style=dotted];
m0_1937 -> m0_1938  [key=0, style=solid];
m0_1940 -> m0_24  [key=2, style=dotted];
m0_1940 -> m0_25  [key=2, style=dotted];
m0_1940 -> m0_1941  [key=0, style=solid];
m0_1943 -> m0_24  [key=2, style=dotted];
m0_1943 -> m0_25  [key=2, style=dotted];
m0_1943 -> m0_1944  [key=0, style=solid];
m0_1946 -> m0_24  [key=2, style=dotted];
m0_1946 -> m0_25  [key=2, style=dotted];
m0_1946 -> m0_1947  [key=0, style=solid];
m0_1949 -> m0_24  [key=2, style=dotted];
m0_1949 -> m0_25  [key=2, style=dotted];
m0_1949 -> m0_1950  [key=0, style=solid];
m0_1952 -> m0_24  [key=2, style=dotted];
m0_1952 -> m0_25  [key=2, style=dotted];
m0_1952 -> m0_1953  [key=0, style=solid];
m0_1914 -> m0_1915  [key=0, style=solid];
m0_1953 -> m0_1913  [color=blue, key=0, style=bold];
m0_1402 -> m0_1403  [key=0, style=solid];
m0_1403 -> m0_22  [key=2, style=dotted];
m0_1403 -> m0_23  [key=2, style=dotted];
m0_1403 -> m0_1404  [key=0, style=solid];
m0_1403 -> m0_1407  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1404 -> m0_1405  [key=0, style=solid];
m0_1404 -> m0_42  [key=2, style=dotted];
m0_1404 -> m0_1406  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_1405 -> m0_1402  [color=blue, key=0, style=bold];
m0_664 -> m0_665  [key=0, style=solid];
m0_664 -> m0_667  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_20 -> m0_26  [key=2, style=dotted];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_27  [key=2, style=dotted];
m0_20 -> m0_478  [key=0, style=solid];
m0_20 -> m0_479  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_20 -> m0_480  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_20 -> m0_483  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_20 -> m0_485  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_20 -> m0_487  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_20 -> m0_489  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_20 -> m0_491  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_20 -> m0_493  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_20 -> m0_495  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_20 -> m0_496  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_20 -> m0_3  [color=darkorchid, key=3, label="Parameter variable System.Type objectType", style=bold];
m0_20 -> m0_460  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Serialization.JsonContract CreateContract", style=bold];
m0_20 -> m0_64  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Serialization.JsonContract CreateContract", style=bold];
m0_20 -> m0_444  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Serialization.JsonContract CreateContract", style=bold];
m0_20 -> m0_419  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Serialization.JsonContract CreateContract", style=bold];
m0_20 -> m0_466  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Serialization.JsonContract CreateContract", style=bold];
m0_20 -> m0_472  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Serialization.JsonContract CreateContract", style=bold];
m0_21 -> m0_0  [color=blue, key=0, style=bold];
m0_1167 -> m0_1168  [key=0, style=solid];
m0_1168 -> m0_22  [key=2, style=dotted];
m0_1168 -> m0_23  [key=2, style=dotted];
m0_1168 -> m0_1169  [key=0, style=solid];
m0_1168 -> m0_1172  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1169 -> m0_1170  [key=0, style=solid];
m0_1169 -> m0_42  [key=2, style=dotted];
m0_1169 -> m0_1171  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_1170 -> m0_1167  [color=blue, key=0, style=bold];
m0_974 -> m0_975  [key=0, style=solid];
m0_979 -> m0_26  [key=2, style=dotted];
m0_979 -> m0_980  [key=0, style=solid];
m0_981 -> m0_26  [key=2, style=dotted];
m0_981 -> m0_982  [key=0, style=solid];
m0_982 -> m0_26  [key=2, style=dotted];
m0_982 -> m0_983  [key=0, style=solid];
m0_983 -> m0_26  [key=2, style=dotted];
m0_983 -> m0_984  [key=0, style=solid];
m0_983 -> m0_206  [key=2, style=dotted];
m0_985 -> m0_26  [key=2, style=dotted];
m0_985 -> m0_986  [key=0, style=solid];
m0_987 -> m0_26  [key=2, style=dotted];
m0_987 -> m0_988  [key=0, style=solid];
m0_977 -> m0_22  [key=2, style=dotted];
m0_977 -> m0_23  [key=2, style=dotted];
m0_977 -> m0_979  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_977 -> m0_981  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_977 -> m0_982  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_977 -> m0_983  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_977 -> m0_985  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_977 -> m0_987  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_977 -> m0_978  [key=0, style=solid];
m0_977 -> m0_980  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_977 -> m0_984  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_977 -> m0_986  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_978 -> m0_24  [key=2, style=dotted];
m0_978 -> m0_979  [key=0, style=solid];
m0_980 -> m0_24  [key=2, style=dotted];
m0_980 -> m0_981  [key=0, style=solid];
m0_984 -> m0_24  [key=2, style=dotted];
m0_984 -> m0_25  [key=2, style=dotted];
m0_984 -> m0_985  [key=0, style=solid];
m0_986 -> m0_24  [key=2, style=dotted];
m0_986 -> m0_987  [key=0, style=solid];
m0_986 -> m0_28  [key=2, style=dotted];
m0_976 -> m0_977  [key=0, style=solid];
m0_976 -> m0_480  [key=2, style=dotted];
m0_975 -> m0_976  [key=0, style=solid];
m0_988 -> m0_974  [color=blue, key=0, style=bold];
m0_1602 -> m0_1603  [key=0, style=solid];
m0_1606 -> m0_26  [key=2, style=dotted];
m0_1606 -> m0_1607  [key=0, style=solid];
m0_1608 -> m0_26  [key=2, style=dotted];
m0_1608 -> m0_1609  [key=0, style=solid];
m0_1604 -> m0_22  [key=2, style=dotted];
m0_1604 -> m0_23  [key=2, style=dotted];
m0_1604 -> m0_1606  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1604 -> m0_1608  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1604 -> m0_1605  [key=0, style=solid];
m0_1604 -> m0_1607  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1605 -> m0_24  [key=2, style=dotted];
m0_1605 -> m0_25  [key=2, style=dotted];
m0_1605 -> m0_1606  [key=0, style=solid];
m0_1607 -> m0_24  [key=2, style=dotted];
m0_1607 -> m0_25  [key=2, style=dotted];
m0_1607 -> m0_1608  [key=0, style=solid];
m0_1603 -> m0_1604  [key=0, style=solid];
m0_1609 -> m0_1602  [color=blue, key=0, style=bold];
m0_838 -> m0_839  [key=0, style=solid];
m0_841 -> m0_26  [key=2, style=dotted];
m0_841 -> m0_842  [key=0, style=solid];
m0_841 -> m0_117  [key=2, style=dotted];
m0_843 -> m0_26  [key=2, style=dotted];
m0_843 -> m0_844  [key=0, style=solid];
m0_843 -> m0_117  [key=2, style=dotted];
m0_845 -> m0_26  [key=2, style=dotted];
m0_845 -> m0_846  [key=0, style=solid];
m0_845 -> m0_117  [key=2, style=dotted];
m0_847 -> m0_26  [key=2, style=dotted];
m0_847 -> m0_848  [key=0, style=solid];
m0_847 -> m0_117  [key=2, style=dotted];
m0_854 -> m0_26  [key=2, style=dotted];
m0_854 -> m0_855  [key=0, style=solid];
m0_854 -> m0_117  [key=2, style=dotted];
m0_856 -> m0_26  [key=2, style=dotted];
m0_856 -> m0_857  [key=0, style=solid];
m0_856 -> m0_117  [key=2, style=dotted];
m0_840 -> m0_22  [key=2, style=dotted];
m0_840 -> m0_23  [key=2, style=dotted];
m0_840 -> m0_841  [key=0, style=solid];
m0_842 -> m0_22  [key=2, style=dotted];
m0_842 -> m0_23  [key=2, style=dotted];
m0_842 -> m0_843  [key=0, style=solid];
m0_844 -> m0_22  [key=2, style=dotted];
m0_844 -> m0_23  [key=2, style=dotted];
m0_844 -> m0_845  [key=0, style=solid];
m0_846 -> m0_22  [key=2, style=dotted];
m0_846 -> m0_23  [key=2, style=dotted];
m0_846 -> m0_847  [key=0, style=solid];
m0_848 -> m0_22  [key=2, style=dotted];
m0_848 -> m0_23  [key=2, style=dotted];
m0_848 -> m0_849  [key=0, style=solid];
m0_848 -> m0_861  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_850 -> m0_22  [key=2, style=dotted];
m0_850 -> m0_23  [key=2, style=dotted];
m0_850 -> m0_851  [key=0, style=solid];
m0_850 -> m0_852  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_850 -> m0_864  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_853 -> m0_22  [key=2, style=dotted];
m0_853 -> m0_23  [key=2, style=dotted];
m0_853 -> m0_854  [key=0, style=solid];
m0_855 -> m0_22  [key=2, style=dotted];
m0_855 -> m0_23  [key=2, style=dotted];
m0_855 -> m0_856  [key=0, style=solid];
m0_857 -> m0_22  [key=2, style=dotted];
m0_857 -> m0_23  [key=2, style=dotted];
m0_857 -> m0_858  [key=0, style=solid];
m0_857 -> m0_867  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_839 -> m0_840  [key=0, style=solid];
m0_849 -> m0_850  [key=0, style=solid];
m0_849 -> m0_42  [key=2, style=dotted];
m0_849 -> m0_860  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_851 -> m0_852  [key=0, style=solid];
m0_852 -> m0_853  [key=0, style=solid];
m0_852 -> m0_42  [key=2, style=dotted];
m0_852 -> m0_863  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_858 -> m0_859  [key=0, style=solid];
m0_858 -> m0_42  [key=2, style=dotted];
m0_858 -> m0_866  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_859 -> m0_838  [color=blue, key=0, style=bold];
m0_665 -> m0_666  [key=0, style=solid];
m0_665 -> m0_588  [color=blue, key=0, style=bold];
m0_1587 -> m0_1588  [key=0, style=solid];
m0_1591 -> m0_26  [key=2, style=dotted];
m0_1591 -> m0_1592  [key=0, style=solid];
m0_1593 -> m0_26  [key=2, style=dotted];
m0_1593 -> m0_1594  [key=0, style=solid];
m0_1589 -> m0_22  [key=2, style=dotted];
m0_1589 -> m0_23  [key=2, style=dotted];
m0_1589 -> m0_1591  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1589 -> m0_1593  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1589 -> m0_1590  [key=0, style=solid];
m0_1589 -> m0_1592  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1590 -> m0_24  [key=2, style=dotted];
m0_1590 -> m0_25  [key=2, style=dotted];
m0_1590 -> m0_1591  [key=0, style=solid];
m0_1592 -> m0_24  [key=2, style=dotted];
m0_1592 -> m0_25  [key=2, style=dotted];
m0_1592 -> m0_1593  [key=0, style=solid];
m0_1588 -> m0_1589  [key=0, style=solid];
m0_1594 -> m0_1587  [color=blue, key=0, style=bold];
m0_271 -> m0_272  [key=0, style=solid];
m0_271 -> m0_248  [key=2, style=dotted];
m0_271 -> m0_273  [color=darkseagreen4, key=1, label=constructors, style=dashed];
m0_271 -> m0_2082  [key=0, style=solid];
m0_273 -> m0_275  [key=0, style=solid];
m0_273 -> m0_274  [key=0, style=solid];
m0_274 -> m0_275  [key=0, style=solid];
m0_275 -> m0_111  [color=blue, key=0, style=bold];
m0_275 -> m0_22  [key=2, style=dotted];
m0_275 -> m0_23  [key=2, style=dotted];
m0_275 -> m0_276  [key=0, style=solid];
m0_275 -> m0_279  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_364 -> m0_365  [key=0, style=solid];
m0_364 -> m0_391  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m0_364 -> m0_398  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m0_368 -> m0_26  [key=2, style=dotted];
m0_368 -> m0_369  [key=0, style=solid];
m0_368 -> m0_382  [color=darkseagreen4, key=1, label=currentOnSerialized, style=dashed];
m0_368 -> m0_71  [color=darkorchid, key=3, label="Local variable System.Reflection.MethodInfo currentOnSerialized", style=bold];
m0_368 -> m0_374  [color=darkorchid, key=3, label="Local variable System.Reflection.MethodInfo currentOnSerialized", style=bold];
m0_370 -> m0_26  [key=2, style=dotted];
m0_370 -> m0_371  [key=0, style=solid];
m0_370 -> m0_390  [color=darkseagreen4, key=1, label=currentOnDeserialized, style=dashed];
m0_370 -> m0_71  [color=darkorchid, key=3, label="Local variable System.Reflection.MethodInfo currentOnDeserialized", style=bold];
m0_370 -> m0_374  [color=darkorchid, key=3, label="Local variable System.Reflection.MethodInfo currentOnDeserialized", style=bold];
m0_371 -> m0_26  [key=2, style=dotted];
m0_371 -> m0_372  [key=0, style=solid];
m0_371 -> m0_394  [color=darkseagreen4, key=1, label=currentOnError, style=dashed];
m0_371 -> m0_71  [color=darkorchid, key=3, label="Local variable System.Reflection.MethodInfo currentOnError", style=bold];
m0_371 -> m0_374  [color=darkorchid, key=3, label="Local variable System.Reflection.MethodInfo currentOnError", style=bold];
m0_372 -> m0_26  [key=2, style=dotted];
m0_372 -> m0_373  [key=0, style=solid];
m0_372 -> m0_399  [key=2, style=dotted];
m0_372 -> m0_378  [color=darkseagreen4, key=1, label=skipSerializing, style=dashed];
m0_374 -> m0_26  [key=2, style=dotted];
m0_374 -> m0_375  [key=0, style=solid];
m0_374 -> m0_366  [key=0, style=solid];
m0_374 -> m0_401  [key=2, style=dotted];
m0_374 -> m0_377  [color=darkseagreen4, key=1, label=method, style=dashed];
m0_374 -> m0_378  [color=darkseagreen4, key=1, label=method, style=dashed];
m0_374 -> m0_380  [color=darkseagreen4, key=1, label=method, style=dashed];
m0_374 -> m0_381  [color=darkseagreen4, key=1, label=method, style=dashed];
m0_374 -> m0_382  [color=darkseagreen4, key=1, label=method, style=dashed];
m0_374 -> m0_384  [color=darkseagreen4, key=1, label=method, style=dashed];
m0_374 -> m0_385  [color=darkseagreen4, key=1, label=method, style=dashed];
m0_374 -> m0_386  [color=darkseagreen4, key=1, label=method, style=dashed];
m0_374 -> m0_388  [color=darkseagreen4, key=1, label=method, style=dashed];
m0_374 -> m0_389  [color=darkseagreen4, key=1, label=method, style=dashed];
m0_374 -> m0_390  [color=darkseagreen4, key=1, label=method, style=dashed];
m0_374 -> m0_392  [color=darkseagreen4, key=1, label=method, style=dashed];
m0_374 -> m0_393  [color=darkseagreen4, key=1, label=method, style=dashed];
m0_374 -> m0_394  [color=darkseagreen4, key=1, label=method, style=dashed];
m0_374 -> m0_396  [color=darkseagreen4, key=1, label=method, style=dashed];
m0_374 -> m0_397  [color=darkseagreen4, key=1, label=method, style=dashed];
m0_375 -> m0_26  [key=2, style=dotted];
m0_375 -> m0_376  [key=0, style=solid];
m0_375 -> m0_374  [key=0, style=solid];
m0_376 -> m0_26  [key=2, style=dotted];
m0_376 -> m0_377  [key=0, style=solid];
m0_376 -> m0_378  [color=darkseagreen4, key=1, label=prevAttributeType, style=dashed];
m0_376 -> m0_71  [color=darkorchid, key=3, label="Local variable System.Type prevAttributeType", style=bold];
m0_378 -> m0_26  [key=2, style=dotted];
m0_378 -> m0_379  [key=0, style=solid];
m0_378 -> m0_382  [key=0, style=solid];
m0_378 -> m0_402  [key=2, style=dotted];
m0_378 -> m0_378  [color=darkseagreen4, key=1, label=prevAttributeType, style=dashed];
m0_379 -> m0_26  [key=2, style=dotted];
m0_379 -> m0_380  [key=0, style=solid];
m0_379 -> m0_50  [key=2, style=dotted];
m0_379 -> m0_379  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m0_379 -> m0_398  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m0_380 -> m0_26  [key=2, style=dotted];
m0_380 -> m0_381  [key=0, style=solid];
m0_380 -> m0_403  [key=2, style=dotted];
m0_380 -> m0_54  [key=2, style=dotted];
m0_381 -> m0_26  [key=2, style=dotted];
m0_381 -> m0_382  [key=0, style=solid];
m0_382 -> m0_26  [key=2, style=dotted];
m0_382 -> m0_383  [key=0, style=solid];
m0_382 -> m0_386  [key=0, style=solid];
m0_382 -> m0_402  [key=2, style=dotted];
m0_382 -> m0_382  [color=darkseagreen4, key=1, label=prevAttributeType, style=dashed];
m0_384 -> m0_26  [key=2, style=dotted];
m0_384 -> m0_385  [key=0, style=solid];
m0_384 -> m0_403  [key=2, style=dotted];
m0_384 -> m0_54  [key=2, style=dotted];
m0_385 -> m0_26  [key=2, style=dotted];
m0_385 -> m0_386  [key=0, style=solid];
m0_386 -> m0_26  [key=2, style=dotted];
m0_386 -> m0_387  [key=0, style=solid];
m0_386 -> m0_390  [key=0, style=solid];
m0_386 -> m0_402  [key=2, style=dotted];
m0_386 -> m0_386  [color=darkseagreen4, key=1, label=prevAttributeType, style=dashed];
m0_388 -> m0_26  [key=2, style=dotted];
m0_388 -> m0_389  [key=0, style=solid];
m0_388 -> m0_403  [key=2, style=dotted];
m0_388 -> m0_54  [key=2, style=dotted];
m0_389 -> m0_26  [key=2, style=dotted];
m0_389 -> m0_390  [key=0, style=solid];
m0_390 -> m0_26  [key=2, style=dotted];
m0_390 -> m0_391  [key=0, style=solid];
m0_390 -> m0_394  [key=0, style=solid];
m0_390 -> m0_402  [key=2, style=dotted];
m0_390 -> m0_390  [color=darkseagreen4, key=1, label=prevAttributeType, style=dashed];
m0_392 -> m0_26  [key=2, style=dotted];
m0_392 -> m0_393  [key=0, style=solid];
m0_392 -> m0_403  [key=2, style=dotted];
m0_392 -> m0_54  [key=2, style=dotted];
m0_393 -> m0_26  [key=2, style=dotted];
m0_393 -> m0_394  [key=0, style=solid];
m0_394 -> m0_26  [key=2, style=dotted];
m0_394 -> m0_395  [key=0, style=solid];
m0_394 -> m0_374  [key=0, style=solid];
m0_394 -> m0_402  [key=2, style=dotted];
m0_394 -> m0_394  [color=darkseagreen4, key=1, label=prevAttributeType, style=dashed];
m0_395 -> m0_26  [key=2, style=dotted];
m0_395 -> m0_396  [key=0, style=solid];
m0_395 -> m0_50  [key=2, style=dotted];
m0_395 -> m0_395  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>", style=dashed];
m0_395 -> m0_398  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>", style=dashed];
m0_397 -> m0_26  [key=2, style=dotted];
m0_397 -> m0_398  [key=0, style=solid];
m0_397 -> m0_374  [key=0, style=solid];
m0_398 -> m0_26  [key=2, style=dotted];
m0_398 -> m0_399  [key=0, style=solid];
m0_398 -> m0_360  [color=blue, key=0, style=bold];
m0_419 -> m0_26  [key=2, style=dotted];
m0_419 -> m0_420  [key=0, style=solid];
m0_419 -> m0_422  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_419 -> m0_20  [color=darkorchid, key=3, label="Parameter variable System.Type objectType", style=bold];
m0_421 -> m0_26  [key=2, style=dotted];
m0_421 -> m0_422  [key=0, style=solid];
m0_421 -> m0_103  [key=2, style=dotted];
m0_422 -> m0_26  [key=2, style=dotted];
m0_422 -> m0_423  [key=0, style=solid];
m0_422 -> m0_55  [key=2, style=dotted];
m0_422 -> m0_424  [color=darkseagreen4, key=1, label=containerAttribute, style=dashed];
m0_423 -> m0_26  [key=2, style=dotted];
m0_423 -> m0_424  [key=0, style=solid];
m0_423 -> m0_426  [key=0, style=solid];
m0_425 -> m0_26  [key=2, style=dotted];
m0_425 -> m0_426  [key=0, style=solid];
m0_425 -> m0_427  [key=0, style=solid];
m0_425 -> m0_442  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_426 -> m0_26  [key=2, style=dotted];
m0_426 -> m0_427  [key=0, style=solid];
m0_427 -> m0_26  [key=2, style=dotted];
m0_427 -> m0_428  [key=0, style=solid];
m0_427 -> m0_108  [key=2, style=dotted];
m0_427 -> m0_429  [color=darkseagreen4, key=1, label=overrideConstructor, style=dashed];
m0_427 -> m0_436  [color=darkseagreen4, key=1, label=overrideConstructor, style=dashed];
m0_429 -> m0_26  [key=2, style=dotted];
m0_429 -> m0_430  [key=0, style=solid];
m0_429 -> m0_269  [key=2, style=dotted];
m0_429 -> m0_431  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m0_429 -> m0_433  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m0_430 -> m0_26  [key=2, style=dotted];
m0_430 -> m0_431  [key=0, style=solid];
m0_430 -> m0_194  [key=2, style=dotted];
m0_430 -> m0_433  [color=darkseagreen4, key=1, label=expectedParameterType, style=dashed];
m0_430 -> m0_435  [color=darkseagreen4, key=1, label=expectedParameterType, style=dashed];
m0_431 -> m0_26  [key=2, style=dotted];
m0_431 -> m0_432  [key=0, style=solid];
m0_431 -> m0_433  [key=0, style=solid];
m0_433 -> m0_26  [key=2, style=dotted];
m0_433 -> m0_434  [key=0, style=solid];
m0_433 -> m0_435  [key=0, style=solid];
m0_433 -> m0_162  [key=2, style=dotted];
m0_434 -> m0_26  [key=2, style=dotted];
m0_434 -> m0_435  [key=0, style=solid];
m0_434 -> m0_436  [key=0, style=solid];
m0_435 -> m0_26  [key=2, style=dotted];
m0_435 -> m0_436  [key=0, style=solid];
m0_435 -> m0_438  [key=0, style=solid];
m0_435 -> m0_156  [key=2, style=dotted];
m0_435 -> m0_440  [key=2, style=dotted];
m0_437 -> m0_26  [key=2, style=dotted];
m0_437 -> m0_438  [key=0, style=solid];
m0_438 -> m0_26  [key=2, style=dotted];
m0_438 -> m0_439  [key=0, style=solid];
m0_438 -> m0_419  [color=blue, key=0, style=bold];
m0_459 -> m0_26  [key=2, style=dotted];
m0_459 -> m0_460  [key=0, style=solid];
m0_367 -> m0_22  [key=2, style=dotted];
m0_367 -> m0_368  [key=0, style=solid];
m0_367 -> m0_370  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_371  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_372  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_374  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_375  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_376  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_378  [color=darkseagreen4, key=1, label=currentOnSerializing, style=dashed];
m0_367 -> m0_379  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_380  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_381  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_382  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_384  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_385  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_386  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_388  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_389  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_390  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_392  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_393  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_394  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_395  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_397  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_398  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_399  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_400  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_402  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_403  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_404  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_405  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_407  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_408  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_409  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_410  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_412  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_413  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_414  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_415  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_417  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_418  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_419  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_421  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_422  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_423  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_425  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_426  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_427  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_429  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_430  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_431  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_433  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_434  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_435  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_437  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_438  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_439  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_441  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_442  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_443  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_445  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_446  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_447  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_449  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_450  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_451  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_453  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_454  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_455  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_457  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_458  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_459  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_369  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_373  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_377  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_383  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_387  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_391  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_396  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_401  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_406  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_411  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_416  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_420  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_424  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_428  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_432  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_436  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_440  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_444  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_448  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_452  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_456  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_367 -> m0_71  [color=darkorchid, key=3, label="Local variable System.Reflection.MethodInfo currentOnSerializing", style=bold];
m0_366 -> m0_23  [key=2, style=dotted];
m0_366 -> m0_367  [key=0, style=solid];
m0_366 -> m0_398  [key=0, style=solid];
m0_366 -> m0_124  [key=2, style=dotted];
m0_366 -> m0_372  [color=darkseagreen4, key=1, label=baseType, style=dashed];
m0_366 -> m0_373  [color=darkseagreen4, key=1, label=baseType, style=dashed];
m0_366 -> m0_374  [color=darkseagreen4, key=1, label=baseType, style=dashed];
m0_369 -> m0_370  [key=0, style=solid];
m0_369 -> m0_252  [key=2, style=dotted];
m0_369 -> m0_386  [color=darkseagreen4, key=1, label=currentOnDeserializing, style=dashed];
m0_369 -> m0_71  [color=darkorchid, key=3, label="Local variable System.Reflection.MethodInfo currentOnDeserializing", style=bold];
m0_369 -> m0_374  [color=darkorchid, key=3, label="Local variable System.Reflection.MethodInfo currentOnDeserializing", style=bold];
m0_373 -> m0_374  [key=0, style=solid];
m0_373 -> m0_252  [key=2, style=dotted];
m0_373 -> m0_400  [key=2, style=dotted];
m0_373 -> m0_390  [color=darkseagreen4, key=1, label=skipDeserialized, style=dashed];
m0_377 -> m0_378  [key=0, style=solid];
m0_377 -> m0_252  [key=2, style=dotted];
m0_377 -> m0_269  [key=2, style=dotted];
m0_377 -> m0_382  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m0_377 -> m0_386  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m0_377 -> m0_390  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m0_377 -> m0_394  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m0_383 -> m0_384  [key=0, style=solid];
m0_383 -> m0_252  [key=2, style=dotted];
m0_383 -> m0_50  [key=2, style=dotted];
m0_383 -> m0_383  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m0_383 -> m0_398  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m0_387 -> m0_388  [key=0, style=solid];
m0_387 -> m0_252  [key=2, style=dotted];
m0_387 -> m0_50  [key=2, style=dotted];
m0_387 -> m0_387  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m0_387 -> m0_398  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m0_391 -> m0_392  [key=0, style=solid];
m0_391 -> m0_252  [key=2, style=dotted];
m0_391 -> m0_50  [key=2, style=dotted];
m0_391 -> m0_391  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m0_391 -> m0_398  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m0_396 -> m0_397  [key=0, style=solid];
m0_396 -> m0_252  [key=2, style=dotted];
m0_396 -> m0_404  [key=2, style=dotted];
m0_396 -> m0_54  [key=2, style=dotted];
m0_420 -> m0_421  [key=0, style=solid];
m0_420 -> m0_252  [key=2, style=dotted];
m0_420 -> m0_439  [key=2, style=dotted];
m0_420 -> m0_425  [color=darkseagreen4, key=1, label=contract, style=dashed];
m0_420 -> m0_426  [color=darkseagreen4, key=1, label=contract, style=dashed];
m0_420 -> m0_427  [color=darkseagreen4, key=1, label=contract, style=dashed];
m0_420 -> m0_430  [color=darkseagreen4, key=1, label=contract, style=dashed];
m0_420 -> m0_432  [color=darkseagreen4, key=1, label=contract, style=dashed];
m0_420 -> m0_434  [color=darkseagreen4, key=1, label=contract, style=dashed];
m0_420 -> m0_435  [color=darkseagreen4, key=1, label=contract, style=dashed];
m0_420 -> m0_436  [color=darkseagreen4, key=1, label=contract, style=dashed];
m0_420 -> m0_437  [color=darkseagreen4, key=1, label=contract, style=dashed];
m0_424 -> m0_425  [key=0, style=solid];
m0_424 -> m0_252  [key=2, style=dotted];
m0_424 -> m0_107  [key=2, style=dotted];
m0_424 -> m0_442  [color=darkseagreen4, key=1, label=namingStrategy, style=dashed];
m0_428 -> m0_429  [key=0, style=solid];
m0_428 -> m0_252  [key=2, style=dotted];
m0_428 -> m0_437  [key=0, style=solid];
m0_432 -> m0_433  [key=0, style=solid];
m0_432 -> m0_252  [key=2, style=dotted];
m0_432 -> m0_436  [key=0, style=solid];
m0_436 -> m0_437  [key=0, style=solid];
m0_436 -> m0_252  [key=2, style=dotted];
m0_436 -> m0_109  [key=2, style=dotted];
m0_440 -> m0_441  [key=0, style=solid];
m0_440 -> m0_252  [key=2, style=dotted];
m0_365 -> m0_366  [key=0, style=solid];
m0_365 -> m0_395  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>", style=dashed];
m0_365 -> m0_398  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>", style=dashed];
m0_1563 -> m0_1564  [key=0, style=solid];
m0_1565 -> m0_22  [key=2, style=dotted];
m0_1565 -> m0_23  [key=2, style=dotted];
m0_1565 -> m0_1566  [key=0, style=solid];
m0_1565 -> m0_1569  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1564 -> m0_1565  [key=0, style=solid];
m0_1566 -> m0_1567  [key=0, style=solid];
m0_1566 -> m0_42  [key=2, style=dotted];
m0_1566 -> m0_1568  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_1567 -> m0_1563  [color=blue, key=0, style=bold];
m0_1395 -> m0_1396  [key=0, style=solid];
m0_1396 -> m0_22  [key=2, style=dotted];
m0_1396 -> m0_23  [key=2, style=dotted];
m0_1396 -> m0_1397  [key=0, style=solid];
m0_1396 -> m0_1400  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1397 -> m0_1398  [key=0, style=solid];
m0_1397 -> m0_42  [key=2, style=dotted];
m0_1397 -> m0_1399  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_1398 -> m0_1395  [color=blue, key=0, style=bold];
m0_467 -> m0_468  [key=0, style=solid];
m0_467 -> m0_471  [key=2, style=dotted];
m0_467 -> m0_469  [color=darkseagreen4, key=1, label=contract, style=dashed];
m0_468 -> m0_22  [key=2, style=dotted];
m0_468 -> m0_23  [key=2, style=dotted];
m0_468 -> m0_469  [key=0, style=solid];
m0_468 -> m0_472  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_468 -> m0_103  [key=2, style=dotted];
m0_469 -> m0_470  [key=0, style=solid];
m0_469 -> m0_42  [key=2, style=dotted];
m0_469 -> m0_471  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_470 -> m0_467  [color=blue, key=0, style=bold];
m0_470 -> m0_466  [color=blue, key=0, style=bold];
m0_1813 -> m0_1814  [key=0, style=solid];
m0_1814 -> m0_22  [key=2, style=dotted];
m0_1814 -> m0_23  [key=2, style=dotted];
m0_1814 -> m0_1815  [key=0, style=solid];
m0_1814 -> m0_1816  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1814 -> m0_1817  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1814 -> m0_1820  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1815 -> m0_25  [key=2, style=dotted];
m0_1815 -> m0_1816  [key=0, style=solid];
m0_1815 -> m0_252  [key=2, style=dotted];
m0_1816 -> m0_25  [key=2, style=dotted];
m0_1816 -> m0_1817  [key=0, style=solid];
m0_1816 -> m0_252  [key=2, style=dotted];
m0_1817 -> m0_1818  [key=0, style=solid];
m0_1817 -> m0_42  [key=2, style=dotted];
m0_1817 -> m0_1819  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_1818 -> m0_1813  [color=blue, key=0, style=bold];
m0_159 -> m0_160  [key=0, style=solid];
m0_159 -> m0_24  [key=2, style=dotted];
m0_159 -> m0_25  [key=2, style=dotted];
m0_2070 -> m0_2071  [key=0, style=solid];
m0_2070 -> m0_2073  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m0_2071 -> m0_2072  [key=0, style=solid];
m0_2071 -> m0_2073  [key=0, style=solid];
m0_2073 -> m0_2074  [key=0, style=solid];
m0_2073 -> m0_2076  [key=2, style=dotted];
m0_2072 -> m0_2074  [key=0, style=solid];
m0_2072 -> m0_2075  [key=2, style=dotted];
m0_2074 -> m0_2070  [color=blue, key=0, style=bold];
m0_1790 -> m0_1791  [key=0, style=solid];
m0_1794 -> m0_26  [key=2, style=dotted];
m0_1794 -> m0_1795  [key=0, style=solid];
m0_1795 -> m0_26  [key=2, style=dotted];
m0_1795 -> m0_1796  [key=0, style=solid];
m0_1792 -> m0_22  [key=2, style=dotted];
m0_1792 -> m0_23  [key=2, style=dotted];
m0_1792 -> m0_1794  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1792 -> m0_1795  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1792 -> m0_1793  [key=0, style=solid];
m0_1793 -> m0_1794  [key=0, style=solid];
m0_1793 -> m0_117  [key=2, style=dotted];
m0_1791 -> m0_1792  [key=0, style=solid];
m0_1796 -> m0_1790  [color=blue, key=0, style=bold];
m0_747 -> m0_748  [key=0, style=solid];
m0_752 -> m0_26  [key=2, style=dotted];
m0_752 -> m0_753  [key=0, style=solid];
m0_755 -> m0_26  [key=2, style=dotted];
m0_755 -> m0_756  [key=0, style=solid];
m0_759 -> m0_26  [key=2, style=dotted];
m0_759 -> m0_760  [key=0, style=solid];
m0_761 -> m0_26  [key=2, style=dotted];
m0_761 -> m0_762  [key=0, style=solid];
m0_750 -> m0_22  [key=2, style=dotted];
m0_750 -> m0_23  [key=2, style=dotted];
m0_750 -> m0_752  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_750 -> m0_755  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_750 -> m0_759  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_750 -> m0_761  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_750 -> m0_751  [key=0, style=solid];
m0_750 -> m0_654  [key=2, style=dotted];
m0_750 -> m0_753  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_750 -> m0_754  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_750 -> m0_756  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_750 -> m0_757  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_750 -> m0_760  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_750 -> m0_762  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_751 -> m0_25  [key=2, style=dotted];
m0_751 -> m0_752  [key=0, style=solid];
m0_751 -> m0_252  [key=2, style=dotted];
m0_753 -> m0_25  [key=2, style=dotted];
m0_753 -> m0_754  [key=0, style=solid];
m0_753 -> m0_252  [key=2, style=dotted];
m0_754 -> m0_25  [key=2, style=dotted];
m0_754 -> m0_755  [key=0, style=solid];
m0_754 -> m0_252  [key=2, style=dotted];
m0_756 -> m0_25  [key=2, style=dotted];
m0_756 -> m0_757  [key=0, style=solid];
m0_756 -> m0_252  [key=2, style=dotted];
m0_760 -> m0_25  [key=2, style=dotted];
m0_760 -> m0_761  [key=0, style=solid];
m0_760 -> m0_252  [key=2, style=dotted];
m0_758 -> m0_759  [key=0, style=solid];
m0_758 -> m0_746  [key=2, style=dotted];
m0_762 -> m0_763  [key=0, style=solid];
m0_762 -> m0_252  [key=2, style=dotted];
m0_762 -> m0_28  [key=2, style=dotted];
m0_749 -> m0_750  [key=0, style=solid];
m0_749 -> m0_758  [color=darkseagreen4, key=1, label=helloWorldData, style=dashed];
m0_749 -> m0_230  [key=2, style=dotted];
m0_757 -> m0_758  [key=0, style=solid];
m0_757 -> m0_647  [key=2, style=dotted];
m0_748 -> m0_749  [key=0, style=solid];
m0_763 -> m0_747  [color=blue, key=0, style=bold];
m0_287 -> m0_297  [key=0, style=solid];
m0_287 -> m0_298  [color=darkseagreen4, key=1, label="System.Reflection.ParameterInfo", style=dashed];
m0_287 -> m0_299  [color=darkseagreen4, key=1, label="System.Reflection.ParameterInfo", style=dashed];
m0_287 -> m0_301  [color=darkseagreen4, key=1, label="System.Reflection.ParameterInfo", style=dashed];
m0_287 -> m0_304  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m0_287 -> m0_305  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m0_287 -> m0_306  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m0_287 -> m0_307  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m0_287 -> m0_308  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m0_287 -> m0_309  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m0_287 -> m0_310  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m0_287 -> m0_311  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m0_287 -> m0_312  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m0_287 -> m0_313  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m0_287 -> m0_314  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m0_287 -> m0_315  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m0_287 -> m0_316  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m0_287 -> m0_48  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty matchingMemberProperty", style=bold];
m0_287 -> m0_278  [color=darkorchid, key=3, label="Parameter variable System.Reflection.ParameterInfo parameterInfo", style=bold];
m0_287 -> m0_26  [key=2, style=dotted];
m0_287 -> m0_288  [key=0, style=solid];
m0_1459 -> m0_1460  [key=0, style=solid];
m0_1467 -> m0_26  [key=2, style=dotted];
m0_1467 -> m0_1468  [key=0, style=solid];
m0_1467 -> m0_1469  [key=2, style=dotted];
m0_1461 -> m0_22  [key=2, style=dotted];
m0_1461 -> m0_23  [key=2, style=dotted];
m0_1461 -> m0_1467  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1461 -> m0_1462  [key=0, style=solid];
m0_1461 -> m0_1464  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1461 -> m0_1466  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1464 -> m0_24  [key=2, style=dotted];
m0_1464 -> m0_1465  [key=0, style=solid];
m0_1466 -> m0_24  [key=2, style=dotted];
m0_1466 -> m0_25  [key=2, style=dotted];
m0_1466 -> m0_1467  [key=0, style=solid];
m0_1460 -> m0_1461  [key=0, style=solid];
m0_1462 -> m0_1463  [key=0, style=solid];
m0_1462 -> m0_1465  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_1463 -> m0_1464  [key=0, style=solid];
m0_1463 -> m0_1466  [key=0, style=solid];
m0_1465 -> m0_1463  [key=0, style=solid];
m0_1465 -> m0_1465  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_1468 -> m0_1459  [color=blue, key=0, style=bold];
m0_570 -> m0_26  [key=2, style=dotted];
m0_570 -> m0_571  [key=0, style=solid];
m0_658 -> m0_684  [key=0, style=solid];
m0_658 -> m0_685  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_658 -> m0_686  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_658 -> m0_592  [color=darkorchid, key=3, label="Parameter variable string propertyName", style=bold];
m0_658 -> m0_694  [color=darkorchid, key=3, label="Parameter variable string propertyName", style=bold];
m0_658 -> m0_699  [color=darkorchid, key=3, label="Parameter variable string propertyName", style=bold];
m0_658 -> m0_658  [color=darkorchid, key=3, label="method methodReturn string ResolvePropertyName", style=bold];
m0_658 -> m0_659  [key=0, style=solid];
m0_1878 -> m0_1879  [key=0, style=solid];
m0_1882 -> m0_26  [key=2, style=dotted];
m0_1882 -> m0_1883  [key=0, style=solid];
m0_1884 -> m0_26  [key=2, style=dotted];
m0_1884 -> m0_1885  [key=0, style=solid];
m0_1886 -> m0_26  [key=2, style=dotted];
m0_1886 -> m0_1887  [key=0, style=solid];
m0_1888 -> m0_26  [key=2, style=dotted];
m0_1888 -> m0_1889  [key=0, style=solid];
m0_1890 -> m0_26  [key=2, style=dotted];
m0_1890 -> m0_1891  [key=0, style=solid];
m0_1892 -> m0_26  [key=2, style=dotted];
m0_1892 -> m0_1893  [key=0, style=solid];
m0_1894 -> m0_26  [key=2, style=dotted];
m0_1894 -> m0_1895  [key=0, style=solid];
m0_1896 -> m0_26  [key=2, style=dotted];
m0_1896 -> m0_1897  [key=0, style=solid];
m0_1898 -> m0_26  [key=2, style=dotted];
m0_1898 -> m0_1899  [key=0, style=solid];
m0_1900 -> m0_26  [key=2, style=dotted];
m0_1900 -> m0_1901  [key=0, style=solid];
m0_1902 -> m0_26  [key=2, style=dotted];
m0_1902 -> m0_1903  [key=0, style=solid];
m0_1904 -> m0_26  [key=2, style=dotted];
m0_1904 -> m0_1905  [key=0, style=solid];
m0_1880 -> m0_22  [key=2, style=dotted];
m0_1880 -> m0_23  [key=2, style=dotted];
m0_1880 -> m0_1882  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1880 -> m0_1884  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1880 -> m0_1886  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1880 -> m0_1888  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1880 -> m0_1890  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1880 -> m0_1892  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1880 -> m0_1894  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1880 -> m0_1896  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1880 -> m0_1898  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1880 -> m0_1900  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1880 -> m0_1902  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1880 -> m0_1904  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1880 -> m0_1881  [key=0, style=solid];
m0_1880 -> m0_1883  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1880 -> m0_1908  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1880 -> m0_1885  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1880 -> m0_1887  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1880 -> m0_1889  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1880 -> m0_1891  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1880 -> m0_1893  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1880 -> m0_1895  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1880 -> m0_1911  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1880 -> m0_1897  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1880 -> m0_1899  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1880 -> m0_1901  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1880 -> m0_1903  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1880 -> m0_1905  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1881 -> m0_24  [key=2, style=dotted];
m0_1881 -> m0_25  [key=2, style=dotted];
m0_1881 -> m0_1882  [key=0, style=solid];
m0_1885 -> m0_24  [key=2, style=dotted];
m0_1885 -> m0_25  [key=2, style=dotted];
m0_1885 -> m0_1886  [key=0, style=solid];
m0_1887 -> m0_24  [key=2, style=dotted];
m0_1887 -> m0_25  [key=2, style=dotted];
m0_1887 -> m0_1888  [key=0, style=solid];
m0_1889 -> m0_24  [key=2, style=dotted];
m0_1889 -> m0_25  [key=2, style=dotted];
m0_1889 -> m0_1890  [key=0, style=solid];
m0_1891 -> m0_24  [key=2, style=dotted];
m0_1891 -> m0_25  [key=2, style=dotted];
m0_1891 -> m0_1892  [key=0, style=solid];
m0_1893 -> m0_24  [key=2, style=dotted];
m0_1893 -> m0_25  [key=2, style=dotted];
m0_1893 -> m0_1894  [key=0, style=solid];
m0_1897 -> m0_24  [key=2, style=dotted];
m0_1897 -> m0_25  [key=2, style=dotted];
m0_1897 -> m0_1898  [key=0, style=solid];
m0_1899 -> m0_24  [key=2, style=dotted];
m0_1899 -> m0_25  [key=2, style=dotted];
m0_1899 -> m0_1900  [key=0, style=solid];
m0_1901 -> m0_24  [key=2, style=dotted];
m0_1901 -> m0_25  [key=2, style=dotted];
m0_1901 -> m0_1902  [key=0, style=solid];
m0_1903 -> m0_24  [key=2, style=dotted];
m0_1903 -> m0_25  [key=2, style=dotted];
m0_1903 -> m0_1904  [key=0, style=solid];
m0_1905 -> m0_24  [key=2, style=dotted];
m0_1905 -> m0_1906  [key=0, style=solid];
m0_1905 -> m0_28  [key=2, style=dotted];
m0_1883 -> m0_1884  [key=0, style=solid];
m0_1883 -> m0_1615  [key=2, style=dotted];
m0_1883 -> m0_1907  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_1895 -> m0_1896  [key=0, style=solid];
m0_1895 -> m0_1615  [key=2, style=dotted];
m0_1895 -> m0_1910  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_1879 -> m0_1880  [key=0, style=solid];
m0_1906 -> m0_1878  [color=blue, key=0, style=bold];
m0_662 -> m0_26  [key=2, style=dotted];
m0_662 -> m0_663  [key=0, style=solid];
m0_662 -> m0_665  [key=0, style=solid];
m0_659 -> m0_22  [key=2, style=dotted];
m0_659 -> m0_23  [key=2, style=dotted];
m0_659 -> m0_662  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_659 -> m0_660  [key=0, style=solid];
m0_659 -> m0_661  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_660 -> m0_25  [key=2, style=dotted];
m0_660 -> m0_661  [key=0, style=solid];
m0_660 -> m0_252  [key=2, style=dotted];
m0_660 -> m0_199  [key=2, style=dotted];
m0_660 -> m0_663  [color=darkseagreen4, key=1, label=shouldSerializeMethod, style=dashed];
m0_661 -> m0_662  [key=0, style=solid];
m0_661 -> m0_647  [key=2, style=dotted];
m0_661 -> m0_664  [key=2, style=dotted];
m0_661 -> m0_663  [key=0, style=solid];
m0_663 -> m0_658  [color=blue, key=0, style=bold];
m0_663 -> m0_664  [key=0, style=solid];
m0_663 -> m0_200  [key=2, style=dotted];
m0_663 -> m0_667  [color=darkseagreen4, key=1, label=shouldSerializeCall, style=dashed];
m0_1430 -> m0_1431  [key=0, style=solid];
m0_1434 -> m0_26  [key=2, style=dotted];
m0_1434 -> m0_1435  [key=0, style=solid];
m0_1436 -> m0_26  [key=2, style=dotted];
m0_1436 -> m0_1437  [key=0, style=solid];
m0_1438 -> m0_26  [key=2, style=dotted];
m0_1438 -> m0_1439  [key=0, style=solid];
m0_1439 -> m0_26  [key=2, style=dotted];
m0_1439 -> m0_1440  [key=0, style=solid];
m0_1442 -> m0_26  [key=2, style=dotted];
m0_1442 -> m0_1443  [key=0, style=solid];
m0_1440 -> m0_26  [key=2, style=dotted];
m0_1440 -> m0_1441  [key=0, style=solid];
m0_1432 -> m0_22  [key=2, style=dotted];
m0_1432 -> m0_23  [key=2, style=dotted];
m0_1432 -> m0_1434  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1432 -> m0_1436  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1432 -> m0_1438  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1432 -> m0_1439  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1432 -> m0_1442  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1432 -> m0_1433  [key=0, style=solid];
m0_1432 -> m0_1435  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1432 -> m0_1437  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1432 -> m0_1441  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1433 -> m0_24  [key=2, style=dotted];
m0_1433 -> m0_25  [key=2, style=dotted];
m0_1433 -> m0_1434  [key=0, style=solid];
m0_1435 -> m0_24  [key=2, style=dotted];
m0_1435 -> m0_25  [key=2, style=dotted];
m0_1435 -> m0_1436  [key=0, style=solid];
m0_1441 -> m0_24  [key=2, style=dotted];
m0_1441 -> m0_25  [key=2, style=dotted];
m0_1441 -> m0_1442  [key=0, style=solid];
m0_1437 -> m0_1438  [key=0, style=solid];
m0_1437 -> m0_1440  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_1437 -> m0_117  [key=2, style=dotted];
m0_1431 -> m0_1432  [key=0, style=solid];
m0_1443 -> m0_1430  [color=blue, key=0, style=bold];
m0_2082 -> m0_271  [color=blue, key=0, style=bold];
m0_158 -> m0_26  [key=2, style=dotted];
m0_158 -> m0_159  [key=0, style=solid];
m0_1201 -> m0_1202  [key=0, style=solid];
m0_1204 -> m0_26  [key=2, style=dotted];
m0_1204 -> m0_1205  [key=0, style=solid];
m0_1205 -> m0_26  [key=2, style=dotted];
m0_1205 -> m0_1206  [key=0, style=solid];
m0_1206 -> m0_26  [key=2, style=dotted];
m0_1206 -> m0_1207  [key=0, style=solid];
m0_1202 -> m0_22  [key=2, style=dotted];
m0_1202 -> m0_23  [key=2, style=dotted];
m0_1202 -> m0_1203  [key=0, style=solid];
m0_1203 -> m0_1204  [key=0, style=solid];
m0_1203 -> m0_1205  [color=darkseagreen4, key=1, label=data, style=dashed];
m0_1203 -> m0_1206  [color=darkseagreen4, key=1, label=data, style=dashed];
m0_1203 -> m0_87  [key=2, style=dotted];
m0_1207 -> m0_1201  [color=blue, key=0, style=bold];
m0_1174 -> m0_1175  [key=0, style=solid];
m0_1177 -> m0_26  [key=2, style=dotted];
m0_1177 -> m0_1178  [key=0, style=solid];
m0_1175 -> m0_22  [key=2, style=dotted];
m0_1175 -> m0_23  [key=2, style=dotted];
m0_1175 -> m0_1177  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1175 -> m0_1176  [key=0, style=solid];
m0_1176 -> m0_1177  [key=0, style=solid];
m0_1176 -> m0_1179  [key=2, style=dotted];
m0_1176 -> m0_664  [key=2, style=dotted];
m0_1178 -> m0_1174  [color=blue, key=0, style=bold];
m0_549 -> m0_550  [key=0, style=solid];
m0_549 -> m0_555  [key=2, style=dotted];
m0_549 -> m0_556  [key=2, style=dotted];
m0_549 -> m0_557  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_551 -> m0_22  [key=2, style=dotted];
m0_551 -> m0_23  [key=2, style=dotted];
m0_551 -> m0_553  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_551 -> m0_552  [key=0, style=solid];
m0_551 -> m0_560  [key=2, style=dotted];
m0_551 -> m0_557  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_551 -> m0_104  [color=blue, key=0, style=bold];
m0_554 -> m0_555  [key=0, style=solid];
m0_554 -> m0_556  [color=darkseagreen4, key=1, label=j, style=dashed];
m0_554 -> m0_558  [color=darkseagreen4, key=1, label=j, style=dashed];
m0_550 -> m0_551  [key=0, style=solid];
m0_550 -> m0_556  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_1619 -> m0_1620  [key=0, style=solid];
m0_1623 -> m0_26  [key=2, style=dotted];
m0_1623 -> m0_1624  [key=0, style=solid];
m0_1625 -> m0_26  [key=2, style=dotted];
m0_1625 -> m0_1626  [key=0, style=solid];
m0_1627 -> m0_26  [key=2, style=dotted];
m0_1627 -> m0_1628  [key=0, style=solid];
m0_1629 -> m0_26  [key=2, style=dotted];
m0_1629 -> m0_1630  [key=0, style=solid];
m0_1631 -> m0_26  [key=2, style=dotted];
m0_1631 -> m0_1632  [key=0, style=solid];
m0_1633 -> m0_26  [key=2, style=dotted];
m0_1633 -> m0_1634  [key=0, style=solid];
m0_1635 -> m0_26  [key=2, style=dotted];
m0_1635 -> m0_1636  [key=0, style=solid];
m0_1637 -> m0_26  [key=2, style=dotted];
m0_1637 -> m0_1638  [key=0, style=solid];
m0_1639 -> m0_26  [key=2, style=dotted];
m0_1639 -> m0_1640  [key=0, style=solid];
m0_1621 -> m0_22  [key=2, style=dotted];
m0_1621 -> m0_1623  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1621 -> m0_1625  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1621 -> m0_1627  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1621 -> m0_1629  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1621 -> m0_1631  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1621 -> m0_1633  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1621 -> m0_1635  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1621 -> m0_1637  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1621 -> m0_1639  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1621 -> m0_1622  [key=0, style=solid];
m0_1621 -> m0_231  [key=2, style=dotted];
m0_1621 -> m0_271  [key=2, style=dotted];
m0_1621 -> m0_272  [key=2, style=dotted];
m0_1621 -> m0_1624  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1621 -> m0_1626  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1621 -> m0_1628  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1621 -> m0_1630  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1621 -> m0_1632  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1621 -> m0_1634  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1621 -> m0_1636  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1621 -> m0_1638  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1621 -> m0_1640  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1622 -> m0_24  [key=2, style=dotted];
m0_1622 -> m0_25  [key=2, style=dotted];
m0_1622 -> m0_1623  [key=0, style=solid];
m0_1624 -> m0_24  [key=2, style=dotted];
m0_1624 -> m0_25  [key=2, style=dotted];
m0_1624 -> m0_1625  [key=0, style=solid];
m0_1626 -> m0_24  [key=2, style=dotted];
m0_1626 -> m0_25  [key=2, style=dotted];
m0_1626 -> m0_1627  [key=0, style=solid];
m0_1628 -> m0_24  [key=2, style=dotted];
m0_1628 -> m0_25  [key=2, style=dotted];
m0_1628 -> m0_1629  [key=0, style=solid];
m0_1630 -> m0_24  [key=2, style=dotted];
m0_1630 -> m0_25  [key=2, style=dotted];
m0_1630 -> m0_1631  [key=0, style=solid];
m0_1632 -> m0_24  [key=2, style=dotted];
m0_1632 -> m0_25  [key=2, style=dotted];
m0_1632 -> m0_1633  [key=0, style=solid];
m0_1634 -> m0_24  [key=2, style=dotted];
m0_1634 -> m0_25  [key=2, style=dotted];
m0_1634 -> m0_1635  [key=0, style=solid];
m0_1636 -> m0_24  [key=2, style=dotted];
m0_1636 -> m0_25  [key=2, style=dotted];
m0_1636 -> m0_1637  [key=0, style=solid];
m0_1638 -> m0_24  [key=2, style=dotted];
m0_1638 -> m0_25  [key=2, style=dotted];
m0_1638 -> m0_1639  [key=0, style=solid];
m0_1640 -> m0_24  [key=2, style=dotted];
m0_1640 -> m0_1641  [key=0, style=solid];
m0_1640 -> m0_28  [key=2, style=dotted];
m0_1620 -> m0_1621  [key=0, style=solid];
m0_1641 -> m0_1619  [color=blue, key=0, style=bold];
m0_1481 -> m0_1482  [key=0, style=solid];
m0_1485 -> m0_26  [key=2, style=dotted];
m0_1485 -> m0_1486  [key=0, style=solid];
m0_1486 -> m0_26  [key=2, style=dotted];
m0_1486 -> m0_1487  [key=0, style=solid];
m0_1488 -> m0_26  [key=2, style=dotted];
m0_1488 -> m0_1489  [key=0, style=solid];
m0_1483 -> m0_22  [key=2, style=dotted];
m0_1483 -> m0_23  [key=2, style=dotted];
m0_1483 -> m0_1485  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1483 -> m0_1486  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1483 -> m0_1488  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1483 -> m0_1484  [key=0, style=solid];
m0_1483 -> m0_1487  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1484 -> m0_24  [key=2, style=dotted];
m0_1484 -> m0_25  [key=2, style=dotted];
m0_1484 -> m0_1485  [key=0, style=solid];
m0_1487 -> m0_24  [key=2, style=dotted];
m0_1487 -> m0_25  [key=2, style=dotted];
m0_1487 -> m0_1488  [key=0, style=solid];
m0_1482 -> m0_1483  [key=0, style=solid];
m0_1489 -> m0_1481  [color=blue, key=0, style=bold];
m0_1293 -> m0_1294  [key=0, style=solid];
m0_1297 -> m0_26  [key=2, style=dotted];
m0_1297 -> m0_1298  [key=0, style=solid];
m0_1299 -> m0_26  [key=2, style=dotted];
m0_1299 -> m0_1300  [key=0, style=solid];
m0_1301 -> m0_26  [key=2, style=dotted];
m0_1301 -> m0_1302  [key=0, style=solid];
m0_1302 -> m0_26  [key=2, style=dotted];
m0_1302 -> m0_1303  [key=0, style=solid];
m0_1303 -> m0_26  [key=2, style=dotted];
m0_1303 -> m0_1304  [key=0, style=solid];
m0_1303 -> m0_1264  [key=2, style=dotted];
m0_1303 -> m0_1265  [key=2, style=dotted];
m0_1303 -> m0_1266  [key=2, style=dotted];
m0_1305 -> m0_26  [key=2, style=dotted];
m0_1305 -> m0_1306  [key=0, style=solid];
m0_1295 -> m0_22  [key=2, style=dotted];
m0_1295 -> m0_23  [key=2, style=dotted];
m0_1295 -> m0_1297  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1295 -> m0_1299  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1295 -> m0_1301  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1295 -> m0_1302  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1295 -> m0_1303  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1295 -> m0_1305  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1295 -> m0_1296  [key=0, style=solid];
m0_1295 -> m0_1298  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1295 -> m0_1300  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1295 -> m0_1304  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1296 -> m0_24  [key=2, style=dotted];
m0_1296 -> m0_25  [key=2, style=dotted];
m0_1296 -> m0_1297  [key=0, style=solid];
m0_1298 -> m0_24  [key=2, style=dotted];
m0_1298 -> m0_25  [key=2, style=dotted];
m0_1298 -> m0_1299  [key=0, style=solid];
m0_1304 -> m0_24  [key=2, style=dotted];
m0_1304 -> m0_25  [key=2, style=dotted];
m0_1304 -> m0_1305  [key=0, style=solid];
m0_1300 -> m0_1301  [key=0, style=solid];
m0_1300 -> m0_1179  [key=2, style=dotted];
m0_1294 -> m0_1295  [key=0, style=solid];
m0_1306 -> m0_1293  [color=blue, key=0, style=bold];
m0_1797 -> m0_1798  [key=0, style=solid];
m0_1801 -> m0_26  [key=2, style=dotted];
m0_1801 -> m0_1802  [key=0, style=solid];
m0_1803 -> m0_26  [key=2, style=dotted];
m0_1803 -> m0_1804  [key=0, style=solid];
m0_1805 -> m0_26  [key=2, style=dotted];
m0_1805 -> m0_1806  [key=0, style=solid];
m0_1807 -> m0_26  [key=2, style=dotted];
m0_1807 -> m0_1808  [key=0, style=solid];
m0_1809 -> m0_26  [key=2, style=dotted];
m0_1809 -> m0_1810  [key=0, style=solid];
m0_1811 -> m0_26  [key=2, style=dotted];
m0_1811 -> m0_1812  [key=0, style=solid];
m0_1799 -> m0_22  [key=2, style=dotted];
m0_1799 -> m0_23  [key=2, style=dotted];
m0_1799 -> m0_1801  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1799 -> m0_1803  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1799 -> m0_1805  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1799 -> m0_1807  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1799 -> m0_1809  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1799 -> m0_1811  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1799 -> m0_1800  [key=0, style=solid];
m0_1799 -> m0_1802  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1799 -> m0_1804  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1799 -> m0_1806  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1799 -> m0_1808  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1799 -> m0_1810  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1800 -> m0_24  [key=2, style=dotted];
m0_1800 -> m0_1801  [key=0, style=solid];
m0_1802 -> m0_24  [key=2, style=dotted];
m0_1802 -> m0_1803  [key=0, style=solid];
m0_1804 -> m0_24  [key=2, style=dotted];
m0_1804 -> m0_1805  [key=0, style=solid];
m0_1806 -> m0_24  [key=2, style=dotted];
m0_1806 -> m0_1807  [key=0, style=solid];
m0_1808 -> m0_24  [key=2, style=dotted];
m0_1808 -> m0_1809  [key=0, style=solid];
m0_1810 -> m0_24  [key=2, style=dotted];
m0_1810 -> m0_1811  [key=0, style=solid];
m0_1798 -> m0_1799  [key=0, style=solid];
m0_1812 -> m0_1797  [color=blue, key=0, style=bold];
m0_1869 -> m0_1870  [key=0, style=solid];
m0_1871 -> m0_22  [key=2, style=dotted];
m0_1871 -> m0_23  [key=2, style=dotted];
m0_1871 -> m0_1872  [key=0, style=solid];
m0_1871 -> m0_1873  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1871 -> m0_1876  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1872 -> m0_24  [key=2, style=dotted];
m0_1872 -> m0_25  [key=2, style=dotted];
m0_1872 -> m0_1873  [key=0, style=solid];
m0_1870 -> m0_1871  [key=0, style=solid];
m0_1873 -> m0_1874  [key=0, style=solid];
m0_1873 -> m0_1615  [key=2, style=dotted];
m0_1873 -> m0_1875  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_1874 -> m0_1869  [color=blue, key=0, style=bold];
m0_1490 -> m0_1491  [key=0, style=solid];
m0_1494 -> m0_26  [key=2, style=dotted];
m0_1494 -> m0_1495  [key=0, style=solid];
m0_1495 -> m0_26  [key=2, style=dotted];
m0_1495 -> m0_1496  [key=0, style=solid];
m0_1497 -> m0_26  [key=2, style=dotted];
m0_1497 -> m0_1498  [key=0, style=solid];
m0_1492 -> m0_22  [key=2, style=dotted];
m0_1492 -> m0_23  [key=2, style=dotted];
m0_1492 -> m0_1494  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1492 -> m0_1495  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1492 -> m0_1497  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1492 -> m0_1493  [key=0, style=solid];
m0_1492 -> m0_1496  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_1493 -> m0_24  [key=2, style=dotted];
m0_1493 -> m0_25  [key=2, style=dotted];
m0_1493 -> m0_1494  [key=0, style=solid];
m0_1496 -> m0_24  [key=2, style=dotted];
m0_1496 -> m0_25  [key=2, style=dotted];
m0_1496 -> m0_1497  [key=0, style=solid];
m0_1491 -> m0_1492  [key=0, style=solid];
m0_1498 -> m0_1490  [color=blue, key=0, style=bold];
m0_2111 -> m0_209  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m0_2111 -> m0_210  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m0_2111 -> m0_211  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m0_2111 -> m0_212  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m0_2111 -> m0_213  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m0_2111 -> m0_214  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m0_2111 -> m0_215  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m0_2111 -> m0_216  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m0_2111 -> m0_217  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m0_2111 -> m0_218  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m0_2111 -> m0_219  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m0_2111 -> m0_220  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m0_2116 -> m0_562  [color=darkseagreen4, key=1, label=total, style=dashed];
m0_2117 -> m0_578  [color=darkseagreen4, key=1, label=total, style=dashed];
m0_2108 -> m0_112  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_2108 -> m0_115  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_2108 -> m0_119  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_2109 -> m0_135  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_2110 -> m0_172  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_2112 -> m0_279  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_2113 -> m0_297  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_2114 -> m0_310  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_2124 -> m0_864  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_2124 -> m0_861  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_2124 -> m0_867  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_2125 -> m0_899  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_2125 -> m0_902  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_2126 -> m0_1077  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_2127 -> m0_1155  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_2136 -> m0_1400  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_2137 -> m0_1407  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_2138 -> m0_1414  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_2139 -> m0_1421  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_2140 -> m0_1428  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_2141 -> m0_1561  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_2142 -> m0_1569  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_2143 -> m0_1600  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_2144 -> m0_1617  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_2145 -> m0_1781  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_2147 -> m0_1876  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_2148 -> m0_1908  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_2148 -> m0_1911  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_2149 -> m0_2033  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_2149 -> m0_2036  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_2149 -> m0_2039  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_2149 -> m0_2042  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_2149 -> m0_2045  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_2149 -> m0_2048  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_2105 -> m0_44  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_2106 -> m0_61  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_2106 -> m0_64  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_2106 -> m0_67  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_2106 -> m0_70  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_2107 -> m0_85  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m0_2115 -> m0_472  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_2118 -> m0_631  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_2119 -> m0_638  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_2120 -> m0_645  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_2121 -> m0_656  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_2122 -> m0_671  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_2123 -> m0_824  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_2123 -> m0_827  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_2123 -> m0_830  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_2123 -> m0_833  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_2123 -> m0_836  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_2128 -> m0_1172  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_2129 -> m0_1185  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_2130 -> m0_1192  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_2131 -> m0_1199  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_2132 -> m0_1213  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_2133 -> m0_1220  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_2134 -> m0_1291  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_2135 -> m0_1393  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_2146 -> m0_1820  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_2150 -> m0_2068  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.ToggleReaderError", style=dashed];
m0_2150 -> m0_2071  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.ToggleReaderError", style=dashed];
m0_2150 -> m0_2073  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.ToggleReaderError", style=dashed];
m5_5 -> m5_6  [key=0, style=solid];
m5_6 -> m5_7  [key=0, style=solid];
m5_7 -> m5_8  [key=0, style=solid];
m5_8 -> m5_9  [key=0, style=solid];
m5_9 -> m5_10  [key=0, style=solid];
m5_10 -> m5_11  [key=0, style=solid];
m5_11 -> m5_5  [color=blue, key=0, style=bold];
m5_205 -> m5_206  [key=0, style=solid];
m5_205 -> m5_55  [color=darkorchid, key=3, label="method methodReturn bool? ReadAsBoolean", style=bold];
m5_205 -> m5_214  [color=darkorchid, key=3, label="method methodReturn bool? ReadAsBoolean", style=bold];
m5_205 -> m5_225  [color=darkorchid, key=3, label="method methodReturn bool? ReadAsBoolean", style=bold];
m5_206 -> m5_207  [key=0, style=solid];
m5_206 -> m5_66  [key=2, style=dotted];
m5_206 -> m5_223  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_207 -> m5_208  [key=0, style=solid];
m5_207 -> m5_212  [key=0, style=solid];
m5_207 -> m5_218  [key=0, style=solid];
m5_207 -> m5_220  [key=0, style=solid];
m5_223 -> m5_222  [key=0, style=solid];
m5_223 -> m5_28  [key=2, style=dotted];
m5_223 -> m5_29  [key=2, style=dotted];
m5_208 -> m5_209  [key=0, style=solid];
m5_212 -> m5_213  [key=0, style=solid];
m5_218 -> m5_219  [key=0, style=solid];
m5_220 -> m5_221  [key=0, style=solid];
m5_209 -> m5_210  [key=0, style=solid];
m5_210 -> m5_211  [key=0, style=solid];
m5_211 -> m5_222  [key=0, style=solid];
m5_213 -> m5_214  [key=0, style=solid];
m5_214 -> m5_215  [key=0, style=solid];
m5_215 -> m5_216  [key=0, style=solid];
m5_215 -> m5_224  [key=2, style=dotted];
m5_215 -> m5_217  [color=darkseagreen4, key=1, label=b, style=dashed];
m5_216 -> m5_217  [key=0, style=solid];
m5_216 -> m5_68  [key=2, style=dotted];
m5_217 -> m5_222  [key=0, style=solid];
m5_219 -> m5_222  [key=0, style=solid];
m5_219 -> m5_225  [key=2, style=dotted];
m5_221 -> m5_222  [key=0, style=solid];
m5_222 -> m5_205  [color=blue, key=0, style=bold];
m5_254 -> m5_255  [key=0, style=solid];
m5_254 -> m5_259  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_254 -> m5_262  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_254 -> m5_263  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_254 -> m5_55  [color=darkorchid, key=3, label="method methodReturn decimal? ReadDecimalString", style=bold];
m5_254 -> m5_258  [color=darkorchid, key=3, label="method methodReturn decimal? ReadDecimalString", style=bold];
m5_255 -> m5_256  [key=0, style=solid];
m5_255 -> m5_258  [key=0, style=solid];
m5_255 -> m5_80  [key=2, style=dotted];
m5_259 -> m5_260  [key=0, style=solid];
m5_259 -> m5_262  [key=0, style=solid];
m5_259 -> m5_265  [key=2, style=dotted];
m5_259 -> m5_261  [color=darkseagreen4, key=1, label=d, style=dashed];
m5_262 -> m5_263  [key=0, style=solid];
m5_262 -> m5_68  [key=2, style=dotted];
m5_263 -> m5_264  [key=0, style=solid];
m5_263 -> m5_28  [key=2, style=dotted];
m5_263 -> m5_29  [key=2, style=dotted];
m5_256 -> m5_257  [key=0, style=solid];
m5_256 -> m5_68  [key=2, style=dotted];
m5_258 -> m5_259  [key=0, style=solid];
m5_257 -> m5_264  [key=0, style=solid];
m5_260 -> m5_261  [key=0, style=solid];
m5_260 -> m5_68  [key=2, style=dotted];
m5_261 -> m5_264  [key=0, style=solid];
m5_264 -> m5_254  [color=blue, key=0, style=bold];
m5_358 -> m5_370  [key=0, style=solid];
m5_358 -> m5_371  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonToken", style=dashed];
m5_358 -> m5_372  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonToken", style=dashed];
m5_358 -> m5_339  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonToken endToken", style=bold];
m5_358 -> m5_341  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonToken endToken", style=bold];
m5_358 -> m5_343  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonToken endToken", style=bold];
m5_370 -> m5_371  [key=0, style=solid];
m5_370 -> m5_30  [key=2, style=dotted];
m5_370 -> m5_372  [color=darkseagreen4, key=1, label=currentObject, style=dashed];
m5_371 -> m5_372  [key=0, style=solid];
m5_371 -> m5_373  [key=0, style=solid];
m5_371 -> m5_377  [key=2, style=dotted];
m5_372 -> m5_376  [key=0, style=solid];
m5_372 -> m5_378  [key=2, style=dotted];
m5_372 -> m5_29  [key=2, style=dotted];
m5_373 -> m5_374  [key=0, style=solid];
m5_373 -> m5_375  [key=0, style=solid];
m5_373 -> m5_44  [key=2, style=dotted];
m5_374 -> m5_376  [key=0, style=solid];
m5_375 -> m5_376  [key=0, style=solid];
m5_375 -> m5_366  [key=2, style=dotted];
m5_376 -> m5_358  [color=blue, key=0, style=bold];
m5_24 -> m5_367  [key=0, style=solid];
m5_367 -> m5_368  [key=0, style=solid];
m5_367 -> m5_369  [key=0, style=solid];
m5_368 -> m5_369  [key=0, style=solid];
m5_369 -> m5_24  [color=blue, key=0, style=bold];
m5_409 -> m5_411  [key=0, style=solid];
m5_409 -> m5_321  [color=darkorchid, key=3, label="Parameter variable bool disposing", style=bold];
m5_411 -> m5_412  [key=0, style=solid];
m5_411 -> m5_413  [key=0, style=solid];
m5_412 -> m5_413  [key=0, style=solid];
m5_412 -> m5_414  [key=2, style=dotted];
m5_413 -> m5_409  [color=blue, key=0, style=bold];
m5_142 -> m5_303  [key=0, style=solid];
m5_303 -> m5_304  [key=0, style=solid];
m5_303 -> m5_143  [key=2, style=dotted];
m5_304 -> m5_305  [key=0, style=solid];
m5_304 -> m5_310  [key=0, style=solid];
m5_304 -> m5_105  [key=2, style=dotted];
m5_305 -> m5_306  [key=0, style=solid];
m5_305 -> m5_143  [key=2, style=dotted];
m5_310 -> m5_311  [key=0, style=solid];
m5_310 -> m5_28  [key=2, style=dotted];
m5_310 -> m5_29  [key=2, style=dotted];
m5_306 -> m5_307  [key=0, style=solid];
m5_306 -> m5_310  [key=0, style=solid];
m5_306 -> m5_105  [key=2, style=dotted];
m5_306 -> m5_312  [key=2, style=dotted];
m5_307 -> m5_308  [key=0, style=solid];
m5_307 -> m5_143  [key=2, style=dotted];
m5_308 -> m5_309  [key=0, style=solid];
m5_308 -> m5_310  [key=0, style=solid];
m5_308 -> m5_105  [key=2, style=dotted];
m5_309 -> m5_311  [key=0, style=solid];
m5_311 -> m5_142  [color=blue, key=0, style=bold];
m5_424 -> m5_425  [key=0, style=solid];
m5_425 -> m5_426  [key=0, style=solid];
m5_425 -> m5_47  [key=2, style=dotted];
m5_425 -> m5_427  [key=2, style=dotted];
m5_426 -> m5_424  [color=blue, key=0, style=bold];
m5_69 -> m5_70  [key=0, style=solid];
m5_69 -> m5_74  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_69 -> m5_77  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_69 -> m5_78  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_69 -> m5_62  [color=darkorchid, key=3, label="Parameter variable string s", style=bold];
m5_69 -> m5_55  [color=darkorchid, key=3, label="method methodReturn int? ReadInt32String", style=bold];
m5_69 -> m5_73  [color=darkorchid, key=3, label="method methodReturn int? ReadInt32String", style=bold];
m5_70 -> m5_71  [key=0, style=solid];
m5_70 -> m5_73  [key=0, style=solid];
m5_70 -> m5_80  [key=2, style=dotted];
m5_74 -> m5_75  [key=0, style=solid];
m5_74 -> m5_77  [key=0, style=solid];
m5_74 -> m5_81  [key=2, style=dotted];
m5_74 -> m5_76  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_77 -> m5_78  [key=0, style=solid];
m5_77 -> m5_68  [key=2, style=dotted];
m5_78 -> m5_79  [key=0, style=solid];
m5_78 -> m5_28  [key=2, style=dotted];
m5_78 -> m5_29  [key=2, style=dotted];
m5_71 -> m5_72  [key=0, style=solid];
m5_71 -> m5_68  [key=2, style=dotted];
m5_73 -> m5_74  [key=0, style=solid];
m5_72 -> m5_79  [key=0, style=solid];
m5_75 -> m5_76  [key=0, style=solid];
m5_75 -> m5_68  [key=2, style=dotted];
m5_76 -> m5_79  [key=0, style=solid];
m5_79 -> m5_69  [color=blue, key=0, style=bold];
m5_158 -> m5_321  [key=0, style=solid];
m5_158 -> m5_152  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonToken newToken", style=bold];
m5_321 -> m5_322  [key=0, style=solid];
m5_321 -> m5_68  [key=2, style=dotted];
m5_322 -> m5_158  [color=blue, key=0, style=bold];
m5_159 -> m5_161  [key=0, style=solid];
m5_159 -> m5_165  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<byte>", style=dashed];
m5_159 -> m5_149  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.List<byte> buffer", style=bold];
m5_159 -> m5_59  [color=darkorchid, key=3, label="method methodReturn bool ReadArrayElementIntoByteArrayReportDone", style=bold];
m5_159 -> m5_321  [color=darkorchid, key=3, label="method methodReturn bool ReadArrayElementIntoByteArrayReportDone", style=bold];
m5_161 -> m5_162  [key=0, style=solid];
m5_161 -> m5_164  [key=0, style=solid];
m5_161 -> m5_167  [key=0, style=solid];
m5_161 -> m5_169  [key=0, style=solid];
m5_161 -> m5_171  [key=0, style=solid];
m5_165 -> m5_166  [key=0, style=solid];
m5_165 -> m5_173  [key=2, style=dotted];
m5_165 -> m5_27  [key=2, style=dotted];
m5_162 -> m5_163  [key=0, style=solid];
m5_164 -> m5_165  [key=0, style=solid];
m5_167 -> m5_168  [key=0, style=solid];
m5_169 -> m5_170  [key=0, style=solid];
m5_171 -> m5_172  [key=0, style=solid];
m5_171 -> m5_28  [key=2, style=dotted];
m5_171 -> m5_29  [key=2, style=dotted];
m5_163 -> m5_172  [key=0, style=solid];
m5_163 -> m5_29  [key=2, style=dotted];
m5_166 -> m5_172  [key=0, style=solid];
m5_168 -> m5_172  [key=0, style=solid];
m5_170 -> m5_172  [key=0, style=solid];
m5_172 -> m5_159  [color=blue, key=0, style=bold];
m5_359 -> m5_360  [key=0, style=solid];
m5_359 -> m5_363  [color=darkseagreen4, key=1, label=bool, style=dashed];
m5_359 -> m5_68  [color=darkorchid, key=3, label="Parameter variable bool updateIndex", style=bold];
m5_360 -> m5_361  [key=0, style=solid];
m5_360 -> m5_362  [key=0, style=solid];
m5_360 -> m5_44  [key=2, style=dotted];
m5_363 -> m5_364  [key=0, style=solid];
m5_363 -> m5_365  [key=0, style=solid];
m5_361 -> m5_363  [key=0, style=solid];
m5_362 -> m5_363  [key=0, style=solid];
m5_362 -> m5_366  [key=2, style=dotted];
m5_364 -> m5_365  [key=0, style=solid];
m5_364 -> m5_24  [key=2, style=dotted];
m5_365 -> m5_359  [color=blue, key=0, style=bold];
m5_12 -> m5_13  [key=0, style=solid];
m5_12 -> m5_15  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonContainerType", style=dashed];
m5_12 -> m5_19  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonContainerType", style=dashed];
m5_12 -> m5_310  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonContainerType value", style=bold];
m5_12 -> m5_334  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonContainerType value", style=bold];
m5_12 -> m5_337  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonContainerType value", style=bold];
m5_13 -> m5_14  [key=0, style=solid];
m5_13 -> m5_24  [key=2, style=dotted];
m5_15 -> m5_23  [key=0, style=solid];
m5_15 -> m5_25  [key=2, style=dotted];
m5_19 -> m5_20  [key=0, style=solid];
m5_19 -> m5_25  [key=2, style=dotted];
m5_14 -> m5_15  [key=0, style=solid];
m5_14 -> m5_16  [key=0, style=solid];
m5_16 -> m5_17  [key=0, style=solid];
m5_16 -> m5_18  [key=0, style=solid];
m5_17 -> m5_18  [key=0, style=solid];
m5_17 -> m5_26  [key=2, style=dotted];
m5_18 -> m5_19  [key=0, style=solid];
m5_18 -> m5_27  [key=2, style=dotted];
m5_20 -> m5_21  [key=0, style=solid];
m5_20 -> m5_23  [key=0, style=solid];
m5_21 -> m5_22  [key=0, style=solid];
m5_22 -> m5_23  [key=0, style=solid];
m5_22 -> m5_28  [key=2, style=dotted];
m5_22 -> m5_29  [key=2, style=dotted];
m5_23 -> m5_12  [color=blue, key=0, style=bold];
m5_106 -> m5_107  [key=0, style=solid];
m5_106 -> m5_111  [color=darkorchid, key=3, label="method methodReturn byte[] ReadAsBytes", style=bold];
m5_106 -> m5_119  [color=darkorchid, key=3, label="method methodReturn byte[] ReadAsBytes", style=bold];
m5_106 -> m5_55  [color=darkorchid, key=3, label="method methodReturn byte[] ReadAsBytes", style=bold];
m5_106 -> m5_134  [color=darkorchid, key=3, label="method methodReturn byte[] ReadAsBytes", style=bold];
m5_106 -> m5_148  [color=darkorchid, key=3, label="method methodReturn byte[] ReadAsBytes", style=bold];
m5_107 -> m5_108  [key=0, style=solid];
m5_107 -> m5_66  [key=2, style=dotted];
m5_107 -> m5_141  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_108 -> m5_109  [key=0, style=solid];
m5_108 -> m5_117  [key=0, style=solid];
m5_108 -> m5_128  [key=0, style=solid];
m5_108 -> m5_132  [key=0, style=solid];
m5_108 -> m5_138  [key=0, style=solid];
m5_141 -> m5_140  [key=0, style=solid];
m5_141 -> m5_28  [key=2, style=dotted];
m5_141 -> m5_29  [key=2, style=dotted];
m5_109 -> m5_110  [key=0, style=solid];
m5_117 -> m5_118  [key=0, style=solid];
m5_128 -> m5_129  [key=0, style=solid];
m5_132 -> m5_133  [key=0, style=solid];
m5_138 -> m5_139  [key=0, style=solid];
m5_110 -> m5_111  [key=0, style=solid];
m5_110 -> m5_142  [key=2, style=dotted];
m5_111 -> m5_112  [key=0, style=solid];
m5_111 -> m5_106  [key=2, style=dotted];
m5_111 -> m5_115  [color=darkseagreen4, key=1, label=data, style=dashed];
m5_111 -> m5_116  [color=darkseagreen4, key=1, label=data, style=dashed];
m5_112 -> m5_113  [key=0, style=solid];
m5_112 -> m5_143  [key=2, style=dotted];
m5_115 -> m5_116  [key=0, style=solid];
m5_115 -> m5_68  [key=2, style=dotted];
m5_116 -> m5_140  [key=0, style=solid];
m5_113 -> m5_114  [key=0, style=solid];
m5_113 -> m5_115  [key=0, style=solid];
m5_114 -> m5_140  [key=0, style=solid];
m5_114 -> m5_28  [key=2, style=dotted];
m5_114 -> m5_29  [key=2, style=dotted];
m5_118 -> m5_119  [key=0, style=solid];
m5_118 -> m5_121  [color=darkseagreen4, key=1, label=s, style=dashed];
m5_118 -> m5_123  [color=darkseagreen4, key=1, label=s, style=dashed];
m5_118 -> m5_125  [color=darkseagreen4, key=1, label=s, style=dashed];
m5_119 -> m5_120  [key=0, style=solid];
m5_121 -> m5_122  [key=0, style=solid];
m5_121 -> m5_123  [key=0, style=solid];
m5_123 -> m5_124  [key=0, style=solid];
m5_123 -> m5_125  [key=0, style=solid];
m5_123 -> m5_145  [key=2, style=dotted];
m5_125 -> m5_126  [key=0, style=solid];
m5_125 -> m5_147  [key=2, style=dotted];
m5_125 -> m5_127  [color=darkseagreen4, key=1, label=data, style=dashed];
m5_120 -> m5_121  [key=0, style=solid];
m5_122 -> m5_126  [key=0, style=solid];
m5_122 -> m5_144  [key=2, style=dotted];
m5_122 -> m5_127  [color=darkseagreen4, key=1, label=data, style=dashed];
m5_124 -> m5_126  [key=0, style=solid];
m5_124 -> m5_146  [key=2, style=dotted];
m5_124 -> m5_124  [color=darkseagreen4, key=1, label=g, style=dashed];
m5_124 -> m5_127  [color=darkseagreen4, key=1, label=data, style=dashed];
m5_126 -> m5_127  [key=0, style=solid];
m5_126 -> m5_68  [key=2, style=dotted];
m5_127 -> m5_140  [key=0, style=solid];
m5_129 -> m5_130  [key=0, style=solid];
m5_130 -> m5_131  [key=0, style=solid];
m5_131 -> m5_140  [key=0, style=solid];
m5_133 -> m5_134  [key=0, style=solid];
m5_133 -> m5_137  [key=0, style=solid];
m5_134 -> m5_135  [key=0, style=solid];
m5_134 -> m5_146  [key=2, style=dotted];
m5_134 -> m5_136  [color=darkseagreen4, key=1, label=data, style=dashed];
m5_137 -> m5_140  [key=0, style=solid];
m5_135 -> m5_136  [key=0, style=solid];
m5_135 -> m5_68  [key=2, style=dotted];
m5_136 -> m5_140  [key=0, style=solid];
m5_139 -> m5_140  [key=0, style=solid];
m5_139 -> m5_148  [key=2, style=dotted];
m5_140 -> m5_106  [color=blue, key=0, style=bold];
m5_148 -> m5_149  [key=0, style=solid];
m5_148 -> m5_154  [color=darkorchid, key=3, label="method methodReturn byte[] ReadArrayIntoByteArray", style=bold];
m5_149 -> m5_150  [key=0, style=solid];
m5_149 -> m5_26  [key=2, style=dotted];
m5_149 -> m5_153  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m5_149 -> m5_154  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m5_150 -> m5_151  [key=0, style=solid];
m5_150 -> m5_157  [key=0, style=solid];
m5_153 -> m5_154  [key=0, style=solid];
m5_153 -> m5_150  [key=0, style=solid];
m5_153 -> m5_159  [key=2, style=dotted];
m5_154 -> m5_155  [key=0, style=solid];
m5_154 -> m5_160  [key=2, style=dotted];
m5_154 -> m5_156  [color=darkseagreen4, key=1, label=d, style=dashed];
m5_151 -> m5_152  [key=0, style=solid];
m5_151 -> m5_153  [key=0, style=solid];
m5_151 -> m5_47  [key=2, style=dotted];
m5_152 -> m5_153  [key=0, style=solid];
m5_152 -> m5_158  [key=2, style=dotted];
m5_155 -> m5_156  [key=0, style=solid];
m5_155 -> m5_68  [key=2, style=dotted];
m5_156 -> m5_157  [key=0, style=solid];
m5_157 -> m5_148  [color=blue, key=0, style=bold];
m5_266 -> m5_267  [key=0, style=solid];
m5_266 -> m5_55  [color=darkorchid, key=3, label="method methodReturn System.DateTime? ReadAsDateTime", style=bold];
m5_266 -> m5_279  [color=darkorchid, key=3, label="method methodReturn System.DateTime? ReadAsDateTime", style=bold];
m5_267 -> m5_268  [key=0, style=solid];
m5_267 -> m5_272  [key=0, style=solid];
m5_267 -> m5_274  [key=0, style=solid];
m5_267 -> m5_66  [key=2, style=dotted];
m5_268 -> m5_269  [key=0, style=solid];
m5_272 -> m5_273  [key=0, style=solid];
m5_274 -> m5_275  [key=0, style=solid];
m5_269 -> m5_270  [key=0, style=solid];
m5_270 -> m5_271  [key=0, style=solid];
m5_271 -> m5_278  [key=0, style=solid];
m5_273 -> m5_278  [key=0, style=solid];
m5_275 -> m5_276  [key=0, style=solid];
m5_276 -> m5_278  [key=0, style=solid];
m5_276 -> m5_279  [key=2, style=dotted];
m5_277 -> m5_278  [key=0, style=solid];
m5_277 -> m5_28  [key=2, style=dotted];
m5_277 -> m5_29  [key=2, style=dotted];
m5_278 -> m5_266  [color=blue, key=0, style=bold];
m5_49 -> m5_50  [key=0, style=solid];
m5_49 -> m5_55  [color=darkorchid, key=3, label="method methodReturn int? ReadAsInt32", style=bold];
m5_49 -> m5_69  [color=darkorchid, key=3, label="method methodReturn int? ReadAsInt32", style=bold];
m5_50 -> m5_51  [key=0, style=solid];
m5_50 -> m5_66  [key=2, style=dotted];
m5_50 -> m5_65  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_51 -> m5_52  [key=0, style=solid];
m5_51 -> m5_56  [key=0, style=solid];
m5_51 -> m5_61  [key=0, style=solid];
m5_65 -> m5_64  [key=0, style=solid];
m5_65 -> m5_28  [key=2, style=dotted];
m5_65 -> m5_29  [key=2, style=dotted];
m5_52 -> m5_53  [key=0, style=solid];
m5_56 -> m5_57  [key=0, style=solid];
m5_61 -> m5_62  [key=0, style=solid];
m5_53 -> m5_54  [key=0, style=solid];
m5_54 -> m5_55  [key=0, style=solid];
m5_55 -> m5_64  [key=0, style=solid];
m5_57 -> m5_58  [key=0, style=solid];
m5_58 -> m5_59  [key=0, style=solid];
m5_58 -> m5_60  [key=0, style=solid];
m5_59 -> m5_60  [key=0, style=solid];
m5_59 -> m5_67  [key=2, style=dotted];
m5_59 -> m5_68  [key=2, style=dotted];
m5_60 -> m5_64  [key=0, style=solid];
m5_62 -> m5_63  [key=0, style=solid];
m5_63 -> m5_64  [key=0, style=solid];
m5_63 -> m5_69  [key=2, style=dotted];
m5_64 -> m5_49  [color=blue, key=0, style=bold];
m5_174 -> m5_175  [key=0, style=solid];
m5_174 -> m5_55  [color=darkorchid, key=3, label="method methodReturn double? ReadAsDouble", style=bold];
m5_174 -> m5_193  [color=darkorchid, key=3, label="method methodReturn double? ReadAsDouble", style=bold];
m5_175 -> m5_176  [key=0, style=solid];
m5_175 -> m5_66  [key=2, style=dotted];
m5_175 -> m5_191  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_176 -> m5_177  [key=0, style=solid];
m5_176 -> m5_181  [key=0, style=solid];
m5_176 -> m5_188  [key=0, style=solid];
m5_191 -> m5_190  [key=0, style=solid];
m5_191 -> m5_28  [key=2, style=dotted];
m5_191 -> m5_29  [key=2, style=dotted];
m5_177 -> m5_178  [key=0, style=solid];
m5_181 -> m5_182  [key=0, style=solid];
m5_188 -> m5_189  [key=0, style=solid];
m5_178 -> m5_179  [key=0, style=solid];
m5_179 -> m5_180  [key=0, style=solid];
m5_180 -> m5_190  [key=0, style=solid];
m5_182 -> m5_183  [key=0, style=solid];
m5_183 -> m5_184  [key=0, style=solid];
m5_183 -> m5_187  [key=0, style=solid];
m5_184 -> m5_185  [key=0, style=solid];
m5_187 -> m5_190  [key=0, style=solid];
m5_185 -> m5_186  [key=0, style=solid];
m5_185 -> m5_192  [key=2, style=dotted];
m5_186 -> m5_187  [key=0, style=solid];
m5_186 -> m5_68  [key=2, style=dotted];
m5_189 -> m5_190  [key=0, style=solid];
m5_189 -> m5_193  [key=2, style=dotted];
m5_190 -> m5_174  [color=blue, key=0, style=bold];
m5_82 -> m5_83  [key=0, style=solid];
m5_82 -> m5_55  [color=darkorchid, key=3, label="method methodReturn string ReadAsString", style=bold];
m5_82 -> m5_93  [color=darkorchid, key=3, label="method methodReturn string ReadAsString", style=bold];
m5_83 -> m5_84  [key=0, style=solid];
m5_83 -> m5_66  [key=2, style=dotted];
m5_83 -> m5_91  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_83 -> m5_101  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_84 -> m5_85  [key=0, style=solid];
m5_84 -> m5_89  [key=0, style=solid];
m5_91 -> m5_92  [key=0, style=solid];
m5_91 -> m5_101  [key=0, style=solid];
m5_91 -> m5_103  [key=2, style=dotted];
m5_101 -> m5_102  [key=0, style=solid];
m5_101 -> m5_28  [key=2, style=dotted];
m5_101 -> m5_29  [key=2, style=dotted];
m5_85 -> m5_86  [key=0, style=solid];
m5_89 -> m5_90  [key=0, style=solid];
m5_86 -> m5_87  [key=0, style=solid];
m5_87 -> m5_88  [key=0, style=solid];
m5_88 -> m5_102  [key=0, style=solid];
m5_90 -> m5_102  [key=0, style=solid];
m5_92 -> m5_93  [key=0, style=solid];
m5_92 -> m5_101  [key=0, style=solid];
m5_93 -> m5_94  [key=0, style=solid];
m5_94 -> m5_95  [key=0, style=solid];
m5_94 -> m5_96  [color=darkseagreen4, key=1, label=formattable, style=dashed];
m5_95 -> m5_96  [key=0, style=solid];
m5_95 -> m5_97  [key=0, style=solid];
m5_96 -> m5_99  [key=0, style=solid];
m5_96 -> m5_104  [key=2, style=dotted];
m5_96 -> m5_100  [color=darkseagreen4, key=1, label=s, style=dashed];
m5_97 -> m5_98  [key=0, style=solid];
m5_98 -> m5_99  [key=0, style=solid];
m5_98 -> m5_105  [key=2, style=dotted];
m5_98 -> m5_100  [color=darkseagreen4, key=1, label=s, style=dashed];
m5_99 -> m5_100  [key=0, style=solid];
m5_99 -> m5_68  [key=2, style=dotted];
m5_100 -> m5_102  [key=0, style=solid];
m5_102 -> m5_82  [color=blue, key=0, style=bold];
m5_419 -> m5_420  [key=0, style=solid];
m5_420 -> m5_421  [key=0, style=solid];
m5_420 -> m5_422  [key=0, style=solid];
m5_420 -> m5_47  [key=2, style=dotted];
m5_421 -> m5_422  [key=0, style=solid];
m5_421 -> m5_423  [key=2, style=dotted];
m5_422 -> m5_419  [color=blue, key=0, style=bold];
m5_143 -> m5_297  [key=0, style=solid];
m5_297 -> m5_298  [key=0, style=solid];
m5_297 -> m5_299  [key=0, style=solid];
m5_297 -> m5_47  [key=2, style=dotted];
m5_298 -> m5_299  [key=0, style=solid];
m5_298 -> m5_300  [key=2, style=dotted];
m5_299 -> m5_143  [color=blue, key=0, style=bold];
m5_414 -> m5_415  [key=0, style=solid];
m5_415 -> m5_416  [key=0, style=solid];
m5_416 -> m5_417  [key=0, style=solid];
m5_417 -> m5_418  [key=0, style=solid];
m5_418 -> m5_414  [color=blue, key=0, style=bold];
m5_405 -> m5_406  [key=0, style=solid];
m5_406 -> m5_407  [key=0, style=solid];
m5_406 -> m5_409  [key=2, style=dotted];
m5_407 -> m5_408  [key=0, style=solid];
m5_407 -> m5_410  [key=2, style=dotted];
m5_408 -> m5_405  [color=blue, key=0, style=bold];
m5_279 -> m5_280  [key=0, style=solid];
m5_279 -> m5_284  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_279 -> m5_288  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_279 -> m5_292  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_279 -> m5_275  [color=darkorchid, key=3, label="Parameter variable string s", style=bold];
m5_279 -> m5_55  [color=darkorchid, key=3, label="method methodReturn System.DateTime? ReadDateTimeString", style=bold];
m5_279 -> m5_283  [color=darkorchid, key=3, label="method methodReturn System.DateTime? ReadDateTimeString", style=bold];
m5_280 -> m5_281  [key=0, style=solid];
m5_280 -> m5_283  [key=0, style=solid];
m5_280 -> m5_80  [key=2, style=dotted];
m5_284 -> m5_285  [key=0, style=solid];
m5_284 -> m5_288  [key=0, style=solid];
m5_284 -> m5_294  [key=2, style=dotted];
m5_288 -> m5_289  [key=0, style=solid];
m5_288 -> m5_292  [key=0, style=solid];
m5_288 -> m5_296  [key=2, style=dotted];
m5_292 -> m5_293  [key=0, style=solid];
m5_292 -> m5_28  [key=2, style=dotted];
m5_292 -> m5_29  [key=2, style=dotted];
m5_281 -> m5_282  [key=0, style=solid];
m5_281 -> m5_68  [key=2, style=dotted];
m5_283 -> m5_284  [key=0, style=solid];
m5_282 -> m5_293  [key=0, style=solid];
m5_285 -> m5_286  [key=0, style=solid];
m5_285 -> m5_295  [key=2, style=dotted];
m5_285 -> m5_285  [color=darkseagreen4, key=1, label=dt, style=dashed];
m5_285 -> m5_287  [color=darkseagreen4, key=1, label=dt, style=dashed];
m5_286 -> m5_287  [key=0, style=solid];
m5_286 -> m5_68  [key=2, style=dotted];
m5_287 -> m5_293  [key=0, style=solid];
m5_289 -> m5_290  [key=0, style=solid];
m5_289 -> m5_295  [key=2, style=dotted];
m5_289 -> m5_289  [color=darkseagreen4, key=1, label=dt, style=dashed];
m5_289 -> m5_291  [color=darkseagreen4, key=1, label=dt, style=dashed];
m5_290 -> m5_291  [key=0, style=solid];
m5_290 -> m5_68  [key=2, style=dotted];
m5_291 -> m5_293  [key=0, style=solid];
m5_293 -> m5_279  [color=blue, key=0, style=bold];
m5_68 -> m5_326  [key=0, style=solid];
m5_68 -> m5_327  [color=darkseagreen4, key=1, label=object, style=dashed];
m5_68 -> m5_328  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonToken", style=dashed];
m5_68 -> m5_346  [color=darkseagreen4, key=1, label=object, style=dashed];
m5_68 -> m5_356  [color=darkseagreen4, key=1, label=bool, style=dashed];
m5_68 -> m5_59  [color=darkorchid, key=3, label="Parameter variable bool updateIndex", style=bold];
m5_68 -> m5_71  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonToken newToken", style=bold];
m5_68 -> m5_77  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonToken newToken", style=bold];
m5_68 -> m5_115  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonToken newToken", style=bold];
m5_68 -> m5_186  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonToken newToken", style=bold];
m5_68 -> m5_216  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonToken newToken", style=bold];
m5_68 -> m5_286  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonToken newToken", style=bold];
m5_68 -> m5_158  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonToken newToken", style=bold];
m5_68 -> m5_323  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m5_68 -> m5_321  [color=darkorchid, key=3, label="Parameter variable bool updateIndex", style=bold];
m5_68 -> m5_55  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m5_68 -> m5_73  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m5_68 -> m5_69  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m5_68 -> m5_93  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m5_68 -> m5_111  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m5_68 -> m5_119  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m5_68 -> m5_134  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m5_68 -> m5_154  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m5_68 -> m5_184  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m5_68 -> m5_197  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m5_68 -> m5_193  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m5_68 -> m5_214  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m5_68 -> m5_229  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m5_68 -> m5_225  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m5_68 -> m5_258  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m5_68 -> m5_254  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m5_68 -> m5_283  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m5_326 -> m5_327  [key=0, style=solid];
m5_327 -> m5_328  [key=0, style=solid];
m5_328 -> m5_329  [key=0, style=solid];
m5_328 -> m5_332  [key=0, style=solid];
m5_328 -> m5_335  [key=0, style=solid];
m5_328 -> m5_338  [key=0, style=solid];
m5_328 -> m5_340  [key=0, style=solid];
m5_328 -> m5_342  [key=0, style=solid];
m5_328 -> m5_344  [key=0, style=solid];
m5_328 -> m5_347  [key=0, style=solid];
m5_346 -> m5_357  [key=0, style=solid];
m5_356 -> m5_357  [key=0, style=solid];
m5_356 -> m5_359  [key=2, style=dotted];
m5_329 -> m5_330  [key=0, style=solid];
m5_332 -> m5_333  [key=0, style=solid];
m5_335 -> m5_336  [key=0, style=solid];
m5_338 -> m5_339  [key=0, style=solid];
m5_340 -> m5_341  [key=0, style=solid];
m5_342 -> m5_343  [key=0, style=solid];
m5_344 -> m5_345  [key=0, style=solid];
m5_347 -> m5_348  [key=0, style=solid];
m5_330 -> m5_331  [key=0, style=solid];
m5_331 -> m5_357  [key=0, style=solid];
m5_331 -> m5_12  [key=2, style=dotted];
m5_333 -> m5_334  [key=0, style=solid];
m5_334 -> m5_357  [key=0, style=solid];
m5_334 -> m5_12  [key=2, style=dotted];
m5_336 -> m5_337  [key=0, style=solid];
m5_337 -> m5_357  [key=0, style=solid];
m5_337 -> m5_12  [key=2, style=dotted];
m5_339 -> m5_357  [key=0, style=solid];
m5_339 -> m5_358  [key=2, style=dotted];
m5_341 -> m5_357  [key=0, style=solid];
m5_341 -> m5_358  [key=2, style=dotted];
m5_343 -> m5_357  [key=0, style=solid];
m5_343 -> m5_358  [key=2, style=dotted];
m5_345 -> m5_346  [key=0, style=solid];
m5_348 -> m5_349  [key=0, style=solid];
m5_349 -> m5_350  [key=0, style=solid];
m5_350 -> m5_351  [key=0, style=solid];
m5_351 -> m5_352  [key=0, style=solid];
m5_352 -> m5_353  [key=0, style=solid];
m5_353 -> m5_354  [key=0, style=solid];
m5_354 -> m5_355  [key=0, style=solid];
m5_355 -> m5_356  [key=0, style=solid];
m5_357 -> m5_68  [color=blue, key=0, style=bold];
m5_313 -> m5_314  [key=0, style=solid];
m5_314 -> m5_315  [key=0, style=solid];
m5_314 -> m5_316  [key=0, style=solid];
m5_315 -> m5_316  [key=0, style=solid];
m5_315 -> m5_47  [key=2, style=dotted];
m5_316 -> m5_317  [key=0, style=solid];
m5_316 -> m5_319  [key=0, style=solid];
m5_316 -> m5_320  [key=2, style=dotted];
m5_317 -> m5_318  [key=0, style=solid];
m5_318 -> m5_318  [key=0, style=solid];
m5_318 -> m5_319  [key=0, style=solid];
m5_318 -> m5_47  [key=2, style=dotted];
m5_319 -> m5_313  [color=blue, key=0, style=bold];
m5_379 -> m5_380  [key=0, style=solid];
m5_380 -> m5_381  [key=0, style=solid];
m5_380 -> m5_44  [key=2, style=dotted];
m5_380 -> m5_390  [color=darkseagreen4, key=1, label=currentObject, style=dashed];
m5_381 -> m5_382  [key=0, style=solid];
m5_381 -> m5_384  [key=0, style=solid];
m5_381 -> m5_386  [key=0, style=solid];
m5_381 -> m5_388  [key=0, style=solid];
m5_381 -> m5_390  [key=0, style=solid];
m5_390 -> m5_391  [key=0, style=solid];
m5_390 -> m5_28  [key=2, style=dotted];
m5_390 -> m5_29  [key=2, style=dotted];
m5_382 -> m5_383  [key=0, style=solid];
m5_384 -> m5_385  [key=0, style=solid];
m5_386 -> m5_387  [key=0, style=solid];
m5_388 -> m5_389  [key=0, style=solid];
m5_383 -> m5_391  [key=0, style=solid];
m5_385 -> m5_391  [key=0, style=solid];
m5_387 -> m5_391  [key=0, style=solid];
m5_389 -> m5_391  [key=0, style=solid];
m5_389 -> m5_366  [key=2, style=dotted];
m5_391 -> m5_379  [color=blue, key=0, style=bold];
m5_0 -> m5_1  [key=0, style=solid];
m5_0 -> m5_2  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_3  [key=0, style=solid];
m5_2 -> m5_4  [key=0, style=solid];
m5_3 -> m5_4  [key=0, style=solid];
m5_4 -> m5_0  [color=blue, key=0, style=bold];
m5_237 -> m5_238  [key=0, style=solid];
m5_237 -> m5_55  [color=darkorchid, key=3, label="method methodReturn decimal? ReadAsDecimal", style=bold];
m5_237 -> m5_254  [color=darkorchid, key=3, label="method methodReturn decimal? ReadAsDecimal", style=bold];
m5_238 -> m5_239  [key=0, style=solid];
m5_238 -> m5_66  [key=2, style=dotted];
m5_238 -> m5_252  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_239 -> m5_240  [key=0, style=solid];
m5_239 -> m5_244  [key=0, style=solid];
m5_239 -> m5_249  [key=0, style=solid];
m5_252 -> m5_251  [key=0, style=solid];
m5_252 -> m5_28  [key=2, style=dotted];
m5_252 -> m5_29  [key=2, style=dotted];
m5_240 -> m5_241  [key=0, style=solid];
m5_244 -> m5_245  [key=0, style=solid];
m5_249 -> m5_250  [key=0, style=solid];
m5_241 -> m5_242  [key=0, style=solid];
m5_242 -> m5_243  [key=0, style=solid];
m5_243 -> m5_251  [key=0, style=solid];
m5_245 -> m5_246  [key=0, style=solid];
m5_246 -> m5_247  [key=0, style=solid];
m5_246 -> m5_248  [key=0, style=solid];
m5_247 -> m5_248  [key=0, style=solid];
m5_247 -> m5_253  [key=2, style=dotted];
m5_247 -> m5_68  [key=2, style=dotted];
m5_248 -> m5_251  [key=0, style=solid];
m5_250 -> m5_251  [key=0, style=solid];
m5_250 -> m5_254  [key=2, style=dotted];
m5_251 -> m5_237  [color=blue, key=0, style=bold];
m5_44 -> m5_45  [key=0, style=solid];
m5_45 -> m5_46  [key=0, style=solid];
m5_46 -> m5_44  [color=blue, key=0, style=bold];
m5_300 -> m5_301  [key=0, style=solid];
m5_301 -> m5_302  [key=0, style=solid];
m5_301 -> m5_29  [key=2, style=dotted];
m5_302 -> m5_300  [color=blue, key=0, style=bold];
m5_366 -> m5_392  [key=0, style=solid];
m5_392 -> m5_393  [key=0, style=solid];
m5_392 -> m5_394  [key=0, style=solid];
m5_393 -> m5_395  [key=0, style=solid];
m5_394 -> m5_395  [key=0, style=solid];
m5_395 -> m5_366  [color=blue, key=0, style=bold];
m5_427 -> m5_428  [key=0, style=solid];
m5_427 -> m5_59  [color=darkorchid, key=3, label="method methodReturn bool MoveToContent", style=bold];
m5_427 -> m5_321  [color=darkorchid, key=3, label="method methodReturn bool MoveToContent", style=bold];
m5_428 -> m5_429  [key=0, style=solid];
m5_429 -> m5_430  [key=0, style=solid];
m5_429 -> m5_433  [key=0, style=solid];
m5_430 -> m5_431  [key=0, style=solid];
m5_430 -> m5_432  [key=0, style=solid];
m5_430 -> m5_47  [key=2, style=dotted];
m5_433 -> m5_434  [key=0, style=solid];
m5_431 -> m5_434  [key=0, style=solid];
m5_432 -> m5_429  [key=0, style=solid];
m5_434 -> m5_427  [color=blue, key=0, style=bold];
m5_323 -> m5_324  [key=0, style=solid];
m5_324 -> m5_325  [key=0, style=solid];
m5_324 -> m5_68  [key=2, style=dotted];
m5_325 -> m5_323  [color=blue, key=0, style=bold];
m5_47 -> m5_48  [key=0, style=solid];
m5_48 -> m5_47  [color=blue, key=0, style=bold];
m5_225 -> m5_226  [key=0, style=solid];
m5_225 -> m5_230  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_225 -> m5_233  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_225 -> m5_234  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_225 -> m5_55  [color=darkorchid, key=3, label="method methodReturn bool? ReadBooleanString", style=bold];
m5_225 -> m5_229  [color=darkorchid, key=3, label="method methodReturn bool? ReadBooleanString", style=bold];
m5_226 -> m5_227  [key=0, style=solid];
m5_226 -> m5_229  [key=0, style=solid];
m5_226 -> m5_80  [key=2, style=dotted];
m5_230 -> m5_231  [key=0, style=solid];
m5_230 -> m5_233  [key=0, style=solid];
m5_230 -> m5_236  [key=2, style=dotted];
m5_230 -> m5_232  [color=darkseagreen4, key=1, label=b, style=dashed];
m5_233 -> m5_234  [key=0, style=solid];
m5_233 -> m5_68  [key=2, style=dotted];
m5_234 -> m5_235  [key=0, style=solid];
m5_234 -> m5_28  [key=2, style=dotted];
m5_234 -> m5_29  [key=2, style=dotted];
m5_227 -> m5_228  [key=0, style=solid];
m5_227 -> m5_68  [key=2, style=dotted];
m5_229 -> m5_230  [key=0, style=solid];
m5_228 -> m5_235  [key=0, style=solid];
m5_231 -> m5_232  [key=0, style=solid];
m5_231 -> m5_68  [key=2, style=dotted];
m5_232 -> m5_235  [key=0, style=solid];
m5_235 -> m5_225  [color=blue, key=0, style=bold];
m5_66 -> m5_435  [key=0, style=solid];
m5_66 -> m5_152  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.JsonToken GetContentToken", style=bold];
m5_435 -> m5_436  [key=0, style=solid];
m5_435 -> m5_440  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_435 -> m5_441  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_436 -> m5_437  [key=0, style=solid];
m5_436 -> m5_439  [key=0, style=solid];
m5_436 -> m5_47  [key=2, style=dotted];
m5_440 -> m5_435  [key=0, style=solid];
m5_440 -> m5_441  [key=0, style=solid];
m5_441 -> m5_442  [key=0, style=solid];
m5_437 -> m5_438  [key=0, style=solid];
m5_437 -> m5_158  [key=2, style=dotted];
m5_439 -> m5_440  [key=0, style=solid];
m5_439 -> m5_441  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_438 -> m5_442  [key=0, style=solid];
m5_442 -> m5_66  [color=blue, key=0, style=bold];
m5_193 -> m5_194  [key=0, style=solid];
m5_193 -> m5_198  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_193 -> m5_201  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_193 -> m5_202  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_193 -> m5_55  [color=darkorchid, key=3, label="method methodReturn double? ReadDoubleString", style=bold];
m5_193 -> m5_197  [color=darkorchid, key=3, label="method methodReturn double? ReadDoubleString", style=bold];
m5_194 -> m5_195  [key=0, style=solid];
m5_194 -> m5_197  [key=0, style=solid];
m5_194 -> m5_80  [key=2, style=dotted];
m5_198 -> m5_199  [key=0, style=solid];
m5_198 -> m5_201  [key=0, style=solid];
m5_198 -> m5_204  [key=2, style=dotted];
m5_198 -> m5_200  [color=darkseagreen4, key=1, label=d, style=dashed];
m5_201 -> m5_202  [key=0, style=solid];
m5_201 -> m5_68  [key=2, style=dotted];
m5_202 -> m5_203  [key=0, style=solid];
m5_202 -> m5_28  [key=2, style=dotted];
m5_202 -> m5_29  [key=2, style=dotted];
m5_195 -> m5_196  [key=0, style=solid];
m5_195 -> m5_68  [key=2, style=dotted];
m5_197 -> m5_198  [key=0, style=solid];
m5_196 -> m5_203  [key=0, style=solid];
m5_199 -> m5_200  [key=0, style=solid];
m5_199 -> m5_68  [key=2, style=dotted];
m5_200 -> m5_203  [key=0, style=solid];
m5_203 -> m5_193  [color=blue, key=0, style=bold];
m5_377 -> m5_396  [key=0, style=solid];
m5_377 -> m5_403  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonToken", style=dashed];
m5_377 -> m5_358  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonToken token", style=bold];
m5_377 -> m5_310  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.JsonContainerType GetTypeForCloseToken", style=bold];
m5_377 -> m5_334  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.JsonContainerType GetTypeForCloseToken", style=bold];
m5_377 -> m5_337  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.JsonContainerType GetTypeForCloseToken", style=bold];
m5_396 -> m5_397  [key=0, style=solid];
m5_396 -> m5_399  [key=0, style=solid];
m5_396 -> m5_401  [key=0, style=solid];
m5_396 -> m5_403  [key=0, style=solid];
m5_403 -> m5_404  [key=0, style=solid];
m5_403 -> m5_28  [key=2, style=dotted];
m5_403 -> m5_29  [key=2, style=dotted];
m5_397 -> m5_398  [key=0, style=solid];
m5_399 -> m5_400  [key=0, style=solid];
m5_401 -> m5_402  [key=0, style=solid];
m5_398 -> m5_404  [key=0, style=solid];
m5_400 -> m5_404  [key=0, style=solid];
m5_402 -> m5_404  [key=0, style=solid];
m5_404 -> m5_377  [color=blue, key=0, style=bold];
m5_30 -> m5_31  [key=0, style=solid];
m5_31 -> m5_32  [key=0, style=solid];
m5_32 -> m5_33  [key=0, style=solid];
m5_32 -> m5_36  [key=0, style=solid];
m5_33 -> m5_34  [key=0, style=solid];
m5_33 -> m5_40  [color=darkseagreen4, key=1, label=oldPosition, style=dashed];
m5_36 -> m5_37  [key=0, style=solid];
m5_36 -> m5_40  [color=darkseagreen4, key=1, label=oldPosition, style=dashed];
m5_34 -> m5_35  [key=0, style=solid];
m5_40 -> m5_41  [key=0, style=solid];
m5_35 -> m5_38  [key=0, style=solid];
m5_35 -> m5_42  [key=2, style=dotted];
m5_37 -> m5_38  [key=0, style=solid];
m5_37 -> m5_43  [key=2, style=dotted];
m5_38 -> m5_39  [key=0, style=solid];
m5_38 -> m5_40  [key=0, style=solid];
m5_39 -> m5_40  [key=0, style=solid];
m5_41 -> m5_30  [color=blue, key=0, style=bold];
m5_443 -> m5_1  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_2  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_3  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_6  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_7  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_8  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_9  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_10  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_13  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_14  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_15  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_16  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_17  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_18  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_19  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_20  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_21  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_22  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_32  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_33  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_34  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_35  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_36  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_37  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_38  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_39  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_45  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_50  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_58  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_59  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_60  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_62  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_63  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_65  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_71  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_74  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_75  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_77  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_78  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_83  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_90  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_92  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_94  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_96  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_97  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_98  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_99  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_101  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_107  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_110  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_111  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_112  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_113  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_114  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_115  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_118  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_126  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_133  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_134  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_135  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_137  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_139  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_141  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_151  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_152  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_153  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_155  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_161  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_163  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_165  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_171  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_175  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_183  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_185  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_186  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_187  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_189  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_191  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_195  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_198  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_199  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_201  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_202  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_206  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_215  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_216  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_219  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_221  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_223  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_227  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_231  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_233  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_234  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_238  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_246  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_247  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_248  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_250  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_252  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_256  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_259  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_260  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_262  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_263  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_267  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_273  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_275  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_276  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_277  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_281  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_284  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_285  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_286  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_288  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_289  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_290  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_292  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_297  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_298  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_301  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_303  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_304  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_305  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_306  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_307  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_308  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_310  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_314  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_315  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_316  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_317  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_318  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_321  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_324  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_326  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_327  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_330  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_331  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_333  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_334  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_336  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_337  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_339  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_341  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_343  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_345  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_346  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_356  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_360  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_361  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_362  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_364  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_367  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_368  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_370  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_371  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_372  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_373  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_374  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_375  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_380  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_383  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_385  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_387  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_389  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_390  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_392  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_393  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_394  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_403  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_406  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_407  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_411  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_412  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_415  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_416  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_417  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_420  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_421  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_425  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_428  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_430  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_432  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_436  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_437  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_443 -> m5_439  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_512 -> m6_26  [key=2, style=dotted];
m6_512 -> m6_513  [key=0, style=solid];
m6_91 -> m6_25  [key=2, style=dotted];
m6_91 -> m6_92  [key=0, style=solid];
m6_91 -> m6_24  [key=2, style=dotted];
m6_836 -> m6_837  [key=0, style=solid];
m6_838 -> m6_22  [key=2, style=dotted];
m6_838 -> m6_23  [key=2, style=dotted];
m6_838 -> m6_839  [key=0, style=solid];
m6_840 -> m6_22  [key=2, style=dotted];
m6_840 -> m6_23  [key=2, style=dotted];
m6_840 -> m6_841  [key=0, style=solid];
m6_842 -> m6_22  [key=2, style=dotted];
m6_842 -> m6_23  [key=2, style=dotted];
m6_842 -> m6_843  [key=0, style=solid];
m6_844 -> m6_22  [key=2, style=dotted];
m6_844 -> m6_23  [key=2, style=dotted];
m6_844 -> m6_845  [key=0, style=solid];
m6_846 -> m6_22  [key=2, style=dotted];
m6_846 -> m6_23  [key=2, style=dotted];
m6_846 -> m6_847  [key=0, style=solid];
m6_846 -> m6_859  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_848 -> m6_22  [key=2, style=dotted];
m6_848 -> m6_23  [key=2, style=dotted];
m6_848 -> m6_849  [key=0, style=solid];
m6_848 -> m6_850  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_848 -> m6_862  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_851 -> m6_22  [key=2, style=dotted];
m6_851 -> m6_23  [key=2, style=dotted];
m6_851 -> m6_852  [key=0, style=solid];
m6_853 -> m6_22  [key=2, style=dotted];
m6_853 -> m6_23  [key=2, style=dotted];
m6_853 -> m6_854  [key=0, style=solid];
m6_855 -> m6_22  [key=2, style=dotted];
m6_855 -> m6_23  [key=2, style=dotted];
m6_855 -> m6_856  [key=0, style=solid];
m6_855 -> m6_865  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_837 -> m6_838  [key=0, style=solid];
m6_839 -> m6_840  [key=0, style=solid];
m6_839 -> m6_26  [key=2, style=dotted];
m6_839 -> m6_115  [key=2, style=dotted];
m6_841 -> m6_842  [key=0, style=solid];
m6_841 -> m6_26  [key=2, style=dotted];
m6_841 -> m6_115  [key=2, style=dotted];
m6_843 -> m6_844  [key=0, style=solid];
m6_843 -> m6_26  [key=2, style=dotted];
m6_843 -> m6_115  [key=2, style=dotted];
m6_845 -> m6_846  [key=0, style=solid];
m6_845 -> m6_26  [key=2, style=dotted];
m6_845 -> m6_115  [key=2, style=dotted];
m6_847 -> m6_848  [key=0, style=solid];
m6_847 -> m6_42  [key=2, style=dotted];
m6_847 -> m6_858  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_849 -> m6_850  [key=0, style=solid];
m6_850 -> m6_851  [key=0, style=solid];
m6_850 -> m6_42  [key=2, style=dotted];
m6_850 -> m6_861  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_852 -> m6_853  [key=0, style=solid];
m6_852 -> m6_26  [key=2, style=dotted];
m6_852 -> m6_115  [key=2, style=dotted];
m6_854 -> m6_855  [key=0, style=solid];
m6_854 -> m6_26  [key=2, style=dotted];
m6_854 -> m6_115  [key=2, style=dotted];
m6_856 -> m6_857  [key=0, style=solid];
m6_856 -> m6_42  [key=2, style=dotted];
m6_856 -> m6_864  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_857 -> m6_836  [color=blue, key=0, style=bold];
m6_1608 -> m6_1609  [key=0, style=solid];
m6_1610 -> m6_22  [key=2, style=dotted];
m6_1610 -> m6_23  [key=2, style=dotted];
m6_1610 -> m6_1611  [key=0, style=solid];
m6_1610 -> m6_1615  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1609 -> m6_1610  [key=0, style=solid];
m6_1611 -> m6_1612  [key=0, style=solid];
m6_1611 -> m6_1613  [key=2, style=dotted];
m6_1611 -> m6_1614  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1612 -> m6_1608  [color=blue, key=0, style=bold];
m6_1421 -> m6_1422  [key=0, style=solid];
m6_1422 -> m6_22  [key=2, style=dotted];
m6_1422 -> m6_23  [key=2, style=dotted];
m6_1422 -> m6_1423  [key=0, style=solid];
m6_1422 -> m6_1426  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1423 -> m6_1424  [key=0, style=solid];
m6_1423 -> m6_42  [key=2, style=dotted];
m6_1423 -> m6_1425  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1424 -> m6_1421  [color=blue, key=0, style=bold];
m6_172 -> m6_173  [key=0, style=solid];
m6_172 -> m6_177  [key=2, style=dotted];
m6_174 -> m6_22  [key=2, style=dotted];
m6_174 -> m6_23  [key=2, style=dotted];
m6_174 -> m6_175  [key=0, style=solid];
m6_174 -> m6_176  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_174 -> m6_177  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_174 -> m6_178  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_174 -> m6_179  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_174 -> m6_180  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_174 -> m6_181  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_174 -> m6_182  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_174 -> m6_183  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_174 -> m6_184  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_174 -> m6_185  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_174 -> m6_186  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_174 -> m6_187  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_174 -> m6_188  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_174 -> m6_189  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_174 -> m6_190  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_174 -> m6_21  [color=blue, key=0, style=bold];
m6_175 -> m6_25  [key=2, style=dotted];
m6_175 -> m6_176  [key=0, style=solid];
m6_175 -> m6_24  [key=2, style=dotted];
m6_175 -> m6_178  [key=0, style=solid];
m6_175 -> m6_181  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_175 -> m6_21  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m6_175 -> m6_289  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m6_177 -> m6_25  [key=2, style=dotted];
m6_177 -> m6_178  [key=0, style=solid];
m6_177 -> m6_24  [key=2, style=dotted];
m6_179 -> m6_25  [key=2, style=dotted];
m6_179 -> m6_180  [key=0, style=solid];
m6_179 -> m6_24  [key=2, style=dotted];
m6_179 -> m6_182  [key=0, style=solid];
m6_181 -> m6_25  [key=2, style=dotted];
m6_181 -> m6_182  [key=0, style=solid];
m6_181 -> m6_24  [key=2, style=dotted];
m6_181 -> m6_36  [key=2, style=dotted];
m6_181 -> m6_163  [key=2, style=dotted];
m6_181 -> m6_164  [key=2, style=dotted];
m6_183 -> m6_25  [key=2, style=dotted];
m6_183 -> m6_184  [key=0, style=solid];
m6_183 -> m6_24  [key=2, style=dotted];
m6_185 -> m6_25  [key=2, style=dotted];
m6_185 -> m6_186  [key=0, style=solid];
m6_185 -> m6_24  [key=2, style=dotted];
m6_185 -> m6_187  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_188 -> m6_25  [key=2, style=dotted];
m6_188 -> m6_189  [key=0, style=solid];
m6_188 -> m6_24  [key=2, style=dotted];
m6_188 -> m6_191  [key=0, style=solid];
m6_173 -> m6_174  [key=0, style=solid];
m6_173 -> m6_55  [key=2, style=dotted];
m6_176 -> m6_26  [key=2, style=dotted];
m6_176 -> m6_177  [key=0, style=solid];
m6_178 -> m6_26  [key=2, style=dotted];
m6_178 -> m6_179  [key=0, style=solid];
m6_178 -> m6_119  [key=2, style=dotted];
m6_178 -> m6_183  [key=2, style=dotted];
m6_180 -> m6_26  [key=2, style=dotted];
m6_180 -> m6_181  [key=0, style=solid];
m6_182 -> m6_26  [key=2, style=dotted];
m6_182 -> m6_183  [key=0, style=solid];
m6_182 -> m6_175  [color=blue, key=0, style=bold];
m6_184 -> m6_26  [key=2, style=dotted];
m6_184 -> m6_185  [key=0, style=solid];
m6_184 -> m6_126  [color=darkorchid, key=3, label="method methodReturn bool TryConvertToString", style=bold];
m6_184 -> m6_44  [color=darkorchid, key=3, label="method methodReturn bool TryConvertToString", style=bold];
m6_184 -> m6_87  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m6_184 -> m6_250  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m6_184 -> m6_193  [color=darkorchid, key=3, label="Parameter variable string s", style=bold];
m6_184 -> m6_469  [color=darkorchid, key=3, label="Parameter variable string s", style=bold];
m6_186 -> m6_26  [key=2, style=dotted];
m6_186 -> m6_187  [key=0, style=solid];
m6_186 -> m6_189  [key=0, style=solid];
m6_187 -> m6_26  [key=2, style=dotted];
m6_187 -> m6_188  [key=0, style=solid];
m6_189 -> m6_26  [key=2, style=dotted];
m6_189 -> m6_190  [key=0, style=solid];
m6_189 -> m6_191  [color=darkseagreen4, key=1, label="out string", style=dashed];
m6_190 -> m6_26  [key=2, style=dotted];
m6_190 -> m6_191  [key=0, style=solid];
m6_191 -> m6_172  [color=blue, key=0, style=bold];
m6_191 -> m6_184  [color=blue, key=0, style=bold];
m6_21 -> m6_167  [key=0, style=solid];
m6_21 -> m6_169  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_21 -> m6_170  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_21 -> m6_171  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_21 -> m6_172  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_21 -> m6_173  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_21 -> m6_2  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m6_21 -> m6_84  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonWriter writer", style=bold];
m6_21 -> m6_247  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m6_21 -> m6_83  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m6_21 -> m6_85  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonWriter writer", style=bold];
m6_21 -> m6_366  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonWriter writer", style=bold];
m6_21 -> m6_89  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonWriter writer", style=bold];
m6_21 -> m6_337  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m6_21 -> m6_379  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m6_21 -> m6_451  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m6_21 -> m6_0  [color=blue, key=0, style=bold];
m6_167 -> m6_168  [key=0, style=solid];
m6_167 -> m6_175  [key=2, style=dotted];
m6_167 -> m6_169  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_167 -> m6_172  [color=darkseagreen4, key=1, label=reference, style=dashed];
m6_167 -> m6_42  [key=2, style=dotted];
m6_169 -> m6_170  [key=0, style=solid];
m6_169 -> m6_36  [key=2, style=dotted];
m6_169 -> m6_176  [key=2, style=dotted];
m6_169 -> m6_165  [key=2, style=dotted];
m6_169 -> m6_166  [key=2, style=dotted];
m6_170 -> m6_171  [key=0, style=solid];
m6_170 -> m6_51  [key=2, style=dotted];
m6_170 -> m6_24  [key=2, style=dotted];
m6_171 -> m6_172  [key=0, style=solid];
m6_171 -> m6_53  [key=2, style=dotted];
m6_171 -> m6_169  [color=blue, key=0, style=bold];
m6_168 -> m6_169  [key=0, style=solid];
m6_168 -> m6_170  [key=0, style=solid];
m6_168 -> m6_161  [color=blue, key=0, style=bold];
m6_479 -> m6_480  [key=0, style=solid];
m6_479 -> m6_497  [key=0, style=solid];
m6_479 -> m6_501  [key=2, style=dotted];
m6_490 -> m6_22  [key=2, style=dotted];
m6_490 -> m6_23  [key=2, style=dotted];
m6_490 -> m6_491  [key=0, style=solid];
m6_490 -> m6_494  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_490 -> m6_495  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_490 -> m6_497  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m6_490 -> m6_498  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_491 -> m6_25  [key=2, style=dotted];
m6_491 -> m6_492  [key=0, style=solid];
m6_491 -> m6_24  [key=2, style=dotted];
m6_491 -> m6_497  [key=0, style=solid];
m6_491 -> m6_504  [key=2, style=dotted];
m6_494 -> m6_25  [key=2, style=dotted];
m6_494 -> m6_495  [key=0, style=solid];
m6_494 -> m6_24  [key=2, style=dotted];
m6_494 -> m6_497  [key=0, style=solid];
m6_497 -> m6_25  [key=2, style=dotted];
m6_497 -> m6_498  [key=0, style=solid];
m6_497 -> m6_24  [key=2, style=dotted];
m6_497 -> m6_250  [color=blue, key=0, style=bold];
m6_489 -> m6_490  [key=0, style=solid];
m6_489 -> m6_505  [key=2, style=dotted];
m6_489 -> m6_497  [key=0, style=solid];
m6_489 -> m6_503  [key=2, style=dotted];
m6_495 -> m6_26  [key=2, style=dotted];
m6_495 -> m6_496  [key=0, style=solid];
m6_495 -> m6_497  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m6_498 -> m6_499  [key=0, style=solid];
m6_498 -> m6_24  [key=2, style=dotted];
m6_498 -> m6_28  [key=2, style=dotted];
m6_492 -> m6_495  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_492 -> m6_493  [key=0, style=solid];
m6_492 -> m6_496  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_492 -> m6_36  [key=2, style=dotted];
m6_492 -> m6_184  [key=2, style=dotted];
m6_492 -> m6_494  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m6_493 -> m6_494  [key=0, style=solid];
m6_493 -> m6_497  [key=0, style=solid];
m6_481 -> m6_489  [color=darkseagreen4, key=1, label=sw, style=dashed];
m6_481 -> m6_482  [key=0, style=solid];
m6_481 -> m6_500  [key=2, style=dotted];
m6_488 -> m6_489  [key=0, style=solid];
m6_488 -> m6_355  [key=2, style=dotted];
m6_496 -> m6_493  [key=0, style=solid];
m6_496 -> m6_496  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_496 -> m6_497  [key=0, style=solid];
m6_496 -> m6_505  [key=2, style=dotted];
m6_480 -> m6_493  [color=darkseagreen4, key=1, label=valueCount, style=dashed];
m6_480 -> m6_481  [key=0, style=solid];
m6_480 -> m6_485  [color=darkseagreen4, key=1, label=valueCount, style=dashed];
m6_482 -> m6_488  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_482 -> m6_483  [key=0, style=solid];
m6_482 -> m6_501  [key=2, style=dotted];
m6_482 -> m6_486  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_482 -> m6_484  [color=darkseagreen4, key=1, label=d, style=dashed];
m6_485 -> m6_488  [key=0, style=solid];
m6_485 -> m6_486  [key=0, style=solid];
m6_483 -> m6_484  [key=0, style=solid];
m6_483 -> m6_502  [key=2, style=dotted];
m6_486 -> m6_487  [key=0, style=solid];
m6_486 -> m6_503  [key=2, style=dotted];
m6_484 -> m6_485  [key=0, style=solid];
m6_484 -> m6_486  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_484 -> m6_487  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_484 -> m6_497  [key=0, style=solid];
m6_484 -> m6_502  [key=2, style=dotted];
m6_487 -> m6_485  [key=0, style=solid];
m6_487 -> m6_487  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_487 -> m6_488  [key=0, style=solid];
m6_487 -> m6_489  [color=darkseagreen4, key=1, label=f, style=dashed];
m6_499 -> m6_479  [color=blue, key=0, style=bold];
m6_245 -> m6_246  [key=0, style=solid];
m6_1248 -> m6_1249  [key=0, style=solid];
m6_1250 -> m6_22  [key=2, style=dotted];
m6_1250 -> m6_23  [key=2, style=dotted];
m6_1250 -> m6_1251  [key=0, style=solid];
m6_1250 -> m6_1252  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1250 -> m6_1253  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1250 -> m6_1254  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1250 -> m6_1255  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1250 -> m6_1256  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1250 -> m6_1257  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1250 -> m6_1258  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1250 -> m6_1259  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1250 -> m6_1260  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1251 -> m6_25  [key=2, style=dotted];
m6_1251 -> m6_1252  [key=0, style=solid];
m6_1251 -> m6_24  [key=2, style=dotted];
m6_1253 -> m6_25  [key=2, style=dotted];
m6_1253 -> m6_1254  [key=0, style=solid];
m6_1253 -> m6_24  [key=2, style=dotted];
m6_1259 -> m6_25  [key=2, style=dotted];
m6_1259 -> m6_1260  [key=0, style=solid];
m6_1259 -> m6_24  [key=2, style=dotted];
m6_1249 -> m6_1250  [key=0, style=solid];
m6_1252 -> m6_26  [key=2, style=dotted];
m6_1252 -> m6_1253  [key=0, style=solid];
m6_1254 -> m6_26  [key=2, style=dotted];
m6_1254 -> m6_1255  [key=0, style=solid];
m6_1255 -> m6_1256  [key=0, style=solid];
m6_1255 -> m6_1177  [key=2, style=dotted];
m6_1256 -> m6_26  [key=2, style=dotted];
m6_1256 -> m6_1257  [key=0, style=solid];
m6_1257 -> m6_26  [key=2, style=dotted];
m6_1257 -> m6_1258  [key=0, style=solid];
m6_1258 -> m6_26  [key=2, style=dotted];
m6_1258 -> m6_1259  [key=0, style=solid];
m6_1258 -> m6_1262  [key=2, style=dotted];
m6_1258 -> m6_1263  [key=2, style=dotted];
m6_1258 -> m6_1264  [key=2, style=dotted];
m6_1260 -> m6_26  [key=2, style=dotted];
m6_1260 -> m6_1261  [key=0, style=solid];
m6_1261 -> m6_1248  [color=blue, key=0, style=bold];
m6_663 -> m6_664  [key=0, style=solid];
m6_664 -> m6_22  [key=2, style=dotted];
m6_664 -> m6_23  [key=2, style=dotted];
m6_664 -> m6_665  [key=0, style=solid];
m6_664 -> m6_666  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_664 -> m6_669  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_665 -> m6_250  [key=2, style=dotted];
m6_665 -> m6_25  [key=2, style=dotted];
m6_665 -> m6_666  [key=0, style=solid];
m6_666 -> m6_667  [key=0, style=solid];
m6_666 -> m6_42  [key=2, style=dotted];
m6_666 -> m6_668  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_667 -> m6_663  [color=blue, key=0, style=bold];
m6_1593 -> m6_1594  [key=0, style=solid];
m6_1594 -> m6_22  [key=2, style=dotted];
m6_1594 -> m6_23  [key=2, style=dotted];
m6_1594 -> m6_1595  [key=0, style=solid];
m6_1594 -> m6_1598  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1595 -> m6_1596  [key=0, style=solid];
m6_1595 -> m6_42  [key=2, style=dotted];
m6_1595 -> m6_1597  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1596 -> m6_1593  [color=blue, key=0, style=bold];
m6_1206 -> m6_1207  [key=0, style=solid];
m6_1207 -> m6_22  [key=2, style=dotted];
m6_1207 -> m6_23  [key=2, style=dotted];
m6_1207 -> m6_1208  [key=0, style=solid];
m6_1207 -> m6_1211  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1208 -> m6_1209  [key=0, style=solid];
m6_1208 -> m6_42  [key=2, style=dotted];
m6_1208 -> m6_1210  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1209 -> m6_1206  [color=blue, key=0, style=bold];
m6_54 -> m6_55  [key=0, style=solid];
m6_54 -> m6_42  [key=2, style=dotted];
m6_54 -> m6_66  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1585 -> m6_1586  [key=0, style=solid];
m6_1587 -> m6_22  [key=2, style=dotted];
m6_1587 -> m6_23  [key=2, style=dotted];
m6_1587 -> m6_1588  [key=0, style=solid];
m6_1587 -> m6_1589  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1587 -> m6_1590  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1587 -> m6_1591  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1588 -> m6_25  [key=2, style=dotted];
m6_1588 -> m6_1589  [key=0, style=solid];
m6_1588 -> m6_24  [key=2, style=dotted];
m6_1590 -> m6_25  [key=2, style=dotted];
m6_1590 -> m6_1591  [key=0, style=solid];
m6_1590 -> m6_24  [key=2, style=dotted];
m6_1586 -> m6_1587  [key=0, style=solid];
m6_1589 -> m6_26  [key=2, style=dotted];
m6_1589 -> m6_1590  [key=0, style=solid];
m6_1591 -> m6_26  [key=2, style=dotted];
m6_1591 -> m6_1592  [key=0, style=solid];
m6_1592 -> m6_1585  [color=blue, key=0, style=bold];
m6_1192 -> m6_1193  [key=0, style=solid];
m6_1193 -> m6_22  [key=2, style=dotted];
m6_1193 -> m6_23  [key=2, style=dotted];
m6_1193 -> m6_1194  [key=0, style=solid];
m6_1193 -> m6_1197  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1194 -> m6_1195  [key=0, style=solid];
m6_1194 -> m6_42  [key=2, style=dotted];
m6_1194 -> m6_1196  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1195 -> m6_1192  [color=blue, key=0, style=bold];
m6_37 -> m6_38  [key=0, style=solid];
m6_37 -> m6_42  [key=2, style=dotted];
m6_37 -> m6_43  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1213 -> m6_1214  [key=0, style=solid];
m6_1214 -> m6_22  [key=2, style=dotted];
m6_1214 -> m6_23  [key=2, style=dotted];
m6_1214 -> m6_1215  [key=0, style=solid];
m6_1214 -> m6_1218  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1215 -> m6_1216  [key=0, style=solid];
m6_1215 -> m6_42  [key=2, style=dotted];
m6_1215 -> m6_1217  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1216 -> m6_1213  [color=blue, key=0, style=bold];
m6_362 -> m6_363  [key=0, style=solid];
m6_362 -> m6_253  [key=2, style=dotted];
m6_365 -> m6_22  [key=2, style=dotted];
m6_365 -> m6_366  [key=0, style=solid];
m6_365 -> m6_367  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_368  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_369  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_370  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_371  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_372  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_373  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_374  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_375  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_376  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_377  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_378  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_379  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_380  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_381  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_382  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_383  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_384  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_385  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_386  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_387  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_388  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_389  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_390  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_391  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_392  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_393  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_394  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_395  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_396  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_397  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_398  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_399  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_400  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_401  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_402  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_403  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_404  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_405  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_406  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_407  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_408  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_409  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_410  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_411  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_412  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_413  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_414  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_415  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_416  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_417  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_418  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_419  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_420  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_421  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_422  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_423  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_424  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_425  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_426  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_427  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_428  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_429  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_430  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_431  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_432  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_433  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_434  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_435  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_436  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_437  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_438  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_439  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_440  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_441  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_442  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_443  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_444  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_445  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_446  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_447  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_448  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_449  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_450  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_451  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_452  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_453  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_454  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_455  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_456  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_365 -> m6_457  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_364 -> m6_23  [key=2, style=dotted];
m6_364 -> m6_365  [key=0, style=solid];
m6_364 -> m6_86  [color=blue, key=0, style=bold];
m6_367 -> m6_250  [key=2, style=dotted];
m6_367 -> m6_368  [key=0, style=solid];
m6_367 -> m6_370  [color=darkseagreen4, key=1, label=dimension, style=dashed];
m6_367 -> m6_374  [color=darkseagreen4, key=1, label=dimension, style=dashed];
m6_367 -> m6_375  [color=darkseagreen4, key=1, label=dimension, style=dashed];
m6_367 -> m6_376  [color=darkseagreen4, key=1, label=dimension, style=dashed];
m6_371 -> m6_250  [key=2, style=dotted];
m6_371 -> m6_372  [key=0, style=solid];
m6_375 -> m6_250  [key=2, style=dotted];
m6_375 -> m6_376  [key=0, style=solid];
m6_375 -> m6_391  [key=0, style=solid];
m6_375 -> m6_394  [key=2, style=dotted];
m6_381 -> m6_250  [key=2, style=dotted];
m6_381 -> m6_382  [key=0, style=solid];
m6_381 -> m6_383  [key=0, style=solid];
m6_381 -> m6_20  [key=2, style=dotted];
m6_385 -> m6_250  [key=2, style=dotted];
m6_385 -> m6_386  [key=0, style=solid];
m6_389 -> m6_250  [key=2, style=dotted];
m6_389 -> m6_390  [key=0, style=solid];
m6_389 -> m6_366  [key=2, style=dotted];
m6_394 -> m6_250  [key=2, style=dotted];
m6_394 -> m6_395  [key=0, style=solid];
m6_399 -> m6_250  [key=2, style=dotted];
m6_399 -> m6_400  [key=0, style=solid];
m6_399 -> m6_409  [color=darkseagreen4, key=1, label=writeMetadataObject, style=dashed];
m6_404 -> m6_250  [key=2, style=dotted];
m6_404 -> m6_405  [key=0, style=solid];
m6_404 -> m6_406  [key=0, style=solid];
m6_409 -> m6_250  [key=2, style=dotted];
m6_409 -> m6_410  [key=0, style=solid];
m6_414 -> m6_250  [key=2, style=dotted];
m6_414 -> m6_415  [key=0, style=solid];
m6_414 -> m6_416  [key=0, style=solid];
m6_414 -> m6_129  [key=2, style=dotted];
m6_414 -> m6_36  [key=2, style=dotted];
m6_414 -> m6_418  [key=2, style=dotted];
m6_414 -> m6_131  [key=2, style=dotted];
m6_418 -> m6_250  [key=2, style=dotted];
m6_418 -> m6_419  [key=0, style=solid];
m6_422 -> m6_250  [key=2, style=dotted];
m6_422 -> m6_423  [key=0, style=solid];
m6_422 -> m6_433  [key=0, style=solid];
m6_422 -> m6_313  [key=2, style=dotted];
m6_426 -> m6_250  [key=2, style=dotted];
m6_426 -> m6_427  [key=0, style=solid];
m6_426 -> m6_429  [key=0, style=solid];
m6_430 -> m6_250  [key=2, style=dotted];
m6_430 -> m6_431  [key=0, style=solid];
m6_430 -> m6_37  [key=2, style=dotted];
m6_434 -> m6_250  [key=2, style=dotted];
m6_434 -> m6_435  [key=0, style=solid];
m6_434 -> m6_50  [color=blue, key=0, style=bold];
m6_438 -> m6_250  [key=2, style=dotted];
m6_438 -> m6_439  [key=0, style=solid];
m6_438 -> m6_245  [key=2, style=dotted];
m6_442 -> m6_250  [key=2, style=dotted];
m6_442 -> m6_443  [key=0, style=solid];
m6_442 -> m6_444  [key=0, style=solid];
m6_446 -> m6_250  [key=2, style=dotted];
m6_446 -> m6_447  [key=0, style=solid];
m6_446 -> m6_463  [key=0, style=solid];
m6_446 -> m6_468  [key=2, style=dotted];
m6_450 -> m6_250  [key=2, style=dotted];
m6_450 -> m6_451  [key=0, style=solid];
m6_450 -> m6_251  [key=2, style=dotted];
m6_450 -> m6_450  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m6_450 -> m6_454  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m6_450 -> m6_457  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m6_450 -> m6_460  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m6_454 -> m6_250  [key=2, style=dotted];
m6_454 -> m6_455  [key=0, style=solid];
m6_454 -> m6_53  [key=2, style=dotted];
m6_366 -> m6_26  [key=2, style=dotted];
m6_366 -> m6_367  [key=0, style=solid];
m6_366 -> m6_371  [color=darkseagreen4, key=1, label="int[]", style=dashed];
m6_366 -> m6_373  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_366 -> m6_374  [color=darkseagreen4, key=1, label="System.Array", style=dashed];
m6_366 -> m6_375  [color=darkseagreen4, key=1, label="System.Array", style=dashed];
m6_366 -> m6_377  [color=darkseagreen4, key=1, label="System.Array", style=dashed];
m6_366 -> m6_379  [color=darkseagreen4, key=1, label="System.Array", style=dashed];
m6_366 -> m6_380  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m6_366 -> m6_381  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m6_366 -> m6_382  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_366 -> m6_383  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_366 -> m6_384  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_366 -> m6_386  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_366 -> m6_387  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_366 -> m6_389  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_366 -> m6_391  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_366 -> m6_86  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty member", style=bold];
m6_366 -> m6_366  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty member", style=bold];
m6_366 -> m6_368  [color=darkorchid, key=3, label="Parameter variable int[] indices", style=bold];
m6_368 -> m6_26  [key=2, style=dotted];
m6_368 -> m6_369  [key=0, style=solid];
m6_368 -> m6_371  [color=darkseagreen4, key=1, label=newIndices, style=dashed];
m6_368 -> m6_376  [color=darkseagreen4, key=1, label=newIndices, style=dashed];
m6_368 -> m6_377  [color=darkseagreen4, key=1, label=newIndices, style=dashed];
m6_368 -> m6_379  [color=darkseagreen4, key=1, label=newIndices, style=dashed];
m6_368 -> m6_389  [color=darkseagreen4, key=1, label=newIndices, style=dashed];
m6_369 -> m6_26  [key=2, style=dotted];
m6_369 -> m6_370  [key=0, style=solid];
m6_369 -> m6_371  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_369 -> m6_372  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_370 -> m6_26  [key=2, style=dotted];
m6_370 -> m6_371  [key=0, style=solid];
m6_370 -> m6_373  [key=0, style=solid];
m6_370 -> m6_13  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m6_372 -> m6_26  [key=2, style=dotted];
m6_372 -> m6_373  [key=0, style=solid];
m6_372 -> m6_370  [key=0, style=solid];
m6_372 -> m6_372  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_373 -> m6_26  [key=2, style=dotted];
m6_373 -> m6_374  [key=0, style=solid];
m6_373 -> m6_354  [key=2, style=dotted];
m6_374 -> m6_26  [key=2, style=dotted];
m6_374 -> m6_375  [key=0, style=solid];
m6_374 -> m6_393  [key=2, style=dotted];
m6_374 -> m6_376  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_374 -> m6_386  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_374 -> m6_390  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_376 -> m6_26  [key=2, style=dotted];
m6_376 -> m6_377  [key=0, style=solid];
m6_377 -> m6_26  [key=2, style=dotted];
m6_377 -> m6_378  [key=0, style=solid];
m6_378 -> m6_26  [key=2, style=dotted];
m6_378 -> m6_379  [key=0, style=solid];
m6_378 -> m6_389  [key=0, style=solid];
m6_379 -> m6_26  [key=2, style=dotted];
m6_379 -> m6_380  [key=0, style=solid];
m6_379 -> m6_395  [key=2, style=dotted];
m6_379 -> m6_381  [color=darkseagreen4, key=1, label=value, style=dashed];
m6_379 -> m6_382  [color=darkseagreen4, key=1, label=value, style=dashed];
m6_379 -> m6_383  [color=darkseagreen4, key=1, label=value, style=dashed];
m6_379 -> m6_384  [color=darkseagreen4, key=1, label=value, style=dashed];
m6_380 -> m6_26  [key=2, style=dotted];
m6_380 -> m6_381  [key=0, style=solid];
m6_380 -> m6_19  [key=2, style=dotted];
m6_380 -> m6_383  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
m6_380 -> m6_384  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
m6_382 -> m6_26  [key=2, style=dotted];
m6_382 -> m6_383  [key=0, style=solid];
m6_382 -> m6_385  [key=0, style=solid];
m6_382 -> m6_390  [key=0, style=solid];
m6_382 -> m6_21  [key=2, style=dotted];
m6_383 -> m6_26  [key=2, style=dotted];
m6_383 -> m6_384  [key=0, style=solid];
m6_383 -> m6_385  [key=0, style=solid];
m6_383 -> m6_390  [key=0, style=solid];
m6_383 -> m6_132  [key=2, style=dotted];
m6_384 -> m6_26  [key=2, style=dotted];
m6_384 -> m6_385  [key=0, style=solid];
m6_384 -> m6_390  [key=0, style=solid];
m6_384 -> m6_22  [key=2, style=dotted];
m6_386 -> m6_26  [key=2, style=dotted];
m6_386 -> m6_387  [key=0, style=solid];
m6_386 -> m6_388  [key=0, style=solid];
m6_386 -> m6_23  [key=2, style=dotted];
m6_387 -> m6_26  [key=2, style=dotted];
m6_387 -> m6_388  [key=0, style=solid];
m6_387 -> m6_390  [key=0, style=solid];
m6_387 -> m6_24  [key=2, style=dotted];
m6_388 -> m6_26  [key=2, style=dotted];
m6_388 -> m6_389  [key=0, style=solid];
m6_388 -> m6_392  [key=0, style=solid];
m6_390 -> m6_26  [key=2, style=dotted];
m6_390 -> m6_391  [key=0, style=solid];
m6_390 -> m6_375  [key=0, style=solid];
m6_390 -> m6_390  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_391 -> m6_26  [key=2, style=dotted];
m6_391 -> m6_392  [key=0, style=solid];
m6_391 -> m6_355  [key=2, style=dotted];
m6_392 -> m6_26  [key=2, style=dotted];
m6_392 -> m6_393  [key=0, style=solid];
m6_392 -> m6_366  [color=blue, key=0, style=bold];
m6_393 -> m6_26  [key=2, style=dotted];
m6_393 -> m6_394  [key=0, style=solid];
m6_395 -> m6_26  [key=2, style=dotted];
m6_395 -> m6_396  [key=0, style=solid];
m6_396 -> m6_26  [key=2, style=dotted];
m6_396 -> m6_397  [key=0, style=solid];
m6_396 -> m6_92  [key=2, style=dotted];
m6_396 -> m6_117  [key=2, style=dotted];
m6_397 -> m6_26  [key=2, style=dotted];
m6_397 -> m6_398  [key=0, style=solid];
m6_397 -> m6_288  [key=2, style=dotted];
m6_397 -> m6_397  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m6_397 -> m6_399  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m6_397 -> m6_402  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m6_398 -> m6_26  [key=2, style=dotted];
m6_398 -> m6_399  [key=0, style=solid];
m6_398 -> m6_50  [key=2, style=dotted];
m6_398 -> m6_404  [color=darkseagreen4, key=1, label=includeTypeDetails, style=dashed];
m6_400 -> m6_26  [key=2, style=dotted];
m6_400 -> m6_401  [key=0, style=solid];
m6_400 -> m6_407  [key=0, style=solid];
m6_401 -> m6_26  [key=2, style=dotted];
m6_401 -> m6_402  [key=0, style=solid];
m6_401 -> m6_51  [key=2, style=dotted];
m6_402 -> m6_26  [key=2, style=dotted];
m6_402 -> m6_403  [key=0, style=solid];
m6_402 -> m6_404  [key=0, style=solid];
m6_403 -> m6_26  [key=2, style=dotted];
m6_403 -> m6_404  [key=0, style=solid];
m6_403 -> m6_289  [key=2, style=dotted];
m6_405 -> m6_26  [key=2, style=dotted];
m6_405 -> m6_406  [key=0, style=solid];
m6_405 -> m6_36  [key=2, style=dotted];
m6_405 -> m6_52  [key=2, style=dotted];
m6_406 -> m6_26  [key=2, style=dotted];
m6_406 -> m6_407  [key=0, style=solid];
m6_406 -> m6_53  [key=2, style=dotted];
m6_407 -> m6_26  [key=2, style=dotted];
m6_407 -> m6_408  [key=0, style=solid];
m6_407 -> m6_409  [key=0, style=solid];
m6_408 -> m6_26  [key=2, style=dotted];
m6_408 -> m6_409  [key=0, style=solid];
m6_408 -> m6_37  [key=2, style=dotted];
m6_410 -> m6_26  [key=2, style=dotted];
m6_410 -> m6_411  [key=0, style=solid];
m6_410 -> m6_353  [color=blue, key=0, style=bold];
m6_411 -> m6_26  [key=2, style=dotted];
m6_411 -> m6_412  [key=0, style=solid];
m6_411 -> m6_414  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_411 -> m6_44  [color=darkorchid, key=3, label="method methodReturn bool ShouldWriteDynamicProperty", style=bold];
m6_411 -> m6_126  [color=darkorchid, key=3, label="method methodReturn bool ShouldWriteDynamicProperty", style=bold];
m6_412 -> m6_26  [key=2, style=dotted];
m6_412 -> m6_413  [key=0, style=solid];
m6_412 -> m6_414  [key=0, style=solid];
m6_413 -> m6_26  [key=2, style=dotted];
m6_413 -> m6_414  [key=0, style=solid];
m6_413 -> m6_417  [key=0, style=solid];
m6_415 -> m6_26  [key=2, style=dotted];
m6_415 -> m6_416  [key=0, style=solid];
m6_415 -> m6_417  [key=0, style=solid];
m6_416 -> m6_26  [key=2, style=dotted];
m6_416 -> m6_417  [key=0, style=solid];
m6_417 -> m6_26  [key=2, style=dotted];
m6_417 -> m6_418  [key=0, style=solid];
m6_417 -> m6_411  [color=blue, key=0, style=bold];
m6_419 -> m6_26  [key=2, style=dotted];
m6_419 -> m6_420  [key=0, style=solid];
m6_419 -> m6_422  [color=darkseagreen4, key=1, label=resolvedTypeNameHandling, style=dashed];
m6_420 -> m6_26  [key=2, style=dotted];
m6_420 -> m6_421  [key=0, style=solid];
m6_420 -> m6_422  [key=0, style=solid];
m6_420 -> m6_313  [key=2, style=dotted];
m6_421 -> m6_26  [key=2, style=dotted];
m6_421 -> m6_422  [key=0, style=solid];
m6_421 -> m6_434  [key=0, style=solid];
m6_423 -> m6_26  [key=2, style=dotted];
m6_423 -> m6_424  [key=0, style=solid];
m6_423 -> m6_426  [key=0, style=solid];
m6_424 -> m6_26  [key=2, style=dotted];
m6_424 -> m6_425  [key=0, style=solid];
m6_424 -> m6_433  [key=0, style=solid];
m6_425 -> m6_26  [key=2, style=dotted];
m6_425 -> m6_426  [key=0, style=solid];
m6_425 -> m6_434  [key=0, style=solid];
m6_427 -> m6_26  [key=2, style=dotted];
m6_427 -> m6_428  [key=0, style=solid];
m6_427 -> m6_433  [key=0, style=solid];
m6_428 -> m6_26  [key=2, style=dotted];
m6_428 -> m6_429  [key=0, style=solid];
m6_428 -> m6_434  [key=0, style=solid];
m6_429 -> m6_26  [key=2, style=dotted];
m6_429 -> m6_430  [key=0, style=solid];
m6_429 -> m6_433  [key=0, style=solid];
m6_431 -> m6_26  [key=2, style=dotted];
m6_431 -> m6_432  [key=0, style=solid];
m6_431 -> m6_433  [key=0, style=solid];
m6_432 -> m6_26  [key=2, style=dotted];
m6_432 -> m6_433  [key=0, style=solid];
m6_432 -> m6_434  [key=0, style=solid];
m6_433 -> m6_26  [key=2, style=dotted];
m6_433 -> m6_434  [key=0, style=solid];
m6_435 -> m6_26  [key=2, style=dotted];
m6_435 -> m6_436  [key=0, style=solid];
m6_436 -> m6_26  [key=2, style=dotted];
m6_436 -> m6_437  [key=0, style=solid];
m6_436 -> m6_438  [color=darkseagreen4, key=1, label=underlyingDictionary, style=dashed];
m6_436 -> m6_439  [color=darkseagreen4, key=1, label=underlyingDictionary, style=dashed];
m6_436 -> m6_460  [color=darkseagreen4, key=1, label=underlyingDictionary, style=dashed];
m6_436 -> m6_465  [color=darkseagreen4, key=1, label=underlyingDictionary, style=dashed];
m6_437 -> m6_26  [key=2, style=dotted];
m6_437 -> m6_438  [key=0, style=solid];
m6_437 -> m6_198  [key=2, style=dotted];
m6_439 -> m6_26  [key=2, style=dotted];
m6_439 -> m6_440  [key=0, style=solid];
m6_439 -> m6_246  [key=2, style=dotted];
m6_440 -> m6_26  [key=2, style=dotted];
m6_440 -> m6_441  [key=0, style=solid];
m6_440 -> m6_442  [key=0, style=solid];
m6_441 -> m6_26  [key=2, style=dotted];
m6_441 -> m6_442  [key=0, style=solid];
m6_441 -> m6_37  [key=2, style=dotted];
m6_443 -> m6_26  [key=2, style=dotted];
m6_443 -> m6_444  [key=0, style=solid];
m6_443 -> m6_37  [key=2, style=dotted];
m6_444 -> m6_26  [key=2, style=dotted];
m6_444 -> m6_445  [key=0, style=solid];
m6_444 -> m6_461  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m6_445 -> m6_26  [key=2, style=dotted];
m6_445 -> m6_446  [key=0, style=solid];
m6_445 -> m6_467  [key=2, style=dotted];
m6_445 -> m6_447  [color=darkseagreen4, key=1, label=e, style=dashed];
m6_447 -> m6_26  [key=2, style=dotted];
m6_447 -> m6_448  [key=0, style=solid];
m6_447 -> m6_449  [color=darkseagreen4, key=1, label=entry, style=dashed];
m6_448 -> m6_26  [key=2, style=dotted];
m6_448 -> m6_449  [key=0, style=solid];
m6_449 -> m6_26  [key=2, style=dotted];
m6_449 -> m6_450  [key=0, style=solid];
m6_449 -> m6_250  [key=2, style=dotted];
m6_449 -> m6_449  [color=darkseagreen4, key=1, label=entry, style=dashed];
m6_449 -> m6_451  [color=darkseagreen4, key=1, label=entry, style=dashed];
m6_449 -> m6_454  [color=darkseagreen4, key=1, label=escape, style=dashed];
m6_449 -> m6_457  [color=darkseagreen4, key=1, label=escape, style=dashed];
m6_451 -> m6_26  [key=2, style=dotted];
m6_451 -> m6_452  [key=0, style=solid];
m6_451 -> m6_451  [color=darkseagreen4, key=1, label=entry, style=dashed];
m6_451 -> m6_453  [color=darkseagreen4, key=1, label=value, style=dashed];
m6_451 -> m6_455  [color=darkseagreen4, key=1, label=value, style=dashed];
m6_451 -> m6_456  [color=darkseagreen4, key=1, label=value, style=dashed];
m6_451 -> m6_458  [color=darkseagreen4, key=1, label=value, style=dashed];
m6_452 -> m6_26  [key=2, style=dotted];
m6_452 -> m6_453  [key=0, style=solid];
m6_452 -> m6_19  [key=2, style=dotted];
m6_452 -> m6_456  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
m6_452 -> m6_458  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
m6_453 -> m6_26  [key=2, style=dotted];
m6_453 -> m6_454  [key=0, style=solid];
m6_453 -> m6_456  [key=0, style=solid];
m6_453 -> m6_20  [key=2, style=dotted];
m6_455 -> m6_26  [key=2, style=dotted];
m6_455 -> m6_456  [key=0, style=solid];
m6_455 -> m6_459  [key=0, style=solid];
m6_455 -> m6_446  [key=0, style=solid];
m6_455 -> m6_21  [key=2, style=dotted];
m6_456 -> m6_26  [key=2, style=dotted];
m6_456 -> m6_457  [key=0, style=solid];
m6_456 -> m6_446  [key=0, style=solid];
m6_456 -> m6_132  [key=2, style=dotted];
m6_457 -> m6_26  [key=2, style=dotted];
m6_457 -> m6_458  [key=0, style=solid];
m6_457 -> m6_53  [key=2, style=dotted];
m6_363 -> m6_364  [key=0, style=solid];
m6_363 -> m6_199  [key=2, style=dotted];
m6_458 -> m6_362  [color=blue, key=0, style=bold];
m6_458 -> m6_459  [key=0, style=solid];
m6_458 -> m6_446  [key=0, style=solid];
m6_458 -> m6_22  [key=2, style=dotted];
m6_595 -> m6_596  [key=0, style=solid];
m6_597 -> m6_22  [key=2, style=dotted];
m6_597 -> m6_598  [key=0, style=solid];
m6_597 -> m6_593  [key=2, style=dotted];
m6_597 -> m6_594  [key=2, style=dotted];
m6_597 -> m6_599  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_603 -> m6_22  [key=2, style=dotted];
m6_603 -> m6_604  [key=0, style=solid];
m6_603 -> m6_593  [key=2, style=dotted];
m6_603 -> m6_594  [key=2, style=dotted];
m6_603 -> m6_605  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_596 -> m6_597  [key=0, style=solid];
m6_596 -> m6_592  [key=2, style=dotted];
m6_596 -> m6_602  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_598 -> m6_599  [key=0, style=solid];
m6_598 -> m6_24  [key=2, style=dotted];
m6_599 -> m6_26  [key=2, style=dotted];
m6_599 -> m6_600  [key=0, style=solid];
m6_602 -> m6_603  [key=0, style=solid];
m6_604 -> m6_605  [key=0, style=solid];
m6_604 -> m6_24  [key=2, style=dotted];
m6_605 -> m6_26  [key=2, style=dotted];
m6_605 -> m6_606  [key=0, style=solid];
m6_600 -> m6_602  [color=darkseagreen4, key=1, label=j, style=dashed];
m6_600 -> m6_601  [key=0, style=solid];
m6_600 -> m6_606  [color=darkseagreen4, key=1, label=j, style=dashed];
m6_601 -> m6_602  [key=0, style=solid];
m6_601 -> m6_607  [key=0, style=solid];
m6_606 -> m6_601  [key=0, style=solid];
m6_606 -> m6_606  [color=darkseagreen4, key=1, label=j, style=dashed];
m6_607 -> m6_595  [color=blue, key=0, style=bold];
m6_164 -> m6_165  [key=0, style=solid];
m6_120 -> m6_121  [key=0, style=solid];
m6_902 -> m6_903  [key=0, style=solid];
m6_932 -> m6_22  [key=2, style=dotted];
m6_932 -> m6_23  [key=2, style=dotted];
m6_932 -> m6_933  [key=0, style=solid];
m6_932 -> m6_952  [key=2, style=dotted];
m6_932 -> m6_936  [color=darkseagreen4, key=1, label=jsonObject, style=dashed];
m6_930 -> m6_932  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_930 -> m6_931  [key=0, style=solid];
m6_930 -> m6_950  [key=2, style=dotted];
m6_930 -> m6_937  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_931 -> m6_932  [key=0, style=solid];
m6_931 -> m6_951  [key=2, style=dotted];
m6_931 -> m6_936  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_933 -> m6_934  [key=0, style=solid];
m6_933 -> m6_939  [key=2, style=dotted];
m6_933 -> m6_937  [color=darkseagreen4, key=1, label=sb, style=dashed];
m6_936 -> m6_937  [key=0, style=solid];
m6_936 -> m6_953  [key=2, style=dotted];
m6_937 -> m6_26  [key=2, style=dotted];
m6_937 -> m6_938  [key=0, style=solid];
m6_937 -> m6_950  [key=2, style=dotted];
m6_903 -> m6_930  [color=darkseagreen4, key=1, label=sb, style=dashed];
m6_903 -> m6_904  [key=0, style=solid];
m6_903 -> m6_939  [key=2, style=dotted];
m6_929 -> m6_930  [key=0, style=solid];
m6_929 -> m6_355  [key=2, style=dotted];
m6_934 -> m6_935  [key=0, style=solid];
m6_934 -> m6_940  [key=2, style=dotted];
m6_935 -> m6_936  [key=0, style=solid];
m6_935 -> m6_501  [key=2, style=dotted];
m6_904 -> m6_905  [key=0, style=solid];
m6_904 -> m6_940  [key=2, style=dotted];
m6_905 -> m6_929  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_905 -> m6_906  [key=0, style=solid];
m6_905 -> m6_501  [key=2, style=dotted];
m6_905 -> m6_907  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_905 -> m6_908  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_905 -> m6_909  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_905 -> m6_910  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_905 -> m6_911  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_905 -> m6_912  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_905 -> m6_913  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_905 -> m6_914  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_905 -> m6_917  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_905 -> m6_919  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_905 -> m6_920  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_905 -> m6_921  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_905 -> m6_922  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_905 -> m6_923  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_905 -> m6_924  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_905 -> m6_925  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_905 -> m6_926  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_905 -> m6_927  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_905 -> m6_928  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_928 -> m6_929  [key=0, style=solid];
m6_928 -> m6_949  [key=2, style=dotted];
m6_906 -> m6_907  [key=0, style=solid];
m6_906 -> m6_941  [key=2, style=dotted];
m6_907 -> m6_908  [key=0, style=solid];
m6_907 -> m6_942  [key=2, style=dotted];
m6_908 -> m6_909  [key=0, style=solid];
m6_908 -> m6_943  [key=2, style=dotted];
m6_909 -> m6_910  [key=0, style=solid];
m6_909 -> m6_944  [key=2, style=dotted];
m6_910 -> m6_911  [key=0, style=solid];
m6_910 -> m6_945  [key=2, style=dotted];
m6_911 -> m6_912  [key=0, style=solid];
m6_911 -> m6_944  [key=2, style=dotted];
m6_912 -> m6_913  [key=0, style=solid];
m6_912 -> m6_946  [key=2, style=dotted];
m6_913 -> m6_914  [key=0, style=solid];
m6_913 -> m6_944  [key=2, style=dotted];
m6_914 -> m6_915  [key=0, style=solid];
m6_914 -> m6_941  [key=2, style=dotted];
m6_917 -> m6_918  [key=0, style=solid];
m6_917 -> m6_945  [key=2, style=dotted];
m6_919 -> m6_920  [key=0, style=solid];
m6_919 -> m6_943  [key=2, style=dotted];
m6_920 -> m6_921  [key=0, style=solid];
m6_920 -> m6_944  [key=2, style=dotted];
m6_921 -> m6_922  [key=0, style=solid];
m6_921 -> m6_947  [key=2, style=dotted];
m6_922 -> m6_923  [key=0, style=solid];
m6_922 -> m6_948  [key=2, style=dotted];
m6_923 -> m6_924  [key=0, style=solid];
m6_923 -> m6_945  [key=2, style=dotted];
m6_924 -> m6_925  [key=0, style=solid];
m6_924 -> m6_355  [key=2, style=dotted];
m6_925 -> m6_926  [key=0, style=solid];
m6_925 -> m6_948  [key=2, style=dotted];
m6_926 -> m6_927  [key=0, style=solid];
m6_926 -> m6_946  [key=2, style=dotted];
m6_927 -> m6_928  [key=0, style=solid];
m6_927 -> m6_949  [key=2, style=dotted];
m6_915 -> m6_917  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_915 -> m6_916  [key=0, style=solid];
m6_915 -> m6_918  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_916 -> m6_917  [key=0, style=solid];
m6_916 -> m6_919  [key=0, style=solid];
m6_918 -> m6_916  [key=0, style=solid];
m6_918 -> m6_918  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_938 -> m6_902  [color=blue, key=0, style=bold];
m6_1185 -> m6_1186  [key=0, style=solid];
m6_1186 -> m6_22  [key=2, style=dotted];
m6_1186 -> m6_23  [key=2, style=dotted];
m6_1186 -> m6_1187  [key=0, style=solid];
m6_1186 -> m6_1190  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1187 -> m6_1188  [key=0, style=solid];
m6_1187 -> m6_42  [key=2, style=dotted];
m6_1187 -> m6_1189  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1188 -> m6_1185  [color=blue, key=0, style=bold];
m6_624 -> m6_625  [key=0, style=solid];
m6_625 -> m6_22  [key=2, style=dotted];
m6_625 -> m6_23  [key=2, style=dotted];
m6_625 -> m6_626  [key=0, style=solid];
m6_625 -> m6_629  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_626 -> m6_627  [key=0, style=solid];
m6_626 -> m6_42  [key=2, style=dotted];
m6_626 -> m6_628  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_627 -> m6_624  [color=blue, key=0, style=bold];
m6_30 -> m6_31  [key=0, style=solid];
m6_30 -> m6_26  [color=blue, key=0, style=bold];
m6_32 -> m6_22  [key=2, style=dotted];
m6_32 -> m6_23  [key=2, style=dotted];
m6_32 -> m6_33  [key=0, style=solid];
m6_32 -> m6_34  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_32 -> m6_35  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_32 -> m6_36  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_32 -> m6_37  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_32 -> m6_44  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_32 -> m6_38  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_32 -> m6_39  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_32 -> m6_40  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_33 -> m6_25  [key=2, style=dotted];
m6_33 -> m6_34  [key=0, style=solid];
m6_33 -> m6_24  [key=2, style=dotted];
m6_33 -> m6_35  [key=0, style=solid];
m6_35 -> m6_25  [key=2, style=dotted];
m6_35 -> m6_36  [key=0, style=solid];
m6_35 -> m6_24  [key=2, style=dotted];
m6_35 -> m6_19  [color=blue, key=0, style=bold];
m6_38 -> m6_25  [key=2, style=dotted];
m6_38 -> m6_39  [key=0, style=solid];
m6_38 -> m6_24  [key=2, style=dotted];
m6_38 -> m6_40  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonPrimitiveContract", style=dashed];
m6_38 -> m6_42  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_38 -> m6_43  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_38 -> m6_44  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_38 -> m6_45  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_38 -> m6_46  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_38 -> m6_48  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_38 -> m6_22  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerProperty", style=bold];
m6_31 -> m6_32  [key=0, style=solid];
m6_34 -> m6_26  [key=2, style=dotted];
m6_34 -> m6_35  [key=0, style=solid];
m6_34 -> m6_36  [key=2, style=dotted];
m6_34 -> m6_37  [key=2, style=dotted];
m6_36 -> m6_26  [key=2, style=dotted];
m6_36 -> m6_37  [key=0, style=solid];
m6_39 -> m6_26  [key=2, style=dotted];
m6_39 -> m6_40  [key=0, style=solid];
m6_39 -> m6_48  [key=0, style=solid];
m6_40 -> m6_41  [key=0, style=solid];
m6_40 -> m6_24  [key=2, style=dotted];
m6_40 -> m6_28  [key=2, style=dotted];
m6_40 -> m6_50  [key=2, style=dotted];
m6_41 -> m6_30  [color=blue, key=0, style=bold];
m6_41 -> m6_42  [key=0, style=solid];
m6_41 -> m6_48  [key=0, style=solid];
m6_1393 -> m6_1394  [key=0, style=solid];
m6_1394 -> m6_22  [key=2, style=dotted];
m6_1394 -> m6_23  [key=2, style=dotted];
m6_1394 -> m6_1395  [key=0, style=solid];
m6_1394 -> m6_1398  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1395 -> m6_1396  [key=0, style=solid];
m6_1395 -> m6_42  [key=2, style=dotted];
m6_1395 -> m6_1397  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1396 -> m6_1393  [color=blue, key=0, style=bold];
m6_1497 -> m6_1498  [key=0, style=solid];
m6_1499 -> m6_22  [key=2, style=dotted];
m6_1499 -> m6_23  [key=2, style=dotted];
m6_1499 -> m6_1500  [key=0, style=solid];
m6_1499 -> m6_1501  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1499 -> m6_1502  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1499 -> m6_1503  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1499 -> m6_1504  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1499 -> m6_1505  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1499 -> m6_1506  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1499 -> m6_1507  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1499 -> m6_1508  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1499 -> m6_1509  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1499 -> m6_1510  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1499 -> m6_1511  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1499 -> m6_1512  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1499 -> m6_1513  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1500 -> m6_25  [key=2, style=dotted];
m6_1500 -> m6_1501  [key=0, style=solid];
m6_1500 -> m6_24  [key=2, style=dotted];
m6_1502 -> m6_25  [key=2, style=dotted];
m6_1502 -> m6_1503  [key=0, style=solid];
m6_1502 -> m6_24  [key=2, style=dotted];
m6_1504 -> m6_25  [key=2, style=dotted];
m6_1504 -> m6_1505  [key=0, style=solid];
m6_1504 -> m6_24  [key=2, style=dotted];
m6_1506 -> m6_25  [key=2, style=dotted];
m6_1506 -> m6_1507  [key=0, style=solid];
m6_1506 -> m6_24  [key=2, style=dotted];
m6_1508 -> m6_25  [key=2, style=dotted];
m6_1508 -> m6_1509  [key=0, style=solid];
m6_1508 -> m6_24  [key=2, style=dotted];
m6_1510 -> m6_25  [key=2, style=dotted];
m6_1510 -> m6_1511  [key=0, style=solid];
m6_1510 -> m6_24  [key=2, style=dotted];
m6_1512 -> m6_25  [key=2, style=dotted];
m6_1512 -> m6_1513  [key=0, style=solid];
m6_1512 -> m6_24  [key=2, style=dotted];
m6_1498 -> m6_1499  [key=0, style=solid];
m6_1501 -> m6_26  [key=2, style=dotted];
m6_1501 -> m6_1502  [key=0, style=solid];
m6_1503 -> m6_26  [key=2, style=dotted];
m6_1503 -> m6_1504  [key=0, style=solid];
m6_1505 -> m6_26  [key=2, style=dotted];
m6_1505 -> m6_1506  [key=0, style=solid];
m6_1507 -> m6_26  [key=2, style=dotted];
m6_1507 -> m6_1508  [key=0, style=solid];
m6_1509 -> m6_26  [key=2, style=dotted];
m6_1509 -> m6_1510  [key=0, style=solid];
m6_1511 -> m6_26  [key=2, style=dotted];
m6_1511 -> m6_1512  [key=0, style=solid];
m6_1513 -> m6_26  [key=2, style=dotted];
m6_1513 -> m6_1514  [key=0, style=solid];
m6_1514 -> m6_1497  [color=blue, key=0, style=bold];
m6_1561 -> m6_1562  [key=0, style=solid];
m6_1563 -> m6_22  [key=2, style=dotted];
m6_1563 -> m6_23  [key=2, style=dotted];
m6_1563 -> m6_1564  [key=0, style=solid];
m6_1563 -> m6_1567  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1562 -> m6_1563  [key=0, style=solid];
m6_1564 -> m6_1565  [key=0, style=solid];
m6_1564 -> m6_42  [key=2, style=dotted];
m6_1564 -> m6_1566  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1565 -> m6_1561  [color=blue, key=0, style=bold];
m6_205 -> m6_206  [key=0, style=solid];
m6_205 -> m6_207  [key=0, style=solid];
m6_132 -> m6_133  [key=0, style=solid];
m6_132 -> m6_136  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m6_132 -> m6_137  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m6_132 -> m6_138  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m6_132 -> m6_139  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m6_132 -> m6_140  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContainerContract", style=dashed];
m6_132 -> m6_141  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContainerContract", style=dashed];
m6_132 -> m6_142  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_132 -> m6_145  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m6_132 -> m6_146  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m6_132 -> m6_147  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_132 -> m6_150  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_132 -> m6_153  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_132 -> m6_157  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_132 -> m6_126  [color=darkorchid, key=3, label="method methodReturn bool CheckForCircularReference", style=bold];
m6_132 -> m6_44  [color=darkorchid, key=3, label="method methodReturn bool CheckForCircularReference", style=bold];
m6_132 -> m6_84  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerProperty", style=bold];
m6_132 -> m6_247  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m6_132 -> m6_83  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m6_132 -> m6_85  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerProperty", style=bold];
m6_132 -> m6_366  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerProperty", style=bold];
m6_132 -> m6_89  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerProperty", style=bold];
m6_132 -> m6_8  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty property", style=bold];
m6_132 -> m6_231  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m6_132 -> m6_338  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m6_132 -> m6_380  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m6_132 -> m6_452  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m6_132 -> m6_337  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m6_132 -> m6_379  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m6_132 -> m6_451  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m6_133 -> m6_134  [key=0, style=solid];
m6_133 -> m6_135  [key=0, style=solid];
m6_133 -> m6_24  [key=2, style=dotted];
m6_136 -> m6_137  [key=0, style=solid];
m6_136 -> m6_138  [key=0, style=solid];
m6_137 -> m6_138  [key=0, style=solid];
m6_137 -> m6_140  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_137 -> m6_148  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_137 -> m6_22  [key=2, style=dotted];
m6_137 -> m6_23  [key=2, style=dotted];
m6_137 -> m6_139  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_137 -> m6_141  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_137 -> m6_142  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_137 -> m6_143  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_137 -> m6_144  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_137 -> m6_145  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_137 -> m6_146  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_137 -> m6_147  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_137 -> m6_149  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_137 -> m6_150  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_137 -> m6_151  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_137 -> m6_152  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_137 -> m6_153  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_137 -> m6_154  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_137 -> m6_155  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_137 -> m6_156  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_137 -> m6_157  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_137 -> m6_158  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_138 -> m6_139  [key=0, style=solid];
m6_138 -> m6_140  [key=0, style=solid];
m6_139 -> m6_140  [key=0, style=solid];
m6_139 -> m6_148  [color=darkseagreen4, key=1, label=referenceLoopHandling, style=dashed];
m6_139 -> m6_25  [key=2, style=dotted];
m6_139 -> m6_24  [key=2, style=dotted];
m6_140 -> m6_141  [key=0, style=solid];
m6_140 -> m6_142  [key=0, style=solid];
m6_140 -> m6_26  [key=2, style=dotted];
m6_141 -> m6_142  [key=0, style=solid];
m6_141 -> m6_148  [color=darkseagreen4, key=1, label=referenceLoopHandling, style=dashed];
m6_141 -> m6_25  [key=2, style=dotted];
m6_141 -> m6_24  [key=2, style=dotted];
m6_142 -> m6_143  [key=0, style=solid];
m6_142 -> m6_161  [key=2, style=dotted];
m6_142 -> m6_162  [key=2, style=dotted];
m6_142 -> m6_26  [key=2, style=dotted];
m6_145 -> m6_146  [key=0, style=solid];
m6_145 -> m6_147  [key=0, style=solid];
m6_145 -> m6_25  [key=2, style=dotted];
m6_145 -> m6_24  [key=2, style=dotted];
m6_146 -> m6_147  [key=0, style=solid];
m6_146 -> m6_163  [key=2, style=dotted];
m6_146 -> m6_146  [color=darkseagreen4, key=1, label=message, style=dashed];
m6_146 -> m6_26  [key=2, style=dotted];
m6_147 -> m6_148  [key=0, style=solid];
m6_147 -> m6_36  [key=2, style=dotted];
m6_147 -> m6_163  [key=2, style=dotted];
m6_147 -> m6_147  [color=darkseagreen4, key=1, label=message, style=dashed];
m6_147 -> m6_150  [color=darkseagreen4, key=1, label=message, style=dashed];
m6_147 -> m6_153  [color=darkseagreen4, key=1, label=message, style=dashed];
m6_147 -> m6_157  [color=darkseagreen4, key=1, label=message, style=dashed];
m6_147 -> m6_26  [key=2, style=dotted];
m6_150 -> m6_160  [key=0, style=solid];
m6_150 -> m6_164  [key=2, style=dotted];
m6_150 -> m6_26  [key=2, style=dotted];
m6_150 -> m6_151  [key=0, style=solid];
m6_153 -> m6_154  [key=0, style=solid];
m6_153 -> m6_165  [key=2, style=dotted];
m6_153 -> m6_166  [key=2, style=dotted];
m6_153 -> m6_25  [key=2, style=dotted];
m6_153 -> m6_24  [key=2, style=dotted];
m6_157 -> m6_158  [key=0, style=solid];
m6_157 -> m6_165  [key=2, style=dotted];
m6_157 -> m6_166  [key=2, style=dotted];
m6_157 -> m6_25  [key=2, style=dotted];
m6_157 -> m6_24  [key=2, style=dotted];
m6_134 -> m6_160  [key=0, style=solid];
m6_134 -> m6_132  [color=blue, key=0, style=bold];
m6_135 -> m6_136  [key=0, style=solid];
m6_135 -> m6_138  [color=darkseagreen4, key=1, label=referenceLoopHandling, style=dashed];
m6_135 -> m6_140  [color=darkseagreen4, key=1, label=referenceLoopHandling, style=dashed];
m6_135 -> m6_148  [color=darkseagreen4, key=1, label=referenceLoopHandling, style=dashed];
m6_135 -> m6_8  [color=darkorchid, key=3, label="Local variable Newtonsoft.Json.ReferenceLoopHandling? referenceLoopHandling", style=bold];
m6_148 -> m6_149  [key=0, style=solid];
m6_148 -> m6_151  [key=0, style=solid];
m6_148 -> m6_155  [key=0, style=solid];
m6_148 -> m6_128  [key=2, style=dotted];
m6_148 -> m6_26  [key=2, style=dotted];
m6_143 -> m6_144  [key=0, style=solid];
m6_143 -> m6_159  [key=0, style=solid];
m6_143 -> m6_26  [key=2, style=dotted];
m6_144 -> m6_145  [key=0, style=solid];
m6_144 -> m6_146  [color=darkseagreen4, key=1, label=message, style=dashed];
m6_144 -> m6_147  [color=darkseagreen4, key=1, label=message, style=dashed];
m6_144 -> m6_144  [color=darkorchid, key=3, label="Local variable string message", style=bold];
m6_144 -> m6_26  [key=2, style=dotted];
m6_159 -> m6_160  [key=0, style=solid];
m6_159 -> m6_135  [color=blue, key=0, style=bold];
m6_149 -> m6_150  [key=0, style=solid];
m6_149 -> m6_25  [key=2, style=dotted];
m6_149 -> m6_24  [key=2, style=dotted];
m6_151 -> m6_152  [key=0, style=solid];
m6_151 -> m6_26  [key=2, style=dotted];
m6_155 -> m6_156  [key=0, style=solid];
m6_155 -> m6_26  [key=2, style=dotted];
m6_152 -> m6_153  [key=0, style=solid];
m6_152 -> m6_154  [key=0, style=solid];
m6_152 -> m6_26  [key=2, style=dotted];
m6_154 -> m6_160  [key=0, style=solid];
m6_154 -> m6_26  [key=2, style=dotted];
m6_154 -> m6_155  [key=0, style=solid];
m6_156 -> m6_157  [key=0, style=solid];
m6_156 -> m6_158  [key=0, style=solid];
m6_156 -> m6_26  [key=2, style=dotted];
m6_158 -> m6_160  [key=0, style=solid];
m6_158 -> m6_26  [key=2, style=dotted];
m6_158 -> m6_159  [key=0, style=solid];
m6_160 -> m6_132  [color=blue, key=0, style=bold];
m6_297 -> m6_298  [key=0, style=solid];
m6_297 -> m6_299  [key=0, style=solid];
m6_299 -> m6_22  [key=2, style=dotted];
m6_299 -> m6_23  [key=2, style=dotted];
m6_299 -> m6_300  [key=0, style=solid];
m6_299 -> m6_53  [key=2, style=dotted];
m6_298 -> m6_299  [key=0, style=solid];
m6_298 -> m6_176  [key=2, style=dotted];
m6_298 -> m6_165  [key=2, style=dotted];
m6_298 -> m6_166  [key=2, style=dotted];
m6_300 -> m6_300  [key=0, style=solid];
m6_300 -> m6_301  [key=0, style=solid];
m6_300 -> m6_24  [key=2, style=dotted];
m6_300 -> m6_177  [key=2, style=dotted];
m6_301 -> m6_297  [color=blue, key=0, style=bold];
m6_301 -> m6_289  [color=blue, key=0, style=bold];
m6_465 -> m6_466  [key=0, style=solid];
m6_465 -> m6_199  [key=2, style=dotted];
m6_466 -> m6_22  [key=2, style=dotted];
m6_466 -> m6_23  [key=2, style=dotted];
m6_466 -> m6_467  [key=0, style=solid];
m6_466 -> m6_470  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_466 -> m6_89  [color=blue, key=0, style=bold];
m6_467 -> m6_468  [key=0, style=solid];
m6_467 -> m6_42  [key=2, style=dotted];
m6_467 -> m6_469  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_468 -> m6_465  [color=blue, key=0, style=bold];
m6_1569 -> m6_1570  [key=0, style=solid];
m6_1571 -> m6_22  [key=2, style=dotted];
m6_1571 -> m6_23  [key=2, style=dotted];
m6_1571 -> m6_1572  [key=0, style=solid];
m6_1571 -> m6_1573  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1571 -> m6_1574  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1571 -> m6_1575  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1572 -> m6_25  [key=2, style=dotted];
m6_1572 -> m6_1573  [key=0, style=solid];
m6_1572 -> m6_24  [key=2, style=dotted];
m6_1573 -> m6_25  [key=2, style=dotted];
m6_1573 -> m6_1574  [key=0, style=solid];
m6_1573 -> m6_24  [key=2, style=dotted];
m6_1574 -> m6_25  [key=2, style=dotted];
m6_1574 -> m6_1575  [key=0, style=solid];
m6_1574 -> m6_24  [key=2, style=dotted];
m6_1570 -> m6_1571  [key=0, style=solid];
m6_1575 -> m6_1576  [key=0, style=solid];
m6_1575 -> m6_24  [key=2, style=dotted];
m6_1575 -> m6_28  [key=2, style=dotted];
m6_1576 -> m6_1569  [color=blue, key=0, style=bold];
m6_270 -> m6_277  [key=0, style=solid];
m6_270 -> m6_163  [key=2, style=dotted];
m6_270 -> m6_164  [key=2, style=dotted];
m6_249 -> m6_244  [color=blue, key=0, style=bold];
m6_1811 -> m6_1812  [key=0, style=solid];
m6_1812 -> m6_22  [key=2, style=dotted];
m6_1812 -> m6_23  [key=2, style=dotted];
m6_1812 -> m6_1813  [key=0, style=solid];
m6_1812 -> m6_1814  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1812 -> m6_1815  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1812 -> m6_1818  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1813 -> m6_250  [key=2, style=dotted];
m6_1813 -> m6_25  [key=2, style=dotted];
m6_1813 -> m6_1814  [key=0, style=solid];
m6_1814 -> m6_250  [key=2, style=dotted];
m6_1814 -> m6_25  [key=2, style=dotted];
m6_1814 -> m6_1815  [key=0, style=solid];
m6_1815 -> m6_1816  [key=0, style=solid];
m6_1815 -> m6_42  [key=2, style=dotted];
m6_1815 -> m6_1817  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1816 -> m6_1811  [color=blue, key=0, style=bold];
m6_242 -> m6_243  [key=0, style=solid];
m6_242 -> m6_253  [key=2, style=dotted];
m6_2045 -> m6_2046  [key=0, style=solid];
m6_463 -> m6_22  [key=2, style=dotted];
m6_463 -> m6_464  [key=0, style=solid];
m6_463 -> m6_55  [key=2, style=dotted];
m6_560 -> m6_22  [key=2, style=dotted];
m6_560 -> m6_23  [key=2, style=dotted];
m6_560 -> m6_561  [key=0, style=solid];
m6_560 -> m6_558  [key=2, style=dotted];
m6_576 -> m6_22  [key=2, style=dotted];
m6_576 -> m6_23  [key=2, style=dotted];
m6_576 -> m6_577  [key=0, style=solid];
m6_576 -> m6_558  [key=2, style=dotted];
m6_470 -> m6_250  [key=2, style=dotted];
m6_470 -> m6_471  [key=0, style=solid];
m6_470 -> m6_492  [key=0, style=solid];
m6_629 -> m6_250  [key=2, style=dotted];
m6_629 -> m6_630  [key=0, style=solid];
m6_636 -> m6_250  [key=2, style=dotted];
m6_636 -> m6_637  [key=0, style=solid];
m6_669 -> m6_250  [key=2, style=dotted];
m6_669 -> m6_670  [key=0, style=solid];
m6_1818 -> m6_250  [key=2, style=dotted];
m6_1818 -> m6_1819  [key=0, style=solid];
m6_1615 -> m6_25  [key=2, style=dotted];
m6_1615 -> m6_1616  [key=0, style=solid];
m6_1615 -> m6_24  [key=2, style=dotted];
m6_1874 -> m6_25  [key=2, style=dotted];
m6_1874 -> m6_1875  [key=0, style=solid];
m6_1874 -> m6_24  [key=2, style=dotted];
m6_1906 -> m6_25  [key=2, style=dotted];
m6_1906 -> m6_1907  [key=0, style=solid];
m6_1906 -> m6_24  [key=2, style=dotted];
m6_1909 -> m6_25  [key=2, style=dotted];
m6_1909 -> m6_1910  [key=0, style=solid];
m6_1909 -> m6_24  [key=2, style=dotted];
m6_44 -> m6_45  [key=0, style=solid];
m6_44 -> m6_46  [key=2, style=dotted];
m6_44 -> m6_53  [key=2, style=dotted];
m6_61 -> m6_62  [key=0, style=solid];
m6_61 -> m6_46  [key=2, style=dotted];
m6_61 -> m6_83  [key=2, style=dotted];
m6_64 -> m6_65  [key=0, style=solid];
m6_64 -> m6_46  [key=2, style=dotted];
m6_67 -> m6_68  [key=0, style=solid];
m6_67 -> m6_46  [key=2, style=dotted];
m6_67 -> m6_69  [color=darkseagreen4, key=1, label=arrayContract, style=dashed];
m6_67 -> m6_70  [color=darkseagreen4, key=1, label=arrayContract, style=dashed];
m6_70 -> m6_71  [key=0, style=solid];
m6_70 -> m6_46  [key=2, style=dotted];
m6_70 -> m6_80  [key=0, style=solid];
m6_70 -> m6_86  [key=2, style=dotted];
m6_110 -> m6_111  [key=0, style=solid];
m6_110 -> m6_24  [key=2, style=dotted];
m6_110 -> m6_112  [key=0, style=solid];
m6_113 -> m6_114  [key=0, style=solid];
m6_113 -> m6_115  [key=2, style=dotted];
m6_113 -> m6_118  [key=2, style=dotted];
m6_117 -> m6_118  [key=0, style=solid];
m6_117 -> m6_46  [key=2, style=dotted];
m6_117 -> m6_311  [key=0, style=solid];
m6_117 -> m6_398  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.PreserveReferencesHandling flag", style=bold];
m6_117 -> m6_40  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.PreserveReferencesHandling flag", style=bold];
m6_277 -> m6_277  [key=0, style=solid];
m6_277 -> m6_278  [key=0, style=solid];
m6_277 -> m6_24  [key=2, style=dotted];
m6_277 -> m6_247  [color=blue, key=0, style=bold];
m6_295 -> m6_296  [key=0, style=solid];
m6_295 -> m6_24  [key=2, style=dotted];
m6_308 -> m6_308  [key=0, style=solid];
m6_308 -> m6_309  [key=0, style=solid];
m6_308 -> m6_24  [key=2, style=dotted];
m6_462 -> m6_463  [key=0, style=solid];
m6_462 -> m6_466  [key=0, style=solid];
m6_464 -> m6_462  [color=blue, key=0, style=bold];
m6_464 -> m6_465  [key=0, style=solid];
m6_464 -> m6_253  [key=2, style=dotted];
m6_559 -> m6_560  [key=0, style=solid];
m6_561 -> m6_562  [key=0, style=solid];
m6_561 -> m6_46  [key=2, style=dotted];
m6_575 -> m6_576  [key=0, style=solid];
m6_577 -> m6_578  [key=0, style=solid];
m6_577 -> m6_46  [key=2, style=dotted];
m6_643 -> m6_645  [key=2, style=dotted];
m6_643 -> m6_644  [key=0, style=solid];
m6_654 -> m6_645  [key=2, style=dotted];
m6_654 -> m6_655  [key=0, style=solid];
m6_822 -> m6_823  [key=0, style=solid];
m6_822 -> m6_46  [key=2, style=dotted];
m6_825 -> m6_826  [key=0, style=solid];
m6_825 -> m6_46  [key=2, style=dotted];
m6_828 -> m6_829  [key=0, style=solid];
m6_828 -> m6_46  [key=2, style=dotted];
m6_831 -> m6_832  [key=0, style=solid];
m6_831 -> m6_46  [key=2, style=dotted];
m6_834 -> m6_835  [key=0, style=solid];
m6_834 -> m6_46  [key=2, style=dotted];
m6_859 -> m6_860  [key=0, style=solid];
m6_859 -> m6_115  [key=2, style=dotted];
m6_862 -> m6_863  [key=0, style=solid];
m6_862 -> m6_24  [key=2, style=dotted];
m6_865 -> m6_866  [key=0, style=solid];
m6_865 -> m6_115  [key=2, style=dotted];
m6_897 -> m6_898  [key=0, style=solid];
m6_897 -> m6_24  [key=2, style=dotted];
m6_900 -> m6_901  [key=0, style=solid];
m6_900 -> m6_24  [key=2, style=dotted];
m6_1075 -> m6_1076  [key=0, style=solid];
m6_1075 -> m6_24  [key=2, style=dotted];
m6_1153 -> m6_1154  [key=0, style=solid];
m6_1153 -> m6_24  [key=2, style=dotted];
m6_1170 -> m6_1171  [key=0, style=solid];
m6_1170 -> m6_85  [key=2, style=dotted];
m6_1183 -> m6_1184  [key=0, style=solid];
m6_1183 -> m6_115  [key=2, style=dotted];
m6_1190 -> m6_1191  [key=0, style=solid];
m6_1190 -> m6_85  [key=2, style=dotted];
m6_1197 -> m6_1198  [key=0, style=solid];
m6_1197 -> m6_1177  [key=2, style=dotted];
m6_1211 -> m6_1212  [key=0, style=solid];
m6_1211 -> m6_85  [key=2, style=dotted];
m6_1218 -> m6_1219  [key=0, style=solid];
m6_1218 -> m6_85  [key=2, style=dotted];
m6_1289 -> m6_1290  [key=0, style=solid];
m6_1289 -> m6_1177  [key=2, style=dotted];
m6_1391 -> m6_1392  [key=0, style=solid];
m6_1391 -> m6_46  [key=2, style=dotted];
m6_1398 -> m6_1399  [key=0, style=solid];
m6_1398 -> m6_24  [key=2, style=dotted];
m6_1405 -> m6_1406  [key=0, style=solid];
m6_1405 -> m6_24  [key=2, style=dotted];
m6_1412 -> m6_1413  [key=0, style=solid];
m6_1412 -> m6_24  [key=2, style=dotted];
m6_1419 -> m6_1420  [key=0, style=solid];
m6_1419 -> m6_24  [key=2, style=dotted];
m6_1426 -> m6_1427  [key=0, style=solid];
m6_1426 -> m6_24  [key=2, style=dotted];
m6_1559 -> m6_1560  [key=0, style=solid];
m6_1559 -> m6_24  [key=2, style=dotted];
m6_1567 -> m6_1568  [key=0, style=solid];
m6_1567 -> m6_24  [key=2, style=dotted];
m6_1598 -> m6_1599  [key=0, style=solid];
m6_1598 -> m6_24  [key=2, style=dotted];
m6_1779 -> m6_1780  [key=0, style=solid];
m6_1779 -> m6_24  [key=2, style=dotted];
m6_2031 -> m6_2032  [key=0, style=solid];
m6_2031 -> m6_24  [key=2, style=dotted];
m6_2034 -> m6_2035  [key=0, style=solid];
m6_2034 -> m6_24  [key=2, style=dotted];
m6_2037 -> m6_2038  [key=0, style=solid];
m6_2037 -> m6_24  [key=2, style=dotted];
m6_2040 -> m6_2041  [key=0, style=solid];
m6_2040 -> m6_24  [key=2, style=dotted];
m6_2043 -> m6_2044  [key=0, style=solid];
m6_2043 -> m6_24  [key=2, style=dotted];
m6_2046 -> m6_2047  [key=0, style=solid];
m6_2046 -> m6_24  [key=2, style=dotted];
m6_469 -> m6_470  [key=0, style=solid];
m6_471 -> m6_469  [color=blue, key=0, style=bold];
m6_471 -> m6_472  [key=0, style=solid];
m6_628 -> m6_629  [key=0, style=solid];
m6_630 -> m6_628  [color=blue, key=0, style=bold];
m6_635 -> m6_636  [key=0, style=solid];
m6_637 -> m6_635  [color=blue, key=0, style=bold];
m6_668 -> m6_669  [key=0, style=solid];
m6_670 -> m6_668  [color=blue, key=0, style=bold];
m6_1817 -> m6_1818  [key=0, style=solid];
m6_1819 -> m6_1817  [color=blue, key=0, style=bold];
m6_1614 -> m6_1615  [key=0, style=solid];
m6_1616 -> m6_1614  [color=blue, key=0, style=bold];
m6_1873 -> m6_1874  [key=0, style=solid];
m6_1875 -> m6_1873  [color=blue, key=0, style=bold];
m6_1905 -> m6_1906  [key=0, style=solid];
m6_1907 -> m6_1905  [color=blue, key=0, style=bold];
m6_1908 -> m6_1909  [key=0, style=solid];
m6_1910 -> m6_1908  [color=blue, key=0, style=bold];
m6_43 -> m6_44  [key=0, style=solid];
m6_43 -> m6_52  [key=2, style=dotted];
m6_45 -> m6_43  [color=blue, key=0, style=bold];
m6_45 -> m6_46  [key=0, style=solid];
m6_45 -> m6_54  [key=2, style=dotted];
m6_60 -> m6_61  [key=0, style=solid];
m6_60 -> m6_63  [key=0, style=solid];
m6_62 -> m6_60  [color=blue, key=0, style=bold];
m6_62 -> m6_80  [key=0, style=solid];
m6_63 -> m6_64  [key=0, style=solid];
m6_63 -> m6_66  [key=0, style=solid];
m6_63 -> m6_71  [key=0, style=solid];
m6_63 -> m6_73  [key=0, style=solid];
m6_63 -> m6_75  [key=0, style=solid];
m6_63 -> m6_78  [key=0, style=solid];
m6_65 -> m6_63  [color=blue, key=0, style=bold];
m6_65 -> m6_80  [key=0, style=solid];
m6_65 -> m6_84  [key=2, style=dotted];
m6_66 -> m6_67  [key=0, style=solid];
m6_68 -> m6_66  [color=blue, key=0, style=bold];
m6_68 -> m6_69  [key=0, style=solid];
m6_68 -> m6_70  [key=0, style=solid];
m6_69 -> m6_70  [key=0, style=solid];
m6_69 -> m6_80  [key=0, style=solid];
m6_69 -> m6_85  [key=2, style=dotted];
m6_71 -> m6_69  [color=blue, key=0, style=bold];
m6_71 -> m6_72  [key=0, style=solid];
m6_109 -> m6_110  [key=0, style=solid];
m6_109 -> m6_113  [key=0, style=solid];
m6_111 -> m6_109  [color=blue, key=0, style=bold];
m6_111 -> m6_113  [key=0, style=solid];
m6_111 -> m6_117  [key=2, style=dotted];
m6_112 -> m6_113  [key=0, style=solid];
m6_112 -> m6_117  [key=2, style=dotted];
m6_114 -> m6_112  [color=blue, key=0, style=bold];
m6_114 -> m6_116  [key=0, style=solid];
m6_116 -> m6_117  [key=0, style=solid];
m6_116 -> m6_20  [color=blue, key=0, style=bold];
m6_118 -> m6_116  [color=blue, key=0, style=bold];
m6_276 -> m6_277  [key=0, style=solid];
m6_278 -> m6_276  [color=blue, key=0, style=bold];
m6_278 -> m6_513  [key=0, style=solid];
m6_278 -> m6_515  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m6_278 -> m6_517  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_278 -> m6_247  [color=darkorchid, key=3, label="Parameter variable object target", style=bold];
m6_278 -> m6_126  [color=darkorchid, key=3, label="method methodReturn bool ShouldSerialize", style=bold];
m6_294 -> m6_295  [key=0, style=solid];
m6_294 -> m6_288  [color=blue, key=0, style=bold];
m6_296 -> m6_294  [color=blue, key=0, style=bold];
m6_296 -> m6_297  [key=0, style=solid];
m6_296 -> m6_175  [key=2, style=dotted];
m6_296 -> m6_298  [color=darkseagreen4, key=1, label=reference, style=dashed];
m6_296 -> m6_300  [color=darkseagreen4, key=1, label=reference, style=dashed];
m6_307 -> m6_308  [key=0, style=solid];
m6_307 -> m6_52  [color=blue, key=0, style=bold];
m6_309 -> m6_307  [color=blue, key=0, style=bold];
m6_309 -> m6_310  [key=0, style=solid];
m6_562 -> m6_559  [color=blue, key=0, style=bold];
m6_578 -> m6_575  [color=blue, key=0, style=bold];
m6_642 -> m6_643  [key=0, style=solid];
m6_644 -> m6_642  [color=blue, key=0, style=bold];
m6_653 -> m6_654  [key=0, style=solid];
m6_655 -> m6_653  [color=blue, key=0, style=bold];
m6_821 -> m6_822  [key=0, style=solid];
m6_823 -> m6_821  [color=blue, key=0, style=bold];
m6_824 -> m6_825  [key=0, style=solid];
m6_826 -> m6_824  [color=blue, key=0, style=bold];
m6_827 -> m6_828  [key=0, style=solid];
m6_829 -> m6_827  [color=blue, key=0, style=bold];
m6_830 -> m6_831  [key=0, style=solid];
m6_832 -> m6_830  [color=blue, key=0, style=bold];
m6_833 -> m6_834  [key=0, style=solid];
m6_835 -> m6_833  [color=blue, key=0, style=bold];
m6_858 -> m6_859  [key=0, style=solid];
m6_860 -> m6_858  [color=blue, key=0, style=bold];
m6_861 -> m6_862  [key=0, style=solid];
m6_863 -> m6_861  [color=blue, key=0, style=bold];
m6_864 -> m6_865  [key=0, style=solid];
m6_866 -> m6_864  [color=blue, key=0, style=bold];
m6_896 -> m6_897  [key=0, style=solid];
m6_898 -> m6_896  [color=blue, key=0, style=bold];
m6_899 -> m6_900  [key=0, style=solid];
m6_901 -> m6_899  [color=blue, key=0, style=bold];
m6_1074 -> m6_1075  [key=0, style=solid];
m6_1076 -> m6_1074  [color=blue, key=0, style=bold];
m6_1152 -> m6_1153  [key=0, style=solid];
m6_1154 -> m6_1152  [color=blue, key=0, style=bold];
m6_1169 -> m6_1170  [key=0, style=solid];
m6_1171 -> m6_1169  [color=blue, key=0, style=bold];
m6_1182 -> m6_1183  [key=0, style=solid];
m6_1184 -> m6_1182  [color=blue, key=0, style=bold];
m6_1189 -> m6_1190  [key=0, style=solid];
m6_1191 -> m6_1189  [color=blue, key=0, style=bold];
m6_1196 -> m6_1197  [key=0, style=solid];
m6_1198 -> m6_1196  [color=blue, key=0, style=bold];
m6_1210 -> m6_1211  [key=0, style=solid];
m6_1212 -> m6_1210  [color=blue, key=0, style=bold];
m6_1217 -> m6_1218  [key=0, style=solid];
m6_1219 -> m6_1217  [color=blue, key=0, style=bold];
m6_1288 -> m6_1289  [key=0, style=solid];
m6_1290 -> m6_1288  [color=blue, key=0, style=bold];
m6_1390 -> m6_1391  [key=0, style=solid];
m6_1392 -> m6_1390  [color=blue, key=0, style=bold];
m6_1397 -> m6_1398  [key=0, style=solid];
m6_1399 -> m6_1397  [color=blue, key=0, style=bold];
m6_1404 -> m6_1405  [key=0, style=solid];
m6_1406 -> m6_1404  [color=blue, key=0, style=bold];
m6_1411 -> m6_1412  [key=0, style=solid];
m6_1413 -> m6_1411  [color=blue, key=0, style=bold];
m6_1418 -> m6_1419  [key=0, style=solid];
m6_1420 -> m6_1418  [color=blue, key=0, style=bold];
m6_1425 -> m6_1426  [key=0, style=solid];
m6_1427 -> m6_1425  [color=blue, key=0, style=bold];
m6_1558 -> m6_1559  [key=0, style=solid];
m6_1560 -> m6_1558  [color=blue, key=0, style=bold];
m6_1566 -> m6_1567  [key=0, style=solid];
m6_1568 -> m6_1566  [color=blue, key=0, style=bold];
m6_1597 -> m6_1598  [key=0, style=solid];
m6_1599 -> m6_1597  [color=blue, key=0, style=bold];
m6_1778 -> m6_1779  [key=0, style=solid];
m6_1780 -> m6_1778  [color=blue, key=0, style=bold];
m6_2030 -> m6_2031  [key=0, style=solid];
m6_2032 -> m6_2030  [color=blue, key=0, style=bold];
m6_2033 -> m6_2034  [key=0, style=solid];
m6_2035 -> m6_2033  [color=blue, key=0, style=bold];
m6_2036 -> m6_2037  [key=0, style=solid];
m6_2038 -> m6_2036  [color=blue, key=0, style=bold];
m6_2039 -> m6_2040  [key=0, style=solid];
m6_2041 -> m6_2039  [color=blue, key=0, style=bold];
m6_2042 -> m6_2043  [key=0, style=solid];
m6_2044 -> m6_2042  [color=blue, key=0, style=bold];
m6_2047 -> m6_2045  [color=blue, key=0, style=bold];
m6_2068 -> m6_2069  [key=0, style=solid];
m6_2068 -> m6_2071  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m6_2069 -> m6_2070  [key=0, style=solid];
m6_2069 -> m6_2071  [key=0, style=solid];
m6_2071 -> m6_2072  [key=0, style=solid];
m6_2071 -> m6_2074  [key=2, style=dotted];
m6_2070 -> m6_2072  [key=0, style=solid];
m6_2070 -> m6_2073  [key=2, style=dotted];
m6_2072 -> m6_2068  [color=blue, key=0, style=bold];
m6_729 -> m6_730  [key=0, style=solid];
m6_732 -> m6_22  [key=2, style=dotted];
m6_732 -> m6_23  [key=2, style=dotted];
m6_732 -> m6_733  [key=0, style=solid];
m6_732 -> m6_652  [key=2, style=dotted];
m6_732 -> m6_734  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_732 -> m6_735  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_732 -> m6_736  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_732 -> m6_737  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_732 -> m6_739  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_732 -> m6_740  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_732 -> m6_741  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_732 -> m6_742  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_733 -> m6_250  [key=2, style=dotted];
m6_733 -> m6_25  [key=2, style=dotted];
m6_733 -> m6_734  [key=0, style=solid];
m6_735 -> m6_250  [key=2, style=dotted];
m6_735 -> m6_25  [key=2, style=dotted];
m6_735 -> m6_736  [key=0, style=solid];
m6_740 -> m6_250  [key=2, style=dotted];
m6_740 -> m6_25  [key=2, style=dotted];
m6_740 -> m6_741  [key=0, style=solid];
m6_742 -> m6_250  [key=2, style=dotted];
m6_742 -> m6_743  [key=0, style=solid];
m6_742 -> m6_28  [key=2, style=dotted];
m6_731 -> m6_732  [key=0, style=solid];
m6_731 -> m6_228  [key=2, style=dotted];
m6_731 -> m6_738  [color=darkseagreen4, key=1, label=helloWorldData, style=dashed];
m6_734 -> m6_26  [key=2, style=dotted];
m6_734 -> m6_735  [key=0, style=solid];
m6_736 -> m6_26  [key=2, style=dotted];
m6_736 -> m6_737  [key=0, style=solid];
m6_737 -> m6_645  [key=2, style=dotted];
m6_737 -> m6_738  [key=0, style=solid];
m6_739 -> m6_26  [key=2, style=dotted];
m6_739 -> m6_740  [key=0, style=solid];
m6_741 -> m6_26  [key=2, style=dotted];
m6_741 -> m6_742  [key=0, style=solid];
m6_730 -> m6_731  [key=0, style=solid];
m6_738 -> m6_739  [key=0, style=solid];
m6_738 -> m6_744  [key=2, style=dotted];
m6_743 -> m6_729  [color=blue, key=0, style=bold];
m6_787 -> m6_788  [key=0, style=solid];
m6_789 -> m6_22  [key=2, style=dotted];
m6_789 -> m6_23  [key=2, style=dotted];
m6_789 -> m6_790  [key=0, style=solid];
m6_788 -> m6_789  [key=0, style=solid];
m6_790 -> m6_790  [key=0, style=solid];
m6_790 -> m6_791  [key=0, style=solid];
m6_790 -> m6_24  [key=2, style=dotted];
m6_791 -> m6_787  [color=blue, key=0, style=bold];
m6_1788 -> m6_1789  [key=0, style=solid];
m6_1790 -> m6_22  [key=2, style=dotted];
m6_1790 -> m6_23  [key=2, style=dotted];
m6_1790 -> m6_1791  [key=0, style=solid];
m6_1790 -> m6_1792  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1790 -> m6_1793  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1789 -> m6_1790  [key=0, style=solid];
m6_1791 -> m6_1792  [key=0, style=solid];
m6_1791 -> m6_115  [key=2, style=dotted];
m6_1792 -> m6_26  [key=2, style=dotted];
m6_1792 -> m6_1793  [key=0, style=solid];
m6_1793 -> m6_26  [key=2, style=dotted];
m6_1793 -> m6_1794  [key=0, style=solid];
m6_1794 -> m6_1788  [color=blue, key=0, style=bold];
m6_51 -> m6_26  [key=2, style=dotted];
m6_51 -> m6_52  [key=0, style=solid];
m6_2048 -> m6_2049  [key=0, style=solid];
m6_2057 -> m6_22  [key=2, style=dotted];
m6_2057 -> m6_2058  [key=0, style=solid];
m6_2057 -> m6_2059  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_2057 -> m6_2061  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_2057 -> m6_2063  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_2056 -> m6_23  [key=2, style=dotted];
m6_2056 -> m6_2057  [key=0, style=solid];
m6_2058 -> m6_25  [key=2, style=dotted];
m6_2058 -> m6_2059  [key=0, style=solid];
m6_2058 -> m6_24  [key=2, style=dotted];
m6_2063 -> m6_25  [key=2, style=dotted];
m6_2063 -> m6_2064  [key=0, style=solid];
m6_2063 -> m6_24  [key=2, style=dotted];
m6_2059 -> m6_2060  [key=0, style=solid];
m6_2059 -> m6_115  [key=2, style=dotted];
m6_2061 -> m6_2062  [key=0, style=solid];
m6_2061 -> m6_115  [key=2, style=dotted];
m6_2055 -> m6_2056  [key=0, style=solid];
m6_2055 -> m6_505  [key=2, style=dotted];
m6_2060 -> m6_26  [key=2, style=dotted];
m6_2060 -> m6_2061  [key=0, style=solid];
m6_2062 -> m6_26  [key=2, style=dotted];
m6_2062 -> m6_2063  [key=0, style=solid];
m6_2049 -> m6_2055  [color=darkseagreen4, key=1, label=sw, style=dashed];
m6_2049 -> m6_2050  [key=0, style=solid];
m6_2049 -> m6_500  [key=2, style=dotted];
m6_2054 -> m6_2055  [key=0, style=solid];
m6_2054 -> m6_355  [key=2, style=dotted];
m6_2050 -> m6_2054  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_2050 -> m6_501  [key=2, style=dotted];
m6_2050 -> m6_2051  [key=0, style=solid];
m6_2050 -> m6_2052  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_2050 -> m6_2053  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_2053 -> m6_2054  [key=0, style=solid];
m6_2053 -> m6_2065  [key=2, style=dotted];
m6_2051 -> m6_2052  [key=0, style=solid];
m6_2051 -> m6_502  [key=2, style=dotted];
m6_2052 -> m6_2053  [key=0, style=solid];
m6_2052 -> m6_2065  [key=2, style=dotted];
m6_2064 -> m6_2048  [color=blue, key=0, style=bold];
m6_1178 -> m6_1179  [key=0, style=solid];
m6_1179 -> m6_22  [key=2, style=dotted];
m6_1179 -> m6_23  [key=2, style=dotted];
m6_1179 -> m6_1180  [key=0, style=solid];
m6_1179 -> m6_1183  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1180 -> m6_1181  [key=0, style=solid];
m6_1180 -> m6_42  [key=2, style=dotted];
m6_1180 -> m6_1182  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1181 -> m6_1178  [color=blue, key=0, style=bold];
m6_353 -> m6_396  [key=0, style=solid];
m6_353 -> m6_397  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m6_353 -> m6_398  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m6_353 -> m6_401  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_353 -> m6_403  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_353 -> m6_405  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_353 -> m6_406  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_353 -> m6_407  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m6_353 -> m6_408  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m6_353 -> m6_85  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerProperty", style=bold];
m6_353 -> m6_86  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerProperty", style=bold];
m6_353 -> m6_330  [color=darkorchid, key=3, label="Parameter variable object values", style=bold];
m6_353 -> m6_399  [color=darkorchid, key=3, label="method methodReturn bool WriteStartArray", style=bold];
m6_353 -> m6_26  [key=2, style=dotted];
m6_353 -> m6_354  [key=0, style=solid];
m6_328 -> m6_26  [key=2, style=dotted];
m6_328 -> m6_329  [key=0, style=solid];
m6_162 -> m6_163  [key=0, style=solid];
m6_745 -> m6_746  [key=0, style=solid];
m6_748 -> m6_22  [key=2, style=dotted];
m6_748 -> m6_23  [key=2, style=dotted];
m6_748 -> m6_749  [key=0, style=solid];
m6_748 -> m6_652  [key=2, style=dotted];
m6_748 -> m6_750  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_748 -> m6_751  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_748 -> m6_752  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_748 -> m6_753  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_748 -> m6_754  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_748 -> m6_755  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_748 -> m6_757  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_748 -> m6_758  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_748 -> m6_759  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_748 -> m6_760  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_749 -> m6_250  [key=2, style=dotted];
m6_749 -> m6_25  [key=2, style=dotted];
m6_749 -> m6_750  [key=0, style=solid];
m6_751 -> m6_250  [key=2, style=dotted];
m6_751 -> m6_25  [key=2, style=dotted];
m6_751 -> m6_752  [key=0, style=solid];
m6_752 -> m6_250  [key=2, style=dotted];
m6_752 -> m6_25  [key=2, style=dotted];
m6_752 -> m6_753  [key=0, style=solid];
m6_754 -> m6_250  [key=2, style=dotted];
m6_754 -> m6_25  [key=2, style=dotted];
m6_754 -> m6_755  [key=0, style=solid];
m6_758 -> m6_250  [key=2, style=dotted];
m6_758 -> m6_25  [key=2, style=dotted];
m6_758 -> m6_759  [key=0, style=solid];
m6_760 -> m6_250  [key=2, style=dotted];
m6_760 -> m6_761  [key=0, style=solid];
m6_760 -> m6_28  [key=2, style=dotted];
m6_747 -> m6_748  [key=0, style=solid];
m6_747 -> m6_228  [key=2, style=dotted];
m6_747 -> m6_756  [color=darkseagreen4, key=1, label=helloWorldData, style=dashed];
m6_750 -> m6_26  [key=2, style=dotted];
m6_750 -> m6_751  [key=0, style=solid];
m6_753 -> m6_26  [key=2, style=dotted];
m6_753 -> m6_754  [key=0, style=solid];
m6_755 -> m6_645  [key=2, style=dotted];
m6_755 -> m6_756  [key=0, style=solid];
m6_757 -> m6_26  [key=2, style=dotted];
m6_757 -> m6_758  [key=0, style=solid];
m6_759 -> m6_26  [key=2, style=dotted];
m6_759 -> m6_760  [key=0, style=solid];
m6_746 -> m6_747  [key=0, style=solid];
m6_756 -> m6_757  [key=0, style=solid];
m6_756 -> m6_744  [key=2, style=dotted];
m6_761 -> m6_745  [color=blue, key=0, style=bold];
m6_1381 -> m6_1382  [key=0, style=solid];
m6_1383 -> m6_22  [key=2, style=dotted];
m6_1383 -> m6_23  [key=2, style=dotted];
m6_1383 -> m6_1384  [key=0, style=solid];
m6_1383 -> m6_1385  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1383 -> m6_1386  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1383 -> m6_1387  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1383 -> m6_1388  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1383 -> m6_1391  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1384 -> m6_25  [key=2, style=dotted];
m6_1384 -> m6_1385  [key=0, style=solid];
m6_1384 -> m6_24  [key=2, style=dotted];
m6_1386 -> m6_25  [key=2, style=dotted];
m6_1386 -> m6_1387  [key=0, style=solid];
m6_1386 -> m6_24  [key=2, style=dotted];
m6_1382 -> m6_1383  [key=0, style=solid];
m6_1385 -> m6_26  [key=2, style=dotted];
m6_1385 -> m6_1386  [key=0, style=solid];
m6_1387 -> m6_26  [key=2, style=dotted];
m6_1387 -> m6_1388  [key=0, style=solid];
m6_1388 -> m6_1389  [key=0, style=solid];
m6_1388 -> m6_42  [key=2, style=dotted];
m6_1388 -> m6_1390  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1389 -> m6_1381  [color=blue, key=0, style=bold];
m6_1781 -> m6_1782  [key=0, style=solid];
m6_1783 -> m6_22  [key=2, style=dotted];
m6_1783 -> m6_23  [key=2, style=dotted];
m6_1783 -> m6_1784  [key=0, style=solid];
m6_1783 -> m6_1785  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1783 -> m6_1786  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1782 -> m6_1783  [key=0, style=solid];
m6_1784 -> m6_1785  [key=0, style=solid];
m6_1784 -> m6_115  [key=2, style=dotted];
m6_1785 -> m6_26  [key=2, style=dotted];
m6_1785 -> m6_1786  [key=0, style=solid];
m6_1786 -> m6_26  [key=2, style=dotted];
m6_1786 -> m6_1787  [key=0, style=solid];
m6_1787 -> m6_1781  [color=blue, key=0, style=bold];
m6_355 -> m6_26  [key=2, style=dotted];
m6_355 -> m6_356  [key=0, style=solid];
m6_230 -> m6_231  [key=0, style=solid];
m6_230 -> m6_19  [key=2, style=dotted];
m6_230 -> m6_230  [color=darkseagreen4, key=1, label=e, style=dashed];
m6_230 -> m6_233  [color=darkseagreen4, key=1, label=keyContract, style=dashed];
m6_232 -> m6_22  [key=2, style=dotted];
m6_232 -> m6_233  [key=0, style=solid];
m6_232 -> m6_229  [key=2, style=dotted];
m6_232 -> m6_234  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_237 -> m6_22  [key=2, style=dotted];
m6_237 -> m6_238  [key=0, style=solid];
m6_237 -> m6_229  [key=2, style=dotted];
m6_237 -> m6_239  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_237 -> m6_21  [key=2, style=dotted];
m6_237 -> m6_237  [color=darkseagreen4, key=1, label=e, style=dashed];
m6_233 -> m6_25  [key=2, style=dotted];
m6_233 -> m6_234  [key=0, style=solid];
m6_233 -> m6_250  [key=2, style=dotted];
m6_233 -> m6_233  [color=darkseagreen4, key=1, label=e, style=dashed];
m6_233 -> m6_235  [color=darkseagreen4, key=1, label=e, style=dashed];
m6_238 -> m6_25  [key=2, style=dotted];
m6_238 -> m6_239  [key=0, style=solid];
m6_238 -> m6_229  [key=0, style=solid];
m6_238 -> m6_132  [key=2, style=dotted];
m6_238 -> m6_238  [color=darkseagreen4, key=1, label=e, style=dashed];
m6_238 -> m6_240  [color=darkseagreen4, key=1, label=e, style=dashed];
m6_240 -> m6_25  [key=2, style=dotted];
m6_240 -> m6_241  [key=0, style=solid];
m6_240 -> m6_229  [key=0, style=solid];
m6_240 -> m6_22  [key=2, style=dotted];
m6_240 -> m6_240  [color=darkseagreen4, key=1, label=e, style=dashed];
m6_231 -> m6_232  [key=0, style=solid];
m6_231 -> m6_233  [color=darkseagreen4, key=1, label=e, style=dashed];
m6_231 -> m6_242  [key=2, style=dotted];
m6_231 -> m6_235  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
m6_231 -> m6_19  [key=2, style=dotted];
m6_231 -> m6_231  [color=darkseagreen4, key=1, label=e, style=dashed];
m6_231 -> m6_238  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
m6_231 -> m6_240  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
m6_234 -> m6_235  [key=0, style=solid];
m6_234 -> m6_243  [key=2, style=dotted];
m6_234 -> m6_251  [key=2, style=dotted];
m6_234 -> m6_234  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m6_234 -> m6_236  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m6_234 -> m6_239  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m6_236 -> m6_237  [key=0, style=solid];
m6_236 -> m6_238  [color=darkseagreen4, key=1, label=ms, style=dashed];
m6_236 -> m6_240  [color=darkseagreen4, key=1, label=ms, style=dashed];
m6_236 -> m6_242  [key=2, style=dotted];
m6_236 -> m6_252  [key=2, style=dotted];
m6_239 -> m6_240  [key=0, style=solid];
m6_239 -> m6_243  [key=2, style=dotted];
m6_239 -> m6_252  [key=2, style=dotted];
m6_235 -> m6_236  [key=0, style=solid];
m6_235 -> m6_28  [key=2, style=dotted];
m6_235 -> m6_238  [key=0, style=solid];
m6_235 -> m6_20  [key=2, style=dotted];
m6_235 -> m6_235  [color=darkseagreen4, key=1, label=e, style=dashed];
m6_235 -> m6_237  [color=darkseagreen4, key=1, label=e, style=dashed];
m6_241 -> m6_230  [color=blue, key=0, style=bold];
m6_241 -> m6_242  [key=0, style=solid];
m6_241 -> m6_55  [key=2, style=dotted];
m6_121 -> m6_122  [key=0, style=solid];
m6_121 -> m6_124  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_121 -> m6_44  [color=darkorchid, key=3, label="method methodReturn bool ShouldWriteProperty", style=bold];
m6_121 -> m6_126  [color=darkorchid, key=3, label="method methodReturn bool ShouldWriteProperty", style=bold];
m6_121 -> m6_247  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty property", style=bold];
m6_121 -> m6_22  [key=2, style=dotted];
m6_121 -> m6_23  [key=2, style=dotted];
m6_121 -> m6_123  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_121 -> m6_125  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_121 -> m6_127  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_121 -> m6_128  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_121 -> m6_129  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_121 -> m6_130  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_121 -> m6_133  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_122 -> m6_123  [key=0, style=solid];
m6_122 -> m6_124  [key=0, style=solid];
m6_122 -> m6_128  [key=2, style=dotted];
m6_122 -> m6_25  [key=2, style=dotted];
m6_122 -> m6_24  [key=2, style=dotted];
m6_124 -> m6_125  [key=0, style=solid];
m6_124 -> m6_126  [key=0, style=solid];
m6_124 -> m6_128  [key=2, style=dotted];
m6_124 -> m6_129  [key=2, style=dotted];
m6_124 -> m6_130  [key=2, style=dotted];
m6_124 -> m6_131  [key=2, style=dotted];
m6_124 -> m6_25  [key=2, style=dotted];
m6_124 -> m6_24  [key=2, style=dotted];
m6_123 -> m6_127  [key=0, style=solid];
m6_123 -> m6_26  [key=2, style=dotted];
m6_123 -> m6_124  [key=0, style=solid];
m6_125 -> m6_127  [key=0, style=solid];
m6_125 -> m6_26  [key=2, style=dotted];
m6_125 -> m6_126  [key=0, style=solid];
m6_126 -> m6_127  [key=0, style=solid];
m6_126 -> m6_25  [key=2, style=dotted];
m6_126 -> m6_24  [key=2, style=dotted];
m6_127 -> m6_121  [color=blue, key=0, style=bold];
m6_127 -> m6_26  [key=2, style=dotted];
m6_127 -> m6_128  [key=0, style=solid];
m6_19 -> m6_32  [key=0, style=solid];
m6_19 -> m6_34  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_19 -> m6_2  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m6_19 -> m6_247  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m6_19 -> m6_337  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m6_19 -> m6_379  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m6_19 -> m6_451  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m6_19 -> m6_8  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Serialization.JsonContract GetContractSafe", style=bold];
m6_19 -> m6_20  [key=0, style=solid];
m6_1679 -> m6_1680  [key=0, style=solid];
m6_1681 -> m6_22  [key=2, style=dotted];
m6_1681 -> m6_1682  [key=0, style=solid];
m6_1681 -> m6_229  [key=2, style=dotted];
m6_1681 -> m6_269  [key=2, style=dotted];
m6_1681 -> m6_270  [key=2, style=dotted];
m6_1681 -> m6_1683  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1684  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1685  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1686  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1687  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1688  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1689  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1690  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1691  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1692  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1693  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1694  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1695  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1696  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1697  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1698  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1699  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1700  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1701  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1702  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1703  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1704  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1705  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1706  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1707  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1708  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1709  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1710  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1711  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1712  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1713  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1714  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1715  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1716  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1717  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1718  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1719  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1720  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1721  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1722  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1723  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1724  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1725  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1726  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1727  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1728  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1729  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1730  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1731  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1732  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1733  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1734  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1735  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1736  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1737  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1738  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1739  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1740  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1741  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1742  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1743  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1744  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1745  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1746  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1747  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1748  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1749  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1750  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1751  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1752  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1753  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1754  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1755  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1756  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1757  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1758  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1759  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1760  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1761  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1762  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1681 -> m6_1763  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1682 -> m6_25  [key=2, style=dotted];
m6_1682 -> m6_1683  [key=0, style=solid];
m6_1682 -> m6_24  [key=2, style=dotted];
m6_1686 -> m6_25  [key=2, style=dotted];
m6_1686 -> m6_1687  [key=0, style=solid];
m6_1686 -> m6_24  [key=2, style=dotted];
m6_1689 -> m6_25  [key=2, style=dotted];
m6_1689 -> m6_1690  [key=0, style=solid];
m6_1689 -> m6_24  [key=2, style=dotted];
m6_1692 -> m6_25  [key=2, style=dotted];
m6_1692 -> m6_1693  [key=0, style=solid];
m6_1692 -> m6_24  [key=2, style=dotted];
m6_1696 -> m6_25  [key=2, style=dotted];
m6_1696 -> m6_1697  [key=0, style=solid];
m6_1696 -> m6_24  [key=2, style=dotted];
m6_1699 -> m6_25  [key=2, style=dotted];
m6_1699 -> m6_1700  [key=0, style=solid];
m6_1699 -> m6_24  [key=2, style=dotted];
m6_1703 -> m6_25  [key=2, style=dotted];
m6_1703 -> m6_1704  [key=0, style=solid];
m6_1703 -> m6_24  [key=2, style=dotted];
m6_1707 -> m6_25  [key=2, style=dotted];
m6_1707 -> m6_1708  [key=0, style=solid];
m6_1707 -> m6_24  [key=2, style=dotted];
m6_1711 -> m6_25  [key=2, style=dotted];
m6_1711 -> m6_1712  [key=0, style=solid];
m6_1711 -> m6_24  [key=2, style=dotted];
m6_1715 -> m6_25  [key=2, style=dotted];
m6_1715 -> m6_1716  [key=0, style=solid];
m6_1715 -> m6_24  [key=2, style=dotted];
m6_1718 -> m6_25  [key=2, style=dotted];
m6_1718 -> m6_1719  [key=0, style=solid];
m6_1718 -> m6_24  [key=2, style=dotted];
m6_1722 -> m6_25  [key=2, style=dotted];
m6_1722 -> m6_1723  [key=0, style=solid];
m6_1722 -> m6_24  [key=2, style=dotted];
m6_1724 -> m6_25  [key=2, style=dotted];
m6_1724 -> m6_1725  [key=0, style=solid];
m6_1724 -> m6_24  [key=2, style=dotted];
m6_1727 -> m6_25  [key=2, style=dotted];
m6_1727 -> m6_1728  [key=0, style=solid];
m6_1727 -> m6_24  [key=2, style=dotted];
m6_1730 -> m6_25  [key=2, style=dotted];
m6_1730 -> m6_1731  [key=0, style=solid];
m6_1730 -> m6_24  [key=2, style=dotted];
m6_1733 -> m6_25  [key=2, style=dotted];
m6_1733 -> m6_1734  [key=0, style=solid];
m6_1733 -> m6_24  [key=2, style=dotted];
m6_1736 -> m6_25  [key=2, style=dotted];
m6_1736 -> m6_1737  [key=0, style=solid];
m6_1736 -> m6_24  [key=2, style=dotted];
m6_1738 -> m6_25  [key=2, style=dotted];
m6_1738 -> m6_1739  [key=0, style=solid];
m6_1738 -> m6_24  [key=2, style=dotted];
m6_1741 -> m6_25  [key=2, style=dotted];
m6_1741 -> m6_1742  [key=0, style=solid];
m6_1741 -> m6_24  [key=2, style=dotted];
m6_1743 -> m6_25  [key=2, style=dotted];
m6_1743 -> m6_1744  [key=0, style=solid];
m6_1743 -> m6_24  [key=2, style=dotted];
m6_1745 -> m6_25  [key=2, style=dotted];
m6_1745 -> m6_1746  [key=0, style=solid];
m6_1745 -> m6_24  [key=2, style=dotted];
m6_1747 -> m6_25  [key=2, style=dotted];
m6_1747 -> m6_1748  [key=0, style=solid];
m6_1747 -> m6_24  [key=2, style=dotted];
m6_1749 -> m6_25  [key=2, style=dotted];
m6_1749 -> m6_1750  [key=0, style=solid];
m6_1749 -> m6_24  [key=2, style=dotted];
m6_1751 -> m6_25  [key=2, style=dotted];
m6_1751 -> m6_1752  [key=0, style=solid];
m6_1751 -> m6_24  [key=2, style=dotted];
m6_1753 -> m6_25  [key=2, style=dotted];
m6_1753 -> m6_1754  [key=0, style=solid];
m6_1753 -> m6_24  [key=2, style=dotted];
m6_1755 -> m6_25  [key=2, style=dotted];
m6_1755 -> m6_1756  [key=0, style=solid];
m6_1755 -> m6_24  [key=2, style=dotted];
m6_1757 -> m6_25  [key=2, style=dotted];
m6_1757 -> m6_1758  [key=0, style=solid];
m6_1757 -> m6_24  [key=2, style=dotted];
m6_1760 -> m6_25  [key=2, style=dotted];
m6_1760 -> m6_1761  [key=0, style=solid];
m6_1760 -> m6_24  [key=2, style=dotted];
m6_1680 -> m6_1681  [key=0, style=solid];
m6_1683 -> m6_26  [key=2, style=dotted];
m6_1683 -> m6_1684  [key=0, style=solid];
m6_1684 -> m6_26  [key=2, style=dotted];
m6_1684 -> m6_1685  [key=0, style=solid];
m6_1685 -> m6_26  [key=2, style=dotted];
m6_1685 -> m6_1686  [key=0, style=solid];
m6_1687 -> m6_26  [key=2, style=dotted];
m6_1687 -> m6_1688  [key=0, style=solid];
m6_1688 -> m6_26  [key=2, style=dotted];
m6_1688 -> m6_1689  [key=0, style=solid];
m6_1690 -> m6_26  [key=2, style=dotted];
m6_1690 -> m6_1691  [key=0, style=solid];
m6_1691 -> m6_26  [key=2, style=dotted];
m6_1691 -> m6_1692  [key=0, style=solid];
m6_1693 -> m6_26  [key=2, style=dotted];
m6_1693 -> m6_1694  [key=0, style=solid];
m6_1694 -> m6_26  [key=2, style=dotted];
m6_1694 -> m6_1695  [key=0, style=solid];
m6_1695 -> m6_26  [key=2, style=dotted];
m6_1695 -> m6_1696  [key=0, style=solid];
m6_1697 -> m6_26  [key=2, style=dotted];
m6_1697 -> m6_1698  [key=0, style=solid];
m6_1698 -> m6_26  [key=2, style=dotted];
m6_1698 -> m6_1699  [key=0, style=solid];
m6_1700 -> m6_26  [key=2, style=dotted];
m6_1700 -> m6_1701  [key=0, style=solid];
m6_1701 -> m6_26  [key=2, style=dotted];
m6_1701 -> m6_1702  [key=0, style=solid];
m6_1702 -> m6_26  [key=2, style=dotted];
m6_1702 -> m6_1703  [key=0, style=solid];
m6_1704 -> m6_26  [key=2, style=dotted];
m6_1704 -> m6_1705  [key=0, style=solid];
m6_1705 -> m6_26  [key=2, style=dotted];
m6_1705 -> m6_1706  [key=0, style=solid];
m6_1706 -> m6_26  [key=2, style=dotted];
m6_1706 -> m6_1707  [key=0, style=solid];
m6_1708 -> m6_26  [key=2, style=dotted];
m6_1708 -> m6_1709  [key=0, style=solid];
m6_1709 -> m6_26  [key=2, style=dotted];
m6_1709 -> m6_1710  [key=0, style=solid];
m6_1710 -> m6_26  [key=2, style=dotted];
m6_1710 -> m6_1711  [key=0, style=solid];
m6_1712 -> m6_26  [key=2, style=dotted];
m6_1712 -> m6_1713  [key=0, style=solid];
m6_1713 -> m6_26  [key=2, style=dotted];
m6_1713 -> m6_1714  [key=0, style=solid];
m6_1714 -> m6_26  [key=2, style=dotted];
m6_1714 -> m6_1715  [key=0, style=solid];
m6_1716 -> m6_26  [key=2, style=dotted];
m6_1716 -> m6_1717  [key=0, style=solid];
m6_1717 -> m6_26  [key=2, style=dotted];
m6_1717 -> m6_1718  [key=0, style=solid];
m6_1719 -> m6_26  [key=2, style=dotted];
m6_1719 -> m6_1720  [key=0, style=solid];
m6_1720 -> m6_26  [key=2, style=dotted];
m6_1720 -> m6_1721  [key=0, style=solid];
m6_1721 -> m6_26  [key=2, style=dotted];
m6_1721 -> m6_1722  [key=0, style=solid];
m6_1723 -> m6_26  [key=2, style=dotted];
m6_1723 -> m6_1724  [key=0, style=solid];
m6_1725 -> m6_26  [key=2, style=dotted];
m6_1725 -> m6_1726  [key=0, style=solid];
m6_1726 -> m6_26  [key=2, style=dotted];
m6_1726 -> m6_1727  [key=0, style=solid];
m6_1728 -> m6_26  [key=2, style=dotted];
m6_1728 -> m6_1729  [key=0, style=solid];
m6_1729 -> m6_26  [key=2, style=dotted];
m6_1729 -> m6_1730  [key=0, style=solid];
m6_1731 -> m6_26  [key=2, style=dotted];
m6_1731 -> m6_1732  [key=0, style=solid];
m6_1732 -> m6_26  [key=2, style=dotted];
m6_1732 -> m6_1733  [key=0, style=solid];
m6_1734 -> m6_26  [key=2, style=dotted];
m6_1734 -> m6_1735  [key=0, style=solid];
m6_1735 -> m6_26  [key=2, style=dotted];
m6_1735 -> m6_1736  [key=0, style=solid];
m6_1737 -> m6_26  [key=2, style=dotted];
m6_1737 -> m6_1738  [key=0, style=solid];
m6_1739 -> m6_26  [key=2, style=dotted];
m6_1739 -> m6_1740  [key=0, style=solid];
m6_1740 -> m6_26  [key=2, style=dotted];
m6_1740 -> m6_1741  [key=0, style=solid];
m6_1742 -> m6_26  [key=2, style=dotted];
m6_1742 -> m6_1743  [key=0, style=solid];
m6_1744 -> m6_26  [key=2, style=dotted];
m6_1744 -> m6_1745  [key=0, style=solid];
m6_1746 -> m6_26  [key=2, style=dotted];
m6_1746 -> m6_1747  [key=0, style=solid];
m6_1748 -> m6_26  [key=2, style=dotted];
m6_1748 -> m6_1749  [key=0, style=solid];
m6_1750 -> m6_26  [key=2, style=dotted];
m6_1750 -> m6_1751  [key=0, style=solid];
m6_1752 -> m6_26  [key=2, style=dotted];
m6_1752 -> m6_1753  [key=0, style=solid];
m6_1754 -> m6_26  [key=2, style=dotted];
m6_1754 -> m6_1755  [key=0, style=solid];
m6_1756 -> m6_26  [key=2, style=dotted];
m6_1756 -> m6_1757  [key=0, style=solid];
m6_1758 -> m6_26  [key=2, style=dotted];
m6_1758 -> m6_1759  [key=0, style=solid];
m6_1759 -> m6_26  [key=2, style=dotted];
m6_1759 -> m6_1760  [key=0, style=solid];
m6_1761 -> m6_26  [key=2, style=dotted];
m6_1761 -> m6_1762  [key=0, style=solid];
m6_1762 -> m6_26  [key=2, style=dotted];
m6_1762 -> m6_1763  [key=0, style=solid];
m6_1763 -> m6_1764  [key=0, style=solid];
m6_1763 -> m6_24  [key=2, style=dotted];
m6_1763 -> m6_28  [key=2, style=dotted];
m6_1764 -> m6_1679  [color=blue, key=0, style=bold];
m6_513 -> m6_514  [key=0, style=solid];
m6_513 -> m6_515  [key=0, style=solid];
m6_513 -> m6_25  [key=2, style=dotted];
m6_513 -> m6_24  [key=2, style=dotted];
m6_515 -> m6_516  [key=0, style=solid];
m6_515 -> m6_520  [key=2, style=dotted];
m6_515 -> m6_517  [color=darkseagreen4, key=1, label=shouldSerialize, style=dashed];
m6_515 -> m6_518  [color=darkseagreen4, key=1, label=shouldSerialize, style=dashed];
m6_515 -> m6_25  [key=2, style=dotted];
m6_515 -> m6_24  [key=2, style=dotted];
m6_517 -> m6_518  [key=0, style=solid];
m6_517 -> m6_521  [key=2, style=dotted];
m6_517 -> m6_165  [key=2, style=dotted];
m6_517 -> m6_166  [key=2, style=dotted];
m6_517 -> m6_25  [key=2, style=dotted];
m6_517 -> m6_24  [key=2, style=dotted];
m6_514 -> m6_519  [key=0, style=solid];
m6_514 -> m6_26  [key=2, style=dotted];
m6_514 -> m6_515  [key=0, style=solid];
m6_516 -> m6_517  [key=0, style=solid];
m6_516 -> m6_518  [key=0, style=solid];
m6_516 -> m6_26  [key=2, style=dotted];
m6_518 -> m6_519  [key=0, style=solid];
m6_518 -> m6_26  [key=2, style=dotted];
m6_519 -> m6_278  [color=blue, key=0, style=bold];
m6_519 -> m6_25  [key=2, style=dotted];
m6_519 -> m6_520  [key=0, style=solid];
m6_519 -> m6_24  [key=2, style=dotted];
m6_1235 -> m6_1236  [key=0, style=solid];
m6_1237 -> m6_22  [key=2, style=dotted];
m6_1237 -> m6_23  [key=2, style=dotted];
m6_1237 -> m6_1238  [key=0, style=solid];
m6_1237 -> m6_1239  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1237 -> m6_1240  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1237 -> m6_1241  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1237 -> m6_1242  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1237 -> m6_1243  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1237 -> m6_1244  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1237 -> m6_1245  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1237 -> m6_1246  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1238 -> m6_25  [key=2, style=dotted];
m6_1238 -> m6_1239  [key=0, style=solid];
m6_1238 -> m6_24  [key=2, style=dotted];
m6_1240 -> m6_25  [key=2, style=dotted];
m6_1240 -> m6_1241  [key=0, style=solid];
m6_1240 -> m6_24  [key=2, style=dotted];
m6_1242 -> m6_25  [key=2, style=dotted];
m6_1242 -> m6_1243  [key=0, style=solid];
m6_1242 -> m6_24  [key=2, style=dotted];
m6_1245 -> m6_25  [key=2, style=dotted];
m6_1245 -> m6_1246  [key=0, style=solid];
m6_1245 -> m6_24  [key=2, style=dotted];
m6_1236 -> m6_1237  [key=0, style=solid];
m6_1239 -> m6_26  [key=2, style=dotted];
m6_1239 -> m6_1240  [key=0, style=solid];
m6_1241 -> m6_26  [key=2, style=dotted];
m6_1241 -> m6_1242  [key=0, style=solid];
m6_1243 -> m6_26  [key=2, style=dotted];
m6_1243 -> m6_1244  [key=0, style=solid];
m6_1244 -> m6_26  [key=2, style=dotted];
m6_1244 -> m6_1245  [key=0, style=solid];
m6_1246 -> m6_26  [key=2, style=dotted];
m6_1246 -> m6_1247  [key=0, style=solid];
m6_1247 -> m6_1235  [color=blue, key=0, style=bold];
m6_198 -> m6_200  [key=0, style=solid];
m6_198 -> m6_201  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_198 -> m6_202  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m6_198 -> m6_87  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m6_198 -> m6_84  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m6_198 -> m6_85  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m6_198 -> m6_86  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m6_198 -> m6_89  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m6_198 -> m6_330  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m6_198 -> m6_436  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m6_198 -> m6_26  [key=2, style=dotted];
m6_198 -> m6_199  [key=0, style=solid];
m6_200 -> m6_201  [key=0, style=solid];
m6_200 -> m6_202  [key=0, style=solid];
m6_200 -> m6_26  [key=2, style=dotted];
m6_201 -> m6_202  [key=0, style=solid];
m6_201 -> m6_163  [key=2, style=dotted];
m6_201 -> m6_165  [key=2, style=dotted];
m6_201 -> m6_166  [key=2, style=dotted];
m6_201 -> m6_205  [key=2, style=dotted];
m6_202 -> m6_203  [key=0, style=solid];
m6_202 -> m6_204  [key=2, style=dotted];
m6_202 -> m6_26  [key=2, style=dotted];
m6_203 -> m6_198  [color=blue, key=0, style=bold];
m6_203 -> m6_192  [color=blue, key=0, style=bold];
m6_72 -> m6_73  [key=0, style=solid];
m6_72 -> m6_80  [key=0, style=solid];
m6_72 -> m6_38  [key=2, style=dotted];
m6_74 -> m6_22  [key=2, style=dotted];
m6_74 -> m6_23  [key=2, style=dotted];
m6_74 -> m6_75  [key=0, style=solid];
m6_74 -> m6_76  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_74 -> m6_77  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_74 -> m6_78  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_74 -> m6_79  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_74 -> m6_81  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_74 -> m6_82  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_74 -> m6_83  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_74 -> m6_80  [key=0, style=solid];
m6_74 -> m6_87  [key=2, style=dotted];
m6_75 -> m6_25  [key=2, style=dotted];
m6_75 -> m6_76  [key=0, style=solid];
m6_75 -> m6_24  [key=2, style=dotted];
m6_77 -> m6_25  [key=2, style=dotted];
m6_77 -> m6_78  [key=0, style=solid];
m6_77 -> m6_24  [key=2, style=dotted];
m6_77 -> m6_80  [key=0, style=solid];
m6_77 -> m6_88  [key=2, style=dotted];
m6_77 -> m6_89  [key=2, style=dotted];
m6_81 -> m6_25  [key=2, style=dotted];
m6_81 -> m6_82  [key=0, style=solid];
m6_81 -> m6_24  [key=2, style=dotted];
m6_73 -> m6_74  [key=0, style=solid];
m6_76 -> m6_26  [key=2, style=dotted];
m6_76 -> m6_77  [key=0, style=solid];
m6_78 -> m6_26  [key=2, style=dotted];
m6_78 -> m6_79  [key=0, style=solid];
m6_79 -> m6_81  [key=0, style=solid];
m6_79 -> m6_80  [key=0, style=solid];
m6_79 -> m6_85  [key=2, style=dotted];
m6_79 -> m6_90  [key=2, style=dotted];
m6_79 -> m6_91  [key=2, style=dotted];
m6_82 -> m6_26  [key=2, style=dotted];
m6_82 -> m6_83  [key=0, style=solid];
m6_83 -> m6_84  [key=0, style=solid];
m6_83 -> m6_24  [key=2, style=dotted];
m6_83 -> m6_28  [key=2, style=dotted];
m6_83 -> m6_316  [key=0, style=solid];
m6_83 -> m6_317  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_83 -> m6_318  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_83 -> m6_320  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_83 -> m6_322  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_83 -> m6_323  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_83 -> m6_325  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_83 -> m6_22  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerProperty", style=bold];
m6_83 -> m6_59  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonConverter converter", style=bold];
m6_80 -> m6_81  [key=0, style=solid];
m6_80 -> m6_22  [color=blue, key=0, style=bold];
m6_84 -> m6_72  [color=blue, key=0, style=bold];
m6_84 -> m6_210  [key=0, style=solid];
m6_84 -> m6_211  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_84 -> m6_212  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_84 -> m6_213  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_84 -> m6_215  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m6_84 -> m6_216  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m6_84 -> m6_219  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_84 -> m6_220  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_84 -> m6_221  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_84 -> m6_223  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_84 -> m6_224  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_84 -> m6_227  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_84 -> m6_233  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_84 -> m6_234  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m6_84 -> m6_235  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m6_84 -> m6_236  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_84 -> m6_237  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_84 -> m6_238  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_84 -> m6_239  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_84 -> m6_240  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_84 -> m6_241  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_84 -> m6_243  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_84 -> m6_22  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerProperty", style=bold];
m6_1279 -> m6_1280  [key=0, style=solid];
m6_1281 -> m6_22  [key=2, style=dotted];
m6_1281 -> m6_23  [key=2, style=dotted];
m6_1281 -> m6_1282  [key=0, style=solid];
m6_1281 -> m6_1283  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1281 -> m6_1284  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1281 -> m6_1285  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1281 -> m6_1286  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1281 -> m6_1289  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1282 -> m6_25  [key=2, style=dotted];
m6_1282 -> m6_1283  [key=0, style=solid];
m6_1282 -> m6_24  [key=2, style=dotted];
m6_1284 -> m6_25  [key=2, style=dotted];
m6_1284 -> m6_1285  [key=0, style=solid];
m6_1284 -> m6_24  [key=2, style=dotted];
m6_1280 -> m6_1281  [key=0, style=solid];
m6_1283 -> m6_26  [key=2, style=dotted];
m6_1283 -> m6_1284  [key=0, style=solid];
m6_1285 -> m6_26  [key=2, style=dotted];
m6_1285 -> m6_1286  [key=0, style=solid];
m6_1286 -> m6_1287  [key=0, style=solid];
m6_1286 -> m6_42  [key=2, style=dotted];
m6_1286 -> m6_1288  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1287 -> m6_1279  [color=blue, key=0, style=bold];
m6_1820 -> m6_1821  [key=0, style=solid];
m6_1826 -> m6_22  [key=2, style=dotted];
m6_1826 -> m6_23  [key=2, style=dotted];
m6_1826 -> m6_1827  [key=0, style=solid];
m6_1826 -> m6_1828  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1826 -> m6_1829  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1826 -> m6_1830  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1826 -> m6_1831  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1826 -> m6_1832  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1826 -> m6_1833  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1826 -> m6_1834  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1826 -> m6_1835  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1826 -> m6_1836  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1826 -> m6_1837  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1826 -> m6_1838  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1826 -> m6_1839  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1826 -> m6_1840  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1826 -> m6_1841  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1826 -> m6_1842  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1826 -> m6_1843  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1844 -> m6_22  [key=2, style=dotted];
m6_1844 -> m6_23  [key=2, style=dotted];
m6_1844 -> m6_1845  [key=0, style=solid];
m6_1844 -> m6_1846  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1844 -> m6_1847  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1844 -> m6_1848  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1844 -> m6_1849  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1844 -> m6_1850  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1844 -> m6_1851  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1844 -> m6_1852  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1844 -> m6_1853  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1844 -> m6_1854  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1844 -> m6_1855  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1844 -> m6_1856  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1844 -> m6_1857  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1844 -> m6_1858  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1844 -> m6_1859  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1844 -> m6_1860  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1844 -> m6_1861  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1825 -> m6_1826  [key=0, style=solid];
m6_1825 -> m6_1844  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1827 -> m6_1828  [key=0, style=solid];
m6_1827 -> m6_24  [key=2, style=dotted];
m6_1828 -> m6_1829  [key=0, style=solid];
m6_1828 -> m6_24  [key=2, style=dotted];
m6_1829 -> m6_26  [key=2, style=dotted];
m6_1829 -> m6_1830  [key=0, style=solid];
m6_1830 -> m6_26  [key=2, style=dotted];
m6_1830 -> m6_1831  [key=0, style=solid];
m6_1831 -> m6_1832  [key=0, style=solid];
m6_1831 -> m6_24  [key=2, style=dotted];
m6_1832 -> m6_26  [key=2, style=dotted];
m6_1832 -> m6_1833  [key=0, style=solid];
m6_1833 -> m6_26  [key=2, style=dotted];
m6_1833 -> m6_1834  [key=0, style=solid];
m6_1834 -> m6_1835  [key=0, style=solid];
m6_1834 -> m6_24  [key=2, style=dotted];
m6_1835 -> m6_26  [key=2, style=dotted];
m6_1835 -> m6_1836  [key=0, style=solid];
m6_1836 -> m6_26  [key=2, style=dotted];
m6_1836 -> m6_1837  [key=0, style=solid];
m6_1837 -> m6_1838  [key=0, style=solid];
m6_1837 -> m6_24  [key=2, style=dotted];
m6_1838 -> m6_26  [key=2, style=dotted];
m6_1838 -> m6_1839  [key=0, style=solid];
m6_1839 -> m6_26  [key=2, style=dotted];
m6_1839 -> m6_1840  [key=0, style=solid];
m6_1840 -> m6_1841  [key=0, style=solid];
m6_1840 -> m6_24  [key=2, style=dotted];
m6_1841 -> m6_26  [key=2, style=dotted];
m6_1841 -> m6_1842  [key=0, style=solid];
m6_1842 -> m6_26  [key=2, style=dotted];
m6_1842 -> m6_1843  [key=0, style=solid];
m6_1843 -> m6_1844  [key=0, style=solid];
m6_1843 -> m6_24  [key=2, style=dotted];
m6_1845 -> m6_1846  [key=0, style=solid];
m6_1845 -> m6_24  [key=2, style=dotted];
m6_1846 -> m6_1847  [key=0, style=solid];
m6_1846 -> m6_115  [key=2, style=dotted];
m6_1847 -> m6_26  [key=2, style=dotted];
m6_1847 -> m6_1848  [key=0, style=solid];
m6_1848 -> m6_26  [key=2, style=dotted];
m6_1848 -> m6_1849  [key=0, style=solid];
m6_1849 -> m6_1850  [key=0, style=solid];
m6_1849 -> m6_115  [key=2, style=dotted];
m6_1850 -> m6_26  [key=2, style=dotted];
m6_1850 -> m6_1851  [key=0, style=solid];
m6_1851 -> m6_26  [key=2, style=dotted];
m6_1851 -> m6_1852  [key=0, style=solid];
m6_1852 -> m6_1853  [key=0, style=solid];
m6_1852 -> m6_115  [key=2, style=dotted];
m6_1853 -> m6_26  [key=2, style=dotted];
m6_1853 -> m6_1854  [key=0, style=solid];
m6_1854 -> m6_26  [key=2, style=dotted];
m6_1854 -> m6_1855  [key=0, style=solid];
m6_1855 -> m6_1856  [key=0, style=solid];
m6_1855 -> m6_115  [key=2, style=dotted];
m6_1856 -> m6_26  [key=2, style=dotted];
m6_1856 -> m6_1857  [key=0, style=solid];
m6_1857 -> m6_26  [key=2, style=dotted];
m6_1857 -> m6_1858  [key=0, style=solid];
m6_1858 -> m6_1859  [key=0, style=solid];
m6_1858 -> m6_115  [key=2, style=dotted];
m6_1859 -> m6_26  [key=2, style=dotted];
m6_1859 -> m6_1860  [key=0, style=solid];
m6_1860 -> m6_26  [key=2, style=dotted];
m6_1860 -> m6_1861  [key=0, style=solid];
m6_1861 -> m6_1862  [key=0, style=solid];
m6_1861 -> m6_24  [key=2, style=dotted];
m6_1824 -> m6_1825  [key=0, style=solid];
m6_1824 -> m6_1866  [key=2, style=dotted];
m6_1824 -> m6_1865  [key=2, style=dotted];
m6_1823 -> m6_1352  [key=2, style=dotted];
m6_1823 -> m6_1824  [key=0, style=solid];
m6_1823 -> m6_1864  [key=2, style=dotted];
m6_1823 -> m6_1865  [key=2, style=dotted];
m6_1822 -> m6_1824  [color=darkseagreen4, key=1, label=d, style=dashed];
m6_1822 -> m6_1823  [key=0, style=solid];
m6_1822 -> m6_1863  [key=2, style=dotted];
m6_1821 -> m6_1822  [key=0, style=solid];
m6_1862 -> m6_1820  [color=blue, key=0, style=bold];
m6_1457 -> m6_1458  [key=0, style=solid];
m6_1459 -> m6_22  [key=2, style=dotted];
m6_1459 -> m6_23  [key=2, style=dotted];
m6_1459 -> m6_1460  [key=0, style=solid];
m6_1459 -> m6_1462  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1459 -> m6_1464  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1459 -> m6_1465  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1464 -> m6_25  [key=2, style=dotted];
m6_1464 -> m6_1465  [key=0, style=solid];
m6_1464 -> m6_24  [key=2, style=dotted];
m6_1458 -> m6_1459  [key=0, style=solid];
m6_1460 -> m6_1461  [key=0, style=solid];
m6_1460 -> m6_1463  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_1462 -> m6_1463  [key=0, style=solid];
m6_1462 -> m6_24  [key=2, style=dotted];
m6_1465 -> m6_26  [key=2, style=dotted];
m6_1465 -> m6_1466  [key=0, style=solid];
m6_1465 -> m6_1467  [key=2, style=dotted];
m6_1461 -> m6_1464  [key=0, style=solid];
m6_1461 -> m6_1462  [key=0, style=solid];
m6_1463 -> m6_1461  [key=0, style=solid];
m6_1463 -> m6_1463  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_1466 -> m6_1457  [color=blue, key=0, style=bold];
m6_28 -> m6_29  [key=0, style=solid];
m6_28 -> m6_31  [key=2, style=dotted];
m6_563 -> m6_564  [key=0, style=solid];
m6_565 -> m6_22  [key=2, style=dotted];
m6_565 -> m6_23  [key=2, style=dotted];
m6_565 -> m6_566  [key=0, style=solid];
m6_565 -> m6_558  [key=2, style=dotted];
m6_565 -> m6_567  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_565 -> m6_568  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_565 -> m6_572  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_564 -> m6_565  [key=0, style=solid];
m6_564 -> m6_568  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_564 -> m6_571  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_566 -> m6_567  [key=0, style=solid];
m6_566 -> m6_24  [key=2, style=dotted];
m6_567 -> m6_26  [key=2, style=dotted];
m6_567 -> m6_568  [key=0, style=solid];
m6_568 -> m6_26  [key=2, style=dotted];
m6_568 -> m6_569  [key=0, style=solid];
m6_572 -> m6_573  [key=0, style=solid];
m6_572 -> m6_42  [key=2, style=dotted];
m6_572 -> m6_575  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_571 -> m6_576  [color=darkseagreen4, key=1, label=total, style=dashed];
m6_571 -> m6_572  [key=0, style=solid];
m6_569 -> m6_571  [color=darkseagreen4, key=1, label=j, style=dashed];
m6_569 -> m6_570  [key=0, style=solid];
m6_569 -> m6_573  [color=darkseagreen4, key=1, label=j, style=dashed];
m6_573 -> m6_573  [color=darkseagreen4, key=1, label=j, style=dashed];
m6_573 -> m6_570  [key=0, style=solid];
m6_570 -> m6_571  [key=0, style=solid];
m6_570 -> m6_574  [key=0, style=solid];
m6_574 -> m6_563  [color=blue, key=0, style=bold];
m6_17 -> m6_18  [key=0, style=solid];
m6_17 -> m6_24  [key=2, style=dotted];
m6_17 -> m6_28  [key=2, style=dotted];
m6_89 -> m6_435  [key=0, style=solid];
m6_89 -> m6_436  [color=darkseagreen4, key=1, label="System.Collections.IDictionary", style=dashed];
m6_89 -> m6_437  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_89 -> m6_439  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_89 -> m6_440  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m6_89 -> m6_441  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m6_89 -> m6_442  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m6_89 -> m6_443  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m6_89 -> m6_444  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_89 -> m6_445  [color=darkseagreen4, key=1, label="System.Collections.IDictionary", style=dashed];
m6_89 -> m6_449  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_89 -> m6_450  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m6_89 -> m6_452  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m6_89 -> m6_453  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m6_89 -> m6_454  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_89 -> m6_455  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_89 -> m6_456  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_89 -> m6_457  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_89 -> m6_458  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_89 -> m6_460  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_89 -> m6_461  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_89 -> m6_463  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_89 -> m6_465  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_89 -> m6_22  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerProperty", style=bold];
m6_89 -> m6_76  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonDictionaryContract contract", style=bold];
m6_89 -> m6_25  [key=2, style=dotted];
m6_89 -> m6_90  [key=0, style=solid];
m6_89 -> m6_24  [key=2, style=dotted];
m6_460 -> m6_461  [key=0, style=solid];
m6_460 -> m6_462  [key=0, style=solid];
m6_460 -> m6_23  [key=2, style=dotted];
m6_460 -> m6_42  [key=2, style=dotted];
m6_461 -> m6_446  [key=0, style=solid];
m6_461 -> m6_24  [key=2, style=dotted];
m6_461 -> m6_459  [color=blue, key=0, style=bold];
m6_459 -> m6_460  [key=0, style=solid];
m6_250 -> m6_469  [key=0, style=solid];
m6_250 -> m6_470  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m6_250 -> m6_471  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m6_250 -> m6_475  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_250 -> m6_478  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_250 -> m6_482  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_250 -> m6_487  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_250 -> m6_491  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_250 -> m6_492  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_250 -> m6_496  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_250 -> m6_84  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonWriter writer", style=bold];
m6_250 -> m6_89  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonWriter writer", style=bold];
m6_250 -> m6_230  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m6_250 -> m6_232  [color=darkorchid, key=3, label="Parameter variable bool escape", style=bold];
m6_250 -> m6_448  [color=darkorchid, key=3, label="Parameter variable bool escape", style=bold];
m6_475 -> m6_476  [key=0, style=solid];
m6_475 -> m6_498  [key=2, style=dotted];
m6_475 -> m6_478  [color=darkseagreen4, key=1, label=dt, style=dashed];
m6_475 -> m6_250  [key=2, style=dotted];
m6_478 -> m6_479  [key=0, style=solid];
m6_478 -> m6_500  [key=2, style=dotted];
m6_472 -> m6_473  [key=0, style=solid];
m6_472 -> m6_480  [key=0, style=solid];
m6_472 -> m6_485  [key=0, style=solid];
m6_472 -> m6_490  [key=0, style=solid];
m6_473 -> m6_474  [key=0, style=solid];
m6_473 -> m6_478  [key=2, style=dotted];
m6_473 -> m6_476  [color=darkseagreen4, key=1, label=s, style=dashed];
m6_474 -> m6_475  [key=0, style=solid];
m6_474 -> m6_22  [key=2, style=dotted];
m6_474 -> m6_23  [key=2, style=dotted];
m6_474 -> m6_476  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_476 -> m6_477  [key=0, style=solid];
m6_476 -> m6_26  [key=2, style=dotted];
m6_477 -> m6_478  [key=0, style=solid];
m6_477 -> m6_499  [key=2, style=dotted];
m6_477 -> m6_479  [color=darkseagreen4, key=1, label=sw, style=dashed];
m6_477 -> m6_472  [color=blue, key=0, style=bold];
m6_1087 -> m6_1088  [key=0, style=solid];
m6_1089 -> m6_22  [key=2, style=dotted];
m6_1089 -> m6_1090  [key=0, style=solid];
m6_1089 -> m6_1091  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1089 -> m6_1092  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1089 -> m6_1093  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1089 -> m6_1094  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1089 -> m6_1095  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1089 -> m6_1096  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1089 -> m6_1097  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1089 -> m6_1098  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1089 -> m6_1099  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1089 -> m6_1100  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1089 -> m6_1101  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1089 -> m6_1102  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1089 -> m6_1103  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1088 -> m6_23  [key=2, style=dotted];
m6_1088 -> m6_1089  [key=0, style=solid];
m6_1090 -> m6_25  [key=2, style=dotted];
m6_1090 -> m6_1091  [key=0, style=solid];
m6_1090 -> m6_24  [key=2, style=dotted];
m6_1092 -> m6_25  [key=2, style=dotted];
m6_1092 -> m6_1093  [key=0, style=solid];
m6_1092 -> m6_24  [key=2, style=dotted];
m6_1095 -> m6_25  [key=2, style=dotted];
m6_1095 -> m6_1096  [key=0, style=solid];
m6_1095 -> m6_24  [key=2, style=dotted];
m6_1098 -> m6_25  [key=2, style=dotted];
m6_1098 -> m6_1099  [key=0, style=solid];
m6_1098 -> m6_24  [key=2, style=dotted];
m6_1101 -> m6_25  [key=2, style=dotted];
m6_1101 -> m6_1102  [key=0, style=solid];
m6_1101 -> m6_24  [key=2, style=dotted];
m6_1091 -> m6_26  [key=2, style=dotted];
m6_1091 -> m6_1092  [key=0, style=solid];
m6_1093 -> m6_26  [key=2, style=dotted];
m6_1093 -> m6_1094  [key=0, style=solid];
m6_1094 -> m6_26  [key=2, style=dotted];
m6_1094 -> m6_1095  [key=0, style=solid];
m6_1096 -> m6_26  [key=2, style=dotted];
m6_1096 -> m6_1097  [key=0, style=solid];
m6_1097 -> m6_26  [key=2, style=dotted];
m6_1097 -> m6_1098  [key=0, style=solid];
m6_1099 -> m6_26  [key=2, style=dotted];
m6_1099 -> m6_1100  [key=0, style=solid];
m6_1100 -> m6_26  [key=2, style=dotted];
m6_1100 -> m6_1101  [key=0, style=solid];
m6_1102 -> m6_26  [key=2, style=dotted];
m6_1102 -> m6_1103  [key=0, style=solid];
m6_1103 -> m6_1104  [key=0, style=solid];
m6_1103 -> m6_24  [key=2, style=dotted];
m6_1103 -> m6_28  [key=2, style=dotted];
m6_1104 -> m6_1087  [color=blue, key=0, style=bold];
m6_29 -> m6_30  [key=0, style=solid];
m6_129 -> m6_309  [key=0, style=solid];
m6_129 -> m6_40  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.DefaultValueHandling flag", style=bold];
m6_129 -> m6_26  [key=2, style=dotted];
m6_129 -> m6_130  [key=0, style=solid];
m6_310 -> m6_129  [color=blue, key=0, style=bold];
m6_310 -> m6_311  [key=0, style=solid];
m6_244 -> m6_245  [key=0, style=solid];
m6_244 -> m6_84  [color=blue, key=0, style=bold];
m6_246 -> m6_22  [key=2, style=dotted];
m6_246 -> m6_23  [key=2, style=dotted];
m6_246 -> m6_247  [key=0, style=solid];
m6_246 -> m6_248  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_246 -> m6_281  [key=0, style=solid];
m6_246 -> m6_282  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m6_246 -> m6_283  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m6_246 -> m6_284  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_246 -> m6_285  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m6_246 -> m6_286  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_246 -> m6_84  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerProperty", style=bold];
m6_246 -> m6_89  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerProperty", style=bold];
m6_246 -> m6_436  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m6_247 -> m6_250  [key=2, style=dotted];
m6_247 -> m6_248  [key=0, style=solid];
m6_247 -> m6_249  [key=0, style=solid];
m6_247 -> m6_254  [key=0, style=solid];
m6_247 -> m6_255  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m6_247 -> m6_256  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m6_247 -> m6_257  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_247 -> m6_258  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m6_247 -> m6_259  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m6_247 -> m6_260  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContainerContract", style=dashed];
m6_247 -> m6_261  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_247 -> m6_262  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_247 -> m6_264  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_247 -> m6_267  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContainerContract", style=dashed];
m6_247 -> m6_268  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m6_247 -> m6_270  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_247 -> m6_272  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_247 -> m6_84  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty member", style=bold];
m6_247 -> m6_216  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty property", style=bold];
m6_247 -> m6_218  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract memberContract", style=bold];
m6_247 -> m6_217  [color=darkorchid, key=3, label="Parameter variable object memberValue", style=bold];
m6_247 -> m6_44  [color=darkorchid, key=3, label="method methodReturn bool CalculatePropertyValues", style=bold];
m6_247 -> m6_126  [color=darkorchid, key=3, label="method methodReturn bool CalculatePropertyValues", style=bold];
m6_248 -> m6_247  [key=0, style=solid];
m6_248 -> m6_251  [key=2, style=dotted];
m6_100 -> m6_101  [key=0, style=solid];
m6_100 -> m6_102  [key=0, style=solid];
m6_102 -> m6_22  [key=2, style=dotted];
m6_102 -> m6_23  [key=2, style=dotted];
m6_102 -> m6_103  [key=0, style=solid];
m6_102 -> m6_110  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_104 -> m6_22  [key=2, style=dotted];
m6_104 -> m6_23  [key=2, style=dotted];
m6_104 -> m6_105  [key=0, style=solid];
m6_104 -> m6_113  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_104 -> m6_106  [key=0, style=solid];
m6_106 -> m6_22  [key=2, style=dotted];
m6_106 -> m6_23  [key=2, style=dotted];
m6_106 -> m6_107  [key=0, style=solid];
m6_106 -> m6_117  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_106 -> m6_108  [key=0, style=solid];
m6_101 -> m6_102  [key=0, style=solid];
m6_101 -> m6_104  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_101 -> m6_106  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_103 -> m6_104  [key=0, style=solid];
m6_103 -> m6_42  [key=2, style=dotted];
m6_103 -> m6_109  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_103 -> m6_92  [color=blue, key=0, style=bold];
m6_105 -> m6_106  [key=0, style=solid];
m6_105 -> m6_42  [key=2, style=dotted];
m6_105 -> m6_112  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_105 -> m6_116  [key=0, style=solid];
m6_107 -> m6_108  [key=0, style=solid];
m6_107 -> m6_42  [key=2, style=dotted];
m6_107 -> m6_116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_108 -> m6_100  [color=blue, key=0, style=bold];
m6_108 -> m6_109  [key=0, style=solid];
m6_108 -> m6_92  [key=2, style=dotted];
m6_108 -> m6_113  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m6_108 -> m6_117  [color=darkorchid, key=3, label="Local variable bool? isReference", style=bold];
m6_88 -> m6_22  [key=2, style=dotted];
m6_88 -> m6_23  [key=2, style=dotted];
m6_88 -> m6_89  [key=0, style=solid];
m6_88 -> m6_90  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_88 -> m6_91  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_88 -> m6_92  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_88 -> m6_93  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_88 -> m6_94  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_88 -> m6_95  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_88 -> m6_96  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_88 -> m6_97  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_88 -> m6_98  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_192 -> m6_193  [key=0, style=solid];
m6_192 -> m6_198  [key=2, style=dotted];
m6_194 -> m6_22  [key=2, style=dotted];
m6_194 -> m6_23  [key=2, style=dotted];
m6_194 -> m6_195  [key=0, style=solid];
m6_194 -> m6_196  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_194 -> m6_197  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_194 -> m6_198  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_194 -> m6_199  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_194 -> m6_184  [key=2, style=dotted];
m6_195 -> m6_25  [key=2, style=dotted];
m6_195 -> m6_196  [key=0, style=solid];
m6_195 -> m6_24  [key=2, style=dotted];
m6_195 -> m6_177  [key=2, style=dotted];
m6_196 -> m6_25  [key=2, style=dotted];
m6_196 -> m6_197  [key=0, style=solid];
m6_196 -> m6_24  [key=2, style=dotted];
m6_196 -> m6_199  [key=2, style=dotted];
m6_197 -> m6_25  [key=2, style=dotted];
m6_197 -> m6_198  [key=0, style=solid];
m6_197 -> m6_24  [key=2, style=dotted];
m6_197 -> m6_87  [color=blue, key=0, style=bold];
m6_193 -> m6_194  [key=0, style=solid];
m6_199 -> m6_200  [key=0, style=solid];
m6_199 -> m6_204  [key=2, style=dotted];
m6_199 -> m6_201  [color=darkseagreen4, key=1, label=s, style=dashed];
m6_199 -> m6_205  [key=0, style=solid];
m6_199 -> m6_206  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_199 -> m6_207  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m6_199 -> m6_87  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m6_199 -> m6_84  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m6_199 -> m6_85  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m6_199 -> m6_86  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m6_199 -> m6_89  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m6_199 -> m6_330  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m6_199 -> m6_436  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m6_1577 -> m6_1578  [key=0, style=solid];
m6_1579 -> m6_22  [key=2, style=dotted];
m6_1579 -> m6_23  [key=2, style=dotted];
m6_1579 -> m6_1580  [key=0, style=solid];
m6_1579 -> m6_1581  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1579 -> m6_1582  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1579 -> m6_1583  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1580 -> m6_25  [key=2, style=dotted];
m6_1580 -> m6_1581  [key=0, style=solid];
m6_1580 -> m6_24  [key=2, style=dotted];
m6_1582 -> m6_25  [key=2, style=dotted];
m6_1582 -> m6_1583  [key=0, style=solid];
m6_1582 -> m6_24  [key=2, style=dotted];
m6_1578 -> m6_1579  [key=0, style=solid];
m6_1581 -> m6_26  [key=2, style=dotted];
m6_1581 -> m6_1582  [key=0, style=solid];
m6_1583 -> m6_26  [key=2, style=dotted];
m6_1583 -> m6_1584  [key=0, style=solid];
m6_1584 -> m6_1577  [color=blue, key=0, style=bold];
m6_1442 -> m6_1443  [key=0, style=solid];
m6_1444 -> m6_22  [key=2, style=dotted];
m6_1444 -> m6_23  [key=2, style=dotted];
m6_1444 -> m6_1445  [key=0, style=solid];
m6_1444 -> m6_1446  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1444 -> m6_1447  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1444 -> m6_1448  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1444 -> m6_1449  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1444 -> m6_1450  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1444 -> m6_1451  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1444 -> m6_1452  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1444 -> m6_1454  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1444 -> m6_1455  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1446 -> m6_25  [key=2, style=dotted];
m6_1446 -> m6_1447  [key=0, style=solid];
m6_1446 -> m6_24  [key=2, style=dotted];
m6_1448 -> m6_25  [key=2, style=dotted];
m6_1448 -> m6_1449  [key=0, style=solid];
m6_1448 -> m6_24  [key=2, style=dotted];
m6_1454 -> m6_25  [key=2, style=dotted];
m6_1454 -> m6_1455  [key=0, style=solid];
m6_1454 -> m6_24  [key=2, style=dotted];
m6_1443 -> m6_1444  [key=0, style=solid];
m6_1445 -> m6_1446  [key=0, style=solid];
m6_1445 -> m6_1352  [key=2, style=dotted];
m6_1447 -> m6_26  [key=2, style=dotted];
m6_1447 -> m6_1448  [key=0, style=solid];
m6_1449 -> m6_26  [key=2, style=dotted];
m6_1449 -> m6_1450  [key=0, style=solid];
m6_1450 -> m6_1451  [key=0, style=solid];
m6_1450 -> m6_115  [key=2, style=dotted];
m6_1450 -> m6_1453  [color=darkseagreen4, key=1, label=d, style=dashed];
m6_1451 -> m6_26  [key=2, style=dotted];
m6_1451 -> m6_1452  [key=0, style=solid];
m6_1452 -> m6_26  [key=2, style=dotted];
m6_1452 -> m6_1453  [key=0, style=solid];
m6_1455 -> m6_26  [key=2, style=dotted];
m6_1455 -> m6_1456  [key=0, style=solid];
m6_1453 -> m6_26  [key=2, style=dotted];
m6_1453 -> m6_1454  [key=0, style=solid];
m6_1456 -> m6_1442  [color=blue, key=0, style=bold];
m6_619 -> m6_620  [key=0, style=solid];
m6_620 -> m6_22  [key=2, style=dotted];
m6_620 -> m6_23  [key=2, style=dotted];
m6_620 -> m6_621  [key=0, style=solid];
m6_620 -> m6_622  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_621 -> m6_250  [key=2, style=dotted];
m6_621 -> m6_25  [key=2, style=dotted];
m6_621 -> m6_622  [key=0, style=solid];
m6_622 -> m6_26  [key=2, style=dotted];
m6_622 -> m6_623  [key=0, style=solid];
m6_623 -> m6_619  [color=blue, key=0, style=bold];
m6_954 -> m6_955  [key=0, style=solid];
m6_957 -> m6_22  [key=2, style=dotted];
m6_957 -> m6_958  [key=0, style=solid];
m6_957 -> m6_959  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_957 -> m6_960  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_957 -> m6_961  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_957 -> m6_962  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_957 -> m6_963  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_957 -> m6_964  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_957 -> m6_965  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_957 -> m6_966  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_957 -> m6_967  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_957 -> m6_968  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_957 -> m6_969  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_957 -> m6_970  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_956 -> m6_23  [key=2, style=dotted];
m6_956 -> m6_957  [key=0, style=solid];
m6_958 -> m6_250  [key=2, style=dotted];
m6_958 -> m6_959  [key=0, style=solid];
m6_960 -> m6_250  [key=2, style=dotted];
m6_960 -> m6_961  [key=0, style=solid];
m6_963 -> m6_250  [key=2, style=dotted];
m6_963 -> m6_964  [key=0, style=solid];
m6_966 -> m6_250  [key=2, style=dotted];
m6_966 -> m6_967  [key=0, style=solid];
m6_969 -> m6_250  [key=2, style=dotted];
m6_969 -> m6_970  [key=0, style=solid];
m6_959 -> m6_26  [key=2, style=dotted];
m6_959 -> m6_960  [key=0, style=solid];
m6_961 -> m6_26  [key=2, style=dotted];
m6_961 -> m6_962  [key=0, style=solid];
m6_962 -> m6_26  [key=2, style=dotted];
m6_962 -> m6_963  [key=0, style=solid];
m6_964 -> m6_26  [key=2, style=dotted];
m6_964 -> m6_965  [key=0, style=solid];
m6_965 -> m6_26  [key=2, style=dotted];
m6_965 -> m6_966  [key=0, style=solid];
m6_967 -> m6_26  [key=2, style=dotted];
m6_967 -> m6_968  [key=0, style=solid];
m6_968 -> m6_26  [key=2, style=dotted];
m6_968 -> m6_969  [key=0, style=solid];
m6_970 -> m6_26  [key=2, style=dotted];
m6_970 -> m6_971  [key=0, style=solid];
m6_955 -> m6_956  [key=0, style=solid];
m6_971 -> m6_954  [color=blue, key=0, style=bold];
m6_229 -> m6_230  [key=0, style=solid];
m6_229 -> m6_241  [key=0, style=solid];
m6_18 -> m6_19  [key=0, style=solid];
m6_18 -> m6_29  [key=2, style=dotted];
m6_254 -> m6_255  [key=0, style=solid];
m6_254 -> m6_274  [key=0, style=solid];
m6_254 -> m6_278  [key=2, style=dotted];
m6_254 -> m6_279  [key=2, style=dotted];
m6_254 -> m6_22  [key=2, style=dotted];
m6_254 -> m6_229  [key=2, style=dotted];
m6_254 -> m6_269  [key=2, style=dotted];
m6_254 -> m6_270  [key=2, style=dotted];
m6_254 -> m6_256  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_254 -> m6_257  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_254 -> m6_258  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_254 -> m6_259  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_254 -> m6_260  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_254 -> m6_261  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_254 -> m6_262  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_254 -> m6_263  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_254 -> m6_264  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_254 -> m6_265  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_254 -> m6_266  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_254 -> m6_267  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_255 -> m6_256  [key=0, style=solid];
m6_255 -> m6_257  [key=0, style=solid];
m6_255 -> m6_250  [key=2, style=dotted];
m6_255 -> m6_25  [key=2, style=dotted];
m6_256 -> m6_257  [key=0, style=solid];
m6_256 -> m6_37  [key=2, style=dotted];
m6_256 -> m6_250  [key=2, style=dotted];
m6_256 -> m6_25  [key=2, style=dotted];
m6_257 -> m6_258  [key=0, style=solid];
m6_257 -> m6_280  [key=2, style=dotted];
m6_257 -> m6_259  [color=darkseagreen4, key=1, label="out object", style=dashed];
m6_257 -> m6_260  [color=darkseagreen4, key=1, label="out object", style=dashed];
m6_257 -> m6_262  [color=darkseagreen4, key=1, label="out object", style=dashed];
m6_257 -> m6_264  [color=darkseagreen4, key=1, label="out object", style=dashed];
m6_257 -> m6_266  [color=darkseagreen4, key=1, label="out object", style=dashed];
m6_257 -> m6_250  [key=2, style=dotted];
m6_257 -> m6_25  [key=2, style=dotted];
m6_258 -> m6_259  [key=0, style=solid];
m6_258 -> m6_19  [key=2, style=dotted];
m6_258 -> m6_260  [color=darkseagreen4, key=1, label="out Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m6_258 -> m6_264  [color=darkseagreen4, key=1, label="out Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m6_258 -> m6_26  [key=2, style=dotted];
m6_259 -> m6_260  [key=0, style=solid];
m6_259 -> m6_274  [key=0, style=solid];
m6_259 -> m6_121  [key=2, style=dotted];
m6_259 -> m6_26  [key=2, style=dotted];
m6_260 -> m6_261  [key=0, style=solid];
m6_260 -> m6_264  [key=0, style=solid];
m6_260 -> m6_20  [key=2, style=dotted];
m6_260 -> m6_250  [key=2, style=dotted];
m6_260 -> m6_25  [key=2, style=dotted];
m6_261 -> m6_262  [key=0, style=solid];
m6_261 -> m6_248  [key=2, style=dotted];
m6_261 -> m6_26  [key=2, style=dotted];
m6_262 -> m6_263  [key=0, style=solid];
m6_262 -> m6_21  [key=2, style=dotted];
m6_262 -> m6_250  [key=2, style=dotted];
m6_262 -> m6_25  [key=2, style=dotted];
m6_264 -> m6_265  [key=0, style=solid];
m6_264 -> m6_266  [key=0, style=solid];
m6_264 -> m6_132  [key=2, style=dotted];
m6_264 -> m6_250  [key=2, style=dotted];
m6_264 -> m6_25  [key=2, style=dotted];
m6_267 -> m6_268  [key=0, style=solid];
m6_267 -> m6_26  [key=2, style=dotted];
m6_268 -> m6_269  [key=0, style=solid];
m6_268 -> m6_271  [color=darkseagreen4, key=1, label=resolvedRequired, style=dashed];
m6_268 -> m6_252  [color=blue, key=0, style=bold];
m6_272 -> m6_277  [key=0, style=solid];
m6_272 -> m6_163  [key=2, style=dotted];
m6_272 -> m6_164  [key=2, style=dotted];
m6_272 -> m6_273  [key=0, style=solid];
m6_274 -> m6_275  [key=0, style=solid];
m6_274 -> m6_277  [color=darkseagreen4, key=1, label="out Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m6_274 -> m6_42  [key=2, style=dotted];
m6_274 -> m6_276  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_266 -> m6_267  [key=0, style=solid];
m6_266 -> m6_273  [key=0, style=solid];
m6_266 -> m6_250  [key=2, style=dotted];
m6_266 -> m6_25  [key=2, style=dotted];
m6_263 -> m6_277  [key=0, style=solid];
m6_263 -> m6_26  [key=2, style=dotted];
m6_263 -> m6_264  [key=0, style=solid];
m6_265 -> m6_277  [key=0, style=solid];
m6_265 -> m6_26  [key=2, style=dotted];
m6_265 -> m6_266  [key=0, style=solid];
m6_273 -> m6_277  [key=0, style=solid];
m6_273 -> m6_22  [key=2, style=dotted];
m6_273 -> m6_23  [key=2, style=dotted];
m6_273 -> m6_274  [key=0, style=solid];
m6_269 -> m6_270  [key=0, style=solid];
m6_269 -> m6_271  [key=0, style=solid];
m6_269 -> m6_2080  [key=0, style=solid];
m6_271 -> m6_272  [key=0, style=solid];
m6_271 -> m6_273  [key=0, style=solid];
m6_275 -> m6_276  [key=0, style=solid];
m6_275 -> m6_277  [color=darkseagreen4, key=1, label="out object", style=dashed];
m6_275 -> m6_271  [color=blue, key=0, style=bold];
m6_1640 -> m6_1641  [key=0, style=solid];
m6_1642 -> m6_22  [key=2, style=dotted];
m6_1642 -> m6_1643  [key=0, style=solid];
m6_1642 -> m6_229  [key=2, style=dotted];
m6_1642 -> m6_269  [key=2, style=dotted];
m6_1642 -> m6_270  [key=2, style=dotted];
m6_1642 -> m6_1644  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1642 -> m6_1645  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1642 -> m6_1646  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1642 -> m6_1647  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1642 -> m6_1648  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1642 -> m6_1649  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1642 -> m6_1650  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1642 -> m6_1651  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1642 -> m6_1652  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1642 -> m6_1653  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1642 -> m6_1654  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1642 -> m6_1655  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1642 -> m6_1656  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1642 -> m6_1657  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1642 -> m6_1658  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1642 -> m6_1659  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1642 -> m6_1660  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1642 -> m6_1661  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1642 -> m6_1662  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1642 -> m6_1663  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1642 -> m6_1664  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1642 -> m6_1665  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1642 -> m6_1666  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1642 -> m6_1667  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1642 -> m6_1668  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1642 -> m6_1669  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1642 -> m6_1670  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1642 -> m6_1671  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1642 -> m6_1672  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1642 -> m6_1673  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1642 -> m6_1674  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1642 -> m6_1675  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1642 -> m6_1676  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1642 -> m6_1677  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1643 -> m6_25  [key=2, style=dotted];
m6_1643 -> m6_1644  [key=0, style=solid];
m6_1643 -> m6_24  [key=2, style=dotted];
m6_1645 -> m6_25  [key=2, style=dotted];
m6_1645 -> m6_1646  [key=0, style=solid];
m6_1645 -> m6_24  [key=2, style=dotted];
m6_1647 -> m6_25  [key=2, style=dotted];
m6_1647 -> m6_1648  [key=0, style=solid];
m6_1647 -> m6_24  [key=2, style=dotted];
m6_1649 -> m6_25  [key=2, style=dotted];
m6_1649 -> m6_1650  [key=0, style=solid];
m6_1649 -> m6_24  [key=2, style=dotted];
m6_1652 -> m6_25  [key=2, style=dotted];
m6_1652 -> m6_1653  [key=0, style=solid];
m6_1652 -> m6_24  [key=2, style=dotted];
m6_1654 -> m6_25  [key=2, style=dotted];
m6_1654 -> m6_1655  [key=0, style=solid];
m6_1654 -> m6_24  [key=2, style=dotted];
m6_1657 -> m6_25  [key=2, style=dotted];
m6_1657 -> m6_1658  [key=0, style=solid];
m6_1657 -> m6_24  [key=2, style=dotted];
m6_1659 -> m6_25  [key=2, style=dotted];
m6_1659 -> m6_1660  [key=0, style=solid];
m6_1659 -> m6_24  [key=2, style=dotted];
m6_1661 -> m6_25  [key=2, style=dotted];
m6_1661 -> m6_1662  [key=0, style=solid];
m6_1661 -> m6_24  [key=2, style=dotted];
m6_1664 -> m6_25  [key=2, style=dotted];
m6_1664 -> m6_1665  [key=0, style=solid];
m6_1664 -> m6_24  [key=2, style=dotted];
m6_1666 -> m6_25  [key=2, style=dotted];
m6_1666 -> m6_1667  [key=0, style=solid];
m6_1666 -> m6_24  [key=2, style=dotted];
m6_1670 -> m6_25  [key=2, style=dotted];
m6_1670 -> m6_1671  [key=0, style=solid];
m6_1670 -> m6_24  [key=2, style=dotted];
m6_1672 -> m6_25  [key=2, style=dotted];
m6_1672 -> m6_1673  [key=0, style=solid];
m6_1672 -> m6_24  [key=2, style=dotted];
m6_1674 -> m6_25  [key=2, style=dotted];
m6_1674 -> m6_1675  [key=0, style=solid];
m6_1674 -> m6_24  [key=2, style=dotted];
m6_1676 -> m6_25  [key=2, style=dotted];
m6_1676 -> m6_1677  [key=0, style=solid];
m6_1676 -> m6_24  [key=2, style=dotted];
m6_1641 -> m6_1642  [key=0, style=solid];
m6_1644 -> m6_26  [key=2, style=dotted];
m6_1644 -> m6_1645  [key=0, style=solid];
m6_1646 -> m6_26  [key=2, style=dotted];
m6_1646 -> m6_1647  [key=0, style=solid];
m6_1648 -> m6_26  [key=2, style=dotted];
m6_1648 -> m6_1649  [key=0, style=solid];
m6_1650 -> m6_26  [key=2, style=dotted];
m6_1650 -> m6_1651  [key=0, style=solid];
m6_1651 -> m6_26  [key=2, style=dotted];
m6_1651 -> m6_1652  [key=0, style=solid];
m6_1653 -> m6_26  [key=2, style=dotted];
m6_1653 -> m6_1654  [key=0, style=solid];
m6_1655 -> m6_26  [key=2, style=dotted];
m6_1655 -> m6_1656  [key=0, style=solid];
m6_1656 -> m6_26  [key=2, style=dotted];
m6_1656 -> m6_1657  [key=0, style=solid];
m6_1658 -> m6_26  [key=2, style=dotted];
m6_1658 -> m6_1659  [key=0, style=solid];
m6_1660 -> m6_26  [key=2, style=dotted];
m6_1660 -> m6_1661  [key=0, style=solid];
m6_1662 -> m6_26  [key=2, style=dotted];
m6_1662 -> m6_1663  [key=0, style=solid];
m6_1663 -> m6_26  [key=2, style=dotted];
m6_1663 -> m6_1664  [key=0, style=solid];
m6_1665 -> m6_26  [key=2, style=dotted];
m6_1665 -> m6_1666  [key=0, style=solid];
m6_1667 -> m6_26  [key=2, style=dotted];
m6_1667 -> m6_1668  [key=0, style=solid];
m6_1668 -> m6_26  [key=2, style=dotted];
m6_1668 -> m6_1669  [key=0, style=solid];
m6_1669 -> m6_26  [key=2, style=dotted];
m6_1669 -> m6_1670  [key=0, style=solid];
m6_1671 -> m6_26  [key=2, style=dotted];
m6_1671 -> m6_1672  [key=0, style=solid];
m6_1673 -> m6_26  [key=2, style=dotted];
m6_1673 -> m6_1674  [key=0, style=solid];
m6_1675 -> m6_26  [key=2, style=dotted];
m6_1675 -> m6_1676  [key=0, style=solid];
m6_1677 -> m6_26  [key=2, style=dotted];
m6_1677 -> m6_1678  [key=0, style=solid];
m6_1678 -> m6_1640  [color=blue, key=0, style=bold];
m6_85 -> m6_329  [key=0, style=solid];
m6_85 -> m6_330  [color=darkseagreen4, key=1, label="System.Collections.IEnumerable", style=dashed];
m6_85 -> m6_331  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_85 -> m6_333  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_85 -> m6_334  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_85 -> m6_335  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_85 -> m6_337  [color=darkseagreen4, key=1, label="System.Collections.IEnumerable", style=dashed];
m6_85 -> m6_338  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m6_85 -> m6_339  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m6_85 -> m6_340  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_85 -> m6_341  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_85 -> m6_342  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_85 -> m6_344  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_85 -> m6_345  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_85 -> m6_347  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_85 -> m6_349  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_85 -> m6_351  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_85 -> m6_22  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerProperty", style=bold];
m6_85 -> m6_67  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonArrayContract contract", style=bold];
m6_329 -> m6_330  [key=0, style=solid];
m6_329 -> m6_26  [key=2, style=dotted];
m6_330 -> m6_331  [key=0, style=solid];
m6_330 -> m6_332  [color=darkseagreen4, key=1, label=underlyingList, style=dashed];
m6_330 -> m6_333  [color=darkseagreen4, key=1, label=underlyingList, style=dashed];
m6_330 -> m6_344  [color=darkseagreen4, key=1, label=underlyingList, style=dashed];
m6_330 -> m6_351  [color=darkseagreen4, key=1, label=underlyingList, style=dashed];
m6_330 -> m6_26  [key=2, style=dotted];
m6_331 -> m6_332  [key=0, style=solid];
m6_331 -> m6_198  [key=2, style=dotted];
m6_331 -> m6_24  [key=2, style=dotted];
m6_333 -> m6_334  [key=0, style=solid];
m6_333 -> m6_353  [key=2, style=dotted];
m6_333 -> m6_348  [color=darkseagreen4, key=1, label=hasWrittenMetadataObject, style=dashed];
m6_333 -> m6_26  [key=2, style=dotted];
m6_334 -> m6_335  [key=0, style=solid];
m6_334 -> m6_354  [key=2, style=dotted];
m6_334 -> m6_26  [key=2, style=dotted];
m6_335 -> m6_336  [key=0, style=solid];
m6_335 -> m6_345  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m6_335 -> m6_26  [key=2, style=dotted];
m6_337 -> m6_338  [key=0, style=solid];
m6_337 -> m6_347  [key=0, style=solid];
m6_337 -> m6_339  [color=darkseagreen4, key=1, label=value, style=dashed];
m6_337 -> m6_340  [color=darkseagreen4, key=1, label=value, style=dashed];
m6_337 -> m6_341  [color=darkseagreen4, key=1, label=value, style=dashed];
m6_337 -> m6_342  [color=darkseagreen4, key=1, label=value, style=dashed];
m6_337 -> m6_26  [key=2, style=dotted];
m6_338 -> m6_339  [key=0, style=solid];
m6_338 -> m6_19  [key=2, style=dotted];
m6_338 -> m6_341  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
m6_338 -> m6_342  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
m6_338 -> m6_26  [key=2, style=dotted];
m6_339 -> m6_340  [key=0, style=solid];
m6_339 -> m6_341  [key=0, style=solid];
m6_339 -> m6_20  [key=2, style=dotted];
m6_339 -> m6_26  [key=2, style=dotted];
m6_340 -> m6_343  [key=0, style=solid];
m6_340 -> m6_337  [key=0, style=solid];
m6_340 -> m6_21  [key=2, style=dotted];
m6_340 -> m6_341  [key=0, style=solid];
m6_340 -> m6_24  [key=2, style=dotted];
m6_341 -> m6_342  [key=0, style=solid];
m6_341 -> m6_343  [key=0, style=solid];
m6_341 -> m6_337  [key=0, style=solid];
m6_341 -> m6_132  [key=2, style=dotted];
m6_341 -> m6_26  [key=2, style=dotted];
m6_342 -> m6_343  [key=0, style=solid];
m6_342 -> m6_337  [key=0, style=solid];
m6_342 -> m6_22  [key=2, style=dotted];
m6_342 -> m6_26  [key=2, style=dotted];
m6_344 -> m6_345  [key=0, style=solid];
m6_344 -> m6_346  [key=0, style=solid];
m6_344 -> m6_23  [key=2, style=dotted];
m6_344 -> m6_26  [key=2, style=dotted];
m6_345 -> m6_337  [key=0, style=solid];
m6_345 -> m6_24  [key=2, style=dotted];
m6_345 -> m6_26  [key=2, style=dotted];
m6_345 -> m6_346  [key=0, style=solid];
m6_347 -> m6_348  [key=0, style=solid];
m6_347 -> m6_355  [key=2, style=dotted];
m6_347 -> m6_26  [key=2, style=dotted];
m6_349 -> m6_350  [key=0, style=solid];
m6_349 -> m6_55  [key=2, style=dotted];
m6_349 -> m6_26  [key=2, style=dotted];
m6_351 -> m6_352  [key=0, style=solid];
m6_351 -> m6_199  [key=2, style=dotted];
m6_351 -> m6_26  [key=2, style=dotted];
m6_332 -> m6_333  [key=0, style=solid];
m6_332 -> m6_245  [key=2, style=dotted];
m6_332 -> m6_26  [key=2, style=dotted];
m6_348 -> m6_349  [key=0, style=solid];
m6_348 -> m6_350  [key=0, style=solid];
m6_348 -> m6_26  [key=2, style=dotted];
m6_336 -> m6_337  [key=0, style=solid];
m6_336 -> m6_344  [color=darkseagreen4, key=1, label=index, style=dashed];
m6_336 -> m6_13  [color=darkorchid, key=3, label="Local variable int index", style=bold];
m6_336 -> m6_24  [key=2, style=dotted];
m6_343 -> m6_344  [key=0, style=solid];
m6_343 -> m6_26  [key=2, style=dotted];
m6_346 -> m6_352  [key=0, style=solid];
m6_346 -> m6_347  [key=0, style=solid];
m6_346 -> m6_24  [key=2, style=dotted];
m6_350 -> m6_351  [key=0, style=solid];
m6_350 -> m6_253  [key=2, style=dotted];
m6_350 -> m6_26  [key=2, style=dotted];
m6_352 -> m6_85  [color=blue, key=0, style=bold];
m6_352 -> m6_353  [key=0, style=solid];
m6_352 -> m6_24  [key=2, style=dotted];
m6_1336 -> m6_1337  [key=0, style=solid];
m6_1338 -> m6_22  [key=2, style=dotted];
m6_1338 -> m6_23  [key=2, style=dotted];
m6_1338 -> m6_1339  [key=0, style=solid];
m6_1338 -> m6_1340  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1338 -> m6_1341  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1338 -> m6_1342  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1338 -> m6_1343  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1338 -> m6_1344  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1338 -> m6_1345  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1338 -> m6_1346  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1338 -> m6_1347  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1338 -> m6_1349  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1338 -> m6_1350  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1340 -> m6_25  [key=2, style=dotted];
m6_1340 -> m6_1341  [key=0, style=solid];
m6_1340 -> m6_24  [key=2, style=dotted];
m6_1342 -> m6_25  [key=2, style=dotted];
m6_1342 -> m6_1343  [key=0, style=solid];
m6_1342 -> m6_24  [key=2, style=dotted];
m6_1349 -> m6_25  [key=2, style=dotted];
m6_1349 -> m6_1350  [key=0, style=solid];
m6_1349 -> m6_24  [key=2, style=dotted];
m6_1337 -> m6_1338  [key=0, style=solid];
m6_1339 -> m6_1340  [key=0, style=solid];
m6_1339 -> m6_1352  [key=2, style=dotted];
m6_1341 -> m6_26  [key=2, style=dotted];
m6_1341 -> m6_1342  [key=0, style=solid];
m6_1343 -> m6_26  [key=2, style=dotted];
m6_1343 -> m6_1344  [key=0, style=solid];
m6_1344 -> m6_1345  [key=0, style=solid];
m6_1344 -> m6_1177  [key=2, style=dotted];
m6_1345 -> m6_26  [key=2, style=dotted];
m6_1345 -> m6_1346  [key=0, style=solid];
m6_1346 -> m6_26  [key=2, style=dotted];
m6_1346 -> m6_1347  [key=0, style=solid];
m6_1347 -> m6_1348  [key=0, style=solid];
m6_1350 -> m6_26  [key=2, style=dotted];
m6_1350 -> m6_1351  [key=0, style=solid];
m6_1348 -> m6_26  [key=2, style=dotted];
m6_1348 -> m6_1349  [key=0, style=solid];
m6_1348 -> m6_1348  [color=darkseagreen4, key=1, label=dt, style=dashed];
m6_1348 -> m6_1335  [key=2, style=dotted];
m6_1351 -> m6_1336  [color=blue, key=0, style=bold];
m6_313 -> m6_314  [key=0, style=solid];
m6_313 -> m6_419  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.TypeNameHandling value", style=bold];
m6_313 -> m6_50  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.TypeNameHandling flag", style=bold];
m6_313 -> m6_153  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.TypeNameHandling flag", style=bold];
m6_313 -> m6_22  [key=2, style=dotted];
m6_313 -> m6_315  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_313 -> m6_316  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_313 -> m6_317  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_313 -> m6_318  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_313 -> m6_319  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_313 -> m6_320  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_313 -> m6_321  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_313 -> m6_322  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_313 -> m6_323  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_313 -> m6_324  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_313 -> m6_325  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_313 -> m6_326  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_313 -> m6_327  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_313 -> m6_328  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_313 -> m6_329  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_313 -> m6_330  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_313 -> m6_331  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_313 -> m6_332  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_313 -> m6_333  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_313 -> m6_334  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_313 -> m6_335  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_313 -> m6_336  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_313 -> m6_337  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_313 -> m6_338  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_313 -> m6_339  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_313 -> m6_340  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_313 -> m6_341  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_313 -> m6_342  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_313 -> m6_343  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_313 -> m6_344  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_313 -> m6_345  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_313 -> m6_346  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_313 -> m6_347  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_313 -> m6_348  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_313 -> m6_349  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_313 -> m6_350  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_313 -> m6_351  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_313 -> m6_352  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_313 -> m6_353  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_313 -> m6_354  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_313 -> m6_355  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_313 -> m6_356  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_313 -> m6_357  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_313 -> m6_358  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_313 -> m6_359  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_313 -> m6_360  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_314 -> m6_315  [key=0, style=solid];
m6_314 -> m6_26  [key=2, style=dotted];
m6_315 -> m6_313  [color=blue, key=0, style=bold];
m6_315 -> m6_26  [key=2, style=dotted];
m6_315 -> m6_316  [key=0, style=solid];
m6_1876 -> m6_1877  [key=0, style=solid];
m6_1878 -> m6_22  [key=2, style=dotted];
m6_1878 -> m6_23  [key=2, style=dotted];
m6_1878 -> m6_1879  [key=0, style=solid];
m6_1878 -> m6_1880  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1878 -> m6_1881  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1878 -> m6_1906  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1878 -> m6_1882  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1878 -> m6_1883  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1878 -> m6_1884  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1878 -> m6_1885  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1878 -> m6_1886  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1878 -> m6_1887  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1878 -> m6_1888  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1878 -> m6_1889  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1878 -> m6_1890  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1878 -> m6_1891  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1878 -> m6_1892  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1878 -> m6_1893  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1878 -> m6_1909  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1878 -> m6_1894  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1878 -> m6_1895  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1878 -> m6_1896  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1878 -> m6_1897  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1878 -> m6_1898  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1878 -> m6_1899  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1878 -> m6_1900  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1878 -> m6_1901  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1878 -> m6_1902  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1878 -> m6_1903  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1879 -> m6_25  [key=2, style=dotted];
m6_1879 -> m6_1880  [key=0, style=solid];
m6_1879 -> m6_24  [key=2, style=dotted];
m6_1883 -> m6_25  [key=2, style=dotted];
m6_1883 -> m6_1884  [key=0, style=solid];
m6_1883 -> m6_24  [key=2, style=dotted];
m6_1885 -> m6_25  [key=2, style=dotted];
m6_1885 -> m6_1886  [key=0, style=solid];
m6_1885 -> m6_24  [key=2, style=dotted];
m6_1887 -> m6_25  [key=2, style=dotted];
m6_1887 -> m6_1888  [key=0, style=solid];
m6_1887 -> m6_24  [key=2, style=dotted];
m6_1889 -> m6_25  [key=2, style=dotted];
m6_1889 -> m6_1890  [key=0, style=solid];
m6_1889 -> m6_24  [key=2, style=dotted];
m6_1891 -> m6_25  [key=2, style=dotted];
m6_1891 -> m6_1892  [key=0, style=solid];
m6_1891 -> m6_24  [key=2, style=dotted];
m6_1895 -> m6_25  [key=2, style=dotted];
m6_1895 -> m6_1896  [key=0, style=solid];
m6_1895 -> m6_24  [key=2, style=dotted];
m6_1897 -> m6_25  [key=2, style=dotted];
m6_1897 -> m6_1898  [key=0, style=solid];
m6_1897 -> m6_24  [key=2, style=dotted];
m6_1899 -> m6_25  [key=2, style=dotted];
m6_1899 -> m6_1900  [key=0, style=solid];
m6_1899 -> m6_24  [key=2, style=dotted];
m6_1901 -> m6_25  [key=2, style=dotted];
m6_1901 -> m6_1902  [key=0, style=solid];
m6_1901 -> m6_24  [key=2, style=dotted];
m6_1877 -> m6_1878  [key=0, style=solid];
m6_1880 -> m6_26  [key=2, style=dotted];
m6_1880 -> m6_1881  [key=0, style=solid];
m6_1881 -> m6_1882  [key=0, style=solid];
m6_1881 -> m6_1613  [key=2, style=dotted];
m6_1881 -> m6_1905  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1882 -> m6_26  [key=2, style=dotted];
m6_1882 -> m6_1883  [key=0, style=solid];
m6_1884 -> m6_26  [key=2, style=dotted];
m6_1884 -> m6_1885  [key=0, style=solid];
m6_1886 -> m6_26  [key=2, style=dotted];
m6_1886 -> m6_1887  [key=0, style=solid];
m6_1888 -> m6_26  [key=2, style=dotted];
m6_1888 -> m6_1889  [key=0, style=solid];
m6_1890 -> m6_26  [key=2, style=dotted];
m6_1890 -> m6_1891  [key=0, style=solid];
m6_1892 -> m6_26  [key=2, style=dotted];
m6_1892 -> m6_1893  [key=0, style=solid];
m6_1893 -> m6_1894  [key=0, style=solid];
m6_1893 -> m6_1613  [key=2, style=dotted];
m6_1893 -> m6_1908  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1894 -> m6_26  [key=2, style=dotted];
m6_1894 -> m6_1895  [key=0, style=solid];
m6_1896 -> m6_26  [key=2, style=dotted];
m6_1896 -> m6_1897  [key=0, style=solid];
m6_1898 -> m6_26  [key=2, style=dotted];
m6_1898 -> m6_1899  [key=0, style=solid];
m6_1900 -> m6_26  [key=2, style=dotted];
m6_1900 -> m6_1901  [key=0, style=solid];
m6_1902 -> m6_26  [key=2, style=dotted];
m6_1902 -> m6_1903  [key=0, style=solid];
m6_1903 -> m6_1904  [key=0, style=solid];
m6_1903 -> m6_24  [key=2, style=dotted];
m6_1903 -> m6_28  [key=2, style=dotted];
m6_1904 -> m6_1876  [color=blue, key=0, style=bold];
m6_656 -> m6_657  [color=green, key=0, style=solid];
m6_657 -> m6_658  [color=green, key=0, style=solid];
m6_657 -> m6_22  [color=green, key=2, style=dotted];
m6_657 -> m6_23  [color=green, key=2, style=dotted];
m6_657 -> m6_659  [color=green, key=1, label=reader, style=dashed];
m6_657 -> m6_660  [color=green, key=1, label=reader, style=dashed];
m6_658 -> m6_659  [key=0, style=solid];
m6_658 -> m6_250  [key=2, style=dotted];
m6_658 -> m6_25  [key=2, style=dotted];
m6_659 -> m6_660  [key=0, style=solid];
m6_659 -> m6_645  [key=2, style=dotted];
m6_659 -> m6_662  [key=2, style=dotted];
m6_660 -> m6_661  [key=0, style=solid];
m6_660 -> m6_26  [key=2, style=dotted];
m6_661 -> m6_656  [color=blue, key=0, style=bold];
m6_22 -> m6_56  [key=0, style=solid];
m6_22 -> m6_57  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_22 -> m6_59  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m6_22 -> m6_61  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_22 -> m6_63  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m6_22 -> m6_65  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_22 -> m6_67  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m6_22 -> m6_69  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_22 -> m6_70  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_22 -> m6_72  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_22 -> m6_74  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_22 -> m6_76  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m6_22 -> m6_77  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_22 -> m6_79  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_22 -> m6_2  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m6_22 -> m6_84  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerProperty", style=bold];
m6_22 -> m6_85  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerProperty", style=bold];
m6_22 -> m6_366  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerProperty", style=bold];
m6_22 -> m6_89  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerProperty", style=bold];
m6_22 -> m6_217  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m6_22 -> m6_337  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m6_22 -> m6_379  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m6_22 -> m6_451  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m6_22 -> m6_7  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract valueContract", style=bold];
m6_22 -> m6_218  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract valueContract", style=bold];
m6_22 -> m6_231  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract valueContract", style=bold];
m6_22 -> m6_338  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract valueContract", style=bold];
m6_22 -> m6_380  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract valueContract", style=bold];
m6_22 -> m6_452  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract valueContract", style=bold];
m6_22 -> m6_8  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerProperty", style=bold];
m6_22 -> m6_216  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty member", style=bold];
m6_279 -> m6_280  [key=0, style=solid];
m6_279 -> m6_522  [key=0, style=solid];
m6_279 -> m6_524  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m6_279 -> m6_526  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_279 -> m6_247  [color=darkorchid, key=3, label="Parameter variable object target", style=bold];
m6_279 -> m6_126  [color=darkorchid, key=3, label="method methodReturn bool IsSpecified", style=bold];
m6_281 -> m6_22  [key=2, style=dotted];
m6_281 -> m6_23  [key=2, style=dotted];
m6_281 -> m6_282  [key=0, style=solid];
m6_281 -> m6_283  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_281 -> m6_284  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_281 -> m6_285  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_281 -> m6_286  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_281 -> m6_287  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_281 -> m6_288  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_281 -> m6_289  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_281 -> m6_290  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_281 -> m6_291  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_281 -> m6_292  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_281 -> m6_295  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_281 -> m6_51  [key=2, style=dotted];
m6_280 -> m6_281  [key=0, style=solid];
m6_282 -> m6_283  [key=0, style=solid];
m6_282 -> m6_24  [key=2, style=dotted];
m6_282 -> m6_92  [key=2, style=dotted];
m6_282 -> m6_117  [key=2, style=dotted];
m6_283 -> m6_26  [key=2, style=dotted];
m6_283 -> m6_284  [key=0, style=solid];
m6_283 -> m6_285  [key=0, style=solid];
m6_283 -> m6_288  [key=2, style=dotted];
m6_284 -> m6_285  [key=0, style=solid];
m6_284 -> m6_24  [key=2, style=dotted];
m6_284 -> m6_289  [key=2, style=dotted];
m6_285 -> m6_26  [key=2, style=dotted];
m6_285 -> m6_286  [key=0, style=solid];
m6_285 -> m6_287  [key=0, style=solid];
m6_285 -> m6_50  [key=2, style=dotted];
m6_286 -> m6_287  [key=0, style=solid];
m6_286 -> m6_24  [key=2, style=dotted];
m6_286 -> m6_52  [key=2, style=dotted];
m6_287 -> m6_26  [key=2, style=dotted];
m6_287 -> m6_288  [key=0, style=solid];
m6_287 -> m6_246  [color=blue, key=0, style=bold];
m6_288 -> m6_289  [key=0, style=solid];
m6_288 -> m6_24  [key=2, style=dotted];
m6_288 -> m6_290  [key=0, style=solid];
m6_288 -> m6_293  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m6_288 -> m6_246  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty property", style=bold];
m6_288 -> m6_353  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty property", style=bold];
m6_288 -> m6_44  [color=darkorchid, key=3, label="method methodReturn bool HasCreatorParameter", style=bold];
m6_289 -> m6_26  [key=2, style=dotted];
m6_289 -> m6_290  [key=0, style=solid];
m6_289 -> m6_296  [key=0, style=solid];
m6_289 -> m6_298  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_289 -> m6_299  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_289 -> m6_300  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_289 -> m6_246  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m6_289 -> m6_353  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m6_290 -> m6_291  [key=0, style=solid];
m6_290 -> m6_24  [key=2, style=dotted];
m6_290 -> m6_293  [color=darkseagreen4, key=1, label=objectContract, style=dashed];
m6_291 -> m6_26  [key=2, style=dotted];
m6_291 -> m6_292  [key=0, style=solid];
m6_291 -> m6_293  [key=0, style=solid];
m6_292 -> m6_293  [key=0, style=solid];
m6_292 -> m6_42  [key=2, style=dotted];
m6_292 -> m6_294  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_293 -> m6_279  [color=blue, key=0, style=bold];
m6_293 -> m6_294  [key=0, style=solid];
m6_293 -> m6_295  [key=2, style=dotted];
m6_1546 -> m6_1547  [key=0, style=solid];
m6_1548 -> m6_22  [key=2, style=dotted];
m6_1548 -> m6_23  [key=2, style=dotted];
m6_1548 -> m6_1549  [key=0, style=solid];
m6_1548 -> m6_1550  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1548 -> m6_1551  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1549 -> m6_25  [key=2, style=dotted];
m6_1549 -> m6_1550  [key=0, style=solid];
m6_1549 -> m6_24  [key=2, style=dotted];
m6_1550 -> m6_25  [key=2, style=dotted];
m6_1550 -> m6_1551  [key=0, style=solid];
m6_1550 -> m6_24  [key=2, style=dotted];
m6_1547 -> m6_1548  [key=0, style=solid];
m6_1551 -> m6_1552  [key=0, style=solid];
m6_1551 -> m6_24  [key=2, style=dotted];
m6_1551 -> m6_28  [key=2, style=dotted];
m6_1552 -> m6_1546  [color=blue, key=0, style=bold];
m6_1105 -> m6_1106  [key=0, style=solid];
m6_1107 -> m6_22  [key=2, style=dotted];
m6_1107 -> m6_1108  [key=0, style=solid];
m6_1107 -> m6_1109  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1107 -> m6_1110  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1107 -> m6_1111  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1107 -> m6_1112  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1107 -> m6_1113  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1107 -> m6_1114  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1107 -> m6_1115  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1107 -> m6_1116  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1107 -> m6_1117  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1107 -> m6_1118  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1107 -> m6_1119  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1107 -> m6_1120  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1107 -> m6_1121  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1107 -> m6_1122  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1107 -> m6_1123  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1107 -> m6_1124  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1106 -> m6_23  [key=2, style=dotted];
m6_1106 -> m6_1107  [key=0, style=solid];
m6_1108 -> m6_25  [key=2, style=dotted];
m6_1108 -> m6_1109  [key=0, style=solid];
m6_1108 -> m6_24  [key=2, style=dotted];
m6_1122 -> m6_25  [key=2, style=dotted];
m6_1122 -> m6_1123  [key=0, style=solid];
m6_1122 -> m6_24  [key=2, style=dotted];
m6_1109 -> m6_26  [key=2, style=dotted];
m6_1109 -> m6_1110  [key=0, style=solid];
m6_1110 -> m6_1111  [key=0, style=solid];
m6_1110 -> m6_24  [key=2, style=dotted];
m6_1111 -> m6_26  [key=2, style=dotted];
m6_1111 -> m6_1112  [key=0, style=solid];
m6_1112 -> m6_26  [key=2, style=dotted];
m6_1112 -> m6_1113  [key=0, style=solid];
m6_1113 -> m6_26  [key=2, style=dotted];
m6_1113 -> m6_1114  [key=0, style=solid];
m6_1114 -> m6_1115  [key=0, style=solid];
m6_1114 -> m6_24  [key=2, style=dotted];
m6_1115 -> m6_26  [key=2, style=dotted];
m6_1115 -> m6_1116  [key=0, style=solid];
m6_1116 -> m6_26  [key=2, style=dotted];
m6_1116 -> m6_1117  [key=0, style=solid];
m6_1117 -> m6_26  [key=2, style=dotted];
m6_1117 -> m6_1118  [key=0, style=solid];
m6_1118 -> m6_1119  [key=0, style=solid];
m6_1118 -> m6_24  [key=2, style=dotted];
m6_1119 -> m6_26  [key=2, style=dotted];
m6_1119 -> m6_1120  [key=0, style=solid];
m6_1120 -> m6_26  [key=2, style=dotted];
m6_1120 -> m6_1121  [key=0, style=solid];
m6_1121 -> m6_26  [key=2, style=dotted];
m6_1121 -> m6_1122  [key=0, style=solid];
m6_1123 -> m6_26  [key=2, style=dotted];
m6_1123 -> m6_1124  [key=0, style=solid];
m6_1124 -> m6_1125  [key=0, style=solid];
m6_1124 -> m6_24  [key=2, style=dotted];
m6_1124 -> m6_28  [key=2, style=dotted];
m6_1125 -> m6_1105  [color=blue, key=0, style=bold];
m6_56 -> m6_57  [key=0, style=solid];
m6_56 -> m6_59  [key=0, style=solid];
m6_56 -> m6_25  [key=2, style=dotted];
m6_56 -> m6_24  [key=2, style=dotted];
m6_57 -> m6_58  [key=0, style=solid];
m6_57 -> m6_81  [key=2, style=dotted];
m6_57 -> m6_26  [key=2, style=dotted];
m6_59 -> m6_60  [key=0, style=solid];
m6_59 -> m6_82  [key=2, style=dotted];
m6_59 -> m6_61  [color=darkseagreen4, key=1, label=converter, style=dashed];
m6_59 -> m6_47  [color=blue, key=0, style=bold];
m6_58 -> m6_80  [key=0, style=solid];
m6_58 -> m6_59  [key=0, style=solid];
m6_58 -> m6_24  [key=2, style=dotted];
m6_58 -> m6_28  [key=2, style=dotted];
m6_55 -> m6_56  [key=0, style=solid];
m6_55 -> m6_42  [key=2, style=dotted];
m6_55 -> m6_69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_209 -> m6_26  [key=2, style=dotted];
m6_209 -> m6_210  [key=0, style=solid];
m6_209 -> m6_220  [key=2, style=dotted];
m6_166 -> m6_26  [key=2, style=dotted];
m6_166 -> m6_167  [key=0, style=solid];
m6_92 -> m6_93  [key=0, style=solid];
m6_92 -> m6_94  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m6_92 -> m6_95  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m6_92 -> m6_96  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m6_92 -> m6_97  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m6_92 -> m6_98  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContainerContract", style=dashed];
m6_92 -> m6_99  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContainerContract", style=dashed];
m6_92 -> m6_101  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m6_92 -> m6_20  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerProperty", style=bold];
m6_92 -> m6_246  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerProperty", style=bold];
m6_92 -> m6_353  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerProperty", style=bold];
m6_92 -> m6_26  [key=2, style=dotted];
m6_93 -> m6_94  [key=0, style=solid];
m6_93 -> m6_96  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m6_93 -> m6_98  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m6_93 -> m6_100  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m6_93 -> m6_102  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m6_93 -> m6_8  [color=darkorchid, key=3, label="Local variable bool? isReference", style=bold];
m6_93 -> m6_25  [key=2, style=dotted];
m6_93 -> m6_24  [key=2, style=dotted];
m6_94 -> m6_95  [key=0, style=solid];
m6_94 -> m6_96  [key=0, style=solid];
m6_94 -> m6_26  [key=2, style=dotted];
m6_95 -> m6_96  [key=0, style=solid];
m6_95 -> m6_98  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m6_95 -> m6_100  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m6_95 -> m6_102  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m6_95 -> m6_26  [key=2, style=dotted];
m6_96 -> m6_97  [key=0, style=solid];
m6_96 -> m6_98  [key=0, style=solid];
m6_96 -> m6_25  [key=2, style=dotted];
m6_96 -> m6_24  [key=2, style=dotted];
m6_97 -> m6_98  [key=0, style=solid];
m6_97 -> m6_100  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m6_97 -> m6_102  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m6_97 -> m6_26  [key=2, style=dotted];
m6_98 -> m6_99  [key=0, style=solid];
m6_98 -> m6_100  [key=0, style=solid];
m6_98 -> m6_24  [key=2, style=dotted];
m6_98 -> m6_28  [key=2, style=dotted];
m6_99 -> m6_100  [key=0, style=solid];
m6_99 -> m6_102  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m6_99 -> m6_86  [color=blue, key=0, style=bold];
m6_131 -> m6_119  [color=blue, key=0, style=bold];
m6_1126 -> m6_1127  [key=0, style=solid];
m6_1128 -> m6_22  [key=2, style=dotted];
m6_1128 -> m6_1129  [key=0, style=solid];
m6_1128 -> m6_1130  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1128 -> m6_1131  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1128 -> m6_1132  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1128 -> m6_1133  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1128 -> m6_1134  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1128 -> m6_1135  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1128 -> m6_1136  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1128 -> m6_1137  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1128 -> m6_1138  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1128 -> m6_1139  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1128 -> m6_1140  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1128 -> m6_1141  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1128 -> m6_1142  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1128 -> m6_1143  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1128 -> m6_1144  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1128 -> m6_1145  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1127 -> m6_23  [key=2, style=dotted];
m6_1127 -> m6_1128  [key=0, style=solid];
m6_1129 -> m6_25  [key=2, style=dotted];
m6_1129 -> m6_1130  [key=0, style=solid];
m6_1129 -> m6_24  [key=2, style=dotted];
m6_1143 -> m6_25  [key=2, style=dotted];
m6_1143 -> m6_1144  [key=0, style=solid];
m6_1143 -> m6_24  [key=2, style=dotted];
m6_1130 -> m6_26  [key=2, style=dotted];
m6_1130 -> m6_1131  [key=0, style=solid];
m6_1131 -> m6_1132  [key=0, style=solid];
m6_1131 -> m6_46  [key=2, style=dotted];
m6_1132 -> m6_26  [key=2, style=dotted];
m6_1132 -> m6_1133  [key=0, style=solid];
m6_1133 -> m6_26  [key=2, style=dotted];
m6_1133 -> m6_1134  [key=0, style=solid];
m6_1134 -> m6_26  [key=2, style=dotted];
m6_1134 -> m6_1135  [key=0, style=solid];
m6_1135 -> m6_1136  [key=0, style=solid];
m6_1135 -> m6_46  [key=2, style=dotted];
m6_1136 -> m6_26  [key=2, style=dotted];
m6_1136 -> m6_1137  [key=0, style=solid];
m6_1137 -> m6_26  [key=2, style=dotted];
m6_1137 -> m6_1138  [key=0, style=solid];
m6_1138 -> m6_26  [key=2, style=dotted];
m6_1138 -> m6_1139  [key=0, style=solid];
m6_1139 -> m6_1140  [key=0, style=solid];
m6_1139 -> m6_46  [key=2, style=dotted];
m6_1140 -> m6_26  [key=2, style=dotted];
m6_1140 -> m6_1141  [key=0, style=solid];
m6_1141 -> m6_26  [key=2, style=dotted];
m6_1141 -> m6_1142  [key=0, style=solid];
m6_1142 -> m6_26  [key=2, style=dotted];
m6_1142 -> m6_1143  [key=0, style=solid];
m6_1144 -> m6_26  [key=2, style=dotted];
m6_1144 -> m6_1145  [key=0, style=solid];
m6_1145 -> m6_1146  [key=0, style=solid];
m6_1145 -> m6_24  [key=2, style=dotted];
m6_1145 -> m6_28  [key=2, style=dotted];
m6_1146 -> m6_1126  [color=blue, key=0, style=bold];
m6_312 -> m6_23  [key=2, style=dotted];
m6_312 -> m6_313  [key=0, style=solid];
m6_312 -> m6_117  [color=blue, key=0, style=bold];
m6_316 -> m6_26  [key=2, style=dotted];
m6_316 -> m6_317  [key=0, style=solid];
m6_316 -> m6_318  [key=0, style=solid];
m6_316 -> m6_20  [key=2, style=dotted];
m6_317 -> m6_318  [key=0, style=solid];
m6_317 -> m6_24  [key=2, style=dotted];
m6_317 -> m6_327  [key=0, style=solid];
m6_317 -> m6_21  [key=2, style=dotted];
m6_318 -> m6_26  [key=2, style=dotted];
m6_318 -> m6_319  [key=0, style=solid];
m6_318 -> m6_320  [key=0, style=solid];
m6_318 -> m6_132  [key=2, style=dotted];
m6_319 -> m6_26  [key=2, style=dotted];
m6_319 -> m6_320  [key=0, style=solid];
m6_319 -> m6_327  [key=0, style=solid];
m6_320 -> m6_26  [key=2, style=dotted];
m6_320 -> m6_321  [key=0, style=solid];
m6_320 -> m6_245  [key=2, style=dotted];
m6_321 -> m6_322  [key=0, style=solid];
m6_321 -> m6_24  [key=2, style=dotted];
m6_321 -> m6_323  [key=0, style=solid];
m6_322 -> m6_26  [key=2, style=dotted];
m6_322 -> m6_323  [key=0, style=solid];
m6_322 -> m6_36  [key=2, style=dotted];
m6_322 -> m6_176  [key=2, style=dotted];
m6_322 -> m6_165  [key=2, style=dotted];
m6_322 -> m6_166  [key=2, style=dotted];
m6_323 -> m6_26  [key=2, style=dotted];
m6_323 -> m6_324  [key=0, style=solid];
m6_323 -> m6_328  [key=2, style=dotted];
m6_324 -> m6_26  [key=2, style=dotted];
m6_324 -> m6_325  [key=0, style=solid];
m6_324 -> m6_326  [key=0, style=solid];
m6_325 -> m6_26  [key=2, style=dotted];
m6_325 -> m6_326  [key=0, style=solid];
m6_325 -> m6_36  [key=2, style=dotted];
m6_325 -> m6_176  [key=2, style=dotted];
m6_325 -> m6_165  [key=2, style=dotted];
m6_325 -> m6_166  [key=2, style=dotted];
m6_326 -> m6_327  [key=0, style=solid];
m6_326 -> m6_24  [key=2, style=dotted];
m6_326 -> m6_253  [key=2, style=dotted];
m6_327 -> m6_26  [key=2, style=dotted];
m6_327 -> m6_328  [key=0, style=solid];
m6_327 -> m6_83  [color=blue, key=0, style=bold];
m6_354 -> m6_26  [key=2, style=dotted];
m6_354 -> m6_355  [key=0, style=solid];
m6_356 -> m6_357  [key=0, style=solid];
m6_356 -> m6_24  [key=2, style=dotted];
m6_356 -> m6_198  [key=2, style=dotted];
m6_357 -> m6_26  [key=2, style=dotted];
m6_357 -> m6_358  [key=0, style=solid];
m6_357 -> m6_245  [key=2, style=dotted];
m6_358 -> m6_26  [key=2, style=dotted];
m6_358 -> m6_359  [key=0, style=solid];
m6_358 -> m6_353  [key=2, style=dotted];
m6_358 -> m6_360  [color=darkseagreen4, key=1, label=hasWrittenMetadataObject, style=dashed];
m6_359 -> m6_26  [key=2, style=dotted];
m6_359 -> m6_360  [key=0, style=solid];
m6_359 -> m6_365  [key=2, style=dotted];
m6_359 -> m6_366  [key=2, style=dotted];
m6_360 -> m6_361  [key=0, style=solid];
m6_360 -> m6_24  [key=2, style=dotted];
m6_360 -> m6_28  [key=2, style=dotted];
m6_360 -> m6_362  [key=0, style=solid];
m6_311 -> m6_312  [key=0, style=solid];
m6_361 -> m6_310  [color=blue, key=0, style=bold];
m6_361 -> m6_362  [key=0, style=solid];
m6_361 -> m6_55  [key=2, style=dotted];
m6_716 -> m6_717  [key=0, style=solid];
m6_717 -> m6_22  [key=2, style=dotted];
m6_717 -> m6_23  [key=2, style=dotted];
m6_717 -> m6_718  [key=0, style=solid];
m6_717 -> m6_719  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_717 -> m6_720  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_717 -> m6_721  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_717 -> m6_722  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_717 -> m6_723  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_717 -> m6_724  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_717 -> m6_725  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_717 -> m6_726  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_717 -> m6_727  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_718 -> m6_250  [key=2, style=dotted];
m6_718 -> m6_25  [key=2, style=dotted];
m6_718 -> m6_719  [key=0, style=solid];
m6_719 -> m6_250  [key=2, style=dotted];
m6_719 -> m6_25  [key=2, style=dotted];
m6_719 -> m6_720  [key=0, style=solid];
m6_722 -> m6_250  [key=2, style=dotted];
m6_722 -> m6_25  [key=2, style=dotted];
m6_722 -> m6_723  [key=0, style=solid];
m6_725 -> m6_250  [key=2, style=dotted];
m6_725 -> m6_25  [key=2, style=dotted];
m6_725 -> m6_726  [key=0, style=solid];
m6_727 -> m6_250  [key=2, style=dotted];
m6_727 -> m6_728  [key=0, style=solid];
m6_727 -> m6_28  [key=2, style=dotted];
m6_720 -> m6_26  [key=2, style=dotted];
m6_720 -> m6_721  [key=0, style=solid];
m6_721 -> m6_26  [key=2, style=dotted];
m6_721 -> m6_722  [key=0, style=solid];
m6_723 -> m6_26  [key=2, style=dotted];
m6_723 -> m6_724  [key=0, style=solid];
m6_724 -> m6_26  [key=2, style=dotted];
m6_724 -> m6_725  [key=0, style=solid];
m6_726 -> m6_26  [key=2, style=dotted];
m6_726 -> m6_727  [key=0, style=solid];
m6_728 -> m6_716  [color=blue, key=0, style=bold];
m6_521 -> m6_25  [key=2, style=dotted];
m6_521 -> m6_522  [key=0, style=solid];
m6_521 -> m6_24  [key=2, style=dotted];
m6_1428 -> m6_1429  [key=0, style=solid];
m6_1430 -> m6_22  [key=2, style=dotted];
m6_1430 -> m6_23  [key=2, style=dotted];
m6_1430 -> m6_1431  [key=0, style=solid];
m6_1430 -> m6_1432  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1430 -> m6_1433  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1430 -> m6_1434  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1430 -> m6_1435  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1430 -> m6_1436  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1430 -> m6_1437  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1430 -> m6_1439  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1430 -> m6_1440  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1431 -> m6_25  [key=2, style=dotted];
m6_1431 -> m6_1432  [key=0, style=solid];
m6_1431 -> m6_24  [key=2, style=dotted];
m6_1433 -> m6_25  [key=2, style=dotted];
m6_1433 -> m6_1434  [key=0, style=solid];
m6_1433 -> m6_24  [key=2, style=dotted];
m6_1439 -> m6_25  [key=2, style=dotted];
m6_1439 -> m6_1440  [key=0, style=solid];
m6_1439 -> m6_24  [key=2, style=dotted];
m6_1429 -> m6_1430  [key=0, style=solid];
m6_1432 -> m6_26  [key=2, style=dotted];
m6_1432 -> m6_1433  [key=0, style=solid];
m6_1434 -> m6_26  [key=2, style=dotted];
m6_1434 -> m6_1435  [key=0, style=solid];
m6_1435 -> m6_1436  [key=0, style=solid];
m6_1435 -> m6_115  [key=2, style=dotted];
m6_1435 -> m6_1438  [color=darkseagreen4, key=1, label=d, style=dashed];
m6_1436 -> m6_26  [key=2, style=dotted];
m6_1436 -> m6_1437  [key=0, style=solid];
m6_1437 -> m6_26  [key=2, style=dotted];
m6_1437 -> m6_1438  [key=0, style=solid];
m6_1440 -> m6_26  [key=2, style=dotted];
m6_1440 -> m6_1441  [key=0, style=solid];
m6_1438 -> m6_26  [key=2, style=dotted];
m6_1438 -> m6_1439  [key=0, style=solid];
m6_1441 -> m6_1428  [color=blue, key=0, style=bold];
m6_161 -> m6_162  [key=0, style=solid];
m6_163 -> m6_22  [key=2, style=dotted];
m6_163 -> m6_23  [key=2, style=dotted];
m6_163 -> m6_164  [key=0, style=solid];
m6_163 -> m6_165  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_163 -> m6_166  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_163 -> m6_167  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_163 -> m6_170  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_165 -> m6_25  [key=2, style=dotted];
m6_165 -> m6_166  [key=0, style=solid];
m6_165 -> m6_24  [key=2, style=dotted];
m6_671 -> m6_672  [key=0, style=solid];
m6_678 -> m6_22  [key=2, style=dotted];
m6_678 -> m6_679  [key=0, style=solid];
m6_678 -> m6_229  [key=2, style=dotted];
m6_678 -> m6_269  [key=2, style=dotted];
m6_678 -> m6_270  [key=2, style=dotted];
m6_678 -> m6_680  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_678 -> m6_681  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_678 -> m6_682  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_678 -> m6_683  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_678 -> m6_684  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_678 -> m6_685  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_678 -> m6_686  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_678 -> m6_687  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_678 -> m6_688  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_678 -> m6_689  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_678 -> m6_690  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_678 -> m6_691  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_678 -> m6_692  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_678 -> m6_693  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_678 -> m6_694  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_678 -> m6_695  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_678 -> m6_696  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_678 -> m6_697  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_678 -> m6_698  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_678 -> m6_699  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_678 -> m6_700  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_678 -> m6_701  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_678 -> m6_702  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_678 -> m6_703  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_678 -> m6_704  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_678 -> m6_705  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_678 -> m6_706  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_678 -> m6_707  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_678 -> m6_708  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_678 -> m6_709  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_678 -> m6_710  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_678 -> m6_711  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_678 -> m6_712  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_678 -> m6_713  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_675 -> m6_23  [key=2, style=dotted];
m6_675 -> m6_676  [key=0, style=solid];
m6_679 -> m6_25  [key=2, style=dotted];
m6_679 -> m6_680  [key=0, style=solid];
m6_679 -> m6_24  [key=2, style=dotted];
m6_681 -> m6_25  [key=2, style=dotted];
m6_681 -> m6_682  [key=0, style=solid];
m6_681 -> m6_24  [key=2, style=dotted];
m6_684 -> m6_25  [key=2, style=dotted];
m6_684 -> m6_685  [key=0, style=solid];
m6_684 -> m6_24  [key=2, style=dotted];
m6_686 -> m6_25  [key=2, style=dotted];
m6_686 -> m6_687  [key=0, style=solid];
m6_686 -> m6_24  [key=2, style=dotted];
m6_690 -> m6_25  [key=2, style=dotted];
m6_690 -> m6_691  [key=0, style=solid];
m6_690 -> m6_24  [key=2, style=dotted];
m6_693 -> m6_25  [key=2, style=dotted];
m6_693 -> m6_694  [key=0, style=solid];
m6_693 -> m6_24  [key=2, style=dotted];
m6_696 -> m6_25  [key=2, style=dotted];
m6_696 -> m6_697  [key=0, style=solid];
m6_696 -> m6_24  [key=2, style=dotted];
m6_699 -> m6_25  [key=2, style=dotted];
m6_699 -> m6_700  [key=0, style=solid];
m6_699 -> m6_24  [key=2, style=dotted];
m6_701 -> m6_25  [key=2, style=dotted];
m6_701 -> m6_702  [key=0, style=solid];
m6_701 -> m6_24  [key=2, style=dotted];
m6_703 -> m6_25  [key=2, style=dotted];
m6_703 -> m6_704  [key=0, style=solid];
m6_703 -> m6_24  [key=2, style=dotted];
m6_705 -> m6_25  [key=2, style=dotted];
m6_705 -> m6_706  [key=0, style=solid];
m6_705 -> m6_24  [key=2, style=dotted];
m6_708 -> m6_25  [key=2, style=dotted];
m6_708 -> m6_709  [key=0, style=solid];
m6_708 -> m6_24  [key=2, style=dotted];
m6_710 -> m6_25  [key=2, style=dotted];
m6_710 -> m6_711  [key=0, style=solid];
m6_710 -> m6_24  [key=2, style=dotted];
m6_712 -> m6_25  [key=2, style=dotted];
m6_712 -> m6_713  [key=0, style=solid];
m6_712 -> m6_24  [key=2, style=dotted];
m6_673 -> m6_678  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_673 -> m6_674  [key=0, style=solid];
m6_676 -> m6_678  [key=0, style=solid];
m6_676 -> m6_677  [key=0, style=solid];
m6_676 -> m6_715  [key=2, style=dotted];
m6_680 -> m6_26  [key=2, style=dotted];
m6_680 -> m6_681  [key=0, style=solid];
m6_682 -> m6_26  [key=2, style=dotted];
m6_682 -> m6_683  [key=0, style=solid];
m6_683 -> m6_26  [key=2, style=dotted];
m6_683 -> m6_684  [key=0, style=solid];
m6_685 -> m6_26  [key=2, style=dotted];
m6_685 -> m6_686  [key=0, style=solid];
m6_687 -> m6_26  [key=2, style=dotted];
m6_687 -> m6_688  [key=0, style=solid];
m6_688 -> m6_26  [key=2, style=dotted];
m6_688 -> m6_689  [key=0, style=solid];
m6_689 -> m6_26  [key=2, style=dotted];
m6_689 -> m6_690  [key=0, style=solid];
m6_691 -> m6_26  [key=2, style=dotted];
m6_691 -> m6_692  [key=0, style=solid];
m6_692 -> m6_26  [key=2, style=dotted];
m6_692 -> m6_693  [key=0, style=solid];
m6_694 -> m6_26  [key=2, style=dotted];
m6_694 -> m6_695  [key=0, style=solid];
m6_695 -> m6_26  [key=2, style=dotted];
m6_695 -> m6_696  [key=0, style=solid];
m6_697 -> m6_26  [key=2, style=dotted];
m6_697 -> m6_698  [key=0, style=solid];
m6_698 -> m6_26  [key=2, style=dotted];
m6_698 -> m6_699  [key=0, style=solid];
m6_700 -> m6_26  [key=2, style=dotted];
m6_700 -> m6_701  [key=0, style=solid];
m6_702 -> m6_26  [key=2, style=dotted];
m6_702 -> m6_703  [key=0, style=solid];
m6_704 -> m6_26  [key=2, style=dotted];
m6_704 -> m6_705  [key=0, style=solid];
m6_706 -> m6_26  [key=2, style=dotted];
m6_706 -> m6_707  [key=0, style=solid];
m6_707 -> m6_26  [key=2, style=dotted];
m6_707 -> m6_708  [key=0, style=solid];
m6_709 -> m6_26  [key=2, style=dotted];
m6_709 -> m6_710  [key=0, style=solid];
m6_711 -> m6_26  [key=2, style=dotted];
m6_711 -> m6_712  [key=0, style=solid];
m6_713 -> m6_26  [key=2, style=dotted];
m6_713 -> m6_714  [key=0, style=solid];
m6_672 -> m6_675  [color=darkseagreen4, key=1, label=newLinesText, style=dashed];
m6_672 -> m6_673  [key=0, style=solid];
m6_672 -> m6_683  [color=darkseagreen4, key=1, label=newLinesText, style=dashed];
m6_672 -> m6_698  [color=darkseagreen4, key=1, label=newLinesText, style=dashed];
m6_674 -> m6_675  [key=0, style=solid];
m6_674 -> m6_677  [color=darkseagreen4, key=1, label=count, style=dashed];
m6_677 -> m6_676  [key=0, style=solid];
m6_677 -> m6_677  [color=darkseagreen4, key=1, label=count, style=dashed];
m6_714 -> m6_671  [color=blue, key=0, style=bold];
m6_1553 -> m6_1554  [key=0, style=solid];
m6_1555 -> m6_22  [key=2, style=dotted];
m6_1555 -> m6_23  [key=2, style=dotted];
m6_1555 -> m6_1556  [key=0, style=solid];
m6_1555 -> m6_1559  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1554 -> m6_1555  [key=0, style=solid];
m6_1556 -> m6_1557  [key=0, style=solid];
m6_1556 -> m6_42  [key=2, style=dotted];
m6_1556 -> m6_1558  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1557 -> m6_1553  [color=blue, key=0, style=bold];
m6_1414 -> m6_1415  [key=0, style=solid];
m6_1415 -> m6_22  [key=2, style=dotted];
m6_1415 -> m6_23  [key=2, style=dotted];
m6_1415 -> m6_1416  [key=0, style=solid];
m6_1415 -> m6_1419  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1416 -> m6_1417  [key=0, style=solid];
m6_1416 -> m6_42  [key=2, style=dotted];
m6_1416 -> m6_1418  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1417 -> m6_1414  [color=blue, key=0, style=bold];
m6_2080 -> m6_269  [color=blue, key=0, style=bold];
m6_631 -> m6_632  [key=0, style=solid];
m6_632 -> m6_22  [key=2, style=dotted];
m6_632 -> m6_23  [key=2, style=dotted];
m6_632 -> m6_633  [key=0, style=solid];
m6_632 -> m6_636  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_633 -> m6_634  [key=0, style=solid];
m6_633 -> m6_42  [key=2, style=dotted];
m6_633 -> m6_635  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_634 -> m6_631  [color=blue, key=0, style=bold];
m6_206 -> m6_207  [key=0, style=solid];
m6_206 -> m6_163  [key=2, style=dotted];
m6_206 -> m6_165  [key=2, style=dotted];
m6_206 -> m6_166  [key=2, style=dotted];
m6_207 -> m6_26  [key=2, style=dotted];
m6_207 -> m6_208  [key=0, style=solid];
m6_207 -> m6_220  [key=2, style=dotted];
m6_207 -> m6_209  [key=2, style=dotted];
m6_208 -> m6_26  [key=2, style=dotted];
m6_208 -> m6_209  [key=0, style=solid];
m6_208 -> m6_220  [key=2, style=dotted];
m6_208 -> m6_199  [color=blue, key=0, style=bold];
m6_210 -> m6_26  [key=2, style=dotted];
m6_210 -> m6_211  [key=0, style=solid];
m6_210 -> m6_220  [key=2, style=dotted];
m6_210 -> m6_198  [key=2, style=dotted];
m6_211 -> m6_26  [key=2, style=dotted];
m6_211 -> m6_212  [key=0, style=solid];
m6_211 -> m6_220  [key=2, style=dotted];
m6_211 -> m6_245  [key=2, style=dotted];
m6_212 -> m6_26  [key=2, style=dotted];
m6_212 -> m6_213  [key=0, style=solid];
m6_212 -> m6_220  [key=2, style=dotted];
m6_212 -> m6_246  [key=2, style=dotted];
m6_213 -> m6_26  [key=2, style=dotted];
m6_213 -> m6_214  [key=0, style=solid];
m6_213 -> m6_220  [key=2, style=dotted];
m6_213 -> m6_224  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m6_214 -> m6_26  [key=2, style=dotted];
m6_214 -> m6_215  [key=0, style=solid];
m6_214 -> m6_220  [key=2, style=dotted];
m6_214 -> m6_216  [color=darkseagreen4, key=1, label=index, style=dashed];
m6_214 -> m6_226  [color=darkseagreen4, key=1, label=index, style=dashed];
m6_215 -> m6_26  [key=2, style=dotted];
m6_215 -> m6_216  [key=0, style=solid];
m6_215 -> m6_220  [key=2, style=dotted];
m6_215 -> m6_227  [key=0, style=solid];
m6_215 -> m6_13  [color=darkorchid, key=3, label="Local variable int index", style=bold];
m6_216 -> m6_26  [key=2, style=dotted];
m6_216 -> m6_217  [key=0, style=solid];
m6_216 -> m6_220  [key=2, style=dotted];
m6_216 -> m6_219  [color=darkseagreen4, key=1, label=property, style=dashed];
m6_216 -> m6_221  [color=darkseagreen4, key=1, label=property, style=dashed];
m6_216 -> m6_223  [color=darkseagreen4, key=1, label=property, style=dashed];
m6_217 -> m6_26  [key=2, style=dotted];
m6_217 -> m6_218  [key=0, style=solid];
m6_217 -> m6_220  [key=2, style=dotted];
m6_218 -> m6_26  [key=2, style=dotted];
m6_218 -> m6_219  [key=0, style=solid];
m6_218 -> m6_220  [key=2, style=dotted];
m6_219 -> m6_206  [color=blue, key=0, style=bold];
m6_219 -> m6_220  [key=0, style=solid];
m6_219 -> m6_215  [key=0, style=solid];
m6_219 -> m6_247  [key=2, style=dotted];
m6_219 -> m6_221  [color=darkseagreen4, key=1, label=memberValue, style=dashed];
m6_86 -> m6_87  [key=0, style=solid];
m6_86 -> m6_356  [key=0, style=solid];
m6_86 -> m6_357  [color=darkseagreen4, key=1, label="System.Array", style=dashed];
m6_86 -> m6_358  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_86 -> m6_359  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_86 -> m6_361  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_86 -> m6_363  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_86 -> m6_22  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerProperty", style=bold];
m6_86 -> m6_67  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonArrayContract contract", style=bold];
m6_87 -> m6_88  [key=0, style=solid];
m6_87 -> m6_192  [key=0, style=solid];
m6_87 -> m6_194  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_87 -> m6_195  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_87 -> m6_196  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_87 -> m6_22  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonStringContract contract", style=bold];
m6_90 -> m6_26  [key=2, style=dotted];
m6_90 -> m6_91  [key=0, style=solid];
m6_506 -> m6_507  [key=0, style=solid];
m6_506 -> m6_25  [key=2, style=dotted];
m6_508 -> m6_22  [key=2, style=dotted];
m6_508 -> m6_509  [key=0, style=solid];
m6_508 -> m6_229  [key=2, style=dotted];
m6_508 -> m6_269  [key=2, style=dotted];
m6_508 -> m6_270  [key=2, style=dotted];
m6_508 -> m6_510  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_508 -> m6_511  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_508 -> m6_512  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_508 -> m6_513  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_508 -> m6_514  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_508 -> m6_515  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_508 -> m6_516  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_508 -> m6_517  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_508 -> m6_518  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_508 -> m6_519  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_508 -> m6_520  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_508 -> m6_521  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_508 -> m6_522  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_508 -> m6_523  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_508 -> m6_524  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_508 -> m6_525  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_508 -> m6_526  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_508 -> m6_527  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_508 -> m6_528  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_508 -> m6_529  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_508 -> m6_530  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_508 -> m6_531  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_508 -> m6_532  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_508 -> m6_533  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_508 -> m6_534  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_508 -> m6_535  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_508 -> m6_81  [key=2, style=dotted];
m6_509 -> m6_25  [key=2, style=dotted];
m6_509 -> m6_510  [key=0, style=solid];
m6_509 -> m6_24  [key=2, style=dotted];
m6_509 -> m6_511  [key=0, style=solid];
m6_511 -> m6_25  [key=2, style=dotted];
m6_511 -> m6_512  [key=0, style=solid];
m6_511 -> m6_24  [key=2, style=dotted];
m6_523 -> m6_25  [key=2, style=dotted];
m6_523 -> m6_524  [key=0, style=solid];
m6_523 -> m6_24  [key=2, style=dotted];
m6_523 -> m6_528  [key=0, style=solid];
m6_525 -> m6_25  [key=2, style=dotted];
m6_525 -> m6_526  [key=0, style=solid];
m6_525 -> m6_24  [key=2, style=dotted];
m6_525 -> m6_527  [key=0, style=solid];
m6_527 -> m6_25  [key=2, style=dotted];
m6_527 -> m6_528  [key=0, style=solid];
m6_527 -> m6_24  [key=2, style=dotted];
m6_529 -> m6_25  [key=2, style=dotted];
m6_529 -> m6_530  [key=0, style=solid];
m6_529 -> m6_24  [key=2, style=dotted];
m6_529 -> m6_5  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_6  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_7  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_8  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_9  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_10  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_12  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_13  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_14  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_27  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_28  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_29  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_34  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_40  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_43  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_59  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_61  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_65  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_69  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_70  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_72  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_74  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_77  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_79  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_108  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_111  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_112  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_115  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_122  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_124  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_142  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_148  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_152  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_153  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_156  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_157  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_167  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_168  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_169  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_178  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_192  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_196  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_200  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_201  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_202  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_205  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_206  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_207  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_210  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_211  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_212  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_219  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_221  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_223  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_224  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_230  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_231  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_233  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_235  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_237  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_238  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_240  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_242  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_243  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_254  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_256  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_258  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_259  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_260  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_262  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_264  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_282  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_283  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_284  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_285  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_286  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_296  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_297  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_298  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_302  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_303  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_304  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_316  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_317  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_318  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_320  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_321  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_322  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_323  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_324  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_325  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_326  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_331  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_332  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_333  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_338  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_339  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_340  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_341  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_342  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_344  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_345  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_350  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_351  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_356  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_357  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_358  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_359  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_362  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_363  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_380  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_381  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_382  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_383  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_384  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_386  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_387  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_389  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_396  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_397  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_398  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_403  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_405  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_408  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_412  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_414  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_419  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_420  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_422  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_429  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_430  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_437  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_438  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_439  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_441  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_443  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_449  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_452  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_453  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_455  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_456  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_458  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_460  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_461  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_464  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_465  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_506  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_516  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_517  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_525  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_529 -> m6_526  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m6_532 -> m6_25  [key=2, style=dotted];
m6_532 -> m6_533  [key=0, style=solid];
m6_532 -> m6_24  [key=2, style=dotted];
m6_507 -> m6_508  [key=0, style=solid];
m6_507 -> m6_509  [key=0, style=solid];
m6_510 -> m6_26  [key=2, style=dotted];
m6_510 -> m6_511  [key=0, style=solid];
m6_510 -> m6_509  [key=0, style=solid];
m6_510 -> m6_512  [key=2, style=dotted];
m6_520 -> m6_26  [key=2, style=dotted];
m6_520 -> m6_521  [key=0, style=solid];
m6_522 -> m6_26  [key=2, style=dotted];
m6_522 -> m6_523  [key=0, style=solid];
m6_522 -> m6_524  [key=0, style=solid];
m6_524 -> m6_26  [key=2, style=dotted];
m6_524 -> m6_525  [key=0, style=solid];
m6_524 -> m6_520  [key=2, style=dotted];
m6_524 -> m6_526  [color=darkseagreen4, key=1, label=isSpecified, style=dashed];
m6_524 -> m6_527  [color=darkseagreen4, key=1, label=isSpecified, style=dashed];
m6_526 -> m6_26  [key=2, style=dotted];
m6_526 -> m6_527  [key=0, style=solid];
m6_526 -> m6_521  [key=2, style=dotted];
m6_526 -> m6_165  [key=2, style=dotted];
m6_526 -> m6_166  [key=2, style=dotted];
m6_528 -> m6_26  [key=2, style=dotted];
m6_528 -> m6_529  [key=0, style=solid];
m6_528 -> m6_279  [color=blue, key=0, style=bold];
m6_530 -> m6_26  [key=2, style=dotted];
m6_530 -> m6_531  [key=0, style=solid];
m6_531 -> m6_26  [key=2, style=dotted];
m6_531 -> m6_532  [key=0, style=solid];
m6_533 -> m6_26  [key=2, style=dotted];
m6_533 -> m6_534  [key=0, style=solid];
m6_534 -> m6_26  [key=2, style=dotted];
m6_534 -> m6_535  [key=0, style=solid];
m6_535 -> m6_536  [key=0, style=solid];
m6_535 -> m6_24  [key=2, style=dotted];
m6_535 -> m6_28  [key=2, style=dotted];
m6_536 -> m6_506  [color=blue, key=0, style=bold];
m6_119 -> m6_120  [key=0, style=solid];
m6_2 -> m6_3  [key=0, style=solid];
m6_2 -> m6_4  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_2 -> m6_5  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_2 -> m6_7  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_2 -> m6_8  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_2 -> m6_9  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_2 -> m6_10  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_2 -> m6_12  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_2 -> m6_13  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_2 -> m6_22  [key=2, style=dotted];
m6_2 -> m6_23  [key=2, style=dotted];
m6_2 -> m6_6  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_2 -> m6_11  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_2 -> m6_14  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_2 -> m6_15  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_2 -> m6_16  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_2 -> m6_17  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_3 -> m6_4  [key=0, style=solid];
m6_3 -> m6_5  [key=0, style=solid];
m6_3 -> m6_25  [key=2, style=dotted];
m6_3 -> m6_24  [key=2, style=dotted];
m6_4 -> m6_16  [key=0, style=solid];
m6_4 -> m6_17  [key=2, style=dotted];
m6_4 -> m6_18  [key=2, style=dotted];
m6_4 -> m6_26  [key=2, style=dotted];
m6_4 -> m6_5  [key=0, style=solid];
m6_5 -> m6_6  [key=0, style=solid];
m6_5 -> m6_25  [key=2, style=dotted];
m6_5 -> m6_24  [key=2, style=dotted];
m6_7 -> m6_8  [key=0, style=solid];
m6_7 -> m6_19  [key=2, style=dotted];
m6_7 -> m6_10  [color=darkseagreen4, key=1, label=contract, style=dashed];
m6_7 -> m6_12  [color=darkseagreen4, key=1, label=contract, style=dashed];
m6_7 -> m6_25  [key=2, style=dotted];
m6_7 -> m6_24  [key=2, style=dotted];
m6_8 -> m6_9  [key=0, style=solid];
m6_8 -> m6_10  [key=0, style=solid];
m6_8 -> m6_20  [key=2, style=dotted];
m6_8 -> m6_26  [key=2, style=dotted];
m6_9 -> m6_11  [key=0, style=solid];
m6_9 -> m6_16  [key=0, style=solid];
m6_9 -> m6_21  [key=2, style=dotted];
m6_9 -> m6_25  [key=2, style=dotted];
m6_9 -> m6_10  [key=0, style=solid];
m6_9 -> m6_24  [key=2, style=dotted];
m6_10 -> m6_11  [key=0, style=solid];
m6_10 -> m6_16  [key=0, style=solid];
m6_10 -> m6_22  [key=2, style=dotted];
m6_10 -> m6_26  [key=2, style=dotted];
m6_12 -> m6_13  [key=0, style=solid];
m6_12 -> m6_14  [key=0, style=solid];
m6_12 -> m6_23  [key=2, style=dotted];
m6_12 -> m6_26  [key=2, style=dotted];
m6_13 -> m6_16  [key=0, style=solid];
m6_13 -> m6_24  [key=2, style=dotted];
m6_13 -> m6_26  [key=2, style=dotted];
m6_13 -> m6_14  [key=0, style=solid];
m6_6 -> m6_7  [key=0, style=solid];
m6_6 -> m6_26  [key=2, style=dotted];
m6_11 -> m6_12  [key=0, style=solid];
m6_11 -> m6_25  [key=2, style=dotted];
m6_11 -> m6_24  [key=2, style=dotted];
m6_14 -> m6_15  [key=0, style=solid];
m6_14 -> m6_25  [key=2, style=dotted];
m6_14 -> m6_26  [key=2, style=dotted];
m6_14 -> m6_27  [key=2, style=dotted];
m6_15 -> m6_16  [key=0, style=solid];
m6_15 -> m6_25  [key=2, style=dotted];
m6_15 -> m6_24  [key=2, style=dotted];
m6_16 -> m6_2  [color=blue, key=0, style=bold];
m6_16 -> m6_26  [key=2, style=dotted];
m6_16 -> m6_17  [key=0, style=solid];
m6_1220 -> m6_1221  [key=0, style=solid];
m6_1222 -> m6_22  [key=2, style=dotted];
m6_1222 -> m6_23  [key=2, style=dotted];
m6_1222 -> m6_1223  [key=0, style=solid];
m6_1222 -> m6_1224  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1222 -> m6_1225  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1222 -> m6_1226  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1222 -> m6_1227  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1222 -> m6_1228  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1222 -> m6_1229  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1222 -> m6_1230  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1222 -> m6_1231  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1222 -> m6_1232  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1222 -> m6_1233  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1223 -> m6_25  [key=2, style=dotted];
m6_1223 -> m6_1224  [key=0, style=solid];
m6_1223 -> m6_24  [key=2, style=dotted];
m6_1225 -> m6_25  [key=2, style=dotted];
m6_1225 -> m6_1226  [key=0, style=solid];
m6_1225 -> m6_24  [key=2, style=dotted];
m6_1228 -> m6_25  [key=2, style=dotted];
m6_1228 -> m6_1229  [key=0, style=solid];
m6_1228 -> m6_24  [key=2, style=dotted];
m6_1231 -> m6_25  [key=2, style=dotted];
m6_1231 -> m6_1232  [key=0, style=solid];
m6_1231 -> m6_24  [key=2, style=dotted];
m6_1221 -> m6_1222  [key=0, style=solid];
m6_1224 -> m6_26  [key=2, style=dotted];
m6_1224 -> m6_1225  [key=0, style=solid];
m6_1226 -> m6_26  [key=2, style=dotted];
m6_1226 -> m6_1227  [key=0, style=solid];
m6_1227 -> m6_26  [key=2, style=dotted];
m6_1227 -> m6_1228  [key=0, style=solid];
m6_1229 -> m6_26  [key=2, style=dotted];
m6_1229 -> m6_1230  [key=0, style=solid];
m6_1230 -> m6_26  [key=2, style=dotted];
m6_1230 -> m6_1231  [key=0, style=solid];
m6_1232 -> m6_26  [key=2, style=dotted];
m6_1232 -> m6_1233  [key=0, style=solid];
m6_1233 -> m6_1234  [key=0, style=solid];
m6_1233 -> m6_24  [key=2, style=dotted];
m6_1233 -> m6_28  [key=2, style=dotted];
m6_1234 -> m6_1220  [color=blue, key=0, style=bold];
m6_2029 -> m6_2066  [key=0, style=solid];
m6_2066 -> m6_2067  [key=0, style=solid];
m6_2067 -> m6_2029  [color=blue, key=0, style=bold];
m6_227 -> m6_228  [key=0, style=solid];
m6_227 -> m6_249  [key=2, style=dotted];
m6_227 -> m6_229  [color=darkseagreen4, key=1, label=extensionData, style=dashed];
m6_579 -> m6_580  [key=0, style=solid];
m6_581 -> m6_22  [key=2, style=dotted];
m6_581 -> m6_582  [key=0, style=solid];
m6_581 -> m6_593  [key=2, style=dotted];
m6_581 -> m6_594  [key=2, style=dotted];
m6_581 -> m6_583  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_587 -> m6_22  [key=2, style=dotted];
m6_587 -> m6_588  [key=0, style=solid];
m6_587 -> m6_593  [key=2, style=dotted];
m6_587 -> m6_594  [key=2, style=dotted];
m6_587 -> m6_589  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_580 -> m6_581  [key=0, style=solid];
m6_580 -> m6_592  [key=2, style=dotted];
m6_580 -> m6_586  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_582 -> m6_583  [key=0, style=solid];
m6_582 -> m6_24  [key=2, style=dotted];
m6_583 -> m6_26  [key=2, style=dotted];
m6_583 -> m6_584  [key=0, style=solid];
m6_586 -> m6_587  [key=0, style=solid];
m6_588 -> m6_589  [key=0, style=solid];
m6_588 -> m6_24  [key=2, style=dotted];
m6_589 -> m6_26  [key=2, style=dotted];
m6_589 -> m6_590  [key=0, style=solid];
m6_584 -> m6_586  [color=darkseagreen4, key=1, label=j, style=dashed];
m6_584 -> m6_585  [key=0, style=solid];
m6_584 -> m6_590  [color=darkseagreen4, key=1, label=j, style=dashed];
m6_585 -> m6_586  [key=0, style=solid];
m6_585 -> m6_591  [key=0, style=solid];
m6_590 -> m6_585  [key=0, style=solid];
m6_590 -> m6_590  [color=darkseagreen4, key=1, label=j, style=dashed];
m6_591 -> m6_579  [color=blue, key=0, style=bold];
m6_24 -> m6_506  [key=0, style=solid];
m6_24 -> m6_507  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_24 -> m6_508  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_24 -> m6_509  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_24 -> m6_510  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_24 -> m6_2  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonWriter writer", style=bold];
m6_24 -> m6_84  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonWriter writer", style=bold];
m6_24 -> m6_85  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonWriter writer", style=bold];
m6_24 -> m6_366  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonWriter writer", style=bold];
m6_24 -> m6_89  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonWriter writer", style=bold];
m6_24 -> m6_13  [color=darkorchid, key=3, label="Parameter variable int initialDepth", style=bold];
m6_24 -> m6_213  [color=darkorchid, key=3, label="Parameter variable int initialDepth", style=bold];
m6_24 -> m6_335  [color=darkorchid, key=3, label="Parameter variable int initialDepth", style=bold];
m6_24 -> m6_444  [color=darkorchid, key=3, label="Parameter variable int initialDepth", style=bold];
m6_26 -> m6_27  [key=0, style=solid];
m6_243 -> m6_244  [key=0, style=solid];
m6_243 -> m6_199  [key=2, style=dotted];
m6_608 -> m6_609  [key=0, style=solid];
m6_610 -> m6_22  [key=2, style=dotted];
m6_610 -> m6_23  [key=2, style=dotted];
m6_610 -> m6_611  [key=0, style=solid];
m6_610 -> m6_613  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_610 -> m6_615  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_610 -> m6_616  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_610 -> m6_617  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_613 -> m6_25  [key=2, style=dotted];
m6_613 -> m6_614  [key=0, style=solid];
m6_613 -> m6_24  [key=2, style=dotted];
m6_615 -> m6_25  [key=2, style=dotted];
m6_615 -> m6_616  [key=0, style=solid];
m6_615 -> m6_24  [key=2, style=dotted];
m6_609 -> m6_610  [key=0, style=solid];
m6_611 -> m6_612  [key=0, style=solid];
m6_611 -> m6_614  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_616 -> m6_26  [key=2, style=dotted];
m6_616 -> m6_617  [key=0, style=solid];
m6_617 -> m6_26  [key=2, style=dotted];
m6_617 -> m6_618  [key=0, style=solid];
m6_612 -> m6_613  [key=0, style=solid];
m6_612 -> m6_615  [key=0, style=solid];
m6_614 -> m6_612  [key=0, style=solid];
m6_614 -> m6_614  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_618 -> m6_608  [color=blue, key=0, style=bold];
m6_220 -> m6_221  [key=0, style=solid];
m6_220 -> m6_248  [key=2, style=dotted];
m6_221 -> m6_222  [key=0, style=solid];
m6_221 -> m6_226  [key=0, style=solid];
m6_221 -> m6_22  [key=2, style=dotted];
m6_221 -> m6_227  [key=2, style=dotted];
m6_221 -> m6_228  [key=2, style=dotted];
m6_223 -> m6_224  [key=0, style=solid];
m6_223 -> m6_225  [key=0, style=solid];
m6_223 -> m6_23  [key=2, style=dotted];
m6_223 -> m6_24  [key=2, style=dotted];
m6_224 -> m6_226  [key=0, style=solid];
m6_224 -> m6_24  [key=2, style=dotted];
m6_224 -> m6_225  [key=0, style=solid];
m6_226 -> m6_215  [key=0, style=solid];
m6_226 -> m6_226  [color=darkseagreen4, key=1, label=index, style=dashed];
m6_226 -> m6_220  [color=blue, key=0, style=bold];
m6_222 -> m6_223  [key=0, style=solid];
m6_222 -> m6_22  [key=2, style=dotted];
m6_222 -> m6_229  [key=2, style=dotted];
m6_222 -> m6_224  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_225 -> m6_244  [key=0, style=solid];
m6_225 -> m6_226  [key=0, style=solid];
m6_228 -> m6_229  [key=0, style=solid];
m6_228 -> m6_241  [key=0, style=solid];
m6_1001 -> m6_1002  [key=0, style=solid];
m6_1003 -> m6_22  [key=2, style=dotted];
m6_1003 -> m6_23  [key=2, style=dotted];
m6_1003 -> m6_1004  [key=0, style=solid];
m6_1003 -> m6_1005  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1003 -> m6_1006  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1003 -> m6_1007  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1003 -> m6_1008  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1003 -> m6_1009  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1003 -> m6_1010  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1003 -> m6_1011  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1003 -> m6_1012  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1003 -> m6_1013  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1003 -> m6_1014  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1003 -> m6_1015  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1003 -> m6_1016  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1003 -> m6_1017  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1003 -> m6_1018  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1003 -> m6_1019  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1003 -> m6_1020  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1003 -> m6_1021  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1003 -> m6_1022  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1003 -> m6_1023  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1003 -> m6_1024  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1003 -> m6_1025  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1003 -> m6_1026  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1003 -> m6_1027  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1003 -> m6_1028  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1003 -> m6_1029  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1003 -> m6_1030  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1003 -> m6_1031  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1003 -> m6_1032  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1003 -> m6_1033  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1003 -> m6_1034  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1003 -> m6_1035  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1003 -> m6_1036  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1003 -> m6_1037  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1003 -> m6_1038  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1003 -> m6_1039  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1003 -> m6_1040  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1003 -> m6_1041  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1003 -> m6_1042  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1003 -> m6_1043  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1003 -> m6_1044  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1003 -> m6_1045  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1003 -> m6_1046  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1003 -> m6_1047  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1003 -> m6_1048  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1003 -> m6_1049  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1003 -> m6_1050  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1003 -> m6_1051  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1003 -> m6_1052  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1003 -> m6_1053  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1003 -> m6_1054  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1003 -> m6_1055  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1003 -> m6_1056  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1003 -> m6_1057  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1003 -> m6_1058  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1003 -> m6_1059  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1003 -> m6_1060  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1003 -> m6_1061  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_1004 -> m6_250  [key=2, style=dotted];
m6_1004 -> m6_1005  [key=0, style=solid];
m6_1006 -> m6_250  [key=2, style=dotted];
m6_1006 -> m6_1007  [key=0, style=solid];
m6_1009 -> m6_250  [key=2, style=dotted];
m6_1009 -> m6_1010  [key=0, style=solid];
m6_1012 -> m6_250  [key=2, style=dotted];
m6_1012 -> m6_1013  [key=0, style=solid];
m6_1015 -> m6_250  [key=2, style=dotted];
m6_1015 -> m6_1016  [key=0, style=solid];
m6_1018 -> m6_250  [key=2, style=dotted];
m6_1018 -> m6_1019  [key=0, style=solid];
m6_1021 -> m6_250  [key=2, style=dotted];
m6_1021 -> m6_1022  [key=0, style=solid];
m6_1024 -> m6_250  [key=2, style=dotted];
m6_1024 -> m6_1025  [key=0, style=solid];
m6_1027 -> m6_250  [key=2, style=dotted];
m6_1027 -> m6_1028  [key=0, style=solid];
m6_1030 -> m6_250  [key=2, style=dotted];
m6_1030 -> m6_1031  [key=0, style=solid];
m6_1033 -> m6_250  [key=2, style=dotted];
m6_1033 -> m6_1034  [key=0, style=solid];
m6_1036 -> m6_250  [key=2, style=dotted];
m6_1036 -> m6_1037  [key=0, style=solid];
m6_1039 -> m6_250  [key=2, style=dotted];
m6_1039 -> m6_1040  [key=0, style=solid];
m6_1042 -> m6_250  [key=2, style=dotted];
m6_1042 -> m6_1043  [key=0, style=solid];
m6_1045 -> m6_250  [key=2, style=dotted];
m6_1045 -> m6_1046  [key=0, style=solid];
m6_1048 -> m6_250  [key=2, style=dotted];
m6_1048 -> m6_1049  [key=0, style=solid];
m6_1051 -> m6_250  [key=2, style=dotted];
m6_1051 -> m6_1052  [key=0, style=solid];
m6_1054 -> m6_250  [key=2, style=dotted];
m6_1054 -> m6_1055  [key=0, style=solid];
m6_1057 -> m6_250  [key=2, style=dotted];
m6_1057 -> m6_1058  [key=0, style=solid];
m6_1060 -> m6_250  [key=2, style=dotted];
m6_1060 -> m6_1061  [key=0, style=solid];
m6_1002 -> m6_1003  [key=0, style=solid];
m6_1005 -> m6_26  [key=2, style=dotted];
m6_1005 -> m6_1006  [key=0, style=solid];
m6_1007 -> m6_26  [key=2, style=dotted];
m6_1007 -> m6_1008  [key=0, style=solid];
m6_1008 -> m6_26  [key=2, style=dotted];
m6_1008 -> m6_1009  [key=0, style=solid];
m6_1010 -> m6_26  [key=2, style=dotted];
m6_1010 -> m6_1011  [key=0, style=solid];
m6_1011 -> m6_26  [key=2, style=dotted];
m6_1011 -> m6_1012  [key=0, style=solid];
m6_1013 -> m6_26  [key=2, style=dotted];
m6_1013 -> m6_1014  [key=0, style=solid];
m6_1014 -> m6_26  [key=2, style=dotted];
m6_1014 -> m6_1015  [key=0, style=solid];
m6_1016 -> m6_26  [key=2, style=dotted];
m6_1016 -> m6_1017  [key=0, style=solid];
m6_1017 -> m6_26  [key=2, style=dotted];
m6_1017 -> m6_1018  [key=0, style=solid];
m6_1019 -> m6_26  [key=2, style=dotted];
m6_1019 -> m6_1020  [key=0, style=solid];
m6_1020 -> m6_26  [key=2, style=dotted];
m6_1020 -> m6_1021  [key=0, style=solid];
m6_1022 -> m6_26  [key=2, style=dotted];
m6_1022 -> m6_1023  [key=0, style=solid];
m6_1023 -> m6_26  [key=2, style=dotted];
m6_1023 -> m6_1024  [key=0, style=solid];
m6_1025 -> m6_26  [key=2, style=dotted];
m6_1025 -> m6_1026  [key=0, style=solid];
m6_1026 -> m6_26  [key=2, style=dotted];
m6_1026 -> m6_1027  [key=0, style=solid];
m6_1028 -> m6_26  [key=2, style=dotted];
m6_1028 -> m6_1029  [key=0, style=solid];
m6_1029 -> m6_26  [key=2, style=dotted];
m6_1029 -> m6_1030  [key=0, style=solid];
m6_1031 -> m6_26  [key=2, style=dotted];
m6_1031 -> m6_1032  [key=0, style=solid];
m6_1032 -> m6_26  [key=2, style=dotted];
m6_1032 -> m6_1033  [key=0, style=solid];
m6_1034 -> m6_26  [key=2, style=dotted];
m6_1034 -> m6_1035  [key=0, style=solid];
m6_1035 -> m6_26  [key=2, style=dotted];
m6_1035 -> m6_1036  [key=0, style=solid];
m6_1037 -> m6_26  [key=2, style=dotted];
m6_1037 -> m6_1038  [key=0, style=solid];
m6_1038 -> m6_26  [key=2, style=dotted];
m6_1038 -> m6_1039  [key=0, style=solid];
m6_1040 -> m6_26  [key=2, style=dotted];
m6_1040 -> m6_1041  [key=0, style=solid];
m6_1041 -> m6_26  [key=2, style=dotted];
m6_1041 -> m6_1042  [key=0, style=solid];
m6_1043 -> m6_26  [key=2, style=dotted];
m6_1043 -> m6_1044  [key=0, style=solid];
m6_1044 -> m6_26  [key=2, style=dotted];
m6_1044 -> m6_1045  [key=0, style=solid];
m6_1046 -> m6_26  [key=2, style=dotted];
m6_1046 -> m6_1047  [key=0, style=solid];
m6_1047 -> m6_26  [key=2, style=dotted];
m6_1047 -> m6_1048  [key=0, style=solid];
m6_1049 -> m6_26  [key=2, style=dotted];
m6_1049 -> m6_1050  [key=0, style=solid];
m6_1050 -> m6_26  [key=2, style=dotted];
m6_1050 -> m6_1051  [key=0, style=solid];
m6_1052 -> m6_26  [key=2, style=dotted];
m6_1052 -> m6_1053  [key=0, style=solid];
m6_1053 -> m6_26  [key=2, style=dotted];
m6_1053 -> m6_1054  [key=0, style=solid];
m6_1055 -> m6_26  [key=2, style=dotted];
m6_1055 -> m6_1056  [key=0, style=solid];
m6_1056 -> m6_26  [key=2, style=dotted];
m6_1056 -> m6_1057  [key=0, style=solid];
m6_1058 -> m6_26  [key=2, style=dotted];
m6_1058 -> m6_1059  [key=0, style=solid];
m6_1059 -> m6_26  [key=2, style=dotted];
m6_1059 -> m6_1060  [key=0, style=solid];
m6_1061 -> m6_26  [key=2, style=dotted];
m6_1061 -> m6_1062  [key=0, style=solid];
m6_1062 -> m6_1001  [color=blue, key=0, style=bold];
m6_1199 -> m6_1200  [key=0, style=solid];
m6_1200 -> m6_22  [key=2, style=dotted];
m6_1200 -> m6_23  [key=2, style=dotted];
m6_1200 -> m6_1201  [key=0, style=solid];
m6_1201 -> m6_1202  [key=0, style=solid];
m6_1201 -> m6_85  [key=2, style=dotted];
m6_1201 -> m6_1203  [color=darkseagreen4, key=1, label=data, style=dashed];
m6_1201 -> m6_1204  [color=darkseagreen4, key=1, label=data, style=dashed];
m6_1202 -> m6_26  [key=2, style=dotted];
m6_1202 -> m6_1203  [key=0, style=solid];
m6_1203 -> m6_26  [key=2, style=dotted];
m6_1203 -> m6_1204  [key=0, style=solid];
m6_1204 -> m6_26  [key=2, style=dotted];
m6_1204 -> m6_1205  [key=0, style=solid];
m6_1205 -> m6_1199  [color=blue, key=0, style=bold];
m6_1773 -> m6_1774  [key=0, style=solid];
m6_1775 -> m6_22  [key=2, style=dotted];
m6_1775 -> m6_1776  [key=0, style=solid];
m6_1775 -> m6_229  [key=2, style=dotted];
m6_1775 -> m6_269  [key=2, style=dotted];
m6_1775 -> m6_270  [key=2, style=dotted];
m6_1775 -> m6_1779  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1774 -> m6_1775  [key=0, style=solid];
m6_1776 -> m6_1777  [key=0, style=solid];
m6_1776 -> m6_42  [key=2, style=dotted];
m6_1776 -> m6_1778  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1777 -> m6_1773  [color=blue, key=0, style=bold];
m6_1160 -> m6_1161  [key=0, style=solid];
m6_1161 -> m6_22  [key=2, style=dotted];
m6_1161 -> m6_23  [key=2, style=dotted];
m6_1161 -> m6_1162  [key=0, style=solid];
m6_1161 -> m6_1163  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1162 -> m6_662  [key=2, style=dotted];
m6_1162 -> m6_1163  [key=0, style=solid];
m6_1162 -> m6_85  [key=2, style=dotted];
m6_1163 -> m6_26  [key=2, style=dotted];
m6_1163 -> m6_1164  [key=0, style=solid];
m6_1164 -> m6_1160  [color=blue, key=0, style=bold];
m6_20 -> m6_104  [key=0, style=solid];
m6_20 -> m6_106  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m6_20 -> m6_108  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m6_20 -> m6_110  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m6_20 -> m6_115  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_20 -> m6_2  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m6_20 -> m6_247  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerProperty", style=bold];
m6_20 -> m6_83  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerProperty", style=bold];
m6_20 -> m6_337  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m6_20 -> m6_379  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m6_20 -> m6_451  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m6_20 -> m6_8  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerProperty", style=bold];
m6_20 -> m6_7  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract valueContract", style=bold];
m6_20 -> m6_231  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract valueContract", style=bold];
m6_20 -> m6_338  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract valueContract", style=bold];
m6_20 -> m6_380  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract valueContract", style=bold];
m6_20 -> m6_452  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract valueContract", style=bold];
m6_20 -> m6_84  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerProperty", style=bold];
m6_20 -> m6_85  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerProperty", style=bold];
m6_20 -> m6_366  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerProperty", style=bold];
m6_20 -> m6_89  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerProperty", style=bold];
m6_20 -> m6_44  [color=darkorchid, key=3, label="method methodReturn bool ShouldWriteReference", style=bold];
m6_20 -> m6_26  [key=2, style=dotted];
m6_20 -> m6_21  [key=0, style=solid];
m6_20 -> m6_27  [key=2, style=dotted];
m6_115 -> m6_116  [key=0, style=solid];
m6_115 -> m6_119  [key=2, style=dotted];
m6_115 -> m6_120  [key=2, style=dotted];
m6_1172 -> m6_1173  [key=0, style=solid];
m6_1173 -> m6_22  [key=2, style=dotted];
m6_1173 -> m6_23  [key=2, style=dotted];
m6_1173 -> m6_1174  [key=0, style=solid];
m6_1173 -> m6_1175  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1174 -> m6_662  [key=2, style=dotted];
m6_1174 -> m6_1175  [key=0, style=solid];
m6_1174 -> m6_1177  [key=2, style=dotted];
m6_1175 -> m6_26  [key=2, style=dotted];
m6_1175 -> m6_1176  [key=0, style=solid];
m6_1176 -> m6_1172  [color=blue, key=0, style=bold];
m6_547 -> m6_548  [key=0, style=solid];
m6_549 -> m6_22  [key=2, style=dotted];
m6_549 -> m6_23  [key=2, style=dotted];
m6_549 -> m6_550  [key=0, style=solid];
m6_549 -> m6_558  [key=2, style=dotted];
m6_549 -> m6_551  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_549 -> m6_555  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_548 -> m6_549  [key=0, style=solid];
m6_548 -> m6_554  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_550 -> m6_551  [key=0, style=solid];
m6_550 -> m6_24  [key=2, style=dotted];
m6_551 -> m6_26  [key=2, style=dotted];
m6_551 -> m6_552  [key=0, style=solid];
m6_555 -> m6_556  [key=0, style=solid];
m6_555 -> m6_42  [key=2, style=dotted];
m6_555 -> m6_559  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_554 -> m6_560  [color=darkseagreen4, key=1, label=total, style=dashed];
m6_554 -> m6_555  [key=0, style=solid];
m6_552 -> m6_554  [color=darkseagreen4, key=1, label=j, style=dashed];
m6_552 -> m6_553  [key=0, style=solid];
m6_552 -> m6_556  [color=darkseagreen4, key=1, label=j, style=dashed];
m6_556 -> m6_556  [color=darkseagreen4, key=1, label=j, style=dashed];
m6_556 -> m6_553  [key=0, style=solid];
m6_553 -> m6_554  [key=0, style=solid];
m6_553 -> m6_557  [key=0, style=solid];
m6_557 -> m6_547  [color=blue, key=0, style=bold];
m6_1952 -> m6_1953  [key=0, style=solid];
m6_1954 -> m6_22  [key=2, style=dotted];
m6_1954 -> m6_23  [key=2, style=dotted];
m6_1954 -> m6_1955  [key=0, style=solid];
m6_1954 -> m6_1956  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1954 -> m6_1957  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1954 -> m6_1958  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1954 -> m6_1959  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1954 -> m6_1960  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1954 -> m6_1961  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1954 -> m6_1962  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1954 -> m6_1963  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1964 -> m6_22  [key=2, style=dotted];
m6_1964 -> m6_23  [key=2, style=dotted];
m6_1964 -> m6_1965  [key=0, style=solid];
m6_1964 -> m6_1966  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1964 -> m6_1967  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1964 -> m6_1968  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1964 -> m6_1969  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1964 -> m6_1970  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1964 -> m6_1971  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1964 -> m6_1972  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1964 -> m6_1973  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1974 -> m6_22  [key=2, style=dotted];
m6_1974 -> m6_23  [key=2, style=dotted];
m6_1974 -> m6_1975  [key=0, style=solid];
m6_1974 -> m6_1976  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1974 -> m6_1977  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1974 -> m6_1978  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1974 -> m6_1979  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1974 -> m6_1980  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1974 -> m6_1981  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1974 -> m6_1982  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1974 -> m6_1983  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1984 -> m6_22  [key=2, style=dotted];
m6_1984 -> m6_23  [key=2, style=dotted];
m6_1984 -> m6_1985  [key=0, style=solid];
m6_1984 -> m6_1986  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1984 -> m6_1987  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1984 -> m6_1988  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1984 -> m6_1989  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1984 -> m6_1990  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1984 -> m6_1991  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1984 -> m6_1992  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1984 -> m6_1993  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1994 -> m6_22  [key=2, style=dotted];
m6_1994 -> m6_23  [key=2, style=dotted];
m6_1994 -> m6_1995  [key=0, style=solid];
m6_1994 -> m6_1996  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1994 -> m6_1997  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1994 -> m6_1998  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1994 -> m6_1999  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1994 -> m6_2000  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1994 -> m6_2001  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1994 -> m6_2002  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1994 -> m6_2003  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1956 -> m6_25  [key=2, style=dotted];
m6_1956 -> m6_1957  [key=0, style=solid];
m6_1956 -> m6_24  [key=2, style=dotted];
m6_1957 -> m6_25  [key=2, style=dotted];
m6_1957 -> m6_1958  [key=0, style=solid];
m6_1957 -> m6_24  [key=2, style=dotted];
m6_1960 -> m6_25  [key=2, style=dotted];
m6_1960 -> m6_1961  [key=0, style=solid];
m6_1960 -> m6_24  [key=2, style=dotted];
m6_1963 -> m6_25  [key=2, style=dotted];
m6_1963 -> m6_1964  [key=0, style=solid];
m6_1963 -> m6_24  [key=2, style=dotted];
m6_1966 -> m6_25  [key=2, style=dotted];
m6_1966 -> m6_1967  [key=0, style=solid];
m6_1966 -> m6_24  [key=2, style=dotted];
m6_1967 -> m6_25  [key=2, style=dotted];
m6_1967 -> m6_1968  [key=0, style=solid];
m6_1967 -> m6_24  [key=2, style=dotted];
m6_1970 -> m6_25  [key=2, style=dotted];
m6_1970 -> m6_1971  [key=0, style=solid];
m6_1970 -> m6_24  [key=2, style=dotted];
m6_1973 -> m6_25  [key=2, style=dotted];
m6_1973 -> m6_1974  [key=0, style=solid];
m6_1973 -> m6_24  [key=2, style=dotted];
m6_1976 -> m6_25  [key=2, style=dotted];
m6_1976 -> m6_1977  [key=0, style=solid];
m6_1976 -> m6_24  [key=2, style=dotted];
m6_1977 -> m6_25  [key=2, style=dotted];
m6_1977 -> m6_1978  [key=0, style=solid];
m6_1977 -> m6_24  [key=2, style=dotted];
m6_1980 -> m6_25  [key=2, style=dotted];
m6_1980 -> m6_1981  [key=0, style=solid];
m6_1980 -> m6_24  [key=2, style=dotted];
m6_1983 -> m6_25  [key=2, style=dotted];
m6_1983 -> m6_1984  [key=0, style=solid];
m6_1983 -> m6_24  [key=2, style=dotted];
m6_1986 -> m6_25  [key=2, style=dotted];
m6_1986 -> m6_1987  [key=0, style=solid];
m6_1986 -> m6_24  [key=2, style=dotted];
m6_1993 -> m6_25  [key=2, style=dotted];
m6_1993 -> m6_1994  [key=0, style=solid];
m6_1993 -> m6_24  [key=2, style=dotted];
m6_1996 -> m6_25  [key=2, style=dotted];
m6_1996 -> m6_1997  [key=0, style=solid];
m6_1996 -> m6_24  [key=2, style=dotted];
m6_2003 -> m6_25  [key=2, style=dotted];
m6_2003 -> m6_2004  [key=0, style=solid];
m6_2003 -> m6_24  [key=2, style=dotted];
m6_1953 -> m6_1954  [key=0, style=solid];
m6_1953 -> m6_1964  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1953 -> m6_1974  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1953 -> m6_1984  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1953 -> m6_1994  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1955 -> m6_1956  [key=0, style=solid];
m6_1958 -> m6_26  [key=2, style=dotted];
m6_1958 -> m6_1959  [key=0, style=solid];
m6_1958 -> m6_2005  [key=2, style=dotted];
m6_1959 -> m6_26  [key=2, style=dotted];
m6_1959 -> m6_1960  [key=0, style=solid];
m6_1961 -> m6_26  [key=2, style=dotted];
m6_1961 -> m6_1962  [key=0, style=solid];
m6_1961 -> m6_2005  [key=2, style=dotted];
m6_1962 -> m6_26  [key=2, style=dotted];
m6_1962 -> m6_1963  [key=0, style=solid];
m6_1965 -> m6_1966  [key=0, style=solid];
m6_1968 -> m6_26  [key=2, style=dotted];
m6_1968 -> m6_1969  [key=0, style=solid];
m6_1968 -> m6_2006  [key=2, style=dotted];
m6_1969 -> m6_26  [key=2, style=dotted];
m6_1969 -> m6_1970  [key=0, style=solid];
m6_1971 -> m6_26  [key=2, style=dotted];
m6_1971 -> m6_1972  [key=0, style=solid];
m6_1971 -> m6_2006  [key=2, style=dotted];
m6_1972 -> m6_26  [key=2, style=dotted];
m6_1972 -> m6_1973  [key=0, style=solid];
m6_1975 -> m6_1976  [key=0, style=solid];
m6_1978 -> m6_26  [key=2, style=dotted];
m6_1978 -> m6_1979  [key=0, style=solid];
m6_1979 -> m6_26  [key=2, style=dotted];
m6_1979 -> m6_1980  [key=0, style=solid];
m6_1981 -> m6_26  [key=2, style=dotted];
m6_1981 -> m6_1982  [key=0, style=solid];
m6_1982 -> m6_26  [key=2, style=dotted];
m6_1982 -> m6_1983  [key=0, style=solid];
m6_1985 -> m6_1986  [key=0, style=solid];
m6_1987 -> m6_1988  [key=0, style=solid];
m6_1987 -> m6_1177  [key=2, style=dotted];
m6_1988 -> m6_26  [key=2, style=dotted];
m6_1988 -> m6_1989  [key=0, style=solid];
m6_1988 -> m6_2006  [key=2, style=dotted];
m6_1989 -> m6_26  [key=2, style=dotted];
m6_1989 -> m6_1990  [key=0, style=solid];
m6_1990 -> m6_1991  [key=0, style=solid];
m6_1990 -> m6_1177  [key=2, style=dotted];
m6_1991 -> m6_26  [key=2, style=dotted];
m6_1991 -> m6_1992  [key=0, style=solid];
m6_1991 -> m6_2006  [key=2, style=dotted];
m6_1992 -> m6_26  [key=2, style=dotted];
m6_1992 -> m6_1993  [key=0, style=solid];
m6_1995 -> m6_1996  [key=0, style=solid];
m6_1997 -> m6_1998  [key=0, style=solid];
m6_1997 -> m6_2007  [key=2, style=dotted];
m6_1998 -> m6_26  [key=2, style=dotted];
m6_1998 -> m6_1999  [key=0, style=solid];
m6_1998 -> m6_2005  [key=2, style=dotted];
m6_1999 -> m6_26  [key=2, style=dotted];
m6_1999 -> m6_2000  [key=0, style=solid];
m6_2000 -> m6_2001  [key=0, style=solid];
m6_2000 -> m6_2007  [key=2, style=dotted];
m6_2001 -> m6_26  [key=2, style=dotted];
m6_2001 -> m6_2002  [key=0, style=solid];
m6_2001 -> m6_2005  [key=2, style=dotted];
m6_2002 -> m6_26  [key=2, style=dotted];
m6_2002 -> m6_2003  [key=0, style=solid];
m6_2004 -> m6_1952  [color=blue, key=0, style=bold];
m6_1468 -> m6_1469  [key=0, style=solid];
m6_1470 -> m6_22  [key=2, style=dotted];
m6_1470 -> m6_23  [key=2, style=dotted];
m6_1470 -> m6_1471  [key=0, style=solid];
m6_1470 -> m6_1473  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1470 -> m6_1475  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1470 -> m6_1476  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1470 -> m6_1477  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1473 -> m6_25  [key=2, style=dotted];
m6_1473 -> m6_1474  [key=0, style=solid];
m6_1473 -> m6_24  [key=2, style=dotted];
m6_1475 -> m6_25  [key=2, style=dotted];
m6_1475 -> m6_1476  [key=0, style=solid];
m6_1475 -> m6_24  [key=2, style=dotted];
m6_1469 -> m6_1470  [key=0, style=solid];
m6_1471 -> m6_1472  [key=0, style=solid];
m6_1471 -> m6_1474  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_1476 -> m6_26  [key=2, style=dotted];
m6_1476 -> m6_1477  [key=0, style=solid];
m6_1477 -> m6_1478  [key=0, style=solid];
m6_1477 -> m6_24  [key=2, style=dotted];
m6_1477 -> m6_28  [key=2, style=dotted];
m6_1472 -> m6_1473  [key=0, style=solid];
m6_1472 -> m6_1475  [key=0, style=solid];
m6_1474 -> m6_1472  [key=0, style=solid];
m6_1474 -> m6_1474  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_1478 -> m6_1468  [color=blue, key=0, style=bold];
m6_1147 -> m6_1148  [key=0, style=solid];
m6_1148 -> m6_22  [key=2, style=dotted];
m6_1148 -> m6_23  [key=2, style=dotted];
m6_1148 -> m6_1149  [key=0, style=solid];
m6_1148 -> m6_1150  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1148 -> m6_1153  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1149 -> m6_1150  [key=0, style=solid];
m6_1149 -> m6_24  [key=2, style=dotted];
m6_1150 -> m6_1151  [key=0, style=solid];
m6_1150 -> m6_42  [key=2, style=dotted];
m6_1150 -> m6_1152  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1151 -> m6_1147  [color=blue, key=0, style=bold];
m6_252 -> m6_253  [key=0, style=solid];
m6_1321 -> m6_1322  [key=0, style=solid];
m6_1323 -> m6_22  [key=2, style=dotted];
m6_1323 -> m6_23  [key=2, style=dotted];
m6_1323 -> m6_1324  [key=0, style=solid];
m6_1323 -> m6_1325  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1323 -> m6_1326  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1323 -> m6_1327  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1323 -> m6_1328  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1323 -> m6_1329  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1323 -> m6_1330  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1323 -> m6_1331  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1323 -> m6_1332  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1323 -> m6_1333  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1324 -> m6_25  [key=2, style=dotted];
m6_1324 -> m6_1325  [key=0, style=solid];
m6_1324 -> m6_24  [key=2, style=dotted];
m6_1326 -> m6_25  [key=2, style=dotted];
m6_1326 -> m6_1327  [key=0, style=solid];
m6_1326 -> m6_24  [key=2, style=dotted];
m6_1332 -> m6_25  [key=2, style=dotted];
m6_1332 -> m6_1333  [key=0, style=solid];
m6_1332 -> m6_24  [key=2, style=dotted];
m6_1322 -> m6_1323  [key=0, style=solid];
m6_1325 -> m6_26  [key=2, style=dotted];
m6_1325 -> m6_1326  [key=0, style=solid];
m6_1327 -> m6_26  [key=2, style=dotted];
m6_1327 -> m6_1328  [key=0, style=solid];
m6_1328 -> m6_1329  [key=0, style=solid];
m6_1328 -> m6_1177  [key=2, style=dotted];
m6_1329 -> m6_26  [key=2, style=dotted];
m6_1329 -> m6_1330  [key=0, style=solid];
m6_1330 -> m6_26  [key=2, style=dotted];
m6_1330 -> m6_1331  [key=0, style=solid];
m6_1331 -> m6_26  [key=2, style=dotted];
m6_1331 -> m6_1332  [key=0, style=solid];
m6_1331 -> m6_1262  [key=2, style=dotted];
m6_1331 -> m6_1335  [key=2, style=dotted];
m6_1333 -> m6_26  [key=2, style=dotted];
m6_1333 -> m6_1334  [key=0, style=solid];
m6_1334 -> m6_1321  [color=blue, key=0, style=bold];
m6_27 -> m6_28  [key=0, style=solid];
m6_27 -> m6_29  [key=0, style=solid];
m6_253 -> m6_254  [key=0, style=solid];
m6_128 -> m6_25  [key=2, style=dotted];
m6_128 -> m6_129  [key=0, style=solid];
m6_128 -> m6_24  [key=2, style=dotted];
m6_53 -> m6_54  [key=0, style=solid];
m6_53 -> m6_42  [key=2, style=dotted];
m6_53 -> m6_63  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_46 -> m6_47  [key=0, style=solid];
m6_46 -> m6_55  [key=2, style=dotted];
m6_792 -> m6_793  [key=0, style=solid];
m6_794 -> m6_22  [key=2, style=dotted];
m6_794 -> m6_23  [key=2, style=dotted];
m6_794 -> m6_795  [key=0, style=solid];
m6_796 -> m6_22  [key=2, style=dotted];
m6_796 -> m6_23  [key=2, style=dotted];
m6_796 -> m6_797  [key=0, style=solid];
m6_798 -> m6_22  [key=2, style=dotted];
m6_798 -> m6_23  [key=2, style=dotted];
m6_798 -> m6_799  [key=0, style=solid];
m6_800 -> m6_22  [key=2, style=dotted];
m6_800 -> m6_23  [key=2, style=dotted];
m6_800 -> m6_801  [key=0, style=solid];
m6_802 -> m6_22  [key=2, style=dotted];
m6_802 -> m6_23  [key=2, style=dotted];
m6_802 -> m6_803  [key=0, style=solid];
m6_802 -> m6_819  [key=2, style=dotted];
m6_804 -> m6_22  [key=2, style=dotted];
m6_804 -> m6_23  [key=2, style=dotted];
m6_804 -> m6_805  [key=0, style=solid];
m6_804 -> m6_819  [key=2, style=dotted];
m6_806 -> m6_22  [key=2, style=dotted];
m6_806 -> m6_23  [key=2, style=dotted];
m6_806 -> m6_807  [key=0, style=solid];
m6_806 -> m6_820  [key=2, style=dotted];
m6_806 -> m6_822  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_808 -> m6_22  [key=2, style=dotted];
m6_808 -> m6_23  [key=2, style=dotted];
m6_808 -> m6_809  [key=0, style=solid];
m6_808 -> m6_825  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_810 -> m6_22  [key=2, style=dotted];
m6_810 -> m6_23  [key=2, style=dotted];
m6_810 -> m6_811  [key=0, style=solid];
m6_810 -> m6_828  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_812 -> m6_22  [key=2, style=dotted];
m6_812 -> m6_23  [key=2, style=dotted];
m6_812 -> m6_813  [key=0, style=solid];
m6_812 -> m6_831  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_814 -> m6_22  [key=2, style=dotted];
m6_814 -> m6_23  [key=2, style=dotted];
m6_814 -> m6_815  [key=0, style=solid];
m6_816 -> m6_22  [key=2, style=dotted];
m6_816 -> m6_23  [key=2, style=dotted];
m6_816 -> m6_817  [key=0, style=solid];
m6_816 -> m6_834  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_793 -> m6_794  [key=0, style=solid];
m6_795 -> m6_796  [key=0, style=solid];
m6_795 -> m6_26  [key=2, style=dotted];
m6_795 -> m6_46  [key=2, style=dotted];
m6_797 -> m6_798  [key=0, style=solid];
m6_797 -> m6_26  [key=2, style=dotted];
m6_797 -> m6_46  [key=2, style=dotted];
m6_799 -> m6_800  [key=0, style=solid];
m6_799 -> m6_26  [key=2, style=dotted];
m6_799 -> m6_46  [key=2, style=dotted];
m6_801 -> m6_802  [key=0, style=solid];
m6_801 -> m6_26  [key=2, style=dotted];
m6_801 -> m6_46  [key=2, style=dotted];
m6_803 -> m6_804  [key=0, style=solid];
m6_803 -> m6_26  [key=2, style=dotted];
m6_803 -> m6_46  [key=2, style=dotted];
m6_805 -> m6_806  [key=0, style=solid];
m6_805 -> m6_26  [key=2, style=dotted];
m6_805 -> m6_46  [key=2, style=dotted];
m6_807 -> m6_808  [key=0, style=solid];
m6_807 -> m6_42  [key=2, style=dotted];
m6_807 -> m6_821  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_809 -> m6_810  [key=0, style=solid];
m6_809 -> m6_42  [key=2, style=dotted];
m6_809 -> m6_824  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_811 -> m6_812  [key=0, style=solid];
m6_811 -> m6_42  [key=2, style=dotted];
m6_811 -> m6_827  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_813 -> m6_814  [key=0, style=solid];
m6_813 -> m6_42  [key=2, style=dotted];
m6_813 -> m6_830  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_815 -> m6_816  [key=0, style=solid];
m6_815 -> m6_26  [key=2, style=dotted];
m6_815 -> m6_46  [key=2, style=dotted];
m6_817 -> m6_818  [key=0, style=solid];
m6_817 -> m6_42  [key=2, style=dotted];
m6_817 -> m6_833  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_818 -> m6_792  [color=blue, key=0, style=bold];
m6_52 -> m6_302  [key=0, style=solid];
m6_52 -> m6_304  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_52 -> m6_305  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_52 -> m6_306  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_52 -> m6_38  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonWriter writer", style=bold];
m6_52 -> m6_246  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonWriter writer", style=bold];
m6_52 -> m6_353  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonWriter writer", style=bold];
m6_52 -> m6_53  [key=0, style=solid];
m6_52 -> m6_42  [key=2, style=dotted];
m6_52 -> m6_60  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_302 -> m6_303  [key=0, style=solid];
m6_302 -> m6_308  [key=2, style=dotted];
m6_302 -> m6_304  [color=darkseagreen4, key=1, label=typeName, style=dashed];
m6_302 -> m6_306  [color=darkseagreen4, key=1, label=typeName, style=dashed];
m6_304 -> m6_305  [key=0, style=solid];
m6_304 -> m6_176  [key=2, style=dotted];
m6_304 -> m6_165  [key=2, style=dotted];
m6_304 -> m6_166  [key=2, style=dotted];
m6_304 -> m6_22  [key=2, style=dotted];
m6_304 -> m6_23  [key=2, style=dotted];
m6_304 -> m6_308  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_305 -> m6_306  [key=0, style=solid];
m6_305 -> m6_53  [key=2, style=dotted];
m6_305 -> m6_42  [key=2, style=dotted];
m6_305 -> m6_307  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_306 -> m6_307  [key=0, style=solid];
m6_306 -> m6_177  [key=2, style=dotted];
m6_306 -> m6_302  [color=blue, key=0, style=bold];
m6_303 -> m6_304  [key=0, style=solid];
m6_303 -> m6_305  [key=0, style=solid];
m6_1155 -> m6_1156  [key=0, style=solid];
m6_1156 -> m6_22  [key=2, style=dotted];
m6_1156 -> m6_23  [key=2, style=dotted];
m6_1156 -> m6_1157  [key=0, style=solid];
m6_1156 -> m6_1158  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1157 -> m6_662  [key=2, style=dotted];
m6_1157 -> m6_1158  [key=0, style=solid];
m6_1157 -> m6_115  [key=2, style=dotted];
m6_1158 -> m6_26  [key=2, style=dotted];
m6_1158 -> m6_1159  [key=0, style=solid];
m6_1159 -> m6_1155  [color=blue, key=0, style=bold];
m6_1265 -> m6_1266  [key=0, style=solid];
m6_1267 -> m6_22  [key=2, style=dotted];
m6_1267 -> m6_23  [key=2, style=dotted];
m6_1267 -> m6_1268  [key=0, style=solid];
m6_1267 -> m6_1269  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1267 -> m6_1270  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1267 -> m6_1271  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1267 -> m6_1272  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1267 -> m6_1273  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1267 -> m6_1274  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1267 -> m6_1275  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1267 -> m6_1276  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1267 -> m6_1277  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1268 -> m6_25  [key=2, style=dotted];
m6_1268 -> m6_1269  [key=0, style=solid];
m6_1268 -> m6_24  [key=2, style=dotted];
m6_1270 -> m6_25  [key=2, style=dotted];
m6_1270 -> m6_1271  [key=0, style=solid];
m6_1270 -> m6_24  [key=2, style=dotted];
m6_1276 -> m6_25  [key=2, style=dotted];
m6_1276 -> m6_1277  [key=0, style=solid];
m6_1276 -> m6_24  [key=2, style=dotted];
m6_1266 -> m6_1267  [key=0, style=solid];
m6_1269 -> m6_26  [key=2, style=dotted];
m6_1269 -> m6_1270  [key=0, style=solid];
m6_1271 -> m6_26  [key=2, style=dotted];
m6_1271 -> m6_1272  [key=0, style=solid];
m6_1272 -> m6_1273  [key=0, style=solid];
m6_1272 -> m6_1177  [key=2, style=dotted];
m6_1273 -> m6_26  [key=2, style=dotted];
m6_1273 -> m6_1274  [key=0, style=solid];
m6_1274 -> m6_26  [key=2, style=dotted];
m6_1274 -> m6_1275  [key=0, style=solid];
m6_1275 -> m6_26  [key=2, style=dotted];
m6_1275 -> m6_1276  [key=0, style=solid];
m6_1275 -> m6_1262  [key=2, style=dotted];
m6_1275 -> m6_1263  [key=2, style=dotted];
m6_1275 -> m6_1264  [key=2, style=dotted];
m6_1277 -> m6_26  [key=2, style=dotted];
m6_1277 -> m6_1278  [key=0, style=solid];
m6_1278 -> m6_1265  [color=blue, key=0, style=bold];
m6_867 -> m6_868  [key=0, style=solid];
m6_869 -> m6_22  [key=2, style=dotted];
m6_869 -> m6_23  [key=2, style=dotted];
m6_869 -> m6_870  [key=0, style=solid];
m6_869 -> m6_871  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_869 -> m6_872  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_873 -> m6_22  [key=2, style=dotted];
m6_873 -> m6_23  [key=2, style=dotted];
m6_873 -> m6_874  [key=0, style=solid];
m6_873 -> m6_875  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_873 -> m6_876  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_877 -> m6_22  [key=2, style=dotted];
m6_877 -> m6_23  [key=2, style=dotted];
m6_877 -> m6_878  [key=0, style=solid];
m6_877 -> m6_879  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_877 -> m6_880  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_881 -> m6_22  [key=2, style=dotted];
m6_881 -> m6_23  [key=2, style=dotted];
m6_881 -> m6_882  [key=0, style=solid];
m6_881 -> m6_883  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_881 -> m6_884  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_885 -> m6_22  [key=2, style=dotted];
m6_885 -> m6_23  [key=2, style=dotted];
m6_885 -> m6_886  [key=0, style=solid];
m6_885 -> m6_897  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_887 -> m6_22  [key=2, style=dotted];
m6_887 -> m6_23  [key=2, style=dotted];
m6_887 -> m6_888  [key=0, style=solid];
m6_887 -> m6_889  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_887 -> m6_890  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_891 -> m6_22  [key=2, style=dotted];
m6_891 -> m6_23  [key=2, style=dotted];
m6_891 -> m6_892  [key=0, style=solid];
m6_893 -> m6_22  [key=2, style=dotted];
m6_893 -> m6_23  [key=2, style=dotted];
m6_893 -> m6_894  [key=0, style=solid];
m6_893 -> m6_900  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_870 -> m6_25  [key=2, style=dotted];
m6_870 -> m6_871  [key=0, style=solid];
m6_870 -> m6_24  [key=2, style=dotted];
m6_874 -> m6_25  [key=2, style=dotted];
m6_874 -> m6_875  [key=0, style=solid];
m6_874 -> m6_24  [key=2, style=dotted];
m6_878 -> m6_25  [key=2, style=dotted];
m6_878 -> m6_879  [key=0, style=solid];
m6_878 -> m6_24  [key=2, style=dotted];
m6_882 -> m6_25  [key=2, style=dotted];
m6_882 -> m6_883  [key=0, style=solid];
m6_882 -> m6_24  [key=2, style=dotted];
m6_888 -> m6_25  [key=2, style=dotted];
m6_888 -> m6_889  [key=0, style=solid];
m6_888 -> m6_24  [key=2, style=dotted];
m6_868 -> m6_869  [key=0, style=solid];
m6_871 -> m6_26  [key=2, style=dotted];
m6_871 -> m6_872  [key=0, style=solid];
m6_872 -> m6_873  [key=0, style=solid];
m6_872 -> m6_26  [key=2, style=dotted];
m6_875 -> m6_26  [key=2, style=dotted];
m6_875 -> m6_876  [key=0, style=solid];
m6_876 -> m6_877  [key=0, style=solid];
m6_876 -> m6_26  [key=2, style=dotted];
m6_879 -> m6_26  [key=2, style=dotted];
m6_879 -> m6_880  [key=0, style=solid];
m6_880 -> m6_881  [key=0, style=solid];
m6_880 -> m6_26  [key=2, style=dotted];
m6_883 -> m6_26  [key=2, style=dotted];
m6_883 -> m6_884  [key=0, style=solid];
m6_884 -> m6_885  [key=0, style=solid];
m6_884 -> m6_26  [key=2, style=dotted];
m6_886 -> m6_887  [key=0, style=solid];
m6_886 -> m6_42  [key=2, style=dotted];
m6_886 -> m6_896  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_889 -> m6_26  [key=2, style=dotted];
m6_889 -> m6_890  [key=0, style=solid];
m6_890 -> m6_891  [key=0, style=solid];
m6_890 -> m6_26  [key=2, style=dotted];
m6_892 -> m6_893  [key=0, style=solid];
m6_892 -> m6_24  [key=2, style=dotted];
m6_892 -> m6_28  [key=2, style=dotted];
m6_894 -> m6_895  [key=0, style=solid];
m6_894 -> m6_42  [key=2, style=dotted];
m6_894 -> m6_899  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_895 -> m6_867  [color=blue, key=0, style=bold];
m6_130 -> m6_131  [key=0, style=solid];
m6_130 -> m6_42  [key=2, style=dotted];
m6_130 -> m6_132  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1911 -> m6_1912  [key=0, style=solid];
m6_1913 -> m6_22  [key=2, style=dotted];
m6_1913 -> m6_1914  [key=0, style=solid];
m6_1913 -> m6_229  [key=2, style=dotted];
m6_1913 -> m6_269  [key=2, style=dotted];
m6_1913 -> m6_270  [key=2, style=dotted];
m6_1913 -> m6_1915  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1913 -> m6_1916  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1913 -> m6_1917  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1913 -> m6_1918  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1913 -> m6_1919  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1913 -> m6_1920  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1913 -> m6_1921  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1913 -> m6_1922  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1913 -> m6_1923  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1913 -> m6_1924  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1913 -> m6_1925  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1913 -> m6_1926  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1913 -> m6_1927  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1913 -> m6_1928  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1913 -> m6_1929  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1913 -> m6_1930  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1913 -> m6_1931  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1913 -> m6_1932  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1913 -> m6_1933  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1913 -> m6_1934  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1913 -> m6_1935  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1913 -> m6_1936  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1913 -> m6_1937  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1913 -> m6_1938  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1913 -> m6_1939  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1913 -> m6_1940  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1913 -> m6_1941  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1913 -> m6_1942  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1913 -> m6_1943  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1913 -> m6_1944  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1913 -> m6_1945  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1913 -> m6_1946  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1913 -> m6_1947  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1913 -> m6_1948  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1913 -> m6_1949  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1913 -> m6_1950  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1914 -> m6_25  [key=2, style=dotted];
m6_1914 -> m6_1915  [key=0, style=solid];
m6_1914 -> m6_24  [key=2, style=dotted];
m6_1915 -> m6_25  [key=2, style=dotted];
m6_1915 -> m6_1916  [key=0, style=solid];
m6_1915 -> m6_24  [key=2, style=dotted];
m6_1917 -> m6_25  [key=2, style=dotted];
m6_1917 -> m6_1918  [key=0, style=solid];
m6_1917 -> m6_24  [key=2, style=dotted];
m6_1920 -> m6_25  [key=2, style=dotted];
m6_1920 -> m6_1921  [key=0, style=solid];
m6_1920 -> m6_24  [key=2, style=dotted];
m6_1923 -> m6_25  [key=2, style=dotted];
m6_1923 -> m6_1924  [key=0, style=solid];
m6_1923 -> m6_24  [key=2, style=dotted];
m6_1926 -> m6_25  [key=2, style=dotted];
m6_1926 -> m6_1927  [key=0, style=solid];
m6_1926 -> m6_24  [key=2, style=dotted];
m6_1929 -> m6_25  [key=2, style=dotted];
m6_1929 -> m6_1930  [key=0, style=solid];
m6_1929 -> m6_24  [key=2, style=dotted];
m6_1932 -> m6_25  [key=2, style=dotted];
m6_1932 -> m6_1933  [key=0, style=solid];
m6_1932 -> m6_24  [key=2, style=dotted];
m6_1935 -> m6_25  [key=2, style=dotted];
m6_1935 -> m6_1936  [key=0, style=solid];
m6_1935 -> m6_24  [key=2, style=dotted];
m6_1938 -> m6_25  [key=2, style=dotted];
m6_1938 -> m6_1939  [key=0, style=solid];
m6_1938 -> m6_24  [key=2, style=dotted];
m6_1941 -> m6_25  [key=2, style=dotted];
m6_1941 -> m6_1942  [key=0, style=solid];
m6_1941 -> m6_24  [key=2, style=dotted];
m6_1944 -> m6_25  [key=2, style=dotted];
m6_1944 -> m6_1945  [key=0, style=solid];
m6_1944 -> m6_24  [key=2, style=dotted];
m6_1947 -> m6_25  [key=2, style=dotted];
m6_1947 -> m6_1948  [key=0, style=solid];
m6_1947 -> m6_24  [key=2, style=dotted];
m6_1950 -> m6_25  [key=2, style=dotted];
m6_1950 -> m6_1951  [key=0, style=solid];
m6_1950 -> m6_24  [key=2, style=dotted];
m6_1912 -> m6_1913  [key=0, style=solid];
m6_1916 -> m6_26  [key=2, style=dotted];
m6_1916 -> m6_1917  [key=0, style=solid];
m6_1918 -> m6_26  [key=2, style=dotted];
m6_1918 -> m6_1919  [key=0, style=solid];
m6_1919 -> m6_26  [key=2, style=dotted];
m6_1919 -> m6_1920  [key=0, style=solid];
m6_1921 -> m6_26  [key=2, style=dotted];
m6_1921 -> m6_1922  [key=0, style=solid];
m6_1922 -> m6_26  [key=2, style=dotted];
m6_1922 -> m6_1923  [key=0, style=solid];
m6_1924 -> m6_26  [key=2, style=dotted];
m6_1924 -> m6_1925  [key=0, style=solid];
m6_1925 -> m6_26  [key=2, style=dotted];
m6_1925 -> m6_1926  [key=0, style=solid];
m6_1927 -> m6_26  [key=2, style=dotted];
m6_1927 -> m6_1928  [key=0, style=solid];
m6_1928 -> m6_26  [key=2, style=dotted];
m6_1928 -> m6_1929  [key=0, style=solid];
m6_1930 -> m6_26  [key=2, style=dotted];
m6_1930 -> m6_1931  [key=0, style=solid];
m6_1931 -> m6_26  [key=2, style=dotted];
m6_1931 -> m6_1932  [key=0, style=solid];
m6_1933 -> m6_26  [key=2, style=dotted];
m6_1933 -> m6_1934  [key=0, style=solid];
m6_1934 -> m6_26  [key=2, style=dotted];
m6_1934 -> m6_1935  [key=0, style=solid];
m6_1936 -> m6_26  [key=2, style=dotted];
m6_1936 -> m6_1937  [key=0, style=solid];
m6_1937 -> m6_26  [key=2, style=dotted];
m6_1937 -> m6_1938  [key=0, style=solid];
m6_1939 -> m6_26  [key=2, style=dotted];
m6_1939 -> m6_1940  [key=0, style=solid];
m6_1940 -> m6_26  [key=2, style=dotted];
m6_1940 -> m6_1941  [key=0, style=solid];
m6_1942 -> m6_26  [key=2, style=dotted];
m6_1942 -> m6_1943  [key=0, style=solid];
m6_1943 -> m6_26  [key=2, style=dotted];
m6_1943 -> m6_1944  [key=0, style=solid];
m6_1945 -> m6_26  [key=2, style=dotted];
m6_1945 -> m6_1946  [key=0, style=solid];
m6_1946 -> m6_26  [key=2, style=dotted];
m6_1946 -> m6_1947  [key=0, style=solid];
m6_1948 -> m6_26  [key=2, style=dotted];
m6_1948 -> m6_1949  [key=0, style=solid];
m6_1949 -> m6_26  [key=2, style=dotted];
m6_1949 -> m6_1950  [key=0, style=solid];
m6_1951 -> m6_1911  [color=blue, key=0, style=bold];
m6_537 -> m6_538  [key=0, style=solid];
m6_539 -> m6_22  [key=2, style=dotted];
m6_539 -> m6_23  [key=2, style=dotted];
m6_539 -> m6_540  [key=0, style=solid];
m6_539 -> m6_542  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_539 -> m6_544  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_539 -> m6_545  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_538 -> m6_539  [key=0, style=solid];
m6_540 -> m6_541  [key=0, style=solid];
m6_540 -> m6_543  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_542 -> m6_543  [key=0, style=solid];
m6_542 -> m6_24  [key=2, style=dotted];
m6_544 -> m6_545  [key=0, style=solid];
m6_544 -> m6_24  [key=2, style=dotted];
m6_545 -> m6_26  [key=2, style=dotted];
m6_545 -> m6_546  [key=0, style=solid];
m6_541 -> m6_542  [key=0, style=solid];
m6_541 -> m6_544  [key=0, style=solid];
m6_543 -> m6_541  [key=0, style=solid];
m6_543 -> m6_543  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_546 -> m6_537  [color=blue, key=0, style=bold];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_0  [color=blue, key=0, style=bold];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_18  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1305 -> m6_1306  [key=0, style=solid];
m6_1307 -> m6_22  [key=2, style=dotted];
m6_1307 -> m6_23  [key=2, style=dotted];
m6_1307 -> m6_1308  [key=0, style=solid];
m6_1307 -> m6_1309  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1307 -> m6_1310  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1307 -> m6_1311  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1307 -> m6_1312  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1307 -> m6_1313  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1307 -> m6_1314  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1307 -> m6_1315  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1307 -> m6_1316  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1307 -> m6_1317  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1308 -> m6_25  [key=2, style=dotted];
m6_1308 -> m6_1309  [key=0, style=solid];
m6_1308 -> m6_24  [key=2, style=dotted];
m6_1310 -> m6_25  [key=2, style=dotted];
m6_1310 -> m6_1311  [key=0, style=solid];
m6_1310 -> m6_24  [key=2, style=dotted];
m6_1316 -> m6_25  [key=2, style=dotted];
m6_1316 -> m6_1317  [key=0, style=solid];
m6_1316 -> m6_24  [key=2, style=dotted];
m6_1306 -> m6_1307  [key=0, style=solid];
m6_1309 -> m6_26  [key=2, style=dotted];
m6_1309 -> m6_1310  [key=0, style=solid];
m6_1311 -> m6_26  [key=2, style=dotted];
m6_1311 -> m6_1312  [key=0, style=solid];
m6_1312 -> m6_1313  [key=0, style=solid];
m6_1312 -> m6_1177  [key=2, style=dotted];
m6_1313 -> m6_26  [key=2, style=dotted];
m6_1313 -> m6_1314  [key=0, style=solid];
m6_1314 -> m6_26  [key=2, style=dotted];
m6_1314 -> m6_1315  [key=0, style=solid];
m6_1315 -> m6_26  [key=2, style=dotted];
m6_1315 -> m6_1316  [key=0, style=solid];
m6_1315 -> m6_1262  [key=2, style=dotted];
m6_1315 -> m6_1263  [key=2, style=dotted];
m6_1315 -> m6_1264  [key=2, style=dotted];
m6_1315 -> m6_1319  [key=2, style=dotted];
m6_1315 -> m6_1320  [key=2, style=dotted];
m6_1317 -> m6_26  [key=2, style=dotted];
m6_1317 -> m6_1318  [key=0, style=solid];
m6_1318 -> m6_1305  [color=blue, key=0, style=bold];
m6_762 -> m6_763  [key=0, style=solid];
m6_765 -> m6_22  [key=2, style=dotted];
m6_765 -> m6_766  [key=0, style=solid];
m6_765 -> m6_767  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_765 -> m6_768  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_765 -> m6_769  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_765 -> m6_770  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_765 -> m6_771  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_765 -> m6_772  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_765 -> m6_773  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_765 -> m6_774  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_765 -> m6_775  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_765 -> m6_776  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_765 -> m6_777  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_765 -> m6_778  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_765 -> m6_779  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_765 -> m6_780  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_764 -> m6_23  [key=2, style=dotted];
m6_764 -> m6_765  [key=0, style=solid];
m6_767 -> m6_250  [key=2, style=dotted];
m6_767 -> m6_768  [key=0, style=solid];
m6_770 -> m6_250  [key=2, style=dotted];
m6_770 -> m6_771  [key=0, style=solid];
m6_773 -> m6_250  [key=2, style=dotted];
m6_773 -> m6_774  [key=0, style=solid];
m6_778 -> m6_250  [key=2, style=dotted];
m6_778 -> m6_779  [key=0, style=solid];
m6_766 -> m6_26  [key=2, style=dotted];
m6_766 -> m6_767  [key=0, style=solid];
m6_768 -> m6_26  [key=2, style=dotted];
m6_768 -> m6_769  [key=0, style=solid];
m6_769 -> m6_26  [key=2, style=dotted];
m6_769 -> m6_770  [key=0, style=solid];
m6_771 -> m6_26  [key=2, style=dotted];
m6_771 -> m6_772  [key=0, style=solid];
m6_772 -> m6_26  [key=2, style=dotted];
m6_772 -> m6_773  [key=0, style=solid];
m6_774 -> m6_26  [key=2, style=dotted];
m6_774 -> m6_775  [key=0, style=solid];
m6_775 -> m6_26  [key=2, style=dotted];
m6_775 -> m6_776  [key=0, style=solid];
m6_776 -> m6_26  [key=2, style=dotted];
m6_776 -> m6_777  [key=0, style=solid];
m6_777 -> m6_26  [key=2, style=dotted];
m6_777 -> m6_778  [key=0, style=solid];
m6_779 -> m6_26  [key=2, style=dotted];
m6_779 -> m6_780  [key=0, style=solid];
m6_780 -> m6_26  [key=2, style=dotted];
m6_780 -> m6_781  [key=0, style=solid];
m6_763 -> m6_764  [key=0, style=solid];
m6_781 -> m6_762  [color=blue, key=0, style=bold];
m6_1400 -> m6_1401  [key=0, style=solid];
m6_1401 -> m6_22  [key=2, style=dotted];
m6_1401 -> m6_23  [key=2, style=dotted];
m6_1401 -> m6_1402  [key=0, style=solid];
m6_1401 -> m6_1405  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1402 -> m6_1403  [key=0, style=solid];
m6_1402 -> m6_42  [key=2, style=dotted];
m6_1402 -> m6_1404  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1403 -> m6_1400  [color=blue, key=0, style=bold];
m6_1617 -> m6_1618  [key=0, style=solid];
m6_1619 -> m6_22  [key=2, style=dotted];
m6_1619 -> m6_1620  [key=0, style=solid];
m6_1619 -> m6_229  [key=2, style=dotted];
m6_1619 -> m6_269  [key=2, style=dotted];
m6_1619 -> m6_270  [key=2, style=dotted];
m6_1619 -> m6_1621  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1619 -> m6_1622  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1619 -> m6_1623  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1619 -> m6_1624  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1619 -> m6_1625  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1619 -> m6_1626  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1619 -> m6_1627  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1619 -> m6_1628  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1619 -> m6_1629  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1619 -> m6_1630  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1619 -> m6_1631  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1619 -> m6_1632  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1619 -> m6_1633  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1619 -> m6_1634  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1619 -> m6_1635  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1619 -> m6_1636  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1619 -> m6_1637  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1619 -> m6_1638  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1620 -> m6_25  [key=2, style=dotted];
m6_1620 -> m6_1621  [key=0, style=solid];
m6_1620 -> m6_24  [key=2, style=dotted];
m6_1622 -> m6_25  [key=2, style=dotted];
m6_1622 -> m6_1623  [key=0, style=solid];
m6_1622 -> m6_24  [key=2, style=dotted];
m6_1624 -> m6_25  [key=2, style=dotted];
m6_1624 -> m6_1625  [key=0, style=solid];
m6_1624 -> m6_24  [key=2, style=dotted];
m6_1626 -> m6_25  [key=2, style=dotted];
m6_1626 -> m6_1627  [key=0, style=solid];
m6_1626 -> m6_24  [key=2, style=dotted];
m6_1628 -> m6_25  [key=2, style=dotted];
m6_1628 -> m6_1629  [key=0, style=solid];
m6_1628 -> m6_24  [key=2, style=dotted];
m6_1630 -> m6_25  [key=2, style=dotted];
m6_1630 -> m6_1631  [key=0, style=solid];
m6_1630 -> m6_24  [key=2, style=dotted];
m6_1632 -> m6_25  [key=2, style=dotted];
m6_1632 -> m6_1633  [key=0, style=solid];
m6_1632 -> m6_24  [key=2, style=dotted];
m6_1634 -> m6_25  [key=2, style=dotted];
m6_1634 -> m6_1635  [key=0, style=solid];
m6_1634 -> m6_24  [key=2, style=dotted];
m6_1636 -> m6_25  [key=2, style=dotted];
m6_1636 -> m6_1637  [key=0, style=solid];
m6_1636 -> m6_24  [key=2, style=dotted];
m6_1618 -> m6_1619  [key=0, style=solid];
m6_1621 -> m6_26  [key=2, style=dotted];
m6_1621 -> m6_1622  [key=0, style=solid];
m6_1623 -> m6_26  [key=2, style=dotted];
m6_1623 -> m6_1624  [key=0, style=solid];
m6_1625 -> m6_26  [key=2, style=dotted];
m6_1625 -> m6_1626  [key=0, style=solid];
m6_1627 -> m6_26  [key=2, style=dotted];
m6_1627 -> m6_1628  [key=0, style=solid];
m6_1629 -> m6_26  [key=2, style=dotted];
m6_1629 -> m6_1630  [key=0, style=solid];
m6_1631 -> m6_26  [key=2, style=dotted];
m6_1631 -> m6_1632  [key=0, style=solid];
m6_1633 -> m6_26  [key=2, style=dotted];
m6_1633 -> m6_1634  [key=0, style=solid];
m6_1635 -> m6_26  [key=2, style=dotted];
m6_1635 -> m6_1636  [key=0, style=solid];
m6_1637 -> m6_26  [key=2, style=dotted];
m6_1637 -> m6_1638  [key=0, style=solid];
m6_1638 -> m6_1639  [key=0, style=solid];
m6_1638 -> m6_24  [key=2, style=dotted];
m6_1638 -> m6_28  [key=2, style=dotted];
m6_1639 -> m6_1617  [color=blue, key=0, style=bold];
m6_987 -> m6_988  [key=0, style=solid];
m6_989 -> m6_22  [key=2, style=dotted];
m6_989 -> m6_23  [key=2, style=dotted];
m6_989 -> m6_990  [key=0, style=solid];
m6_989 -> m6_991  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_989 -> m6_992  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_989 -> m6_993  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_989 -> m6_994  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_989 -> m6_995  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_989 -> m6_996  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_989 -> m6_997  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_988 -> m6_989  [key=0, style=solid];
m6_990 -> m6_991  [key=0, style=solid];
m6_990 -> m6_24  [key=2, style=dotted];
m6_991 -> m6_26  [key=2, style=dotted];
m6_991 -> m6_992  [key=0, style=solid];
m6_992 -> m6_993  [key=0, style=solid];
m6_992 -> m6_24  [key=2, style=dotted];
m6_993 -> m6_26  [key=2, style=dotted];
m6_993 -> m6_994  [key=0, style=solid];
m6_994 -> m6_995  [key=0, style=solid];
m6_994 -> m6_24  [key=2, style=dotted];
m6_995 -> m6_26  [key=2, style=dotted];
m6_995 -> m6_996  [key=0, style=solid];
m6_995 -> m6_999  [key=2, style=dotted];
m6_995 -> m6_1000  [key=2, style=dotted];
m6_996 -> m6_997  [key=0, style=solid];
m6_996 -> m6_24  [key=2, style=dotted];
m6_997 -> m6_26  [key=2, style=dotted];
m6_997 -> m6_998  [key=0, style=solid];
m6_998 -> m6_987  [color=blue, key=0, style=bold];
m6_1479 -> m6_1480  [key=0, style=solid];
m6_1481 -> m6_22  [key=2, style=dotted];
m6_1481 -> m6_23  [key=2, style=dotted];
m6_1481 -> m6_1482  [key=0, style=solid];
m6_1481 -> m6_1483  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1481 -> m6_1484  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1481 -> m6_1485  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1481 -> m6_1486  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1482 -> m6_25  [key=2, style=dotted];
m6_1482 -> m6_1483  [key=0, style=solid];
m6_1482 -> m6_24  [key=2, style=dotted];
m6_1485 -> m6_25  [key=2, style=dotted];
m6_1485 -> m6_1486  [key=0, style=solid];
m6_1485 -> m6_24  [key=2, style=dotted];
m6_1480 -> m6_1481  [key=0, style=solid];
m6_1483 -> m6_26  [key=2, style=dotted];
m6_1483 -> m6_1484  [key=0, style=solid];
m6_1484 -> m6_26  [key=2, style=dotted];
m6_1484 -> m6_1485  [key=0, style=solid];
m6_1486 -> m6_26  [key=2, style=dotted];
m6_1486 -> m6_1487  [key=0, style=solid];
m6_1487 -> m6_1479  [color=blue, key=0, style=bold];
m6_1063 -> m6_1064  [key=0, style=solid];
m6_1065 -> m6_22  [key=2, style=dotted];
m6_1065 -> m6_23  [key=2, style=dotted];
m6_1065 -> m6_1066  [key=0, style=solid];
m6_1065 -> m6_1067  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1065 -> m6_1068  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1065 -> m6_1069  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1065 -> m6_1070  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1065 -> m6_1071  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1065 -> m6_1072  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1065 -> m6_1075  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1064 -> m6_1065  [key=0, style=solid];
m6_1066 -> m6_1067  [key=0, style=solid];
m6_1066 -> m6_24  [key=2, style=dotted];
m6_1067 -> m6_26  [key=2, style=dotted];
m6_1067 -> m6_1068  [key=0, style=solid];
m6_1068 -> m6_1069  [key=0, style=solid];
m6_1068 -> m6_24  [key=2, style=dotted];
m6_1069 -> m6_26  [key=2, style=dotted];
m6_1069 -> m6_1070  [key=0, style=solid];
m6_1070 -> m6_1071  [key=0, style=solid];
m6_1070 -> m6_24  [key=2, style=dotted];
m6_1071 -> m6_26  [key=2, style=dotted];
m6_1071 -> m6_1072  [key=0, style=solid];
m6_1072 -> m6_1073  [key=0, style=solid];
m6_1072 -> m6_42  [key=2, style=dotted];
m6_1072 -> m6_1074  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1073 -> m6_1063  [color=blue, key=0, style=bold];
m6_1515 -> m6_1516  [key=0, style=solid];
m6_1516 -> m6_22  [key=2, style=dotted];
m6_1516 -> m6_23  [key=2, style=dotted];
m6_1516 -> m6_1517  [key=0, style=solid];
m6_1516 -> m6_1518  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1516 -> m6_1519  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1516 -> m6_1520  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1516 -> m6_1521  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1516 -> m6_1522  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1516 -> m6_1523  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1516 -> m6_1524  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1516 -> m6_1525  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1516 -> m6_1526  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1516 -> m6_1527  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1516 -> m6_1528  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1516 -> m6_1529  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1516 -> m6_1530  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1516 -> m6_1531  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1516 -> m6_1532  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1516 -> m6_1533  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1516 -> m6_1534  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1516 -> m6_1535  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1516 -> m6_1536  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1516 -> m6_1537  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1516 -> m6_1538  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1516 -> m6_1539  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1516 -> m6_1540  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1516 -> m6_1541  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1516 -> m6_1542  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1516 -> m6_1543  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1516 -> m6_1544  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1518 -> m6_25  [key=2, style=dotted];
m6_1518 -> m6_1519  [key=0, style=solid];
m6_1518 -> m6_24  [key=2, style=dotted];
m6_1520 -> m6_25  [key=2, style=dotted];
m6_1520 -> m6_1521  [key=0, style=solid];
m6_1520 -> m6_24  [key=2, style=dotted];
m6_1522 -> m6_25  [key=2, style=dotted];
m6_1522 -> m6_1523  [key=0, style=solid];
m6_1522 -> m6_24  [key=2, style=dotted];
m6_1524 -> m6_25  [key=2, style=dotted];
m6_1524 -> m6_1525  [key=0, style=solid];
m6_1524 -> m6_24  [key=2, style=dotted];
m6_1526 -> m6_25  [key=2, style=dotted];
m6_1526 -> m6_1527  [key=0, style=solid];
m6_1526 -> m6_24  [key=2, style=dotted];
m6_1528 -> m6_25  [key=2, style=dotted];
m6_1528 -> m6_1529  [key=0, style=solid];
m6_1528 -> m6_24  [key=2, style=dotted];
m6_1530 -> m6_25  [key=2, style=dotted];
m6_1530 -> m6_1531  [key=0, style=solid];
m6_1530 -> m6_24  [key=2, style=dotted];
m6_1532 -> m6_25  [key=2, style=dotted];
m6_1532 -> m6_1533  [key=0, style=solid];
m6_1532 -> m6_24  [key=2, style=dotted];
m6_1534 -> m6_25  [key=2, style=dotted];
m6_1534 -> m6_1535  [key=0, style=solid];
m6_1534 -> m6_24  [key=2, style=dotted];
m6_1536 -> m6_25  [key=2, style=dotted];
m6_1536 -> m6_1537  [key=0, style=solid];
m6_1536 -> m6_24  [key=2, style=dotted];
m6_1538 -> m6_25  [key=2, style=dotted];
m6_1538 -> m6_1539  [key=0, style=solid];
m6_1538 -> m6_24  [key=2, style=dotted];
m6_1540 -> m6_25  [key=2, style=dotted];
m6_1540 -> m6_1541  [key=0, style=solid];
m6_1540 -> m6_24  [key=2, style=dotted];
m6_1542 -> m6_25  [key=2, style=dotted];
m6_1542 -> m6_1543  [key=0, style=solid];
m6_1542 -> m6_24  [key=2, style=dotted];
m6_1517 -> m6_1518  [key=0, style=solid];
m6_1519 -> m6_26  [key=2, style=dotted];
m6_1519 -> m6_1520  [key=0, style=solid];
m6_1521 -> m6_26  [key=2, style=dotted];
m6_1521 -> m6_1522  [key=0, style=solid];
m6_1523 -> m6_26  [key=2, style=dotted];
m6_1523 -> m6_1524  [key=0, style=solid];
m6_1525 -> m6_26  [key=2, style=dotted];
m6_1525 -> m6_1526  [key=0, style=solid];
m6_1527 -> m6_26  [key=2, style=dotted];
m6_1527 -> m6_1528  [key=0, style=solid];
m6_1529 -> m6_26  [key=2, style=dotted];
m6_1529 -> m6_1530  [key=0, style=solid];
m6_1531 -> m6_26  [key=2, style=dotted];
m6_1531 -> m6_1532  [key=0, style=solid];
m6_1533 -> m6_26  [key=2, style=dotted];
m6_1533 -> m6_1534  [key=0, style=solid];
m6_1535 -> m6_26  [key=2, style=dotted];
m6_1535 -> m6_1536  [key=0, style=solid];
m6_1537 -> m6_26  [key=2, style=dotted];
m6_1537 -> m6_1538  [key=0, style=solid];
m6_1539 -> m6_26  [key=2, style=dotted];
m6_1539 -> m6_1540  [key=0, style=solid];
m6_1541 -> m6_26  [key=2, style=dotted];
m6_1541 -> m6_1542  [key=0, style=solid];
m6_1543 -> m6_26  [key=2, style=dotted];
m6_1543 -> m6_1544  [key=0, style=solid];
m6_1544 -> m6_1545  [key=0, style=solid];
m6_1544 -> m6_24  [key=2, style=dotted];
m6_1544 -> m6_28  [key=2, style=dotted];
m6_1545 -> m6_1515  [color=blue, key=0, style=bold];
m6_2008 -> m6_2009  [key=0, style=solid];
m6_2010 -> m6_22  [key=2, style=dotted];
m6_2010 -> m6_2011  [key=0, style=solid];
m6_2010 -> m6_2013  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_2010 -> m6_2031  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_2010 -> m6_2014  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_2010 -> m6_2034  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_2010 -> m6_2016  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_2010 -> m6_2017  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_2010 -> m6_2019  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_2010 -> m6_2037  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_2010 -> m6_2021  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_2010 -> m6_2022  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_2010 -> m6_2024  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_2010 -> m6_2040  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_2010 -> m6_2025  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_2010 -> m6_2043  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_2010 -> m6_2026  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_2010 -> m6_2046  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_2009 -> m6_23  [key=2, style=dotted];
m6_2009 -> m6_2010  [key=0, style=solid];
m6_2009 -> m6_2029  [key=2, style=dotted];
m6_2009 -> m6_2012  [color=darkseagreen4, key=1, label=toggleReaderError, style=dashed];
m6_2009 -> m6_2015  [color=darkseagreen4, key=1, label=toggleReaderError, style=dashed];
m6_2009 -> m6_2018  [color=darkseagreen4, key=1, label=toggleReaderError, style=dashed];
m6_2009 -> m6_2020  [color=darkseagreen4, key=1, label=toggleReaderError, style=dashed];
m6_2009 -> m6_2023  [color=darkseagreen4, key=1, label=toggleReaderError, style=dashed];
m6_2009 -> m6_2027  [color=darkseagreen4, key=1, label=toggleReaderError, style=dashed];
m6_2011 -> m6_25  [key=2, style=dotted];
m6_2011 -> m6_2012  [key=0, style=solid];
m6_2011 -> m6_24  [key=2, style=dotted];
m6_2016 -> m6_25  [key=2, style=dotted];
m6_2016 -> m6_2017  [key=0, style=solid];
m6_2016 -> m6_24  [key=2, style=dotted];
m6_2021 -> m6_25  [key=2, style=dotted];
m6_2021 -> m6_2022  [key=0, style=solid];
m6_2021 -> m6_24  [key=2, style=dotted];
m6_2013 -> m6_2014  [key=0, style=solid];
m6_2013 -> m6_42  [key=2, style=dotted];
m6_2013 -> m6_2030  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_2014 -> m6_2015  [key=0, style=solid];
m6_2014 -> m6_42  [key=2, style=dotted];
m6_2014 -> m6_2033  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_2017 -> m6_26  [key=2, style=dotted];
m6_2017 -> m6_2018  [key=0, style=solid];
m6_2019 -> m6_2020  [key=0, style=solid];
m6_2019 -> m6_42  [key=2, style=dotted];
m6_2019 -> m6_2036  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_2022 -> m6_26  [key=2, style=dotted];
m6_2022 -> m6_2023  [key=0, style=solid];
m6_2024 -> m6_2025  [key=0, style=solid];
m6_2024 -> m6_42  [key=2, style=dotted];
m6_2024 -> m6_2039  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_2025 -> m6_2026  [key=0, style=solid];
m6_2025 -> m6_42  [key=2, style=dotted];
m6_2025 -> m6_2042  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_2026 -> m6_2027  [key=0, style=solid];
m6_2026 -> m6_42  [key=2, style=dotted];
m6_2026 -> m6_2045  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_2012 -> m6_2013  [key=0, style=solid];
m6_2015 -> m6_2016  [key=0, style=solid];
m6_2018 -> m6_2019  [key=0, style=solid];
m6_2020 -> m6_2021  [key=0, style=solid];
m6_2023 -> m6_2024  [key=0, style=solid];
m6_2027 -> m6_2028  [key=0, style=solid];
m6_2028 -> m6_2008  [color=blue, key=0, style=bold];
m6_1291 -> m6_1292  [key=0, style=solid];
m6_1293 -> m6_22  [key=2, style=dotted];
m6_1293 -> m6_23  [key=2, style=dotted];
m6_1293 -> m6_1294  [key=0, style=solid];
m6_1293 -> m6_1295  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1293 -> m6_1296  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1293 -> m6_1297  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1293 -> m6_1298  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1293 -> m6_1299  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1293 -> m6_1300  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1293 -> m6_1301  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1293 -> m6_1302  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1293 -> m6_1303  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1294 -> m6_25  [key=2, style=dotted];
m6_1294 -> m6_1295  [key=0, style=solid];
m6_1294 -> m6_24  [key=2, style=dotted];
m6_1296 -> m6_25  [key=2, style=dotted];
m6_1296 -> m6_1297  [key=0, style=solid];
m6_1296 -> m6_24  [key=2, style=dotted];
m6_1302 -> m6_25  [key=2, style=dotted];
m6_1302 -> m6_1303  [key=0, style=solid];
m6_1302 -> m6_24  [key=2, style=dotted];
m6_1292 -> m6_1293  [key=0, style=solid];
m6_1295 -> m6_26  [key=2, style=dotted];
m6_1295 -> m6_1296  [key=0, style=solid];
m6_1297 -> m6_26  [key=2, style=dotted];
m6_1297 -> m6_1298  [key=0, style=solid];
m6_1298 -> m6_1299  [key=0, style=solid];
m6_1298 -> m6_1177  [key=2, style=dotted];
m6_1299 -> m6_26  [key=2, style=dotted];
m6_1299 -> m6_1300  [key=0, style=solid];
m6_1300 -> m6_26  [key=2, style=dotted];
m6_1300 -> m6_1301  [key=0, style=solid];
m6_1301 -> m6_26  [key=2, style=dotted];
m6_1301 -> m6_1302  [key=0, style=solid];
m6_1301 -> m6_1262  [key=2, style=dotted];
m6_1301 -> m6_1263  [key=2, style=dotted];
m6_1301 -> m6_1264  [key=2, style=dotted];
m6_1303 -> m6_26  [key=2, style=dotted];
m6_1303 -> m6_1304  [key=0, style=solid];
m6_1304 -> m6_1291  [color=blue, key=0, style=bold];
m6_42 -> m6_43  [key=0, style=solid];
m6_42 -> m6_51  [key=2, style=dotted];
m6_48 -> m6_49  [key=0, style=solid];
m6_48 -> m6_54  [key=2, style=dotted];
m6_47 -> m6_49  [key=0, style=solid];
m6_47 -> m6_48  [key=0, style=solid];
m6_49 -> m6_38  [color=blue, key=0, style=bold];
m6_49 -> m6_22  [key=2, style=dotted];
m6_49 -> m6_23  [key=2, style=dotted];
m6_49 -> m6_50  [key=0, style=solid];
m6_49 -> m6_51  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_49 -> m6_52  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_49 -> m6_61  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_49 -> m6_53  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_49 -> m6_64  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_49 -> m6_54  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_49 -> m6_67  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_49 -> m6_55  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_49 -> m6_70  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_49 -> m6_56  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_49 -> m6_57  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_49 -> m6_58  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_1795 -> m6_1796  [key=0, style=solid];
m6_1797 -> m6_22  [key=2, style=dotted];
m6_1797 -> m6_23  [key=2, style=dotted];
m6_1797 -> m6_1798  [key=0, style=solid];
m6_1797 -> m6_1799  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1797 -> m6_1800  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1797 -> m6_1801  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1797 -> m6_1802  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1797 -> m6_1803  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1797 -> m6_1804  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1797 -> m6_1805  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1797 -> m6_1806  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1797 -> m6_1807  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1797 -> m6_1808  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1797 -> m6_1809  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1796 -> m6_1797  [key=0, style=solid];
m6_1798 -> m6_1799  [key=0, style=solid];
m6_1798 -> m6_24  [key=2, style=dotted];
m6_1799 -> m6_26  [key=2, style=dotted];
m6_1799 -> m6_1800  [key=0, style=solid];
m6_1800 -> m6_1801  [key=0, style=solid];
m6_1800 -> m6_24  [key=2, style=dotted];
m6_1801 -> m6_26  [key=2, style=dotted];
m6_1801 -> m6_1802  [key=0, style=solid];
m6_1802 -> m6_1803  [key=0, style=solid];
m6_1802 -> m6_24  [key=2, style=dotted];
m6_1803 -> m6_26  [key=2, style=dotted];
m6_1803 -> m6_1804  [key=0, style=solid];
m6_1804 -> m6_1805  [key=0, style=solid];
m6_1804 -> m6_24  [key=2, style=dotted];
m6_1805 -> m6_26  [key=2, style=dotted];
m6_1805 -> m6_1806  [key=0, style=solid];
m6_1806 -> m6_1807  [key=0, style=solid];
m6_1806 -> m6_24  [key=2, style=dotted];
m6_1807 -> m6_26  [key=2, style=dotted];
m6_1807 -> m6_1808  [key=0, style=solid];
m6_1808 -> m6_1809  [key=0, style=solid];
m6_1808 -> m6_24  [key=2, style=dotted];
m6_1809 -> m6_26  [key=2, style=dotted];
m6_1809 -> m6_1810  [key=0, style=solid];
m6_1810 -> m6_1795  [color=blue, key=0, style=bold];
m6_50 -> m6_25  [key=2, style=dotted];
m6_50 -> m6_51  [key=0, style=solid];
m6_50 -> m6_24  [key=2, style=dotted];
m6_50 -> m6_419  [key=0, style=solid];
m6_50 -> m6_420  [color=darkseagreen4, key=1, label="Newtonsoft.Json.TypeNameHandling", style=dashed];
m6_50 -> m6_423  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m6_50 -> m6_424  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m6_50 -> m6_426  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContainerContract", style=dashed];
m6_50 -> m6_427  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m6_50 -> m6_431  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m6_50 -> m6_40  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.TypeNameHandling typeNameHandlingFlag", style=bold];
m6_50 -> m6_398  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.TypeNameHandling typeNameHandlingFlag", style=bold];
m6_50 -> m6_38  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerProperty", style=bold];
m6_50 -> m6_246  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerProperty", style=bold];
m6_50 -> m6_353  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerProperty", style=bold];
m6_50 -> m6_126  [color=darkorchid, key=3, label="method methodReturn bool ShouldWriteType", style=bold];
m6_50 -> m6_44  [color=darkorchid, key=3, label="method methodReturn bool ShouldWriteType", style=bold];
m6_1353 -> m6_1354  [key=0, style=solid];
m6_1355 -> m6_22  [key=2, style=dotted];
m6_1355 -> m6_23  [key=2, style=dotted];
m6_1355 -> m6_1356  [key=0, style=solid];
m6_1355 -> m6_1357  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1355 -> m6_1358  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1355 -> m6_1359  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1355 -> m6_1360  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1355 -> m6_1361  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1355 -> m6_1362  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1355 -> m6_1363  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1355 -> m6_1364  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1355 -> m6_1366  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1355 -> m6_1367  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1357 -> m6_25  [key=2, style=dotted];
m6_1357 -> m6_1358  [key=0, style=solid];
m6_1357 -> m6_24  [key=2, style=dotted];
m6_1359 -> m6_25  [key=2, style=dotted];
m6_1359 -> m6_1360  [key=0, style=solid];
m6_1359 -> m6_24  [key=2, style=dotted];
m6_1366 -> m6_25  [key=2, style=dotted];
m6_1366 -> m6_1367  [key=0, style=solid];
m6_1366 -> m6_24  [key=2, style=dotted];
m6_1354 -> m6_1355  [key=0, style=solid];
m6_1356 -> m6_1357  [key=0, style=solid];
m6_1356 -> m6_1352  [key=2, style=dotted];
m6_1358 -> m6_26  [key=2, style=dotted];
m6_1358 -> m6_1359  [key=0, style=solid];
m6_1360 -> m6_26  [key=2, style=dotted];
m6_1360 -> m6_1361  [key=0, style=solid];
m6_1361 -> m6_1362  [key=0, style=solid];
m6_1361 -> m6_1177  [key=2, style=dotted];
m6_1362 -> m6_26  [key=2, style=dotted];
m6_1362 -> m6_1363  [key=0, style=solid];
m6_1363 -> m6_26  [key=2, style=dotted];
m6_1363 -> m6_1364  [key=0, style=solid];
m6_1364 -> m6_1365  [key=0, style=solid];
m6_1367 -> m6_26  [key=2, style=dotted];
m6_1367 -> m6_1368  [key=0, style=solid];
m6_1365 -> m6_26  [key=2, style=dotted];
m6_1365 -> m6_1366  [key=0, style=solid];
m6_1365 -> m6_1365  [color=darkseagreen4, key=1, label=dt, style=dashed];
m6_1365 -> m6_1335  [key=2, style=dotted];
m6_1368 -> m6_1353  [color=blue, key=0, style=bold];
m6_1165 -> m6_1166  [key=0, style=solid];
m6_1166 -> m6_22  [key=2, style=dotted];
m6_1166 -> m6_23  [key=2, style=dotted];
m6_1166 -> m6_1167  [key=0, style=solid];
m6_1166 -> m6_1170  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1167 -> m6_1168  [key=0, style=solid];
m6_1167 -> m6_42  [key=2, style=dotted];
m6_1167 -> m6_1169  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1168 -> m6_1165  [color=blue, key=0, style=bold];
m6_1765 -> m6_1766  [key=0, style=solid];
m6_1767 -> m6_22  [key=2, style=dotted];
m6_1767 -> m6_1768  [key=0, style=solid];
m6_1767 -> m6_229  [key=2, style=dotted];
m6_1767 -> m6_269  [key=2, style=dotted];
m6_1767 -> m6_270  [key=2, style=dotted];
m6_1767 -> m6_1769  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1767 -> m6_1770  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1767 -> m6_1771  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1768 -> m6_25  [key=2, style=dotted];
m6_1768 -> m6_1769  [key=0, style=solid];
m6_1768 -> m6_24  [key=2, style=dotted];
m6_1766 -> m6_1767  [key=0, style=solid];
m6_1769 -> m6_26  [key=2, style=dotted];
m6_1769 -> m6_1770  [key=0, style=solid];
m6_1770 -> m6_26  [key=2, style=dotted];
m6_1770 -> m6_1771  [key=0, style=solid];
m6_1771 -> m6_1772  [key=0, style=solid];
m6_1771 -> m6_24  [key=2, style=dotted];
m6_1771 -> m6_28  [key=2, style=dotted];
m6_1772 -> m6_1765  [color=blue, key=0, style=bold];
m6_646 -> m6_647  [key=0, style=solid];
m6_649 -> m6_22  [key=2, style=dotted];
m6_649 -> m6_23  [key=2, style=dotted];
m6_649 -> m6_650  [key=0, style=solid];
m6_649 -> m6_652  [key=2, style=dotted];
m6_649 -> m6_654  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_648 -> m6_649  [key=0, style=solid];
m6_648 -> m6_228  [key=2, style=dotted];
m6_650 -> m6_651  [key=0, style=solid];
m6_650 -> m6_42  [key=2, style=dotted];
m6_650 -> m6_653  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_647 -> m6_648  [key=0, style=solid];
m6_651 -> m6_646  [color=blue, key=0, style=bold];
m6_638 -> m6_639  [key=0, style=solid];
m6_639 -> m6_22  [key=2, style=dotted];
m6_639 -> m6_23  [key=2, style=dotted];
m6_639 -> m6_640  [key=0, style=solid];
m6_639 -> m6_643  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_640 -> m6_641  [key=0, style=solid];
m6_640 -> m6_42  [key=2, style=dotted];
m6_640 -> m6_642  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_641 -> m6_638  [color=blue, key=0, style=bold];
m6_1867 -> m6_1868  [key=0, style=solid];
m6_1869 -> m6_22  [key=2, style=dotted];
m6_1869 -> m6_23  [key=2, style=dotted];
m6_1869 -> m6_1870  [key=0, style=solid];
m6_1869 -> m6_1871  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1869 -> m6_1874  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1870 -> m6_25  [key=2, style=dotted];
m6_1870 -> m6_1871  [key=0, style=solid];
m6_1870 -> m6_24  [key=2, style=dotted];
m6_1868 -> m6_1869  [key=0, style=solid];
m6_1871 -> m6_1872  [key=0, style=solid];
m6_1871 -> m6_1613  [key=2, style=dotted];
m6_1871 -> m6_1873  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1872 -> m6_1867  [color=blue, key=0, style=bold];
m6_1488 -> m6_1489  [key=0, style=solid];
m6_1490 -> m6_22  [key=2, style=dotted];
m6_1490 -> m6_23  [key=2, style=dotted];
m6_1490 -> m6_1491  [key=0, style=solid];
m6_1490 -> m6_1492  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1490 -> m6_1493  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1490 -> m6_1494  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1490 -> m6_1495  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1491 -> m6_25  [key=2, style=dotted];
m6_1491 -> m6_1492  [key=0, style=solid];
m6_1491 -> m6_24  [key=2, style=dotted];
m6_1494 -> m6_25  [key=2, style=dotted];
m6_1494 -> m6_1495  [key=0, style=solid];
m6_1494 -> m6_24  [key=2, style=dotted];
m6_1489 -> m6_1490  [key=0, style=solid];
m6_1492 -> m6_26  [key=2, style=dotted];
m6_1492 -> m6_1493  [key=0, style=solid];
m6_1493 -> m6_26  [key=2, style=dotted];
m6_1493 -> m6_1494  [key=0, style=solid];
m6_1495 -> m6_26  [key=2, style=dotted];
m6_1495 -> m6_1496  [key=0, style=solid];
m6_1496 -> m6_1488  [color=blue, key=0, style=bold];
m6_1369 -> m6_1370  [key=0, style=solid];
m6_1371 -> m6_22  [key=2, style=dotted];
m6_1371 -> m6_23  [key=2, style=dotted];
m6_1371 -> m6_1372  [key=0, style=solid];
m6_1371 -> m6_1373  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1371 -> m6_1374  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1371 -> m6_1375  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1371 -> m6_1376  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1371 -> m6_1377  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1371 -> m6_1378  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1371 -> m6_1379  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1372 -> m6_25  [key=2, style=dotted];
m6_1372 -> m6_1373  [key=0, style=solid];
m6_1372 -> m6_24  [key=2, style=dotted];
m6_1374 -> m6_25  [key=2, style=dotted];
m6_1374 -> m6_1375  [key=0, style=solid];
m6_1374 -> m6_24  [key=2, style=dotted];
m6_1370 -> m6_1371  [key=0, style=solid];
m6_1373 -> m6_26  [key=2, style=dotted];
m6_1373 -> m6_1374  [key=0, style=solid];
m6_1375 -> m6_26  [key=2, style=dotted];
m6_1375 -> m6_1376  [key=0, style=solid];
m6_1376 -> m6_1377  [key=0, style=solid];
m6_1376 -> m6_115  [key=2, style=dotted];
m6_1377 -> m6_26  [key=2, style=dotted];
m6_1377 -> m6_1378  [key=0, style=solid];
m6_1378 -> m6_26  [key=2, style=dotted];
m6_1378 -> m6_1379  [key=0, style=solid];
m6_1379 -> m6_26  [key=2, style=dotted];
m6_1379 -> m6_1380  [key=0, style=solid];
m6_1380 -> m6_1369  [color=blue, key=0, style=bold];
m6_1407 -> m6_1408  [key=0, style=solid];
m6_1408 -> m6_22  [key=2, style=dotted];
m6_1408 -> m6_23  [key=2, style=dotted];
m6_1408 -> m6_1409  [key=0, style=solid];
m6_1408 -> m6_1412  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1409 -> m6_1410  [key=0, style=solid];
m6_1409 -> m6_42  [key=2, style=dotted];
m6_1409 -> m6_1411  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1410 -> m6_1407  [color=blue, key=0, style=bold];
m6_972 -> m6_973  [key=0, style=solid];
m6_975 -> m6_22  [key=2, style=dotted];
m6_975 -> m6_23  [key=2, style=dotted];
m6_975 -> m6_976  [key=0, style=solid];
m6_975 -> m6_977  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_975 -> m6_978  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_975 -> m6_979  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_975 -> m6_980  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_975 -> m6_981  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_975 -> m6_982  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_975 -> m6_983  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_975 -> m6_984  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_975 -> m6_985  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_982 -> m6_25  [key=2, style=dotted];
m6_982 -> m6_983  [key=0, style=solid];
m6_982 -> m6_24  [key=2, style=dotted];
m6_974 -> m6_975  [key=0, style=solid];
m6_974 -> m6_478  [key=2, style=dotted];
m6_976 -> m6_977  [key=0, style=solid];
m6_976 -> m6_24  [key=2, style=dotted];
m6_977 -> m6_26  [key=2, style=dotted];
m6_977 -> m6_978  [key=0, style=solid];
m6_978 -> m6_979  [key=0, style=solid];
m6_978 -> m6_24  [key=2, style=dotted];
m6_979 -> m6_26  [key=2, style=dotted];
m6_979 -> m6_980  [key=0, style=solid];
m6_980 -> m6_26  [key=2, style=dotted];
m6_980 -> m6_981  [key=0, style=solid];
m6_981 -> m6_26  [key=2, style=dotted];
m6_981 -> m6_982  [key=0, style=solid];
m6_981 -> m6_204  [key=2, style=dotted];
m6_983 -> m6_26  [key=2, style=dotted];
m6_983 -> m6_984  [key=0, style=solid];
m6_984 -> m6_985  [key=0, style=solid];
m6_984 -> m6_24  [key=2, style=dotted];
m6_984 -> m6_28  [key=2, style=dotted];
m6_985 -> m6_26  [key=2, style=dotted];
m6_985 -> m6_986  [key=0, style=solid];
m6_973 -> m6_974  [key=0, style=solid];
m6_986 -> m6_972  [color=blue, key=0, style=bold];
m6_1600 -> m6_1601  [key=0, style=solid];
m6_1602 -> m6_22  [key=2, style=dotted];
m6_1602 -> m6_23  [key=2, style=dotted];
m6_1602 -> m6_1603  [key=0, style=solid];
m6_1602 -> m6_1604  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1602 -> m6_1605  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1602 -> m6_1606  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_1603 -> m6_25  [key=2, style=dotted];
m6_1603 -> m6_1604  [key=0, style=solid];
m6_1603 -> m6_24  [key=2, style=dotted];
m6_1605 -> m6_25  [key=2, style=dotted];
m6_1605 -> m6_1606  [key=0, style=solid];
m6_1605 -> m6_24  [key=2, style=dotted];
m6_1601 -> m6_1602  [key=0, style=solid];
m6_1604 -> m6_26  [key=2, style=dotted];
m6_1604 -> m6_1605  [key=0, style=solid];
m6_1606 -> m6_26  [key=2, style=dotted];
m6_1606 -> m6_1607  [key=0, style=solid];
m6_1607 -> m6_1600  [color=blue, key=0, style=bold];
m6_1077 -> m6_1078  [key=0, style=solid];
m6_1079 -> m6_22  [key=2, style=dotted];
m6_1079 -> m6_1080  [key=0, style=solid];
m6_1078 -> m6_23  [key=2, style=dotted];
m6_1078 -> m6_1079  [key=0, style=solid];
m6_1080 -> m6_1081  [key=0, style=solid];
m6_1080 -> m6_85  [key=2, style=dotted];
m6_1080 -> m6_1082  [color=darkseagreen4, key=1, label=data, style=dashed];
m6_1083 -> m6_26  [key=2, style=dotted];
m6_1083 -> m6_1084  [key=0, style=solid];
m6_1081 -> m6_1082  [key=0, style=solid];
m6_1081 -> m6_1085  [key=2, style=dotted];
m6_1082 -> m6_1083  [key=0, style=solid];
m6_1082 -> m6_1086  [key=2, style=dotted];
m6_1084 -> m6_1077  [color=blue, key=0, style=bold];
m6_2113 -> m6_560  [color=darkseagreen4, key=1, label=total, style=dashed];
m6_2114 -> m6_576  [color=darkseagreen4, key=1, label=total, style=dashed];
m6_2112 -> m6_470  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_2115 -> m6_629  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_2116 -> m6_636  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_2119 -> m6_669  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_2143 -> m6_1818  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_2141 -> m6_1615  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_2144 -> m6_1874  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_2145 -> m6_1906  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_2145 -> m6_1909  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_2103 -> m6_44  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_2104 -> m6_61  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_2104 -> m6_64  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_2104 -> m6_67  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_2104 -> m6_70  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_2105 -> m6_110  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_2105 -> m6_113  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_2105 -> m6_117  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_2106 -> m6_133  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_2107 -> m6_170  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_2109 -> m6_277  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_2110 -> m6_295  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_2111 -> m6_308  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_2117 -> m6_643  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_2118 -> m6_654  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_2120 -> m6_822  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_2120 -> m6_825  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_2120 -> m6_828  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_2120 -> m6_831  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_2120 -> m6_834  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_2121 -> m6_859  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_2121 -> m6_862  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_2121 -> m6_865  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_2122 -> m6_897  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_2122 -> m6_900  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_2123 -> m6_1075  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_2124 -> m6_1153  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_2125 -> m6_1170  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_2126 -> m6_1183  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_2127 -> m6_1190  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_2128 -> m6_1197  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_2129 -> m6_1211  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_2130 -> m6_1218  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_2131 -> m6_1289  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_2132 -> m6_1391  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_2133 -> m6_1398  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_2134 -> m6_1405  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_2135 -> m6_1412  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_2136 -> m6_1419  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_2137 -> m6_1426  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_2138 -> m6_1559  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_2139 -> m6_1567  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_2140 -> m6_1598  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_2142 -> m6_1779  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_2146 -> m6_2031  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_2146 -> m6_2034  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_2146 -> m6_2037  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_2146 -> m6_2040  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_2146 -> m6_2043  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_2146 -> m6_2046  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_2108 -> m6_207  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m6_2108 -> m6_208  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m6_2108 -> m6_209  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m6_2108 -> m6_210  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m6_2108 -> m6_211  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m6_2108 -> m6_212  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m6_2108 -> m6_213  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m6_2108 -> m6_214  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m6_2108 -> m6_215  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m6_2108 -> m6_216  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m6_2108 -> m6_217  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m6_2108 -> m6_218  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m6_2147 -> m6_2066  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.ToggleReaderError", style=dashed];
m6_2147 -> m6_2069  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.ToggleReaderError", style=dashed];
m6_2147 -> m6_2071  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.ToggleReaderError", style=dashed];
m9_99 -> m9_100  [color=green, key=0, style=solid];
m9_100 -> m9_101  [color=green, key=0, style=solid];
m9_100 -> m9_102  [color=green, key=2, style=dotted];
m9_100 -> m9_103  [color=green, key=2, style=dotted];
m9_101 -> m9_99  [color=blue, key=0, style=bold];
m9_9 -> m9_10  [key=0, style=solid];
m9_9 -> m9_13  [color=darkorchid, key=3, label="Parameter variable System.Text.RegularExpressions.RegexOptions flag", style=bold];
m9_9 -> m9_15  [color=darkorchid, key=3, label="Parameter variable System.Text.RegularExpressions.RegexOptions flag", style=bold];
m9_9 -> m9_17  [color=darkorchid, key=3, label="Parameter variable System.Text.RegularExpressions.RegexOptions flag", style=bold];
m9_9 -> m9_20  [color=darkorchid, key=3, label="Parameter variable System.Text.RegularExpressions.RegexOptions flag", style=bold];
m9_10 -> m9_11  [key=0, style=solid];
m9_11 -> m9_9  [color=blue, key=0, style=bold];
m9_0 -> m9_1  [key=0, style=solid];
m9_0 -> m9_2  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m9_0 -> m9_5  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m9_1 -> m9_2  [key=0, style=solid];
m9_1 -> m9_4  [color=darkseagreen4, key=1, label=regex, style=dashed];
m9_1 -> m9_5  [color=darkseagreen4, key=1, label=regex, style=dashed];
m9_2 -> m9_3  [key=0, style=solid];
m9_2 -> m9_4  [color=darkseagreen4, key=1, label=bsonWriter, style=dashed];
m9_5 -> m9_6  [key=0, style=solid];
m9_5 -> m9_8  [key=2, style=dotted];
m9_4 -> m9_6  [key=0, style=solid];
m9_4 -> m9_7  [key=2, style=dotted];
m9_3 -> m9_4  [key=0, style=solid];
m9_3 -> m9_5  [key=0, style=solid];
m9_6 -> m9_0  [color=blue, key=0, style=bold];
m9_103 -> m9_99  [color=darkorchid, key=3, label="Parameter variable System.Type objectType", style=bold];
m9_103 -> m9_104  [key=0, style=solid];
m9_104 -> m9_105  [key=0, style=solid];
m9_105 -> m9_103  [color=blue, key=0, style=bold];
m9_102 -> m9_4  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.RegexConverter", style=dashed];
m9_102 -> m9_5  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.RegexConverter", style=dashed];
m9_102 -> m9_13  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.RegexConverter", style=dashed];
m9_102 -> m9_15  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.RegexConverter", style=dashed];
m9_102 -> m9_17  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.RegexConverter", style=dashed];
m9_102 -> m9_20  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.RegexConverter", style=dashed];
m9_102 -> m9_43  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.RegexConverter", style=dashed];
m9_102 -> m9_45  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.RegexConverter", style=dashed];
m9_102 -> m9_100  [color=green, key=1, label="Newtonsoft.Json.Converters.RegexConverter", style=dashed];
m9_40 -> m9_41  [key=0, style=solid];
m9_40 -> m9_43  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m9_40 -> m9_45  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m9_40 -> m9_49  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m9_40 -> m9_50  [color=darkorchid, key=3, label="method methodReturn object ReadJson", style=bold];
m9_40 -> m9_51  [color=darkorchid, key=3, label="method methodReturn object ReadJson", style=bold];
m9_40 -> m9_12  [color=darkorchid, key=3, label="method methodReturn object ReadJson", style=bold];
m9_41 -> m9_42  [key=0, style=solid];
m9_41 -> m9_44  [key=0, style=solid];
m9_41 -> m9_46  [key=0, style=solid];
m9_43 -> m9_48  [key=0, style=solid];
m9_43 -> m9_50  [key=2, style=dotted];
m9_45 -> m9_48  [key=0, style=solid];
m9_45 -> m9_51  [key=2, style=dotted];
m9_49 -> m9_48  [key=0, style=solid];
m9_49 -> m9_52  [key=2, style=dotted];
m9_42 -> m9_43  [key=0, style=solid];
m9_44 -> m9_45  [key=0, style=solid];
m9_46 -> m9_47  [key=0, style=solid];
m9_47 -> m9_48  [key=0, style=solid];
m9_48 -> m9_40  [color=blue, key=0, style=bold];
m9_7 -> m9_12  [key=0, style=solid];
m9_7 -> m9_13  [color=darkseagreen4, key=1, label="System.Text.RegularExpressions.Regex", style=dashed];
m9_7 -> m9_15  [color=darkseagreen4, key=1, label="System.Text.RegularExpressions.Regex", style=dashed];
m9_7 -> m9_17  [color=darkseagreen4, key=1, label="System.Text.RegularExpressions.Regex", style=dashed];
m9_7 -> m9_20  [color=darkseagreen4, key=1, label="System.Text.RegularExpressions.Regex", style=dashed];
m9_7 -> m9_22  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonWriter", style=dashed];
m9_7 -> m9_2  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Bson.BsonWriter writer", style=bold];
m9_7 -> m9_1  [color=darkorchid, key=3, label="Parameter variable System.Text.RegularExpressions.Regex regex", style=bold];
m9_12 -> m9_13  [key=0, style=solid];
m9_12 -> m9_14  [color=darkseagreen4, key=1, label=options, style=dashed];
m9_12 -> m9_16  [color=darkseagreen4, key=1, label=options, style=dashed];
m9_12 -> m9_18  [color=darkseagreen4, key=1, label=options, style=dashed];
m9_12 -> m9_19  [color=darkseagreen4, key=1, label=options, style=dashed];
m9_12 -> m9_12  [color=darkorchid, key=3, label="Local variable string options", style=bold];
m9_13 -> m9_14  [key=0, style=solid];
m9_13 -> m9_15  [key=0, style=solid];
m9_13 -> m9_9  [key=2, style=dotted];
m9_15 -> m9_16  [key=0, style=solid];
m9_15 -> m9_17  [key=0, style=solid];
m9_15 -> m9_9  [key=2, style=dotted];
m9_17 -> m9_18  [key=0, style=solid];
m9_17 -> m9_19  [key=0, style=solid];
m9_17 -> m9_9  [key=2, style=dotted];
m9_20 -> m9_21  [key=0, style=solid];
m9_20 -> m9_22  [key=0, style=solid];
m9_20 -> m9_9  [key=2, style=dotted];
m9_22 -> m9_23  [key=0, style=solid];
m9_22 -> m9_24  [key=2, style=dotted];
m9_22 -> m9_25  [key=2, style=dotted];
m9_14 -> m9_15  [key=0, style=solid];
m9_14 -> m9_14  [color=darkseagreen4, key=1, label=options, style=dashed];
m9_14 -> m9_16  [color=darkseagreen4, key=1, label=options, style=dashed];
m9_14 -> m9_18  [color=darkseagreen4, key=1, label=options, style=dashed];
m9_14 -> m9_19  [color=darkseagreen4, key=1, label=options, style=dashed];
m9_16 -> m9_17  [key=0, style=solid];
m9_16 -> m9_16  [color=darkseagreen4, key=1, label=options, style=dashed];
m9_16 -> m9_18  [color=darkseagreen4, key=1, label=options, style=dashed];
m9_16 -> m9_19  [color=darkseagreen4, key=1, label=options, style=dashed];
m9_18 -> m9_19  [key=0, style=solid];
m9_18 -> m9_18  [color=darkseagreen4, key=1, label=options, style=dashed];
m9_19 -> m9_20  [key=0, style=solid];
m9_19 -> m9_19  [color=darkseagreen4, key=1, label=options, style=dashed];
m9_19 -> m9_21  [color=darkseagreen4, key=1, label=options, style=dashed];
m9_19 -> m9_22  [color=darkseagreen4, key=1, label=options, style=dashed];
m9_21 -> m9_22  [key=0, style=solid];
m9_21 -> m9_21  [color=darkseagreen4, key=1, label=options, style=dashed];
m9_23 -> m9_7  [color=blue, key=0, style=bold];
m9_8 -> m9_26  [key=0, style=solid];
m9_8 -> m9_27  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m9_8 -> m9_28  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m9_8 -> m9_29  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m9_8 -> m9_30  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m9_8 -> m9_31  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m9_8 -> m9_32  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m9_8 -> m9_0  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonSerializer serializer", style=bold];
m9_8 -> m9_1  [color=darkorchid, key=3, label="Parameter variable System.Text.RegularExpressions.Regex regex", style=bold];
m9_26 -> m9_27  [key=0, style=solid];
m9_26 -> m9_28  [color=darkseagreen4, key=1, label=resolver, style=dashed];
m9_26 -> m9_30  [color=darkseagreen4, key=1, label=resolver, style=dashed];
m9_27 -> m9_28  [key=0, style=solid];
m9_27 -> m9_34  [key=2, style=dotted];
m9_28 -> m9_29  [key=0, style=solid];
m9_28 -> m9_35  [key=2, style=dotted];
m9_28 -> m9_36  [key=2, style=dotted];
m9_29 -> m9_30  [key=0, style=solid];
m9_29 -> m9_24  [key=2, style=dotted];
m9_29 -> m9_37  [key=2, style=dotted];
m9_30 -> m9_31  [key=0, style=solid];
m9_30 -> m9_35  [key=2, style=dotted];
m9_30 -> m9_36  [key=2, style=dotted];
m9_31 -> m9_32  [key=0, style=solid];
m9_31 -> m9_38  [key=2, style=dotted];
m9_32 -> m9_33  [key=0, style=solid];
m9_32 -> m9_39  [key=2, style=dotted];
m9_33 -> m9_8  [color=blue, key=0, style=bold];
m9_51 -> m9_53  [key=0, style=solid];
m9_51 -> m9_40  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m9_53 -> m9_54  [key=0, style=solid];
m9_53 -> m9_55  [color=darkseagreen4, key=1, label=regexText, style=dashed];
m9_53 -> m9_56  [color=darkseagreen4, key=1, label=regexText, style=dashed];
m9_54 -> m9_55  [key=0, style=solid];
m9_54 -> m9_70  [key=2, style=dotted];
m9_54 -> m9_56  [color=darkseagreen4, key=1, label=patternOptionDelimiterIndex, style=dashed];
m9_55 -> m9_56  [key=0, style=solid];
m9_55 -> m9_71  [key=2, style=dotted];
m9_55 -> m9_68  [color=darkseagreen4, key=1, label=patternText, style=dashed];
m9_56 -> m9_57  [key=0, style=solid];
m9_56 -> m9_72  [key=2, style=dotted];
m9_56 -> m9_58  [color=darkseagreen4, key=1, label=optionsText, style=dashed];
m9_68 -> m9_69  [key=0, style=solid];
m9_68 -> m9_73  [key=2, style=dotted];
m9_57 -> m9_58  [key=0, style=solid];
m9_57 -> m9_61  [color=darkseagreen4, key=1, label=options, style=dashed];
m9_57 -> m9_68  [color=darkseagreen4, key=1, label=options, style=dashed];
m9_57 -> m9_57  [color=darkorchid, key=3, label="Local variable System.Text.RegularExpressions.RegexOptions options", style=bold];
m9_58 -> m9_59  [key=0, style=solid];
m9_58 -> m9_68  [key=0, style=solid];
m9_61 -> m9_58  [key=0, style=solid];
m9_61 -> m9_61  [color=darkseagreen4, key=1, label=options, style=dashed];
m9_61 -> m9_63  [color=darkseagreen4, key=1, label=options, style=dashed];
m9_59 -> m9_60  [key=0, style=solid];
m9_59 -> m9_62  [key=0, style=solid];
m9_59 -> m9_64  [key=0, style=solid];
m9_59 -> m9_66  [key=0, style=solid];
m9_60 -> m9_61  [key=0, style=solid];
m9_62 -> m9_63  [key=0, style=solid];
m9_64 -> m9_65  [key=0, style=solid];
m9_66 -> m9_67  [key=0, style=solid];
m9_63 -> m9_58  [key=0, style=solid];
m9_63 -> m9_63  [color=darkseagreen4, key=1, label=options, style=dashed];
m9_63 -> m9_65  [color=darkseagreen4, key=1, label=options, style=dashed];
m9_65 -> m9_58  [key=0, style=solid];
m9_65 -> m9_65  [color=darkseagreen4, key=1, label=options, style=dashed];
m9_65 -> m9_67  [color=darkseagreen4, key=1, label=options, style=dashed];
m9_67 -> m9_58  [key=0, style=solid];
m9_67 -> m9_67  [color=darkseagreen4, key=1, label=options, style=dashed];
m9_67 -> m9_68  [color=darkseagreen4, key=1, label=options, style=dashed];
m9_69 -> m9_51  [color=blue, key=0, style=bold];
m9_50 -> m9_74  [key=0, style=solid];
m9_50 -> m9_76  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m9_50 -> m9_77  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m9_50 -> m9_79  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m9_50 -> m9_80  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m9_50 -> m9_81  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m9_50 -> m9_83  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m9_50 -> m9_85  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m9_50 -> m9_86  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m9_50 -> m9_90  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m9_50 -> m9_92  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m9_50 -> m9_40  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonSerializer serializer", style=bold];
m9_74 -> m9_75  [key=0, style=solid];
m9_74 -> m9_89  [color=darkseagreen4, key=1, label=pattern, style=dashed];
m9_74 -> m9_91  [color=darkseagreen4, key=1, label=pattern, style=dashed];
m9_74 -> m9_12  [color=darkorchid, key=3, label="Local variable string pattern", style=bold];
m9_76 -> m9_77  [key=0, style=solid];
m9_76 -> m9_92  [key=0, style=solid];
m9_76 -> m9_94  [key=2, style=dotted];
m9_77 -> m9_78  [key=0, style=solid];
m9_77 -> m9_87  [key=0, style=solid];
m9_77 -> m9_88  [key=0, style=solid];
m9_79 -> m9_80  [key=0, style=solid];
m9_79 -> m9_95  [key=2, style=dotted];
m9_79 -> m9_82  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m9_79 -> m9_84  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m9_80 -> m9_81  [key=0, style=solid];
m9_80 -> m9_82  [key=0, style=solid];
m9_80 -> m9_94  [key=2, style=dotted];
m9_81 -> m9_93  [key=0, style=solid];
m9_81 -> m9_52  [key=2, style=dotted];
m9_83 -> m9_76  [key=0, style=solid];
m9_83 -> m9_89  [color=darkseagreen4, key=1, label=pattern, style=dashed];
m9_83 -> m9_91  [color=darkseagreen4, key=1, label=pattern, style=dashed];
m9_85 -> m9_76  [key=0, style=solid];
m9_85 -> m9_97  [key=2, style=dotted];
m9_85 -> m9_91  [color=darkseagreen4, key=1, label=options, style=dashed];
m9_86 -> m9_76  [key=0, style=solid];
m9_86 -> m9_98  [key=2, style=dotted];
m9_90 -> m9_93  [key=0, style=solid];
m9_90 -> m9_52  [key=2, style=dotted];
m9_92 -> m9_93  [key=0, style=solid];
m9_92 -> m9_52  [key=2, style=dotted];
m9_75 -> m9_76  [key=0, style=solid];
m9_75 -> m9_91  [color=darkseagreen4, key=1, label=options, style=dashed];
m9_75 -> m9_12  [color=darkorchid, key=3, label="Local variable System.Text.RegularExpressions.RegexOptions? options", style=bold];
m9_89 -> m9_90  [key=0, style=solid];
m9_89 -> m9_91  [key=0, style=solid];
m9_91 -> m9_93  [key=0, style=solid];
m9_91 -> m9_73  [key=2, style=dotted];
m9_78 -> m9_79  [key=0, style=solid];
m9_87 -> m9_76  [key=0, style=solid];
m9_88 -> m9_89  [key=0, style=solid];
m9_82 -> m9_83  [key=0, style=solid];
m9_82 -> m9_84  [key=0, style=solid];
m9_82 -> m9_96  [key=2, style=dotted];
m9_84 -> m9_85  [key=0, style=solid];
m9_84 -> m9_86  [key=0, style=solid];
m9_84 -> m9_96  [key=2, style=dotted];
m9_93 -> m9_50  [color=blue, key=0, style=bold];
m10_29 -> m10_14  [color=green, key=3, label="method methodReturn object ReadJson", style=bold];
m10_29 -> m10_26  [key=0, style=solid];
m10_29 -> m10_27  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m10_29 -> m10_28  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m10_29 -> m10_30  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m10_29 -> m10_31  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m10_29 -> m10_32  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m10_29 -> m10_33  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m10_29 -> m10_35  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m10_29 -> m10_37  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m10_29 -> m10_38  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m10_29 -> m10_40  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m10_29 -> m10_41  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m10_29 -> m10_42  [key=0, style=solid];
m10_25 -> m10_26  [key=0, style=solid];
m10_25 -> m10_27  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m10_25 -> m10_28  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m10_25 -> m10_30  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m10_25 -> m10_31  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m10_25 -> m10_32  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m10_25 -> m10_33  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m10_25 -> m10_35  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m10_25 -> m10_37  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m10_25 -> m10_38  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m10_25 -> m10_40  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m10_25 -> m10_41  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m10_25 -> m10_29  [color=darkorchid, key=3, label="method methodReturn object ReadJson", style=bold];
m10_26 -> m10_27  [key=0, style=solid];
m10_26 -> m10_30  [key=0, style=solid];
m10_27 -> m10_28  [key=0, style=solid];
m10_27 -> m10_29  [key=0, style=solid];
m10_27 -> m10_43  [key=2, style=dotted];
m10_28 -> m10_42  [key=0, style=solid];
m10_28 -> m10_44  [key=2, style=dotted];
m10_28 -> m10_45  [key=2, style=dotted];
m10_30 -> m10_31  [key=0, style=solid];
m10_30 -> m10_43  [key=2, style=dotted];
m10_30 -> m10_34  [color=darkseagreen4, key=1, label=isNullable, style=dashed];
m10_31 -> m10_32  [key=0, style=solid];
m10_31 -> m10_46  [key=2, style=dotted];
m10_31 -> m10_34  [color=darkseagreen4, key=1, label=t, style=dashed];
m10_31 -> m10_38  [color=darkseagreen4, key=1, label=t, style=dashed];
m10_32 -> m10_33  [key=0, style=solid];
m10_32 -> m10_35  [key=0, style=solid];
m10_33 -> m10_34  [key=0, style=solid];
m10_33 -> m10_47  [key=2, style=dotted];
m10_35 -> m10_36  [key=0, style=solid];
m10_35 -> m10_39  [key=0, style=solid];
m10_35 -> m10_41  [key=0, style=solid];
m10_37 -> m10_41  [key=0, style=solid];
m10_37 -> m10_44  [key=2, style=dotted];
m10_37 -> m10_45  [key=2, style=dotted];
m10_38 -> m10_42  [key=0, style=solid];
m10_38 -> m10_49  [key=2, style=dotted];
m10_40 -> m10_42  [key=0, style=solid];
m10_40 -> m10_50  [key=2, style=dotted];
m10_40 -> m10_51  [key=2, style=dotted];
m10_40 -> m10_52  [key=2, style=dotted];
m10_41 -> m10_42  [key=0, style=solid];
m10_41 -> m10_44  [key=2, style=dotted];
m10_41 -> m10_45  [key=2, style=dotted];
m10_34 -> m10_42  [key=0, style=solid];
m10_34 -> m10_48  [key=2, style=dotted];
m10_36 -> m10_37  [key=0, style=solid];
m10_36 -> m10_38  [key=0, style=solid];
m10_39 -> m10_40  [key=0, style=solid];
m10_42 -> m10_25  [color=blue, key=0, style=bold];
m10_42 -> m10_29  [color=blue, key=0, style=bold];
m10_3 -> m10_4  [key=0, style=solid];
m10_4 -> m10_5  [key=0, style=solid];
m10_5 -> m10_3  [color=blue, key=0, style=bold];
m10_0 -> m10_1  [key=0, style=solid];
m10_1 -> m10_2  [key=0, style=solid];
m10_2 -> m10_0  [color=blue, key=0, style=bold];
m10_6 -> m10_7  [key=0, style=solid];
m10_6 -> m10_8  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_6 -> m10_10  [color=darkseagreen4, key=1, label=object, style=dashed];
m10_6 -> m10_13  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_6 -> m10_16  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_6 -> m10_14  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_6 -> m10_15  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_7 -> m10_8  [key=0, style=solid];
m10_7 -> m10_10  [key=0, style=solid];
m10_8 -> m10_9  [key=0, style=solid];
m10_8 -> m10_18  [key=2, style=dotted];
m10_10 -> m10_11  [key=0, style=solid];
m10_10 -> m10_14  [color=darkseagreen4, key=1, label=e, style=dashed];
m10_13 -> m10_17  [key=0, style=solid];
m10_13 -> m10_21  [key=2, style=dotted];
m10_13 -> m10_14  [color=green, key=0, style=solid];
m10_13 -> m10_15  [color=green, key=0, style=solid];
m10_16 -> m10_17  [key=0, style=solid];
m10_16 -> m10_24  [key=2, style=dotted];
m10_9 -> m10_17  [key=0, style=solid];
m10_11 -> m10_12  [key=0, style=solid];
m10_11 -> m10_19  [key=2, style=dotted];
m10_11 -> m10_15  [color=darkseagreen4, key=1, label=enumName, style=dashed];
m10_11 -> m10_14  [color=green, key=1, label=enumName, style=dashed];
m10_14 -> m10_15  [key=0, style=solid];
m10_14 -> m10_22  [key=2, style=dotted];
m10_14 -> m10_17  [color=green, key=0, style=solid];
m10_14 -> m10_44  [color=green, key=2, style=dotted];
m10_14 -> m10_24  [color=green, key=2, style=dotted];
m10_12 -> m10_13  [color=green, key=0, style=solid];
m10_12 -> m10_14  [key=0, style=solid];
m10_12 -> m10_20  [key=2, style=dotted];
m10_15 -> m10_16  [key=0, style=solid];
m10_15 -> m10_23  [key=2, style=dotted];
m10_15 -> m10_17  [key=0, style=solid];
m10_15 -> m10_21  [key=2, style=dotted];
m10_17 -> m10_6  [color=blue, key=0, style=bold];
m10_53 -> m10_54  [key=0, style=solid];
m10_54 -> m10_55  [key=0, style=solid];
m10_54 -> m10_43  [key=2, style=dotted];
m10_54 -> m10_46  [key=2, style=dotted];
m10_55 -> m10_56  [key=0, style=solid];
m10_55 -> m10_57  [key=2, style=dotted];
m10_56 -> m10_53  [color=blue, key=0, style=bold];
m10_58 -> m10_1  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.StringEnumConverter", style=dashed];
m10_58 -> m10_4  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.StringEnumConverter", style=dashed];
m10_58 -> m10_15  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.StringEnumConverter", style=dashed];
m10_58 -> m10_34  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.StringEnumConverter", style=dashed];
m10_58 -> m10_36  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.StringEnumConverter", style=dashed];
m10_58 -> m10_13  [color=green, key=1, label="Newtonsoft.Json.Converters.StringEnumConverter", style=dashed];
m11_87 -> m11_88  [key=0, style=solid];
m11_87 -> m11_87  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_91 -> m11_20  [key=2, style=dotted];
m11_91 -> m11_92  [key=0, style=solid];
m11_91 -> m11_21  [key=2, style=dotted];
m11_91 -> m11_24  [key=2, style=dotted];
m11_91 -> m11_25  [key=2, style=dotted];
m11_88 -> m11_91  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_88 -> m11_89  [key=0, style=solid];
m11_88 -> m11_94  [key=2, style=dotted];
m11_88 -> m11_90  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_88 -> m11_22  [key=2, style=dotted];
m11_88 -> m11_23  [key=2, style=dotted];
m11_88 -> m11_92  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_88 -> m11_93  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_88 -> m11_95  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_88 -> m11_96  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_88 -> m11_97  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_88 -> m11_98  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_90 -> m11_91  [key=0, style=solid];
m11_90 -> m11_26  [key=2, style=dotted];
m11_92 -> m11_93  [key=0, style=solid];
m11_92 -> m11_30  [key=2, style=dotted];
m11_92 -> m11_26  [key=2, style=dotted];
m11_89 -> m11_90  [key=0, style=solid];
m11_89 -> m11_24  [key=2, style=dotted];
m11_89 -> m11_25  [key=2, style=dotted];
m11_93 -> m11_87  [color=blue, key=0, style=bold];
m11_93 -> m11_94  [key=0, style=solid];
m11_93 -> m11_24  [key=2, style=dotted];
m11_93 -> m11_25  [key=2, style=dotted];
m11_836 -> m11_837  [key=0, style=solid];
m11_837 -> m11_838  [key=0, style=solid];
m11_837 -> m11_793  [color=darkorchid, key=3, label="Local variable Newtonsoft.Json.JsonTextReader reader", style=bold];
m11_838 -> m11_839  [key=0, style=solid];
m11_838 -> m11_22  [key=2, style=dotted];
m11_838 -> m11_23  [key=2, style=dotted];
m11_839 -> m11_840  [key=0, style=solid];
m11_839 -> m11_115  [key=2, style=dotted];
m11_839 -> m11_26  [key=2, style=dotted];
m11_840 -> m11_841  [key=0, style=solid];
m11_840 -> m11_22  [key=2, style=dotted];
m11_840 -> m11_23  [key=2, style=dotted];
m11_841 -> m11_842  [key=0, style=solid];
m11_841 -> m11_115  [key=2, style=dotted];
m11_841 -> m11_26  [key=2, style=dotted];
m11_842 -> m11_843  [key=0, style=solid];
m11_842 -> m11_22  [key=2, style=dotted];
m11_842 -> m11_23  [key=2, style=dotted];
m11_843 -> m11_844  [key=0, style=solid];
m11_843 -> m11_115  [key=2, style=dotted];
m11_843 -> m11_26  [key=2, style=dotted];
m11_844 -> m11_845  [key=0, style=solid];
m11_844 -> m11_22  [key=2, style=dotted];
m11_844 -> m11_23  [key=2, style=dotted];
m11_845 -> m11_846  [key=0, style=solid];
m11_845 -> m11_115  [key=2, style=dotted];
m11_845 -> m11_26  [key=2, style=dotted];
m11_846 -> m11_847  [key=0, style=solid];
m11_846 -> m11_22  [key=2, style=dotted];
m11_846 -> m11_23  [key=2, style=dotted];
m11_846 -> m11_859  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_847 -> m11_848  [key=0, style=solid];
m11_847 -> m11_42  [key=2, style=dotted];
m11_847 -> m11_858  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_848 -> m11_849  [key=0, style=solid];
m11_848 -> m11_22  [key=2, style=dotted];
m11_848 -> m11_23  [key=2, style=dotted];
m11_848 -> m11_850  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_848 -> m11_862  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_849 -> m11_850  [key=0, style=solid];
m11_850 -> m11_851  [key=0, style=solid];
m11_850 -> m11_42  [key=2, style=dotted];
m11_850 -> m11_861  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_851 -> m11_852  [key=0, style=solid];
m11_851 -> m11_22  [key=2, style=dotted];
m11_851 -> m11_23  [key=2, style=dotted];
m11_852 -> m11_853  [key=0, style=solid];
m11_852 -> m11_115  [key=2, style=dotted];
m11_852 -> m11_26  [key=2, style=dotted];
m11_853 -> m11_854  [key=0, style=solid];
m11_853 -> m11_22  [key=2, style=dotted];
m11_853 -> m11_23  [key=2, style=dotted];
m11_854 -> m11_855  [key=0, style=solid];
m11_854 -> m11_115  [key=2, style=dotted];
m11_854 -> m11_26  [key=2, style=dotted];
m11_855 -> m11_856  [key=0, style=solid];
m11_855 -> m11_22  [key=2, style=dotted];
m11_855 -> m11_23  [key=2, style=dotted];
m11_855 -> m11_865  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_856 -> m11_857  [key=0, style=solid];
m11_856 -> m11_42  [key=2, style=dotted];
m11_856 -> m11_864  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_857 -> m11_836  [color=blue, key=0, style=bold];
m11_152 -> m11_153  [key=0, style=solid];
m11_152 -> m11_26  [key=2, style=dotted];
m11_155 -> m11_20  [key=2, style=dotted];
m11_155 -> m11_156  [key=0, style=solid];
m11_155 -> m11_148  [key=2, style=dotted];
m11_155 -> m11_26  [key=2, style=dotted];
m11_158 -> m11_5  [key=2, style=dotted];
m11_158 -> m11_159  [key=0, style=solid];
m11_158 -> m11_26  [key=2, style=dotted];
m11_159 -> m11_5  [key=2, style=dotted];
m11_159 -> m11_160  [key=0, style=solid];
m11_159 -> m11_135  [color=blue, key=0, style=bold];
m11_154 -> m11_155  [key=0, style=solid];
m11_154 -> m11_147  [key=2, style=dotted];
m11_154 -> m11_156  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m11_154 -> m11_160  [key=2, style=dotted];
m11_154 -> m11_26  [key=2, style=dotted];
m11_156 -> m11_157  [key=0, style=solid];
m11_156 -> m11_161  [key=0, style=solid];
m11_156 -> m11_149  [key=2, style=dotted];
m11_156 -> m11_150  [key=2, style=dotted];
m11_156 -> m11_151  [key=2, style=dotted];
m11_156 -> m11_26  [key=2, style=dotted];
m11_157 -> m11_158  [key=0, style=solid];
m11_157 -> m11_24  [key=2, style=dotted];
m11_157 -> m11_25  [key=2, style=dotted];
m11_160 -> m11_162  [key=0, style=solid];
m11_153 -> m11_154  [key=0, style=solid];
m11_153 -> m11_156  [color=darkseagreen4, key=1, label=json, style=dashed];
m11_153 -> m11_153  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_153 -> m11_24  [key=2, style=dotted];
m11_153 -> m11_25  [key=2, style=dotted];
m11_161 -> m11_162  [key=0, style=solid];
m11_161 -> m11_163  [key=2, style=dotted];
m11_162 -> m11_152  [color=blue, key=0, style=bold];
m11_162 -> m11_163  [key=0, style=solid];
m11_162 -> m11_162  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_1608 -> m11_1609  [key=0, style=solid];
m11_1609 -> m11_1610  [key=0, style=solid];
m11_1609 -> m11_1609  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_1610 -> m11_1611  [key=0, style=solid];
m11_1610 -> m11_22  [key=2, style=dotted];
m11_1610 -> m11_23  [key=2, style=dotted];
m11_1610 -> m11_1615  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1611 -> m11_1612  [key=0, style=solid];
m11_1611 -> m11_1613  [key=2, style=dotted];
m11_1611 -> m11_1614  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_1612 -> m11_1608  [color=blue, key=0, style=bold];
m11_1421 -> m11_1422  [key=0, style=solid];
m11_1422 -> m11_1423  [key=0, style=solid];
m11_1422 -> m11_22  [key=2, style=dotted];
m11_1422 -> m11_23  [key=2, style=dotted];
m11_1422 -> m11_1426  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1423 -> m11_1424  [key=0, style=solid];
m11_1423 -> m11_42  [key=2, style=dotted];
m11_1423 -> m11_1425  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_1424 -> m11_1421  [color=blue, key=0, style=bold];
m11_172 -> m11_173  [key=0, style=solid];
m11_172 -> m11_5  [key=2, style=dotted];
m11_173 -> m11_174  [key=0, style=solid];
m11_173 -> m11_173  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_173 -> m11_5  [key=2, style=dotted];
m11_174 -> m11_175  [key=0, style=solid];
m11_174 -> m11_22  [key=2, style=dotted];
m11_174 -> m11_23  [key=2, style=dotted];
m11_174 -> m11_176  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_174 -> m11_177  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_174 -> m11_178  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_174 -> m11_179  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_174 -> m11_180  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_174 -> m11_181  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_174 -> m11_182  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_174 -> m11_183  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_174 -> m11_184  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_174 -> m11_185  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_174 -> m11_186  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_174 -> m11_187  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_174 -> m11_188  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_174 -> m11_189  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_174 -> m11_190  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_174 -> m11_5  [key=2, style=dotted];
m11_175 -> m11_176  [key=0, style=solid];
m11_175 -> m11_24  [key=2, style=dotted];
m11_175 -> m11_25  [key=2, style=dotted];
m11_175 -> m11_5  [key=2, style=dotted];
m11_176 -> m11_177  [key=0, style=solid];
m11_176 -> m11_26  [key=2, style=dotted];
m11_176 -> m11_185  [key=2, style=dotted];
m11_177 -> m11_178  [key=0, style=solid];
m11_177 -> m11_24  [key=2, style=dotted];
m11_177 -> m11_25  [key=2, style=dotted];
m11_177 -> m11_20  [key=2, style=dotted];
m11_177 -> m11_21  [key=2, style=dotted];
m11_177 -> m11_179  [color=darkseagreen4, key=1, label=json2, style=dashed];
m11_178 -> m11_179  [key=0, style=solid];
m11_178 -> m11_26  [key=2, style=dotted];
m11_178 -> m11_30  [key=2, style=dotted];
m11_179 -> m11_180  [key=0, style=solid];
m11_179 -> m11_24  [key=2, style=dotted];
m11_179 -> m11_25  [key=2, style=dotted];
m11_179 -> m11_181  [color=darkseagreen4, key=1, label=bars, style=dashed];
m11_179 -> m11_182  [color=darkseagreen4, key=1, label=bars, style=dashed];
m11_179 -> m11_183  [color=darkseagreen4, key=1, label=bars, style=dashed];
m11_179 -> m11_10  [key=2, style=dotted];
m11_180 -> m11_181  [key=0, style=solid];
m11_180 -> m11_26  [key=2, style=dotted];
m11_180 -> m11_5  [key=2, style=dotted];
m11_181 -> m11_182  [key=0, style=solid];
m11_181 -> m11_24  [key=2, style=dotted];
m11_181 -> m11_25  [key=2, style=dotted];
m11_181 -> m11_5  [key=2, style=dotted];
m11_182 -> m11_183  [key=0, style=solid];
m11_182 -> m11_26  [key=2, style=dotted];
m11_182 -> m11_5  [key=2, style=dotted];
m11_183 -> m11_184  [key=0, style=solid];
m11_183 -> m11_24  [key=2, style=dotted];
m11_183 -> m11_25  [key=2, style=dotted];
m11_183 -> m11_5  [key=2, style=dotted];
m11_184 -> m11_185  [key=0, style=solid];
m11_184 -> m11_26  [key=2, style=dotted];
m11_184 -> m11_164  [color=blue, key=0, style=bold];
m11_185 -> m11_186  [key=0, style=solid];
m11_185 -> m11_24  [key=2, style=dotted];
m11_185 -> m11_25  [key=2, style=dotted];
m11_186 -> m11_187  [key=0, style=solid];
m11_186 -> m11_26  [key=2, style=dotted];
m11_187 -> m11_188  [key=0, style=solid];
m11_187 -> m11_26  [key=2, style=dotted];
m11_187 -> m11_14  [key=2, style=dotted];
m11_187 -> m11_189  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_188 -> m11_189  [key=0, style=solid];
m11_188 -> m11_24  [key=2, style=dotted];
m11_188 -> m11_25  [key=2, style=dotted];
m11_188 -> m11_186  [color=blue, key=0, style=bold];
m11_189 -> m11_190  [key=0, style=solid];
m11_189 -> m11_26  [key=2, style=dotted];
m11_190 -> m11_191  [key=0, style=solid];
m11_190 -> m11_26  [key=2, style=dotted];
m11_190 -> m11_20  [key=2, style=dotted];
m11_190 -> m11_38  [key=2, style=dotted];
m11_191 -> m11_172  [color=blue, key=0, style=bold];
m11_191 -> m11_189  [color=blue, key=0, style=bold];
m11_244 -> m11_245  [key=0, style=solid];
m11_245 -> m11_20  [key=2, style=dotted];
m11_245 -> m11_243  [key=2, style=dotted];
m11_245 -> m11_246  [key=0, style=solid];
m11_245 -> m11_245  [color=darkorchid, key=3, label="Local variable string input", style=bold];
m11_247 -> m11_20  [key=2, style=dotted];
m11_247 -> m11_243  [key=2, style=dotted];
m11_247 -> m11_248  [key=0, style=solid];
m11_247 -> m11_249  [key=0, style=solid];
m11_247 -> m11_250  [key=2, style=dotted];
m11_246 -> m11_5  [key=2, style=dotted];
m11_246 -> m11_247  [key=0, style=solid];
m11_246 -> m11_22  [key=2, style=dotted];
m11_246 -> m11_23  [key=2, style=dotted];
m11_246 -> m11_248  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_248 -> m11_5  [key=2, style=dotted];
m11_248 -> m11_249  [key=0, style=solid];
m11_248 -> m11_247  [key=0, style=solid];
m11_248 -> m11_251  [key=2, style=dotted];
m11_249 -> m11_244  [color=blue, key=0, style=bold];
m11_479 -> m11_480  [key=0, style=solid];
m11_480 -> m11_481  [key=0, style=solid];
m11_480 -> m11_485  [color=darkseagreen4, key=1, label=valueCount, style=dashed];
m11_480 -> m11_493  [color=darkseagreen4, key=1, label=valueCount, style=dashed];
m11_480 -> m11_480  [color=darkorchid, key=3, label="Local variable int valueCount", style=bold];
m11_481 -> m11_482  [key=0, style=solid];
m11_481 -> m11_500  [key=2, style=dotted];
m11_481 -> m11_489  [color=darkseagreen4, key=1, label=sw, style=dashed];
m11_485 -> m11_486  [key=0, style=solid];
m11_485 -> m11_488  [key=0, style=solid];
m11_485 -> m11_485  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m11_493 -> m11_494  [key=0, style=solid];
m11_493 -> m11_497  [key=0, style=solid];
m11_493 -> m11_485  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m11_482 -> m11_483  [key=0, style=solid];
m11_482 -> m11_501  [key=2, style=dotted];
m11_482 -> m11_486  [color=darkseagreen4, key=1, label=writer, style=dashed];
m11_482 -> m11_488  [color=darkseagreen4, key=1, label=writer, style=dashed];
m11_489 -> m11_490  [key=0, style=solid];
m11_489 -> m11_505  [key=2, style=dotted];
m11_483 -> m11_484  [key=0, style=solid];
m11_483 -> m11_502  [key=2, style=dotted];
m11_486 -> m11_487  [key=0, style=solid];
m11_486 -> m11_503  [key=2, style=dotted];
m11_488 -> m11_489  [key=0, style=solid];
m11_488 -> m11_504  [key=2, style=dotted];
m11_484 -> m11_485  [key=0, style=solid];
m11_484 -> m11_486  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_484 -> m11_487  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_487 -> m11_485  [key=0, style=solid];
m11_487 -> m11_487  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_490 -> m11_491  [key=0, style=solid];
m11_490 -> m11_22  [key=2, style=dotted];
m11_490 -> m11_23  [key=2, style=dotted];
m11_490 -> m11_494  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_490 -> m11_495  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_490 -> m11_497  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_490 -> m11_498  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_491 -> m11_492  [key=0, style=solid];
m11_491 -> m11_24  [key=2, style=dotted];
m11_491 -> m11_25  [key=2, style=dotted];
m11_494 -> m11_495  [key=0, style=solid];
m11_494 -> m11_24  [key=2, style=dotted];
m11_494 -> m11_25  [key=2, style=dotted];
m11_495 -> m11_496  [key=0, style=solid];
m11_495 -> m11_26  [key=2, style=dotted];
m11_497 -> m11_498  [key=0, style=solid];
m11_497 -> m11_24  [key=2, style=dotted];
m11_497 -> m11_25  [key=2, style=dotted];
m11_498 -> m11_499  [key=0, style=solid];
m11_498 -> m11_24  [key=2, style=dotted];
m11_498 -> m11_28  [key=2, style=dotted];
m11_492 -> m11_493  [key=0, style=solid];
m11_492 -> m11_495  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_492 -> m11_496  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_496 -> m11_493  [key=0, style=solid];
m11_496 -> m11_496  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_499 -> m11_479  [color=blue, key=0, style=bold];
m11_663 -> m11_664  [key=0, style=solid];
m11_664 -> m11_665  [key=0, style=solid];
m11_664 -> m11_22  [key=2, style=dotted];
m11_664 -> m11_23  [key=2, style=dotted];
m11_664 -> m11_666  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_664 -> m11_669  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_665 -> m11_666  [key=0, style=solid];
m11_665 -> m11_250  [key=2, style=dotted];
m11_665 -> m11_25  [key=2, style=dotted];
m11_666 -> m11_667  [key=0, style=solid];
m11_666 -> m11_42  [key=2, style=dotted];
m11_666 -> m11_668  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_667 -> m11_663  [color=blue, key=0, style=bold];
m11_1248 -> m11_1249  [key=0, style=solid];
m11_1249 -> m11_1250  [key=0, style=solid];
m11_1249 -> m11_1249  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_1250 -> m11_1251  [key=0, style=solid];
m11_1250 -> m11_22  [key=2, style=dotted];
m11_1250 -> m11_23  [key=2, style=dotted];
m11_1250 -> m11_1252  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1250 -> m11_1253  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1250 -> m11_1254  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1250 -> m11_1255  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1250 -> m11_1256  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1250 -> m11_1257  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1250 -> m11_1258  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1250 -> m11_1259  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1250 -> m11_1260  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1251 -> m11_1252  [key=0, style=solid];
m11_1251 -> m11_24  [key=2, style=dotted];
m11_1251 -> m11_25  [key=2, style=dotted];
m11_1252 -> m11_1253  [key=0, style=solid];
m11_1252 -> m11_26  [key=2, style=dotted];
m11_1253 -> m11_1254  [key=0, style=solid];
m11_1253 -> m11_24  [key=2, style=dotted];
m11_1253 -> m11_25  [key=2, style=dotted];
m11_1254 -> m11_1255  [key=0, style=solid];
m11_1254 -> m11_26  [key=2, style=dotted];
m11_1255 -> m11_1256  [key=0, style=solid];
m11_1255 -> m11_1177  [key=2, style=dotted];
m11_1256 -> m11_1257  [key=0, style=solid];
m11_1256 -> m11_26  [key=2, style=dotted];
m11_1257 -> m11_1258  [key=0, style=solid];
m11_1257 -> m11_26  [key=2, style=dotted];
m11_1258 -> m11_1259  [key=0, style=solid];
m11_1258 -> m11_1262  [key=2, style=dotted];
m11_1258 -> m11_1263  [key=2, style=dotted];
m11_1258 -> m11_1264  [key=2, style=dotted];
m11_1258 -> m11_26  [key=2, style=dotted];
m11_1259 -> m11_1260  [key=0, style=solid];
m11_1259 -> m11_24  [key=2, style=dotted];
m11_1259 -> m11_25  [key=2, style=dotted];
m11_1260 -> m11_1261  [key=0, style=solid];
m11_1260 -> m11_26  [key=2, style=dotted];
m11_1261 -> m11_1248  [color=blue, key=0, style=bold];
m11_1593 -> m11_1594  [key=0, style=solid];
m11_1594 -> m11_1595  [key=0, style=solid];
m11_1594 -> m11_22  [key=2, style=dotted];
m11_1594 -> m11_23  [key=2, style=dotted];
m11_1594 -> m11_1598  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1595 -> m11_1596  [key=0, style=solid];
m11_1595 -> m11_42  [key=2, style=dotted];
m11_1595 -> m11_1597  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_1596 -> m11_1593  [color=blue, key=0, style=bold];
m11_71 -> m11_72  [key=0, style=solid];
m11_71 -> m11_69  [color=blue, key=0, style=bold];
m11_76 -> m11_20  [key=2, style=dotted];
m11_76 -> m11_77  [key=0, style=solid];
m11_76 -> m11_21  [key=2, style=dotted];
m11_76 -> m11_26  [key=2, style=dotted];
m11_72 -> m11_76  [color=darkseagreen4, key=1, label=enumClass, style=dashed];
m11_72 -> m11_73  [key=0, style=solid];
m11_72 -> m11_62  [key=2, style=dotted];
m11_72 -> m11_74  [color=darkseagreen4, key=1, label=enumClass, style=dashed];
m11_72 -> m11_75  [color=darkseagreen4, key=1, label=enumClass, style=dashed];
m11_75 -> m11_76  [key=0, style=solid];
m11_75 -> m11_24  [key=2, style=dotted];
m11_75 -> m11_25  [key=2, style=dotted];
m11_77 -> m11_78  [key=0, style=solid];
m11_77 -> m11_30  [key=2, style=dotted];
m11_77 -> m11_24  [key=2, style=dotted];
m11_77 -> m11_25  [key=2, style=dotted];
m11_73 -> m11_74  [key=0, style=solid];
m11_73 -> m11_73  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_74 -> m11_75  [key=0, style=solid];
m11_74 -> m11_22  [key=2, style=dotted];
m11_74 -> m11_23  [key=2, style=dotted];
m11_74 -> m11_76  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_74 -> m11_77  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_74 -> m11_78  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_74 -> m11_79  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_74 -> m11_81  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_74 -> m11_82  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_74 -> m11_83  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_78 -> m11_71  [color=blue, key=0, style=bold];
m11_78 -> m11_79  [key=0, style=solid];
m11_78 -> m11_26  [key=2, style=dotted];
m11_1206 -> m11_1207  [key=0, style=solid];
m11_1207 -> m11_1208  [key=0, style=solid];
m11_1207 -> m11_22  [key=2, style=dotted];
m11_1207 -> m11_23  [key=2, style=dotted];
m11_1207 -> m11_1211  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1208 -> m11_1209  [key=0, style=solid];
m11_1208 -> m11_42  [key=2, style=dotted];
m11_1208 -> m11_1210  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_1209 -> m11_1206  [color=blue, key=0, style=bold];
m11_1585 -> m11_1586  [key=0, style=solid];
m11_1586 -> m11_1587  [key=0, style=solid];
m11_1586 -> m11_1586  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_1587 -> m11_1588  [key=0, style=solid];
m11_1587 -> m11_22  [key=2, style=dotted];
m11_1587 -> m11_23  [key=2, style=dotted];
m11_1587 -> m11_1589  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1587 -> m11_1590  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1587 -> m11_1591  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1588 -> m11_1589  [key=0, style=solid];
m11_1588 -> m11_24  [key=2, style=dotted];
m11_1588 -> m11_25  [key=2, style=dotted];
m11_1589 -> m11_1590  [key=0, style=solid];
m11_1589 -> m11_26  [key=2, style=dotted];
m11_1590 -> m11_1591  [key=0, style=solid];
m11_1590 -> m11_24  [key=2, style=dotted];
m11_1590 -> m11_25  [key=2, style=dotted];
m11_1591 -> m11_1592  [key=0, style=solid];
m11_1591 -> m11_26  [key=2, style=dotted];
m11_1592 -> m11_1585  [color=blue, key=0, style=bold];
m11_2093 -> m11_2094  [key=0, style=solid];
m11_2094 -> m11_2095  [key=0, style=solid];
m11_2094 -> m11_2096  [key=2, style=dotted];
m11_2095 -> m11_2093  [color=blue, key=0, style=bold];
m11_1192 -> m11_1193  [key=0, style=solid];
m11_1193 -> m11_1194  [key=0, style=solid];
m11_1193 -> m11_22  [key=2, style=dotted];
m11_1193 -> m11_23  [key=2, style=dotted];
m11_1193 -> m11_1197  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1194 -> m11_1195  [key=0, style=solid];
m11_1194 -> m11_42  [key=2, style=dotted];
m11_1194 -> m11_1196  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_1195 -> m11_1192  [color=blue, key=0, style=bold];
m11_1213 -> m11_1214  [key=0, style=solid];
m11_1214 -> m11_1215  [key=0, style=solid];
m11_1214 -> m11_22  [key=2, style=dotted];
m11_1214 -> m11_23  [key=2, style=dotted];
m11_1214 -> m11_1218  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1215 -> m11_1216  [key=0, style=solid];
m11_1215 -> m11_42  [key=2, style=dotted];
m11_1215 -> m11_1217  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_1216 -> m11_1213  [color=blue, key=0, style=bold];
m11_362 -> m11_363  [key=0, style=solid];
m11_363 -> m11_364  [key=0, style=solid];
m11_363 -> m11_363  [color=darkorchid, key=3, label="Local variable string input", style=bold];
m11_364 -> m11_365  [key=0, style=solid];
m11_364 -> m11_23  [key=2, style=dotted];
m11_365 -> m11_366  [key=0, style=solid];
m11_365 -> m11_22  [key=2, style=dotted];
m11_365 -> m11_367  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_368  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_369  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_370  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_371  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_372  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_373  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_374  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_375  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_376  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_377  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_378  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_379  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_380  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_381  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_382  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_383  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_384  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_385  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_386  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_387  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_388  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_389  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_390  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_391  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_392  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_393  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_394  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_395  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_396  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_397  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_398  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_399  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_400  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_401  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_402  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_403  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_404  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_405  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_406  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_407  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_408  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_409  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_410  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_411  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_412  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_413  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_414  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_415  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_416  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_417  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_418  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_419  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_420  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_421  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_422  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_423  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_424  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_425  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_426  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_427  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_428  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_429  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_430  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_431  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_432  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_433  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_434  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_435  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_436  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_437  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_438  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_439  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_440  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_441  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_442  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_443  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_444  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_445  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_446  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_447  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_448  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_449  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_450  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_451  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_452  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_453  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_454  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_455  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_456  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_365 -> m11_457  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_366 -> m11_367  [key=0, style=solid];
m11_366 -> m11_26  [key=2, style=dotted];
m11_367 -> m11_368  [key=0, style=solid];
m11_367 -> m11_250  [key=2, style=dotted];
m11_368 -> m11_369  [key=0, style=solid];
m11_368 -> m11_26  [key=2, style=dotted];
m11_369 -> m11_370  [key=0, style=solid];
m11_369 -> m11_26  [key=2, style=dotted];
m11_370 -> m11_371  [key=0, style=solid];
m11_370 -> m11_26  [key=2, style=dotted];
m11_371 -> m11_372  [key=0, style=solid];
m11_371 -> m11_250  [key=2, style=dotted];
m11_372 -> m11_373  [key=0, style=solid];
m11_372 -> m11_26  [key=2, style=dotted];
m11_373 -> m11_374  [key=0, style=solid];
m11_373 -> m11_26  [key=2, style=dotted];
m11_374 -> m11_375  [key=0, style=solid];
m11_374 -> m11_26  [key=2, style=dotted];
m11_375 -> m11_376  [key=0, style=solid];
m11_375 -> m11_250  [key=2, style=dotted];
m11_376 -> m11_377  [key=0, style=solid];
m11_376 -> m11_26  [key=2, style=dotted];
m11_377 -> m11_378  [key=0, style=solid];
m11_377 -> m11_26  [key=2, style=dotted];
m11_378 -> m11_379  [key=0, style=solid];
m11_378 -> m11_26  [key=2, style=dotted];
m11_379 -> m11_380  [key=0, style=solid];
m11_379 -> m11_26  [key=2, style=dotted];
m11_380 -> m11_381  [key=0, style=solid];
m11_380 -> m11_26  [key=2, style=dotted];
m11_381 -> m11_382  [key=0, style=solid];
m11_381 -> m11_250  [key=2, style=dotted];
m11_382 -> m11_383  [key=0, style=solid];
m11_382 -> m11_26  [key=2, style=dotted];
m11_383 -> m11_384  [key=0, style=solid];
m11_383 -> m11_26  [key=2, style=dotted];
m11_384 -> m11_385  [key=0, style=solid];
m11_384 -> m11_26  [key=2, style=dotted];
m11_385 -> m11_386  [key=0, style=solid];
m11_385 -> m11_250  [key=2, style=dotted];
m11_386 -> m11_387  [key=0, style=solid];
m11_386 -> m11_26  [key=2, style=dotted];
m11_387 -> m11_388  [key=0, style=solid];
m11_387 -> m11_26  [key=2, style=dotted];
m11_388 -> m11_389  [key=0, style=solid];
m11_388 -> m11_26  [key=2, style=dotted];
m11_389 -> m11_390  [key=0, style=solid];
m11_389 -> m11_250  [key=2, style=dotted];
m11_390 -> m11_391  [key=0, style=solid];
m11_390 -> m11_26  [key=2, style=dotted];
m11_391 -> m11_392  [key=0, style=solid];
m11_391 -> m11_26  [key=2, style=dotted];
m11_392 -> m11_393  [key=0, style=solid];
m11_392 -> m11_26  [key=2, style=dotted];
m11_393 -> m11_394  [key=0, style=solid];
m11_393 -> m11_26  [key=2, style=dotted];
m11_394 -> m11_395  [key=0, style=solid];
m11_394 -> m11_250  [key=2, style=dotted];
m11_395 -> m11_396  [key=0, style=solid];
m11_395 -> m11_26  [key=2, style=dotted];
m11_396 -> m11_397  [key=0, style=solid];
m11_396 -> m11_26  [key=2, style=dotted];
m11_397 -> m11_398  [key=0, style=solid];
m11_397 -> m11_26  [key=2, style=dotted];
m11_398 -> m11_399  [key=0, style=solid];
m11_398 -> m11_26  [key=2, style=dotted];
m11_399 -> m11_400  [key=0, style=solid];
m11_399 -> m11_250  [key=2, style=dotted];
m11_400 -> m11_401  [key=0, style=solid];
m11_400 -> m11_26  [key=2, style=dotted];
m11_401 -> m11_402  [key=0, style=solid];
m11_401 -> m11_26  [key=2, style=dotted];
m11_402 -> m11_403  [key=0, style=solid];
m11_402 -> m11_26  [key=2, style=dotted];
m11_403 -> m11_404  [key=0, style=solid];
m11_403 -> m11_26  [key=2, style=dotted];
m11_404 -> m11_405  [key=0, style=solid];
m11_404 -> m11_250  [key=2, style=dotted];
m11_405 -> m11_406  [key=0, style=solid];
m11_405 -> m11_26  [key=2, style=dotted];
m11_406 -> m11_407  [key=0, style=solid];
m11_406 -> m11_26  [key=2, style=dotted];
m11_407 -> m11_408  [key=0, style=solid];
m11_407 -> m11_26  [key=2, style=dotted];
m11_408 -> m11_409  [key=0, style=solid];
m11_408 -> m11_26  [key=2, style=dotted];
m11_409 -> m11_410  [key=0, style=solid];
m11_409 -> m11_250  [key=2, style=dotted];
m11_410 -> m11_411  [key=0, style=solid];
m11_410 -> m11_26  [key=2, style=dotted];
m11_411 -> m11_412  [key=0, style=solid];
m11_411 -> m11_26  [key=2, style=dotted];
m11_412 -> m11_413  [key=0, style=solid];
m11_412 -> m11_26  [key=2, style=dotted];
m11_413 -> m11_414  [key=0, style=solid];
m11_413 -> m11_26  [key=2, style=dotted];
m11_414 -> m11_415  [key=0, style=solid];
m11_414 -> m11_250  [key=2, style=dotted];
m11_415 -> m11_416  [key=0, style=solid];
m11_415 -> m11_26  [key=2, style=dotted];
m11_416 -> m11_417  [key=0, style=solid];
m11_416 -> m11_26  [key=2, style=dotted];
m11_417 -> m11_418  [key=0, style=solid];
m11_417 -> m11_26  [key=2, style=dotted];
m11_418 -> m11_419  [key=0, style=solid];
m11_418 -> m11_250  [key=2, style=dotted];
m11_419 -> m11_420  [key=0, style=solid];
m11_419 -> m11_26  [key=2, style=dotted];
m11_420 -> m11_421  [key=0, style=solid];
m11_420 -> m11_26  [key=2, style=dotted];
m11_421 -> m11_422  [key=0, style=solid];
m11_421 -> m11_26  [key=2, style=dotted];
m11_422 -> m11_423  [key=0, style=solid];
m11_422 -> m11_250  [key=2, style=dotted];
m11_423 -> m11_424  [key=0, style=solid];
m11_423 -> m11_26  [key=2, style=dotted];
m11_424 -> m11_425  [key=0, style=solid];
m11_424 -> m11_26  [key=2, style=dotted];
m11_425 -> m11_426  [key=0, style=solid];
m11_425 -> m11_26  [key=2, style=dotted];
m11_426 -> m11_427  [key=0, style=solid];
m11_426 -> m11_250  [key=2, style=dotted];
m11_427 -> m11_428  [key=0, style=solid];
m11_427 -> m11_26  [key=2, style=dotted];
m11_428 -> m11_429  [key=0, style=solid];
m11_428 -> m11_26  [key=2, style=dotted];
m11_429 -> m11_430  [key=0, style=solid];
m11_429 -> m11_26  [key=2, style=dotted];
m11_430 -> m11_431  [key=0, style=solid];
m11_430 -> m11_250  [key=2, style=dotted];
m11_431 -> m11_432  [key=0, style=solid];
m11_431 -> m11_26  [key=2, style=dotted];
m11_432 -> m11_433  [key=0, style=solid];
m11_432 -> m11_26  [key=2, style=dotted];
m11_433 -> m11_434  [key=0, style=solid];
m11_433 -> m11_26  [key=2, style=dotted];
m11_434 -> m11_435  [key=0, style=solid];
m11_434 -> m11_250  [key=2, style=dotted];
m11_435 -> m11_436  [key=0, style=solid];
m11_435 -> m11_26  [key=2, style=dotted];
m11_436 -> m11_437  [key=0, style=solid];
m11_436 -> m11_26  [key=2, style=dotted];
m11_437 -> m11_438  [key=0, style=solid];
m11_437 -> m11_26  [key=2, style=dotted];
m11_438 -> m11_439  [key=0, style=solid];
m11_438 -> m11_250  [key=2, style=dotted];
m11_439 -> m11_440  [key=0, style=solid];
m11_439 -> m11_26  [key=2, style=dotted];
m11_440 -> m11_441  [key=0, style=solid];
m11_440 -> m11_26  [key=2, style=dotted];
m11_441 -> m11_442  [key=0, style=solid];
m11_441 -> m11_26  [key=2, style=dotted];
m11_442 -> m11_443  [key=0, style=solid];
m11_442 -> m11_250  [key=2, style=dotted];
m11_443 -> m11_444  [key=0, style=solid];
m11_443 -> m11_26  [key=2, style=dotted];
m11_444 -> m11_445  [key=0, style=solid];
m11_444 -> m11_26  [key=2, style=dotted];
m11_445 -> m11_446  [key=0, style=solid];
m11_445 -> m11_26  [key=2, style=dotted];
m11_446 -> m11_447  [key=0, style=solid];
m11_446 -> m11_250  [key=2, style=dotted];
m11_447 -> m11_448  [key=0, style=solid];
m11_447 -> m11_26  [key=2, style=dotted];
m11_448 -> m11_449  [key=0, style=solid];
m11_448 -> m11_26  [key=2, style=dotted];
m11_449 -> m11_450  [key=0, style=solid];
m11_449 -> m11_26  [key=2, style=dotted];
m11_450 -> m11_451  [key=0, style=solid];
m11_450 -> m11_250  [key=2, style=dotted];
m11_451 -> m11_452  [key=0, style=solid];
m11_451 -> m11_26  [key=2, style=dotted];
m11_452 -> m11_453  [key=0, style=solid];
m11_452 -> m11_26  [key=2, style=dotted];
m11_453 -> m11_454  [key=0, style=solid];
m11_453 -> m11_26  [key=2, style=dotted];
m11_454 -> m11_455  [key=0, style=solid];
m11_454 -> m11_250  [key=2, style=dotted];
m11_455 -> m11_456  [key=0, style=solid];
m11_455 -> m11_26  [key=2, style=dotted];
m11_456 -> m11_457  [key=0, style=solid];
m11_456 -> m11_26  [key=2, style=dotted];
m11_457 -> m11_458  [key=0, style=solid];
m11_457 -> m11_26  [key=2, style=dotted];
m11_458 -> m11_362  [color=blue, key=0, style=bold];
m11_595 -> m11_596  [key=0, style=solid];
m11_596 -> m11_597  [key=0, style=solid];
m11_596 -> m11_592  [key=2, style=dotted];
m11_596 -> m11_602  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_597 -> m11_598  [key=0, style=solid];
m11_597 -> m11_22  [key=2, style=dotted];
m11_597 -> m11_593  [key=2, style=dotted];
m11_597 -> m11_594  [key=2, style=dotted];
m11_597 -> m11_599  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_602 -> m11_603  [key=0, style=solid];
m11_598 -> m11_599  [key=0, style=solid];
m11_598 -> m11_24  [key=2, style=dotted];
m11_599 -> m11_600  [key=0, style=solid];
m11_599 -> m11_26  [key=2, style=dotted];
m11_600 -> m11_601  [key=0, style=solid];
m11_600 -> m11_602  [color=darkseagreen4, key=1, label=j, style=dashed];
m11_600 -> m11_606  [color=darkseagreen4, key=1, label=j, style=dashed];
m11_600 -> m11_552  [color=darkorchid, key=3, label="Local variable int j", style=bold];
m11_601 -> m11_602  [key=0, style=solid];
m11_601 -> m11_607  [key=0, style=solid];
m11_606 -> m11_601  [key=0, style=solid];
m11_606 -> m11_606  [color=darkseagreen4, key=1, label=j, style=dashed];
m11_603 -> m11_604  [key=0, style=solid];
m11_603 -> m11_22  [key=2, style=dotted];
m11_603 -> m11_593  [key=2, style=dotted];
m11_603 -> m11_594  [key=2, style=dotted];
m11_603 -> m11_605  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_604 -> m11_605  [key=0, style=solid];
m11_604 -> m11_24  [key=2, style=dotted];
m11_605 -> m11_606  [key=0, style=solid];
m11_605 -> m11_26  [key=2, style=dotted];
m11_607 -> m11_595  [color=blue, key=0, style=bold];
m11_902 -> m11_903  [key=0, style=solid];
m11_903 -> m11_904  [key=0, style=solid];
m11_903 -> m11_939  [key=2, style=dotted];
m11_903 -> m11_930  [color=darkseagreen4, key=1, label=sb, style=dashed];
m11_904 -> m11_905  [key=0, style=solid];
m11_904 -> m11_940  [key=2, style=dotted];
m11_930 -> m11_931  [key=0, style=solid];
m11_930 -> m11_950  [key=2, style=dotted];
m11_930 -> m11_932  [color=darkseagreen4, key=1, label=json, style=dashed];
m11_930 -> m11_937  [color=darkseagreen4, key=1, label=json, style=dashed];
m11_905 -> m11_906  [key=0, style=solid];
m11_905 -> m11_501  [key=2, style=dotted];
m11_905 -> m11_907  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m11_905 -> m11_908  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m11_905 -> m11_909  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m11_905 -> m11_910  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m11_905 -> m11_911  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m11_905 -> m11_912  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m11_905 -> m11_913  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m11_905 -> m11_914  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m11_905 -> m11_917  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m11_905 -> m11_919  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m11_905 -> m11_920  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m11_905 -> m11_921  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m11_905 -> m11_922  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m11_905 -> m11_923  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m11_905 -> m11_924  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m11_905 -> m11_925  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m11_905 -> m11_926  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m11_905 -> m11_927  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m11_905 -> m11_928  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m11_905 -> m11_929  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m11_906 -> m11_907  [key=0, style=solid];
m11_906 -> m11_941  [key=2, style=dotted];
m11_907 -> m11_908  [key=0, style=solid];
m11_907 -> m11_942  [key=2, style=dotted];
m11_908 -> m11_909  [key=0, style=solid];
m11_908 -> m11_943  [key=2, style=dotted];
m11_909 -> m11_910  [key=0, style=solid];
m11_909 -> m11_944  [key=2, style=dotted];
m11_910 -> m11_911  [key=0, style=solid];
m11_910 -> m11_945  [key=2, style=dotted];
m11_911 -> m11_912  [key=0, style=solid];
m11_911 -> m11_944  [key=2, style=dotted];
m11_912 -> m11_913  [key=0, style=solid];
m11_912 -> m11_946  [key=2, style=dotted];
m11_913 -> m11_914  [key=0, style=solid];
m11_913 -> m11_944  [key=2, style=dotted];
m11_914 -> m11_915  [key=0, style=solid];
m11_914 -> m11_941  [key=2, style=dotted];
m11_917 -> m11_918  [key=0, style=solid];
m11_917 -> m11_945  [key=2, style=dotted];
m11_919 -> m11_920  [key=0, style=solid];
m11_919 -> m11_943  [key=2, style=dotted];
m11_920 -> m11_921  [key=0, style=solid];
m11_920 -> m11_944  [key=2, style=dotted];
m11_921 -> m11_922  [key=0, style=solid];
m11_921 -> m11_947  [key=2, style=dotted];
m11_922 -> m11_923  [key=0, style=solid];
m11_922 -> m11_948  [key=2, style=dotted];
m11_923 -> m11_924  [key=0, style=solid];
m11_923 -> m11_945  [key=2, style=dotted];
m11_924 -> m11_925  [key=0, style=solid];
m11_924 -> m11_504  [key=2, style=dotted];
m11_925 -> m11_926  [key=0, style=solid];
m11_925 -> m11_948  [key=2, style=dotted];
m11_926 -> m11_927  [key=0, style=solid];
m11_926 -> m11_946  [key=2, style=dotted];
m11_927 -> m11_928  [key=0, style=solid];
m11_927 -> m11_949  [key=2, style=dotted];
m11_928 -> m11_929  [key=0, style=solid];
m11_928 -> m11_949  [key=2, style=dotted];
m11_929 -> m11_930  [key=0, style=solid];
m11_929 -> m11_504  [key=2, style=dotted];
m11_915 -> m11_916  [key=0, style=solid];
m11_915 -> m11_917  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_915 -> m11_918  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_915 -> m11_485  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m11_916 -> m11_917  [key=0, style=solid];
m11_916 -> m11_919  [key=0, style=solid];
m11_918 -> m11_916  [key=0, style=solid];
m11_918 -> m11_918  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_931 -> m11_932  [key=0, style=solid];
m11_931 -> m11_951  [key=2, style=dotted];
m11_931 -> m11_936  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m11_932 -> m11_933  [key=0, style=solid];
m11_932 -> m11_22  [key=2, style=dotted];
m11_932 -> m11_23  [key=2, style=dotted];
m11_932 -> m11_952  [key=2, style=dotted];
m11_932 -> m11_936  [color=darkseagreen4, key=1, label=jsonObject, style=dashed];
m11_937 -> m11_938  [key=0, style=solid];
m11_937 -> m11_950  [key=2, style=dotted];
m11_937 -> m11_26  [key=2, style=dotted];
m11_936 -> m11_937  [key=0, style=solid];
m11_936 -> m11_953  [key=2, style=dotted];
m11_933 -> m11_934  [key=0, style=solid];
m11_933 -> m11_939  [key=2, style=dotted];
m11_933 -> m11_937  [color=darkseagreen4, key=1, label=sb, style=dashed];
m11_934 -> m11_935  [key=0, style=solid];
m11_934 -> m11_940  [key=2, style=dotted];
m11_935 -> m11_936  [key=0, style=solid];
m11_935 -> m11_501  [key=2, style=dotted];
m11_938 -> m11_902  [color=blue, key=0, style=bold];
m11_1185 -> m11_1186  [key=0, style=solid];
m11_1186 -> m11_1187  [key=0, style=solid];
m11_1186 -> m11_22  [key=2, style=dotted];
m11_1186 -> m11_23  [key=2, style=dotted];
m11_1186 -> m11_1190  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1187 -> m11_1188  [key=0, style=solid];
m11_1187 -> m11_42  [key=2, style=dotted];
m11_1187 -> m11_1189  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_1188 -> m11_1185  [color=blue, key=0, style=bold];
m11_624 -> m11_625  [key=0, style=solid];
m11_625 -> m11_626  [key=0, style=solid];
m11_625 -> m11_22  [key=2, style=dotted];
m11_625 -> m11_23  [key=2, style=dotted];
m11_625 -> m11_629  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_626 -> m11_627  [key=0, style=solid];
m11_626 -> m11_42  [key=2, style=dotted];
m11_626 -> m11_628  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_627 -> m11_624  [color=blue, key=0, style=bold];
m11_1561 -> m11_1562  [key=0, style=solid];
m11_1562 -> m11_1563  [key=0, style=solid];
m11_1562 -> m11_1562  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_1563 -> m11_1564  [key=0, style=solid];
m11_1563 -> m11_22  [key=2, style=dotted];
m11_1563 -> m11_23  [key=2, style=dotted];
m11_1563 -> m11_1567  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1564 -> m11_1565  [key=0, style=solid];
m11_1564 -> m11_42  [key=2, style=dotted];
m11_1564 -> m11_1566  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_1565 -> m11_1561  [color=blue, key=0, style=bold];
m11_30 -> m11_31  [key=0, style=solid];
m11_31 -> m11_32  [key=0, style=solid];
m11_31 -> m11_31  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_32 -> m11_33  [key=0, style=solid];
m11_32 -> m11_22  [key=2, style=dotted];
m11_32 -> m11_23  [key=2, style=dotted];
m11_32 -> m11_34  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_32 -> m11_35  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_32 -> m11_36  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_32 -> m11_37  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_32 -> m11_44  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_32 -> m11_38  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_32 -> m11_39  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_32 -> m11_40  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_32 -> m11_19  [key=2, style=dotted];
m11_33 -> m11_34  [key=0, style=solid];
m11_33 -> m11_24  [key=2, style=dotted];
m11_33 -> m11_25  [key=2, style=dotted];
m11_33 -> m11_20  [key=2, style=dotted];
m11_33 -> m11_21  [key=2, style=dotted];
m11_33 -> m11_35  [color=darkseagreen4, key=1, label=json, style=dashed];
m11_34 -> m11_35  [key=0, style=solid];
m11_34 -> m11_26  [key=2, style=dotted];
m11_34 -> m11_5  [key=2, style=dotted];
m11_35 -> m11_36  [key=0, style=solid];
m11_35 -> m11_24  [key=2, style=dotted];
m11_35 -> m11_25  [key=2, style=dotted];
m11_35 -> m11_20  [key=2, style=dotted];
m11_35 -> m11_38  [key=2, style=dotted];
m11_36 -> m11_37  [key=0, style=solid];
m11_36 -> m11_26  [key=2, style=dotted];
m11_36 -> m11_5  [key=2, style=dotted];
m11_37 -> m11_38  [key=0, style=solid];
m11_37 -> m11_42  [key=2, style=dotted];
m11_37 -> m11_43  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_37 -> m11_31  [color=blue, key=0, style=bold];
m11_38 -> m11_39  [key=0, style=solid];
m11_38 -> m11_24  [key=2, style=dotted];
m11_38 -> m11_25  [key=2, style=dotted];
m11_39 -> m11_40  [key=0, style=solid];
m11_39 -> m11_26  [key=2, style=dotted];
m11_40 -> m11_41  [key=0, style=solid];
m11_40 -> m11_24  [key=2, style=dotted];
m11_40 -> m11_28  [key=2, style=dotted];
m11_40 -> m11_19  [key=2, style=dotted];
m11_41 -> m11_30  [color=blue, key=0, style=bold];
m11_41 -> m11_20  [key=2, style=dotted];
m11_41 -> m11_42  [key=0, style=solid];
m11_41 -> m11_21  [key=2, style=dotted];
m11_41 -> m11_43  [color=darkseagreen4, key=1, label=json, style=dashed];
m11_1393 -> m11_1394  [key=0, style=solid];
m11_1394 -> m11_1395  [key=0, style=solid];
m11_1394 -> m11_22  [key=2, style=dotted];
m11_1394 -> m11_23  [key=2, style=dotted];
m11_1394 -> m11_1398  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1395 -> m11_1396  [key=0, style=solid];
m11_1395 -> m11_42  [key=2, style=dotted];
m11_1395 -> m11_1397  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_1396 -> m11_1393  [color=blue, key=0, style=bold];
m11_1497 -> m11_1498  [key=0, style=solid];
m11_1498 -> m11_1499  [key=0, style=solid];
m11_1498 -> m11_1498  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_1499 -> m11_1500  [key=0, style=solid];
m11_1499 -> m11_22  [key=2, style=dotted];
m11_1499 -> m11_23  [key=2, style=dotted];
m11_1499 -> m11_1501  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1499 -> m11_1502  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1499 -> m11_1503  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1499 -> m11_1504  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1499 -> m11_1505  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1499 -> m11_1506  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1499 -> m11_1507  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1499 -> m11_1508  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1499 -> m11_1509  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1499 -> m11_1510  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1499 -> m11_1511  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1499 -> m11_1512  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1499 -> m11_1513  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1500 -> m11_1501  [key=0, style=solid];
m11_1500 -> m11_24  [key=2, style=dotted];
m11_1500 -> m11_25  [key=2, style=dotted];
m11_1501 -> m11_1502  [key=0, style=solid];
m11_1501 -> m11_26  [key=2, style=dotted];
m11_1502 -> m11_1503  [key=0, style=solid];
m11_1502 -> m11_24  [key=2, style=dotted];
m11_1502 -> m11_25  [key=2, style=dotted];
m11_1503 -> m11_1504  [key=0, style=solid];
m11_1503 -> m11_26  [key=2, style=dotted];
m11_1504 -> m11_1505  [key=0, style=solid];
m11_1504 -> m11_24  [key=2, style=dotted];
m11_1504 -> m11_25  [key=2, style=dotted];
m11_1505 -> m11_1506  [key=0, style=solid];
m11_1505 -> m11_26  [key=2, style=dotted];
m11_1506 -> m11_1507  [key=0, style=solid];
m11_1506 -> m11_24  [key=2, style=dotted];
m11_1506 -> m11_25  [key=2, style=dotted];
m11_1507 -> m11_1508  [key=0, style=solid];
m11_1507 -> m11_26  [key=2, style=dotted];
m11_1508 -> m11_1509  [key=0, style=solid];
m11_1508 -> m11_24  [key=2, style=dotted];
m11_1508 -> m11_25  [key=2, style=dotted];
m11_1509 -> m11_1510  [key=0, style=solid];
m11_1509 -> m11_26  [key=2, style=dotted];
m11_1510 -> m11_1511  [key=0, style=solid];
m11_1510 -> m11_24  [key=2, style=dotted];
m11_1510 -> m11_25  [key=2, style=dotted];
m11_1511 -> m11_1512  [key=0, style=solid];
m11_1511 -> m11_26  [key=2, style=dotted];
m11_1512 -> m11_1513  [key=0, style=solid];
m11_1512 -> m11_24  [key=2, style=dotted];
m11_1512 -> m11_25  [key=2, style=dotted];
m11_1513 -> m11_1514  [key=0, style=solid];
m11_1513 -> m11_26  [key=2, style=dotted];
m11_1514 -> m11_1497  [color=blue, key=0, style=bold];
m11_205 -> m11_5  [key=2, style=dotted];
m11_205 -> m11_206  [key=0, style=solid];
m11_127 -> m11_128  [key=0, style=solid];
m11_127 -> m11_26  [key=2, style=dotted];
m11_129 -> m11_20  [key=2, style=dotted];
m11_129 -> m11_38  [key=2, style=dotted];
m11_129 -> m11_130  [key=0, style=solid];
m11_129 -> m11_26  [key=2, style=dotted];
m11_130 -> m11_5  [key=2, style=dotted];
m11_130 -> m11_131  [key=0, style=solid];
m11_130 -> m11_42  [key=2, style=dotted];
m11_130 -> m11_132  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_128 -> m11_129  [key=0, style=solid];
m11_128 -> m11_125  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_128 -> m11_24  [key=2, style=dotted];
m11_128 -> m11_25  [key=2, style=dotted];
m11_131 -> m11_127  [color=blue, key=0, style=bold];
m11_131 -> m11_119  [color=blue, key=0, style=bold];
m11_297 -> m11_298  [key=0, style=solid];
m11_298 -> m11_299  [key=0, style=solid];
m11_298 -> m11_298  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_299 -> m11_300  [key=0, style=solid];
m11_299 -> m11_22  [key=2, style=dotted];
m11_299 -> m11_23  [key=2, style=dotted];
m11_300 -> m11_300  [key=0, style=solid];
m11_300 -> m11_301  [key=0, style=solid];
m11_300 -> m11_24  [key=2, style=dotted];
m11_301 -> m11_297  [color=blue, key=0, style=bold];
m11_197 -> m11_198  [key=0, style=solid];
m11_197 -> m11_24  [key=2, style=dotted];
m11_197 -> m11_25  [key=2, style=dotted];
m11_242 -> m11_240  [color=blue, key=0, style=bold];
m11_270 -> m11_203  [color=darkseagreen4, key=1, label=s, style=dashed];
m11_270 -> m11_201  [color=darkseagreen4, key=1, label=s, style=dashed];
m11_465 -> m11_466  [key=0, style=solid];
m11_466 -> m11_467  [key=0, style=solid];
m11_466 -> m11_22  [key=2, style=dotted];
m11_466 -> m11_23  [key=2, style=dotted];
m11_466 -> m11_470  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_467 -> m11_468  [key=0, style=solid];
m11_467 -> m11_42  [key=2, style=dotted];
m11_467 -> m11_469  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_468 -> m11_465  [color=blue, key=0, style=bold];
m11_1569 -> m11_1570  [key=0, style=solid];
m11_1570 -> m11_1571  [key=0, style=solid];
m11_1570 -> m11_1570  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_1571 -> m11_1572  [key=0, style=solid];
m11_1571 -> m11_22  [key=2, style=dotted];
m11_1571 -> m11_23  [key=2, style=dotted];
m11_1571 -> m11_1573  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1571 -> m11_1574  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1571 -> m11_1575  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1572 -> m11_1573  [key=0, style=solid];
m11_1572 -> m11_24  [key=2, style=dotted];
m11_1572 -> m11_25  [key=2, style=dotted];
m11_1573 -> m11_1574  [key=0, style=solid];
m11_1573 -> m11_24  [key=2, style=dotted];
m11_1573 -> m11_25  [key=2, style=dotted];
m11_1574 -> m11_1575  [key=0, style=solid];
m11_1574 -> m11_24  [key=2, style=dotted];
m11_1574 -> m11_25  [key=2, style=dotted];
m11_1575 -> m11_1576  [key=0, style=solid];
m11_1575 -> m11_24  [key=2, style=dotted];
m11_1575 -> m11_28  [key=2, style=dotted];
m11_1576 -> m11_1569  [color=blue, key=0, style=bold];
m11_1811 -> m11_1812  [key=0, style=solid];
m11_1812 -> m11_1813  [key=0, style=solid];
m11_1812 -> m11_22  [key=2, style=dotted];
m11_1812 -> m11_23  [key=2, style=dotted];
m11_1812 -> m11_1814  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1812 -> m11_1815  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1812 -> m11_1818  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1813 -> m11_1814  [key=0, style=solid];
m11_1813 -> m11_250  [key=2, style=dotted];
m11_1813 -> m11_25  [key=2, style=dotted];
m11_1814 -> m11_1815  [key=0, style=solid];
m11_1814 -> m11_250  [key=2, style=dotted];
m11_1814 -> m11_25  [key=2, style=dotted];
m11_1815 -> m11_1816  [key=0, style=solid];
m11_1815 -> m11_42  [key=2, style=dotted];
m11_1815 -> m11_1817  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_1816 -> m11_1811  [color=blue, key=0, style=bold];
m11_20 -> m11_21  [key=0, style=solid];
m11_20 -> m11_27  [key=2, style=dotted];
m11_20 -> m11_26  [key=2, style=dotted];
m11_2068 -> m11_2069  [key=0, style=solid];
m11_2068 -> m11_2071  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m11_2069 -> m11_2070  [key=0, style=solid];
m11_2069 -> m11_2071  [key=0, style=solid];
m11_2071 -> m11_2072  [key=0, style=solid];
m11_2071 -> m11_2074  [key=2, style=dotted];
m11_2070 -> m11_2072  [key=0, style=solid];
m11_2070 -> m11_2073  [key=2, style=dotted];
m11_2072 -> m11_2068  [color=blue, key=0, style=bold];
m11_200 -> m11_201  [key=0, style=solid];
m11_200 -> m11_26  [key=2, style=dotted];
m11_44 -> m11_45  [key=0, style=solid];
m11_44 -> m11_46  [key=2, style=dotted];
m11_44 -> m11_5  [key=2, style=dotted];
m11_43 -> m11_44  [key=0, style=solid];
m11_43 -> m11_20  [key=2, style=dotted];
m11_43 -> m11_38  [key=2, style=dotted];
m11_45 -> m11_43  [color=blue, key=0, style=bold];
m11_45 -> m11_39  [color=blue, key=0, style=bold];
m11_61 -> m11_62  [key=0, style=solid];
m11_61 -> m11_46  [key=2, style=dotted];
m11_61 -> m11_54  [color=blue, key=0, style=bold];
m11_64 -> m11_65  [key=0, style=solid];
m11_64 -> m11_46  [key=2, style=dotted];
m11_64 -> m11_68  [color=darkseagreen4, key=1, label=enumClass, style=dashed];
m11_64 -> m11_62  [key=2, style=dotted];
m11_64 -> m11_66  [color=darkseagreen4, key=1, label=enumClass, style=dashed];
m11_64 -> m11_67  [color=darkseagreen4, key=1, label=enumClass, style=dashed];
m11_67 -> m11_68  [key=0, style=solid];
m11_67 -> m11_46  [key=2, style=dotted];
m11_70 -> m11_71  [key=0, style=solid];
m11_70 -> m11_46  [key=2, style=dotted];
m11_70 -> m11_63  [color=blue, key=0, style=bold];
m11_60 -> m11_61  [key=0, style=solid];
m11_60 -> m11_30  [key=2, style=dotted];
m11_63 -> m11_64  [key=0, style=solid];
m11_66 -> m11_67  [key=0, style=solid];
m11_69 -> m11_70  [key=0, style=solid];
m11_69 -> m11_30  [key=2, style=dotted];
m11_62 -> m11_60  [color=blue, key=0, style=bold];
m11_65 -> m11_63  [color=blue, key=0, style=bold];
m11_65 -> m11_66  [key=0, style=solid];
m11_68 -> m11_66  [color=blue, key=0, style=bold];
m11_68 -> m11_20  [key=2, style=dotted];
m11_68 -> m11_69  [key=0, style=solid];
m11_68 -> m11_21  [key=2, style=dotted];
m11_110 -> m11_111  [key=0, style=solid];
m11_110 -> m11_24  [key=2, style=dotted];
m11_110 -> m11_20  [key=2, style=dotted];
m11_110 -> m11_38  [key=2, style=dotted];
m11_110 -> m11_112  [color=darkseagreen4, key=1, label=enumClass, style=dashed];
m11_110 -> m11_113  [color=darkseagreen4, key=1, label=enumClass, style=dashed];
m11_109 -> m11_110  [key=0, style=solid];
m11_109 -> m11_60  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_113 -> m11_114  [key=0, style=solid];
m11_113 -> m11_115  [key=2, style=dotted];
m11_113 -> m11_5  [key=2, style=dotted];
m11_112 -> m11_113  [key=0, style=solid];
m11_112 -> m11_5  [key=2, style=dotted];
m11_117 -> m11_118  [key=0, style=solid];
m11_117 -> m11_46  [key=2, style=dotted];
m11_117 -> m11_20  [key=2, style=dotted];
m11_117 -> m11_38  [key=2, style=dotted];
m11_117 -> m11_119  [color=darkseagreen4, key=1, label=enumClass, style=dashed];
m11_117 -> m11_120  [color=darkseagreen4, key=1, label=enumClass, style=dashed];
m11_116 -> m11_117  [key=0, style=solid];
m11_116 -> m11_77  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_111 -> m11_109  [color=blue, key=0, style=bold];
m11_111 -> m11_5  [key=2, style=dotted];
m11_111 -> m11_112  [key=0, style=solid];
m11_114 -> m11_112  [color=blue, key=0, style=bold];
m11_114 -> m11_108  [color=blue, key=0, style=bold];
m11_118 -> m11_116  [color=blue, key=0, style=bold];
m11_118 -> m11_5  [key=2, style=dotted];
m11_118 -> m11_119  [key=0, style=solid];
m11_133 -> m11_134  [key=0, style=solid];
m11_133 -> m11_24  [key=2, style=dotted];
m11_133 -> m11_133  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_132 -> m11_133  [key=0, style=solid];
m11_134 -> m11_132  [color=blue, key=0, style=bold];
m11_134 -> m11_20  [key=2, style=dotted];
m11_134 -> m11_38  [key=2, style=dotted];
m11_134 -> m11_135  [key=0, style=solid];
m11_170 -> m11_171  [key=0, style=solid];
m11_170 -> m11_24  [key=2, style=dotted];
m11_170 -> m11_5  [key=2, style=dotted];
m11_169 -> m11_170  [key=0, style=solid];
m11_169 -> m11_5  [key=2, style=dotted];
m11_171 -> m11_169  [color=blue, key=0, style=bold];
m11_171 -> m11_5  [key=2, style=dotted];
m11_171 -> m11_172  [key=0, style=solid];
m11_277 -> m11_277  [key=0, style=solid];
m11_277 -> m11_278  [key=0, style=solid];
m11_277 -> m11_24  [key=2, style=dotted];
m11_276 -> m11_277  [key=0, style=solid];
m11_278 -> m11_276  [color=blue, key=0, style=bold];
m11_295 -> m11_296  [key=0, style=solid];
m11_295 -> m11_24  [key=2, style=dotted];
m11_294 -> m11_295  [key=0, style=solid];
m11_296 -> m11_294  [color=blue, key=0, style=bold];
m11_308 -> m11_308  [color=red, key=0, style=solid];
m11_308 -> m11_309  [color=red, key=0, style=solid];
m11_308 -> m11_24  [color=red, key=2, style=dotted];
m11_307 -> m11_308  [color=red, key=0, style=solid];
m11_307 -> m11_16  [key=0, style=solid];
m11_309 -> m11_307  [color=blue, key=0, style=bold];
m11_462 -> m11_463  [key=0, style=solid];
m11_463 -> m11_464  [key=0, style=solid];
m11_463 -> m11_22  [key=2, style=dotted];
m11_464 -> m11_462  [color=blue, key=0, style=bold];
m11_470 -> m11_471  [key=0, style=solid];
m11_470 -> m11_250  [key=2, style=dotted];
m11_469 -> m11_470  [key=0, style=solid];
m11_471 -> m11_469  [color=blue, key=0, style=bold];
m11_560 -> m11_561  [key=0, style=solid];
m11_560 -> m11_22  [key=2, style=dotted];
m11_560 -> m11_23  [key=2, style=dotted];
m11_560 -> m11_558  [key=2, style=dotted];
m11_559 -> m11_560  [key=0, style=solid];
m11_561 -> m11_562  [key=0, style=solid];
m11_561 -> m11_46  [key=2, style=dotted];
m11_562 -> m11_559  [color=blue, key=0, style=bold];
m11_576 -> m11_577  [key=0, style=solid];
m11_576 -> m11_22  [key=2, style=dotted];
m11_576 -> m11_23  [key=2, style=dotted];
m11_576 -> m11_558  [key=2, style=dotted];
m11_575 -> m11_576  [key=0, style=solid];
m11_577 -> m11_578  [key=0, style=solid];
m11_577 -> m11_46  [key=2, style=dotted];
m11_578 -> m11_575  [color=blue, key=0, style=bold];
m11_629 -> m11_630  [key=0, style=solid];
m11_629 -> m11_250  [key=2, style=dotted];
m11_628 -> m11_629  [key=0, style=solid];
m11_630 -> m11_628  [color=blue, key=0, style=bold];
m11_636 -> m11_637  [key=0, style=solid];
m11_636 -> m11_250  [key=2, style=dotted];
m11_635 -> m11_636  [key=0, style=solid];
m11_637 -> m11_635  [color=blue, key=0, style=bold];
m11_643 -> m11_644  [key=0, style=solid];
m11_643 -> m11_645  [key=2, style=dotted];
m11_642 -> m11_643  [key=0, style=solid];
m11_644 -> m11_642  [color=blue, key=0, style=bold];
m11_654 -> m11_655  [key=0, style=solid];
m11_654 -> m11_645  [key=2, style=dotted];
m11_653 -> m11_654  [key=0, style=solid];
m11_655 -> m11_653  [color=blue, key=0, style=bold];
m11_669 -> m11_670  [key=0, style=solid];
m11_669 -> m11_250  [key=2, style=dotted];
m11_668 -> m11_669  [key=0, style=solid];
m11_670 -> m11_668  [color=blue, key=0, style=bold];
m11_822 -> m11_823  [key=0, style=solid];
m11_822 -> m11_46  [key=2, style=dotted];
m11_821 -> m11_822  [key=0, style=solid];
m11_825 -> m11_826  [key=0, style=solid];
m11_825 -> m11_46  [key=2, style=dotted];
m11_824 -> m11_825  [key=0, style=solid];
m11_828 -> m11_829  [key=0, style=solid];
m11_828 -> m11_46  [key=2, style=dotted];
m11_827 -> m11_828  [key=0, style=solid];
m11_831 -> m11_832  [key=0, style=solid];
m11_831 -> m11_46  [key=2, style=dotted];
m11_830 -> m11_831  [key=0, style=solid];
m11_834 -> m11_835  [key=0, style=solid];
m11_834 -> m11_46  [key=2, style=dotted];
m11_833 -> m11_834  [key=0, style=solid];
m11_823 -> m11_821  [color=blue, key=0, style=bold];
m11_826 -> m11_824  [color=blue, key=0, style=bold];
m11_829 -> m11_827  [color=blue, key=0, style=bold];
m11_832 -> m11_830  [color=blue, key=0, style=bold];
m11_835 -> m11_833  [color=blue, key=0, style=bold];
m11_859 -> m11_860  [key=0, style=solid];
m11_859 -> m11_115  [key=2, style=dotted];
m11_858 -> m11_859  [key=0, style=solid];
m11_862 -> m11_863  [key=0, style=solid];
m11_862 -> m11_24  [key=2, style=dotted];
m11_861 -> m11_862  [key=0, style=solid];
m11_865 -> m11_866  [key=0, style=solid];
m11_865 -> m11_115  [key=2, style=dotted];
m11_864 -> m11_865  [key=0, style=solid];
m11_860 -> m11_858  [color=blue, key=0, style=bold];
m11_863 -> m11_861  [color=blue, key=0, style=bold];
m11_866 -> m11_864  [color=blue, key=0, style=bold];
m11_897 -> m11_898  [key=0, style=solid];
m11_897 -> m11_24  [key=2, style=dotted];
m11_896 -> m11_897  [key=0, style=solid];
m11_900 -> m11_901  [key=0, style=solid];
m11_900 -> m11_24  [key=2, style=dotted];
m11_899 -> m11_900  [key=0, style=solid];
m11_898 -> m11_896  [color=blue, key=0, style=bold];
m11_901 -> m11_899  [color=blue, key=0, style=bold];
m11_1075 -> m11_1076  [key=0, style=solid];
m11_1075 -> m11_24  [key=2, style=dotted];
m11_1074 -> m11_1075  [key=0, style=solid];
m11_1076 -> m11_1074  [color=blue, key=0, style=bold];
m11_1153 -> m11_1154  [key=0, style=solid];
m11_1153 -> m11_24  [key=2, style=dotted];
m11_1152 -> m11_1153  [key=0, style=solid];
m11_1154 -> m11_1152  [color=blue, key=0, style=bold];
m11_1170 -> m11_1171  [key=0, style=solid];
m11_1170 -> m11_85  [key=2, style=dotted];
m11_1169 -> m11_1170  [key=0, style=solid];
m11_1171 -> m11_1169  [color=blue, key=0, style=bold];
m11_1183 -> m11_1184  [key=0, style=solid];
m11_1183 -> m11_115  [key=2, style=dotted];
m11_1182 -> m11_1183  [key=0, style=solid];
m11_1184 -> m11_1182  [color=blue, key=0, style=bold];
m11_1190 -> m11_1191  [key=0, style=solid];
m11_1190 -> m11_85  [key=2, style=dotted];
m11_1189 -> m11_1190  [key=0, style=solid];
m11_1191 -> m11_1189  [color=blue, key=0, style=bold];
m11_1197 -> m11_1198  [key=0, style=solid];
m11_1197 -> m11_1177  [key=2, style=dotted];
m11_1196 -> m11_1197  [key=0, style=solid];
m11_1198 -> m11_1196  [color=blue, key=0, style=bold];
m11_1211 -> m11_1212  [key=0, style=solid];
m11_1211 -> m11_85  [key=2, style=dotted];
m11_1210 -> m11_1211  [key=0, style=solid];
m11_1212 -> m11_1210  [color=blue, key=0, style=bold];
m11_1218 -> m11_1219  [key=0, style=solid];
m11_1218 -> m11_85  [key=2, style=dotted];
m11_1217 -> m11_1218  [key=0, style=solid];
m11_1219 -> m11_1217  [color=blue, key=0, style=bold];
m11_1289 -> m11_1290  [key=0, style=solid];
m11_1289 -> m11_1177  [key=2, style=dotted];
m11_1288 -> m11_1289  [key=0, style=solid];
m11_1290 -> m11_1288  [color=blue, key=0, style=bold];
m11_1391 -> m11_1392  [key=0, style=solid];
m11_1391 -> m11_46  [key=2, style=dotted];
m11_1390 -> m11_1391  [key=0, style=solid];
m11_1392 -> m11_1390  [color=blue, key=0, style=bold];
m11_1398 -> m11_1399  [key=0, style=solid];
m11_1398 -> m11_24  [key=2, style=dotted];
m11_1397 -> m11_1398  [key=0, style=solid];
m11_1399 -> m11_1397  [color=blue, key=0, style=bold];
m11_1405 -> m11_1406  [key=0, style=solid];
m11_1405 -> m11_24  [key=2, style=dotted];
m11_1404 -> m11_1405  [key=0, style=solid];
m11_1406 -> m11_1404  [color=blue, key=0, style=bold];
m11_1412 -> m11_1413  [key=0, style=solid];
m11_1412 -> m11_24  [key=2, style=dotted];
m11_1411 -> m11_1412  [key=0, style=solid];
m11_1413 -> m11_1411  [color=blue, key=0, style=bold];
m11_1419 -> m11_1420  [key=0, style=solid];
m11_1419 -> m11_24  [key=2, style=dotted];
m11_1418 -> m11_1419  [key=0, style=solid];
m11_1420 -> m11_1418  [color=blue, key=0, style=bold];
m11_1426 -> m11_1427  [key=0, style=solid];
m11_1426 -> m11_24  [key=2, style=dotted];
m11_1425 -> m11_1426  [key=0, style=solid];
m11_1427 -> m11_1425  [color=blue, key=0, style=bold];
m11_1559 -> m11_1560  [key=0, style=solid];
m11_1559 -> m11_24  [key=2, style=dotted];
m11_1558 -> m11_1559  [key=0, style=solid];
m11_1560 -> m11_1558  [color=blue, key=0, style=bold];
m11_1567 -> m11_1568  [key=0, style=solid];
m11_1567 -> m11_24  [key=2, style=dotted];
m11_1566 -> m11_1567  [key=0, style=solid];
m11_1568 -> m11_1566  [color=blue, key=0, style=bold];
m11_1598 -> m11_1599  [key=0, style=solid];
m11_1598 -> m11_24  [key=2, style=dotted];
m11_1597 -> m11_1598  [key=0, style=solid];
m11_1599 -> m11_1597  [color=blue, key=0, style=bold];
m11_1615 -> m11_1616  [key=0, style=solid];
m11_1615 -> m11_24  [key=2, style=dotted];
m11_1615 -> m11_25  [key=2, style=dotted];
m11_1614 -> m11_1615  [key=0, style=solid];
m11_1616 -> m11_1614  [color=blue, key=0, style=bold];
m11_1779 -> m11_1780  [key=0, style=solid];
m11_1779 -> m11_24  [key=2, style=dotted];
m11_1778 -> m11_1779  [key=0, style=solid];
m11_1780 -> m11_1778  [color=blue, key=0, style=bold];
m11_1818 -> m11_1819  [key=0, style=solid];
m11_1818 -> m11_250  [key=2, style=dotted];
m11_1817 -> m11_1818  [key=0, style=solid];
m11_1819 -> m11_1817  [color=blue, key=0, style=bold];
m11_1874 -> m11_1875  [key=0, style=solid];
m11_1874 -> m11_24  [key=2, style=dotted];
m11_1874 -> m11_25  [key=2, style=dotted];
m11_1873 -> m11_1874  [key=0, style=solid];
m11_1875 -> m11_1873  [color=blue, key=0, style=bold];
m11_1906 -> m11_1907  [key=0, style=solid];
m11_1906 -> m11_24  [key=2, style=dotted];
m11_1906 -> m11_25  [key=2, style=dotted];
m11_1909 -> m11_1910  [key=0, style=solid];
m11_1909 -> m11_24  [key=2, style=dotted];
m11_1909 -> m11_25  [key=2, style=dotted];
m11_1905 -> m11_1906  [key=0, style=solid];
m11_1908 -> m11_1909  [key=0, style=solid];
m11_1907 -> m11_1905  [color=blue, key=0, style=bold];
m11_1910 -> m11_1908  [color=blue, key=0, style=bold];
m11_2031 -> m11_2032  [key=0, style=solid];
m11_2031 -> m11_24  [key=2, style=dotted];
m11_2034 -> m11_2035  [key=0, style=solid];
m11_2034 -> m11_24  [key=2, style=dotted];
m11_2037 -> m11_2038  [key=0, style=solid];
m11_2037 -> m11_24  [key=2, style=dotted];
m11_2040 -> m11_2041  [key=0, style=solid];
m11_2040 -> m11_24  [key=2, style=dotted];
m11_2043 -> m11_2044  [key=0, style=solid];
m11_2043 -> m11_24  [key=2, style=dotted];
m11_2046 -> m11_2047  [key=0, style=solid];
m11_2046 -> m11_24  [key=2, style=dotted];
m11_2030 -> m11_2031  [key=0, style=solid];
m11_2033 -> m11_2034  [key=0, style=solid];
m11_2036 -> m11_2037  [key=0, style=solid];
m11_2039 -> m11_2040  [key=0, style=solid];
m11_2042 -> m11_2043  [key=0, style=solid];
m11_2045 -> m11_2046  [key=0, style=solid];
m11_2032 -> m11_2030  [color=blue, key=0, style=bold];
m11_2035 -> m11_2033  [color=blue, key=0, style=bold];
m11_2038 -> m11_2036  [color=blue, key=0, style=bold];
m11_2041 -> m11_2039  [color=blue, key=0, style=bold];
m11_2044 -> m11_2042  [color=blue, key=0, style=bold];
m11_2047 -> m11_2045  [color=blue, key=0, style=bold];
m11_234 -> m11_235  [color=green, key=0, style=solid];
m11_234 -> m11_243  [key=2, style=dotted];
m11_235 -> m11_236  [color=green, key=0, style=solid];
m11_235 -> m11_20  [color=green, key=2, style=dotted];
m11_235 -> m11_38  [color=green, key=2, style=dotted];
m11_235 -> m11_28  [key=2, style=dotted];
m11_236 -> m11_234  [color=blue, key=0, style=bold];
m11_236 -> m11_237  [key=0, style=solid];
m11_236 -> m11_242  [key=2, style=dotted];
m11_236 -> m11_238  [color=darkseagreen4, key=1, label=ms, style=dashed];
m11_236 -> m11_240  [color=darkseagreen4, key=1, label=ms, style=dashed];
m11_240 -> m11_241  [color=green, key=0, style=solid];
m11_240 -> m11_25  [key=2, style=dotted];
m11_241 -> m11_242  [color=green, key=0, style=solid];
m11_241 -> m11_20  [color=green, key=2, style=dotted];
m11_241 -> m11_243  [color=green, key=2, style=dotted];
m11_241 -> m11_230  [color=blue, key=0, style=bold];
m11_17 -> m11_20  [key=2, style=dotted];
m11_17 -> m11_309  [key=0, style=solid];
m11_17 -> m11_21  [key=2, style=dotted];
m11_17 -> m11_18  [key=0, style=solid];
m11_17 -> m11_24  [key=2, style=dotted];
m11_17 -> m11_28  [key=2, style=dotted];
m11_144 -> m11_20  [key=2, style=dotted];
m11_144 -> m11_145  [key=0, style=solid];
m11_144 -> m11_148  [key=2, style=dotted];
m11_144 -> m11_26  [key=2, style=dotted];
m11_204 -> m11_5  [key=2, style=dotted];
m11_204 -> m11_205  [key=0, style=solid];
m11_142 -> m11_143  [key=0, style=solid];
m11_142 -> m11_26  [key=2, style=dotted];
m11_16 -> m11_17  [key=0, style=solid];
m11_16 -> m11_19  [key=2, style=dotted];
m11_16 -> m11_26  [key=2, style=dotted];
m11_143 -> m11_144  [key=0, style=solid];
m11_143 -> m11_147  [key=2, style=dotted];
m11_143 -> m11_145  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m11_143 -> m11_26  [key=2, style=dotted];
m11_145 -> m11_146  [key=0, style=solid];
m11_145 -> m11_149  [key=2, style=dotted];
m11_145 -> m11_150  [key=2, style=dotted];
m11_145 -> m11_151  [key=2, style=dotted];
m11_145 -> m11_24  [key=2, style=dotted];
m11_145 -> m11_25  [key=2, style=dotted];
m11_203 -> m11_204  [key=0, style=solid];
m11_203 -> m11_205  [color=darkseagreen4, key=1, label=o, style=dashed];
m11_203 -> m11_209  [key=2, style=dotted];
m11_203 -> m11_210  [key=2, style=dotted];
m11_203 -> m11_211  [key=2, style=dotted];
m11_203 -> m11_192  [color=blue, key=0, style=bold];
m11_206 -> m11_200  [color=blue, key=0, style=bold];
m11_206 -> m11_207  [key=0, style=solid];
m11_202 -> m11_203  [key=0, style=solid];
m11_202 -> m11_26  [key=2, style=dotted];
m11_201 -> m11_202  [key=0, style=solid];
m11_201 -> m11_207  [key=2, style=dotted];
m11_201 -> m11_208  [key=2, style=dotted];
m11_201 -> m11_205  [key=2, style=dotted];
m11_146 -> m11_142  [color=blue, key=0, style=bold];
m11_146 -> m11_147  [key=0, style=solid];
m11_146 -> m11_26  [key=2, style=dotted];
m11_729 -> m11_730  [key=0, style=solid];
m11_730 -> m11_731  [key=0, style=solid];
m11_730 -> m11_647  [color=darkorchid, key=3, label="Local variable string helloWorld", style=bold];
m11_731 -> m11_732  [key=0, style=solid];
m11_731 -> m11_228  [key=2, style=dotted];
m11_731 -> m11_738  [color=darkseagreen4, key=1, label=helloWorldData, style=dashed];
m11_732 -> m11_733  [key=0, style=solid];
m11_732 -> m11_22  [key=2, style=dotted];
m11_732 -> m11_23  [key=2, style=dotted];
m11_732 -> m11_652  [key=2, style=dotted];
m11_732 -> m11_734  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_732 -> m11_735  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_732 -> m11_736  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_732 -> m11_737  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_732 -> m11_739  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_732 -> m11_740  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_732 -> m11_741  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_732 -> m11_742  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_738 -> m11_739  [key=0, style=solid];
m11_738 -> m11_744  [key=2, style=dotted];
m11_733 -> m11_734  [key=0, style=solid];
m11_733 -> m11_250  [key=2, style=dotted];
m11_733 -> m11_25  [key=2, style=dotted];
m11_734 -> m11_735  [key=0, style=solid];
m11_734 -> m11_26  [key=2, style=dotted];
m11_735 -> m11_736  [key=0, style=solid];
m11_735 -> m11_250  [key=2, style=dotted];
m11_735 -> m11_25  [key=2, style=dotted];
m11_736 -> m11_737  [key=0, style=solid];
m11_736 -> m11_26  [key=2, style=dotted];
m11_737 -> m11_738  [key=0, style=solid];
m11_737 -> m11_645  [key=2, style=dotted];
m11_739 -> m11_740  [key=0, style=solid];
m11_739 -> m11_26  [key=2, style=dotted];
m11_740 -> m11_741  [key=0, style=solid];
m11_740 -> m11_250  [key=2, style=dotted];
m11_740 -> m11_25  [key=2, style=dotted];
m11_741 -> m11_742  [key=0, style=solid];
m11_741 -> m11_26  [key=2, style=dotted];
m11_742 -> m11_743  [key=0, style=solid];
m11_742 -> m11_250  [key=2, style=dotted];
m11_742 -> m11_28  [key=2, style=dotted];
m11_743 -> m11_729  [color=blue, key=0, style=bold];
m11_787 -> m11_788  [key=0, style=solid];
m11_788 -> m11_789  [key=0, style=solid];
m11_788 -> m11_788  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_789 -> m11_790  [key=0, style=solid];
m11_789 -> m11_22  [key=2, style=dotted];
m11_789 -> m11_23  [key=2, style=dotted];
m11_790 -> m11_790  [key=0, style=solid];
m11_790 -> m11_791  [key=0, style=solid];
m11_790 -> m11_24  [key=2, style=dotted];
m11_791 -> m11_787  [color=blue, key=0, style=bold];
m11_1788 -> m11_1789  [key=0, style=solid];
m11_1789 -> m11_1790  [key=0, style=solid];
m11_1789 -> m11_1789  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_1790 -> m11_1791  [key=0, style=solid];
m11_1790 -> m11_22  [key=2, style=dotted];
m11_1790 -> m11_23  [key=2, style=dotted];
m11_1790 -> m11_1792  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1790 -> m11_1793  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1791 -> m11_1792  [key=0, style=solid];
m11_1791 -> m11_115  [key=2, style=dotted];
m11_1792 -> m11_1793  [key=0, style=solid];
m11_1792 -> m11_26  [key=2, style=dotted];
m11_1793 -> m11_1794  [key=0, style=solid];
m11_1793 -> m11_26  [key=2, style=dotted];
m11_1794 -> m11_1788  [color=blue, key=0, style=bold];
m11_2048 -> m11_2049  [key=0, style=solid];
m11_2049 -> m11_2050  [key=0, style=solid];
m11_2049 -> m11_500  [key=2, style=dotted];
m11_2049 -> m11_2055  [color=darkseagreen4, key=1, label=sw, style=dashed];
m11_2050 -> m11_2051  [key=0, style=solid];
m11_2050 -> m11_501  [key=2, style=dotted];
m11_2050 -> m11_2052  [color=darkseagreen4, key=1, label=writer, style=dashed];
m11_2050 -> m11_2053  [color=darkseagreen4, key=1, label=writer, style=dashed];
m11_2050 -> m11_2054  [color=darkseagreen4, key=1, label=writer, style=dashed];
m11_2055 -> m11_2056  [key=0, style=solid];
m11_2055 -> m11_505  [key=2, style=dotted];
m11_2051 -> m11_2052  [key=0, style=solid];
m11_2051 -> m11_502  [key=2, style=dotted];
m11_2052 -> m11_2053  [key=0, style=solid];
m11_2052 -> m11_2065  [key=2, style=dotted];
m11_2053 -> m11_2054  [key=0, style=solid];
m11_2053 -> m11_2065  [key=2, style=dotted];
m11_2054 -> m11_2055  [key=0, style=solid];
m11_2054 -> m11_504  [key=2, style=dotted];
m11_2056 -> m11_2057  [key=0, style=solid];
m11_2056 -> m11_23  [key=2, style=dotted];
m11_2057 -> m11_2058  [key=0, style=solid];
m11_2057 -> m11_22  [key=2, style=dotted];
m11_2057 -> m11_2059  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_2057 -> m11_2061  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_2057 -> m11_2063  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_2058 -> m11_2059  [key=0, style=solid];
m11_2058 -> m11_24  [key=2, style=dotted];
m11_2058 -> m11_25  [key=2, style=dotted];
m11_2059 -> m11_2060  [key=0, style=solid];
m11_2059 -> m11_115  [key=2, style=dotted];
m11_2061 -> m11_2062  [key=0, style=solid];
m11_2061 -> m11_115  [key=2, style=dotted];
m11_2063 -> m11_2064  [key=0, style=solid];
m11_2063 -> m11_24  [key=2, style=dotted];
m11_2063 -> m11_25  [key=2, style=dotted];
m11_2060 -> m11_2061  [key=0, style=solid];
m11_2060 -> m11_26  [key=2, style=dotted];
m11_2062 -> m11_2063  [key=0, style=solid];
m11_2062 -> m11_26  [key=2, style=dotted];
m11_2064 -> m11_2048  [color=blue, key=0, style=bold];
m11_1178 -> m11_1179  [key=0, style=solid];
m11_1179 -> m11_1180  [key=0, style=solid];
m11_1179 -> m11_22  [key=2, style=dotted];
m11_1179 -> m11_23  [key=2, style=dotted];
m11_1179 -> m11_1183  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1180 -> m11_1181  [key=0, style=solid];
m11_1180 -> m11_42  [key=2, style=dotted];
m11_1180 -> m11_1182  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_1181 -> m11_1178  [color=blue, key=0, style=bold];
m11_163 -> m11_164  [key=0, style=solid];
m11_163 -> m11_22  [key=2, style=dotted];
m11_163 -> m11_23  [key=2, style=dotted];
m11_163 -> m11_165  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_163 -> m11_166  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_163 -> m11_167  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_163 -> m11_170  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_2081 -> m11_2082  [key=0, style=solid];
m11_2082 -> m11_2081  [color=blue, key=0, style=bold];
m11_745 -> m11_746  [key=0, style=solid];
m11_746 -> m11_747  [key=0, style=solid];
m11_746 -> m11_647  [color=darkorchid, key=3, label="Local variable string helloWorld", style=bold];
m11_747 -> m11_748  [key=0, style=solid];
m11_747 -> m11_228  [key=2, style=dotted];
m11_747 -> m11_756  [color=darkseagreen4, key=1, label=helloWorldData, style=dashed];
m11_748 -> m11_749  [key=0, style=solid];
m11_748 -> m11_22  [key=2, style=dotted];
m11_748 -> m11_23  [key=2, style=dotted];
m11_748 -> m11_652  [key=2, style=dotted];
m11_748 -> m11_750  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_748 -> m11_751  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_748 -> m11_752  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_748 -> m11_753  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_748 -> m11_754  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_748 -> m11_755  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_748 -> m11_757  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_748 -> m11_758  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_748 -> m11_759  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_748 -> m11_760  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_756 -> m11_757  [key=0, style=solid];
m11_756 -> m11_744  [key=2, style=dotted];
m11_749 -> m11_750  [key=0, style=solid];
m11_749 -> m11_250  [key=2, style=dotted];
m11_749 -> m11_25  [key=2, style=dotted];
m11_750 -> m11_751  [key=0, style=solid];
m11_750 -> m11_26  [key=2, style=dotted];
m11_751 -> m11_752  [key=0, style=solid];
m11_751 -> m11_250  [key=2, style=dotted];
m11_751 -> m11_25  [key=2, style=dotted];
m11_752 -> m11_753  [key=0, style=solid];
m11_752 -> m11_250  [key=2, style=dotted];
m11_752 -> m11_25  [key=2, style=dotted];
m11_753 -> m11_754  [key=0, style=solid];
m11_753 -> m11_26  [key=2, style=dotted];
m11_754 -> m11_755  [key=0, style=solid];
m11_754 -> m11_250  [key=2, style=dotted];
m11_754 -> m11_25  [key=2, style=dotted];
m11_755 -> m11_756  [key=0, style=solid];
m11_755 -> m11_645  [key=2, style=dotted];
m11_757 -> m11_758  [key=0, style=solid];
m11_757 -> m11_26  [key=2, style=dotted];
m11_758 -> m11_759  [key=0, style=solid];
m11_758 -> m11_250  [key=2, style=dotted];
m11_758 -> m11_25  [key=2, style=dotted];
m11_759 -> m11_760  [key=0, style=solid];
m11_759 -> m11_26  [key=2, style=dotted];
m11_760 -> m11_761  [key=0, style=solid];
m11_760 -> m11_250  [key=2, style=dotted];
m11_760 -> m11_28  [key=2, style=dotted];
m11_761 -> m11_745  [color=blue, key=0, style=bold];
m11_1381 -> m11_1382  [key=0, style=solid];
m11_1382 -> m11_1383  [key=0, style=solid];
m11_1382 -> m11_1382  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_1383 -> m11_1384  [key=0, style=solid];
m11_1383 -> m11_22  [key=2, style=dotted];
m11_1383 -> m11_23  [key=2, style=dotted];
m11_1383 -> m11_1385  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1383 -> m11_1386  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1383 -> m11_1387  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1383 -> m11_1388  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1383 -> m11_1391  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1384 -> m11_1385  [key=0, style=solid];
m11_1384 -> m11_24  [key=2, style=dotted];
m11_1384 -> m11_25  [key=2, style=dotted];
m11_1385 -> m11_1386  [key=0, style=solid];
m11_1385 -> m11_26  [key=2, style=dotted];
m11_1386 -> m11_1387  [key=0, style=solid];
m11_1386 -> m11_24  [key=2, style=dotted];
m11_1386 -> m11_25  [key=2, style=dotted];
m11_1387 -> m11_1388  [key=0, style=solid];
m11_1387 -> m11_26  [key=2, style=dotted];
m11_1388 -> m11_1389  [key=0, style=solid];
m11_1388 -> m11_42  [key=2, style=dotted];
m11_1388 -> m11_1390  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_1389 -> m11_1381  [color=blue, key=0, style=bold];
m11_1781 -> m11_1782  [key=0, style=solid];
m11_1782 -> m11_1783  [key=0, style=solid];
m11_1782 -> m11_1782  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_1783 -> m11_1784  [key=0, style=solid];
m11_1783 -> m11_22  [key=2, style=dotted];
m11_1783 -> m11_23  [key=2, style=dotted];
m11_1783 -> m11_1785  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1783 -> m11_1786  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1784 -> m11_1785  [key=0, style=solid];
m11_1784 -> m11_115  [key=2, style=dotted];
m11_1785 -> m11_1786  [key=0, style=solid];
m11_1785 -> m11_26  [key=2, style=dotted];
m11_1786 -> m11_1787  [key=0, style=solid];
m11_1786 -> m11_26  [key=2, style=dotted];
m11_1787 -> m11_1781  [color=blue, key=0, style=bold];
m11_230 -> m11_231  [color=green, key=0, style=solid];
m11_231 -> m11_232  [color=green, key=0, style=solid];
m11_231 -> m11_242  [key=2, style=dotted];
m11_231 -> m11_233  [color=darkseagreen4, key=1, label=ms, style=dashed];
m11_231 -> m11_235  [color=darkseagreen4, key=1, label=ms, style=dashed];
m11_231 -> m11_14  [color=green, key=2, style=dotted];
m11_231 -> m11_234  [color=green, key=1, label="lambda expression", style=dashed];
m11_232 -> m11_233  [key=0, style=solid];
m11_232 -> m11_22  [key=2, style=dotted];
m11_232 -> m11_229  [key=2, style=dotted];
m11_232 -> m11_234  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_232 -> m11_5  [key=2, style=dotted];
m11_233 -> m11_234  [key=0, style=solid];
m11_233 -> m11_25  [key=2, style=dotted];
m11_233 -> m11_230  [color=blue, key=0, style=bold];
m11_237 -> m11_238  [color=green, key=0, style=solid];
m11_237 -> m11_22  [key=2, style=dotted];
m11_237 -> m11_229  [key=2, style=dotted];
m11_237 -> m11_239  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_238 -> m11_239  [color=green, key=0, style=solid];
m11_238 -> m11_25  [key=2, style=dotted];
m11_238 -> m11_14  [color=green, key=2, style=dotted];
m11_238 -> m11_240  [color=green, key=1, label="lambda expression", style=dashed];
m11_239 -> m11_240  [key=0, style=solid];
m11_239 -> m11_243  [key=2, style=dotted];
m11_239 -> m11_237  [color=blue, key=0, style=bold];
m11_1679 -> m11_1680  [key=0, style=solid];
m11_1680 -> m11_1681  [key=0, style=solid];
m11_1681 -> m11_1682  [key=0, style=solid];
m11_1681 -> m11_22  [key=2, style=dotted];
m11_1681 -> m11_229  [key=2, style=dotted];
m11_1681 -> m11_269  [key=2, style=dotted];
m11_1681 -> m11_270  [key=2, style=dotted];
m11_1681 -> m11_1683  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1684  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1685  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1686  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1687  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1688  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1689  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1690  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1691  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1692  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1693  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1694  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1695  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1696  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1697  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1698  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1699  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1700  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1701  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1702  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1703  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1704  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1705  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1706  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1707  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1708  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1709  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1710  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1711  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1712  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1713  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1714  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1715  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1716  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1717  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1718  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1719  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1720  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1721  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1722  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1723  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1724  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1725  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1726  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1727  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1728  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1729  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1730  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1731  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1732  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1733  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1734  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1735  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1736  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1737  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1738  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1739  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1740  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1741  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1742  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1743  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1744  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1745  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1746  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1747  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1748  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1749  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1750  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1751  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1752  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1753  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1754  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1755  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1756  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1757  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1758  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1759  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1760  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1761  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1762  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1681 -> m11_1763  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1682 -> m11_1683  [key=0, style=solid];
m11_1682 -> m11_24  [key=2, style=dotted];
m11_1682 -> m11_25  [key=2, style=dotted];
m11_1683 -> m11_1684  [key=0, style=solid];
m11_1683 -> m11_26  [key=2, style=dotted];
m11_1684 -> m11_1685  [key=0, style=solid];
m11_1684 -> m11_26  [key=2, style=dotted];
m11_1685 -> m11_1686  [key=0, style=solid];
m11_1685 -> m11_26  [key=2, style=dotted];
m11_1686 -> m11_1687  [key=0, style=solid];
m11_1686 -> m11_24  [key=2, style=dotted];
m11_1686 -> m11_25  [key=2, style=dotted];
m11_1687 -> m11_1688  [key=0, style=solid];
m11_1687 -> m11_26  [key=2, style=dotted];
m11_1688 -> m11_1689  [key=0, style=solid];
m11_1688 -> m11_26  [key=2, style=dotted];
m11_1689 -> m11_1690  [key=0, style=solid];
m11_1689 -> m11_24  [key=2, style=dotted];
m11_1689 -> m11_25  [key=2, style=dotted];
m11_1690 -> m11_1691  [key=0, style=solid];
m11_1690 -> m11_26  [key=2, style=dotted];
m11_1691 -> m11_1692  [key=0, style=solid];
m11_1691 -> m11_26  [key=2, style=dotted];
m11_1692 -> m11_1693  [key=0, style=solid];
m11_1692 -> m11_24  [key=2, style=dotted];
m11_1692 -> m11_25  [key=2, style=dotted];
m11_1693 -> m11_1694  [key=0, style=solid];
m11_1693 -> m11_26  [key=2, style=dotted];
m11_1694 -> m11_1695  [key=0, style=solid];
m11_1694 -> m11_26  [key=2, style=dotted];
m11_1695 -> m11_1696  [key=0, style=solid];
m11_1695 -> m11_26  [key=2, style=dotted];
m11_1696 -> m11_1697  [key=0, style=solid];
m11_1696 -> m11_24  [key=2, style=dotted];
m11_1696 -> m11_25  [key=2, style=dotted];
m11_1697 -> m11_1698  [key=0, style=solid];
m11_1697 -> m11_26  [key=2, style=dotted];
m11_1698 -> m11_1699  [key=0, style=solid];
m11_1698 -> m11_26  [key=2, style=dotted];
m11_1699 -> m11_1700  [key=0, style=solid];
m11_1699 -> m11_24  [key=2, style=dotted];
m11_1699 -> m11_25  [key=2, style=dotted];
m11_1700 -> m11_1701  [key=0, style=solid];
m11_1700 -> m11_26  [key=2, style=dotted];
m11_1701 -> m11_1702  [key=0, style=solid];
m11_1701 -> m11_26  [key=2, style=dotted];
m11_1702 -> m11_1703  [key=0, style=solid];
m11_1702 -> m11_26  [key=2, style=dotted];
m11_1703 -> m11_1704  [key=0, style=solid];
m11_1703 -> m11_24  [key=2, style=dotted];
m11_1703 -> m11_25  [key=2, style=dotted];
m11_1704 -> m11_1705  [key=0, style=solid];
m11_1704 -> m11_26  [key=2, style=dotted];
m11_1705 -> m11_1706  [key=0, style=solid];
m11_1705 -> m11_26  [key=2, style=dotted];
m11_1706 -> m11_1707  [key=0, style=solid];
m11_1706 -> m11_26  [key=2, style=dotted];
m11_1707 -> m11_1708  [key=0, style=solid];
m11_1707 -> m11_24  [key=2, style=dotted];
m11_1707 -> m11_25  [key=2, style=dotted];
m11_1708 -> m11_1709  [key=0, style=solid];
m11_1708 -> m11_26  [key=2, style=dotted];
m11_1709 -> m11_1710  [key=0, style=solid];
m11_1709 -> m11_26  [key=2, style=dotted];
m11_1710 -> m11_1711  [key=0, style=solid];
m11_1710 -> m11_26  [key=2, style=dotted];
m11_1711 -> m11_1712  [key=0, style=solid];
m11_1711 -> m11_24  [key=2, style=dotted];
m11_1711 -> m11_25  [key=2, style=dotted];
m11_1712 -> m11_1713  [key=0, style=solid];
m11_1712 -> m11_26  [key=2, style=dotted];
m11_1713 -> m11_1714  [key=0, style=solid];
m11_1713 -> m11_26  [key=2, style=dotted];
m11_1714 -> m11_1715  [key=0, style=solid];
m11_1714 -> m11_26  [key=2, style=dotted];
m11_1715 -> m11_1716  [key=0, style=solid];
m11_1715 -> m11_24  [key=2, style=dotted];
m11_1715 -> m11_25  [key=2, style=dotted];
m11_1716 -> m11_1717  [key=0, style=solid];
m11_1716 -> m11_26  [key=2, style=dotted];
m11_1717 -> m11_1718  [key=0, style=solid];
m11_1717 -> m11_26  [key=2, style=dotted];
m11_1718 -> m11_1719  [key=0, style=solid];
m11_1718 -> m11_24  [key=2, style=dotted];
m11_1718 -> m11_25  [key=2, style=dotted];
m11_1719 -> m11_1720  [key=0, style=solid];
m11_1719 -> m11_26  [key=2, style=dotted];
m11_1720 -> m11_1721  [key=0, style=solid];
m11_1720 -> m11_26  [key=2, style=dotted];
m11_1721 -> m11_1722  [key=0, style=solid];
m11_1721 -> m11_26  [key=2, style=dotted];
m11_1722 -> m11_1723  [key=0, style=solid];
m11_1722 -> m11_24  [key=2, style=dotted];
m11_1722 -> m11_25  [key=2, style=dotted];
m11_1723 -> m11_1724  [key=0, style=solid];
m11_1723 -> m11_26  [key=2, style=dotted];
m11_1724 -> m11_1725  [key=0, style=solid];
m11_1724 -> m11_24  [key=2, style=dotted];
m11_1724 -> m11_25  [key=2, style=dotted];
m11_1725 -> m11_1726  [key=0, style=solid];
m11_1725 -> m11_26  [key=2, style=dotted];
m11_1726 -> m11_1727  [key=0, style=solid];
m11_1726 -> m11_26  [key=2, style=dotted];
m11_1727 -> m11_1728  [key=0, style=solid];
m11_1727 -> m11_24  [key=2, style=dotted];
m11_1727 -> m11_25  [key=2, style=dotted];
m11_1728 -> m11_1729  [key=0, style=solid];
m11_1728 -> m11_26  [key=2, style=dotted];
m11_1729 -> m11_1730  [key=0, style=solid];
m11_1729 -> m11_26  [key=2, style=dotted];
m11_1730 -> m11_1731  [key=0, style=solid];
m11_1730 -> m11_24  [key=2, style=dotted];
m11_1730 -> m11_25  [key=2, style=dotted];
m11_1731 -> m11_1732  [key=0, style=solid];
m11_1731 -> m11_26  [key=2, style=dotted];
m11_1732 -> m11_1733  [key=0, style=solid];
m11_1732 -> m11_26  [key=2, style=dotted];
m11_1733 -> m11_1734  [key=0, style=solid];
m11_1733 -> m11_24  [key=2, style=dotted];
m11_1733 -> m11_25  [key=2, style=dotted];
m11_1734 -> m11_1735  [key=0, style=solid];
m11_1734 -> m11_26  [key=2, style=dotted];
m11_1735 -> m11_1736  [key=0, style=solid];
m11_1735 -> m11_26  [key=2, style=dotted];
m11_1736 -> m11_1737  [key=0, style=solid];
m11_1736 -> m11_24  [key=2, style=dotted];
m11_1736 -> m11_25  [key=2, style=dotted];
m11_1737 -> m11_1738  [key=0, style=solid];
m11_1737 -> m11_26  [key=2, style=dotted];
m11_1738 -> m11_1739  [key=0, style=solid];
m11_1738 -> m11_24  [key=2, style=dotted];
m11_1738 -> m11_25  [key=2, style=dotted];
m11_1739 -> m11_1740  [key=0, style=solid];
m11_1739 -> m11_26  [key=2, style=dotted];
m11_1740 -> m11_1741  [key=0, style=solid];
m11_1740 -> m11_26  [key=2, style=dotted];
m11_1741 -> m11_1742  [key=0, style=solid];
m11_1741 -> m11_24  [key=2, style=dotted];
m11_1741 -> m11_25  [key=2, style=dotted];
m11_1742 -> m11_1743  [key=0, style=solid];
m11_1742 -> m11_26  [key=2, style=dotted];
m11_1743 -> m11_1744  [key=0, style=solid];
m11_1743 -> m11_24  [key=2, style=dotted];
m11_1743 -> m11_25  [key=2, style=dotted];
m11_1744 -> m11_1745  [key=0, style=solid];
m11_1744 -> m11_26  [key=2, style=dotted];
m11_1745 -> m11_1746  [key=0, style=solid];
m11_1745 -> m11_24  [key=2, style=dotted];
m11_1745 -> m11_25  [key=2, style=dotted];
m11_1746 -> m11_1747  [key=0, style=solid];
m11_1746 -> m11_26  [key=2, style=dotted];
m11_1747 -> m11_1748  [key=0, style=solid];
m11_1747 -> m11_24  [key=2, style=dotted];
m11_1747 -> m11_25  [key=2, style=dotted];
m11_1748 -> m11_1749  [key=0, style=solid];
m11_1748 -> m11_26  [key=2, style=dotted];
m11_1749 -> m11_1750  [key=0, style=solid];
m11_1749 -> m11_24  [key=2, style=dotted];
m11_1749 -> m11_25  [key=2, style=dotted];
m11_1750 -> m11_1751  [key=0, style=solid];
m11_1750 -> m11_26  [key=2, style=dotted];
m11_1751 -> m11_1752  [key=0, style=solid];
m11_1751 -> m11_24  [key=2, style=dotted];
m11_1751 -> m11_25  [key=2, style=dotted];
m11_1752 -> m11_1753  [key=0, style=solid];
m11_1752 -> m11_26  [key=2, style=dotted];
m11_1753 -> m11_1754  [key=0, style=solid];
m11_1753 -> m11_24  [key=2, style=dotted];
m11_1753 -> m11_25  [key=2, style=dotted];
m11_1754 -> m11_1755  [key=0, style=solid];
m11_1754 -> m11_26  [key=2, style=dotted];
m11_1755 -> m11_1756  [key=0, style=solid];
m11_1755 -> m11_24  [key=2, style=dotted];
m11_1755 -> m11_25  [key=2, style=dotted];
m11_1756 -> m11_1757  [key=0, style=solid];
m11_1756 -> m11_26  [key=2, style=dotted];
m11_1757 -> m11_1758  [key=0, style=solid];
m11_1757 -> m11_24  [key=2, style=dotted];
m11_1757 -> m11_25  [key=2, style=dotted];
m11_1758 -> m11_1759  [key=0, style=solid];
m11_1758 -> m11_26  [key=2, style=dotted];
m11_1759 -> m11_1760  [key=0, style=solid];
m11_1759 -> m11_26  [key=2, style=dotted];
m11_1760 -> m11_1761  [key=0, style=solid];
m11_1760 -> m11_24  [key=2, style=dotted];
m11_1760 -> m11_25  [key=2, style=dotted];
m11_1761 -> m11_1762  [key=0, style=solid];
m11_1761 -> m11_26  [key=2, style=dotted];
m11_1762 -> m11_1763  [key=0, style=solid];
m11_1762 -> m11_26  [key=2, style=dotted];
m11_1763 -> m11_1764  [key=0, style=solid];
m11_1763 -> m11_24  [key=2, style=dotted];
m11_1763 -> m11_28  [key=2, style=dotted];
m11_1764 -> m11_1679  [color=blue, key=0, style=bold];
m11_1235 -> m11_1236  [key=0, style=solid];
m11_1236 -> m11_1237  [key=0, style=solid];
m11_1236 -> m11_1236  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_1237 -> m11_1238  [key=0, style=solid];
m11_1237 -> m11_22  [key=2, style=dotted];
m11_1237 -> m11_23  [key=2, style=dotted];
m11_1237 -> m11_1239  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1237 -> m11_1240  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1237 -> m11_1241  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1237 -> m11_1242  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1237 -> m11_1243  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1237 -> m11_1244  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1237 -> m11_1245  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1237 -> m11_1246  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1238 -> m11_1239  [key=0, style=solid];
m11_1238 -> m11_24  [key=2, style=dotted];
m11_1238 -> m11_25  [key=2, style=dotted];
m11_1239 -> m11_1240  [key=0, style=solid];
m11_1239 -> m11_26  [key=2, style=dotted];
m11_1240 -> m11_1241  [key=0, style=solid];
m11_1240 -> m11_24  [key=2, style=dotted];
m11_1240 -> m11_25  [key=2, style=dotted];
m11_1241 -> m11_1242  [key=0, style=solid];
m11_1241 -> m11_26  [key=2, style=dotted];
m11_1242 -> m11_1243  [key=0, style=solid];
m11_1242 -> m11_24  [key=2, style=dotted];
m11_1242 -> m11_25  [key=2, style=dotted];
m11_1243 -> m11_1244  [key=0, style=solid];
m11_1243 -> m11_26  [key=2, style=dotted];
m11_1244 -> m11_1245  [key=0, style=solid];
m11_1244 -> m11_26  [key=2, style=dotted];
m11_1245 -> m11_1246  [key=0, style=solid];
m11_1245 -> m11_24  [key=2, style=dotted];
m11_1245 -> m11_25  [key=2, style=dotted];
m11_1246 -> m11_1247  [key=0, style=solid];
m11_1246 -> m11_26  [key=2, style=dotted];
m11_1247 -> m11_1235  [color=blue, key=0, style=bold];
m11_115 -> m11_116  [key=0, style=solid];
m11_119 -> m11_5  [key=2, style=dotted];
m11_119 -> m11_120  [key=0, style=solid];
m11_120 -> m11_5  [key=2, style=dotted];
m11_120 -> m11_121  [key=0, style=solid];
m11_120 -> m11_120  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_121 -> m11_115  [color=blue, key=0, style=bold];
m11_121 -> m11_122  [key=0, style=solid];
m11_121 -> m11_22  [key=2, style=dotted];
m11_121 -> m11_23  [key=2, style=dotted];
m11_121 -> m11_123  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_121 -> m11_124  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_121 -> m11_125  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_121 -> m11_126  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_121 -> m11_127  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_121 -> m11_128  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_121 -> m11_129  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_121 -> m11_130  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_121 -> m11_133  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_2097 -> m11_2098  [key=0, style=solid];
m11_2098 -> m11_2099  [key=0, style=solid];
m11_2098 -> m11_2096  [key=2, style=dotted];
m11_2099 -> m11_2097  [color=blue, key=0, style=bold];
m11_212 -> m11_213  [key=0, style=solid];
m11_212 -> m11_220  [key=2, style=dotted];
m11_212 -> m11_26  [key=2, style=dotted];
m11_213 -> m11_20  [key=2, style=dotted];
m11_213 -> m11_214  [key=0, style=solid];
m11_213 -> m11_216  [color=darkseagreen4, key=1, label=converter, style=dashed];
m11_213 -> m11_218  [color=darkseagreen4, key=1, label=converter, style=dashed];
m11_213 -> m11_220  [key=2, style=dotted];
m11_213 -> m11_26  [key=2, style=dotted];
m11_214 -> m11_38  [key=2, style=dotted];
m11_214 -> m11_215  [key=0, style=solid];
m11_214 -> m11_220  [key=2, style=dotted];
m11_214 -> m11_26  [key=2, style=dotted];
m11_216 -> m11_38  [key=2, style=dotted];
m11_216 -> m11_217  [key=0, style=solid];
m11_216 -> m11_220  [key=2, style=dotted];
m11_216 -> m11_26  [key=2, style=dotted];
m11_218 -> m11_38  [key=2, style=dotted];
m11_218 -> m11_219  [key=0, style=solid];
m11_218 -> m11_220  [key=2, style=dotted];
m11_218 -> m11_26  [key=2, style=dotted];
m11_215 -> m11_5  [key=2, style=dotted];
m11_215 -> m11_216  [key=0, style=solid];
m11_215 -> m11_220  [key=2, style=dotted];
m11_215 -> m11_26  [key=2, style=dotted];
m11_217 -> m11_5  [key=2, style=dotted];
m11_217 -> m11_218  [key=0, style=solid];
m11_217 -> m11_220  [key=2, style=dotted];
m11_217 -> m11_26  [key=2, style=dotted];
m11_219 -> m11_5  [key=2, style=dotted];
m11_219 -> m11_220  [key=0, style=solid];
m11_219 -> m11_206  [color=blue, key=0, style=bold];
m11_220 -> m11_212  [color=blue, key=0, style=bold];
m11_220 -> m11_221  [key=0, style=solid];
m11_220 -> m11_207  [color=darkorchid, key=3, label="Parameter variable string input", style=bold];
m11_220 -> m11_208  [color=darkorchid, key=3, label="Parameter variable string input", style=bold];
m11_220 -> m11_209  [color=darkorchid, key=3, label="Parameter variable string input", style=bold];
m11_220 -> m11_210  [color=darkorchid, key=3, label="Parameter variable string input", style=bold];
m11_220 -> m11_211  [color=darkorchid, key=3, label="Parameter variable string input", style=bold];
m11_220 -> m11_213  [color=darkorchid, key=3, label="Parameter variable string input", style=bold];
m11_220 -> m11_214  [color=darkorchid, key=3, label="Parameter variable string input", style=bold];
m11_220 -> m11_215  [color=darkorchid, key=3, label="Parameter variable string input", style=bold];
m11_220 -> m11_216  [color=darkorchid, key=3, label="Parameter variable string input", style=bold];
m11_220 -> m11_217  [color=darkorchid, key=3, label="Parameter variable string input", style=bold];
m11_220 -> m11_218  [color=darkorchid, key=3, label="Parameter variable string input", style=bold];
m11_220 -> m11_224  [color=darkorchid, key=3, label="method methodReturn string ReadString", style=bold];
m11_79 -> m11_80  [key=0, style=solid];
m11_79 -> m11_81  [key=0, style=solid];
m11_79 -> m11_85  [key=2, style=dotted];
m11_81 -> m11_82  [key=0, style=solid];
m11_81 -> m11_24  [key=2, style=dotted];
m11_81 -> m11_25  [key=2, style=dotted];
m11_82 -> m11_83  [key=0, style=solid];
m11_82 -> m11_26  [key=2, style=dotted];
m11_83 -> m11_84  [key=0, style=solid];
m11_83 -> m11_24  [key=2, style=dotted];
m11_83 -> m11_28  [key=2, style=dotted];
m11_80 -> m11_81  [key=0, style=solid];
m11_80 -> m11_84  [color=darkseagreen4, key=1, label=enumClass, style=dashed];
m11_80 -> m11_62  [key=2, style=dotted];
m11_80 -> m11_82  [color=darkseagreen4, key=1, label=enumClass, style=dashed];
m11_80 -> m11_83  [color=darkseagreen4, key=1, label=enumClass, style=dashed];
m11_84 -> m11_72  [color=blue, key=0, style=bold];
m11_84 -> m11_20  [key=2, style=dotted];
m11_84 -> m11_85  [key=0, style=solid];
m11_84 -> m11_21  [key=2, style=dotted];
m11_1820 -> m11_1821  [key=0, style=solid];
m11_1821 -> m11_1822  [key=0, style=solid];
m11_1822 -> m11_1823  [key=0, style=solid];
m11_1822 -> m11_1863  [key=2, style=dotted];
m11_1822 -> m11_1824  [color=darkseagreen4, key=1, label=d, style=dashed];
m11_1823 -> m11_1824  [key=0, style=solid];
m11_1823 -> m11_1352  [key=2, style=dotted];
m11_1823 -> m11_1864  [key=2, style=dotted];
m11_1823 -> m11_1865  [key=2, style=dotted];
m11_1824 -> m11_1825  [key=0, style=solid];
m11_1824 -> m11_1866  [key=2, style=dotted];
m11_1824 -> m11_1865  [key=2, style=dotted];
m11_1825 -> m11_1826  [key=0, style=solid];
m11_1825 -> m11_1844  [color=darkseagreen4, key=1, label=json, style=dashed];
m11_1825 -> m11_1825  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_1826 -> m11_1827  [key=0, style=solid];
m11_1826 -> m11_22  [key=2, style=dotted];
m11_1826 -> m11_23  [key=2, style=dotted];
m11_1826 -> m11_1828  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1826 -> m11_1829  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1826 -> m11_1830  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1826 -> m11_1831  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1826 -> m11_1832  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1826 -> m11_1833  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1826 -> m11_1834  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1826 -> m11_1835  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1826 -> m11_1836  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1826 -> m11_1837  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1826 -> m11_1838  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1826 -> m11_1839  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1826 -> m11_1840  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1826 -> m11_1841  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1826 -> m11_1842  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1826 -> m11_1843  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1844 -> m11_1845  [key=0, style=solid];
m11_1844 -> m11_22  [key=2, style=dotted];
m11_1844 -> m11_23  [key=2, style=dotted];
m11_1844 -> m11_1846  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1844 -> m11_1847  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1844 -> m11_1848  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1844 -> m11_1849  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1844 -> m11_1850  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1844 -> m11_1851  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1844 -> m11_1852  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1844 -> m11_1853  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1844 -> m11_1854  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1844 -> m11_1855  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1844 -> m11_1856  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1844 -> m11_1857  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1844 -> m11_1858  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1844 -> m11_1859  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1844 -> m11_1860  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1844 -> m11_1861  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1827 -> m11_1828  [key=0, style=solid];
m11_1827 -> m11_24  [key=2, style=dotted];
m11_1828 -> m11_1829  [key=0, style=solid];
m11_1828 -> m11_24  [key=2, style=dotted];
m11_1829 -> m11_1830  [key=0, style=solid];
m11_1829 -> m11_26  [key=2, style=dotted];
m11_1830 -> m11_1831  [key=0, style=solid];
m11_1830 -> m11_26  [key=2, style=dotted];
m11_1831 -> m11_1832  [key=0, style=solid];
m11_1831 -> m11_24  [key=2, style=dotted];
m11_1832 -> m11_1833  [key=0, style=solid];
m11_1832 -> m11_26  [key=2, style=dotted];
m11_1833 -> m11_1834  [key=0, style=solid];
m11_1833 -> m11_26  [key=2, style=dotted];
m11_1834 -> m11_1835  [key=0, style=solid];
m11_1834 -> m11_24  [key=2, style=dotted];
m11_1835 -> m11_1836  [key=0, style=solid];
m11_1835 -> m11_26  [key=2, style=dotted];
m11_1836 -> m11_1837  [key=0, style=solid];
m11_1836 -> m11_26  [key=2, style=dotted];
m11_1837 -> m11_1838  [key=0, style=solid];
m11_1837 -> m11_24  [key=2, style=dotted];
m11_1838 -> m11_1839  [key=0, style=solid];
m11_1838 -> m11_26  [key=2, style=dotted];
m11_1839 -> m11_1840  [key=0, style=solid];
m11_1839 -> m11_26  [key=2, style=dotted];
m11_1840 -> m11_1841  [key=0, style=solid];
m11_1840 -> m11_24  [key=2, style=dotted];
m11_1841 -> m11_1842  [key=0, style=solid];
m11_1841 -> m11_26  [key=2, style=dotted];
m11_1842 -> m11_1843  [key=0, style=solid];
m11_1842 -> m11_26  [key=2, style=dotted];
m11_1843 -> m11_1844  [key=0, style=solid];
m11_1843 -> m11_24  [key=2, style=dotted];
m11_1845 -> m11_1846  [key=0, style=solid];
m11_1845 -> m11_24  [key=2, style=dotted];
m11_1846 -> m11_1847  [key=0, style=solid];
m11_1846 -> m11_115  [key=2, style=dotted];
m11_1847 -> m11_1848  [key=0, style=solid];
m11_1847 -> m11_26  [key=2, style=dotted];
m11_1848 -> m11_1849  [key=0, style=solid];
m11_1848 -> m11_26  [key=2, style=dotted];
m11_1849 -> m11_1850  [key=0, style=solid];
m11_1849 -> m11_115  [key=2, style=dotted];
m11_1850 -> m11_1851  [key=0, style=solid];
m11_1850 -> m11_26  [key=2, style=dotted];
m11_1851 -> m11_1852  [key=0, style=solid];
m11_1851 -> m11_26  [key=2, style=dotted];
m11_1852 -> m11_1853  [key=0, style=solid];
m11_1852 -> m11_115  [key=2, style=dotted];
m11_1853 -> m11_1854  [key=0, style=solid];
m11_1853 -> m11_26  [key=2, style=dotted];
m11_1854 -> m11_1855  [key=0, style=solid];
m11_1854 -> m11_26  [key=2, style=dotted];
m11_1855 -> m11_1856  [key=0, style=solid];
m11_1855 -> m11_115  [key=2, style=dotted];
m11_1856 -> m11_1857  [key=0, style=solid];
m11_1856 -> m11_26  [key=2, style=dotted];
m11_1857 -> m11_1858  [key=0, style=solid];
m11_1857 -> m11_26  [key=2, style=dotted];
m11_1858 -> m11_1859  [key=0, style=solid];
m11_1858 -> m11_115  [key=2, style=dotted];
m11_1859 -> m11_1860  [key=0, style=solid];
m11_1859 -> m11_26  [key=2, style=dotted];
m11_1860 -> m11_1861  [key=0, style=solid];
m11_1860 -> m11_26  [key=2, style=dotted];
m11_1861 -> m11_1862  [key=0, style=solid];
m11_1861 -> m11_24  [key=2, style=dotted];
m11_1862 -> m11_1820  [color=blue, key=0, style=bold];
m11_1279 -> m11_1280  [key=0, style=solid];
m11_1280 -> m11_1281  [key=0, style=solid];
m11_1280 -> m11_1280  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_1281 -> m11_1282  [key=0, style=solid];
m11_1281 -> m11_22  [key=2, style=dotted];
m11_1281 -> m11_23  [key=2, style=dotted];
m11_1281 -> m11_1283  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1281 -> m11_1284  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1281 -> m11_1285  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1281 -> m11_1286  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1281 -> m11_1289  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1282 -> m11_1283  [key=0, style=solid];
m11_1282 -> m11_24  [key=2, style=dotted];
m11_1282 -> m11_25  [key=2, style=dotted];
m11_1283 -> m11_1284  [key=0, style=solid];
m11_1283 -> m11_26  [key=2, style=dotted];
m11_1284 -> m11_1285  [key=0, style=solid];
m11_1284 -> m11_24  [key=2, style=dotted];
m11_1284 -> m11_25  [key=2, style=dotted];
m11_1285 -> m11_1286  [key=0, style=solid];
m11_1285 -> m11_26  [key=2, style=dotted];
m11_1286 -> m11_1287  [key=0, style=solid];
m11_1286 -> m11_42  [key=2, style=dotted];
m11_1286 -> m11_1288  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_1287 -> m11_1279  [color=blue, key=0, style=bold];
m11_11 -> m11_12  [key=0, style=solid];
m11_11 -> m11_24  [key=2, style=dotted];
m11_11 -> m11_25  [key=2, style=dotted];
m11_12 -> m11_14  [key=2, style=dotted];
m11_12 -> m11_13  [key=0, style=solid];
m11_12 -> m11_307  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_12 -> m11_26  [key=2, style=dotted];
m11_13 -> m11_11  [color=blue, key=0, style=bold];
m11_13 -> m11_14  [key=0, style=solid];
m11_13 -> m11_26  [key=2, style=dotted];
m11_221 -> m11_222  [key=0, style=solid];
m11_221 -> m11_227  [key=2, style=dotted];
m11_221 -> m11_228  [key=2, style=dotted];
m11_222 -> m11_20  [key=2, style=dotted];
m11_222 -> m11_223  [key=0, style=solid];
m11_222 -> m11_225  [color=darkseagreen4, key=1, label=converter, style=dashed];
m11_222 -> m11_227  [color=darkseagreen4, key=1, label=converter, style=dashed];
m11_222 -> m11_22  [key=2, style=dotted];
m11_222 -> m11_229  [key=2, style=dotted];
m11_222 -> m11_224  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_223 -> m11_38  [key=2, style=dotted];
m11_223 -> m11_224  [key=0, style=solid];
m11_223 -> m11_24  [key=2, style=dotted];
m11_225 -> m11_38  [key=2, style=dotted];
m11_225 -> m11_226  [key=0, style=solid];
m11_227 -> m11_38  [key=2, style=dotted];
m11_227 -> m11_228  [key=0, style=solid];
m11_224 -> m11_5  [key=2, style=dotted];
m11_224 -> m11_225  [key=0, style=solid];
m11_226 -> m11_5  [key=2, style=dotted];
m11_226 -> m11_227  [key=0, style=solid];
m11_226 -> m11_220  [color=blue, key=0, style=bold];
m11_228 -> m11_5  [key=2, style=dotted];
m11_228 -> m11_229  [key=0, style=solid];
m11_229 -> m11_221  [color=blue, key=0, style=bold];
m11_1457 -> m11_1458  [key=0, style=solid];
m11_1458 -> m11_1459  [key=0, style=solid];
m11_1458 -> m11_1458  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_1459 -> m11_1460  [key=0, style=solid];
m11_1459 -> m11_22  [key=2, style=dotted];
m11_1459 -> m11_23  [key=2, style=dotted];
m11_1459 -> m11_1462  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1459 -> m11_1464  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1459 -> m11_1465  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1460 -> m11_1461  [key=0, style=solid];
m11_1460 -> m11_1463  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_1460 -> m11_485  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m11_1462 -> m11_1463  [key=0, style=solid];
m11_1462 -> m11_24  [key=2, style=dotted];
m11_1464 -> m11_1465  [key=0, style=solid];
m11_1464 -> m11_24  [key=2, style=dotted];
m11_1464 -> m11_25  [key=2, style=dotted];
m11_1465 -> m11_1466  [key=0, style=solid];
m11_1465 -> m11_1467  [key=2, style=dotted];
m11_1465 -> m11_26  [key=2, style=dotted];
m11_1461 -> m11_1462  [key=0, style=solid];
m11_1461 -> m11_1464  [key=0, style=solid];
m11_1463 -> m11_1461  [key=0, style=solid];
m11_1463 -> m11_1463  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_1466 -> m11_1457  [color=blue, key=0, style=bold];
m11_28 -> m11_29  [key=0, style=solid];
m11_28 -> m11_30  [key=2, style=dotted];
m11_563 -> m11_564  [key=0, style=solid];
m11_564 -> m11_565  [key=0, style=solid];
m11_564 -> m11_568  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_564 -> m11_571  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_564 -> m11_564  [color=darkorchid, key=3, label="Local variable long i", style=bold];
m11_565 -> m11_566  [key=0, style=solid];
m11_565 -> m11_22  [key=2, style=dotted];
m11_565 -> m11_23  [key=2, style=dotted];
m11_565 -> m11_558  [key=2, style=dotted];
m11_565 -> m11_567  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_565 -> m11_568  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_565 -> m11_572  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_568 -> m11_569  [key=0, style=solid];
m11_568 -> m11_26  [key=2, style=dotted];
m11_571 -> m11_572  [key=0, style=solid];
m11_571 -> m11_576  [color=darkseagreen4, key=1, label=total, style=dashed];
m11_566 -> m11_567  [key=0, style=solid];
m11_566 -> m11_24  [key=2, style=dotted];
m11_567 -> m11_568  [key=0, style=solid];
m11_567 -> m11_26  [key=2, style=dotted];
m11_572 -> m11_573  [key=0, style=solid];
m11_572 -> m11_42  [key=2, style=dotted];
m11_572 -> m11_575  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_569 -> m11_570  [key=0, style=solid];
m11_569 -> m11_571  [color=darkseagreen4, key=1, label=j, style=dashed];
m11_569 -> m11_573  [color=darkseagreen4, key=1, label=j, style=dashed];
m11_569 -> m11_552  [color=darkorchid, key=3, label="Local variable int j", style=bold];
m11_570 -> m11_571  [key=0, style=solid];
m11_570 -> m11_574  [key=0, style=solid];
m11_573 -> m11_570  [key=0, style=solid];
m11_573 -> m11_573  [color=darkseagreen4, key=1, label=j, style=dashed];
m11_574 -> m11_563  [color=blue, key=0, style=bold];
m11_95 -> m11_96  [key=0, style=solid];
m11_95 -> m11_26  [key=2, style=dotted];
m11_97 -> m11_20  [key=2, style=dotted];
m11_97 -> m11_38  [key=2, style=dotted];
m11_97 -> m11_98  [key=0, style=solid];
m11_97 -> m11_99  [color=darkseagreen4, key=1, label=negativeEnumClass, style=dashed];
m11_97 -> m11_26  [key=2, style=dotted];
m11_98 -> m11_5  [key=2, style=dotted];
m11_98 -> m11_99  [key=0, style=solid];
m11_98 -> m11_24  [key=2, style=dotted];
m11_98 -> m11_28  [key=2, style=dotted];
m11_99 -> m11_5  [key=2, style=dotted];
m11_99 -> m11_100  [key=0, style=solid];
m11_99 -> m11_86  [color=blue, key=0, style=bold];
m11_96 -> m11_97  [key=0, style=solid];
m11_96 -> m11_92  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_96 -> m11_24  [key=2, style=dotted];
m11_96 -> m11_25  [key=2, style=dotted];
m11_100 -> m11_95  [color=blue, key=0, style=bold];
m11_100 -> m11_101  [key=0, style=solid];
m11_1087 -> m11_1088  [key=0, style=solid];
m11_1088 -> m11_1089  [key=0, style=solid];
m11_1088 -> m11_23  [key=2, style=dotted];
m11_1089 -> m11_1090  [key=0, style=solid];
m11_1089 -> m11_22  [key=2, style=dotted];
m11_1089 -> m11_1091  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1089 -> m11_1092  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1089 -> m11_1093  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1089 -> m11_1094  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1089 -> m11_1095  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1089 -> m11_1096  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1089 -> m11_1097  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1089 -> m11_1098  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1089 -> m11_1099  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1089 -> m11_1100  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1089 -> m11_1101  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1089 -> m11_1102  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1089 -> m11_1103  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1090 -> m11_1091  [key=0, style=solid];
m11_1090 -> m11_24  [key=2, style=dotted];
m11_1090 -> m11_25  [key=2, style=dotted];
m11_1091 -> m11_1092  [key=0, style=solid];
m11_1091 -> m11_26  [key=2, style=dotted];
m11_1092 -> m11_1093  [key=0, style=solid];
m11_1092 -> m11_24  [key=2, style=dotted];
m11_1092 -> m11_25  [key=2, style=dotted];
m11_1093 -> m11_1094  [key=0, style=solid];
m11_1093 -> m11_26  [key=2, style=dotted];
m11_1094 -> m11_1095  [key=0, style=solid];
m11_1094 -> m11_26  [key=2, style=dotted];
m11_1095 -> m11_1096  [key=0, style=solid];
m11_1095 -> m11_24  [key=2, style=dotted];
m11_1095 -> m11_25  [key=2, style=dotted];
m11_1096 -> m11_1097  [key=0, style=solid];
m11_1096 -> m11_26  [key=2, style=dotted];
m11_1097 -> m11_1098  [key=0, style=solid];
m11_1097 -> m11_26  [key=2, style=dotted];
m11_1098 -> m11_1099  [key=0, style=solid];
m11_1098 -> m11_24  [key=2, style=dotted];
m11_1098 -> m11_25  [key=2, style=dotted];
m11_1099 -> m11_1100  [key=0, style=solid];
m11_1099 -> m11_26  [key=2, style=dotted];
m11_1100 -> m11_1101  [key=0, style=solid];
m11_1100 -> m11_26  [key=2, style=dotted];
m11_1101 -> m11_1102  [key=0, style=solid];
m11_1101 -> m11_24  [key=2, style=dotted];
m11_1101 -> m11_25  [key=2, style=dotted];
m11_1102 -> m11_1103  [key=0, style=solid];
m11_1102 -> m11_26  [key=2, style=dotted];
m11_1103 -> m11_1104  [key=0, style=solid];
m11_1103 -> m11_24  [key=2, style=dotted];
m11_1103 -> m11_28  [key=2, style=dotted];
m11_1104 -> m11_1087  [color=blue, key=0, style=bold];
m11_2100 -> m11_2101  [key=0, style=solid];
m11_2101 -> m11_2102  [key=0, style=solid];
m11_2101 -> m11_2096  [key=2, style=dotted];
m11_2102 -> m11_2100  [color=blue, key=0, style=bold];
m11_29 -> m11_22  [color=blue, key=0, style=bold];
m11_138 -> m11_139  [key=0, style=solid];
m11_140 -> m11_14  [key=2, style=dotted];
m11_140 -> m11_141  [key=0, style=solid];
m11_140 -> m11_142  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_140 -> m11_26  [key=2, style=dotted];
m11_139 -> m11_140  [key=0, style=solid];
m11_139 -> m11_139  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_139 -> m11_145  [color=darkseagreen4, key=1, label=json, style=dashed];
m11_139 -> m11_24  [key=2, style=dotted];
m11_139 -> m11_25  [key=2, style=dotted];
m11_141 -> m11_138  [color=blue, key=0, style=bold];
m11_141 -> m11_142  [key=0, style=solid];
m11_141 -> m11_24  [key=2, style=dotted];
m11_141 -> m11_25  [key=2, style=dotted];
m11_101 -> m11_102  [key=0, style=solid];
m11_101 -> m11_104  [color=darkseagreen4, key=1, label=json, style=dashed];
m11_101 -> m11_106  [color=darkseagreen4, key=1, label=json, style=dashed];
m11_101 -> m11_101  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_102 -> m11_103  [key=0, style=solid];
m11_102 -> m11_22  [key=2, style=dotted];
m11_102 -> m11_23  [key=2, style=dotted];
m11_102 -> m11_110  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_102 -> m11_102  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_104 -> m11_105  [key=0, style=solid];
m11_104 -> m11_22  [key=2, style=dotted];
m11_104 -> m11_23  [key=2, style=dotted];
m11_104 -> m11_113  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_104 -> m11_5  [key=2, style=dotted];
m11_106 -> m11_107  [key=0, style=solid];
m11_106 -> m11_22  [key=2, style=dotted];
m11_106 -> m11_23  [key=2, style=dotted];
m11_106 -> m11_117  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_106 -> m11_5  [key=2, style=dotted];
m11_103 -> m11_104  [key=0, style=solid];
m11_103 -> m11_42  [key=2, style=dotted];
m11_103 -> m11_109  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_103 -> m11_20  [key=2, style=dotted];
m11_103 -> m11_38  [key=2, style=dotted];
m11_103 -> m11_105  [color=darkseagreen4, key=1, label=enumClass, style=dashed];
m11_103 -> m11_106  [color=darkseagreen4, key=1, label=enumClass, style=dashed];
m11_105 -> m11_106  [key=0, style=solid];
m11_105 -> m11_42  [key=2, style=dotted];
m11_105 -> m11_112  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_105 -> m11_5  [key=2, style=dotted];
m11_107 -> m11_108  [key=0, style=solid];
m11_107 -> m11_42  [key=2, style=dotted];
m11_107 -> m11_116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_107 -> m11_101  [color=blue, key=0, style=bold];
m11_108 -> m11_100  [color=blue, key=0, style=bold];
m11_108 -> m11_109  [key=0, style=solid];
m11_192 -> m11_193  [key=0, style=solid];
m11_193 -> m11_194  [key=0, style=solid];
m11_193 -> m11_193  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_193 -> m11_201  [color=darkseagreen4, key=1, label=ms, style=dashed];
m11_193 -> m11_197  [key=2, style=dotted];
m11_193 -> m11_195  [color=darkseagreen4, key=1, label=ms, style=dashed];
m11_194 -> m11_195  [key=0, style=solid];
m11_194 -> m11_22  [key=2, style=dotted];
m11_194 -> m11_23  [key=2, style=dotted];
m11_194 -> m11_196  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_194 -> m11_197  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_194 -> m11_198  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_194 -> m11_199  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_194 -> m11_203  [color=darkseagreen4, key=1, label=s, style=dashed];
m11_194 -> m11_201  [color=darkseagreen4, key=1, label=s, style=dashed];
m11_195 -> m11_196  [key=0, style=solid];
m11_195 -> m11_24  [key=2, style=dotted];
m11_195 -> m11_25  [key=2, style=dotted];
m11_195 -> m11_200  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_195 -> m11_195  [color=darkorchid, key=3, label="Local variable string xml", style=bold];
m11_195 -> m11_199  [key=2, style=dotted];
m11_196 -> m11_197  [key=0, style=solid];
m11_196 -> m11_24  [key=2, style=dotted];
m11_196 -> m11_25  [key=2, style=dotted];
m11_196 -> m11_192  [color=blue, key=0, style=bold];
m11_198 -> m11_199  [key=0, style=solid];
m11_198 -> m11_26  [key=2, style=dotted];
m11_199 -> m11_200  [key=0, style=solid];
m11_199 -> m11_204  [key=2, style=dotted];
m11_199 -> m11_201  [color=darkseagreen4, key=1, label=s, style=dashed];
m11_164 -> m11_165  [key=0, style=solid];
m11_166 -> m11_20  [key=2, style=dotted];
m11_166 -> m11_167  [key=0, style=solid];
m11_166 -> m11_21  [key=2, style=dotted];
m11_166 -> m11_168  [color=darkseagreen4, key=1, label=json1, style=dashed];
m11_166 -> m11_26  [key=2, style=dotted];
m11_165 -> m11_166  [key=0, style=solid];
m11_165 -> m11_185  [key=2, style=dotted];
m11_165 -> m11_24  [key=2, style=dotted];
m11_165 -> m11_25  [key=2, style=dotted];
m11_167 -> m11_168  [key=0, style=solid];
m11_167 -> m11_30  [key=2, style=dotted];
m11_167 -> m11_42  [key=2, style=dotted];
m11_167 -> m11_169  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_168 -> m11_169  [key=0, style=solid];
m11_168 -> m11_170  [color=darkseagreen4, key=1, label=foos, style=dashed];
m11_168 -> m11_171  [color=darkseagreen4, key=1, label=foos, style=dashed];
m11_168 -> m11_172  [color=darkseagreen4, key=1, label=foos, style=dashed];
m11_168 -> m11_173  [color=darkseagreen4, key=1, label=foos, style=dashed];
m11_168 -> m11_174  [color=darkseagreen4, key=1, label=foos, style=dashed];
m11_168 -> m11_175  [color=darkseagreen4, key=1, label=foos, style=dashed];
m11_168 -> m11_10  [key=2, style=dotted];
m11_168 -> m11_161  [color=blue, key=0, style=bold];
m11_1577 -> m11_1578  [key=0, style=solid];
m11_1578 -> m11_1579  [key=0, style=solid];
m11_1578 -> m11_1578  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_1579 -> m11_1580  [key=0, style=solid];
m11_1579 -> m11_22  [key=2, style=dotted];
m11_1579 -> m11_23  [key=2, style=dotted];
m11_1579 -> m11_1581  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1579 -> m11_1582  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1579 -> m11_1583  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1580 -> m11_1581  [key=0, style=solid];
m11_1580 -> m11_24  [key=2, style=dotted];
m11_1580 -> m11_25  [key=2, style=dotted];
m11_1581 -> m11_1582  [key=0, style=solid];
m11_1581 -> m11_26  [key=2, style=dotted];
m11_1582 -> m11_1583  [key=0, style=solid];
m11_1582 -> m11_24  [key=2, style=dotted];
m11_1582 -> m11_25  [key=2, style=dotted];
m11_1583 -> m11_1584  [key=0, style=solid];
m11_1583 -> m11_26  [key=2, style=dotted];
m11_1584 -> m11_1577  [color=blue, key=0, style=bold];
m11_1442 -> m11_1443  [key=0, style=solid];
m11_1443 -> m11_1444  [key=0, style=solid];
m11_1443 -> m11_1443  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_1444 -> m11_1445  [key=0, style=solid];
m11_1444 -> m11_22  [key=2, style=dotted];
m11_1444 -> m11_23  [key=2, style=dotted];
m11_1444 -> m11_1446  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1444 -> m11_1447  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1444 -> m11_1448  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1444 -> m11_1449  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1444 -> m11_1450  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1444 -> m11_1451  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1444 -> m11_1452  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1444 -> m11_1454  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1444 -> m11_1455  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1445 -> m11_1446  [key=0, style=solid];
m11_1445 -> m11_1352  [key=2, style=dotted];
m11_1446 -> m11_1447  [key=0, style=solid];
m11_1446 -> m11_24  [key=2, style=dotted];
m11_1446 -> m11_25  [key=2, style=dotted];
m11_1447 -> m11_1448  [key=0, style=solid];
m11_1447 -> m11_26  [key=2, style=dotted];
m11_1448 -> m11_1449  [key=0, style=solid];
m11_1448 -> m11_24  [key=2, style=dotted];
m11_1448 -> m11_25  [key=2, style=dotted];
m11_1449 -> m11_1450  [key=0, style=solid];
m11_1449 -> m11_26  [key=2, style=dotted];
m11_1450 -> m11_1451  [key=0, style=solid];
m11_1450 -> m11_115  [key=2, style=dotted];
m11_1450 -> m11_1453  [color=darkseagreen4, key=1, label=d, style=dashed];
m11_1451 -> m11_1452  [key=0, style=solid];
m11_1451 -> m11_26  [key=2, style=dotted];
m11_1452 -> m11_1453  [key=0, style=solid];
m11_1452 -> m11_26  [key=2, style=dotted];
m11_1454 -> m11_1455  [key=0, style=solid];
m11_1454 -> m11_24  [key=2, style=dotted];
m11_1454 -> m11_25  [key=2, style=dotted];
m11_1455 -> m11_1456  [key=0, style=solid];
m11_1455 -> m11_26  [key=2, style=dotted];
m11_1453 -> m11_1454  [key=0, style=solid];
m11_1453 -> m11_26  [key=2, style=dotted];
m11_1456 -> m11_1442  [color=blue, key=0, style=bold];
m11_619 -> m11_620  [key=0, style=solid];
m11_620 -> m11_621  [key=0, style=solid];
m11_620 -> m11_22  [key=2, style=dotted];
m11_620 -> m11_23  [key=2, style=dotted];
m11_620 -> m11_622  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_621 -> m11_622  [key=0, style=solid];
m11_621 -> m11_250  [key=2, style=dotted];
m11_621 -> m11_25  [key=2, style=dotted];
m11_622 -> m11_623  [key=0, style=solid];
m11_622 -> m11_26  [key=2, style=dotted];
m11_623 -> m11_619  [color=blue, key=0, style=bold];
m11_954 -> m11_955  [key=0, style=solid];
m11_955 -> m11_956  [key=0, style=solid];
m11_955 -> m11_955  [color=darkorchid, key=3, label="Local variable string input", style=bold];
m11_956 -> m11_957  [key=0, style=solid];
m11_956 -> m11_23  [key=2, style=dotted];
m11_957 -> m11_958  [key=0, style=solid];
m11_957 -> m11_22  [key=2, style=dotted];
m11_957 -> m11_959  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_957 -> m11_960  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_957 -> m11_961  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_957 -> m11_962  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_957 -> m11_963  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_957 -> m11_964  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_957 -> m11_965  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_957 -> m11_966  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_957 -> m11_967  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_957 -> m11_968  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_957 -> m11_969  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_957 -> m11_970  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_958 -> m11_959  [key=0, style=solid];
m11_958 -> m11_250  [key=2, style=dotted];
m11_959 -> m11_960  [key=0, style=solid];
m11_959 -> m11_26  [key=2, style=dotted];
m11_960 -> m11_961  [key=0, style=solid];
m11_960 -> m11_250  [key=2, style=dotted];
m11_961 -> m11_962  [key=0, style=solid];
m11_961 -> m11_26  [key=2, style=dotted];
m11_962 -> m11_963  [key=0, style=solid];
m11_962 -> m11_26  [key=2, style=dotted];
m11_963 -> m11_964  [key=0, style=solid];
m11_963 -> m11_250  [key=2, style=dotted];
m11_964 -> m11_965  [key=0, style=solid];
m11_964 -> m11_26  [key=2, style=dotted];
m11_965 -> m11_966  [key=0, style=solid];
m11_965 -> m11_26  [key=2, style=dotted];
m11_966 -> m11_967  [key=0, style=solid];
m11_966 -> m11_250  [key=2, style=dotted];
m11_967 -> m11_968  [key=0, style=solid];
m11_967 -> m11_26  [key=2, style=dotted];
m11_968 -> m11_969  [key=0, style=solid];
m11_968 -> m11_26  [key=2, style=dotted];
m11_969 -> m11_970  [key=0, style=solid];
m11_969 -> m11_250  [key=2, style=dotted];
m11_970 -> m11_971  [key=0, style=solid];
m11_970 -> m11_26  [key=2, style=dotted];
m11_971 -> m11_954  [color=blue, key=0, style=bold];
m11_135 -> m11_136  [key=0, style=solid];
m11_135 -> m11_137  [key=2, style=dotted];
m11_136 -> m11_132  [color=blue, key=0, style=bold];
m11_136 -> m11_137  [key=0, style=solid];
m11_136 -> m11_136  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_1640 -> m11_1641  [key=0, style=solid];
m11_1641 -> m11_1642  [key=0, style=solid];
m11_1642 -> m11_1643  [key=0, style=solid];
m11_1642 -> m11_22  [key=2, style=dotted];
m11_1642 -> m11_229  [key=2, style=dotted];
m11_1642 -> m11_269  [key=2, style=dotted];
m11_1642 -> m11_270  [key=2, style=dotted];
m11_1642 -> m11_1644  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1642 -> m11_1645  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1642 -> m11_1646  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1642 -> m11_1647  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1642 -> m11_1648  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1642 -> m11_1649  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1642 -> m11_1650  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1642 -> m11_1651  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1642 -> m11_1652  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1642 -> m11_1653  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1642 -> m11_1654  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1642 -> m11_1655  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1642 -> m11_1656  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1642 -> m11_1657  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1642 -> m11_1658  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1642 -> m11_1659  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1642 -> m11_1660  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1642 -> m11_1661  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1642 -> m11_1662  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1642 -> m11_1663  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1642 -> m11_1664  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1642 -> m11_1665  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1642 -> m11_1666  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1642 -> m11_1667  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1642 -> m11_1668  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1642 -> m11_1669  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1642 -> m11_1670  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1642 -> m11_1671  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1642 -> m11_1672  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1642 -> m11_1673  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1642 -> m11_1674  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1642 -> m11_1675  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1642 -> m11_1676  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1642 -> m11_1677  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1643 -> m11_1644  [key=0, style=solid];
m11_1643 -> m11_24  [key=2, style=dotted];
m11_1643 -> m11_25  [key=2, style=dotted];
m11_1644 -> m11_1645  [key=0, style=solid];
m11_1644 -> m11_26  [key=2, style=dotted];
m11_1645 -> m11_1646  [key=0, style=solid];
m11_1645 -> m11_24  [key=2, style=dotted];
m11_1645 -> m11_25  [key=2, style=dotted];
m11_1646 -> m11_1647  [key=0, style=solid];
m11_1646 -> m11_26  [key=2, style=dotted];
m11_1647 -> m11_1648  [key=0, style=solid];
m11_1647 -> m11_24  [key=2, style=dotted];
m11_1647 -> m11_25  [key=2, style=dotted];
m11_1648 -> m11_1649  [key=0, style=solid];
m11_1648 -> m11_26  [key=2, style=dotted];
m11_1649 -> m11_1650  [key=0, style=solid];
m11_1649 -> m11_24  [key=2, style=dotted];
m11_1649 -> m11_25  [key=2, style=dotted];
m11_1650 -> m11_1651  [key=0, style=solid];
m11_1650 -> m11_26  [key=2, style=dotted];
m11_1651 -> m11_1652  [key=0, style=solid];
m11_1651 -> m11_26  [key=2, style=dotted];
m11_1652 -> m11_1653  [key=0, style=solid];
m11_1652 -> m11_24  [key=2, style=dotted];
m11_1652 -> m11_25  [key=2, style=dotted];
m11_1653 -> m11_1654  [key=0, style=solid];
m11_1653 -> m11_26  [key=2, style=dotted];
m11_1654 -> m11_1655  [key=0, style=solid];
m11_1654 -> m11_24  [key=2, style=dotted];
m11_1654 -> m11_25  [key=2, style=dotted];
m11_1655 -> m11_1656  [key=0, style=solid];
m11_1655 -> m11_26  [key=2, style=dotted];
m11_1656 -> m11_1657  [key=0, style=solid];
m11_1656 -> m11_26  [key=2, style=dotted];
m11_1657 -> m11_1658  [key=0, style=solid];
m11_1657 -> m11_24  [key=2, style=dotted];
m11_1657 -> m11_25  [key=2, style=dotted];
m11_1658 -> m11_1659  [key=0, style=solid];
m11_1658 -> m11_26  [key=2, style=dotted];
m11_1659 -> m11_1660  [key=0, style=solid];
m11_1659 -> m11_24  [key=2, style=dotted];
m11_1659 -> m11_25  [key=2, style=dotted];
m11_1660 -> m11_1661  [key=0, style=solid];
m11_1660 -> m11_26  [key=2, style=dotted];
m11_1661 -> m11_1662  [key=0, style=solid];
m11_1661 -> m11_24  [key=2, style=dotted];
m11_1661 -> m11_25  [key=2, style=dotted];
m11_1662 -> m11_1663  [key=0, style=solid];
m11_1662 -> m11_26  [key=2, style=dotted];
m11_1663 -> m11_1664  [key=0, style=solid];
m11_1663 -> m11_26  [key=2, style=dotted];
m11_1664 -> m11_1665  [key=0, style=solid];
m11_1664 -> m11_24  [key=2, style=dotted];
m11_1664 -> m11_25  [key=2, style=dotted];
m11_1665 -> m11_1666  [key=0, style=solid];
m11_1665 -> m11_26  [key=2, style=dotted];
m11_1666 -> m11_1667  [key=0, style=solid];
m11_1666 -> m11_24  [key=2, style=dotted];
m11_1666 -> m11_25  [key=2, style=dotted];
m11_1667 -> m11_1668  [key=0, style=solid];
m11_1667 -> m11_26  [key=2, style=dotted];
m11_1668 -> m11_1669  [key=0, style=solid];
m11_1668 -> m11_26  [key=2, style=dotted];
m11_1669 -> m11_1670  [key=0, style=solid];
m11_1669 -> m11_26  [key=2, style=dotted];
m11_1670 -> m11_1671  [key=0, style=solid];
m11_1670 -> m11_24  [key=2, style=dotted];
m11_1670 -> m11_25  [key=2, style=dotted];
m11_1671 -> m11_1672  [key=0, style=solid];
m11_1671 -> m11_26  [key=2, style=dotted];
m11_1672 -> m11_1673  [key=0, style=solid];
m11_1672 -> m11_24  [key=2, style=dotted];
m11_1672 -> m11_25  [key=2, style=dotted];
m11_1673 -> m11_1674  [key=0, style=solid];
m11_1673 -> m11_26  [key=2, style=dotted];
m11_1674 -> m11_1675  [key=0, style=solid];
m11_1674 -> m11_24  [key=2, style=dotted];
m11_1674 -> m11_25  [key=2, style=dotted];
m11_1675 -> m11_1676  [key=0, style=solid];
m11_1675 -> m11_26  [key=2, style=dotted];
m11_1676 -> m11_1677  [key=0, style=solid];
m11_1676 -> m11_24  [key=2, style=dotted];
m11_1676 -> m11_25  [key=2, style=dotted];
m11_1677 -> m11_1678  [key=0, style=solid];
m11_1677 -> m11_26  [key=2, style=dotted];
m11_1678 -> m11_1640  [color=blue, key=0, style=bold];
m11_1336 -> m11_1337  [key=0, style=solid];
m11_1337 -> m11_1338  [key=0, style=solid];
m11_1337 -> m11_1337  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_1338 -> m11_1339  [key=0, style=solid];
m11_1338 -> m11_22  [key=2, style=dotted];
m11_1338 -> m11_23  [key=2, style=dotted];
m11_1338 -> m11_1340  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1338 -> m11_1341  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1338 -> m11_1342  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1338 -> m11_1343  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1338 -> m11_1344  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1338 -> m11_1345  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1338 -> m11_1346  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1338 -> m11_1347  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1338 -> m11_1349  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1338 -> m11_1350  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1339 -> m11_1340  [key=0, style=solid];
m11_1339 -> m11_1352  [key=2, style=dotted];
m11_1340 -> m11_1341  [key=0, style=solid];
m11_1340 -> m11_24  [key=2, style=dotted];
m11_1340 -> m11_25  [key=2, style=dotted];
m11_1341 -> m11_1342  [key=0, style=solid];
m11_1341 -> m11_26  [key=2, style=dotted];
m11_1342 -> m11_1343  [key=0, style=solid];
m11_1342 -> m11_24  [key=2, style=dotted];
m11_1342 -> m11_25  [key=2, style=dotted];
m11_1343 -> m11_1344  [key=0, style=solid];
m11_1343 -> m11_26  [key=2, style=dotted];
m11_1344 -> m11_1345  [key=0, style=solid];
m11_1344 -> m11_1177  [key=2, style=dotted];
m11_1345 -> m11_1346  [key=0, style=solid];
m11_1345 -> m11_26  [key=2, style=dotted];
m11_1346 -> m11_1347  [key=0, style=solid];
m11_1346 -> m11_26  [key=2, style=dotted];
m11_1347 -> m11_1348  [key=0, style=solid];
m11_1349 -> m11_1350  [key=0, style=solid];
m11_1349 -> m11_24  [key=2, style=dotted];
m11_1349 -> m11_25  [key=2, style=dotted];
m11_1350 -> m11_1351  [key=0, style=solid];
m11_1350 -> m11_26  [key=2, style=dotted];
m11_1348 -> m11_1349  [key=0, style=solid];
m11_1348 -> m11_1335  [key=2, style=dotted];
m11_1348 -> m11_26  [key=2, style=dotted];
m11_1348 -> m11_1348  [color=darkseagreen4, key=1, label=dt, style=dashed];
m11_1351 -> m11_1336  [color=blue, key=0, style=bold];
m11_1876 -> m11_1877  [key=0, style=solid];
m11_1877 -> m11_1878  [key=0, style=solid];
m11_1877 -> m11_1877  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_1878 -> m11_1879  [key=0, style=solid];
m11_1878 -> m11_22  [key=2, style=dotted];
m11_1878 -> m11_23  [key=2, style=dotted];
m11_1878 -> m11_1880  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1878 -> m11_1881  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1878 -> m11_1906  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1878 -> m11_1882  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1878 -> m11_1883  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1878 -> m11_1884  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1878 -> m11_1885  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1878 -> m11_1886  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1878 -> m11_1887  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1878 -> m11_1888  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1878 -> m11_1889  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1878 -> m11_1890  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1878 -> m11_1891  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1878 -> m11_1892  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1878 -> m11_1893  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1878 -> m11_1909  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1878 -> m11_1894  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1878 -> m11_1895  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1878 -> m11_1896  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1878 -> m11_1897  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1878 -> m11_1898  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1878 -> m11_1899  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1878 -> m11_1900  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1878 -> m11_1901  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1878 -> m11_1902  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1878 -> m11_1903  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1879 -> m11_1880  [key=0, style=solid];
m11_1879 -> m11_24  [key=2, style=dotted];
m11_1879 -> m11_25  [key=2, style=dotted];
m11_1880 -> m11_1881  [key=0, style=solid];
m11_1880 -> m11_26  [key=2, style=dotted];
m11_1881 -> m11_1882  [key=0, style=solid];
m11_1881 -> m11_1613  [key=2, style=dotted];
m11_1881 -> m11_1905  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_1882 -> m11_1883  [key=0, style=solid];
m11_1882 -> m11_26  [key=2, style=dotted];
m11_1883 -> m11_1884  [key=0, style=solid];
m11_1883 -> m11_24  [key=2, style=dotted];
m11_1883 -> m11_25  [key=2, style=dotted];
m11_1884 -> m11_1885  [key=0, style=solid];
m11_1884 -> m11_26  [key=2, style=dotted];
m11_1885 -> m11_1886  [key=0, style=solid];
m11_1885 -> m11_24  [key=2, style=dotted];
m11_1885 -> m11_25  [key=2, style=dotted];
m11_1886 -> m11_1887  [key=0, style=solid];
m11_1886 -> m11_26  [key=2, style=dotted];
m11_1887 -> m11_1888  [key=0, style=solid];
m11_1887 -> m11_24  [key=2, style=dotted];
m11_1887 -> m11_25  [key=2, style=dotted];
m11_1888 -> m11_1889  [key=0, style=solid];
m11_1888 -> m11_26  [key=2, style=dotted];
m11_1889 -> m11_1890  [key=0, style=solid];
m11_1889 -> m11_24  [key=2, style=dotted];
m11_1889 -> m11_25  [key=2, style=dotted];
m11_1890 -> m11_1891  [key=0, style=solid];
m11_1890 -> m11_26  [key=2, style=dotted];
m11_1891 -> m11_1892  [key=0, style=solid];
m11_1891 -> m11_24  [key=2, style=dotted];
m11_1891 -> m11_25  [key=2, style=dotted];
m11_1892 -> m11_1893  [key=0, style=solid];
m11_1892 -> m11_26  [key=2, style=dotted];
m11_1893 -> m11_1894  [key=0, style=solid];
m11_1893 -> m11_1613  [key=2, style=dotted];
m11_1893 -> m11_1908  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_1894 -> m11_1895  [key=0, style=solid];
m11_1894 -> m11_26  [key=2, style=dotted];
m11_1895 -> m11_1896  [key=0, style=solid];
m11_1895 -> m11_24  [key=2, style=dotted];
m11_1895 -> m11_25  [key=2, style=dotted];
m11_1896 -> m11_1897  [key=0, style=solid];
m11_1896 -> m11_26  [key=2, style=dotted];
m11_1897 -> m11_1898  [key=0, style=solid];
m11_1897 -> m11_24  [key=2, style=dotted];
m11_1897 -> m11_25  [key=2, style=dotted];
m11_1898 -> m11_1899  [key=0, style=solid];
m11_1898 -> m11_26  [key=2, style=dotted];
m11_1899 -> m11_1900  [key=0, style=solid];
m11_1899 -> m11_24  [key=2, style=dotted];
m11_1899 -> m11_25  [key=2, style=dotted];
m11_1900 -> m11_1901  [key=0, style=solid];
m11_1900 -> m11_26  [key=2, style=dotted];
m11_1901 -> m11_1902  [key=0, style=solid];
m11_1901 -> m11_24  [key=2, style=dotted];
m11_1901 -> m11_25  [key=2, style=dotted];
m11_1902 -> m11_1903  [key=0, style=solid];
m11_1902 -> m11_26  [key=2, style=dotted];
m11_1903 -> m11_1904  [key=0, style=solid];
m11_1903 -> m11_24  [key=2, style=dotted];
m11_1903 -> m11_28  [key=2, style=dotted];
m11_1904 -> m11_1876  [color=blue, key=0, style=bold];
m11_656 -> m11_657  [key=0, style=solid];
m11_657 -> m11_658  [key=0, style=solid];
m11_657 -> m11_22  [key=2, style=dotted];
m11_657 -> m11_23  [key=2, style=dotted];
m11_657 -> m11_659  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_657 -> m11_660  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_658 -> m11_659  [key=0, style=solid];
m11_658 -> m11_250  [key=2, style=dotted];
m11_658 -> m11_25  [key=2, style=dotted];
m11_659 -> m11_660  [key=0, style=solid];
m11_659 -> m11_645  [key=2, style=dotted];
m11_659 -> m11_662  [key=2, style=dotted];
m11_660 -> m11_661  [key=0, style=solid];
m11_660 -> m11_26  [key=2, style=dotted];
m11_661 -> m11_656  [color=blue, key=0, style=bold];
m11_149 -> m11_150  [key=0, style=solid];
m11_149 -> m11_24  [key=2, style=dotted];
m11_149 -> m11_25  [key=2, style=dotted];
m11_22 -> m11_23  [key=0, style=solid];
m11_147 -> m11_148  [key=0, style=solid];
m11_147 -> m11_26  [key=2, style=dotted];
m11_459 -> m11_460  [key=0, style=solid];
m11_460 -> m11_461  [key=0, style=solid];
m11_460 -> m11_42  [key=2, style=dotted];
m11_460 -> m11_462  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_461 -> m11_459  [color=blue, key=0, style=bold];
m11_262 -> m11_263  [key=0, style=solid];
m11_262 -> m11_250  [key=2, style=dotted];
m11_262 -> m11_25  [key=2, style=dotted];
m11_263 -> m11_20  [key=2, style=dotted];
m11_263 -> m11_38  [key=2, style=dotted];
m11_263 -> m11_264  [key=0, style=solid];
m11_263 -> m11_26  [key=2, style=dotted];
m11_265 -> m11_20  [key=2, style=dotted];
m11_265 -> m11_38  [key=2, style=dotted];
m11_265 -> m11_266  [key=0, style=solid];
m11_265 -> m11_26  [key=2, style=dotted];
m11_264 -> m11_5  [key=2, style=dotted];
m11_264 -> m11_265  [key=0, style=solid];
m11_264 -> m11_250  [key=2, style=dotted];
m11_264 -> m11_25  [key=2, style=dotted];
m11_266 -> m11_5  [key=2, style=dotted];
m11_266 -> m11_267  [key=0, style=solid];
m11_266 -> m11_250  [key=2, style=dotted];
m11_266 -> m11_25  [key=2, style=dotted];
m11_267 -> m11_262  [color=blue, key=0, style=bold];
m11_267 -> m11_268  [key=0, style=solid];
m11_267 -> m11_26  [key=2, style=dotted];
m11_279 -> m11_280  [key=0, style=solid];
m11_280 -> m11_281  [key=0, style=solid];
m11_280 -> m11_280  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_281 -> m11_282  [key=0, style=solid];
m11_281 -> m11_22  [key=2, style=dotted];
m11_281 -> m11_23  [key=2, style=dotted];
m11_281 -> m11_283  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_281 -> m11_284  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_281 -> m11_285  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_281 -> m11_286  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_281 -> m11_287  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_281 -> m11_288  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_281 -> m11_289  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_281 -> m11_290  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_281 -> m11_291  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_281 -> m11_292  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_281 -> m11_295  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_282 -> m11_283  [key=0, style=solid];
m11_282 -> m11_24  [key=2, style=dotted];
m11_283 -> m11_284  [key=0, style=solid];
m11_283 -> m11_26  [key=2, style=dotted];
m11_284 -> m11_285  [key=0, style=solid];
m11_284 -> m11_24  [key=2, style=dotted];
m11_285 -> m11_286  [key=0, style=solid];
m11_285 -> m11_26  [key=2, style=dotted];
m11_286 -> m11_287  [key=0, style=solid];
m11_286 -> m11_24  [key=2, style=dotted];
m11_287 -> m11_288  [key=0, style=solid];
m11_287 -> m11_26  [key=2, style=dotted];
m11_288 -> m11_289  [key=0, style=solid];
m11_288 -> m11_24  [key=2, style=dotted];
m11_289 -> m11_290  [key=0, style=solid];
m11_289 -> m11_26  [key=2, style=dotted];
m11_290 -> m11_291  [key=0, style=solid];
m11_290 -> m11_24  [key=2, style=dotted];
m11_291 -> m11_292  [key=0, style=solid];
m11_291 -> m11_26  [key=2, style=dotted];
m11_292 -> m11_293  [key=0, style=solid];
m11_292 -> m11_42  [key=2, style=dotted];
m11_292 -> m11_294  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_293 -> m11_279  [color=blue, key=0, style=bold];
m11_1546 -> m11_1547  [key=0, style=solid];
m11_1547 -> m11_1548  [key=0, style=solid];
m11_1547 -> m11_1547  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_1548 -> m11_1549  [key=0, style=solid];
m11_1548 -> m11_22  [key=2, style=dotted];
m11_1548 -> m11_23  [key=2, style=dotted];
m11_1548 -> m11_1550  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1548 -> m11_1551  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1549 -> m11_1550  [key=0, style=solid];
m11_1549 -> m11_24  [key=2, style=dotted];
m11_1549 -> m11_25  [key=2, style=dotted];
m11_1550 -> m11_1551  [key=0, style=solid];
m11_1550 -> m11_24  [key=2, style=dotted];
m11_1550 -> m11_25  [key=2, style=dotted];
m11_1551 -> m11_1552  [key=0, style=solid];
m11_1551 -> m11_24  [key=2, style=dotted];
m11_1551 -> m11_28  [key=2, style=dotted];
m11_1552 -> m11_1546  [color=blue, key=0, style=bold];
m11_24 -> m11_20  [key=2, style=dotted];
m11_24 -> m11_25  [key=0, style=solid];
m11_24 -> m11_21  [key=2, style=dotted];
m11_27 -> m11_20  [key=2, style=dotted];
m11_27 -> m11_28  [key=0, style=solid];
m11_27 -> m11_21  [key=2, style=dotted];
m11_23 -> m11_24  [key=0, style=solid];
m11_23 -> m11_19  [key=2, style=dotted];
m11_25 -> m11_26  [key=0, style=solid];
m11_25 -> m11_30  [key=2, style=dotted];
m11_26 -> m11_27  [key=0, style=solid];
m11_26 -> m11_19  [key=2, style=dotted];
m11_1105 -> m11_1106  [key=0, style=solid];
m11_1106 -> m11_1107  [key=0, style=solid];
m11_1106 -> m11_23  [key=2, style=dotted];
m11_1107 -> m11_1108  [key=0, style=solid];
m11_1107 -> m11_22  [key=2, style=dotted];
m11_1107 -> m11_1109  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1107 -> m11_1110  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1107 -> m11_1111  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1107 -> m11_1112  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1107 -> m11_1113  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1107 -> m11_1114  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1107 -> m11_1115  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1107 -> m11_1116  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1107 -> m11_1117  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1107 -> m11_1118  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1107 -> m11_1119  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1107 -> m11_1120  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1107 -> m11_1121  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1107 -> m11_1122  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1107 -> m11_1123  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1107 -> m11_1124  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1108 -> m11_1109  [key=0, style=solid];
m11_1108 -> m11_24  [key=2, style=dotted];
m11_1108 -> m11_25  [key=2, style=dotted];
m11_1109 -> m11_1110  [key=0, style=solid];
m11_1109 -> m11_26  [key=2, style=dotted];
m11_1110 -> m11_1111  [key=0, style=solid];
m11_1110 -> m11_24  [key=2, style=dotted];
m11_1111 -> m11_1112  [key=0, style=solid];
m11_1111 -> m11_26  [key=2, style=dotted];
m11_1112 -> m11_1113  [key=0, style=solid];
m11_1112 -> m11_26  [key=2, style=dotted];
m11_1113 -> m11_1114  [key=0, style=solid];
m11_1113 -> m11_26  [key=2, style=dotted];
m11_1114 -> m11_1115  [key=0, style=solid];
m11_1114 -> m11_24  [key=2, style=dotted];
m11_1115 -> m11_1116  [key=0, style=solid];
m11_1115 -> m11_26  [key=2, style=dotted];
m11_1116 -> m11_1117  [key=0, style=solid];
m11_1116 -> m11_26  [key=2, style=dotted];
m11_1117 -> m11_1118  [key=0, style=solid];
m11_1117 -> m11_26  [key=2, style=dotted];
m11_1118 -> m11_1119  [key=0, style=solid];
m11_1118 -> m11_24  [key=2, style=dotted];
m11_1119 -> m11_1120  [key=0, style=solid];
m11_1119 -> m11_26  [key=2, style=dotted];
m11_1120 -> m11_1121  [key=0, style=solid];
m11_1120 -> m11_26  [key=2, style=dotted];
m11_1121 -> m11_1122  [key=0, style=solid];
m11_1121 -> m11_26  [key=2, style=dotted];
m11_1122 -> m11_1123  [key=0, style=solid];
m11_1122 -> m11_24  [key=2, style=dotted];
m11_1122 -> m11_25  [key=2, style=dotted];
m11_1123 -> m11_1124  [key=0, style=solid];
m11_1123 -> m11_26  [key=2, style=dotted];
m11_1124 -> m11_1125  [key=0, style=solid];
m11_1124 -> m11_24  [key=2, style=dotted];
m11_1124 -> m11_28  [key=2, style=dotted];
m11_1125 -> m11_1105  [color=blue, key=0, style=bold];
m11_94 -> m11_95  [key=0, style=solid];
m11_94 -> m11_26  [key=2, style=dotted];
m11_271 -> m11_272  [key=0, style=solid];
m11_272 -> m11_273  [key=0, style=solid];
m11_272 -> m11_272  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_273 -> m11_274  [key=0, style=solid];
m11_273 -> m11_22  [key=2, style=dotted];
m11_273 -> m11_23  [key=2, style=dotted];
m11_273 -> m11_277  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_274 -> m11_275  [key=0, style=solid];
m11_274 -> m11_42  [key=2, style=dotted];
m11_274 -> m11_276  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_275 -> m11_271  [color=blue, key=0, style=bold];
m11_1126 -> m11_1127  [key=0, style=solid];
m11_1127 -> m11_1128  [key=0, style=solid];
m11_1127 -> m11_23  [key=2, style=dotted];
m11_1128 -> m11_1129  [key=0, style=solid];
m11_1128 -> m11_22  [key=2, style=dotted];
m11_1128 -> m11_1130  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1128 -> m11_1131  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1128 -> m11_1132  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1128 -> m11_1133  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1128 -> m11_1134  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1128 -> m11_1135  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1128 -> m11_1136  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1128 -> m11_1137  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1128 -> m11_1138  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1128 -> m11_1139  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1128 -> m11_1140  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1128 -> m11_1141  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1128 -> m11_1142  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1128 -> m11_1143  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1128 -> m11_1144  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1128 -> m11_1145  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1129 -> m11_1130  [key=0, style=solid];
m11_1129 -> m11_24  [key=2, style=dotted];
m11_1129 -> m11_25  [key=2, style=dotted];
m11_1130 -> m11_1131  [key=0, style=solid];
m11_1130 -> m11_26  [key=2, style=dotted];
m11_1131 -> m11_1132  [key=0, style=solid];
m11_1131 -> m11_46  [key=2, style=dotted];
m11_1132 -> m11_1133  [key=0, style=solid];
m11_1132 -> m11_26  [key=2, style=dotted];
m11_1133 -> m11_1134  [key=0, style=solid];
m11_1133 -> m11_26  [key=2, style=dotted];
m11_1134 -> m11_1135  [key=0, style=solid];
m11_1134 -> m11_26  [key=2, style=dotted];
m11_1135 -> m11_1136  [key=0, style=solid];
m11_1135 -> m11_46  [key=2, style=dotted];
m11_1136 -> m11_1137  [key=0, style=solid];
m11_1136 -> m11_26  [key=2, style=dotted];
m11_1137 -> m11_1138  [key=0, style=solid];
m11_1137 -> m11_26  [key=2, style=dotted];
m11_1138 -> m11_1139  [key=0, style=solid];
m11_1138 -> m11_26  [key=2, style=dotted];
m11_1139 -> m11_1140  [key=0, style=solid];
m11_1139 -> m11_46  [key=2, style=dotted];
m11_1140 -> m11_1141  [key=0, style=solid];
m11_1140 -> m11_26  [key=2, style=dotted];
m11_1141 -> m11_1142  [key=0, style=solid];
m11_1141 -> m11_26  [key=2, style=dotted];
m11_1142 -> m11_1143  [key=0, style=solid];
m11_1142 -> m11_26  [key=2, style=dotted];
m11_1143 -> m11_1144  [key=0, style=solid];
m11_1143 -> m11_24  [key=2, style=dotted];
m11_1143 -> m11_25  [key=2, style=dotted];
m11_1144 -> m11_1145  [key=0, style=solid];
m11_1144 -> m11_26  [key=2, style=dotted];
m11_1145 -> m11_1146  [key=0, style=solid];
m11_1145 -> m11_24  [key=2, style=dotted];
m11_1145 -> m11_28  [key=2, style=dotted];
m11_1146 -> m11_1126  [color=blue, key=0, style=bold];
m11_310 -> m11_311  [key=0, style=solid];
m11_311 -> m11_312  [key=0, style=solid];
m11_311 -> m11_311  [color=darkorchid, key=3, label="Local variable string input", style=bold];
m11_312 -> m11_313  [key=0, style=solid];
m11_312 -> m11_23  [key=2, style=dotted];
m11_313 -> m11_314  [key=0, style=solid];
m11_313 -> m11_22  [key=2, style=dotted];
m11_313 -> m11_315  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_313 -> m11_316  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_313 -> m11_317  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_313 -> m11_318  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_313 -> m11_319  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_313 -> m11_320  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_313 -> m11_321  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_313 -> m11_322  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_313 -> m11_323  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_313 -> m11_324  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_313 -> m11_325  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_313 -> m11_326  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_313 -> m11_327  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_313 -> m11_328  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_313 -> m11_329  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_313 -> m11_330  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_313 -> m11_331  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_313 -> m11_332  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_313 -> m11_333  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_313 -> m11_334  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_313 -> m11_335  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_313 -> m11_336  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_313 -> m11_337  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_313 -> m11_338  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_313 -> m11_339  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_313 -> m11_340  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_313 -> m11_341  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_313 -> m11_342  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_313 -> m11_343  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_313 -> m11_344  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_313 -> m11_345  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_313 -> m11_346  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_313 -> m11_347  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_313 -> m11_348  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_313 -> m11_349  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_313 -> m11_350  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_313 -> m11_351  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_313 -> m11_352  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_313 -> m11_353  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_313 -> m11_354  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_313 -> m11_355  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_313 -> m11_356  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_313 -> m11_357  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_313 -> m11_358  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_313 -> m11_359  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_313 -> m11_360  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_314 -> m11_315  [key=0, style=solid];
m11_314 -> m11_26  [key=2, style=dotted];
m11_315 -> m11_316  [key=0, style=solid];
m11_315 -> m11_26  [key=2, style=dotted];
m11_316 -> m11_317  [key=0, style=solid];
m11_316 -> m11_26  [key=2, style=dotted];
m11_317 -> m11_318  [key=0, style=solid];
m11_317 -> m11_24  [key=2, style=dotted];
m11_318 -> m11_319  [key=0, style=solid];
m11_318 -> m11_26  [key=2, style=dotted];
m11_319 -> m11_320  [key=0, style=solid];
m11_319 -> m11_26  [key=2, style=dotted];
m11_320 -> m11_321  [key=0, style=solid];
m11_320 -> m11_26  [key=2, style=dotted];
m11_321 -> m11_322  [key=0, style=solid];
m11_321 -> m11_24  [key=2, style=dotted];
m11_322 -> m11_323  [key=0, style=solid];
m11_322 -> m11_26  [key=2, style=dotted];
m11_323 -> m11_324  [key=0, style=solid];
m11_323 -> m11_26  [key=2, style=dotted];
m11_324 -> m11_325  [key=0, style=solid];
m11_324 -> m11_26  [key=2, style=dotted];
m11_325 -> m11_326  [key=0, style=solid];
m11_325 -> m11_26  [key=2, style=dotted];
m11_326 -> m11_327  [key=0, style=solid];
m11_326 -> m11_24  [key=2, style=dotted];
m11_327 -> m11_328  [key=0, style=solid];
m11_327 -> m11_26  [key=2, style=dotted];
m11_328 -> m11_329  [key=0, style=solid];
m11_328 -> m11_26  [key=2, style=dotted];
m11_329 -> m11_330  [key=0, style=solid];
m11_329 -> m11_26  [key=2, style=dotted];
m11_330 -> m11_331  [key=0, style=solid];
m11_330 -> m11_26  [key=2, style=dotted];
m11_331 -> m11_332  [key=0, style=solid];
m11_331 -> m11_24  [key=2, style=dotted];
m11_332 -> m11_333  [key=0, style=solid];
m11_332 -> m11_26  [key=2, style=dotted];
m11_333 -> m11_334  [key=0, style=solid];
m11_333 -> m11_26  [key=2, style=dotted];
m11_334 -> m11_335  [key=0, style=solid];
m11_334 -> m11_26  [key=2, style=dotted];
m11_335 -> m11_336  [key=0, style=solid];
m11_335 -> m11_26  [key=2, style=dotted];
m11_336 -> m11_337  [key=0, style=solid];
m11_336 -> m11_24  [key=2, style=dotted];
m11_337 -> m11_338  [key=0, style=solid];
m11_337 -> m11_26  [key=2, style=dotted];
m11_338 -> m11_339  [key=0, style=solid];
m11_338 -> m11_26  [key=2, style=dotted];
m11_339 -> m11_340  [key=0, style=solid];
m11_339 -> m11_26  [key=2, style=dotted];
m11_340 -> m11_341  [key=0, style=solid];
m11_340 -> m11_24  [key=2, style=dotted];
m11_341 -> m11_342  [key=0, style=solid];
m11_341 -> m11_26  [key=2, style=dotted];
m11_342 -> m11_343  [key=0, style=solid];
m11_342 -> m11_26  [key=2, style=dotted];
m11_343 -> m11_344  [key=0, style=solid];
m11_343 -> m11_26  [key=2, style=dotted];
m11_344 -> m11_345  [key=0, style=solid];
m11_344 -> m11_26  [key=2, style=dotted];
m11_345 -> m11_346  [key=0, style=solid];
m11_345 -> m11_26  [key=2, style=dotted];
m11_346 -> m11_347  [key=0, style=solid];
m11_346 -> m11_24  [key=2, style=dotted];
m11_347 -> m11_348  [key=0, style=solid];
m11_347 -> m11_26  [key=2, style=dotted];
m11_348 -> m11_349  [key=0, style=solid];
m11_348 -> m11_26  [key=2, style=dotted];
m11_349 -> m11_350  [key=0, style=solid];
m11_349 -> m11_26  [key=2, style=dotted];
m11_350 -> m11_351  [key=0, style=solid];
m11_350 -> m11_26  [key=2, style=dotted];
m11_351 -> m11_352  [key=0, style=solid];
m11_351 -> m11_26  [key=2, style=dotted];
m11_352 -> m11_353  [key=0, style=solid];
m11_352 -> m11_24  [key=2, style=dotted];
m11_353 -> m11_354  [key=0, style=solid];
m11_353 -> m11_26  [key=2, style=dotted];
m11_354 -> m11_355  [key=0, style=solid];
m11_354 -> m11_26  [key=2, style=dotted];
m11_355 -> m11_356  [key=0, style=solid];
m11_355 -> m11_26  [key=2, style=dotted];
m11_356 -> m11_357  [key=0, style=solid];
m11_356 -> m11_24  [key=2, style=dotted];
m11_357 -> m11_358  [key=0, style=solid];
m11_357 -> m11_26  [key=2, style=dotted];
m11_358 -> m11_359  [key=0, style=solid];
m11_358 -> m11_26  [key=2, style=dotted];
m11_359 -> m11_360  [key=0, style=solid];
m11_359 -> m11_26  [key=2, style=dotted];
m11_360 -> m11_361  [key=0, style=solid];
m11_360 -> m11_24  [key=2, style=dotted];
m11_360 -> m11_28  [key=2, style=dotted];
m11_361 -> m11_310  [color=blue, key=0, style=bold];
m11_716 -> m11_717  [key=0, style=solid];
m11_717 -> m11_718  [key=0, style=solid];
m11_717 -> m11_22  [key=2, style=dotted];
m11_717 -> m11_23  [key=2, style=dotted];
m11_717 -> m11_719  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_717 -> m11_720  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_717 -> m11_721  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_717 -> m11_722  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_717 -> m11_723  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_717 -> m11_724  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_717 -> m11_725  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_717 -> m11_726  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_717 -> m11_727  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_718 -> m11_719  [key=0, style=solid];
m11_718 -> m11_250  [key=2, style=dotted];
m11_718 -> m11_25  [key=2, style=dotted];
m11_719 -> m11_720  [key=0, style=solid];
m11_719 -> m11_250  [key=2, style=dotted];
m11_719 -> m11_25  [key=2, style=dotted];
m11_720 -> m11_721  [key=0, style=solid];
m11_720 -> m11_26  [key=2, style=dotted];
m11_721 -> m11_722  [key=0, style=solid];
m11_721 -> m11_26  [key=2, style=dotted];
m11_722 -> m11_723  [key=0, style=solid];
m11_722 -> m11_250  [key=2, style=dotted];
m11_722 -> m11_25  [key=2, style=dotted];
m11_723 -> m11_724  [key=0, style=solid];
m11_723 -> m11_26  [key=2, style=dotted];
m11_724 -> m11_725  [key=0, style=solid];
m11_724 -> m11_26  [key=2, style=dotted];
m11_725 -> m11_726  [key=0, style=solid];
m11_725 -> m11_250  [key=2, style=dotted];
m11_725 -> m11_25  [key=2, style=dotted];
m11_726 -> m11_727  [key=0, style=solid];
m11_726 -> m11_26  [key=2, style=dotted];
m11_727 -> m11_728  [key=0, style=solid];
m11_727 -> m11_250  [key=2, style=dotted];
m11_727 -> m11_28  [key=2, style=dotted];
m11_728 -> m11_716  [color=blue, key=0, style=bold];
m11_1428 -> m11_1429  [key=0, style=solid];
m11_1429 -> m11_1430  [key=0, style=solid];
m11_1429 -> m11_1429  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_1430 -> m11_1431  [key=0, style=solid];
m11_1430 -> m11_22  [key=2, style=dotted];
m11_1430 -> m11_23  [key=2, style=dotted];
m11_1430 -> m11_1432  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1430 -> m11_1433  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1430 -> m11_1434  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1430 -> m11_1435  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1430 -> m11_1436  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1430 -> m11_1437  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1430 -> m11_1439  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1430 -> m11_1440  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1431 -> m11_1432  [key=0, style=solid];
m11_1431 -> m11_24  [key=2, style=dotted];
m11_1431 -> m11_25  [key=2, style=dotted];
m11_1432 -> m11_1433  [key=0, style=solid];
m11_1432 -> m11_26  [key=2, style=dotted];
m11_1433 -> m11_1434  [key=0, style=solid];
m11_1433 -> m11_24  [key=2, style=dotted];
m11_1433 -> m11_25  [key=2, style=dotted];
m11_1434 -> m11_1435  [key=0, style=solid];
m11_1434 -> m11_26  [key=2, style=dotted];
m11_1435 -> m11_1436  [key=0, style=solid];
m11_1435 -> m11_115  [key=2, style=dotted];
m11_1435 -> m11_1438  [color=darkseagreen4, key=1, label=d, style=dashed];
m11_1436 -> m11_1437  [key=0, style=solid];
m11_1436 -> m11_26  [key=2, style=dotted];
m11_1437 -> m11_1438  [key=0, style=solid];
m11_1437 -> m11_26  [key=2, style=dotted];
m11_1439 -> m11_1440  [key=0, style=solid];
m11_1439 -> m11_24  [key=2, style=dotted];
m11_1439 -> m11_25  [key=2, style=dotted];
m11_1440 -> m11_1441  [key=0, style=solid];
m11_1440 -> m11_26  [key=2, style=dotted];
m11_1438 -> m11_1439  [key=0, style=solid];
m11_1438 -> m11_26  [key=2, style=dotted];
m11_1441 -> m11_1428  [color=blue, key=0, style=bold];
m11_671 -> m11_672  [key=0, style=solid];
m11_672 -> m11_673  [key=0, style=solid];
m11_672 -> m11_675  [color=darkseagreen4, key=1, label=newLinesText, style=dashed];
m11_672 -> m11_683  [color=darkseagreen4, key=1, label=newLinesText, style=dashed];
m11_672 -> m11_698  [color=darkseagreen4, key=1, label=newLinesText, style=dashed];
m11_673 -> m11_674  [key=0, style=solid];
m11_673 -> m11_678  [color=darkseagreen4, key=1, label=json, style=dashed];
m11_675 -> m11_676  [key=0, style=solid];
m11_675 -> m11_23  [key=2, style=dotted];
m11_683 -> m11_684  [key=0, style=solid];
m11_683 -> m11_26  [key=2, style=dotted];
m11_698 -> m11_699  [key=0, style=solid];
m11_698 -> m11_26  [key=2, style=dotted];
m11_674 -> m11_675  [key=0, style=solid];
m11_674 -> m11_677  [color=darkseagreen4, key=1, label=count, style=dashed];
m11_674 -> m11_485  [color=darkorchid, key=3, label="Local variable int count", style=bold];
m11_678 -> m11_679  [key=0, style=solid];
m11_678 -> m11_22  [key=2, style=dotted];
m11_678 -> m11_229  [key=2, style=dotted];
m11_678 -> m11_269  [key=2, style=dotted];
m11_678 -> m11_270  [key=2, style=dotted];
m11_678 -> m11_680  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_678 -> m11_681  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_678 -> m11_682  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_678 -> m11_683  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_678 -> m11_684  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_678 -> m11_685  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_678 -> m11_686  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_678 -> m11_687  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_678 -> m11_688  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_678 -> m11_689  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_678 -> m11_690  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_678 -> m11_691  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_678 -> m11_692  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_678 -> m11_693  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_678 -> m11_694  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_678 -> m11_695  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_678 -> m11_696  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_678 -> m11_697  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_678 -> m11_698  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_678 -> m11_699  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_678 -> m11_700  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_678 -> m11_701  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_678 -> m11_702  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_678 -> m11_703  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_678 -> m11_704  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_678 -> m11_705  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_678 -> m11_706  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_678 -> m11_707  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_678 -> m11_708  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_678 -> m11_709  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_678 -> m11_710  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_678 -> m11_711  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_678 -> m11_712  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_678 -> m11_713  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_677 -> m11_676  [key=0, style=solid];
m11_677 -> m11_677  [color=darkseagreen4, key=1, label=count, style=dashed];
m11_676 -> m11_677  [key=0, style=solid];
m11_676 -> m11_678  [key=0, style=solid];
m11_676 -> m11_715  [key=2, style=dotted];
m11_679 -> m11_680  [key=0, style=solid];
m11_679 -> m11_24  [key=2, style=dotted];
m11_679 -> m11_25  [key=2, style=dotted];
m11_680 -> m11_681  [key=0, style=solid];
m11_680 -> m11_26  [key=2, style=dotted];
m11_681 -> m11_682  [key=0, style=solid];
m11_681 -> m11_24  [key=2, style=dotted];
m11_681 -> m11_25  [key=2, style=dotted];
m11_682 -> m11_683  [key=0, style=solid];
m11_682 -> m11_26  [key=2, style=dotted];
m11_684 -> m11_685  [key=0, style=solid];
m11_684 -> m11_24  [key=2, style=dotted];
m11_684 -> m11_25  [key=2, style=dotted];
m11_685 -> m11_686  [key=0, style=solid];
m11_685 -> m11_26  [key=2, style=dotted];
m11_686 -> m11_687  [key=0, style=solid];
m11_686 -> m11_24  [key=2, style=dotted];
m11_686 -> m11_25  [key=2, style=dotted];
m11_687 -> m11_688  [key=0, style=solid];
m11_687 -> m11_26  [key=2, style=dotted];
m11_688 -> m11_689  [key=0, style=solid];
m11_688 -> m11_26  [key=2, style=dotted];
m11_689 -> m11_690  [key=0, style=solid];
m11_689 -> m11_26  [key=2, style=dotted];
m11_690 -> m11_691  [key=0, style=solid];
m11_690 -> m11_24  [key=2, style=dotted];
m11_690 -> m11_25  [key=2, style=dotted];
m11_691 -> m11_692  [key=0, style=solid];
m11_691 -> m11_26  [key=2, style=dotted];
m11_692 -> m11_693  [key=0, style=solid];
m11_692 -> m11_26  [key=2, style=dotted];
m11_693 -> m11_694  [key=0, style=solid];
m11_693 -> m11_24  [key=2, style=dotted];
m11_693 -> m11_25  [key=2, style=dotted];
m11_694 -> m11_695  [key=0, style=solid];
m11_694 -> m11_26  [key=2, style=dotted];
m11_695 -> m11_696  [key=0, style=solid];
m11_695 -> m11_26  [key=2, style=dotted];
m11_696 -> m11_697  [key=0, style=solid];
m11_696 -> m11_24  [key=2, style=dotted];
m11_696 -> m11_25  [key=2, style=dotted];
m11_697 -> m11_698  [key=0, style=solid];
m11_697 -> m11_26  [key=2, style=dotted];
m11_699 -> m11_700  [key=0, style=solid];
m11_699 -> m11_24  [key=2, style=dotted];
m11_699 -> m11_25  [key=2, style=dotted];
m11_700 -> m11_701  [key=0, style=solid];
m11_700 -> m11_26  [key=2, style=dotted];
m11_701 -> m11_702  [key=0, style=solid];
m11_701 -> m11_24  [key=2, style=dotted];
m11_701 -> m11_25  [key=2, style=dotted];
m11_702 -> m11_703  [key=0, style=solid];
m11_702 -> m11_26  [key=2, style=dotted];
m11_703 -> m11_704  [key=0, style=solid];
m11_703 -> m11_24  [key=2, style=dotted];
m11_703 -> m11_25  [key=2, style=dotted];
m11_704 -> m11_705  [key=0, style=solid];
m11_704 -> m11_26  [key=2, style=dotted];
m11_705 -> m11_706  [key=0, style=solid];
m11_705 -> m11_24  [key=2, style=dotted];
m11_705 -> m11_25  [key=2, style=dotted];
m11_706 -> m11_707  [key=0, style=solid];
m11_706 -> m11_26  [key=2, style=dotted];
m11_707 -> m11_708  [key=0, style=solid];
m11_707 -> m11_26  [key=2, style=dotted];
m11_708 -> m11_709  [key=0, style=solid];
m11_708 -> m11_24  [key=2, style=dotted];
m11_708 -> m11_25  [key=2, style=dotted];
m11_709 -> m11_710  [key=0, style=solid];
m11_709 -> m11_26  [key=2, style=dotted];
m11_710 -> m11_711  [key=0, style=solid];
m11_710 -> m11_24  [key=2, style=dotted];
m11_710 -> m11_25  [key=2, style=dotted];
m11_711 -> m11_712  [key=0, style=solid];
m11_711 -> m11_26  [key=2, style=dotted];
m11_712 -> m11_713  [key=0, style=solid];
m11_712 -> m11_24  [key=2, style=dotted];
m11_712 -> m11_25  [key=2, style=dotted];
m11_713 -> m11_714  [key=0, style=solid];
m11_713 -> m11_26  [key=2, style=dotted];
m11_714 -> m11_671  [color=blue, key=0, style=bold];
m11_1553 -> m11_1554  [key=0, style=solid];
m11_1554 -> m11_1555  [key=0, style=solid];
m11_1554 -> m11_1554  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_1555 -> m11_1556  [key=0, style=solid];
m11_1555 -> m11_22  [key=2, style=dotted];
m11_1555 -> m11_23  [key=2, style=dotted];
m11_1555 -> m11_1559  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1556 -> m11_1557  [key=0, style=solid];
m11_1556 -> m11_42  [key=2, style=dotted];
m11_1556 -> m11_1558  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_1557 -> m11_1553  [color=blue, key=0, style=bold];
m11_46 -> m11_47  [key=0, style=solid];
m11_48 -> m11_20  [key=2, style=dotted];
m11_48 -> m11_38  [key=2, style=dotted];
m11_48 -> m11_49  [key=0, style=solid];
m11_48 -> m11_48  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_51 -> m11_20  [key=2, style=dotted];
m11_51 -> m11_38  [key=2, style=dotted];
m11_51 -> m11_52  [key=0, style=solid];
m11_51 -> m11_26  [key=2, style=dotted];
m11_49 -> m11_5  [key=2, style=dotted];
m11_49 -> m11_50  [key=0, style=solid];
m11_49 -> m11_22  [key=2, style=dotted];
m11_49 -> m11_23  [key=2, style=dotted];
m11_49 -> m11_51  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_49 -> m11_52  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_49 -> m11_61  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_49 -> m11_53  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_49 -> m11_64  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_49 -> m11_54  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_49 -> m11_67  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_49 -> m11_55  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_49 -> m11_70  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_49 -> m11_56  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_49 -> m11_57  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_49 -> m11_58  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_52 -> m11_5  [key=2, style=dotted];
m11_52 -> m11_53  [key=0, style=solid];
m11_52 -> m11_42  [key=2, style=dotted];
m11_52 -> m11_60  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_47 -> m11_48  [key=0, style=solid];
m11_47 -> m11_25  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_50 -> m11_51  [key=0, style=solid];
m11_50 -> m11_24  [key=2, style=dotted];
m11_50 -> m11_25  [key=2, style=dotted];
m11_53 -> m11_46  [color=blue, key=0, style=bold];
m11_53 -> m11_54  [key=0, style=solid];
m11_53 -> m11_42  [key=2, style=dotted];
m11_53 -> m11_63  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_4 -> m11_5  [key=0, style=solid];
m11_4 -> m11_26  [key=2, style=dotted];
m11_1414 -> m11_1415  [key=0, style=solid];
m11_1415 -> m11_1416  [key=0, style=solid];
m11_1415 -> m11_22  [key=2, style=dotted];
m11_1415 -> m11_23  [key=2, style=dotted];
m11_1415 -> m11_1419  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1416 -> m11_1417  [key=0, style=solid];
m11_1416 -> m11_42  [key=2, style=dotted];
m11_1416 -> m11_1418  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_1417 -> m11_1414  [color=blue, key=0, style=bold];
m11_2075 -> m11_2076  [key=0, style=solid];
m11_2075 -> m11_2078  [color=darkseagreen4, key=1, label=int, style=dashed];
m11_2076 -> m11_2077  [key=0, style=solid];
m11_2078 -> m11_2079  [key=0, style=solid];
m11_2077 -> m11_2078  [key=0, style=solid];
m11_2079 -> m11_2075  [color=blue, key=0, style=bold];
m11_151 -> m11_152  [key=0, style=solid];
m11_151 -> m11_26  [key=2, style=dotted];
m11_269 -> m11_2080  [key=0, style=solid];
m11_269 -> m11_201  [color=darkseagreen4, key=1, label=ms, style=dashed];
m11_2080 -> m11_269  [color=blue, key=0, style=bold];
m11_207 -> m11_208  [key=0, style=solid];
m11_207 -> m11_220  [key=2, style=dotted];
m11_207 -> m11_26  [key=2, style=dotted];
m11_208 -> m11_209  [key=0, style=solid];
m11_208 -> m11_220  [key=2, style=dotted];
m11_208 -> m11_26  [key=2, style=dotted];
m11_209 -> m11_210  [key=0, style=solid];
m11_209 -> m11_220  [key=2, style=dotted];
m11_209 -> m11_26  [key=2, style=dotted];
m11_210 -> m11_211  [key=0, style=solid];
m11_210 -> m11_220  [key=2, style=dotted];
m11_210 -> m11_26  [key=2, style=dotted];
m11_211 -> m11_212  [key=0, style=solid];
m11_211 -> m11_220  [key=2, style=dotted];
m11_211 -> m11_26  [key=2, style=dotted];
m11_631 -> m11_632  [key=0, style=solid];
m11_632 -> m11_633  [key=0, style=solid];
m11_632 -> m11_22  [key=2, style=dotted];
m11_632 -> m11_23  [key=2, style=dotted];
m11_632 -> m11_636  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_633 -> m11_634  [key=0, style=solid];
m11_633 -> m11_42  [key=2, style=dotted];
m11_633 -> m11_635  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_634 -> m11_631  [color=blue, key=0, style=bold];
m11_86 -> m11_87  [key=0, style=solid];
m11_86 -> m11_79  [color=blue, key=0, style=bold];
m11_10 -> m11_11  [key=0, style=solid];
m11_10 -> m11_26  [key=2, style=dotted];
m11_506 -> m11_507  [key=0, style=solid];
m11_507 -> m11_508  [key=0, style=solid];
m11_507 -> m11_507  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_508 -> m11_509  [key=0, style=solid];
m11_508 -> m11_22  [key=2, style=dotted];
m11_508 -> m11_229  [key=2, style=dotted];
m11_508 -> m11_269  [key=2, style=dotted];
m11_508 -> m11_270  [key=2, style=dotted];
m11_508 -> m11_510  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_508 -> m11_511  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_508 -> m11_512  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_508 -> m11_513  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_508 -> m11_514  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_508 -> m11_515  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_508 -> m11_516  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_508 -> m11_517  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_508 -> m11_518  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_508 -> m11_519  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_508 -> m11_520  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_508 -> m11_521  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_508 -> m11_522  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_508 -> m11_523  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_508 -> m11_524  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_508 -> m11_525  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_508 -> m11_526  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_508 -> m11_527  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_508 -> m11_528  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_508 -> m11_529  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_508 -> m11_530  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_508 -> m11_531  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_508 -> m11_532  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_508 -> m11_533  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_508 -> m11_534  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_508 -> m11_535  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_509 -> m11_510  [key=0, style=solid];
m11_509 -> m11_24  [key=2, style=dotted];
m11_509 -> m11_25  [key=2, style=dotted];
m11_510 -> m11_511  [key=0, style=solid];
m11_510 -> m11_26  [key=2, style=dotted];
m11_511 -> m11_512  [key=0, style=solid];
m11_511 -> m11_24  [key=2, style=dotted];
m11_511 -> m11_25  [key=2, style=dotted];
m11_512 -> m11_513  [key=0, style=solid];
m11_512 -> m11_26  [key=2, style=dotted];
m11_513 -> m11_514  [key=0, style=solid];
m11_513 -> m11_24  [key=2, style=dotted];
m11_513 -> m11_25  [key=2, style=dotted];
m11_514 -> m11_515  [key=0, style=solid];
m11_514 -> m11_26  [key=2, style=dotted];
m11_515 -> m11_516  [key=0, style=solid];
m11_515 -> m11_24  [key=2, style=dotted];
m11_515 -> m11_25  [key=2, style=dotted];
m11_516 -> m11_517  [key=0, style=solid];
m11_516 -> m11_26  [key=2, style=dotted];
m11_517 -> m11_518  [key=0, style=solid];
m11_517 -> m11_24  [key=2, style=dotted];
m11_517 -> m11_25  [key=2, style=dotted];
m11_518 -> m11_519  [key=0, style=solid];
m11_518 -> m11_26  [key=2, style=dotted];
m11_519 -> m11_520  [key=0, style=solid];
m11_519 -> m11_24  [key=2, style=dotted];
m11_519 -> m11_25  [key=2, style=dotted];
m11_520 -> m11_521  [key=0, style=solid];
m11_520 -> m11_26  [key=2, style=dotted];
m11_521 -> m11_522  [key=0, style=solid];
m11_521 -> m11_24  [key=2, style=dotted];
m11_521 -> m11_25  [key=2, style=dotted];
m11_522 -> m11_523  [key=0, style=solid];
m11_522 -> m11_26  [key=2, style=dotted];
m11_523 -> m11_524  [key=0, style=solid];
m11_523 -> m11_24  [key=2, style=dotted];
m11_523 -> m11_25  [key=2, style=dotted];
m11_524 -> m11_525  [key=0, style=solid];
m11_524 -> m11_26  [key=2, style=dotted];
m11_525 -> m11_526  [key=0, style=solid];
m11_525 -> m11_24  [key=2, style=dotted];
m11_525 -> m11_25  [key=2, style=dotted];
m11_526 -> m11_527  [key=0, style=solid];
m11_526 -> m11_26  [key=2, style=dotted];
m11_527 -> m11_528  [key=0, style=solid];
m11_527 -> m11_24  [key=2, style=dotted];
m11_527 -> m11_25  [key=2, style=dotted];
m11_528 -> m11_529  [key=0, style=solid];
m11_528 -> m11_26  [key=2, style=dotted];
m11_529 -> m11_530  [key=0, style=solid];
m11_529 -> m11_24  [key=2, style=dotted];
m11_529 -> m11_25  [key=2, style=dotted];
m11_530 -> m11_531  [key=0, style=solid];
m11_530 -> m11_26  [key=2, style=dotted];
m11_531 -> m11_532  [key=0, style=solid];
m11_531 -> m11_26  [key=2, style=dotted];
m11_532 -> m11_533  [key=0, style=solid];
m11_532 -> m11_24  [key=2, style=dotted];
m11_532 -> m11_25  [key=2, style=dotted];
m11_533 -> m11_534  [key=0, style=solid];
m11_533 -> m11_26  [key=2, style=dotted];
m11_534 -> m11_535  [key=0, style=solid];
m11_534 -> m11_26  [key=2, style=dotted];
m11_535 -> m11_536  [key=0, style=solid];
m11_535 -> m11_24  [key=2, style=dotted];
m11_535 -> m11_28  [key=2, style=dotted];
m11_536 -> m11_506  [color=blue, key=0, style=bold];
m11_1220 -> m11_1221  [key=0, style=solid];
m11_1221 -> m11_1222  [key=0, style=solid];
m11_1221 -> m11_1221  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_1222 -> m11_1223  [key=0, style=solid];
m11_1222 -> m11_22  [key=2, style=dotted];
m11_1222 -> m11_23  [key=2, style=dotted];
m11_1222 -> m11_1224  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1222 -> m11_1225  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1222 -> m11_1226  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1222 -> m11_1227  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1222 -> m11_1228  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1222 -> m11_1229  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1222 -> m11_1230  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1222 -> m11_1231  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1222 -> m11_1232  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1222 -> m11_1233  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1223 -> m11_1224  [key=0, style=solid];
m11_1223 -> m11_24  [key=2, style=dotted];
m11_1223 -> m11_25  [key=2, style=dotted];
m11_1224 -> m11_1225  [key=0, style=solid];
m11_1224 -> m11_26  [key=2, style=dotted];
m11_1225 -> m11_1226  [key=0, style=solid];
m11_1225 -> m11_24  [key=2, style=dotted];
m11_1225 -> m11_25  [key=2, style=dotted];
m11_1226 -> m11_1227  [key=0, style=solid];
m11_1226 -> m11_26  [key=2, style=dotted];
m11_1227 -> m11_1228  [key=0, style=solid];
m11_1227 -> m11_26  [key=2, style=dotted];
m11_1228 -> m11_1229  [key=0, style=solid];
m11_1228 -> m11_24  [key=2, style=dotted];
m11_1228 -> m11_25  [key=2, style=dotted];
m11_1229 -> m11_1230  [key=0, style=solid];
m11_1229 -> m11_26  [key=2, style=dotted];
m11_1230 -> m11_1231  [key=0, style=solid];
m11_1230 -> m11_26  [key=2, style=dotted];
m11_1231 -> m11_1232  [key=0, style=solid];
m11_1231 -> m11_24  [key=2, style=dotted];
m11_1231 -> m11_25  [key=2, style=dotted];
m11_1232 -> m11_1233  [key=0, style=solid];
m11_1232 -> m11_26  [key=2, style=dotted];
m11_1233 -> m11_1234  [key=0, style=solid];
m11_1233 -> m11_24  [key=2, style=dotted];
m11_1233 -> m11_28  [key=2, style=dotted];
m11_1234 -> m11_1220  [color=blue, key=0, style=bold];
m11_2029 -> m11_2066  [key=0, style=solid];
m11_2066 -> m11_2067  [key=0, style=solid];
m11_2067 -> m11_2029  [color=blue, key=0, style=bold];
m11_85 -> m11_86  [key=0, style=solid];
m11_85 -> m11_30  [key=2, style=dotted];
m11_579 -> m11_580  [key=0, style=solid];
m11_580 -> m11_581  [key=0, style=solid];
m11_580 -> m11_592  [key=2, style=dotted];
m11_580 -> m11_586  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_581 -> m11_582  [key=0, style=solid];
m11_581 -> m11_22  [key=2, style=dotted];
m11_581 -> m11_593  [key=2, style=dotted];
m11_581 -> m11_594  [key=2, style=dotted];
m11_581 -> m11_583  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_586 -> m11_587  [key=0, style=solid];
m11_582 -> m11_583  [key=0, style=solid];
m11_582 -> m11_24  [key=2, style=dotted];
m11_583 -> m11_584  [key=0, style=solid];
m11_583 -> m11_26  [key=2, style=dotted];
m11_584 -> m11_585  [key=0, style=solid];
m11_584 -> m11_586  [color=darkseagreen4, key=1, label=j, style=dashed];
m11_584 -> m11_590  [color=darkseagreen4, key=1, label=j, style=dashed];
m11_584 -> m11_552  [color=darkorchid, key=3, label="Local variable int j", style=bold];
m11_585 -> m11_586  [key=0, style=solid];
m11_585 -> m11_591  [key=0, style=solid];
m11_590 -> m11_585  [key=0, style=solid];
m11_590 -> m11_590  [color=darkseagreen4, key=1, label=j, style=dashed];
m11_587 -> m11_588  [key=0, style=solid];
m11_587 -> m11_22  [key=2, style=dotted];
m11_587 -> m11_593  [key=2, style=dotted];
m11_587 -> m11_594  [key=2, style=dotted];
m11_587 -> m11_589  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_588 -> m11_589  [key=0, style=solid];
m11_588 -> m11_24  [key=2, style=dotted];
m11_589 -> m11_590  [key=0, style=solid];
m11_589 -> m11_26  [key=2, style=dotted];
m11_591 -> m11_579  [color=blue, key=0, style=bold];
m11_5 -> m11_6  [key=0, style=solid];
m11_5 -> m11_24  [key=2, style=dotted];
m11_5 -> m11_25  [key=2, style=dotted];
m11_608 -> m11_609  [key=0, style=solid];
m11_609 -> m11_610  [key=0, style=solid];
m11_609 -> m11_609  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_610 -> m11_611  [key=0, style=solid];
m11_610 -> m11_22  [key=2, style=dotted];
m11_610 -> m11_23  [key=2, style=dotted];
m11_610 -> m11_613  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_610 -> m11_615  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_610 -> m11_616  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_610 -> m11_617  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_611 -> m11_612  [key=0, style=solid];
m11_611 -> m11_614  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_611 -> m11_485  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m11_613 -> m11_614  [key=0, style=solid];
m11_613 -> m11_24  [key=2, style=dotted];
m11_613 -> m11_25  [key=2, style=dotted];
m11_615 -> m11_616  [key=0, style=solid];
m11_615 -> m11_24  [key=2, style=dotted];
m11_615 -> m11_25  [key=2, style=dotted];
m11_616 -> m11_617  [key=0, style=solid];
m11_616 -> m11_26  [key=2, style=dotted];
m11_617 -> m11_618  [key=0, style=solid];
m11_617 -> m11_26  [key=2, style=dotted];
m11_612 -> m11_613  [key=0, style=solid];
m11_612 -> m11_615  [key=0, style=solid];
m11_614 -> m11_612  [key=0, style=solid];
m11_614 -> m11_614  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_618 -> m11_608  [color=blue, key=0, style=bold];
m11_137 -> m11_138  [key=0, style=solid];
m11_137 -> m11_22  [key=2, style=dotted];
m11_137 -> m11_23  [key=2, style=dotted];
m11_137 -> m11_139  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_137 -> m11_140  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_137 -> m11_141  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_137 -> m11_142  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_137 -> m11_143  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_137 -> m11_144  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_137 -> m11_145  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_137 -> m11_146  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_137 -> m11_147  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_137 -> m11_148  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_137 -> m11_149  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_137 -> m11_150  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_137 -> m11_151  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_137 -> m11_152  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_137 -> m11_153  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_137 -> m11_154  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_137 -> m11_155  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_137 -> m11_156  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_137 -> m11_157  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_137 -> m11_158  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_148 -> m11_149  [key=0, style=solid];
m11_148 -> m11_26  [key=2, style=dotted];
m11_150 -> m11_151  [key=0, style=solid];
m11_150 -> m11_26  [key=2, style=dotted];
m11_1001 -> m11_1002  [key=0, style=solid];
m11_1002 -> m11_1003  [key=0, style=solid];
m11_1002 -> m11_1002  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_1003 -> m11_1004  [key=0, style=solid];
m11_1003 -> m11_22  [key=2, style=dotted];
m11_1003 -> m11_23  [key=2, style=dotted];
m11_1003 -> m11_1005  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1003 -> m11_1006  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1003 -> m11_1007  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1003 -> m11_1008  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1003 -> m11_1009  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1003 -> m11_1010  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1003 -> m11_1011  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1003 -> m11_1012  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1003 -> m11_1013  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1003 -> m11_1014  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1003 -> m11_1015  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1003 -> m11_1016  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1003 -> m11_1017  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1003 -> m11_1018  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1003 -> m11_1019  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1003 -> m11_1020  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1003 -> m11_1021  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1003 -> m11_1022  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1003 -> m11_1023  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1003 -> m11_1024  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1003 -> m11_1025  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1003 -> m11_1026  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1003 -> m11_1027  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1003 -> m11_1028  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1003 -> m11_1029  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1003 -> m11_1030  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1003 -> m11_1031  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1003 -> m11_1032  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1003 -> m11_1033  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1003 -> m11_1034  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1003 -> m11_1035  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1003 -> m11_1036  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1003 -> m11_1037  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1003 -> m11_1038  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1003 -> m11_1039  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1003 -> m11_1040  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1003 -> m11_1041  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1003 -> m11_1042  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1003 -> m11_1043  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1003 -> m11_1044  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1003 -> m11_1045  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1003 -> m11_1046  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1003 -> m11_1047  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1003 -> m11_1048  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1003 -> m11_1049  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1003 -> m11_1050  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1003 -> m11_1051  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1003 -> m11_1052  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1003 -> m11_1053  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1003 -> m11_1054  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1003 -> m11_1055  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1003 -> m11_1056  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1003 -> m11_1057  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1003 -> m11_1058  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1003 -> m11_1059  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1003 -> m11_1060  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1003 -> m11_1061  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_1004 -> m11_1005  [key=0, style=solid];
m11_1004 -> m11_250  [key=2, style=dotted];
m11_1005 -> m11_1006  [key=0, style=solid];
m11_1005 -> m11_26  [key=2, style=dotted];
m11_1006 -> m11_1007  [key=0, style=solid];
m11_1006 -> m11_250  [key=2, style=dotted];
m11_1007 -> m11_1008  [key=0, style=solid];
m11_1007 -> m11_26  [key=2, style=dotted];
m11_1008 -> m11_1009  [key=0, style=solid];
m11_1008 -> m11_26  [key=2, style=dotted];
m11_1009 -> m11_1010  [key=0, style=solid];
m11_1009 -> m11_250  [key=2, style=dotted];
m11_1010 -> m11_1011  [key=0, style=solid];
m11_1010 -> m11_26  [key=2, style=dotted];
m11_1011 -> m11_1012  [key=0, style=solid];
m11_1011 -> m11_26  [key=2, style=dotted];
m11_1012 -> m11_1013  [key=0, style=solid];
m11_1012 -> m11_250  [key=2, style=dotted];
m11_1013 -> m11_1014  [key=0, style=solid];
m11_1013 -> m11_26  [key=2, style=dotted];
m11_1014 -> m11_1015  [key=0, style=solid];
m11_1014 -> m11_26  [key=2, style=dotted];
m11_1015 -> m11_1016  [key=0, style=solid];
m11_1015 -> m11_250  [key=2, style=dotted];
m11_1016 -> m11_1017  [key=0, style=solid];
m11_1016 -> m11_26  [key=2, style=dotted];
m11_1017 -> m11_1018  [key=0, style=solid];
m11_1017 -> m11_26  [key=2, style=dotted];
m11_1018 -> m11_1019  [key=0, style=solid];
m11_1018 -> m11_250  [key=2, style=dotted];
m11_1019 -> m11_1020  [key=0, style=solid];
m11_1019 -> m11_26  [key=2, style=dotted];
m11_1020 -> m11_1021  [key=0, style=solid];
m11_1020 -> m11_26  [key=2, style=dotted];
m11_1021 -> m11_1022  [key=0, style=solid];
m11_1021 -> m11_250  [key=2, style=dotted];
m11_1022 -> m11_1023  [key=0, style=solid];
m11_1022 -> m11_26  [key=2, style=dotted];
m11_1023 -> m11_1024  [key=0, style=solid];
m11_1023 -> m11_26  [key=2, style=dotted];
m11_1024 -> m11_1025  [key=0, style=solid];
m11_1024 -> m11_250  [key=2, style=dotted];
m11_1025 -> m11_1026  [key=0, style=solid];
m11_1025 -> m11_26  [key=2, style=dotted];
m11_1026 -> m11_1027  [key=0, style=solid];
m11_1026 -> m11_26  [key=2, style=dotted];
m11_1027 -> m11_1028  [key=0, style=solid];
m11_1027 -> m11_250  [key=2, style=dotted];
m11_1028 -> m11_1029  [key=0, style=solid];
m11_1028 -> m11_26  [key=2, style=dotted];
m11_1029 -> m11_1030  [key=0, style=solid];
m11_1029 -> m11_26  [key=2, style=dotted];
m11_1030 -> m11_1031  [key=0, style=solid];
m11_1030 -> m11_250  [key=2, style=dotted];
m11_1031 -> m11_1032  [key=0, style=solid];
m11_1031 -> m11_26  [key=2, style=dotted];
m11_1032 -> m11_1033  [key=0, style=solid];
m11_1032 -> m11_26  [key=2, style=dotted];
m11_1033 -> m11_1034  [key=0, style=solid];
m11_1033 -> m11_250  [key=2, style=dotted];
m11_1034 -> m11_1035  [key=0, style=solid];
m11_1034 -> m11_26  [key=2, style=dotted];
m11_1035 -> m11_1036  [key=0, style=solid];
m11_1035 -> m11_26  [key=2, style=dotted];
m11_1036 -> m11_1037  [key=0, style=solid];
m11_1036 -> m11_250  [key=2, style=dotted];
m11_1037 -> m11_1038  [key=0, style=solid];
m11_1037 -> m11_26  [key=2, style=dotted];
m11_1038 -> m11_1039  [key=0, style=solid];
m11_1038 -> m11_26  [key=2, style=dotted];
m11_1039 -> m11_1040  [key=0, style=solid];
m11_1039 -> m11_250  [key=2, style=dotted];
m11_1040 -> m11_1041  [key=0, style=solid];
m11_1040 -> m11_26  [key=2, style=dotted];
m11_1041 -> m11_1042  [key=0, style=solid];
m11_1041 -> m11_26  [key=2, style=dotted];
m11_1042 -> m11_1043  [key=0, style=solid];
m11_1042 -> m11_250  [key=2, style=dotted];
m11_1043 -> m11_1044  [key=0, style=solid];
m11_1043 -> m11_26  [key=2, style=dotted];
m11_1044 -> m11_1045  [key=0, style=solid];
m11_1044 -> m11_26  [key=2, style=dotted];
m11_1045 -> m11_1046  [key=0, style=solid];
m11_1045 -> m11_250  [key=2, style=dotted];
m11_1046 -> m11_1047  [key=0, style=solid];
m11_1046 -> m11_26  [key=2, style=dotted];
m11_1047 -> m11_1048  [key=0, style=solid];
m11_1047 -> m11_26  [key=2, style=dotted];
m11_1048 -> m11_1049  [key=0, style=solid];
m11_1048 -> m11_250  [key=2, style=dotted];
m11_1049 -> m11_1050  [key=0, style=solid];
m11_1049 -> m11_26  [key=2, style=dotted];
m11_1050 -> m11_1051  [key=0, style=solid];
m11_1050 -> m11_26  [key=2, style=dotted];
m11_1051 -> m11_1052  [key=0, style=solid];
m11_1051 -> m11_250  [key=2, style=dotted];
m11_1052 -> m11_1053  [key=0, style=solid];
m11_1052 -> m11_26  [key=2, style=dotted];
m11_1053 -> m11_1054  [key=0, style=solid];
m11_1053 -> m11_26  [key=2, style=dotted];
m11_1054 -> m11_1055  [key=0, style=solid];
m11_1054 -> m11_250  [key=2, style=dotted];
m11_1055 -> m11_1056  [key=0, style=solid];
m11_1055 -> m11_26  [key=2, style=dotted];
m11_1056 -> m11_1057  [key=0, style=solid];
m11_1056 -> m11_26  [key=2, style=dotted];
m11_1057 -> m11_1058  [key=0, style=solid];
m11_1057 -> m11_250  [key=2, style=dotted];
m11_1058 -> m11_1059  [key=0, style=solid];
m11_1058 -> m11_26  [key=2, style=dotted];
m11_1059 -> m11_1060  [key=0, style=solid];
m11_1059 -> m11_26  [key=2, style=dotted];
m11_1060 -> m11_1061  [key=0, style=solid];
m11_1060 -> m11_250  [key=2, style=dotted];
m11_1061 -> m11_1062  [key=0, style=solid];
m11_1061 -> m11_26  [key=2, style=dotted];
m11_1062 -> m11_1001  [color=blue, key=0, style=bold];
m11_1773 -> m11_1774  [key=0, style=solid];
m11_1774 -> m11_1775  [key=0, style=solid];
m11_1774 -> m11_1774  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_1775 -> m11_1776  [key=0, style=solid];
m11_1775 -> m11_22  [key=2, style=dotted];
m11_1775 -> m11_229  [key=2, style=dotted];
m11_1775 -> m11_269  [key=2, style=dotted];
m11_1775 -> m11_270  [key=2, style=dotted];
m11_1775 -> m11_1779  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1776 -> m11_1777  [key=0, style=solid];
m11_1776 -> m11_42  [key=2, style=dotted];
m11_1776 -> m11_1778  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_1777 -> m11_1773  [color=blue, key=0, style=bold];
m11_1199 -> m11_1200  [key=0, style=solid];
m11_1200 -> m11_1201  [key=0, style=solid];
m11_1200 -> m11_22  [key=2, style=dotted];
m11_1200 -> m11_23  [key=2, style=dotted];
m11_1201 -> m11_1202  [key=0, style=solid];
m11_1201 -> m11_85  [key=2, style=dotted];
m11_1201 -> m11_1203  [color=darkseagreen4, key=1, label=data, style=dashed];
m11_1201 -> m11_1204  [color=darkseagreen4, key=1, label=data, style=dashed];
m11_1202 -> m11_1203  [key=0, style=solid];
m11_1202 -> m11_26  [key=2, style=dotted];
m11_1203 -> m11_1204  [key=0, style=solid];
m11_1203 -> m11_26  [key=2, style=dotted];
m11_1204 -> m11_1205  [key=0, style=solid];
m11_1204 -> m11_26  [key=2, style=dotted];
m11_1205 -> m11_1199  [color=blue, key=0, style=bold];
m11_6 -> m11_7  [key=0, style=solid];
m11_6 -> m11_26  [key=2, style=dotted];
m11_8 -> m11_5  [key=2, style=dotted];
m11_8 -> m11_9  [key=0, style=solid];
m11_8 -> m11_26  [key=2, style=dotted];
m11_7 -> m11_8  [key=0, style=solid];
m11_7 -> m11_10  [key=2, style=dotted];
m11_7 -> m11_24  [key=2, style=dotted];
m11_7 -> m11_25  [key=2, style=dotted];
m11_9 -> m11_6  [color=blue, key=0, style=bold];
m11_9 -> m11_10  [key=0, style=solid];
m11_9 -> m11_24  [key=2, style=dotted];
m11_9 -> m11_25  [key=2, style=dotted];
m11_1160 -> m11_1161  [key=0, style=solid];
m11_1161 -> m11_1162  [key=0, style=solid];
m11_1161 -> m11_22  [key=2, style=dotted];
m11_1161 -> m11_23  [key=2, style=dotted];
m11_1161 -> m11_1163  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1162 -> m11_1163  [key=0, style=solid];
m11_1162 -> m11_85  [key=2, style=dotted];
m11_1162 -> m11_662  [key=2, style=dotted];
m11_1163 -> m11_1164  [key=0, style=solid];
m11_1163 -> m11_26  [key=2, style=dotted];
m11_1164 -> m11_1160  [color=blue, key=0, style=bold];
m11_1172 -> m11_1173  [key=0, style=solid];
m11_1173 -> m11_1174  [key=0, style=solid];
m11_1173 -> m11_22  [key=2, style=dotted];
m11_1173 -> m11_23  [key=2, style=dotted];
m11_1173 -> m11_1175  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1174 -> m11_1175  [key=0, style=solid];
m11_1174 -> m11_1177  [key=2, style=dotted];
m11_1174 -> m11_662  [key=2, style=dotted];
m11_1175 -> m11_1176  [key=0, style=solid];
m11_1175 -> m11_26  [key=2, style=dotted];
m11_1176 -> m11_1172  [color=blue, key=0, style=bold];
m11_547 -> m11_548  [key=0, style=solid];
m11_548 -> m11_549  [key=0, style=solid];
m11_548 -> m11_554  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_548 -> m11_548  [color=darkorchid, key=3, label="Local variable long i", style=bold];
m11_549 -> m11_550  [key=0, style=solid];
m11_549 -> m11_22  [key=2, style=dotted];
m11_549 -> m11_23  [key=2, style=dotted];
m11_549 -> m11_558  [key=2, style=dotted];
m11_549 -> m11_551  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_549 -> m11_555  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_554 -> m11_555  [key=0, style=solid];
m11_554 -> m11_560  [color=darkseagreen4, key=1, label=total, style=dashed];
m11_550 -> m11_551  [key=0, style=solid];
m11_550 -> m11_24  [key=2, style=dotted];
m11_551 -> m11_552  [key=0, style=solid];
m11_551 -> m11_26  [key=2, style=dotted];
m11_555 -> m11_556  [key=0, style=solid];
m11_555 -> m11_42  [key=2, style=dotted];
m11_555 -> m11_559  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_552 -> m11_553  [key=0, style=solid];
m11_552 -> m11_554  [color=darkseagreen4, key=1, label=j, style=dashed];
m11_552 -> m11_556  [color=darkseagreen4, key=1, label=j, style=dashed];
m11_552 -> m11_552  [color=darkorchid, key=3, label="Local variable int j", style=bold];
m11_553 -> m11_554  [key=0, style=solid];
m11_553 -> m11_557  [key=0, style=solid];
m11_556 -> m11_553  [key=0, style=solid];
m11_556 -> m11_556  [color=darkseagreen4, key=1, label=j, style=dashed];
m11_557 -> m11_547  [color=blue, key=0, style=bold];
m11_21 -> m11_0  [color=blue, key=0, style=bold];
m11_1468 -> m11_1469  [key=0, style=solid];
m11_1469 -> m11_1470  [key=0, style=solid];
m11_1469 -> m11_1469  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_1470 -> m11_1471  [key=0, style=solid];
m11_1470 -> m11_22  [key=2, style=dotted];
m11_1470 -> m11_23  [key=2, style=dotted];
m11_1470 -> m11_1473  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1470 -> m11_1475  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1470 -> m11_1476  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1470 -> m11_1477  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1471 -> m11_1472  [key=0, style=solid];
m11_1471 -> m11_1474  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_1471 -> m11_485  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m11_1473 -> m11_1474  [key=0, style=solid];
m11_1473 -> m11_24  [key=2, style=dotted];
m11_1473 -> m11_25  [key=2, style=dotted];
m11_1475 -> m11_1476  [key=0, style=solid];
m11_1475 -> m11_24  [key=2, style=dotted];
m11_1475 -> m11_25  [key=2, style=dotted];
m11_1476 -> m11_1477  [key=0, style=solid];
m11_1476 -> m11_26  [key=2, style=dotted];
m11_1477 -> m11_1478  [key=0, style=solid];
m11_1477 -> m11_24  [key=2, style=dotted];
m11_1477 -> m11_28  [key=2, style=dotted];
m11_1472 -> m11_1473  [key=0, style=solid];
m11_1472 -> m11_1475  [key=0, style=solid];
m11_1474 -> m11_1472  [key=0, style=solid];
m11_1474 -> m11_1474  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_1478 -> m11_1468  [color=blue, key=0, style=bold];
m11_1952 -> m11_1953  [key=0, style=solid];
m11_1953 -> m11_1954  [key=0, style=solid];
m11_1953 -> m11_1964  [color=darkseagreen4, key=1, label=json, style=dashed];
m11_1953 -> m11_1974  [color=darkseagreen4, key=1, label=json, style=dashed];
m11_1953 -> m11_1984  [color=darkseagreen4, key=1, label=json, style=dashed];
m11_1953 -> m11_1994  [color=darkseagreen4, key=1, label=json, style=dashed];
m11_1953 -> m11_1953  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_1954 -> m11_1955  [key=0, style=solid];
m11_1954 -> m11_22  [key=2, style=dotted];
m11_1954 -> m11_23  [key=2, style=dotted];
m11_1954 -> m11_1956  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1954 -> m11_1957  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1954 -> m11_1958  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1954 -> m11_1959  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1954 -> m11_1960  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1954 -> m11_1961  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1954 -> m11_1962  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1954 -> m11_1963  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1964 -> m11_1965  [key=0, style=solid];
m11_1964 -> m11_22  [key=2, style=dotted];
m11_1964 -> m11_23  [key=2, style=dotted];
m11_1964 -> m11_1966  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1964 -> m11_1967  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1964 -> m11_1968  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1964 -> m11_1969  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1964 -> m11_1970  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1964 -> m11_1971  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1964 -> m11_1972  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1964 -> m11_1973  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1974 -> m11_1975  [key=0, style=solid];
m11_1974 -> m11_22  [key=2, style=dotted];
m11_1974 -> m11_23  [key=2, style=dotted];
m11_1974 -> m11_1976  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1974 -> m11_1977  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1974 -> m11_1978  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1974 -> m11_1979  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1974 -> m11_1980  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1974 -> m11_1981  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1974 -> m11_1982  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1974 -> m11_1983  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1984 -> m11_1985  [key=0, style=solid];
m11_1984 -> m11_22  [key=2, style=dotted];
m11_1984 -> m11_23  [key=2, style=dotted];
m11_1984 -> m11_1986  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1984 -> m11_1987  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1984 -> m11_1988  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1984 -> m11_1989  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1984 -> m11_1990  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1984 -> m11_1991  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1984 -> m11_1992  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1984 -> m11_1993  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1994 -> m11_1995  [key=0, style=solid];
m11_1994 -> m11_22  [key=2, style=dotted];
m11_1994 -> m11_23  [key=2, style=dotted];
m11_1994 -> m11_1996  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1994 -> m11_1997  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1994 -> m11_1998  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1994 -> m11_1999  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1994 -> m11_2000  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1994 -> m11_2001  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1994 -> m11_2002  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1994 -> m11_2003  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1955 -> m11_1956  [key=0, style=solid];
m11_1956 -> m11_1957  [key=0, style=solid];
m11_1956 -> m11_24  [key=2, style=dotted];
m11_1956 -> m11_25  [key=2, style=dotted];
m11_1957 -> m11_1958  [key=0, style=solid];
m11_1957 -> m11_24  [key=2, style=dotted];
m11_1957 -> m11_25  [key=2, style=dotted];
m11_1958 -> m11_1959  [key=0, style=solid];
m11_1958 -> m11_2005  [key=2, style=dotted];
m11_1958 -> m11_26  [key=2, style=dotted];
m11_1959 -> m11_1960  [key=0, style=solid];
m11_1959 -> m11_26  [key=2, style=dotted];
m11_1960 -> m11_1961  [key=0, style=solid];
m11_1960 -> m11_24  [key=2, style=dotted];
m11_1960 -> m11_25  [key=2, style=dotted];
m11_1961 -> m11_1962  [key=0, style=solid];
m11_1961 -> m11_2005  [key=2, style=dotted];
m11_1961 -> m11_26  [key=2, style=dotted];
m11_1962 -> m11_1963  [key=0, style=solid];
m11_1962 -> m11_26  [key=2, style=dotted];
m11_1963 -> m11_1964  [key=0, style=solid];
m11_1963 -> m11_24  [key=2, style=dotted];
m11_1963 -> m11_25  [key=2, style=dotted];
m11_1965 -> m11_1966  [key=0, style=solid];
m11_1966 -> m11_1967  [key=0, style=solid];
m11_1966 -> m11_24  [key=2, style=dotted];
m11_1966 -> m11_25  [key=2, style=dotted];
m11_1967 -> m11_1968  [key=0, style=solid];
m11_1967 -> m11_24  [key=2, style=dotted];
m11_1967 -> m11_25  [key=2, style=dotted];
m11_1968 -> m11_1969  [key=0, style=solid];
m11_1968 -> m11_2006  [key=2, style=dotted];
m11_1968 -> m11_26  [key=2, style=dotted];
m11_1969 -> m11_1970  [key=0, style=solid];
m11_1969 -> m11_26  [key=2, style=dotted];
m11_1970 -> m11_1971  [key=0, style=solid];
m11_1970 -> m11_24  [key=2, style=dotted];
m11_1970 -> m11_25  [key=2, style=dotted];
m11_1971 -> m11_1972  [key=0, style=solid];
m11_1971 -> m11_2006  [key=2, style=dotted];
m11_1971 -> m11_26  [key=2, style=dotted];
m11_1972 -> m11_1973  [key=0, style=solid];
m11_1972 -> m11_26  [key=2, style=dotted];
m11_1973 -> m11_1974  [key=0, style=solid];
m11_1973 -> m11_24  [key=2, style=dotted];
m11_1973 -> m11_25  [key=2, style=dotted];
m11_1975 -> m11_1976  [key=0, style=solid];
m11_1976 -> m11_1977  [key=0, style=solid];
m11_1976 -> m11_24  [key=2, style=dotted];
m11_1976 -> m11_25  [key=2, style=dotted];
m11_1977 -> m11_1978  [key=0, style=solid];
m11_1977 -> m11_24  [key=2, style=dotted];
m11_1977 -> m11_25  [key=2, style=dotted];
m11_1978 -> m11_1979  [key=0, style=solid];
m11_1978 -> m11_26  [key=2, style=dotted];
m11_1979 -> m11_1980  [key=0, style=solid];
m11_1979 -> m11_26  [key=2, style=dotted];
m11_1980 -> m11_1981  [key=0, style=solid];
m11_1980 -> m11_24  [key=2, style=dotted];
m11_1980 -> m11_25  [key=2, style=dotted];
m11_1981 -> m11_1982  [key=0, style=solid];
m11_1981 -> m11_26  [key=2, style=dotted];
m11_1982 -> m11_1983  [key=0, style=solid];
m11_1982 -> m11_26  [key=2, style=dotted];
m11_1983 -> m11_1984  [key=0, style=solid];
m11_1983 -> m11_24  [key=2, style=dotted];
m11_1983 -> m11_25  [key=2, style=dotted];
m11_1985 -> m11_1986  [key=0, style=solid];
m11_1986 -> m11_1987  [key=0, style=solid];
m11_1986 -> m11_24  [key=2, style=dotted];
m11_1986 -> m11_25  [key=2, style=dotted];
m11_1987 -> m11_1988  [key=0, style=solid];
m11_1987 -> m11_1177  [key=2, style=dotted];
m11_1988 -> m11_1989  [key=0, style=solid];
m11_1988 -> m11_2006  [key=2, style=dotted];
m11_1988 -> m11_26  [key=2, style=dotted];
m11_1989 -> m11_1990  [key=0, style=solid];
m11_1989 -> m11_26  [key=2, style=dotted];
m11_1990 -> m11_1991  [key=0, style=solid];
m11_1990 -> m11_1177  [key=2, style=dotted];
m11_1991 -> m11_1992  [key=0, style=solid];
m11_1991 -> m11_2006  [key=2, style=dotted];
m11_1991 -> m11_26  [key=2, style=dotted];
m11_1992 -> m11_1993  [key=0, style=solid];
m11_1992 -> m11_26  [key=2, style=dotted];
m11_1993 -> m11_1994  [key=0, style=solid];
m11_1993 -> m11_24  [key=2, style=dotted];
m11_1993 -> m11_25  [key=2, style=dotted];
m11_1995 -> m11_1996  [key=0, style=solid];
m11_1996 -> m11_1997  [key=0, style=solid];
m11_1996 -> m11_24  [key=2, style=dotted];
m11_1996 -> m11_25  [key=2, style=dotted];
m11_1997 -> m11_1998  [key=0, style=solid];
m11_1997 -> m11_2007  [key=2, style=dotted];
m11_1998 -> m11_1999  [key=0, style=solid];
m11_1998 -> m11_2005  [key=2, style=dotted];
m11_1998 -> m11_26  [key=2, style=dotted];
m11_1999 -> m11_2000  [key=0, style=solid];
m11_1999 -> m11_26  [key=2, style=dotted];
m11_2000 -> m11_2001  [key=0, style=solid];
m11_2000 -> m11_2007  [key=2, style=dotted];
m11_2001 -> m11_2002  [key=0, style=solid];
m11_2001 -> m11_2005  [key=2, style=dotted];
m11_2001 -> m11_26  [key=2, style=dotted];
m11_2002 -> m11_2003  [key=0, style=solid];
m11_2002 -> m11_26  [key=2, style=dotted];
m11_2003 -> m11_2004  [key=0, style=solid];
m11_2003 -> m11_24  [key=2, style=dotted];
m11_2003 -> m11_25  [key=2, style=dotted];
m11_2004 -> m11_1952  [color=blue, key=0, style=bold];
m11_1147 -> m11_1148  [key=0, style=solid];
m11_1148 -> m11_1149  [key=0, style=solid];
m11_1148 -> m11_22  [key=2, style=dotted];
m11_1148 -> m11_23  [key=2, style=dotted];
m11_1148 -> m11_1150  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1148 -> m11_1153  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1149 -> m11_1150  [key=0, style=solid];
m11_1149 -> m11_24  [key=2, style=dotted];
m11_1150 -> m11_1151  [key=0, style=solid];
m11_1150 -> m11_42  [key=2, style=dotted];
m11_1150 -> m11_1152  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_1151 -> m11_1147  [color=blue, key=0, style=bold];
m11_1321 -> m11_1322  [key=0, style=solid];
m11_1322 -> m11_1323  [key=0, style=solid];
m11_1322 -> m11_1322  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_1323 -> m11_1324  [key=0, style=solid];
m11_1323 -> m11_22  [key=2, style=dotted];
m11_1323 -> m11_23  [key=2, style=dotted];
m11_1323 -> m11_1325  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1323 -> m11_1326  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1323 -> m11_1327  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1323 -> m11_1328  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1323 -> m11_1329  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1323 -> m11_1330  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1323 -> m11_1331  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1323 -> m11_1332  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1323 -> m11_1333  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1324 -> m11_1325  [key=0, style=solid];
m11_1324 -> m11_24  [key=2, style=dotted];
m11_1324 -> m11_25  [key=2, style=dotted];
m11_1325 -> m11_1326  [key=0, style=solid];
m11_1325 -> m11_26  [key=2, style=dotted];
m11_1326 -> m11_1327  [key=0, style=solid];
m11_1326 -> m11_24  [key=2, style=dotted];
m11_1326 -> m11_25  [key=2, style=dotted];
m11_1327 -> m11_1328  [key=0, style=solid];
m11_1327 -> m11_26  [key=2, style=dotted];
m11_1328 -> m11_1329  [key=0, style=solid];
m11_1328 -> m11_1177  [key=2, style=dotted];
m11_1329 -> m11_1330  [key=0, style=solid];
m11_1329 -> m11_26  [key=2, style=dotted];
m11_1330 -> m11_1331  [key=0, style=solid];
m11_1330 -> m11_26  [key=2, style=dotted];
m11_1331 -> m11_1332  [key=0, style=solid];
m11_1331 -> m11_1262  [key=2, style=dotted];
m11_1331 -> m11_1335  [key=2, style=dotted];
m11_1331 -> m11_26  [key=2, style=dotted];
m11_1332 -> m11_1333  [key=0, style=solid];
m11_1332 -> m11_24  [key=2, style=dotted];
m11_1332 -> m11_25  [key=2, style=dotted];
m11_1333 -> m11_1334  [key=0, style=solid];
m11_1333 -> m11_26  [key=2, style=dotted];
m11_1334 -> m11_1321  [color=blue, key=0, style=bold];
m11_792 -> m11_793  [key=0, style=solid];
m11_793 -> m11_794  [key=0, style=solid];
m11_793 -> m11_793  [color=darkorchid, key=3, label="Local variable Newtonsoft.Json.JsonTextReader reader", style=bold];
m11_794 -> m11_795  [key=0, style=solid];
m11_794 -> m11_22  [key=2, style=dotted];
m11_794 -> m11_23  [key=2, style=dotted];
m11_795 -> m11_796  [key=0, style=solid];
m11_795 -> m11_46  [key=2, style=dotted];
m11_795 -> m11_26  [key=2, style=dotted];
m11_796 -> m11_797  [key=0, style=solid];
m11_796 -> m11_22  [key=2, style=dotted];
m11_796 -> m11_23  [key=2, style=dotted];
m11_797 -> m11_798  [key=0, style=solid];
m11_797 -> m11_46  [key=2, style=dotted];
m11_797 -> m11_26  [key=2, style=dotted];
m11_798 -> m11_799  [key=0, style=solid];
m11_798 -> m11_22  [key=2, style=dotted];
m11_798 -> m11_23  [key=2, style=dotted];
m11_799 -> m11_800  [key=0, style=solid];
m11_799 -> m11_46  [key=2, style=dotted];
m11_799 -> m11_26  [key=2, style=dotted];
m11_800 -> m11_801  [key=0, style=solid];
m11_800 -> m11_22  [key=2, style=dotted];
m11_800 -> m11_23  [key=2, style=dotted];
m11_801 -> m11_802  [key=0, style=solid];
m11_801 -> m11_46  [key=2, style=dotted];
m11_801 -> m11_26  [key=2, style=dotted];
m11_802 -> m11_803  [key=0, style=solid];
m11_802 -> m11_22  [key=2, style=dotted];
m11_802 -> m11_23  [key=2, style=dotted];
m11_802 -> m11_819  [key=2, style=dotted];
m11_803 -> m11_804  [key=0, style=solid];
m11_803 -> m11_46  [key=2, style=dotted];
m11_803 -> m11_26  [key=2, style=dotted];
m11_804 -> m11_805  [key=0, style=solid];
m11_804 -> m11_22  [key=2, style=dotted];
m11_804 -> m11_23  [key=2, style=dotted];
m11_804 -> m11_819  [key=2, style=dotted];
m11_805 -> m11_806  [key=0, style=solid];
m11_805 -> m11_46  [key=2, style=dotted];
m11_805 -> m11_26  [key=2, style=dotted];
m11_806 -> m11_807  [key=0, style=solid];
m11_806 -> m11_22  [key=2, style=dotted];
m11_806 -> m11_23  [key=2, style=dotted];
m11_806 -> m11_820  [key=2, style=dotted];
m11_806 -> m11_822  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_807 -> m11_808  [key=0, style=solid];
m11_807 -> m11_42  [key=2, style=dotted];
m11_807 -> m11_821  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_808 -> m11_809  [key=0, style=solid];
m11_808 -> m11_22  [key=2, style=dotted];
m11_808 -> m11_23  [key=2, style=dotted];
m11_808 -> m11_825  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_809 -> m11_810  [key=0, style=solid];
m11_809 -> m11_42  [key=2, style=dotted];
m11_809 -> m11_824  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_810 -> m11_811  [key=0, style=solid];
m11_810 -> m11_22  [key=2, style=dotted];
m11_810 -> m11_23  [key=2, style=dotted];
m11_810 -> m11_828  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_811 -> m11_812  [key=0, style=solid];
m11_811 -> m11_42  [key=2, style=dotted];
m11_811 -> m11_827  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_812 -> m11_813  [key=0, style=solid];
m11_812 -> m11_22  [key=2, style=dotted];
m11_812 -> m11_23  [key=2, style=dotted];
m11_812 -> m11_831  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_813 -> m11_814  [key=0, style=solid];
m11_813 -> m11_42  [key=2, style=dotted];
m11_813 -> m11_830  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_814 -> m11_815  [key=0, style=solid];
m11_814 -> m11_22  [key=2, style=dotted];
m11_814 -> m11_23  [key=2, style=dotted];
m11_815 -> m11_816  [key=0, style=solid];
m11_815 -> m11_46  [key=2, style=dotted];
m11_815 -> m11_26  [key=2, style=dotted];
m11_816 -> m11_817  [key=0, style=solid];
m11_816 -> m11_22  [key=2, style=dotted];
m11_816 -> m11_23  [key=2, style=dotted];
m11_816 -> m11_834  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_817 -> m11_818  [key=0, style=solid];
m11_817 -> m11_42  [key=2, style=dotted];
m11_817 -> m11_833  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_818 -> m11_792  [color=blue, key=0, style=bold];
m11_1155 -> m11_1156  [key=0, style=solid];
m11_1156 -> m11_1157  [key=0, style=solid];
m11_1156 -> m11_22  [key=2, style=dotted];
m11_1156 -> m11_23  [key=2, style=dotted];
m11_1156 -> m11_1158  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1157 -> m11_1158  [key=0, style=solid];
m11_1157 -> m11_115  [key=2, style=dotted];
m11_1157 -> m11_662  [key=2, style=dotted];
m11_1158 -> m11_1159  [key=0, style=solid];
m11_1158 -> m11_26  [key=2, style=dotted];
m11_1159 -> m11_1155  [color=blue, key=0, style=bold];
m11_1265 -> m11_1266  [key=0, style=solid];
m11_1266 -> m11_1267  [key=0, style=solid];
m11_1266 -> m11_1266  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_1267 -> m11_1268  [key=0, style=solid];
m11_1267 -> m11_22  [key=2, style=dotted];
m11_1267 -> m11_23  [key=2, style=dotted];
m11_1267 -> m11_1269  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1267 -> m11_1270  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1267 -> m11_1271  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1267 -> m11_1272  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1267 -> m11_1273  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1267 -> m11_1274  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1267 -> m11_1275  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1267 -> m11_1276  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1267 -> m11_1277  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1268 -> m11_1269  [key=0, style=solid];
m11_1268 -> m11_24  [key=2, style=dotted];
m11_1268 -> m11_25  [key=2, style=dotted];
m11_1269 -> m11_1270  [key=0, style=solid];
m11_1269 -> m11_26  [key=2, style=dotted];
m11_1270 -> m11_1271  [key=0, style=solid];
m11_1270 -> m11_24  [key=2, style=dotted];
m11_1270 -> m11_25  [key=2, style=dotted];
m11_1271 -> m11_1272  [key=0, style=solid];
m11_1271 -> m11_26  [key=2, style=dotted];
m11_1272 -> m11_1273  [key=0, style=solid];
m11_1272 -> m11_1177  [key=2, style=dotted];
m11_1273 -> m11_1274  [key=0, style=solid];
m11_1273 -> m11_26  [key=2, style=dotted];
m11_1274 -> m11_1275  [key=0, style=solid];
m11_1274 -> m11_26  [key=2, style=dotted];
m11_1275 -> m11_1276  [key=0, style=solid];
m11_1275 -> m11_1262  [key=2, style=dotted];
m11_1275 -> m11_1263  [key=2, style=dotted];
m11_1275 -> m11_1264  [key=2, style=dotted];
m11_1275 -> m11_26  [key=2, style=dotted];
m11_1276 -> m11_1277  [key=0, style=solid];
m11_1276 -> m11_24  [key=2, style=dotted];
m11_1276 -> m11_25  [key=2, style=dotted];
m11_1277 -> m11_1278  [key=0, style=solid];
m11_1277 -> m11_26  [key=2, style=dotted];
m11_1278 -> m11_1265  [color=blue, key=0, style=bold];
m11_867 -> m11_868  [key=0, style=solid];
m11_868 -> m11_869  [key=0, style=solid];
m11_868 -> m11_793  [color=darkorchid, key=3, label="Local variable Newtonsoft.Json.JsonTextReader reader", style=bold];
m11_869 -> m11_870  [key=0, style=solid];
m11_869 -> m11_22  [key=2, style=dotted];
m11_869 -> m11_23  [key=2, style=dotted];
m11_869 -> m11_871  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_869 -> m11_872  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_870 -> m11_871  [key=0, style=solid];
m11_870 -> m11_24  [key=2, style=dotted];
m11_870 -> m11_25  [key=2, style=dotted];
m11_871 -> m11_872  [key=0, style=solid];
m11_871 -> m11_26  [key=2, style=dotted];
m11_872 -> m11_873  [key=0, style=solid];
m11_872 -> m11_26  [key=2, style=dotted];
m11_873 -> m11_874  [key=0, style=solid];
m11_873 -> m11_22  [key=2, style=dotted];
m11_873 -> m11_23  [key=2, style=dotted];
m11_873 -> m11_875  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_873 -> m11_876  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_874 -> m11_875  [key=0, style=solid];
m11_874 -> m11_24  [key=2, style=dotted];
m11_874 -> m11_25  [key=2, style=dotted];
m11_875 -> m11_876  [key=0, style=solid];
m11_875 -> m11_26  [key=2, style=dotted];
m11_876 -> m11_877  [key=0, style=solid];
m11_876 -> m11_26  [key=2, style=dotted];
m11_877 -> m11_878  [key=0, style=solid];
m11_877 -> m11_22  [key=2, style=dotted];
m11_877 -> m11_23  [key=2, style=dotted];
m11_877 -> m11_879  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_877 -> m11_880  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_878 -> m11_879  [key=0, style=solid];
m11_878 -> m11_24  [key=2, style=dotted];
m11_878 -> m11_25  [key=2, style=dotted];
m11_879 -> m11_880  [key=0, style=solid];
m11_879 -> m11_26  [key=2, style=dotted];
m11_880 -> m11_881  [key=0, style=solid];
m11_880 -> m11_26  [key=2, style=dotted];
m11_881 -> m11_882  [key=0, style=solid];
m11_881 -> m11_22  [key=2, style=dotted];
m11_881 -> m11_23  [key=2, style=dotted];
m11_881 -> m11_883  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_881 -> m11_884  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_882 -> m11_883  [key=0, style=solid];
m11_882 -> m11_24  [key=2, style=dotted];
m11_882 -> m11_25  [key=2, style=dotted];
m11_883 -> m11_884  [key=0, style=solid];
m11_883 -> m11_26  [key=2, style=dotted];
m11_884 -> m11_885  [key=0, style=solid];
m11_884 -> m11_26  [key=2, style=dotted];
m11_885 -> m11_886  [key=0, style=solid];
m11_885 -> m11_22  [key=2, style=dotted];
m11_885 -> m11_23  [key=2, style=dotted];
m11_885 -> m11_897  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_886 -> m11_887  [key=0, style=solid];
m11_886 -> m11_42  [key=2, style=dotted];
m11_886 -> m11_896  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_887 -> m11_888  [key=0, style=solid];
m11_887 -> m11_22  [key=2, style=dotted];
m11_887 -> m11_23  [key=2, style=dotted];
m11_887 -> m11_889  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_887 -> m11_890  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_888 -> m11_889  [key=0, style=solid];
m11_888 -> m11_24  [key=2, style=dotted];
m11_888 -> m11_25  [key=2, style=dotted];
m11_889 -> m11_890  [key=0, style=solid];
m11_889 -> m11_26  [key=2, style=dotted];
m11_890 -> m11_891  [key=0, style=solid];
m11_890 -> m11_26  [key=2, style=dotted];
m11_891 -> m11_892  [key=0, style=solid];
m11_891 -> m11_22  [key=2, style=dotted];
m11_891 -> m11_23  [key=2, style=dotted];
m11_892 -> m11_893  [key=0, style=solid];
m11_892 -> m11_24  [key=2, style=dotted];
m11_892 -> m11_28  [key=2, style=dotted];
m11_893 -> m11_894  [key=0, style=solid];
m11_893 -> m11_22  [key=2, style=dotted];
m11_893 -> m11_23  [key=2, style=dotted];
m11_893 -> m11_900  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_894 -> m11_895  [key=0, style=solid];
m11_894 -> m11_42  [key=2, style=dotted];
m11_894 -> m11_899  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_895 -> m11_867  [color=blue, key=0, style=bold];
m11_782 -> m11_783  [key=0, style=solid];
m11_783 -> m11_784  [key=0, style=solid];
m11_784 -> m11_785  [key=0, style=solid];
m11_784 -> m11_786  [key=2, style=dotted];
m11_785 -> m11_782  [color=blue, key=0, style=bold];
m11_122 -> m11_123  [key=0, style=solid];
m11_122 -> m11_24  [key=2, style=dotted];
m11_122 -> m11_25  [key=2, style=dotted];
m11_123 -> m11_124  [key=0, style=solid];
m11_123 -> m11_26  [key=2, style=dotted];
m11_123 -> m11_19  [key=2, style=dotted];
m11_124 -> m11_125  [key=0, style=solid];
m11_124 -> m11_24  [key=2, style=dotted];
m11_124 -> m11_25  [key=2, style=dotted];
m11_124 -> m11_20  [key=2, style=dotted];
m11_124 -> m11_21  [key=2, style=dotted];
m11_125 -> m11_126  [key=0, style=solid];
m11_125 -> m11_26  [key=2, style=dotted];
m11_125 -> m11_30  [key=2, style=dotted];
m11_126 -> m11_127  [key=0, style=solid];
m11_126 -> m11_24  [key=2, style=dotted];
m11_126 -> m11_25  [key=2, style=dotted];
m11_126 -> m11_122  [color=blue, key=0, style=bold];
m11_42 -> m11_5  [key=2, style=dotted];
m11_42 -> m11_43  [key=0, style=solid];
m11_1911 -> m11_1912  [key=0, style=solid];
m11_1912 -> m11_1913  [key=0, style=solid];
m11_1912 -> m11_1912  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_1913 -> m11_1914  [key=0, style=solid];
m11_1913 -> m11_22  [key=2, style=dotted];
m11_1913 -> m11_229  [key=2, style=dotted];
m11_1913 -> m11_269  [key=2, style=dotted];
m11_1913 -> m11_270  [key=2, style=dotted];
m11_1913 -> m11_1915  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1913 -> m11_1916  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1913 -> m11_1917  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1913 -> m11_1918  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1913 -> m11_1919  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1913 -> m11_1920  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1913 -> m11_1921  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1913 -> m11_1922  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1913 -> m11_1923  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1913 -> m11_1924  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1913 -> m11_1925  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1913 -> m11_1926  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1913 -> m11_1927  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1913 -> m11_1928  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1913 -> m11_1929  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1913 -> m11_1930  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1913 -> m11_1931  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1913 -> m11_1932  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1913 -> m11_1933  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1913 -> m11_1934  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1913 -> m11_1935  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1913 -> m11_1936  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1913 -> m11_1937  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1913 -> m11_1938  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1913 -> m11_1939  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1913 -> m11_1940  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1913 -> m11_1941  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1913 -> m11_1942  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1913 -> m11_1943  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1913 -> m11_1944  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1913 -> m11_1945  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1913 -> m11_1946  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1913 -> m11_1947  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1913 -> m11_1948  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1913 -> m11_1949  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1913 -> m11_1950  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1914 -> m11_1915  [key=0, style=solid];
m11_1914 -> m11_24  [key=2, style=dotted];
m11_1914 -> m11_25  [key=2, style=dotted];
m11_1915 -> m11_1916  [key=0, style=solid];
m11_1915 -> m11_24  [key=2, style=dotted];
m11_1915 -> m11_25  [key=2, style=dotted];
m11_1916 -> m11_1917  [key=0, style=solid];
m11_1916 -> m11_26  [key=2, style=dotted];
m11_1917 -> m11_1918  [key=0, style=solid];
m11_1917 -> m11_24  [key=2, style=dotted];
m11_1917 -> m11_25  [key=2, style=dotted];
m11_1918 -> m11_1919  [key=0, style=solid];
m11_1918 -> m11_26  [key=2, style=dotted];
m11_1919 -> m11_1920  [key=0, style=solid];
m11_1919 -> m11_26  [key=2, style=dotted];
m11_1920 -> m11_1921  [key=0, style=solid];
m11_1920 -> m11_24  [key=2, style=dotted];
m11_1920 -> m11_25  [key=2, style=dotted];
m11_1921 -> m11_1922  [key=0, style=solid];
m11_1921 -> m11_26  [key=2, style=dotted];
m11_1922 -> m11_1923  [key=0, style=solid];
m11_1922 -> m11_26  [key=2, style=dotted];
m11_1923 -> m11_1924  [key=0, style=solid];
m11_1923 -> m11_24  [key=2, style=dotted];
m11_1923 -> m11_25  [key=2, style=dotted];
m11_1924 -> m11_1925  [key=0, style=solid];
m11_1924 -> m11_26  [key=2, style=dotted];
m11_1925 -> m11_1926  [key=0, style=solid];
m11_1925 -> m11_26  [key=2, style=dotted];
m11_1926 -> m11_1927  [key=0, style=solid];
m11_1926 -> m11_24  [key=2, style=dotted];
m11_1926 -> m11_25  [key=2, style=dotted];
m11_1927 -> m11_1928  [key=0, style=solid];
m11_1927 -> m11_26  [key=2, style=dotted];
m11_1928 -> m11_1929  [key=0, style=solid];
m11_1928 -> m11_26  [key=2, style=dotted];
m11_1929 -> m11_1930  [key=0, style=solid];
m11_1929 -> m11_24  [key=2, style=dotted];
m11_1929 -> m11_25  [key=2, style=dotted];
m11_1930 -> m11_1931  [key=0, style=solid];
m11_1930 -> m11_26  [key=2, style=dotted];
m11_1931 -> m11_1932  [key=0, style=solid];
m11_1931 -> m11_26  [key=2, style=dotted];
m11_1932 -> m11_1933  [key=0, style=solid];
m11_1932 -> m11_24  [key=2, style=dotted];
m11_1932 -> m11_25  [key=2, style=dotted];
m11_1933 -> m11_1934  [key=0, style=solid];
m11_1933 -> m11_26  [key=2, style=dotted];
m11_1934 -> m11_1935  [key=0, style=solid];
m11_1934 -> m11_26  [key=2, style=dotted];
m11_1935 -> m11_1936  [key=0, style=solid];
m11_1935 -> m11_24  [key=2, style=dotted];
m11_1935 -> m11_25  [key=2, style=dotted];
m11_1936 -> m11_1937  [key=0, style=solid];
m11_1936 -> m11_26  [key=2, style=dotted];
m11_1937 -> m11_1938  [key=0, style=solid];
m11_1937 -> m11_26  [key=2, style=dotted];
m11_1938 -> m11_1939  [key=0, style=solid];
m11_1938 -> m11_24  [key=2, style=dotted];
m11_1938 -> m11_25  [key=2, style=dotted];
m11_1939 -> m11_1940  [key=0, style=solid];
m11_1939 -> m11_26  [key=2, style=dotted];
m11_1940 -> m11_1941  [key=0, style=solid];
m11_1940 -> m11_26  [key=2, style=dotted];
m11_1941 -> m11_1942  [key=0, style=solid];
m11_1941 -> m11_24  [key=2, style=dotted];
m11_1941 -> m11_25  [key=2, style=dotted];
m11_1942 -> m11_1943  [key=0, style=solid];
m11_1942 -> m11_26  [key=2, style=dotted];
m11_1943 -> m11_1944  [key=0, style=solid];
m11_1943 -> m11_26  [key=2, style=dotted];
m11_1944 -> m11_1945  [key=0, style=solid];
m11_1944 -> m11_24  [key=2, style=dotted];
m11_1944 -> m11_25  [key=2, style=dotted];
m11_1945 -> m11_1946  [key=0, style=solid];
m11_1945 -> m11_26  [key=2, style=dotted];
m11_1946 -> m11_1947  [key=0, style=solid];
m11_1946 -> m11_26  [key=2, style=dotted];
m11_1947 -> m11_1948  [key=0, style=solid];
m11_1947 -> m11_24  [key=2, style=dotted];
m11_1947 -> m11_25  [key=2, style=dotted];
m11_1948 -> m11_1949  [key=0, style=solid];
m11_1948 -> m11_26  [key=2, style=dotted];
m11_1949 -> m11_1950  [key=0, style=solid];
m11_1949 -> m11_26  [key=2, style=dotted];
m11_1950 -> m11_1951  [key=0, style=solid];
m11_1950 -> m11_24  [key=2, style=dotted];
m11_1950 -> m11_25  [key=2, style=dotted];
m11_1951 -> m11_1911  [color=blue, key=0, style=bold];
m11_537 -> m11_538  [key=0, style=solid];
m11_538 -> m11_539  [key=0, style=solid];
m11_538 -> m11_538  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_539 -> m11_540  [key=0, style=solid];
m11_539 -> m11_22  [key=2, style=dotted];
m11_539 -> m11_23  [key=2, style=dotted];
m11_539 -> m11_542  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_539 -> m11_544  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_539 -> m11_545  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_540 -> m11_541  [key=0, style=solid];
m11_540 -> m11_543  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_540 -> m11_485  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m11_542 -> m11_543  [key=0, style=solid];
m11_542 -> m11_24  [key=2, style=dotted];
m11_544 -> m11_545  [key=0, style=solid];
m11_544 -> m11_24  [key=2, style=dotted];
m11_545 -> m11_546  [key=0, style=solid];
m11_545 -> m11_26  [key=2, style=dotted];
m11_541 -> m11_542  [key=0, style=solid];
m11_541 -> m11_544  [key=0, style=solid];
m11_543 -> m11_541  [key=0, style=solid];
m11_543 -> m11_543  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_546 -> m11_537  [color=blue, key=0, style=bold];
m11_0 -> m11_1  [key=0, style=solid];
m11_2 -> m11_5  [key=2, style=dotted];
m11_2 -> m11_3  [key=0, style=solid];
m11_2 -> m11_22  [key=2, style=dotted];
m11_2 -> m11_23  [key=2, style=dotted];
m11_2 -> m11_4  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_2 -> m11_6  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_2 -> m11_7  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_2 -> m11_8  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_2 -> m11_9  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_2 -> m11_10  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_2 -> m11_11  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_2 -> m11_12  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_2 -> m11_13  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_2 -> m11_14  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_2 -> m11_15  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_2 -> m11_16  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_2 -> m11_17  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_1 -> m11_2  [key=0, style=solid];
m11_1 -> m11_4  [key=2, style=dotted];
m11_1 -> m11_18  [color=darkseagreen4, key=1, label=json, style=dashed];
m11_1 -> m11_1  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_3 -> m11_0  [color=blue, key=0, style=bold];
m11_3 -> m11_4  [key=0, style=solid];
m11_3 -> m11_24  [key=2, style=dotted];
m11_3 -> m11_25  [key=2, style=dotted];
m11_54 -> m11_55  [key=0, style=solid];
m11_54 -> m11_42  [key=2, style=dotted];
m11_54 -> m11_66  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_59 -> m11_20  [key=2, style=dotted];
m11_59 -> m11_60  [key=0, style=solid];
m11_59 -> m11_21  [key=2, style=dotted];
m11_59 -> m11_47  [color=blue, key=0, style=bold];
m11_55 -> m11_59  [color=darkseagreen4, key=1, label=enumClass, style=dashed];
m11_55 -> m11_56  [key=0, style=solid];
m11_55 -> m11_62  [key=2, style=dotted];
m11_55 -> m11_57  [color=darkseagreen4, key=1, label=enumClass, style=dashed];
m11_55 -> m11_58  [color=darkseagreen4, key=1, label=enumClass, style=dashed];
m11_55 -> m11_42  [key=2, style=dotted];
m11_55 -> m11_69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_58 -> m11_59  [key=0, style=solid];
m11_58 -> m11_24  [key=2, style=dotted];
m11_58 -> m11_28  [key=2, style=dotted];
m11_56 -> m11_57  [key=0, style=solid];
m11_56 -> m11_24  [key=2, style=dotted];
m11_56 -> m11_25  [key=2, style=dotted];
m11_57 -> m11_58  [key=0, style=solid];
m11_57 -> m11_26  [key=2, style=dotted];
m11_1305 -> m11_1306  [key=0, style=solid];
m11_1306 -> m11_1307  [key=0, style=solid];
m11_1306 -> m11_1306  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_1307 -> m11_1308  [key=0, style=solid];
m11_1307 -> m11_22  [key=2, style=dotted];
m11_1307 -> m11_23  [key=2, style=dotted];
m11_1307 -> m11_1309  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1307 -> m11_1310  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1307 -> m11_1311  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1307 -> m11_1312  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1307 -> m11_1313  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1307 -> m11_1314  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1307 -> m11_1315  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1307 -> m11_1316  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1307 -> m11_1317  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1308 -> m11_1309  [key=0, style=solid];
m11_1308 -> m11_24  [key=2, style=dotted];
m11_1308 -> m11_25  [key=2, style=dotted];
m11_1309 -> m11_1310  [key=0, style=solid];
m11_1309 -> m11_26  [key=2, style=dotted];
m11_1310 -> m11_1311  [key=0, style=solid];
m11_1310 -> m11_24  [key=2, style=dotted];
m11_1310 -> m11_25  [key=2, style=dotted];
m11_1311 -> m11_1312  [key=0, style=solid];
m11_1311 -> m11_26  [key=2, style=dotted];
m11_1312 -> m11_1313  [key=0, style=solid];
m11_1312 -> m11_1177  [key=2, style=dotted];
m11_1313 -> m11_1314  [key=0, style=solid];
m11_1313 -> m11_26  [key=2, style=dotted];
m11_1314 -> m11_1315  [key=0, style=solid];
m11_1314 -> m11_26  [key=2, style=dotted];
m11_1315 -> m11_1316  [key=0, style=solid];
m11_1315 -> m11_1262  [key=2, style=dotted];
m11_1315 -> m11_1263  [key=2, style=dotted];
m11_1315 -> m11_1264  [key=2, style=dotted];
m11_1315 -> m11_1319  [key=2, style=dotted];
m11_1315 -> m11_1320  [key=2, style=dotted];
m11_1315 -> m11_26  [key=2, style=dotted];
m11_1316 -> m11_1317  [key=0, style=solid];
m11_1316 -> m11_24  [key=2, style=dotted];
m11_1316 -> m11_25  [key=2, style=dotted];
m11_1317 -> m11_1318  [key=0, style=solid];
m11_1317 -> m11_26  [key=2, style=dotted];
m11_1318 -> m11_1305  [color=blue, key=0, style=bold];
m11_762 -> m11_763  [key=0, style=solid];
m11_763 -> m11_764  [key=0, style=solid];
m11_763 -> m11_763  [color=darkorchid, key=3, label="Local variable string input", style=bold];
m11_764 -> m11_765  [key=0, style=solid];
m11_764 -> m11_23  [key=2, style=dotted];
m11_765 -> m11_766  [key=0, style=solid];
m11_765 -> m11_22  [key=2, style=dotted];
m11_765 -> m11_767  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_765 -> m11_768  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_765 -> m11_769  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_765 -> m11_770  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_765 -> m11_771  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_765 -> m11_772  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_765 -> m11_773  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_765 -> m11_774  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_765 -> m11_775  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_765 -> m11_776  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_765 -> m11_777  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_765 -> m11_778  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_765 -> m11_779  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_765 -> m11_780  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_766 -> m11_767  [key=0, style=solid];
m11_766 -> m11_26  [key=2, style=dotted];
m11_767 -> m11_768  [key=0, style=solid];
m11_767 -> m11_250  [key=2, style=dotted];
m11_768 -> m11_769  [key=0, style=solid];
m11_768 -> m11_26  [key=2, style=dotted];
m11_769 -> m11_770  [key=0, style=solid];
m11_769 -> m11_26  [key=2, style=dotted];
m11_770 -> m11_771  [key=0, style=solid];
m11_770 -> m11_250  [key=2, style=dotted];
m11_771 -> m11_772  [key=0, style=solid];
m11_771 -> m11_26  [key=2, style=dotted];
m11_772 -> m11_773  [key=0, style=solid];
m11_772 -> m11_26  [key=2, style=dotted];
m11_773 -> m11_774  [key=0, style=solid];
m11_773 -> m11_250  [key=2, style=dotted];
m11_774 -> m11_775  [key=0, style=solid];
m11_774 -> m11_26  [key=2, style=dotted];
m11_775 -> m11_776  [key=0, style=solid];
m11_775 -> m11_26  [key=2, style=dotted];
m11_776 -> m11_777  [key=0, style=solid];
m11_776 -> m11_26  [key=2, style=dotted];
m11_777 -> m11_778  [key=0, style=solid];
m11_777 -> m11_26  [key=2, style=dotted];
m11_778 -> m11_779  [key=0, style=solid];
m11_778 -> m11_250  [key=2, style=dotted];
m11_779 -> m11_780  [key=0, style=solid];
m11_779 -> m11_26  [key=2, style=dotted];
m11_780 -> m11_781  [key=0, style=solid];
m11_780 -> m11_26  [key=2, style=dotted];
m11_781 -> m11_762  [color=blue, key=0, style=bold];
m11_1400 -> m11_1401  [key=0, style=solid];
m11_1401 -> m11_1402  [key=0, style=solid];
m11_1401 -> m11_22  [key=2, style=dotted];
m11_1401 -> m11_23  [key=2, style=dotted];
m11_1401 -> m11_1405  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1402 -> m11_1403  [key=0, style=solid];
m11_1402 -> m11_42  [key=2, style=dotted];
m11_1402 -> m11_1404  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_1403 -> m11_1400  [color=blue, key=0, style=bold];
m11_1617 -> m11_1618  [key=0, style=solid];
m11_1618 -> m11_1619  [key=0, style=solid];
m11_1618 -> m11_1618  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_1619 -> m11_1620  [key=0, style=solid];
m11_1619 -> m11_22  [key=2, style=dotted];
m11_1619 -> m11_229  [key=2, style=dotted];
m11_1619 -> m11_269  [key=2, style=dotted];
m11_1619 -> m11_270  [key=2, style=dotted];
m11_1619 -> m11_1621  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1619 -> m11_1622  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1619 -> m11_1623  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1619 -> m11_1624  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1619 -> m11_1625  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1619 -> m11_1626  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1619 -> m11_1627  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1619 -> m11_1628  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1619 -> m11_1629  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1619 -> m11_1630  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1619 -> m11_1631  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1619 -> m11_1632  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1619 -> m11_1633  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1619 -> m11_1634  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1619 -> m11_1635  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1619 -> m11_1636  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1619 -> m11_1637  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1619 -> m11_1638  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1620 -> m11_1621  [key=0, style=solid];
m11_1620 -> m11_24  [key=2, style=dotted];
m11_1620 -> m11_25  [key=2, style=dotted];
m11_1621 -> m11_1622  [key=0, style=solid];
m11_1621 -> m11_26  [key=2, style=dotted];
m11_1622 -> m11_1623  [key=0, style=solid];
m11_1622 -> m11_24  [key=2, style=dotted];
m11_1622 -> m11_25  [key=2, style=dotted];
m11_1623 -> m11_1624  [key=0, style=solid];
m11_1623 -> m11_26  [key=2, style=dotted];
m11_1624 -> m11_1625  [key=0, style=solid];
m11_1624 -> m11_24  [key=2, style=dotted];
m11_1624 -> m11_25  [key=2, style=dotted];
m11_1625 -> m11_1626  [key=0, style=solid];
m11_1625 -> m11_26  [key=2, style=dotted];
m11_1626 -> m11_1627  [key=0, style=solid];
m11_1626 -> m11_24  [key=2, style=dotted];
m11_1626 -> m11_25  [key=2, style=dotted];
m11_1627 -> m11_1628  [key=0, style=solid];
m11_1627 -> m11_26  [key=2, style=dotted];
m11_1628 -> m11_1629  [key=0, style=solid];
m11_1628 -> m11_24  [key=2, style=dotted];
m11_1628 -> m11_25  [key=2, style=dotted];
m11_1629 -> m11_1630  [key=0, style=solid];
m11_1629 -> m11_26  [key=2, style=dotted];
m11_1630 -> m11_1631  [key=0, style=solid];
m11_1630 -> m11_24  [key=2, style=dotted];
m11_1630 -> m11_25  [key=2, style=dotted];
m11_1631 -> m11_1632  [key=0, style=solid];
m11_1631 -> m11_26  [key=2, style=dotted];
m11_1632 -> m11_1633  [key=0, style=solid];
m11_1632 -> m11_24  [key=2, style=dotted];
m11_1632 -> m11_25  [key=2, style=dotted];
m11_1633 -> m11_1634  [key=0, style=solid];
m11_1633 -> m11_26  [key=2, style=dotted];
m11_1634 -> m11_1635  [key=0, style=solid];
m11_1634 -> m11_24  [key=2, style=dotted];
m11_1634 -> m11_25  [key=2, style=dotted];
m11_1635 -> m11_1636  [key=0, style=solid];
m11_1635 -> m11_26  [key=2, style=dotted];
m11_1636 -> m11_1637  [key=0, style=solid];
m11_1636 -> m11_24  [key=2, style=dotted];
m11_1636 -> m11_25  [key=2, style=dotted];
m11_1637 -> m11_1638  [key=0, style=solid];
m11_1637 -> m11_26  [key=2, style=dotted];
m11_1638 -> m11_1639  [key=0, style=solid];
m11_1638 -> m11_24  [key=2, style=dotted];
m11_1638 -> m11_28  [key=2, style=dotted];
m11_1639 -> m11_1617  [color=blue, key=0, style=bold];
m11_987 -> m11_988  [key=0, style=solid];
m11_988 -> m11_989  [key=0, style=solid];
m11_988 -> m11_988  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_989 -> m11_990  [key=0, style=solid];
m11_989 -> m11_22  [key=2, style=dotted];
m11_989 -> m11_23  [key=2, style=dotted];
m11_989 -> m11_991  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_989 -> m11_992  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_989 -> m11_993  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_989 -> m11_994  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_989 -> m11_995  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_989 -> m11_996  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_989 -> m11_997  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_990 -> m11_991  [key=0, style=solid];
m11_990 -> m11_24  [key=2, style=dotted];
m11_991 -> m11_992  [key=0, style=solid];
m11_991 -> m11_26  [key=2, style=dotted];
m11_992 -> m11_993  [key=0, style=solid];
m11_992 -> m11_24  [key=2, style=dotted];
m11_993 -> m11_994  [key=0, style=solid];
m11_993 -> m11_26  [key=2, style=dotted];
m11_994 -> m11_995  [key=0, style=solid];
m11_994 -> m11_24  [key=2, style=dotted];
m11_995 -> m11_996  [key=0, style=solid];
m11_995 -> m11_999  [key=2, style=dotted];
m11_995 -> m11_1000  [key=2, style=dotted];
m11_995 -> m11_26  [key=2, style=dotted];
m11_996 -> m11_997  [key=0, style=solid];
m11_996 -> m11_24  [key=2, style=dotted];
m11_997 -> m11_998  [key=0, style=solid];
m11_997 -> m11_26  [key=2, style=dotted];
m11_998 -> m11_987  [color=blue, key=0, style=bold];
m11_18 -> m11_19  [key=0, style=solid];
m11_18 -> m11_29  [key=2, style=dotted];
m11_14 -> m11_15  [key=0, style=solid];
m11_14 -> m11_27  [key=2, style=dotted];
m11_14 -> m11_26  [key=2, style=dotted];
m11_15 -> m11_16  [key=0, style=solid];
m11_15 -> m11_24  [key=2, style=dotted];
m11_15 -> m11_25  [key=2, style=dotted];
m11_19 -> m11_20  [key=0, style=solid];
m11_1479 -> m11_1480  [key=0, style=solid];
m11_1480 -> m11_1481  [key=0, style=solid];
m11_1480 -> m11_1480  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_1481 -> m11_1482  [key=0, style=solid];
m11_1481 -> m11_22  [key=2, style=dotted];
m11_1481 -> m11_23  [key=2, style=dotted];
m11_1481 -> m11_1483  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1481 -> m11_1484  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1481 -> m11_1485  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1481 -> m11_1486  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1482 -> m11_1483  [key=0, style=solid];
m11_1482 -> m11_24  [key=2, style=dotted];
m11_1482 -> m11_25  [key=2, style=dotted];
m11_1483 -> m11_1484  [key=0, style=solid];
m11_1483 -> m11_26  [key=2, style=dotted];
m11_1484 -> m11_1485  [key=0, style=solid];
m11_1484 -> m11_26  [key=2, style=dotted];
m11_1485 -> m11_1486  [key=0, style=solid];
m11_1485 -> m11_24  [key=2, style=dotted];
m11_1485 -> m11_25  [key=2, style=dotted];
m11_1486 -> m11_1487  [key=0, style=solid];
m11_1486 -> m11_26  [key=2, style=dotted];
m11_1487 -> m11_1479  [color=blue, key=0, style=bold];
m11_1063 -> m11_1064  [key=0, style=solid];
m11_1064 -> m11_1065  [key=0, style=solid];
m11_1064 -> m11_1064  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_1065 -> m11_1066  [key=0, style=solid];
m11_1065 -> m11_22  [key=2, style=dotted];
m11_1065 -> m11_23  [key=2, style=dotted];
m11_1065 -> m11_1067  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1065 -> m11_1068  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1065 -> m11_1069  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1065 -> m11_1070  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1065 -> m11_1071  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1065 -> m11_1072  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1065 -> m11_1075  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1066 -> m11_1067  [key=0, style=solid];
m11_1066 -> m11_24  [key=2, style=dotted];
m11_1067 -> m11_1068  [key=0, style=solid];
m11_1067 -> m11_26  [key=2, style=dotted];
m11_1068 -> m11_1069  [key=0, style=solid];
m11_1068 -> m11_24  [key=2, style=dotted];
m11_1069 -> m11_1070  [key=0, style=solid];
m11_1069 -> m11_26  [key=2, style=dotted];
m11_1070 -> m11_1071  [key=0, style=solid];
m11_1070 -> m11_24  [key=2, style=dotted];
m11_1071 -> m11_1072  [key=0, style=solid];
m11_1071 -> m11_26  [key=2, style=dotted];
m11_1072 -> m11_1073  [key=0, style=solid];
m11_1072 -> m11_42  [key=2, style=dotted];
m11_1072 -> m11_1074  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_1073 -> m11_1063  [color=blue, key=0, style=bold];
m11_256 -> m11_257  [key=0, style=solid];
m11_256 -> m11_250  [key=2, style=dotted];
m11_256 -> m11_25  [key=2, style=dotted];
m11_257 -> m11_20  [key=2, style=dotted];
m11_257 -> m11_243  [key=2, style=dotted];
m11_257 -> m11_258  [key=0, style=solid];
m11_257 -> m11_250  [key=2, style=dotted];
m11_257 -> m11_25  [key=2, style=dotted];
m11_259 -> m11_20  [key=2, style=dotted];
m11_259 -> m11_243  [key=2, style=dotted];
m11_259 -> m11_260  [key=0, style=solid];
m11_259 -> m11_26  [key=2, style=dotted];
m11_258 -> m11_5  [key=2, style=dotted];
m11_258 -> m11_259  [key=0, style=solid];
m11_258 -> m11_26  [key=2, style=dotted];
m11_260 -> m11_5  [key=2, style=dotted];
m11_260 -> m11_261  [key=0, style=solid];
m11_260 -> m11_250  [key=2, style=dotted];
m11_260 -> m11_25  [key=2, style=dotted];
m11_261 -> m11_256  [color=blue, key=0, style=bold];
m11_261 -> m11_262  [key=0, style=solid];
m11_261 -> m11_26  [key=2, style=dotted];
m11_1515 -> m11_1516  [key=0, style=solid];
m11_1516 -> m11_1517  [key=0, style=solid];
m11_1516 -> m11_22  [key=2, style=dotted];
m11_1516 -> m11_23  [key=2, style=dotted];
m11_1516 -> m11_1518  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1516 -> m11_1519  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1516 -> m11_1520  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1516 -> m11_1521  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1516 -> m11_1522  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1516 -> m11_1523  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1516 -> m11_1524  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1516 -> m11_1525  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1516 -> m11_1526  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1516 -> m11_1527  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1516 -> m11_1528  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1516 -> m11_1529  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1516 -> m11_1530  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1516 -> m11_1531  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1516 -> m11_1532  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1516 -> m11_1533  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1516 -> m11_1534  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1516 -> m11_1535  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1516 -> m11_1536  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1516 -> m11_1537  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1516 -> m11_1538  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1516 -> m11_1539  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1516 -> m11_1540  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1516 -> m11_1541  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1516 -> m11_1542  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1516 -> m11_1543  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1516 -> m11_1544  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1517 -> m11_1518  [key=0, style=solid];
m11_1518 -> m11_1519  [key=0, style=solid];
m11_1518 -> m11_24  [key=2, style=dotted];
m11_1518 -> m11_25  [key=2, style=dotted];
m11_1519 -> m11_1520  [key=0, style=solid];
m11_1519 -> m11_26  [key=2, style=dotted];
m11_1520 -> m11_1521  [key=0, style=solid];
m11_1520 -> m11_24  [key=2, style=dotted];
m11_1520 -> m11_25  [key=2, style=dotted];
m11_1521 -> m11_1522  [key=0, style=solid];
m11_1521 -> m11_26  [key=2, style=dotted];
m11_1522 -> m11_1523  [key=0, style=solid];
m11_1522 -> m11_24  [key=2, style=dotted];
m11_1522 -> m11_25  [key=2, style=dotted];
m11_1523 -> m11_1524  [key=0, style=solid];
m11_1523 -> m11_26  [key=2, style=dotted];
m11_1524 -> m11_1525  [key=0, style=solid];
m11_1524 -> m11_24  [key=2, style=dotted];
m11_1524 -> m11_25  [key=2, style=dotted];
m11_1525 -> m11_1526  [key=0, style=solid];
m11_1525 -> m11_26  [key=2, style=dotted];
m11_1526 -> m11_1527  [key=0, style=solid];
m11_1526 -> m11_24  [key=2, style=dotted];
m11_1526 -> m11_25  [key=2, style=dotted];
m11_1527 -> m11_1528  [key=0, style=solid];
m11_1527 -> m11_26  [key=2, style=dotted];
m11_1528 -> m11_1529  [key=0, style=solid];
m11_1528 -> m11_24  [key=2, style=dotted];
m11_1528 -> m11_25  [key=2, style=dotted];
m11_1529 -> m11_1530  [key=0, style=solid];
m11_1529 -> m11_26  [key=2, style=dotted];
m11_1530 -> m11_1531  [key=0, style=solid];
m11_1530 -> m11_24  [key=2, style=dotted];
m11_1530 -> m11_25  [key=2, style=dotted];
m11_1531 -> m11_1532  [key=0, style=solid];
m11_1531 -> m11_26  [key=2, style=dotted];
m11_1532 -> m11_1533  [key=0, style=solid];
m11_1532 -> m11_24  [key=2, style=dotted];
m11_1532 -> m11_25  [key=2, style=dotted];
m11_1533 -> m11_1534  [key=0, style=solid];
m11_1533 -> m11_26  [key=2, style=dotted];
m11_1534 -> m11_1535  [key=0, style=solid];
m11_1534 -> m11_24  [key=2, style=dotted];
m11_1534 -> m11_25  [key=2, style=dotted];
m11_1535 -> m11_1536  [key=0, style=solid];
m11_1535 -> m11_26  [key=2, style=dotted];
m11_1536 -> m11_1537  [key=0, style=solid];
m11_1536 -> m11_24  [key=2, style=dotted];
m11_1536 -> m11_25  [key=2, style=dotted];
m11_1537 -> m11_1538  [key=0, style=solid];
m11_1537 -> m11_26  [key=2, style=dotted];
m11_1538 -> m11_1539  [key=0, style=solid];
m11_1538 -> m11_24  [key=2, style=dotted];
m11_1538 -> m11_25  [key=2, style=dotted];
m11_1539 -> m11_1540  [key=0, style=solid];
m11_1539 -> m11_26  [key=2, style=dotted];
m11_1540 -> m11_1541  [key=0, style=solid];
m11_1540 -> m11_24  [key=2, style=dotted];
m11_1540 -> m11_25  [key=2, style=dotted];
m11_1541 -> m11_1542  [key=0, style=solid];
m11_1541 -> m11_26  [key=2, style=dotted];
m11_1542 -> m11_1543  [key=0, style=solid];
m11_1542 -> m11_24  [key=2, style=dotted];
m11_1542 -> m11_25  [key=2, style=dotted];
m11_1543 -> m11_1544  [key=0, style=solid];
m11_1543 -> m11_26  [key=2, style=dotted];
m11_1544 -> m11_1545  [key=0, style=solid];
m11_1544 -> m11_24  [key=2, style=dotted];
m11_1544 -> m11_28  [key=2, style=dotted];
m11_1545 -> m11_1515  [color=blue, key=0, style=bold];
m11_1291 -> m11_1292  [key=0, style=solid];
m11_1292 -> m11_1293  [key=0, style=solid];
m11_1292 -> m11_1292  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_1293 -> m11_1294  [key=0, style=solid];
m11_1293 -> m11_22  [key=2, style=dotted];
m11_1293 -> m11_23  [key=2, style=dotted];
m11_1293 -> m11_1295  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1293 -> m11_1296  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1293 -> m11_1297  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1293 -> m11_1298  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1293 -> m11_1299  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1293 -> m11_1300  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1293 -> m11_1301  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1293 -> m11_1302  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1293 -> m11_1303  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1294 -> m11_1295  [key=0, style=solid];
m11_1294 -> m11_24  [key=2, style=dotted];
m11_1294 -> m11_25  [key=2, style=dotted];
m11_1295 -> m11_1296  [key=0, style=solid];
m11_1295 -> m11_26  [key=2, style=dotted];
m11_1296 -> m11_1297  [key=0, style=solid];
m11_1296 -> m11_24  [key=2, style=dotted];
m11_1296 -> m11_25  [key=2, style=dotted];
m11_1297 -> m11_1298  [key=0, style=solid];
m11_1297 -> m11_26  [key=2, style=dotted];
m11_1298 -> m11_1299  [key=0, style=solid];
m11_1298 -> m11_1177  [key=2, style=dotted];
m11_1299 -> m11_1300  [key=0, style=solid];
m11_1299 -> m11_26  [key=2, style=dotted];
m11_1300 -> m11_1301  [key=0, style=solid];
m11_1300 -> m11_26  [key=2, style=dotted];
m11_1301 -> m11_1302  [key=0, style=solid];
m11_1301 -> m11_1262  [key=2, style=dotted];
m11_1301 -> m11_1263  [key=2, style=dotted];
m11_1301 -> m11_1264  [key=2, style=dotted];
m11_1301 -> m11_26  [key=2, style=dotted];
m11_1302 -> m11_1303  [key=0, style=solid];
m11_1302 -> m11_24  [key=2, style=dotted];
m11_1302 -> m11_25  [key=2, style=dotted];
m11_1303 -> m11_1304  [key=0, style=solid];
m11_1303 -> m11_26  [key=2, style=dotted];
m11_1304 -> m11_1291  [color=blue, key=0, style=bold];
m11_2008 -> m11_2009  [key=0, style=solid];
m11_2009 -> m11_2010  [key=0, style=solid];
m11_2009 -> m11_2029  [key=2, style=dotted];
m11_2009 -> m11_23  [key=2, style=dotted];
m11_2009 -> m11_2012  [color=darkseagreen4, key=1, label=toggleReaderError, style=dashed];
m11_2009 -> m11_2015  [color=darkseagreen4, key=1, label=toggleReaderError, style=dashed];
m11_2009 -> m11_2018  [color=darkseagreen4, key=1, label=toggleReaderError, style=dashed];
m11_2009 -> m11_2020  [color=darkseagreen4, key=1, label=toggleReaderError, style=dashed];
m11_2009 -> m11_2023  [color=darkseagreen4, key=1, label=toggleReaderError, style=dashed];
m11_2009 -> m11_2027  [color=darkseagreen4, key=1, label=toggleReaderError, style=dashed];
m11_2010 -> m11_2011  [key=0, style=solid];
m11_2010 -> m11_22  [key=2, style=dotted];
m11_2010 -> m11_2013  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_2010 -> m11_2031  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_2010 -> m11_2014  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_2010 -> m11_2034  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_2010 -> m11_2016  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_2010 -> m11_2017  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_2010 -> m11_2019  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_2010 -> m11_2037  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_2010 -> m11_2021  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_2010 -> m11_2022  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_2010 -> m11_2024  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_2010 -> m11_2040  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_2010 -> m11_2025  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_2010 -> m11_2043  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_2010 -> m11_2026  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_2010 -> m11_2046  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_2012 -> m11_2013  [key=0, style=solid];
m11_2015 -> m11_2016  [key=0, style=solid];
m11_2018 -> m11_2019  [key=0, style=solid];
m11_2020 -> m11_2021  [key=0, style=solid];
m11_2023 -> m11_2024  [key=0, style=solid];
m11_2027 -> m11_2028  [key=0, style=solid];
m11_2011 -> m11_2012  [key=0, style=solid];
m11_2011 -> m11_24  [key=2, style=dotted];
m11_2011 -> m11_25  [key=2, style=dotted];
m11_2013 -> m11_2014  [key=0, style=solid];
m11_2013 -> m11_42  [key=2, style=dotted];
m11_2013 -> m11_2030  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_2014 -> m11_2015  [key=0, style=solid];
m11_2014 -> m11_42  [key=2, style=dotted];
m11_2014 -> m11_2033  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_2016 -> m11_2017  [key=0, style=solid];
m11_2016 -> m11_24  [key=2, style=dotted];
m11_2016 -> m11_25  [key=2, style=dotted];
m11_2017 -> m11_2018  [key=0, style=solid];
m11_2017 -> m11_26  [key=2, style=dotted];
m11_2019 -> m11_2020  [key=0, style=solid];
m11_2019 -> m11_42  [key=2, style=dotted];
m11_2019 -> m11_2036  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_2021 -> m11_2022  [key=0, style=solid];
m11_2021 -> m11_24  [key=2, style=dotted];
m11_2021 -> m11_25  [key=2, style=dotted];
m11_2022 -> m11_2023  [key=0, style=solid];
m11_2022 -> m11_26  [key=2, style=dotted];
m11_2024 -> m11_2025  [key=0, style=solid];
m11_2024 -> m11_42  [key=2, style=dotted];
m11_2024 -> m11_2039  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_2025 -> m11_2026  [key=0, style=solid];
m11_2025 -> m11_42  [key=2, style=dotted];
m11_2025 -> m11_2042  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_2026 -> m11_2027  [key=0, style=solid];
m11_2026 -> m11_42  [key=2, style=dotted];
m11_2026 -> m11_2045  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_2028 -> m11_2008  [color=blue, key=0, style=bold];
m11_302 -> m11_303  [key=0, style=solid];
m11_303 -> m11_304  [key=0, style=solid];
m11_303 -> m11_303  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_304 -> m11_305  [color=red, key=0, style=solid];
m11_304 -> m11_22  [key=2, style=dotted];
m11_304 -> m11_23  [key=2, style=dotted];
m11_304 -> m11_308  [color=red, key=1, label=reader, style=dashed];
m11_305 -> m11_306  [color=red, key=0, style=solid];
m11_305 -> m11_42  [color=red, key=2, style=dotted];
m11_305 -> m11_307  [color=red, key=1, label="lambda expression", style=dashed];
m11_306 -> m11_302  [color=blue, key=0, style=bold];
m11_1795 -> m11_1796  [key=0, style=solid];
m11_1796 -> m11_1797  [key=0, style=solid];
m11_1796 -> m11_1796  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_1797 -> m11_1798  [key=0, style=solid];
m11_1797 -> m11_22  [key=2, style=dotted];
m11_1797 -> m11_23  [key=2, style=dotted];
m11_1797 -> m11_1799  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1797 -> m11_1800  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1797 -> m11_1801  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1797 -> m11_1802  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1797 -> m11_1803  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1797 -> m11_1804  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1797 -> m11_1805  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1797 -> m11_1806  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1797 -> m11_1807  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1797 -> m11_1808  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1797 -> m11_1809  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1798 -> m11_1799  [key=0, style=solid];
m11_1798 -> m11_24  [key=2, style=dotted];
m11_1799 -> m11_1800  [key=0, style=solid];
m11_1799 -> m11_26  [key=2, style=dotted];
m11_1800 -> m11_1801  [key=0, style=solid];
m11_1800 -> m11_24  [key=2, style=dotted];
m11_1801 -> m11_1802  [key=0, style=solid];
m11_1801 -> m11_26  [key=2, style=dotted];
m11_1802 -> m11_1803  [key=0, style=solid];
m11_1802 -> m11_24  [key=2, style=dotted];
m11_1803 -> m11_1804  [key=0, style=solid];
m11_1803 -> m11_26  [key=2, style=dotted];
m11_1804 -> m11_1805  [key=0, style=solid];
m11_1804 -> m11_24  [key=2, style=dotted];
m11_1805 -> m11_1806  [key=0, style=solid];
m11_1805 -> m11_26  [key=2, style=dotted];
m11_1806 -> m11_1807  [key=0, style=solid];
m11_1806 -> m11_24  [key=2, style=dotted];
m11_1807 -> m11_1808  [key=0, style=solid];
m11_1807 -> m11_26  [key=2, style=dotted];
m11_1808 -> m11_1809  [key=0, style=solid];
m11_1808 -> m11_24  [key=2, style=dotted];
m11_1809 -> m11_1810  [key=0, style=solid];
m11_1809 -> m11_26  [key=2, style=dotted];
m11_1810 -> m11_1795  [color=blue, key=0, style=bold];
m11_1353 -> m11_1354  [key=0, style=solid];
m11_1354 -> m11_1355  [key=0, style=solid];
m11_1354 -> m11_1354  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_1355 -> m11_1356  [key=0, style=solid];
m11_1355 -> m11_22  [key=2, style=dotted];
m11_1355 -> m11_23  [key=2, style=dotted];
m11_1355 -> m11_1357  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1355 -> m11_1358  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1355 -> m11_1359  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1355 -> m11_1360  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1355 -> m11_1361  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1355 -> m11_1362  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1355 -> m11_1363  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1355 -> m11_1364  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1355 -> m11_1366  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1355 -> m11_1367  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1356 -> m11_1357  [key=0, style=solid];
m11_1356 -> m11_1352  [key=2, style=dotted];
m11_1357 -> m11_1358  [key=0, style=solid];
m11_1357 -> m11_24  [key=2, style=dotted];
m11_1357 -> m11_25  [key=2, style=dotted];
m11_1358 -> m11_1359  [key=0, style=solid];
m11_1358 -> m11_26  [key=2, style=dotted];
m11_1359 -> m11_1360  [key=0, style=solid];
m11_1359 -> m11_24  [key=2, style=dotted];
m11_1359 -> m11_25  [key=2, style=dotted];
m11_1360 -> m11_1361  [key=0, style=solid];
m11_1360 -> m11_26  [key=2, style=dotted];
m11_1361 -> m11_1362  [key=0, style=solid];
m11_1361 -> m11_1177  [key=2, style=dotted];
m11_1362 -> m11_1363  [key=0, style=solid];
m11_1362 -> m11_26  [key=2, style=dotted];
m11_1363 -> m11_1364  [key=0, style=solid];
m11_1363 -> m11_26  [key=2, style=dotted];
m11_1364 -> m11_1365  [key=0, style=solid];
m11_1366 -> m11_1367  [key=0, style=solid];
m11_1366 -> m11_24  [key=2, style=dotted];
m11_1366 -> m11_25  [key=2, style=dotted];
m11_1367 -> m11_1368  [key=0, style=solid];
m11_1367 -> m11_26  [key=2, style=dotted];
m11_1365 -> m11_1366  [key=0, style=solid];
m11_1365 -> m11_1335  [key=2, style=dotted];
m11_1365 -> m11_26  [key=2, style=dotted];
m11_1365 -> m11_1365  [color=darkseagreen4, key=1, label=dt, style=dashed];
m11_1368 -> m11_1353  [color=blue, key=0, style=bold];
m11_2083 -> m11_2084  [key=0, style=solid];
m11_2083 -> m11_2087  [color=darkseagreen4, key=1, label="byte[]", style=dashed];
m11_2084 -> m11_2085  [key=0, style=solid];
m11_2084 -> m11_2091  [key=2, style=dotted];
m11_2087 -> m11_2088  [key=0, style=solid];
m11_2087 -> m11_2092  [key=2, style=dotted];
m11_2085 -> m11_2086  [key=0, style=solid];
m11_2085 -> m11_2091  [key=2, style=dotted];
m11_2085 -> m11_2085  [color=darkseagreen4, key=1, label=toReturn, style=dashed];
m11_2085 -> m11_2087  [color=darkseagreen4, key=1, label=toReturn, style=dashed];
m11_2085 -> m11_2088  [color=darkseagreen4, key=1, label=toReturn, style=dashed];
m11_2085 -> m11_2089  [color=darkseagreen4, key=1, label=toReturn, style=dashed];
m11_2086 -> m11_2087  [key=0, style=solid];
m11_2086 -> m11_2088  [key=0, style=solid];
m11_2088 -> m11_2089  [key=0, style=solid];
m11_2089 -> m11_2090  [key=0, style=solid];
m11_2090 -> m11_2083  [color=blue, key=0, style=bold];
m11_1165 -> m11_1166  [key=0, style=solid];
m11_1166 -> m11_1167  [key=0, style=solid];
m11_1166 -> m11_22  [key=2, style=dotted];
m11_1166 -> m11_23  [key=2, style=dotted];
m11_1166 -> m11_1170  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1167 -> m11_1168  [key=0, style=solid];
m11_1167 -> m11_42  [key=2, style=dotted];
m11_1167 -> m11_1169  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_1168 -> m11_1165  [color=blue, key=0, style=bold];
m11_1765 -> m11_1766  [key=0, style=solid];
m11_1766 -> m11_1767  [key=0, style=solid];
m11_1766 -> m11_1766  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_1767 -> m11_1768  [key=0, style=solid];
m11_1767 -> m11_22  [key=2, style=dotted];
m11_1767 -> m11_229  [key=2, style=dotted];
m11_1767 -> m11_269  [key=2, style=dotted];
m11_1767 -> m11_270  [key=2, style=dotted];
m11_1767 -> m11_1769  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1767 -> m11_1770  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1767 -> m11_1771  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1768 -> m11_1769  [key=0, style=solid];
m11_1768 -> m11_24  [key=2, style=dotted];
m11_1768 -> m11_25  [key=2, style=dotted];
m11_1769 -> m11_1770  [key=0, style=solid];
m11_1769 -> m11_26  [key=2, style=dotted];
m11_1770 -> m11_1771  [key=0, style=solid];
m11_1770 -> m11_26  [key=2, style=dotted];
m11_1771 -> m11_1772  [key=0, style=solid];
m11_1771 -> m11_24  [key=2, style=dotted];
m11_1771 -> m11_28  [key=2, style=dotted];
m11_1772 -> m11_1765  [color=blue, key=0, style=bold];
m11_472 -> m11_473  [key=0, style=solid];
m11_473 -> m11_474  [key=0, style=solid];
m11_473 -> m11_478  [key=2, style=dotted];
m11_473 -> m11_476  [color=darkseagreen4, key=1, label=s, style=dashed];
m11_474 -> m11_475  [key=0, style=solid];
m11_474 -> m11_22  [key=2, style=dotted];
m11_474 -> m11_23  [key=2, style=dotted];
m11_474 -> m11_476  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_476 -> m11_477  [key=0, style=solid];
m11_476 -> m11_26  [key=2, style=dotted];
m11_475 -> m11_476  [key=0, style=solid];
m11_475 -> m11_250  [key=2, style=dotted];
m11_477 -> m11_472  [color=blue, key=0, style=bold];
m11_646 -> m11_647  [key=0, style=solid];
m11_647 -> m11_648  [key=0, style=solid];
m11_647 -> m11_647  [color=darkorchid, key=3, label="Local variable string helloWorld", style=bold];
m11_648 -> m11_649  [key=0, style=solid];
m11_648 -> m11_228  [key=2, style=dotted];
m11_649 -> m11_650  [key=0, style=solid];
m11_649 -> m11_22  [key=2, style=dotted];
m11_649 -> m11_23  [key=2, style=dotted];
m11_649 -> m11_652  [key=2, style=dotted];
m11_649 -> m11_654  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_650 -> m11_651  [key=0, style=solid];
m11_650 -> m11_42  [key=2, style=dotted];
m11_650 -> m11_653  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_651 -> m11_646  [color=blue, key=0, style=bold];
m11_638 -> m11_639  [key=0, style=solid];
m11_639 -> m11_640  [key=0, style=solid];
m11_639 -> m11_22  [key=2, style=dotted];
m11_639 -> m11_23  [key=2, style=dotted];
m11_639 -> m11_643  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_640 -> m11_641  [key=0, style=solid];
m11_640 -> m11_42  [key=2, style=dotted];
m11_640 -> m11_642  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_641 -> m11_638  [color=blue, key=0, style=bold];
m11_1867 -> m11_1868  [key=0, style=solid];
m11_1868 -> m11_1869  [key=0, style=solid];
m11_1868 -> m11_1868  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_1869 -> m11_1870  [key=0, style=solid];
m11_1869 -> m11_22  [key=2, style=dotted];
m11_1869 -> m11_23  [key=2, style=dotted];
m11_1869 -> m11_1871  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1869 -> m11_1874  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1870 -> m11_1871  [key=0, style=solid];
m11_1870 -> m11_24  [key=2, style=dotted];
m11_1870 -> m11_25  [key=2, style=dotted];
m11_1871 -> m11_1872  [key=0, style=solid];
m11_1871 -> m11_1613  [key=2, style=dotted];
m11_1871 -> m11_1873  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_1872 -> m11_1867  [color=blue, key=0, style=bold];
m11_252 -> m11_253  [key=0, style=solid];
m11_252 -> m11_5  [key=2, style=dotted];
m11_253 -> m11_254  [key=0, style=solid];
m11_253 -> m11_253  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_253 -> m11_20  [key=2, style=dotted];
m11_253 -> m11_38  [key=2, style=dotted];
m11_254 -> m11_255  [key=0, style=solid];
m11_254 -> m11_22  [key=2, style=dotted];
m11_254 -> m11_229  [key=2, style=dotted];
m11_254 -> m11_269  [key=2, style=dotted];
m11_254 -> m11_270  [key=2, style=dotted];
m11_254 -> m11_256  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_254 -> m11_257  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_254 -> m11_258  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_254 -> m11_259  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_254 -> m11_260  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_254 -> m11_261  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_254 -> m11_262  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_254 -> m11_263  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_254 -> m11_264  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_254 -> m11_265  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_254 -> m11_266  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_254 -> m11_267  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_254 -> m11_5  [key=2, style=dotted];
m11_255 -> m11_256  [key=0, style=solid];
m11_255 -> m11_250  [key=2, style=dotted];
m11_255 -> m11_25  [key=2, style=dotted];
m11_268 -> m11_252  [color=blue, key=0, style=bold];
m11_268 -> m11_145  [color=darkseagreen4, key=1, label=json, style=dashed];
m11_1488 -> m11_1489  [key=0, style=solid];
m11_1489 -> m11_1490  [key=0, style=solid];
m11_1489 -> m11_1489  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_1490 -> m11_1491  [key=0, style=solid];
m11_1490 -> m11_22  [key=2, style=dotted];
m11_1490 -> m11_23  [key=2, style=dotted];
m11_1490 -> m11_1492  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1490 -> m11_1493  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1490 -> m11_1494  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1490 -> m11_1495  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1491 -> m11_1492  [key=0, style=solid];
m11_1491 -> m11_24  [key=2, style=dotted];
m11_1491 -> m11_25  [key=2, style=dotted];
m11_1492 -> m11_1493  [key=0, style=solid];
m11_1492 -> m11_26  [key=2, style=dotted];
m11_1493 -> m11_1494  [key=0, style=solid];
m11_1493 -> m11_26  [key=2, style=dotted];
m11_1494 -> m11_1495  [key=0, style=solid];
m11_1494 -> m11_24  [key=2, style=dotted];
m11_1494 -> m11_25  [key=2, style=dotted];
m11_1495 -> m11_1496  [key=0, style=solid];
m11_1495 -> m11_26  [key=2, style=dotted];
m11_1496 -> m11_1488  [color=blue, key=0, style=bold];
m11_1369 -> m11_1370  [key=0, style=solid];
m11_1370 -> m11_1371  [key=0, style=solid];
m11_1370 -> m11_1370  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_1371 -> m11_1372  [key=0, style=solid];
m11_1371 -> m11_22  [key=2, style=dotted];
m11_1371 -> m11_23  [key=2, style=dotted];
m11_1371 -> m11_1373  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1371 -> m11_1374  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1371 -> m11_1375  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1371 -> m11_1376  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1371 -> m11_1377  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1371 -> m11_1378  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1371 -> m11_1379  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1372 -> m11_1373  [key=0, style=solid];
m11_1372 -> m11_24  [key=2, style=dotted];
m11_1372 -> m11_25  [key=2, style=dotted];
m11_1373 -> m11_1374  [key=0, style=solid];
m11_1373 -> m11_26  [key=2, style=dotted];
m11_1374 -> m11_1375  [key=0, style=solid];
m11_1374 -> m11_24  [key=2, style=dotted];
m11_1374 -> m11_25  [key=2, style=dotted];
m11_1375 -> m11_1376  [key=0, style=solid];
m11_1375 -> m11_26  [key=2, style=dotted];
m11_1376 -> m11_1377  [key=0, style=solid];
m11_1376 -> m11_115  [key=2, style=dotted];
m11_1377 -> m11_1378  [key=0, style=solid];
m11_1377 -> m11_26  [key=2, style=dotted];
m11_1378 -> m11_1379  [key=0, style=solid];
m11_1378 -> m11_26  [key=2, style=dotted];
m11_1379 -> m11_1380  [key=0, style=solid];
m11_1379 -> m11_26  [key=2, style=dotted];
m11_1380 -> m11_1369  [color=blue, key=0, style=bold];
m11_1407 -> m11_1408  [key=0, style=solid];
m11_1408 -> m11_1409  [key=0, style=solid];
m11_1408 -> m11_22  [key=2, style=dotted];
m11_1408 -> m11_23  [key=2, style=dotted];
m11_1408 -> m11_1412  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1409 -> m11_1410  [key=0, style=solid];
m11_1409 -> m11_42  [key=2, style=dotted];
m11_1409 -> m11_1411  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_1410 -> m11_1407  [color=blue, key=0, style=bold];
m11_250 -> m11_251  [key=0, style=solid];
m11_972 -> m11_973  [key=0, style=solid];
m11_973 -> m11_974  [key=0, style=solid];
m11_973 -> m11_973  [color=darkorchid, key=3, label="Local variable int length", style=bold];
m11_974 -> m11_975  [key=0, style=solid];
m11_974 -> m11_478  [key=2, style=dotted];
m11_975 -> m11_976  [key=0, style=solid];
m11_975 -> m11_22  [key=2, style=dotted];
m11_975 -> m11_23  [key=2, style=dotted];
m11_975 -> m11_977  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_975 -> m11_978  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_975 -> m11_979  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_975 -> m11_980  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_975 -> m11_981  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_975 -> m11_982  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_975 -> m11_983  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_975 -> m11_984  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_975 -> m11_985  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_976 -> m11_977  [key=0, style=solid];
m11_976 -> m11_24  [key=2, style=dotted];
m11_977 -> m11_978  [key=0, style=solid];
m11_977 -> m11_26  [key=2, style=dotted];
m11_978 -> m11_979  [key=0, style=solid];
m11_978 -> m11_24  [key=2, style=dotted];
m11_979 -> m11_980  [key=0, style=solid];
m11_979 -> m11_26  [key=2, style=dotted];
m11_980 -> m11_981  [key=0, style=solid];
m11_980 -> m11_26  [key=2, style=dotted];
m11_981 -> m11_982  [key=0, style=solid];
m11_981 -> m11_204  [key=2, style=dotted];
m11_981 -> m11_26  [key=2, style=dotted];
m11_982 -> m11_983  [key=0, style=solid];
m11_982 -> m11_24  [key=2, style=dotted];
m11_982 -> m11_25  [key=2, style=dotted];
m11_983 -> m11_984  [key=0, style=solid];
m11_983 -> m11_26  [key=2, style=dotted];
m11_984 -> m11_985  [key=0, style=solid];
m11_984 -> m11_24  [key=2, style=dotted];
m11_984 -> m11_28  [key=2, style=dotted];
m11_985 -> m11_986  [key=0, style=solid];
m11_985 -> m11_26  [key=2, style=dotted];
m11_986 -> m11_972  [color=blue, key=0, style=bold];
m11_1600 -> m11_1601  [key=0, style=solid];
m11_1601 -> m11_1602  [key=0, style=solid];
m11_1601 -> m11_1601  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_1602 -> m11_1603  [key=0, style=solid];
m11_1602 -> m11_22  [key=2, style=dotted];
m11_1602 -> m11_23  [key=2, style=dotted];
m11_1602 -> m11_1604  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1602 -> m11_1605  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1602 -> m11_1606  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_1603 -> m11_1604  [key=0, style=solid];
m11_1603 -> m11_24  [key=2, style=dotted];
m11_1603 -> m11_25  [key=2, style=dotted];
m11_1604 -> m11_1605  [key=0, style=solid];
m11_1604 -> m11_26  [key=2, style=dotted];
m11_1605 -> m11_1606  [key=0, style=solid];
m11_1605 -> m11_24  [key=2, style=dotted];
m11_1605 -> m11_25  [key=2, style=dotted];
m11_1606 -> m11_1607  [key=0, style=solid];
m11_1606 -> m11_26  [key=2, style=dotted];
m11_1607 -> m11_1600  [color=blue, key=0, style=bold];
m11_251 -> m11_20  [key=2, style=dotted];
m11_251 -> m11_38  [key=2, style=dotted];
m11_251 -> m11_252  [key=0, style=solid];
m11_1077 -> m11_1078  [key=0, style=solid];
m11_1078 -> m11_1079  [key=0, style=solid];
m11_1078 -> m11_23  [key=2, style=dotted];
m11_1079 -> m11_1080  [key=0, style=solid];
m11_1079 -> m11_22  [key=2, style=dotted];
m11_1080 -> m11_1081  [key=0, style=solid];
m11_1080 -> m11_85  [key=2, style=dotted];
m11_1080 -> m11_1082  [color=darkseagreen4, key=1, label=data, style=dashed];
m11_1081 -> m11_1082  [key=0, style=solid];
m11_1081 -> m11_1085  [key=2, style=dotted];
m11_1082 -> m11_1083  [key=0, style=solid];
m11_1082 -> m11_1086  [key=2, style=dotted];
m11_1083 -> m11_1084  [key=0, style=solid];
m11_1083 -> m11_26  [key=2, style=dotted];
m11_1084 -> m11_1077  [color=blue, key=0, style=bold];
m11_2103 -> m11_44  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_2104 -> m11_61  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_2104 -> m11_64  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_2104 -> m11_67  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_2104 -> m11_70  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_2105 -> m11_110  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_2105 -> m11_113  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_2105 -> m11_117  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_2106 -> m11_133  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_2107 -> m11_170  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_2108 -> m11_207  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m11_2108 -> m11_208  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m11_2108 -> m11_209  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m11_2108 -> m11_210  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m11_2108 -> m11_211  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m11_2108 -> m11_212  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m11_2108 -> m11_213  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m11_2108 -> m11_214  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m11_2108 -> m11_215  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m11_2108 -> m11_216  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m11_2108 -> m11_217  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m11_2108 -> m11_218  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m11_2109 -> m11_277  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_2110 -> m11_295  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_2111 -> m11_308  [color=red, key=1, label=reader, style=dashed];
m11_2112 -> m11_470  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_2113 -> m11_560  [color=darkseagreen4, key=1, label=total, style=dashed];
m11_2114 -> m11_576  [color=darkseagreen4, key=1, label=total, style=dashed];
m11_2115 -> m11_629  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_2116 -> m11_636  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_2117 -> m11_643  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_2118 -> m11_654  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_2119 -> m11_669  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_2120 -> m11_822  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_2120 -> m11_825  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_2120 -> m11_828  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_2120 -> m11_831  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_2120 -> m11_834  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_2121 -> m11_859  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_2121 -> m11_862  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_2121 -> m11_865  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_2122 -> m11_897  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_2122 -> m11_900  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_2123 -> m11_1075  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_2124 -> m11_1153  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_2125 -> m11_1170  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_2126 -> m11_1183  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_2127 -> m11_1190  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_2128 -> m11_1197  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_2129 -> m11_1211  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_2130 -> m11_1218  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_2131 -> m11_1289  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_2132 -> m11_1391  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_2133 -> m11_1398  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_2134 -> m11_1405  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_2135 -> m11_1412  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_2136 -> m11_1419  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_2137 -> m11_1426  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_2138 -> m11_1559  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_2139 -> m11_1567  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_2140 -> m11_1598  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_2141 -> m11_1615  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_2142 -> m11_1779  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_2143 -> m11_1818  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_2144 -> m11_1874  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_2145 -> m11_1906  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_2145 -> m11_1909  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_2146 -> m11_2031  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_2146 -> m11_2034  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_2146 -> m11_2037  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_2146 -> m11_2040  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_2146 -> m11_2043  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_2146 -> m11_2046  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m11_2147 -> m11_2066  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.ToggleReaderError", style=dashed];
m11_2147 -> m11_2069  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.ToggleReaderError", style=dashed];
m11_2147 -> m11_2071  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.ToggleReaderError", style=dashed];
m11_2148 -> m11_2076  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.SlowStream", style=dashed];
m11_2148 -> m11_2077  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.SlowStream", style=dashed];
m11_2148 -> m11_2078  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.SlowStream", style=dashed];
m11_2148 -> m11_2084  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.SlowStream", style=dashed];
m11_2148 -> m11_2085  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.SlowStream", style=dashed];
m11_2148 -> m11_2087  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.SlowStream", style=dashed];
m11_2148 -> m11_2088  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.SlowStream", style=dashed];
m12_20 -> m12_21  [key=0, style=solid];
m12_21 -> m12_22  [key=0, style=solid];
m12_21 -> m12_10  [key=2, style=dotted];
m12_22 -> m12_20  [color=blue, key=0, style=bold];
m12_41 -> m12_42  [key=0, style=solid];
m12_42 -> m12_43  [key=0, style=solid];
m12_42 -> m12_10  [key=2, style=dotted];
m12_43 -> m12_41  [color=blue, key=0, style=bold];
m12_47 -> m12_48  [key=0, style=solid];
m12_47 -> m12_50  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_47 -> m12_54  [color=green, key=1, label=bool, style=dashed];
m12_47 -> m12_55  [color=green, key=1, label="System.Type", style=dashed];
m12_47 -> m12_56  [color=green, key=1, label=string, style=dashed];
m12_47 -> m12_47  [color=darkorchid, key=3, label="Parameter variable System.Type match", style=bold];
m12_47 -> m12_65  [color=darkorchid, key=3, label="Parameter variable bool searchInterfaces", style=bold];
m12_47 -> m12_52  [color=darkorchid, key=3, label="method methodReturn bool AssignableToTypeName", style=bold];
m12_47 -> m12_59  [color=darkorchid, key=3, label="method methodReturn bool AssignableToTypeName", style=bold];
m12_47 -> m12_64  [color=darkorchid, key=3, label="Parameter variable string fullTypeName", style=bold];
m12_47 -> m12_57  [color=green, key=1, label="System.Type", style=dashed];
m12_47 -> m12_66  [color=darkorchid, key=3, label="Parameter variable System.Type match", style=bold];
m12_47 -> m12_60  [color=darkorchid, key=3, label="method methodReturn bool AssignableToTypeName", style=bold];
m12_48 -> m12_49  [key=0, style=solid];
m12_48 -> m12_50  [color=darkseagreen4, key=1, label=current, style=dashed];
m12_48 -> m12_51  [color=darkseagreen4, key=1, label=current, style=dashed];
m12_48 -> m12_53  [color=darkseagreen4, key=1, label=current, style=dashed];
m12_48 -> m12_47  [color=darkorchid, key=3, label="Local variable System.Type current", style=bold];
m12_48 -> m12_20  [color=darkorchid, key=3, label="Local variable System.Type current", style=bold];
m12_50 -> m12_51  [key=0, style=solid];
m12_50 -> m12_53  [key=0, style=solid];
m12_50 -> m12_61  [key=2, style=dotted];
m12_54 -> m12_55  [color=green, key=0, style=solid];
m12_54 -> m12_58  [color=red, key=0, style=solid];
m12_54 -> m12_63  [color=red, key=2, style=dotted];
m12_54 -> m12_59  [color=green, key=0, style=solid];
m12_55 -> m12_56  [color=green, key=0, style=solid];
m12_55 -> m12_54  [color=red, key=0, style=solid];
m12_55 -> m12_61  [color=red, key=2, style=dotted];
m12_55 -> m12_59  [color=green, key=0, style=solid];
m12_55 -> m12_63  [color=green, key=2, style=dotted];
m12_56 -> m12_57  [color=green, key=0, style=solid];
m12_56 -> m12_55  [color=green, key=0, style=solid];
m12_56 -> m12_61  [color=green, key=2, style=dotted];
m12_49 -> m12_50  [key=0, style=solid];
m12_49 -> m12_54  [color=green, key=0, style=solid];
m12_51 -> m12_52  [key=0, style=solid];
m12_53 -> m12_49  [key=0, style=solid];
m12_53 -> m12_62  [key=2, style=dotted];
m12_53 -> m12_53  [color=darkseagreen4, key=1, label=current, style=dashed];
m12_52 -> m12_60  [key=0, style=solid];
m12_52 -> m12_61  [key=0, style=solid];
m12_58 -> m12_59  [key=0, style=solid];
m12_58 -> m12_60  [color=darkseagreen4, key=1, label="out System.Type", style=dashed];
m12_58 -> m12_61  [color=green, key=0, style=solid];
m12_57 -> m12_60  [color=red, key=0, style=solid];
m12_57 -> m12_58  [color=green, key=0, style=solid];
m12_59 -> m12_60  [key=0, style=solid];
m12_59 -> m12_61  [color=darkseagreen4, key=1, label="out System.Type", style=dashed];
m12_60 -> m12_47  [color=blue, key=0, style=bold];
m12_60 -> m12_61  [key=0, style=solid];
m12_17 -> m12_18  [key=0, style=solid];
m12_18 -> m12_19  [key=0, style=solid];
m12_18 -> m12_10  [key=2, style=dotted];
m12_19 -> m12_17  [color=blue, key=0, style=bold];
m12_65 -> m12_67  [color=green, key=1, label="System.Type", style=dashed];
m12_65 -> m12_47  [color=darkorchid, key=3, label="method methodReturn bool AssignableToTypeName", style=bold];
m12_65 -> m12_66  [color=red, key=0, style=solid];
m12_67 -> m12_68  [color=green, key=0, style=solid];
m12_67 -> m12_69  [color=green, key=2, style=dotted];
m12_67 -> m12_64  [color=blue, key=0, style=bold];
m12_66 -> m12_67  [color=red, key=0, style=solid];
m12_66 -> m12_68  [color=red, key=2, style=dotted];
m12_68 -> m12_65  [color=blue, key=0, style=bold];
m12_0 -> m12_1  [key=0, style=solid];
m12_1 -> m12_2  [key=0, style=solid];
m12_1 -> m12_3  [key=2, style=dotted];
m12_2 -> m12_0  [color=blue, key=0, style=bold];
m12_29 -> m12_30  [key=0, style=solid];
m12_30 -> m12_31  [key=0, style=solid];
m12_30 -> m12_10  [key=2, style=dotted];
m12_31 -> m12_29  [color=blue, key=0, style=bold];
m12_26 -> m12_27  [key=0, style=solid];
m12_27 -> m12_28  [key=0, style=solid];
m12_27 -> m12_10  [key=2, style=dotted];
m12_28 -> m12_26  [color=blue, key=0, style=bold];
m12_23 -> m12_24  [key=0, style=solid];
m12_24 -> m12_25  [key=0, style=solid];
m12_24 -> m12_10  [key=2, style=dotted];
m12_25 -> m12_23  [color=blue, key=0, style=bold];
m12_38 -> m12_39  [key=0, style=solid];
m12_39 -> m12_40  [key=0, style=solid];
m12_39 -> m12_10  [key=2, style=dotted];
m12_40 -> m12_38  [color=blue, key=0, style=bold];
m12_61 -> m12_47  [color=blue, key=0, style=bold];
m12_35 -> m12_36  [key=0, style=solid];
m12_36 -> m12_37  [key=0, style=solid];
m12_36 -> m12_10  [key=2, style=dotted];
m12_37 -> m12_35  [color=blue, key=0, style=bold];
m12_69 -> m12_70  [key=0, style=solid];
m12_69 -> m12_74  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m12_69 -> m12_69  [color=darkorchid, key=3, label="Parameter variable System.Type interfaceType", style=bold];
m12_69 -> m12_52  [color=darkorchid, key=3, label="method methodReturn bool ImplementInterface", style=bold];
m12_69 -> m12_59  [color=darkorchid, key=3, label="method methodReturn bool ImplementInterface", style=bold];
m12_69 -> m12_60  [color=darkorchid, key=3, label="method methodReturn bool ImplementInterface", style=bold];
m12_7 -> m12_8  [key=0, style=solid];
m12_8 -> m12_9  [key=0, style=solid];
m12_8 -> m12_10  [key=2, style=dotted];
m12_9 -> m12_7  [color=blue, key=0, style=bold];
m12_14 -> m12_15  [key=0, style=solid];
m12_15 -> m12_16  [key=0, style=solid];
m12_15 -> m12_10  [key=2, style=dotted];
m12_16 -> m12_14  [color=blue, key=0, style=bold];
m12_11 -> m12_12  [key=0, style=solid];
m12_12 -> m12_13  [key=0, style=solid];
m12_12 -> m12_10  [key=2, style=dotted];
m12_13 -> m12_11  [color=blue, key=0, style=bold];
m12_4 -> m12_5  [key=0, style=solid];
m12_5 -> m12_6  [key=0, style=solid];
m12_6 -> m12_4  [color=blue, key=0, style=bold];
m12_70 -> m12_71  [key=0, style=solid];
m12_70 -> m12_72  [color=darkseagreen4, key=1, label=currentType, style=dashed];
m12_70 -> m12_76  [color=darkseagreen4, key=1, label=currentType, style=dashed];
m12_70 -> m12_69  [color=darkorchid, key=3, label="Local variable System.Type currentType", style=bold];
m12_70 -> m12_20  [color=darkorchid, key=3, label="Local variable System.Type currentType", style=bold];
m12_74 -> m12_75  [key=0, style=solid];
m12_74 -> m12_73  [key=0, style=solid];
m12_74 -> m12_79  [key=2, style=dotted];
m12_71 -> m12_72  [key=0, style=solid];
m12_71 -> m12_77  [key=0, style=solid];
m12_72 -> m12_73  [key=0, style=solid];
m12_72 -> m12_63  [key=2, style=dotted];
m12_76 -> m12_71  [key=0, style=solid];
m12_76 -> m12_62  [key=2, style=dotted];
m12_76 -> m12_76  [color=darkseagreen4, key=1, label=currentType, style=dashed];
m12_77 -> m12_78  [key=0, style=solid];
m12_73 -> m12_74  [key=0, style=solid];
m12_73 -> m12_76  [key=0, style=solid];
m12_75 -> m12_78  [key=0, style=solid];
m12_78 -> m12_69  [color=blue, key=0, style=bold];
m12_64 -> m12_65  [key=0, style=solid];
m12_64 -> m12_66  [color=red, key=1, label="System.Type", style=dashed];
m12_64 -> m12_47  [color=darkorchid, key=3, label="method methodReturn bool AssignableToTypeName", style=bold];
m12_44 -> m12_45  [key=0, style=solid];
m12_45 -> m12_46  [key=0, style=solid];
m12_45 -> m12_10  [key=2, style=dotted];
m12_46 -> m12_44  [color=blue, key=0, style=bold];
m12_32 -> m12_33  [key=0, style=solid];
m12_33 -> m12_34  [key=0, style=solid];
m12_33 -> m12_10  [key=2, style=dotted];
m12_34 -> m12_32  [color=blue, key=0, style=bold];
m14_123 -> m14_124  [key=0, style=solid];
m14_128 -> m14_122  [key=2, style=dotted];
m14_128 -> m14_129  [key=0, style=solid];
m14_130 -> m14_23  [key=2, style=dotted];
m14_130 -> m14_131  [key=0, style=solid];
m14_127 -> m14_128  [key=0, style=solid];
m14_127 -> m14_121  [key=2, style=dotted];
m14_127 -> m14_129  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_129 -> m14_130  [key=0, style=solid];
m14_129 -> m14_110  [key=2, style=dotted];
m14_129 -> m14_155  [key=0, style=solid];
m14_124 -> m14_130  [color=darkseagreen4, key=1, label=xml, style=dashed];
m14_124 -> m14_113  [color=darkorchid, key=3, label="Local variable string xml", style=bold];
m14_124 -> m14_125  [key=0, style=solid];
m14_124 -> m14_126  [color=darkseagreen4, key=1, label=xml, style=dashed];
m14_124 -> m14_127  [key=0, style=solid];
m14_124 -> m14_129  [key=2, style=dotted];
m14_125 -> m14_132  [key=2, style=dotted];
m14_125 -> m14_127  [color=darkseagreen4, key=1, label=d, style=dashed];
m14_125 -> m14_126  [key=0, style=solid];
m14_125 -> m14_130  [key=2, style=dotted];
m14_126 -> m14_133  [key=2, style=dotted];
m14_126 -> m14_127  [key=0, style=solid];
m14_126 -> m14_128  [key=0, style=solid];
m14_131 -> m14_123  [color=blue, key=0, style=bold];
m14_131 -> m14_132  [key=0, style=solid];
m14_61 -> m14_62  [key=0, style=solid];
m14_586 -> m14_587  [key=0, style=solid];
m14_586 -> m14_589  [color=darkseagreen4, key=1, label=ateWhitespace, style=dashed];
m14_593 -> m14_221  [key=2, style=dotted];
m14_593 -> m14_594  [key=0, style=solid];
m14_593 -> m14_595  [color=darkseagreen4, key=1, label=xmlProduct, style=dashed];
m14_593 -> m14_617  [color=darkseagreen4, key=1, label=initialPosition, style=dashed];
m14_595 -> m14_15  [key=2, style=dotted];
m14_595 -> m14_596  [key=0, style=solid];
m14_595 -> m14_617  [key=0, style=solid];
m14_592 -> m14_593  [key=0, style=solid];
m14_592 -> m14_600  [key=2, style=dotted];
m14_592 -> m14_601  [key=2, style=dotted];
m14_592 -> m14_185  [key=2, style=dotted];
m14_594 -> m14_455  [key=2, style=dotted];
m14_594 -> m14_122  [key=2, style=dotted];
m14_594 -> m14_595  [key=0, style=solid];
m14_594 -> m14_617  [color=darkseagreen4, key=1, label=endPosition, style=dashed];
m14_596 -> m14_122  [key=2, style=dotted];
m14_596 -> m14_597  [key=0, style=solid];
m14_596 -> m14_603  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m14_596 -> m14_605  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m14_596 -> m14_608  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m14_596 -> m14_611  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m14_596 -> m14_614  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m14_596 -> m14_616  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m14_587 -> m14_592  [color=darkseagreen4, key=1, label=product, style=dashed];
m14_587 -> m14_588  [key=0, style=solid];
m14_587 -> m14_598  [key=2, style=dotted];
m14_587 -> m14_589  [color=darkseagreen4, key=1, label=product, style=dashed];
m14_587 -> m14_590  [color=darkseagreen4, key=1, label=product, style=dashed];
m14_587 -> m14_591  [color=darkseagreen4, key=1, label=product, style=dashed];
m14_587 -> m14_573  [key=0, style=solid];
m14_591 -> m14_592  [key=0, style=solid];
m14_591 -> m14_625  [key=0, style=solid];
m14_591 -> m14_627  [key=2, style=dotted];
m14_588 -> m14_589  [key=0, style=solid];
m14_588 -> m14_573  [key=0, style=solid];
m14_589 -> m14_590  [key=0, style=solid];
m14_589 -> m14_599  [key=2, style=dotted];
m14_590 -> m14_591  [key=0, style=solid];
m14_590 -> m14_185  [color=blue, key=0, style=bold];
m14_597 -> m14_586  [color=blue, key=0, style=bold];
m14_597 -> m14_598  [key=0, style=solid];
m14_597 -> m14_603  [key=0, style=solid];
m14_598 -> m14_599  [key=0, style=solid];
m14_598 -> m14_601  [key=0, style=solid];
m14_628 -> m14_629  [key=0, style=solid];
m14_628 -> m14_49  [key=2, style=dotted];
m14_632 -> m14_15  [key=2, style=dotted];
m14_632 -> m14_633  [key=0, style=solid];
m14_632 -> m14_51  [key=2, style=dotted];
m14_633 -> m14_122  [key=2, style=dotted];
m14_633 -> m14_634  [key=0, style=solid];
m14_633 -> m14_294  [key=2, style=dotted];
m14_630 -> m14_632  [color=darkseagreen4, key=1, label=d, style=dashed];
m14_630 -> m14_631  [key=0, style=solid];
m14_630 -> m14_132  [key=2, style=dotted];
m14_630 -> m14_633  [color=darkseagreen4, key=1, label=initialPosition, style=dashed];
m14_631 -> m14_632  [key=0, style=solid];
m14_631 -> m14_133  [key=2, style=dotted];
m14_631 -> m14_314  [key=2, style=dotted];
m14_629 -> m14_630  [key=0, style=solid];
m14_629 -> m14_631  [color=darkseagreen4, key=1, label=xml, style=dashed];
m14_629 -> m14_629  [color=darkorchid, key=3, label="Local variable string xml", style=bold];
m14_629 -> m14_636  [color=darkseagreen4, key=1, label=firstChar, style=dashed];
m14_629 -> m14_637  [color=darkseagreen4, key=1, label=firstChar, style=dashed];
m14_629 -> m14_640  [color=darkseagreen4, key=1, label=firstChar, style=dashed];
m14_629 -> m14_657  [color=darkseagreen4, key=1, label=firstChar, style=dashed];
m14_629 -> m14_671  [color=red, key=1, label=firstChar, style=dashed];
m14_634 -> m14_628  [color=blue, key=0, style=bold];
m14_634 -> m14_635  [key=0, style=solid];
m14_634 -> m14_702  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m14_706 -> m14_707  [key=0, style=solid];
m14_710 -> m14_23  [key=2, style=dotted];
m14_710 -> m14_711  [key=0, style=solid];
m14_714 -> m14_23  [key=2, style=dotted];
m14_714 -> m14_715  [key=0, style=solid];
m14_709 -> m14_710  [key=0, style=solid];
m14_709 -> m14_121  [key=2, style=dotted];
m14_711 -> m14_132  [key=2, style=dotted];
m14_711 -> m14_712  [key=0, style=solid];
m14_711 -> m14_713  [color=darkseagreen4, key=1, label=xml1, style=dashed];
m14_713 -> m14_714  [key=0, style=solid];
m14_713 -> m14_121  [key=2, style=dotted];
m14_712 -> m14_133  [key=2, style=dotted];
m14_712 -> m14_713  [key=0, style=solid];
m14_708 -> m14_709  [key=0, style=solid];
m14_708 -> m14_713  [key=2, style=dotted];
m14_707 -> m14_712  [color=darkseagreen4, key=1, label=xmlString, style=dashed];
m14_707 -> m14_708  [key=0, style=solid];
m14_707 -> m14_707  [color=darkorchid, key=3, label="Local variable string xmlString", style=bold];
m14_715 -> m14_706  [color=blue, key=0, style=bold];
m14_715 -> m14_716  [key=0, style=solid];
m14_705 -> m14_701  [color=blue, key=0, style=bold];
m14_320 -> m14_321  [key=0, style=solid];
m14_320 -> m14_320  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m14_320 -> m14_353  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m14_52 -> m14_53  [key=0, style=solid];
m14_60 -> m14_52  [color=blue, key=0, style=bold];
m14_20 -> m14_21  [key=0, style=solid];
m14_377 -> m14_378  [color=green, key=0, style=solid];
m14_377 -> m14_130  [key=2, style=dotted];
m14_378 -> m14_379  [color=green, key=0, style=solid];
m14_378 -> m14_142  [color=green, key=2, style=dotted];
m14_378 -> m14_380  [color=green, key=1, label="lambda expression", style=dashed];
m14_378 -> m14_400  [key=0, style=solid];
m14_379 -> m14_377  [color=blue, key=0, style=bold];
m14_379 -> m14_380  [key=0, style=solid];
m14_152 -> m14_153  [key=0, style=solid];
m14_152 -> m14_154  [key=2, style=dotted];
m14_161 -> m14_23  [key=2, style=dotted];
m14_161 -> m14_162  [key=0, style=solid];
m14_158 -> m14_23  [key=2, style=dotted];
m14_158 -> m14_159  [key=0, style=solid];
m14_157 -> m14_51  [key=2, style=dotted];
m14_157 -> m14_158  [key=0, style=solid];
m14_156 -> m14_97  [key=2, style=dotted];
m14_156 -> m14_157  [key=0, style=solid];
m14_156 -> m14_48  [key=2, style=dotted];
m14_156 -> m14_165  [key=2, style=dotted];
m14_156 -> m14_159  [color=darkseagreen4, key=1, label=doc1, style=dashed];
m14_156 -> m14_164  [key=0, style=solid];
m14_156 -> m14_167  [key=0, style=solid];
m14_156 -> m14_170  [key=0, style=solid];
m14_156 -> m14_180  [key=0, style=solid];
m14_154 -> m14_161  [color=darkseagreen4, key=1, label=x, style=dashed];
m14_154 -> m14_155  [key=0, style=solid];
m14_154 -> m14_163  [key=2, style=dotted];
m14_160 -> m14_161  [key=0, style=solid];
m14_160 -> m14_110  [key=2, style=dotted];
m14_159 -> m14_121  [key=2, style=dotted];
m14_159 -> m14_160  [key=0, style=solid];
m14_153 -> m14_154  [key=0, style=solid];
m14_153 -> m14_153  [color=darkorchid, key=3, label="Local variable decimal d", style=bold];
m14_153 -> m14_151  [color=blue, key=0, style=bold];
m14_155 -> m14_156  [key=0, style=solid];
m14_155 -> m14_164  [key=2, style=dotted];
m14_155 -> m14_181  [key=0, style=solid];
m14_162 -> m14_152  [color=blue, key=0, style=bold];
m14_162 -> m14_163  [key=0, style=solid];
m14_76 -> m14_77  [key=0, style=solid];
m14_76 -> m14_101  [key=0, style=solid];
m14_82 -> m14_23  [key=2, style=dotted];
m14_82 -> m14_83  [key=0, style=solid];
m14_82 -> m14_94  [color=red, key=0, style=solid];
m14_80 -> m14_23  [key=2, style=dotted];
m14_80 -> m14_51  [key=2, style=dotted];
m14_80 -> m14_81  [key=0, style=solid];
m14_80 -> m14_82  [color=darkseagreen4, key=1, label=dst, style=dashed];
m14_81 -> m14_22  [key=2, style=dotted];
m14_81 -> m14_82  [key=0, style=solid];
m14_81 -> m14_56  [key=2, style=dotted];
m14_78 -> m14_75  [key=2, style=dotted];
m14_78 -> m14_80  [color=darkseagreen4, key=1, label=doc, style=dashed];
m14_78 -> m14_81  [color=darkseagreen4, key=1, label=doc, style=dashed];
m14_78 -> m14_79  [key=0, style=solid];
m14_78 -> m14_83  [key=0, style=solid];
m14_79 -> m14_51  [key=2, style=dotted];
m14_79 -> m14_80  [key=0, style=solid];
m14_79 -> m14_84  [key=2, style=dotted];
m14_79 -> m14_102  [key=2, style=dotted];
m14_77 -> m14_82  [color=darkseagreen4, key=1, label=json1, style=dashed];
m14_77 -> m14_78  [key=0, style=solid];
m14_77 -> m14_77  [color=darkorchid, key=3, label="Local variable string json1", style=bold];
m14_77 -> m14_94  [color=red, key=0, style=solid];
m14_83 -> m14_76  [color=blue, key=0, style=bold];
m14_83 -> m14_84  [key=0, style=solid];
m14_83 -> m14_85  [color=darkseagreen4, key=1, label=remainingCharCount, style=dashed];
m14_83 -> m14_86  [color=darkseagreen4, key=1, label=remainingCharCount, style=dashed];
m14_83 -> m14_87  [color=darkseagreen4, key=1, label=remainingCharCount, style=dashed];
m14_83 -> m14_89  [color=darkseagreen4, key=1, label=remainingCharCount, style=dashed];
m14_83 -> m14_90  [color=darkseagreen4, key=1, label=remainingCharCount, style=dashed];
m14_83 -> m14_93  [color=darkseagreen4, key=1, label=remainingCharCount, style=dashed];
m14_356 -> m14_357  [key=0, style=solid];
m14_356 -> m14_358  [color=darkseagreen4, key=1, label=doc, style=dashed];
m14_356 -> m14_132  [key=2, style=dotted];
m14_356 -> m14_360  [color=darkseagreen4, key=1, label=doc, style=dashed];
m14_357 -> m14_358  [key=0, style=solid];
m14_357 -> m14_359  [key=0, style=solid];
m14_357 -> m14_133  [key=2, style=dotted];
m14_358 -> m14_359  [key=0, style=solid];
m14_358 -> m14_15  [key=2, style=dotted];
m14_359 -> m14_360  [key=0, style=solid];
m14_359 -> m14_361  [key=2, style=dotted];
m14_359 -> m14_24  [key=2, style=dotted];
m14_360 -> m14_356  [color=blue, key=0, style=bold];
m14_360 -> m14_23  [key=2, style=dotted];
m14_360 -> m14_361  [key=0, style=solid];
m14_431 -> m14_432  [key=0, style=solid];
m14_431 -> m14_448  [color=darkseagreen4, key=1, label=quoteChar, style=dashed];
m14_433 -> m14_142  [key=2, style=dotted];
m14_433 -> m14_434  [key=0, style=solid];
m14_433 -> m14_435  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_432 -> m14_433  [key=0, style=solid];
m14_432 -> m14_425  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_432 -> m14_436  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_432 -> m14_437  [key=0, style=solid];
m14_434 -> m14_431  [color=blue, key=0, style=bold];
m14_434 -> m14_435  [key=0, style=solid];
m14_434 -> m14_436  [color=darkseagreen4, key=1, label=quoteChar, style=dashed];
m14_434 -> m14_448  [color=darkseagreen4, key=1, label=quoteChar, style=dashed];
m14_312 -> m14_313  [key=0, style=solid];
m14_64 -> m14_65  [key=0, style=solid];
m14_64 -> m14_66  [key=0, style=solid];
m14_741 -> m14_742  [key=0, style=solid];
m14_741 -> m14_727  [color=red, key=0, style=solid];
m14_743 -> m14_221  [key=2, style=dotted];
m14_743 -> m14_744  [key=0, style=solid];
m14_743 -> m14_745  [color=darkseagreen4, key=1, label=node, style=dashed];
m14_745 -> m14_15  [key=2, style=dotted];
m14_745 -> m14_746  [color=red, key=0, style=solid];
m14_742 -> m14_743  [key=0, style=solid];
m14_742 -> m14_742  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_742 -> m14_294  [key=2, style=dotted];
m14_744 -> m14_745  [key=0, style=solid];
m14_744 -> m14_23  [key=2, style=dotted];
m14_744 -> m14_727  [color=red, key=0, style=solid];
m14_746 -> m14_23  [key=2, style=dotted];
m14_746 -> m14_747  [color=red, key=0, style=solid];
m14_746 -> m14_749  [color=red, key=0, style=solid];
m14_747 -> m14_741  [color=blue, key=0, style=bold];
m14_747 -> m14_748  [key=0, style=solid];
m14_747 -> m14_294  [key=2, style=dotted];
m14_627 -> m14_770  [key=0, style=solid];
m14_627 -> m14_619  [color=blue, key=0, style=bold];
m14_770 -> m14_771  [key=0, style=solid];
m14_770 -> m14_759  [key=2, style=dotted];
m14_770 -> m14_774  [key=2, style=dotted];
m14_771 -> m14_772  [key=0, style=solid];
m14_771 -> m14_773  [key=0, style=solid];
m14_771 -> m14_22  [key=2, style=dotted];
m14_772 -> m14_776  [key=0, style=solid];
m14_772 -> m14_23  [key=2, style=dotted];
m14_772 -> m14_773  [key=0, style=solid];
m14_773 -> m14_774  [key=0, style=solid];
m14_773 -> m14_775  [key=0, style=solid];
m14_773 -> m14_104  [key=2, style=dotted];
m14_773 -> m14_769  [color=blue, key=0, style=bold];
m14_774 -> m14_776  [key=0, style=solid];
m14_775 -> m14_776  [key=0, style=solid];
m14_775 -> m14_777  [key=2, style=dotted];
m14_776 -> m14_627  [color=blue, key=0, style=bold];
m14_776 -> m14_75  [key=2, style=dotted];
m14_776 -> m14_777  [key=0, style=solid];
m14_776 -> m14_778  [color=darkseagreen4, key=1, label=d, style=dashed];
m14_559 -> m14_816  [key=0, style=solid];
m14_559 -> m14_560  [key=0, style=solid];
m14_816 -> m14_817  [key=0, style=solid];
m14_816 -> m14_820  [key=0, style=solid];
m14_816 -> m14_627  [key=2, style=dotted];
m14_816 -> m14_816  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_817 -> m14_818  [key=0, style=solid];
m14_817 -> m14_819  [key=0, style=solid];
m14_817 -> m14_75  [key=2, style=dotted];
m14_820 -> m14_821  [key=0, style=solid];
m14_820 -> m14_188  [key=2, style=dotted];
m14_820 -> m14_815  [color=blue, key=0, style=bold];
m14_818 -> m14_821  [key=0, style=solid];
m14_818 -> m14_822  [key=2, style=dotted];
m14_818 -> m14_23  [key=2, style=dotted];
m14_818 -> m14_819  [key=0, style=solid];
m14_818 -> m14_271  [key=2, style=dotted];
m14_819 -> m14_821  [key=0, style=solid];
m14_819 -> m14_454  [key=2, style=dotted];
m14_819 -> m14_271  [key=2, style=dotted];
m14_819 -> m14_820  [key=0, style=solid];
m14_819 -> m14_84  [key=2, style=dotted];
m14_821 -> m14_559  [color=blue, key=0, style=bold];
m14_821 -> m14_822  [key=0, style=solid];
m14_95 -> m14_96  [key=0, style=solid];
m14_95 -> m14_103  [key=2, style=dotted];
m14_95 -> m14_97  [color=darkseagreen4, key=1, label=charsRead, style=dashed];
m14_95 -> m14_100  [color=darkseagreen4, key=1, label=charsRead, style=dashed];
m14_557 -> m14_829  [key=0, style=solid];
m14_557 -> m14_142  [key=2, style=dotted];
m14_557 -> m14_558  [key=0, style=solid];
m14_557 -> m14_559  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_829 -> m14_830  [key=0, style=solid];
m14_829 -> m14_833  [key=0, style=solid];
m14_829 -> m14_627  [key=2, style=dotted];
m14_829 -> m14_829  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_830 -> m14_831  [key=0, style=solid];
m14_830 -> m14_832  [key=0, style=solid];
m14_830 -> m14_75  [key=2, style=dotted];
m14_833 -> m14_834  [key=0, style=solid];
m14_833 -> m14_188  [key=2, style=dotted];
m14_833 -> m14_827  [color=blue, key=0, style=bold];
m14_831 -> m14_834  [key=0, style=solid];
m14_831 -> m14_822  [key=2, style=dotted];
m14_831 -> m14_23  [key=2, style=dotted];
m14_831 -> m14_832  [key=0, style=solid];
m14_831 -> m14_814  [key=2, style=dotted];
m14_831 -> m14_271  [key=2, style=dotted];
m14_832 -> m14_834  [key=0, style=solid];
m14_832 -> m14_454  [key=2, style=dotted];
m14_832 -> m14_271  [key=2, style=dotted];
m14_832 -> m14_833  [key=0, style=solid];
m14_832 -> m14_84  [key=2, style=dotted];
m14_834 -> m14_557  [color=blue, key=0, style=bold];
m14_834 -> m14_835  [key=0, style=solid];
m14_612 -> m14_613  [key=0, style=solid];
m14_612 -> m14_617  [color=darkseagreen4, key=1, label=endPosition, style=dashed];
m14_616 -> m14_15  [key=2, style=dotted];
m14_616 -> m14_617  [key=0, style=solid];
m14_616 -> m14_626  [key=0, style=solid];
m14_616 -> m14_187  [key=2, style=dotted];
m14_616 -> m14_188  [key=2, style=dotted];
m14_617 -> m14_122  [key=2, style=dotted];
m14_617 -> m14_618  [key=0, style=solid];
m14_617 -> m14_294  [key=2, style=dotted];
m14_614 -> m14_616  [color=darkseagreen4, key=1, label=d, style=dashed];
m14_614 -> m14_615  [key=0, style=solid];
m14_614 -> m14_132  [key=2, style=dotted];
m14_615 -> m14_616  [key=0, style=solid];
m14_615 -> m14_133  [key=2, style=dotted];
m14_615 -> m14_617  [key=0, style=solid];
m14_613 -> m14_614  [key=0, style=solid];
m14_613 -> m14_615  [color=darkseagreen4, key=1, label=xml, style=dashed];
m14_613 -> m14_613  [color=darkorchid, key=3, label="Local variable string xml", style=bold];
m14_613 -> m14_617  [key=0, style=solid];
m14_618 -> m14_612  [color=blue, key=0, style=bold];
m14_618 -> m14_619  [key=0, style=solid];
m14_618 -> m14_54  [key=2, style=dotted];
m14_618 -> m14_624  [color=darkseagreen4, key=1, label=constructorName, style=dashed];
m14_165 -> m14_166  [key=0, style=solid];
m14_63 -> m14_64  [key=0, style=solid];
m14_63 -> m14_65  [color=darkseagreen4, key=1, label=count, style=dashed];
m14_63 -> m14_68  [color=darkseagreen4, key=1, label=count, style=dashed];
m14_277 -> m14_278  [key=0, style=solid];
m14_277 -> m14_279  [key=0, style=solid];
m14_183 -> m14_403  [key=0, style=solid];
m14_183 -> m14_184  [key=0, style=solid];
m14_183 -> m14_183  [color=darkorchid, key=3, label="Local variable string xml", style=bold];
m14_403 -> m14_404  [key=0, style=solid];
m14_403 -> m14_428  [key=0, style=solid];
m14_403 -> m14_403  [color=darkorchid, key=3, label="Local variable string expected", style=bold];
m14_404 -> m14_405  [key=0, style=solid];
m14_404 -> m14_425  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m14_404 -> m14_122  [key=2, style=dotted];
m14_405 -> m14_406  [key=0, style=solid];
m14_405 -> m14_411  [key=0, style=solid];
m14_405 -> m14_415  [key=0, style=solid];
m14_405 -> m14_418  [key=0, style=solid];
m14_405 -> m14_420  [key=0, style=solid];
m14_405 -> m14_422  [key=0, style=solid];
m14_405 -> m14_425  [key=0, style=solid];
m14_405 -> m14_407  [color=darkseagreen4, key=1, label=arrayXml, style=dashed];
m14_425 -> m14_426  [key=0, style=solid];
m14_425 -> m14_427  [key=0, style=solid];
m14_425 -> m14_402  [key=2, style=dotted];
m14_425 -> m14_429  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_425 -> m14_425  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_406 -> m14_407  [key=0, style=solid];
m14_406 -> m14_408  [color=darkseagreen4, key=1, label=arrayDoc, style=dashed];
m14_406 -> m14_132  [key=2, style=dotted];
m14_411 -> m14_412  [key=0, style=solid];
m14_411 -> m14_413  [color=darkseagreen4, key=1, label=arrayXml, style=dashed];
m14_415 -> m14_416  [key=0, style=solid];
m14_418 -> m14_419  [key=0, style=solid];
m14_418 -> m14_420  [color=darkseagreen4, key=1, label=arrayDoc, style=dashed];
m14_418 -> m14_132  [key=2, style=dotted];
m14_420 -> m14_421  [key=0, style=solid];
m14_420 -> m14_15  [key=2, style=dotted];
m14_420 -> m14_422  [color=darkseagreen4, key=1, label=arrayJsonText, style=dashed];
m14_422 -> m14_423  [key=0, style=solid];
m14_422 -> m14_122  [key=2, style=dotted];
m14_407 -> m14_408  [key=0, style=solid];
m14_407 -> m14_410  [key=0, style=solid];
m14_407 -> m14_133  [key=2, style=dotted];
m14_408 -> m14_409  [key=0, style=solid];
m14_408 -> m14_403  [key=0, style=solid];
m14_408 -> m14_71  [key=2, style=dotted];
m14_408 -> m14_15  [key=2, style=dotted];
m14_408 -> m14_410  [color=darkseagreen4, key=1, label=arrayJsonText, style=dashed];
m14_410 -> m14_403  [key=0, style=solid];
m14_410 -> m14_122  [key=2, style=dotted];
m14_410 -> m14_411  [key=0, style=solid];
m14_409 -> m14_428  [key=0, style=solid];
m14_409 -> m14_410  [key=0, style=solid];
m14_412 -> m14_413  [key=0, style=solid];
m14_412 -> m14_130  [key=2, style=dotted];
m14_412 -> m14_414  [color=darkseagreen4, key=1, label=arrayDoc, style=dashed];
m14_412 -> m14_132  [key=2, style=dotted];
m14_413 -> m14_414  [key=0, style=solid];
m14_413 -> m14_133  [key=2, style=dotted];
m14_414 -> m14_428  [key=0, style=solid];
m14_414 -> m14_15  [key=2, style=dotted];
m14_414 -> m14_415  [key=0, style=solid];
m14_414 -> m14_416  [color=darkseagreen4, key=1, label=arrayJsonText, style=dashed];
m14_416 -> m14_417  [key=0, style=solid];
m14_416 -> m14_186  [key=2, style=dotted];
m14_416 -> m14_122  [key=2, style=dotted];
m14_417 -> m14_428  [key=0, style=solid];
m14_417 -> m14_418  [key=0, style=solid];
m14_417 -> m14_419  [color=darkseagreen4, key=1, label=arrayXml, style=dashed];
m14_419 -> m14_403  [key=0, style=solid];
m14_419 -> m14_292  [key=2, style=dotted];
m14_419 -> m14_420  [key=0, style=solid];
m14_419 -> m14_133  [key=2, style=dotted];
m14_421 -> m14_403  [key=0, style=solid];
m14_421 -> m14_293  [key=2, style=dotted];
m14_421 -> m14_422  [key=0, style=solid];
m14_423 -> m14_424  [key=0, style=solid];
m14_423 -> m14_398  [color=blue, key=0, style=bold];
m14_424 -> m14_403  [key=0, style=solid];
m14_424 -> m14_425  [key=0, style=solid];
m14_426 -> m14_403  [key=0, style=solid];
m14_426 -> m14_142  [key=2, style=dotted];
m14_426 -> m14_427  [key=0, style=solid];
m14_426 -> m14_428  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_427 -> m14_428  [key=0, style=solid];
m14_427 -> m14_429  [key=2, style=dotted];
m14_427 -> m14_424  [color=blue, key=0, style=bold];
m14_428 -> m14_183  [color=blue, key=0, style=bold];
m14_428 -> m14_429  [key=0, style=solid];
m14_466 -> m14_467  [key=0, style=solid];
m14_466 -> m14_474  [key=0, style=solid];
m14_468 -> m14_221  [key=2, style=dotted];
m14_468 -> m14_469  [key=0, style=solid];
m14_468 -> m14_470  [key=0, style=solid];
m14_468 -> m14_452  [key=2, style=dotted];
m14_467 -> m14_468  [key=0, style=solid];
m14_467 -> m14_467  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_467 -> m14_470  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m14_467 -> m14_473  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m14_469 -> m14_23  [key=2, style=dotted];
m14_469 -> m14_470  [key=0, style=solid];
m14_469 -> m14_459  [key=0, style=solid];
m14_471 -> m14_23  [key=2, style=dotted];
m14_471 -> m14_51  [key=2, style=dotted];
m14_471 -> m14_472  [key=0, style=solid];
m14_471 -> m14_294  [key=2, style=dotted];
m14_470 -> m14_75  [key=2, style=dotted];
m14_470 -> m14_471  [key=0, style=solid];
m14_470 -> m14_473  [key=0, style=solid];
m14_470 -> m14_402  [key=2, style=dotted];
m14_472 -> m14_466  [color=blue, key=0, style=bold];
m14_472 -> m14_474  [key=0, style=solid];
m14_657 -> m14_669  [key=0, style=solid];
m14_657 -> m14_702  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m14_800 -> m14_801  [key=0, style=solid];
m14_800 -> m14_802  [key=0, style=solid];
m14_800 -> m14_627  [key=2, style=dotted];
m14_803 -> m14_23  [key=2, style=dotted];
m14_803 -> m14_804  [key=0, style=solid];
m14_803 -> m14_271  [key=2, style=dotted];
m14_803 -> m14_553  [color=blue, key=0, style=bold];
m14_802 -> m14_75  [key=2, style=dotted];
m14_802 -> m14_803  [key=0, style=solid];
m14_802 -> m14_804  [color=darkseagreen4, key=1, label=dxml, style=dashed];
m14_802 -> m14_188  [key=2, style=dotted];
m14_804 -> m14_271  [key=2, style=dotted];
m14_804 -> m14_805  [key=0, style=solid];
m14_804 -> m14_84  [key=2, style=dotted];
m14_804 -> m14_806  [key=0, style=solid];
m14_804 -> m14_627  [key=2, style=dotted];
m14_801 -> m14_802  [key=0, style=solid];
m14_801 -> m14_801  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_801 -> m14_803  [key=0, style=solid];
m14_801 -> m14_454  [key=2, style=dotted];
m14_805 -> m14_800  [color=blue, key=0, style=bold];
m14_805 -> m14_807  [key=0, style=solid];
m14_805 -> m14_130  [key=2, style=dotted];
m14_151 -> m14_152  [key=0, style=solid];
m14_583 -> m14_584  [key=0, style=solid];
m14_380 -> m14_381  [color=green, key=0, style=solid];
m14_381 -> m14_382  [color=green, key=0, style=solid];
m14_381 -> m14_221  [color=green, key=2, style=dotted];
m14_381 -> m14_130  [key=2, style=dotted];
m14_382 -> m14_380  [color=blue, key=0, style=bold];
m14_382 -> m14_400  [key=0, style=solid];
m14_227 -> m14_221  [key=2, style=dotted];
m14_227 -> m14_228  [key=0, style=solid];
m14_227 -> m14_261  [key=0, style=solid];
m14_387 -> m14_221  [key=2, style=dotted];
m14_387 -> m14_388  [key=0, style=solid];
m14_429 -> m14_221  [key=2, style=dotted];
m14_429 -> m14_430  [key=0, style=solid];
m14_560 -> m14_221  [key=2, style=dotted];
m14_560 -> m14_561  [key=0, style=solid];
m14_560 -> m14_628  [key=0, style=solid];
m14_760 -> m14_221  [key=2, style=dotted];
m14_760 -> m14_761  [key=0, style=solid];
m14_760 -> m14_762  [key=0, style=solid];
m14_760 -> m14_104  [key=2, style=dotted];
m14_226 -> m14_227  [key=0, style=solid];
m14_226 -> m14_226  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m14_226 -> m14_232  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m14_386 -> m14_387  [key=0, style=solid];
m14_435 -> m14_436  [key=0, style=solid];
m14_435 -> m14_49  [key=2, style=dotted];
m14_759 -> m14_760  [key=0, style=solid];
m14_759 -> m14_763  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_759 -> m14_764  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_759 -> m14_767  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_228 -> m14_226  [color=blue, key=0, style=bold];
m14_228 -> m14_229  [key=0, style=solid];
m14_388 -> m14_386  [color=blue, key=0, style=bold];
m14_388 -> m14_389  [key=0, style=solid];
m14_388 -> m14_401  [key=2, style=dotted];
m14_430 -> m14_428  [color=blue, key=0, style=bold];
m14_430 -> m14_431  [key=0, style=solid];
m14_430 -> m14_432  [color=darkseagreen4, key=1, label=firstChar, style=dashed];
m14_430 -> m14_434  [color=darkseagreen4, key=1, label=firstChar, style=dashed];
m14_430 -> m14_437  [color=darkseagreen4, key=1, label=firstChar, style=dashed];
m14_561 -> m14_559  [color=blue, key=0, style=bold];
m14_561 -> m14_808  [key=0, style=solid];
m14_761 -> m14_759  [color=blue, key=0, style=bold];
m14_761 -> m14_769  [key=0, style=solid];
m14_584 -> m14_24  [key=2, style=dotted];
m14_584 -> m14_585  [key=0, style=solid];
m14_584 -> m14_573  [key=0, style=solid];
m14_584 -> m14_293  [key=2, style=dotted];
m14_436 -> m14_75  [key=2, style=dotted];
m14_436 -> m14_437  [key=0, style=solid];
m14_436 -> m14_442  [key=0, style=solid];
m14_436 -> m14_50  [key=2, style=dotted];
m14_437 -> m14_435  [color=blue, key=0, style=bold];
m14_437 -> m14_438  [key=0, style=solid];
m14_437 -> m14_441  [key=0, style=solid];
m14_437 -> m14_452  [key=2, style=dotted];
m14_585 -> m14_583  [color=blue, key=0, style=bold];
m14_585 -> m14_586  [key=0, style=solid];
m14_585 -> m14_588  [key=0, style=solid];
m14_585 -> m14_402  [key=2, style=dotted];
m14_570 -> m14_571  [key=0, style=solid];
m14_570 -> m14_292  [color=blue, key=0, style=bold];
m14_572 -> m14_221  [key=2, style=dotted];
m14_572 -> m14_573  [key=0, style=solid];
m14_572 -> m14_575  [color=darkseagreen4, key=1, label=node, style=dashed];
m14_572 -> m14_589  [color=darkseagreen4, key=1, label=ateWhitespace, style=dashed];
m14_575 -> m14_15  [key=2, style=dotted];
m14_575 -> m14_576  [key=0, style=solid];
m14_575 -> m14_581  [color=red, key=0, style=solid];
m14_575 -> m14_583  [key=0, style=solid];
m14_575 -> m14_585  [key=0, style=solid];
m14_571 -> m14_572  [key=0, style=solid];
m14_571 -> m14_571  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_571 -> m14_576  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_571 -> m14_573  [color=darkseagreen4, key=1, label=finished, style=dashed];
m14_573 -> m14_345  [key=2, style=dotted];
m14_573 -> m14_574  [key=0, style=solid];
m14_573 -> m14_589  [key=0, style=solid];
m14_576 -> m14_122  [key=2, style=dotted];
m14_576 -> m14_577  [key=0, style=solid];
m14_574 -> m14_122  [key=2, style=dotted];
m14_574 -> m14_575  [key=0, style=solid];
m14_574 -> m14_585  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m14_577 -> m14_570  [color=blue, key=0, style=bold];
m14_577 -> m14_578  [key=0, style=solid];
m14_577 -> m14_580  [key=0, style=solid];
m14_701 -> m14_702  [key=0, style=solid];
m14_701 -> m14_356  [key=2, style=dotted];
m14_703 -> m14_221  [key=2, style=dotted];
m14_703 -> m14_704  [key=0, style=solid];
m14_703 -> m14_560  [color=blue, key=0, style=bold];
m14_702 -> m14_703  [key=0, style=solid];
m14_702 -> m14_702  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_702 -> m14_53  [key=2, style=dotted];
m14_704 -> m14_23  [key=2, style=dotted];
m14_704 -> m14_705  [key=0, style=solid];
m14_321 -> m14_322  [key=0, style=solid];
m14_296 -> m14_301  [color=darkseagreen4, key=1, label=expected, style=dashed];
m14_296 -> m14_306  [color=darkseagreen4, key=1, label=expected, style=dashed];
m14_296 -> m14_296  [color=darkorchid, key=3, label="Local variable string expected", style=bold];
m14_296 -> m14_297  [key=0, style=solid];
m14_842 -> m14_23  [key=2, style=dotted];
m14_842 -> m14_51  [key=2, style=dotted];
m14_842 -> m14_843  [key=0, style=solid];
m14_62 -> m14_63  [key=0, style=solid];
m14_62 -> m14_70  [key=0, style=solid];
m14_455 -> m14_456  [key=0, style=solid];
m14_455 -> m14_457  [key=2, style=dotted];
m14_813 -> m14_815  [key=0, style=solid];
m14_813 -> m14_454  [key=2, style=dotted];
m14_501 -> m14_502  [key=0, style=solid];
m14_501 -> m14_552  [key=0, style=solid];
m14_501 -> m14_188  [key=2, style=dotted];
m14_503 -> m14_24  [key=2, style=dotted];
m14_503 -> m14_504  [key=0, style=solid];
m14_502 -> m14_503  [key=0, style=solid];
m14_502 -> m14_502  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_502 -> m14_552  [key=0, style=solid];
m14_504 -> m14_23  [key=2, style=dotted];
m14_504 -> m14_505  [key=0, style=solid];
m14_504 -> m14_557  [key=2, style=dotted];
m14_505 -> m14_501  [color=blue, key=0, style=bold];
m14_505 -> m14_552  [key=0, style=solid];
m14_54 -> m14_62  [key=2, style=dotted];
m14_54 -> m14_55  [key=0, style=solid];
m14_54 -> m14_59  [color=darkseagreen4, key=1, label=sw, style=dashed];
m14_53 -> m14_46  [key=2, style=dotted];
m14_53 -> m14_61  [key=2, style=dotted];
m14_53 -> m14_54  [key=0, style=solid];
m14_53 -> m14_56  [color=darkseagreen4, key=1, label=reader, style=dashed];
m14_53 -> m14_57  [color=darkseagreen4, key=1, label=reader, style=dashed];
m14_55 -> m14_63  [key=2, style=dotted];
m14_55 -> m14_61  [key=2, style=dotted];
m14_55 -> m14_56  [key=0, style=solid];
m14_55 -> m14_57  [color=darkseagreen4, key=1, label=writer, style=dashed];
m14_55 -> m14_58  [color=darkseagreen4, key=1, label=writer, style=dashed];
m14_59 -> m14_67  [key=2, style=dotted];
m14_59 -> m14_60  [key=0, style=solid];
m14_59 -> m14_56  [color=blue, key=0, style=bold];
m14_58 -> m14_66  [key=2, style=dotted];
m14_58 -> m14_59  [key=0, style=solid];
m14_58 -> m14_60  [key=2, style=dotted];
m14_56 -> m14_58  [key=0, style=solid];
m14_56 -> m14_57  [key=0, style=solid];
m14_56 -> m14_64  [key=2, style=dotted];
m14_57 -> m14_56  [key=0, style=solid];
m14_57 -> m14_65  [key=2, style=dotted];
m14_57 -> m14_58  [key=0, style=solid];
m14_635 -> m14_636  [key=0, style=solid];
m14_641 -> m14_23  [key=2, style=dotted];
m14_641 -> m14_642  [key=0, style=solid];
m14_641 -> m14_647  [key=0, style=solid];
m14_638 -> m14_97  [key=2, style=dotted];
m14_638 -> m14_639  [key=0, style=solid];
m14_638 -> m14_48  [key=2, style=dotted];
m14_638 -> m14_645  [key=2, style=dotted];
m14_638 -> m14_640  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_638 -> m14_655  [key=0, style=solid];
m14_640 -> m14_641  [key=0, style=solid];
m14_640 -> m14_647  [key=2, style=dotted];
m14_640 -> m14_654  [key=0, style=solid];
m14_640 -> m14_702  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m14_637 -> m14_638  [key=0, style=solid];
m14_637 -> m14_644  [key=2, style=dotted];
m14_637 -> m14_639  [color=darkseagreen4, key=1, label=obj, style=dashed];
m14_637 -> m14_641  [color=darkseagreen4, key=1, label=nonBase10, style=dashed];
m14_637 -> m14_658  [color=darkseagreen4, key=1, label=nonBase10, style=dashed];
m14_637 -> m14_673  [color=darkseagreen4, key=1, label=nonBase10, style=dashed];
m14_639 -> m14_640  [key=0, style=solid];
m14_639 -> m14_646  [key=2, style=dotted];
m14_639 -> m14_641  [key=0, style=solid];
m14_636 -> m14_637  [key=0, style=solid];
m14_636 -> m14_643  [key=2, style=dotted];
m14_636 -> m14_704  [key=2, style=dotted];
m14_636 -> m14_639  [color=darkseagreen4, key=1, label=singleDigit, style=dashed];
m14_636 -> m14_656  [color=darkseagreen4, key=1, label=singleDigit, style=dashed];
m14_636 -> m14_670  [color=darkseagreen4, key=1, label=singleDigit, style=dashed];
m14_642 -> m14_635  [color=blue, key=0, style=bold];
m14_642 -> m14_643  [key=0, style=solid];
m14_642 -> m14_54  [key=2, style=dotted];
m14_642 -> m14_646  [color=darkseagreen4, key=1, label=number, style=dashed];
m14_99 -> m14_100  [key=0, style=solid];
m14_762 -> m14_763  [key=0, style=solid];
m14_762 -> m14_764  [color=darkseagreen4, key=1, label=i, style=dashed];
m14_762 -> m14_766  [color=darkseagreen4, key=1, label=i, style=dashed];
m14_766 -> m14_15  [key=2, style=dotted];
m14_766 -> m14_767  [key=0, style=solid];
m14_766 -> m14_763  [key=0, style=solid];
m14_766 -> m14_766  [color=darkseagreen4, key=1, label=i, style=dashed];
m14_764 -> m14_766  [color=darkseagreen4, key=1, label=xml, style=dashed];
m14_764 -> m14_765  [key=0, style=solid];
m14_764 -> m14_132  [key=2, style=dotted];
m14_765 -> m14_766  [key=0, style=solid];
m14_765 -> m14_133  [key=2, style=dotted];
m14_765 -> m14_769  [key=0, style=solid];
m14_767 -> m14_23  [key=2, style=dotted];
m14_767 -> m14_768  [key=0, style=solid];
m14_763 -> m14_764  [key=0, style=solid];
m14_763 -> m14_765  [color=darkseagreen4, key=1, label=xmlString, style=dashed];
m14_763 -> m14_763  [color=darkorchid, key=3, label="Local variable string xmlString", style=bold];
m14_763 -> m14_767  [key=0, style=solid];
m14_768 -> m14_762  [color=blue, key=0, style=bold];
m14_768 -> m14_769  [key=0, style=solid];
m14_454 -> m14_445  [color=blue, key=0, style=bold];
m14_288 -> m14_302  [key=0, style=solid];
m14_288 -> m14_289  [key=0, style=solid];
m14_288 -> m14_288  [color=darkseagreen4, key=1, label=fragement, style=dashed];
m14_302 -> m14_303  [key=0, style=solid];
m14_302 -> m14_309  [color=darkseagreen4, key=1, label=writeChar, style=dashed];
m14_302 -> m14_221  [key=2, style=dotted];
m14_303 -> m14_304  [key=0, style=solid];
m14_303 -> m14_308  [key=0, style=solid];
m14_303 -> m14_104  [key=2, style=dotted];
m14_303 -> m14_122  [key=2, style=dotted];
m14_303 -> m14_310  [key=2, style=dotted];
m14_309 -> m14_310  [key=0, style=solid];
m14_309 -> m14_294  [color=blue, key=0, style=bold];
m14_304 -> m14_305  [key=0, style=solid];
m14_304 -> m14_311  [key=2, style=dotted];
m14_304 -> m14_713  [key=2, style=dotted];
m14_308 -> m14_310  [key=0, style=solid];
m14_308 -> m14_188  [key=2, style=dotted];
m14_308 -> m14_122  [key=2, style=dotted];
m14_308 -> m14_309  [key=0, style=solid];
m14_308 -> m14_311  [key=2, style=dotted];
m14_305 -> m14_306  [key=0, style=solid];
m14_305 -> m14_312  [key=2, style=dotted];
m14_305 -> m14_313  [key=2, style=dotted];
m14_305 -> m14_22  [key=2, style=dotted];
m14_305 -> m14_307  [color=darkseagreen4, key=1, label=json2, style=dashed];
m14_306 -> m14_307  [key=0, style=solid];
m14_306 -> m14_309  [color=darkseagreen4, key=1, label=writeChar, style=dashed];
m14_306 -> m14_122  [key=2, style=dotted];
m14_307 -> m14_309  [key=0, style=solid];
m14_307 -> m14_75  [key=2, style=dotted];
m14_307 -> m14_308  [key=0, style=solid];
m14_310 -> m14_288  [color=blue, key=0, style=bold];
m14_310 -> m14_302  [color=darkorchid, key=3, label="Parameter variable XmlDocument doc", style=bold];
m14_310 -> m14_625  [color=darkorchid, key=3, label="Parameter variable XmlDocument doc", style=bold];
m14_310 -> m14_322  [key=0, style=solid];
m14_310 -> m14_323  [color=darkseagreen4, key=1, label=bool, style=dashed];
m14_310 -> m14_324  [color=darkseagreen4, key=1, label=XmlDocument, style=dashed];
m14_310 -> m14_626  [color=darkorchid, key=3, label="Parameter variable bool indent", style=bold];
m14_724 -> m14_725  [key=0, style=solid];
m14_285 -> m14_286  [key=0, style=solid];
m14_289 -> m14_15  [key=2, style=dotted];
m14_289 -> m14_290  [key=0, style=solid];
m14_289 -> m14_291  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m14_290 -> m14_290  [color=darkorchid, key=3, label="Local variable string expected", style=bold];
m14_290 -> m14_291  [key=0, style=solid];
m14_291 -> m14_23  [key=2, style=dotted];
m14_291 -> m14_292  [key=0, style=solid];
m14_291 -> m14_297  [key=0, style=solid];
m14_291 -> m14_298  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.StringBuffer", style=dashed];
m14_291 -> m14_299  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.StringBuffer", style=dashed];
m14_287 -> m14_288  [key=0, style=solid];
m14_287 -> m14_293  [key=2, style=dotted];
m14_287 -> m14_50  [color=blue, key=0, style=bold];
m14_286 -> m14_132  [key=2, style=dotted];
m14_286 -> m14_287  [key=0, style=solid];
m14_292 -> m14_285  [color=blue, key=0, style=bold];
m14_292 -> m14_566  [key=0, style=solid];
m14_292 -> m14_567  [color=darkseagreen4, key=1, label=bool, style=dashed];
m14_163 -> m14_181  [key=0, style=solid];
m14_163 -> m14_182  [key=2, style=dotted];
m14_530 -> m14_531  [key=0, style=solid];
m14_530 -> m14_130  [key=2, style=dotted];
m14_532 -> m14_221  [key=2, style=dotted];
m14_532 -> m14_533  [key=0, style=solid];
m14_532 -> m14_535  [color=darkseagreen4, key=1, label=node, style=dashed];
m14_535 -> m14_15  [key=2, style=dotted];
m14_535 -> m14_536  [key=0, style=solid];
m14_531 -> m14_532  [key=0, style=solid];
m14_531 -> m14_536  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_531 -> m14_553  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_531 -> m14_552  [key=0, style=solid];
m14_533 -> m14_345  [key=2, style=dotted];
m14_533 -> m14_534  [key=0, style=solid];
m14_533 -> m14_130  [key=2, style=dotted];
m14_536 -> m14_122  [key=2, style=dotted];
m14_536 -> m14_537  [key=0, style=solid];
m14_534 -> m14_122  [key=2, style=dotted];
m14_534 -> m14_535  [key=0, style=solid];
m14_534 -> m14_552  [key=0, style=solid];
m14_537 -> m14_530  [color=blue, key=0, style=bold];
m14_537 -> m14_538  [key=0, style=solid];
m14_537 -> m14_130  [key=2, style=dotted];
m14_685 -> m14_686  [key=0, style=solid];
m14_685 -> m14_54  [key=2, style=dotted];
m14_685 -> m14_688  [color=red, key=1, label=number, style=dashed];
m14_692 -> m14_221  [key=2, style=dotted];
m14_692 -> m14_693  [key=0, style=solid];
m14_692 -> m14_695  [color=darkseagreen4, key=1, label=node, style=dashed];
m14_689 -> m14_15  [key=2, style=dotted];
m14_689 -> m14_692  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_689 -> m14_690  [key=0, style=solid];
m14_689 -> m14_691  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_689 -> m14_701  [key=0, style=solid];
m14_689 -> m14_702  [color=darkseagreen4, key=1, label=numberType, style=dashed];
m14_691 -> m14_692  [key=0, style=solid];
m14_691 -> m14_122  [key=2, style=dotted];
m14_691 -> m14_696  [key=0, style=solid];
m14_693 -> m14_694  [key=0, style=solid];
m14_693 -> m14_62  [key=2, style=dotted];
m14_693 -> m14_697  [color=darkseagreen4, key=1, label=sw, style=dashed];
m14_693 -> m14_695  [key=0, style=solid];
m14_693 -> m14_711  [key=2, style=dotted];
m14_695 -> m14_696  [key=0, style=solid];
m14_695 -> m14_353  [key=2, style=dotted];
m14_695 -> m14_703  [key=0, style=solid];
m14_695 -> m14_187  [key=2, style=dotted];
m14_695 -> m14_188  [key=2, style=dotted];
m14_699 -> m14_122  [key=2, style=dotted];
m14_699 -> m14_700  [key=0, style=solid];
m14_699 -> m14_703  [key=0, style=solid];
m14_699 -> m14_187  [key=2, style=dotted];
m14_699 -> m14_188  [key=2, style=dotted];
m14_687 -> m14_689  [color=darkseagreen4, key=1, label=document, style=dashed];
m14_687 -> m14_688  [key=0, style=solid];
m14_687 -> m14_132  [key=2, style=dotted];
m14_687 -> m14_703  [key=0, style=solid];
m14_687 -> m14_54  [key=2, style=dotted];
m14_687 -> m14_187  [key=2, style=dotted];
m14_687 -> m14_188  [key=2, style=dotted];
m14_688 -> m14_689  [color=red, key=0, style=solid];
m14_688 -> m14_133  [key=2, style=dotted];
m14_688 -> m14_713  [color=red, key=2, style=dotted];
m14_688 -> m14_702  [color=red, key=1, label=numberValue, style=dashed];
m14_690 -> m14_691  [key=0, style=solid];
m14_690 -> m14_678  [color=darkorchid, key=3, label="Local variable string expectedJson", style=bold];
m14_690 -> m14_54  [key=2, style=dotted];
m14_690 -> m14_693  [color=darkseagreen4, key=1, label=number, style=dashed];
m14_690 -> m14_695  [color=darkseagreen4, key=1, label=number, style=dashed];
m14_690 -> m14_697  [color=darkseagreen4, key=1, label=number, style=dashed];
m14_690 -> m14_699  [color=darkseagreen4, key=1, label=number, style=dashed];
m14_694 -> m14_695  [key=0, style=solid];
m14_694 -> m14_63  [key=2, style=dotted];
m14_694 -> m14_61  [key=2, style=dotted];
m14_694 -> m14_696  [color=darkseagreen4, key=1, label=writer, style=dashed];
m14_694 -> m14_700  [key=0, style=solid];
m14_694 -> m14_702  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m14_697 -> m14_699  [color=darkseagreen4, key=1, label=xaml2, style=dashed];
m14_697 -> m14_698  [key=0, style=solid];
m14_697 -> m14_67  [key=2, style=dotted];
m14_697 -> m14_714  [key=2, style=dotted];
m14_696 -> m14_697  [key=0, style=solid];
m14_696 -> m14_66  [key=2, style=dotted];
m14_698 -> m14_699  [key=0, style=solid];
m14_698 -> m14_682  [color=darkorchid, key=3, label="Local variable string expectedXaml", style=bold];
m14_698 -> m14_700  [key=0, style=solid];
m14_698 -> m14_702  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m14_686 -> m14_687  [key=0, style=solid];
m14_686 -> m14_688  [color=darkseagreen4, key=1, label=xaml, style=dashed];
m14_686 -> m14_676  [color=darkorchid, key=3, label="Local variable string xaml", style=bold];
m14_700 -> m14_685  [color=blue, key=0, style=bold];
m14_700 -> m14_701  [key=0, style=solid];
m14_700 -> m14_702  [color=darkseagreen4, key=1, label=numberType, style=dashed];
m14_353 -> m14_354  [key=0, style=solid];
m14_186 -> m14_715  [key=0, style=solid];
m14_186 -> m14_75  [key=2, style=dotted];
m14_186 -> m14_187  [key=0, style=solid];
m14_716 -> m14_717  [key=0, style=solid];
m14_716 -> m14_718  [key=0, style=solid];
m14_716 -> m14_104  [key=2, style=dotted];
m14_717 -> m14_758  [key=0, style=solid];
m14_717 -> m14_188  [key=2, style=dotted];
m14_717 -> m14_720  [color=darkseagreen4, key=1, label=xml, style=dashed];
m14_717 -> m14_721  [color=darkseagreen4, key=1, label=xml, style=dashed];
m14_717 -> m14_722  [color=darkseagreen4, key=1, label=xml, style=dashed];
m14_717 -> m14_718  [key=0, style=solid];
m14_717 -> m14_724  [key=2, style=dotted];
m14_717 -> m14_713  [key=2, style=dotted];
m14_718 -> m14_719  [key=0, style=solid];
m14_718 -> m14_732  [color=darkseagreen4, key=1, label=singlelineComment, style=dashed];
m14_718 -> m14_739  [color=darkseagreen4, key=1, label=singlelineComment, style=dashed];
m14_718 -> m14_746  [color=red, key=1, label=singlelineComment, style=dashed];
m14_718 -> m14_751  [color=darkseagreen4, key=1, label=singlelineComment, style=dashed];
m14_718 -> m14_109  [key=2, style=dotted];
m14_719 -> m14_720  [key=0, style=solid];
m14_719 -> m14_721  [key=0, style=solid];
m14_719 -> m14_722  [color=darkseagreen4, key=1, label=w2, style=dashed];
m14_719 -> m14_110  [key=2, style=dotted];
m14_732 -> m14_733  [key=0, style=solid];
m14_732 -> m14_734  [key=0, style=solid];
m14_732 -> m14_725  [color=blue, key=0, style=bold];
m14_739 -> m14_740  [color=red, key=0, style=solid];
m14_739 -> m14_727  [color=red, key=0, style=solid];
m14_739 -> m14_23  [key=2, style=dotted];
m14_751 -> m14_752  [key=0, style=solid];
m14_751 -> m14_754  [key=0, style=solid];
m14_751 -> m14_23  [key=2, style=dotted];
m14_720 -> m14_724  [key=0, style=solid];
m14_720 -> m14_732  [color=darkseagreen4, key=1, label=singlelineComment, style=dashed];
m14_720 -> m14_739  [color=darkseagreen4, key=1, label=singlelineComment, style=dashed];
m14_720 -> m14_746  [color=red, key=1, label=singlelineComment, style=dashed];
m14_720 -> m14_751  [color=darkseagreen4, key=1, label=singlelineComment, style=dashed];
m14_720 -> m14_23  [key=2, style=dotted];
m14_720 -> m14_721  [key=0, style=solid];
m14_721 -> m14_722  [key=0, style=solid];
m14_721 -> m14_723  [key=0, style=solid];
m14_721 -> m14_23  [key=2, style=dotted];
m14_722 -> m14_724  [key=0, style=solid];
m14_722 -> m14_732  [color=darkseagreen4, key=1, label=singlelineComment, style=dashed];
m14_722 -> m14_739  [color=darkseagreen4, key=1, label=singlelineComment, style=dashed];
m14_722 -> m14_746  [color=red, key=1, label=singlelineComment, style=dashed];
m14_722 -> m14_751  [color=darkseagreen4, key=1, label=singlelineComment, style=dashed];
m14_722 -> m14_23  [key=2, style=dotted];
m14_722 -> m14_51  [key=2, style=dotted];
m14_722 -> m14_723  [key=0, style=solid];
m14_723 -> m14_758  [key=0, style=solid];
m14_723 -> m14_187  [key=2, style=dotted];
m14_723 -> m14_188  [key=2, style=dotted];
m14_723 -> m14_716  [color=blue, key=0, style=bold];
m14_725 -> m14_726  [key=0, style=solid];
m14_725 -> m14_734  [color=darkseagreen4, key=1, label=initialPosition, style=dashed];
m14_725 -> m14_742  [color=darkseagreen4, key=1, label=initialPosition, style=dashed];
m14_725 -> m14_747  [color=darkseagreen4, key=1, label=initialPosition, style=dashed];
m14_725 -> m14_752  [color=darkseagreen4, key=1, label=initialPosition, style=dashed];
m14_726 -> m14_727  [color=red, key=0, style=solid];
m14_726 -> m14_726  [color=darkorchid, key=3, label="Local variable string xmlString", style=bold];
m14_734 -> m14_735  [key=0, style=solid];
m14_734 -> m14_294  [key=2, style=dotted];
m14_734 -> m14_736  [color=darkseagreen4, key=1, label=xmlString, style=dashed];
m14_734 -> m14_726  [color=darkorchid, key=3, label="Local variable string xmlString", style=bold];
m14_752 -> m14_753  [key=0, style=solid];
m14_752 -> m14_294  [key=2, style=dotted];
m14_752 -> m14_15  [key=2, style=dotted];
m14_727 -> m14_728  [color=red, key=0, style=solid];
m14_727 -> m14_756  [color=red, key=0, style=solid];
m14_727 -> m14_730  [color=darkseagreen4, key=1, label=xml, style=dashed];
m14_727 -> m14_713  [key=2, style=dotted];
m14_728 -> m14_729  [key=0, style=solid];
m14_728 -> m14_737  [key=0, style=solid];
m14_728 -> m14_745  [key=0, style=solid];
m14_728 -> m14_750  [key=0, style=solid];
m14_728 -> m14_755  [key=0, style=solid];
m14_728 -> m14_22  [key=2, style=dotted];
m14_756 -> m14_757  [key=0, style=solid];
m14_756 -> m14_54  [key=2, style=dotted];
m14_756 -> m14_454  [key=2, style=dotted];
m14_756 -> m14_760  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_756 -> m14_756  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_729 -> m14_730  [key=0, style=solid];
m14_729 -> m14_142  [key=2, style=dotted];
m14_737 -> m14_738  [key=0, style=solid];
m14_737 -> m14_15  [key=2, style=dotted];
m14_750 -> m14_751  [key=0, style=solid];
m14_750 -> m14_221  [key=2, style=dotted];
m14_750 -> m14_752  [color=darkseagreen4, key=1, label=node, style=dashed];
m14_755 -> m14_727  [color=red, key=0, style=solid];
m14_755 -> m14_756  [key=0, style=solid];
m14_730 -> m14_731  [key=0, style=solid];
m14_730 -> m14_736  [key=0, style=solid];
m14_730 -> m14_213  [key=2, style=dotted];
m14_731 -> m14_732  [key=0, style=solid];
m14_731 -> m14_727  [color=red, key=0, style=solid];
m14_731 -> m14_71  [key=2, style=dotted];
m14_731 -> m14_214  [key=2, style=dotted];
m14_736 -> m14_727  [color=red, key=0, style=solid];
m14_736 -> m14_737  [key=0, style=solid];
m14_736 -> m14_133  [key=2, style=dotted];
m14_733 -> m14_758  [key=0, style=solid];
m14_733 -> m14_188  [key=2, style=dotted];
m14_733 -> m14_734  [key=0, style=solid];
m14_735 -> m14_727  [color=red, key=0, style=solid];
m14_735 -> m14_737  [color=darkseagreen4, key=1, label=xml, style=dashed];
m14_735 -> m14_736  [key=0, style=solid];
m14_735 -> m14_132  [key=2, style=dotted];
m14_738 -> m14_739  [key=0, style=solid];
m14_738 -> m14_142  [key=2, style=dotted];
m14_740 -> m14_741  [color=red, key=0, style=solid];
m14_740 -> m14_727  [color=red, key=0, style=solid];
m14_740 -> m14_104  [color=red, key=2, style=dotted];
m14_740 -> m14_733  [color=blue, key=0, style=bold];
m14_749 -> m14_727  [color=red, key=0, style=solid];
m14_749 -> m14_292  [key=2, style=dotted];
m14_749 -> m14_750  [key=0, style=solid];
m14_749 -> m14_749  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_749 -> m14_753  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_748 -> m14_749  [key=0, style=solid];
m14_754 -> m14_727  [color=red, key=0, style=solid];
m14_754 -> m14_293  [key=2, style=dotted];
m14_754 -> m14_748  [color=blue, key=0, style=bold];
m14_753 -> m14_754  [key=0, style=solid];
m14_753 -> m14_23  [key=2, style=dotted];
m14_757 -> m14_758  [key=0, style=solid];
m14_757 -> m14_356  [key=2, style=dotted];
m14_757 -> m14_142  [key=2, style=dotted];
m14_757 -> m14_759  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_758 -> m14_186  [color=blue, key=0, style=bold];
m14_758 -> m14_755  [color=blue, key=0, style=bold];
m14_294 -> m14_295  [key=0, style=solid];
m14_300 -> m14_15  [key=2, style=dotted];
m14_300 -> m14_302  [color=darkseagreen4, key=1, label=json1, style=dashed];
m14_300 -> m14_301  [key=0, style=solid];
m14_300 -> m14_291  [color=blue, key=0, style=bold];
m14_301 -> m14_302  [key=0, style=solid];
m14_301 -> m14_122  [key=2, style=dotted];
m14_299 -> m14_300  [key=0, style=solid];
m14_299 -> m14_133  [key=2, style=dotted];
m14_299 -> m14_301  [key=2, style=dotted];
m14_298 -> m14_300  [color=darkseagreen4, key=1, label=doc1, style=dashed];
m14_298 -> m14_299  [key=0, style=solid];
m14_298 -> m14_298  [color=darkseagreen4, key=1, label=doc1, style=dashed];
m14_298 -> m14_295  [key=2, style=dotted];
m14_295 -> m14_303  [color=darkseagreen4, key=1, label=xml, style=dashed];
m14_295 -> m14_308  [color=darkseagreen4, key=1, label=xml, style=dashed];
m14_295 -> m14_299  [color=darkseagreen4, key=1, label=xml, style=dashed];
m14_295 -> m14_296  [key=0, style=solid];
m14_295 -> m14_295  [color=darkorchid, key=3, label="Local variable string xml", style=bold];
m14_295 -> m14_304  [color=darkseagreen4, key=1, label=xml, style=dashed];
m14_297 -> m14_298  [key=0, style=solid];
m14_297 -> m14_132  [key=2, style=dotted];
m14_297 -> m14_299  [key=0, style=solid];
m14_527 -> m14_552  [key=0, style=solid];
m14_179 -> m14_181  [key=0, style=solid];
m14_808 -> m14_809  [key=0, style=solid];
m14_808 -> m14_810  [key=0, style=solid];
m14_808 -> m14_627  [key=2, style=dotted];
m14_808 -> m14_808  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_809 -> m14_811  [key=0, style=solid];
m14_809 -> m14_130  [key=2, style=dotted];
m14_809 -> m14_75  [key=2, style=dotted];
m14_809 -> m14_810  [key=0, style=solid];
m14_810 -> m14_811  [key=0, style=solid];
m14_810 -> m14_188  [key=2, style=dotted];
m14_810 -> m14_23  [key=2, style=dotted];
m14_810 -> m14_814  [key=2, style=dotted];
m14_810 -> m14_271  [key=2, style=dotted];
m14_811 -> m14_561  [color=blue, key=0, style=bold];
m14_811 -> m14_271  [key=2, style=dotted];
m14_811 -> m14_812  [key=0, style=solid];
m14_811 -> m14_84  [key=2, style=dotted];
m14_857 -> m14_858  [key=0, style=solid];
m14_859 -> m14_23  [key=2, style=dotted];
m14_859 -> m14_51  [key=2, style=dotted];
m14_859 -> m14_860  [key=0, style=solid];
m14_861 -> m14_23  [key=2, style=dotted];
m14_861 -> m14_862  [key=0, style=solid];
m14_863 -> m14_23  [key=2, style=dotted];
m14_863 -> m14_51  [key=2, style=dotted];
m14_863 -> m14_864  [key=0, style=solid];
m14_858 -> m14_859  [key=0, style=solid];
m14_858 -> m14_713  [key=2, style=dotted];
m14_858 -> m14_860  [color=darkseagreen4, key=1, label=original, style=dashed];
m14_860 -> m14_861  [key=0, style=solid];
m14_860 -> m14_121  [key=2, style=dotted];
m14_860 -> m14_862  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_862 -> m14_863  [key=0, style=solid];
m14_862 -> m14_110  [key=2, style=dotted];
m14_864 -> m14_857  [color=blue, key=0, style=bold];
m14_319 -> m14_320  [key=0, style=solid];
m14_319 -> m14_324  [key=0, style=solid];
m14_27 -> m14_519  [color=darkorchid, key=3, label="Parameter variable string deserializeRootElementName", style=bold];
m14_27 -> m14_24  [color=darkorchid, key=3, label="Parameter variable string json", style=bold];
m14_27 -> m14_28  [key=0, style=solid];
m14_27 -> m14_29  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_27 -> m14_32  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_27 -> m14_33  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_27 -> m14_36  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_27 -> m14_517  [color=darkorchid, key=3, label="Parameter variable string json", style=bold];
m14_27 -> m14_25  [color=darkorchid, key=3, label="Parameter variable string deserializeRootElementName", style=bold];
m14_27 -> m14_34  [color=darkorchid, key=3, label="method methodReturn XmlNode DeserializeXmlNode", style=bold];
m14_28 -> m14_29  [key=0, style=solid];
m14_28 -> m14_52  [key=2, style=dotted];
m14_29 -> m14_30  [key=0, style=solid];
m14_29 -> m14_45  [key=2, style=dotted];
m14_29 -> m14_46  [key=2, style=dotted];
m14_29 -> m14_34  [color=darkseagreen4, key=1, label=reader, style=dashed];
m14_29 -> m14_48  [key=0, style=solid];
m14_29 -> m14_53  [key=2, style=dotted];
m14_32 -> m14_33  [key=0, style=solid];
m14_32 -> m14_34  [key=0, style=solid];
m14_32 -> m14_53  [key=2, style=dotted];
m14_33 -> m14_33  [color=darkseagreen4, key=1, label=converter, style=dashed];
m14_33 -> m14_34  [key=0, style=solid];
m14_33 -> m14_38  [color=darkseagreen4, key=1, label=converter, style=dashed];
m14_33 -> m14_48  [key=0, style=solid];
m14_36 -> m14_37  [key=0, style=solid];
m14_36 -> m14_45  [key=2, style=dotted];
m14_36 -> m14_46  [key=2, style=dotted];
m14_36 -> m14_38  [color=darkseagreen4, key=1, label=reader, style=dashed];
m14_34 -> m14_35  [key=0, style=solid];
m14_34 -> m14_49  [key=2, style=dotted];
m14_34 -> m14_50  [key=2, style=dotted];
m14_34 -> m14_43  [color=darkseagreen4, key=1, label=text, style=dashed];
m14_34 -> m14_54  [key=2, style=dotted];
m14_34 -> m14_46  [color=darkseagreen4, key=1, label=text, style=dashed];
m14_42 -> m14_23  [key=2, style=dotted];
m14_42 -> m14_43  [key=0, style=solid];
m14_39 -> m14_51  [key=2, style=dotted];
m14_39 -> m14_42  [color=darkseagreen4, key=1, label=linqXmlText, style=dashed];
m14_39 -> m14_40  [key=0, style=solid];
m14_39 -> m14_41  [color=darkseagreen4, key=1, label=linqXmlText, style=dashed];
m14_43 -> m14_44  [key=0, style=solid];
m14_43 -> m14_46  [key=0, style=solid];
m14_43 -> m14_55  [key=2, style=dotted];
m14_30 -> m14_31  [key=0, style=solid];
m14_30 -> m14_47  [key=2, style=dotted];
m14_30 -> m14_34  [key=0, style=solid];
m14_31 -> m14_32  [key=0, style=solid];
m14_31 -> m14_33  [color=darkseagreen4, key=1, label=converter, style=dashed];
m14_31 -> m14_34  [color=darkseagreen4, key=1, label=converter, style=dashed];
m14_31 -> m14_48  [key=2, style=dotted];
m14_31 -> m14_38  [color=darkseagreen4, key=1, label=converter, style=dashed];
m14_31 -> m14_54  [key=2, style=dotted];
m14_38 -> m14_39  [key=0, style=solid];
m14_38 -> m14_49  [key=2, style=dotted];
m14_38 -> m14_50  [key=2, style=dotted];
m14_38 -> m14_40  [color=darkseagreen4, key=1, label=d, style=dashed];
m14_38 -> m14_41  [color=darkseagreen4, key=1, label=d, style=dashed];
m14_38 -> m14_42  [key=0, style=solid];
m14_38 -> m14_43  [color=darkseagreen4, key=1, label=dateParseHandling, style=dashed];
m14_35 -> m14_36  [key=0, style=solid];
m14_35 -> m14_42  [color=darkseagreen4, key=1, label=xmlText, style=dashed];
m14_35 -> m14_46  [key=0, style=solid];
m14_37 -> m14_38  [key=0, style=solid];
m14_37 -> m14_47  [key=2, style=dotted];
m14_37 -> m14_39  [key=0, style=solid];
m14_40 -> m14_42  [key=0, style=solid];
m14_40 -> m14_41  [key=0, style=solid];
m14_40 -> m14_43  [color=darkseagreen4, key=1, label=dateParseHandling, style=dashed];
m14_41 -> m14_42  [key=0, style=solid];
m14_41 -> m14_41  [color=darkseagreen4, key=1, label=linqXmlText, style=dashed];
m14_41 -> m14_43  [color=darkseagreen4, key=1, label=dateParseHandling, style=dashed];
m14_44 -> m14_27  [color=blue, key=0, style=bold];
m14_44 -> m14_45  [key=0, style=solid];
m14_44 -> m14_53  [key=2, style=dotted];
m14_19 -> m14_20  [key=0, style=solid];
m14_19 -> m14_22  [color=darkseagreen4, key=1, label=char, style=dashed];
m14_19 -> m14_33  [color=darkseagreen4, key=1, label=char, style=dashed];
m14_19 -> m14_47  [color=darkseagreen4, key=1, label=char, style=dashed];
m14_49 -> m14_61  [key=0, style=solid];
m14_65 -> m14_66  [key=0, style=solid];
m14_65 -> m14_56  [key=2, style=dotted];
m14_68 -> m14_69  [key=0, style=solid];
m14_66 -> m14_67  [key=0, style=solid];
m14_67 -> m14_68  [key=0, style=solid];
m14_69 -> m14_70  [key=0, style=solid];
m14_69 -> m14_73  [color=darkseagreen4, key=1, label=json1, style=dashed];
m14_69 -> m14_69  [color=darkorchid, key=3, label="Local variable string json1", style=bold];
m14_70 -> m14_49  [color=blue, key=0, style=bold];
m14_70 -> m14_75  [key=2, style=dotted];
m14_70 -> m14_71  [key=0, style=solid];
m14_70 -> m14_72  [color=darkseagreen4, key=1, label=doc, style=dashed];
m14_180 -> m14_181  [key=0, style=solid];
m14_180 -> m14_187  [key=2, style=dotted];
m14_180 -> m14_188  [key=2, style=dotted];
m14_18 -> m14_15  [color=blue, key=0, style=bold];
m14_337 -> m14_338  [key=0, style=solid];
m14_339 -> m14_24  [key=2, style=dotted];
m14_339 -> m14_340  [key=0, style=solid];
m14_339 -> m14_341  [color=darkseagreen4, key=1, label=doc, style=dashed];
m14_341 -> m14_342  [key=0, style=solid];
m14_341 -> m14_344  [key=2, style=dotted];
m14_342 -> m14_122  [key=2, style=dotted];
m14_342 -> m14_343  [key=0, style=solid];
m14_338 -> m14_339  [key=0, style=solid];
m14_338 -> m14_338  [color=darkorchid, key=3, label="Local variable string jsonText", style=bold];
m14_340 -> m14_341  [key=0, style=solid];
m14_340 -> m14_342  [color=darkseagreen4, key=1, label=expected, style=dashed];
m14_340 -> m14_340  [color=darkorchid, key=3, label="Local variable string expected", style=bold];
m14_343 -> m14_337  [color=blue, key=0, style=bold];
m14_343 -> m14_344  [key=0, style=solid];
m14_7 -> m14_8  [key=0, style=solid];
m14_780 -> m14_781  [key=0, style=solid];
m14_784 -> m14_23  [key=2, style=dotted];
m14_784 -> m14_785  [key=0, style=solid];
m14_784 -> m14_786  [key=0, style=solid];
m14_784 -> m14_104  [key=2, style=dotted];
m14_783 -> m14_22  [key=2, style=dotted];
m14_783 -> m14_784  [key=0, style=solid];
m14_782 -> m14_783  [key=0, style=solid];
m14_782 -> m14_782  [color=darkseagreen4, key=1, label=d, style=dashed];
m14_782 -> m14_786  [key=2, style=dotted];
m14_782 -> m14_799  [key=0, style=solid];
m14_781 -> m14_782  [key=0, style=solid];
m14_781 -> m14_774  [key=2, style=dotted];
m14_785 -> m14_780  [color=blue, key=0, style=bold];
m14_785 -> m14_799  [key=0, style=solid];
m14_215 -> m14_216  [key=0, style=solid];
m14_215 -> m14_261  [key=0, style=solid];
m14_216 -> m14_221  [key=2, style=dotted];
m14_216 -> m14_217  [key=0, style=solid];
m14_216 -> m14_219  [color=darkseagreen4, key=1, label=doc, style=dashed];
m14_217 -> m14_23  [key=2, style=dotted];
m14_217 -> m14_218  [key=0, style=solid];
m14_217 -> m14_217  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m14_217 -> m14_220  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m14_219 -> m14_23  [key=2, style=dotted];
m14_219 -> m14_220  [key=0, style=solid];
m14_219 -> m14_51  [key=2, style=dotted];
m14_218 -> m14_219  [key=0, style=solid];
m14_218 -> m14_75  [key=2, style=dotted];
m14_218 -> m14_261  [key=0, style=solid];
m14_220 -> m14_215  [color=blue, key=0, style=bold];
m14_220 -> m14_221  [key=0, style=solid];
m14_220 -> m14_220  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m14_220 -> m14_223  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m14_121 -> m14_109  [color=blue, key=0, style=bold];
m14_648 -> m14_649  [key=0, style=solid];
m14_648 -> m14_708  [key=2, style=dotted];
m14_648 -> m14_650  [color=darkseagreen4, key=1, label=value, style=dashed];
m14_648 -> m14_651  [color=darkseagreen4, key=1, label=parseResult, style=dashed];
m14_653 -> m14_23  [key=2, style=dotted];
m14_653 -> m14_654  [key=0, style=solid];
m14_653 -> m14_703  [key=0, style=solid];
m14_653 -> m14_54  [key=2, style=dotted];
m14_653 -> m14_187  [key=2, style=dotted];
m14_653 -> m14_188  [key=2, style=dotted];
m14_652 -> m14_653  [key=0, style=solid];
m14_652 -> m14_659  [key=2, style=dotted];
m14_652 -> m14_660  [key=2, style=dotted];
m14_652 -> m14_703  [key=0, style=solid];
m14_652 -> m14_54  [key=2, style=dotted];
m14_652 -> m14_187  [key=2, style=dotted];
m14_652 -> m14_188  [key=2, style=dotted];
m14_650 -> m14_652  [color=darkseagreen4, key=1, label=xml, style=dashed];
m14_650 -> m14_651  [key=0, style=solid];
m14_650 -> m14_657  [key=2, style=dotted];
m14_650 -> m14_654  [key=0, style=solid];
m14_650 -> m14_702  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m14_651 -> m14_652  [key=0, style=solid];
m14_651 -> m14_658  [key=2, style=dotted];
m14_651 -> m14_653  [key=0, style=solid];
m14_649 -> m14_650  [key=0, style=solid];
m14_649 -> m14_651  [color=darkseagreen4, key=1, label=ms, style=dashed];
m14_649 -> m14_655  [key=2, style=dotted];
m14_649 -> m14_656  [key=2, style=dotted];
m14_654 -> m14_648  [color=blue, key=0, style=bold];
m14_654 -> m14_701  [key=0, style=solid];
m14_654 -> m14_702  [color=darkseagreen4, key=1, label=numberType, style=dashed];
m14_555 -> m14_556  [key=0, style=solid];
m14_555 -> m14_804  [key=0, style=solid];
m14_556 -> m14_557  [key=0, style=solid];
m14_556 -> m14_560  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_556 -> m14_556  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_556 -> m14_591  [key=0, style=solid];
m14_558 -> m14_555  [color=blue, key=0, style=bold];
m14_558 -> m14_823  [key=0, style=solid];
m14_506 -> m14_507  [key=0, style=solid];
m14_510 -> m14_15  [key=2, style=dotted];
m14_510 -> m14_511  [key=0, style=solid];
m14_510 -> m14_512  [key=0, style=solid];
m14_510 -> m14_104  [key=2, style=dotted];
m14_508 -> m14_24  [key=2, style=dotted];
m14_508 -> m14_510  [color=darkseagreen4, key=1, label=doc, style=dashed];
m14_508 -> m14_509  [key=0, style=solid];
m14_508 -> m14_552  [key=0, style=solid];
m14_511 -> m14_122  [key=2, style=dotted];
m14_511 -> m14_512  [key=0, style=solid];
m14_511 -> m14_513  [key=0, style=solid];
m14_511 -> m14_559  [key=2, style=dotted];
m14_507 -> m14_508  [key=0, style=solid];
m14_507 -> m14_507  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_507 -> m14_558  [key=2, style=dotted];
m14_509 -> m14_510  [key=0, style=solid];
m14_509 -> m14_23  [key=2, style=dotted];
m14_512 -> m14_506  [color=blue, key=0, style=bold];
m14_512 -> m14_513  [key=0, style=solid];
m14_512 -> m14_560  [key=2, style=dotted];
m14_74 -> m14_75  [key=0, style=solid];
m14_74 -> m14_77  [color=darkseagreen4, key=1, label=int, style=dashed];
m14_74 -> m14_78  [color=darkseagreen4, key=1, label=bool, style=dashed];
m14_74 -> m14_79  [color=darkseagreen4, key=1, label=int, style=dashed];
m14_74 -> m14_84  [color=darkseagreen4, key=1, label=int, style=dashed];
m14_74 -> m14_85  [color=darkseagreen4, key=1, label=int, style=dashed];
m14_74 -> m14_68  [color=blue, key=0, style=bold];
m14_75 -> m14_76  [key=0, style=solid];
m14_75 -> m14_77  [key=0, style=solid];
m14_84 -> m14_85  [key=0, style=solid];
m14_84 -> m14_89  [key=0, style=solid];
m14_85 -> m14_86  [key=0, style=solid];
m14_85 -> m14_87  [color=darkseagreen4, key=1, label=dst, style=dashed];
m14_85 -> m14_88  [color=darkseagreen4, key=1, label=dst, style=dashed];
m14_94 -> m14_95  [color=red, key=0, style=solid];
m14_94 -> m14_85  [color=blue, key=0, style=bold];
m14_86 -> m14_87  [key=0, style=solid];
m14_86 -> m14_88  [key=0, style=solid];
m14_86 -> m14_92  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_86 -> m14_95  [key=2, style=dotted];
m14_87 -> m14_88  [key=0, style=solid];
m14_87 -> m14_56  [key=2, style=dotted];
m14_89 -> m14_90  [key=0, style=solid];
m14_89 -> m14_91  [key=0, style=solid];
m14_89 -> m14_48  [key=2, style=dotted];
m14_90 -> m14_91  [key=0, style=solid];
m14_90 -> m14_56  [key=2, style=dotted];
m14_90 -> m14_97  [key=2, style=dotted];
m14_93 -> m14_94  [color=red, key=0, style=solid];
m14_93 -> m14_51  [key=2, style=dotted];
m14_93 -> m14_100  [key=2, style=dotted];
m14_88 -> m14_91  [key=0, style=solid];
m14_88 -> m14_89  [key=0, style=solid];
m14_88 -> m14_96  [key=2, style=dotted];
m14_91 -> m14_92  [key=0, style=solid];
m14_91 -> m14_98  [key=2, style=dotted];
m14_92 -> m14_93  [key=0, style=solid];
m14_92 -> m14_99  [key=2, style=dotted];
m14_96 -> m14_97  [key=0, style=solid];
m14_97 -> m14_98  [key=0, style=solid];
m14_97 -> m14_99  [key=0, style=solid];
m14_100 -> m14_101  [key=0, style=solid];
m14_98 -> m14_99  [key=0, style=solid];
m14_101 -> m14_74  [color=blue, key=0, style=bold];
m14_101 -> m14_102  [key=0, style=solid];
m14_150 -> m14_144  [color=blue, key=0, style=bold];
m14_112 -> m14_113  [key=0, style=solid];
m14_112 -> m14_114  [color=darkseagreen4, key=1, label=charsRequired, style=dashed];
m14_112 -> m14_117  [color=darkseagreen4, key=1, label=charsRequired, style=dashed];
m14_112 -> m14_118  [color=darkseagreen4, key=1, label=charsRequired, style=dashed];
m14_116 -> m14_122  [key=2, style=dotted];
m14_116 -> m14_117  [key=0, style=solid];
m14_116 -> m14_116  [color=darkseagreen4, key=1, label=totalCharsRead, style=dashed];
m14_116 -> m14_118  [color=darkseagreen4, key=1, label=totalCharsRead, style=dashed];
m14_118 -> m14_23  [key=2, style=dotted];
m14_118 -> m14_51  [key=2, style=dotted];
m14_118 -> m14_119  [key=0, style=solid];
m14_118 -> m14_120  [key=0, style=solid];
m14_115 -> m14_116  [key=0, style=solid];
m14_115 -> m14_121  [key=2, style=dotted];
m14_115 -> m14_117  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_115 -> m14_118  [key=0, style=solid];
m14_117 -> m14_118  [key=0, style=solid];
m14_117 -> m14_110  [key=2, style=dotted];
m14_117 -> m14_113  [key=0, style=solid];
m14_113 -> m14_118  [color=darkseagreen4, key=1, label=xml, style=dashed];
m14_113 -> m14_113  [color=darkorchid, key=3, label="Local variable string xml", style=bold];
m14_113 -> m14_114  [key=0, style=solid];
m14_113 -> m14_116  [color=darkseagreen4, key=1, label=totalCharsRead, style=dashed];
m14_114 -> m14_115  [key=0, style=solid];
m14_114 -> m14_713  [key=2, style=dotted];
m14_114 -> m14_74  [key=2, style=dotted];
m14_114 -> m14_116  [color=darkseagreen4, key=1, label=charsRead, style=dashed];
m14_119 -> m14_112  [color=blue, key=0, style=bold];
m14_119 -> m14_121  [key=0, style=solid];
m14_499 -> m14_502  [key=0, style=solid];
m14_499 -> m14_556  [key=2, style=dotted];
m14_14 -> m14_0  [color=blue, key=0, style=bold];
m14_104 -> m14_105  [key=0, style=solid];
m14_104 -> m14_106  [color=darkseagreen4, key=1, label=int, style=dashed];
m14_104 -> m14_23  [key=2, style=dotted];
m14_105 -> m14_106  [key=0, style=solid];
m14_105 -> m14_107  [key=0, style=solid];
m14_105 -> m14_110  [key=2, style=dotted];
m14_106 -> m14_108  [key=0, style=solid];
m14_106 -> m14_109  [key=2, style=dotted];
m14_106 -> m14_107  [key=0, style=solid];
m14_106 -> m14_111  [key=2, style=dotted];
m14_107 -> m14_108  [key=0, style=solid];
m14_107 -> m14_101  [color=blue, key=0, style=bold];
m14_108 -> m14_104  [color=blue, key=0, style=bold];
m14_213 -> m14_214  [key=0, style=solid];
m14_658 -> m14_661  [key=0, style=solid];
m14_658 -> m14_664  [color=darkseagreen4, key=1, label="System.IO.Stream", style=dashed];
m14_658 -> m14_668  [color=darkseagreen4, key=1, label="System.IO.Stream", style=dashed];
m14_658 -> m14_649  [color=darkorchid, key=3, label="Parameter variable System.IO.Stream json", style=bold];
m14_658 -> m14_650  [color=darkorchid, key=3, label="Parameter variable System.IO.Stream xml", style=bold];
m14_658 -> m14_659  [key=0, style=solid];
m14_661 -> m14_97  [key=2, style=dotted];
m14_661 -> m14_662  [key=0, style=solid];
m14_661 -> m14_663  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_661 -> m14_669  [key=0, style=solid];
m14_661 -> m14_710  [key=2, style=dotted];
m14_661 -> m14_702  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m14_664 -> m14_45  [key=2, style=dotted];
m14_664 -> m14_665  [key=0, style=solid];
m14_664 -> m14_673  [key=2, style=dotted];
m14_664 -> m14_666  [color=darkseagreen4, key=1, label=number, style=dashed];
m14_664 -> m14_54  [key=2, style=dotted];
m14_662 -> m14_663  [key=0, style=solid];
m14_662 -> m14_671  [key=2, style=dotted];
m14_662 -> m14_672  [key=2, style=dotted];
m14_663 -> m14_664  [key=0, style=solid];
m14_663 -> m14_645  [key=2, style=dotted];
m14_663 -> m14_665  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_663 -> m14_703  [key=0, style=solid];
m14_663 -> m14_187  [key=2, style=dotted];
m14_663 -> m14_707  [key=2, style=dotted];
m14_668 -> m14_61  [key=2, style=dotted];
m14_668 -> m14_669  [key=0, style=solid];
m14_668 -> m14_703  [key=0, style=solid];
m14_668 -> m14_54  [key=2, style=dotted];
m14_668 -> m14_187  [key=2, style=dotted];
m14_668 -> m14_188  [key=2, style=dotted];
m14_669 -> m14_320  [key=2, style=dotted];
m14_669 -> m14_670  [key=0, style=solid];
m14_669 -> m14_701  [key=0, style=solid];
m14_669 -> m14_702  [color=darkseagreen4, key=1, label=numberType, style=dashed];
m14_666 -> m14_47  [key=2, style=dotted];
m14_666 -> m14_668  [key=0, style=solid];
m14_666 -> m14_667  [key=0, style=solid];
m14_666 -> m14_711  [key=2, style=dotted];
m14_665 -> m14_647  [key=2, style=dotted];
m14_665 -> m14_669  [color=darkseagreen4, key=1, label=doc, style=dashed];
m14_665 -> m14_666  [key=0, style=solid];
m14_667 -> m14_670  [key=0, style=solid];
m14_667 -> m14_674  [key=2, style=dotted];
m14_667 -> m14_669  [key=0, style=solid];
m14_667 -> m14_702  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m14_670 -> m14_658  [color=blue, key=0, style=bold];
m14_670 -> m14_671  [color=red, key=0, style=solid];
m14_670 -> m14_673  [key=0, style=solid];
m14_276 -> m14_277  [key=0, style=solid];
m14_276 -> m14_276  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m14_276 -> m14_278  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m14_276 -> m14_281  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m14_276 -> m14_282  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m14_276 -> m14_284  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m14_673 -> m14_674  [key=0, style=solid];
m14_673 -> m14_679  [key=0, style=solid];
m14_177 -> m14_181  [key=0, style=solid];
m14_840 -> m14_841  [key=0, style=solid];
m14_840 -> m14_844  [key=2, style=dotted];
m14_844 -> m14_23  [key=2, style=dotted];
m14_844 -> m14_845  [key=0, style=solid];
m14_846 -> m14_23  [key=2, style=dotted];
m14_846 -> m14_51  [key=2, style=dotted];
m14_846 -> m14_847  [key=0, style=solid];
m14_841 -> m14_842  [key=0, style=solid];
m14_841 -> m14_713  [key=2, style=dotted];
m14_841 -> m14_843  [color=darkseagreen4, key=1, label=original, style=dashed];
m14_841 -> m14_835  [color=blue, key=0, style=bold];
m14_843 -> m14_844  [key=0, style=solid];
m14_843 -> m14_121  [key=2, style=dotted];
m14_843 -> m14_845  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_845 -> m14_846  [key=0, style=solid];
m14_845 -> m14_110  [key=2, style=dotted];
m14_847 -> m14_840  [color=blue, key=0, style=bold];
m14_847 -> m14_845  [color=blue, key=0, style=bold];
m14_344 -> m14_345  [key=0, style=solid];
m14_538 -> m14_539  [key=0, style=solid];
m14_538 -> m14_552  [key=0, style=solid];
m14_540 -> m14_221  [key=2, style=dotted];
m14_540 -> m14_541  [key=0, style=solid];
m14_540 -> m14_543  [color=darkseagreen4, key=1, label=node, style=dashed];
m14_540 -> m14_475  [key=0, style=solid];
m14_540 -> m14_292  [key=2, style=dotted];
m14_543 -> m14_15  [key=2, style=dotted];
m14_543 -> m14_544  [key=0, style=solid];
m14_543 -> m14_545  [color=darkseagreen4, key=1, label=newJson, style=dashed];
m14_539 -> m14_540  [key=0, style=solid];
m14_539 -> m14_539  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_539 -> m14_545  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_541 -> m14_345  [key=2, style=dotted];
m14_541 -> m14_542  [key=0, style=solid];
m14_545 -> m14_122  [key=2, style=dotted];
m14_545 -> m14_546  [key=0, style=solid];
m14_545 -> m14_475  [key=0, style=solid];
m14_542 -> m14_122  [key=2, style=dotted];
m14_542 -> m14_543  [key=0, style=solid];
m14_542 -> m14_475  [key=0, style=solid];
m14_542 -> m14_293  [key=2, style=dotted];
m14_544 -> m14_545  [key=0, style=solid];
m14_544 -> m14_456  [key=2, style=dotted];
m14_546 -> m14_538  [color=blue, key=0, style=bold];
m14_546 -> m14_547  [key=0, style=solid];
m14_546 -> m14_548  [key=0, style=solid];
m14_546 -> m14_402  [key=2, style=dotted];
m14_143 -> m14_144  [key=0, style=solid];
m14_144 -> m14_145  [key=0, style=solid];
m14_144 -> m14_146  [key=2, style=dotted];
m14_145 -> m14_143  [color=blue, key=0, style=bold];
m14_145 -> m14_135  [color=darkorchid, key=3, label="Local variable string xml", style=bold];
m14_145 -> m14_146  [key=0, style=solid];
m14_873 -> m14_874  [key=0, style=solid];
m14_882 -> m14_23  [key=2, style=dotted];
m14_882 -> m14_883  [key=0, style=solid];
m14_882 -> m14_321  [key=2, style=dotted];
m14_886 -> m14_23  [key=2, style=dotted];
m14_886 -> m14_51  [key=2, style=dotted];
m14_886 -> m14_887  [key=0, style=solid];
m14_875 -> m14_18  [key=2, style=dotted];
m14_875 -> m14_876  [key=0, style=solid];
m14_875 -> m14_856  [key=2, style=dotted];
m14_876 -> m14_97  [key=2, style=dotted];
m14_876 -> m14_877  [key=0, style=solid];
m14_876 -> m14_889  [key=2, style=dotted];
m14_876 -> m14_48  [key=2, style=dotted];
m14_876 -> m14_645  [key=2, style=dotted];
m14_876 -> m14_881  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_876 -> m14_885  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_881 -> m14_882  [key=0, style=solid];
m14_881 -> m14_893  [key=2, style=dotted];
m14_877 -> m14_882  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_877 -> m14_878  [key=0, style=solid];
m14_877 -> m14_890  [key=2, style=dotted];
m14_877 -> m14_883  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_883 -> m14_46  [key=2, style=dotted];
m14_883 -> m14_884  [key=0, style=solid];
m14_883 -> m14_321  [key=2, style=dotted];
m14_885 -> m14_886  [key=0, style=solid];
m14_885 -> m14_647  [key=2, style=dotted];
m14_874 -> m14_875  [key=0, style=solid];
m14_874 -> m14_881  [color=darkseagreen4, key=1, label=model, style=dashed];
m14_874 -> m14_888  [key=2, style=dotted];
m14_884 -> m14_45  [key=2, style=dotted];
m14_884 -> m14_885  [key=0, style=solid];
m14_879 -> m14_881  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m14_879 -> m14_880  [key=0, style=solid];
m14_879 -> m14_892  [key=2, style=dotted];
m14_880 -> m14_881  [key=0, style=solid];
m14_878 -> m14_879  [key=0, style=solid];
m14_878 -> m14_891  [key=2, style=dotted];
m14_887 -> m14_873  [color=blue, key=0, style=bold];
m14_578 -> m14_579  [key=0, style=solid];
m14_578 -> m14_573  [key=0, style=solid];
m14_578 -> m14_71  [key=2, style=dotted];
m14_580 -> m14_581  [key=0, style=solid];
m14_580 -> m14_582  [key=2, style=dotted];
m14_580 -> m14_583  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_580 -> m14_573  [key=0, style=solid];
m14_579 -> m14_580  [key=0, style=solid];
m14_579 -> m14_584  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_579 -> m14_579  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_579 -> m14_573  [key=0, style=solid];
m14_581 -> m14_578  [color=blue, key=0, style=bold];
m14_581 -> m14_582  [color=red, key=0, style=solid];
m14_103 -> m14_104  [key=0, style=solid];
m14_103 -> m14_109  [key=2, style=dotted];
m14_103 -> m14_105  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_675 -> m14_676  [key=0, style=solid];
m14_675 -> m14_678  [key=0, style=solid];
m14_675 -> m14_705  [key=2, style=dotted];
m14_675 -> m14_709  [key=2, style=dotted];
m14_675 -> m14_702  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m14_679 -> m14_122  [key=2, style=dotted];
m14_679 -> m14_680  [key=0, style=solid];
m14_683 -> m14_122  [key=2, style=dotted];
m14_683 -> m14_684  [key=0, style=solid];
m14_683 -> m14_701  [key=0, style=solid];
m14_683 -> m14_702  [color=darkseagreen4, key=1, label=numberType, style=dashed];
m14_677 -> m14_22  [key=2, style=dotted];
m14_677 -> m14_679  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_677 -> m14_678  [key=0, style=solid];
m14_677 -> m14_713  [key=2, style=dotted];
m14_677 -> m14_680  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_677 -> m14_703  [key=0, style=solid];
m14_677 -> m14_187  [key=2, style=dotted];
m14_677 -> m14_707  [key=2, style=dotted];
m14_680 -> m14_75  [key=2, style=dotted];
m14_680 -> m14_681  [key=0, style=solid];
m14_680 -> m14_712  [key=2, style=dotted];
m14_680 -> m14_682  [color=darkseagreen4, key=1, label=value, style=dashed];
m14_680 -> m14_684  [color=darkseagreen4, key=1, label=parseResult, style=dashed];
m14_678 -> m14_679  [key=0, style=solid];
m14_678 -> m14_678  [color=darkorchid, key=3, label="Local variable string expectedJson", style=bold];
m14_678 -> m14_701  [key=0, style=solid];
m14_678 -> m14_702  [color=darkseagreen4, key=1, label=numberType, style=dashed];
m14_681 -> m14_683  [color=darkseagreen4, key=1, label=xaml2, style=dashed];
m14_681 -> m14_51  [key=2, style=dotted];
m14_681 -> m14_682  [key=0, style=solid];
m14_681 -> m14_684  [key=0, style=solid];
m14_682 -> m14_683  [key=0, style=solid];
m14_682 -> m14_682  [color=darkorchid, key=3, label="Local variable string expectedXaml", style=bold];
m14_682 -> m14_702  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m14_676 -> m14_677  [key=0, style=solid];
m14_676 -> m14_676  [color=darkorchid, key=3, label="Local variable string xaml", style=bold];
m14_684 -> m14_675  [color=blue, key=0, style=bold];
m14_684 -> m14_685  [key=0, style=solid];
m14_684 -> m14_690  [key=0, style=solid];
m14_362 -> m14_363  [key=0, style=solid];
m14_362 -> m14_400  [key=0, style=solid];
m14_366 -> m14_15  [key=2, style=dotted];
m14_366 -> m14_367  [key=0, style=solid];
m14_366 -> m14_368  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m14_366 -> m14_370  [key=0, style=solid];
m14_368 -> m14_24  [key=2, style=dotted];
m14_368 -> m14_369  [key=0, style=solid];
m14_367 -> m14_122  [key=2, style=dotted];
m14_367 -> m14_368  [key=0, style=solid];
m14_367 -> m14_362  [key=0, style=solid];
m14_367 -> m14_71  [key=2, style=dotted];
m14_364 -> m14_366  [color=darkseagreen4, key=1, label=doc, style=dashed];
m14_364 -> m14_365  [key=0, style=solid];
m14_364 -> m14_132  [key=2, style=dotted];
m14_364 -> m14_369  [color=darkseagreen4, key=1, label=doc, style=dashed];
m14_364 -> m14_371  [key=0, style=solid];
m14_364 -> m14_375  [key=0, style=solid];
m14_364 -> m14_379  [key=0, style=solid];
m14_364 -> m14_383  [key=0, style=solid];
m14_364 -> m14_386  [key=0, style=solid];
m14_364 -> m14_390  [key=0, style=solid];
m14_364 -> m14_393  [key=0, style=solid];
m14_364 -> m14_395  [key=0, style=solid];
m14_364 -> m14_397  [key=0, style=solid];
m14_365 -> m14_366  [key=0, style=solid];
m14_365 -> m14_133  [key=2, style=dotted];
m14_369 -> m14_23  [key=2, style=dotted];
m14_369 -> m14_370  [key=0, style=solid];
m14_369 -> m14_400  [key=0, style=solid];
m14_363 -> m14_364  [key=0, style=solid];
m14_363 -> m14_365  [color=darkseagreen4, key=1, label=xml, style=dashed];
m14_363 -> m14_363  [color=darkorchid, key=3, label="Local variable string xml", style=bold];
m14_363 -> m14_397  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m14_363 -> m14_399  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m14_370 -> m14_362  [color=blue, key=0, style=solid];
m14_45 -> m14_48  [key=0, style=solid];
m14_0 -> m14_1  [key=0, style=solid];
m14_0 -> m14_3  [color=darkseagreen4, key=1, label="System.IO.TextReader", style=dashed];
m14_0 -> m14_2  [color=green, key=1, label=XmlNode, style=dashed];
m14_0 -> m14_4  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m14_0 -> m14_6  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m14_0 -> m14_7  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m14_0 -> m14_280  [color=darkorchid, key=3, label="Parameter variable XmlNode node", style=bold];
m14_0 -> m14_519  [color=darkorchid, key=3, label="Parameter variable XmlNode node", style=bold];
m14_1 -> m14_2  [color=green, key=0, style=solid];
m14_1 -> m14_3  [key=0, style=solid];
m14_1 -> m14_15  [key=2, style=dotted];
m14_1 -> m14_12  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_1 -> m14_13  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_3 -> m14_4  [key=0, style=solid];
m14_2 -> m14_6  [key=0, style=solid];
m14_2 -> m14_7  [key=2, style=dotted];
m14_2 -> m14_3  [color=green, key=0, style=solid];
m14_2 -> m14_16  [color=green, key=2, style=dotted];
m14_2 -> m14_5  [color=green, key=1, label=reader, style=dashed];
m14_2 -> m14_9  [color=green, key=1, label=reader, style=dashed];
m14_2 -> m14_10  [color=green, key=1, label=reader, style=dashed];
m14_4 -> m14_5  [key=0, style=solid];
m14_4 -> m14_6  [key=0, style=solid];
m14_5 -> m14_6  [key=0, style=solid];
m14_5 -> m14_11  [key=0, style=solid];
m14_5 -> m14_17  [key=2, style=dotted];
m14_6 -> m14_0  [color=blue, key=0, style=bold];
m14_6 -> m14_9  [key=0, style=solid];
m14_6 -> m14_7  [key=0, style=solid];
m14_138 -> m14_142  [key=2, style=dotted];
m14_138 -> m14_139  [key=0, style=solid];
m14_138 -> m14_143  [key=2, style=dotted];
m14_647 -> m14_648  [key=0, style=solid];
m14_769 -> m14_759  [color=blue, key=0, style=bold];
m14_769 -> m14_770  [key=0, style=solid];
m14_671 -> m14_672  [color=red, key=0, style=solid];
m14_671 -> m14_702  [color=red, key=1, label=numberValue, style=dashed];
m14_656 -> m14_657  [key=0, style=solid];
m14_656 -> m14_658  [key=0, style=solid];
m14_655 -> m14_656  [key=0, style=solid];
m14_655 -> m14_670  [key=0, style=solid];
m14_643 -> m14_644  [key=0, style=solid];
m14_643 -> m14_705  [key=2, style=dotted];
m14_643 -> m14_706  [key=2, style=dotted];
m14_646 -> m14_703  [key=0, style=solid];
m14_646 -> m14_187  [key=2, style=dotted];
m14_646 -> m14_707  [key=2, style=dotted];
m14_644 -> m14_645  [key=0, style=solid];
m14_644 -> m14_654  [key=0, style=solid];
m14_644 -> m14_702  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m14_645 -> m14_646  [key=0, style=solid];
m14_659 -> m14_660  [key=0, style=solid];
m14_659 -> m14_54  [key=2, style=dotted];
m14_659 -> m14_663  [color=darkseagreen4, key=1, label=number, style=dashed];
m14_660 -> m14_661  [key=0, style=solid];
m14_660 -> m14_705  [key=2, style=dotted];
m14_660 -> m14_709  [key=2, style=dotted];
m14_672 -> m14_701  [key=0, style=solid];
m14_672 -> m14_702  [color=darkseagreen4, key=1, label=numberType, style=dashed];
m14_674 -> m14_675  [key=0, style=solid];
m14_674 -> m14_54  [key=2, style=dotted];
m14_674 -> m14_677  [color=darkseagreen4, key=1, label=number, style=dashed];
m14_610 -> m14_617  [key=0, style=solid];
m14_610 -> m14_293  [key=2, style=dotted];
m14_371 -> m14_372  [key=0, style=solid];
m14_373 -> m14_24  [key=2, style=dotted];
m14_373 -> m14_374  [key=0, style=solid];
m14_373 -> m14_375  [color=darkseagreen4, key=1, label=newDoc, style=dashed];
m14_373 -> m14_130  [key=2, style=dotted];
m14_372 -> m14_373  [key=0, style=solid];
m14_372 -> m14_372  [color=darkorchid, key=3, label="Local variable string jsonText", style=bold];
m14_375 -> m14_23  [key=2, style=dotted];
m14_375 -> m14_376  [key=0, style=solid];
m14_374 -> m14_375  [key=0, style=solid];
m14_374 -> m14_374  [color=darkorchid, key=3, label="Local variable string expected", style=bold];
m14_374 -> m14_400  [key=0, style=solid];
m14_376 -> m14_371  [color=blue, key=0, style=bold];
m14_376 -> m14_377  [key=0, style=solid];
m14_824 -> m14_23  [key=2, style=dotted];
m14_824 -> m14_825  [key=0, style=solid];
m14_824 -> m14_271  [key=2, style=dotted];
m14_824 -> m14_826  [key=0, style=solid];
m14_823 -> m14_75  [key=2, style=dotted];
m14_823 -> m14_824  [key=0, style=solid];
m14_823 -> m14_825  [color=darkseagreen4, key=1, label=dxml, style=dashed];
m14_823 -> m14_827  [key=0, style=solid];
m14_823 -> m14_627  [key=2, style=dotted];
m14_825 -> m14_271  [key=2, style=dotted];
m14_825 -> m14_826  [key=0, style=solid];
m14_825 -> m14_84  [key=2, style=dotted];
m14_825 -> m14_828  [key=0, style=solid];
m14_825 -> m14_822  [key=2, style=dotted];
m14_822 -> m14_823  [key=0, style=solid];
m14_822 -> m14_822  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_826 -> m14_821  [color=blue, key=0, style=bold];
m14_826 -> m14_828  [key=0, style=solid];
m14_826 -> m14_454  [key=2, style=dotted];
m14_787 -> m14_788  [key=0, style=solid];
m14_787 -> m14_799  [key=0, style=solid];
m14_789 -> m14_23  [key=2, style=dotted];
m14_789 -> m14_790  [key=0, style=solid];
m14_789 -> m14_798  [key=0, style=solid];
m14_790 -> m14_23  [key=2, style=dotted];
m14_790 -> m14_791  [key=0, style=solid];
m14_790 -> m14_799  [key=0, style=solid];
m14_791 -> m14_23  [key=2, style=dotted];
m14_791 -> m14_792  [key=0, style=solid];
m14_792 -> m14_23  [key=2, style=dotted];
m14_792 -> m14_793  [key=0, style=solid];
m14_788 -> m14_75  [key=2, style=dotted];
m14_788 -> m14_789  [key=0, style=solid];
m14_788 -> m14_790  [color=darkseagreen4, key=1, label=d, style=dashed];
m14_788 -> m14_791  [color=darkseagreen4, key=1, label=d, style=dashed];
m14_788 -> m14_792  [color=darkseagreen4, key=1, label=d, style=dashed];
m14_793 -> m14_787  [color=blue, key=0, style=bold];
m14_793 -> m14_794  [key=0, style=solid];
m14_806 -> m14_807  [key=0, style=solid];
m14_806 -> m14_188  [key=2, style=dotted];
m14_807 -> m14_810  [color=darkseagreen4, key=1, label=dt, style=dashed];
m14_807 -> m14_808  [key=0, style=solid];
m14_807 -> m14_813  [key=2, style=dotted];
m14_807 -> m14_555  [color=blue, key=0, style=bold];
m14_812 -> m14_806  [color=blue, key=0, style=bold];
m14_812 -> m14_813  [key=0, style=solid];
m14_812 -> m14_814  [key=0, style=solid];
m14_812 -> m14_627  [key=2, style=dotted];
m14_102 -> m14_103  [key=0, style=solid];
m14_102 -> m14_108  [key=2, style=dotted];
m14_448 -> m14_449  [key=0, style=solid];
m14_448 -> m14_455  [key=2, style=dotted];
m14_438 -> m14_439  [key=0, style=solid];
m14_438 -> m14_448  [color=darkseagreen4, key=1, label=quoteChar, style=dashed];
m14_441 -> m14_451  [key=0, style=solid];
m14_441 -> m14_187  [key=2, style=dotted];
m14_441 -> m14_188  [key=2, style=dotted];
m14_441 -> m14_23  [key=2, style=dotted];
m14_441 -> m14_442  [key=0, style=solid];
m14_439 -> m14_440  [key=0, style=solid];
m14_439 -> m14_49  [key=2, style=dotted];
m14_439 -> m14_439  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_439 -> m14_442  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_440 -> m14_442  [key=0, style=solid];
m14_440 -> m14_453  [key=2, style=dotted];
m14_440 -> m14_221  [key=2, style=dotted];
m14_440 -> m14_441  [key=0, style=solid];
m14_442 -> m14_443  [key=0, style=solid];
m14_442 -> m14_54  [key=2, style=dotted];
m14_442 -> m14_447  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m14_442 -> m14_75  [key=2, style=dotted];
m14_443 -> m14_444  [key=0, style=solid];
m14_443 -> m14_185  [key=2, style=dotted];
m14_443 -> m14_23  [key=2, style=dotted];
m14_443 -> m14_51  [key=2, style=dotted];
m14_447 -> m14_448  [color=green, key=0, style=solid];
m14_447 -> m14_454  [key=2, style=dotted];
m14_447 -> m14_221  [color=green, key=2, style=dotted];
m14_447 -> m14_449  [color=green, key=1, label=newDoc, style=dashed];
m14_447 -> m14_452  [color=green, key=1, label=newDoc, style=dashed];
m14_444 -> m14_445  [key=0, style=solid];
m14_444 -> m14_446  [key=0, style=solid];
m14_444 -> m14_438  [color=blue, key=0, style=bold];
m14_445 -> m14_451  [key=0, style=solid];
m14_445 -> m14_187  [key=2, style=dotted];
m14_445 -> m14_188  [key=2, style=dotted];
m14_445 -> m14_446  [key=0, style=solid];
m14_446 -> m14_447  [color=green, key=0, style=solid];
m14_446 -> m14_446  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_446 -> m14_450  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_449 -> m14_450  [key=0, style=solid];
m14_449 -> m14_356  [key=2, style=dotted];
m14_449 -> m14_455  [key=2, style=dotted];
m14_449 -> m14_122  [key=2, style=dotted];
m14_450 -> m14_451  [key=0, style=solid];
m14_450 -> m14_75  [key=2, style=dotted];
m14_451 -> m14_429  [color=blue, key=0, style=bold];
m14_451 -> m14_452  [key=0, style=solid];
m14_451 -> m14_455  [key=2, style=dotted];
m14_451 -> m14_122  [key=2, style=dotted];
m14_451 -> m14_51  [key=2, style=dotted];
m14_601 -> m14_602  [key=0, style=solid];
m14_601 -> m14_617  [color=darkseagreen4, key=1, label=endPosition, style=dashed];
m14_182 -> m14_475  [key=0, style=solid];
m14_182 -> m14_183  [key=0, style=solid];
m14_475 -> m14_476  [key=0, style=solid];
m14_475 -> m14_552  [key=0, style=solid];
m14_475 -> m14_133  [key=2, style=dotted];
m14_476 -> m14_477  [key=0, style=solid];
m14_476 -> m14_485  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m14_476 -> m14_546  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m14_476 -> m14_548  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m14_476 -> m14_551  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m14_476 -> m14_15  [key=2, style=dotted];
m14_477 -> m14_478  [key=0, style=solid];
m14_477 -> m14_483  [key=0, style=solid];
m14_477 -> m14_487  [key=0, style=solid];
m14_477 -> m14_490  [key=0, style=solid];
m14_477 -> m14_493  [key=0, style=solid];
m14_477 -> m14_503  [key=0, style=solid];
m14_477 -> m14_506  [key=0, style=solid];
m14_477 -> m14_509  [key=0, style=solid];
m14_477 -> m14_514  [key=0, style=solid];
m14_477 -> m14_517  [key=0, style=solid];
m14_477 -> m14_520  [key=0, style=solid];
m14_477 -> m14_524  [key=0, style=solid];
m14_477 -> m14_528  [key=0, style=solid];
m14_477 -> m14_532  [key=0, style=solid];
m14_477 -> m14_535  [key=0, style=solid];
m14_477 -> m14_539  [key=0, style=solid];
m14_477 -> m14_541  [key=0, style=solid];
m14_477 -> m14_543  [key=0, style=solid];
m14_477 -> m14_546  [key=0, style=solid];
m14_477 -> m14_122  [key=2, style=dotted];
m14_485 -> m14_486  [key=0, style=solid];
m14_485 -> m14_19  [key=2, style=dotted];
m14_485 -> m14_122  [key=2, style=dotted];
m14_548 -> m14_549  [key=0, style=solid];
m14_548 -> m14_551  [key=0, style=solid];
m14_548 -> m14_562  [key=2, style=dotted];
m14_548 -> m14_548  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_551 -> m14_552  [key=0, style=solid];
m14_551 -> m14_187  [key=2, style=dotted];
m14_551 -> m14_188  [key=2, style=dotted];
m14_551 -> m14_122  [key=2, style=dotted];
m14_478 -> m14_479  [key=0, style=solid];
m14_478 -> m14_473  [color=blue, key=0, style=bold];
m14_483 -> m14_484  [key=0, style=solid];
m14_483 -> m14_15  [key=2, style=dotted];
m14_483 -> m14_485  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m14_483 -> m14_486  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m14_487 -> m14_488  [key=0, style=solid];
m14_487 -> m14_23  [key=2, style=dotted];
m14_490 -> m14_491  [key=0, style=solid];
m14_490 -> m14_492  [color=darkseagreen4, key=1, label=xml, style=dashed];
m14_490 -> m14_490  [color=darkorchid, key=3, label="Local variable string xml", style=bold];
m14_493 -> m14_494  [key=0, style=solid];
m14_493 -> m14_15  [key=2, style=dotted];
m14_514 -> m14_515  [key=0, style=solid];
m14_514 -> m14_517  [color=darkseagreen4, key=1, label=circularDictionary, style=dashed];
m14_514 -> m14_527  [key=2, style=dotted];
m14_514 -> m14_516  [color=darkseagreen4, key=1, label=circularDictionary, style=dashed];
m14_517 -> m14_518  [key=0, style=solid];
m14_517 -> m14_519  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_517 -> m14_97  [key=2, style=dotted];
m14_517 -> m14_529  [key=2, style=dotted];
m14_520 -> m14_521  [key=0, style=solid];
m14_520 -> m14_522  [color=darkseagreen4, key=1, label=xml, style=dashed];
m14_520 -> m14_345  [key=2, style=dotted];
m14_524 -> m14_525  [key=0, style=solid];
m14_524 -> m14_524  [color=darkorchid, key=3, label="Local variable string expectedXmlJson", style=bold];
m14_528 -> m14_529  [key=0, style=solid];
m14_479 -> m14_480  [key=0, style=solid];
m14_479 -> m14_482  [key=0, style=solid];
m14_480 -> m14_481  [key=0, style=solid];
m14_480 -> m14_475  [key=0, style=solid];
m14_480 -> m14_71  [key=2, style=dotted];
m14_480 -> m14_482  [color=darkseagreen4, key=1, label=xml, style=dashed];
m14_480 -> m14_480  [color=darkorchid, key=3, label="Local variable string xml", style=bold];
m14_482 -> m14_475  [key=0, style=solid];
m14_482 -> m14_483  [key=0, style=solid];
m14_482 -> m14_133  [key=2, style=dotted];
m14_481 -> m14_552  [key=0, style=solid];
m14_481 -> m14_483  [color=darkseagreen4, key=1, label=doc, style=dashed];
m14_481 -> m14_482  [key=0, style=solid];
m14_481 -> m14_132  [key=2, style=dotted];
m14_484 -> m14_485  [key=0, style=solid];
m14_484 -> m14_484  [color=darkorchid, key=3, label="Local variable string expected", style=bold];
m14_486 -> m14_552  [key=0, style=solid];
m14_486 -> m14_24  [key=2, style=dotted];
m14_486 -> m14_487  [key=0, style=solid];
m14_488 -> m14_489  [key=0, style=solid];
m14_488 -> m14_553  [key=2, style=dotted];
m14_488 -> m14_479  [color=blue, key=0, style=bold];
m14_489 -> m14_552  [key=0, style=solid];
m14_489 -> m14_490  [key=0, style=solid];
m14_491 -> m14_492  [key=0, style=solid];
m14_491 -> m14_554  [key=2, style=dotted];
m14_491 -> m14_493  [color=darkseagreen4, key=1, label=doc, style=dashed];
m14_491 -> m14_132  [key=2, style=dotted];
m14_491 -> m14_497  [color=darkseagreen4, key=1, label=doc, style=dashed];
m14_492 -> m14_552  [key=0, style=solid];
m14_492 -> m14_493  [key=0, style=solid];
m14_492 -> m14_133  [key=2, style=dotted];
m14_494 -> m14_495  [key=0, style=solid];
m14_494 -> m14_501  [key=0, style=solid];
m14_494 -> m14_104  [key=2, style=dotted];
m14_494 -> m14_496  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m14_494 -> m14_494  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m14_494 -> m14_499  [key=2, style=dotted];
m14_494 -> m14_500  [key=2, style=dotted];
m14_495 -> m14_496  [key=0, style=solid];
m14_495 -> m14_498  [color=darkseagreen4, key=1, label=next, style=dashed];
m14_495 -> m14_122  [key=2, style=dotted];
m14_496 -> m14_497  [key=0, style=solid];
m14_496 -> m14_498  [key=0, style=solid];
m14_496 -> m14_24  [key=2, style=dotted];
m14_498 -> m14_499  [key=0, style=solid];
m14_498 -> m14_500  [key=0, style=solid];
m14_498 -> m14_489  [color=blue, key=0, style=bold];
m14_497 -> m14_502  [key=0, style=solid];
m14_497 -> m14_555  [key=2, style=dotted];
m14_497 -> m14_23  [key=2, style=dotted];
m14_497 -> m14_498  [key=0, style=solid];
m14_500 -> m14_552  [key=0, style=solid];
m14_500 -> m14_187  [key=2, style=dotted];
m14_500 -> m14_188  [key=2, style=dotted];
m14_513 -> m14_552  [key=0, style=solid];
m14_513 -> m14_514  [key=0, style=solid];
m14_515 -> m14_516  [key=0, style=solid];
m14_515 -> m14_186  [key=2, style=dotted];
m14_515 -> m14_527  [key=2, style=dotted];
m14_515 -> m14_528  [key=2, style=dotted];
m14_516 -> m14_552  [key=0, style=solid];
m14_516 -> m14_517  [key=0, style=solid];
m14_516 -> m14_528  [key=2, style=dotted];
m14_518 -> m14_519  [key=0, style=solid];
m14_518 -> m14_561  [key=2, style=dotted];
m14_518 -> m14_122  [key=2, style=dotted];
m14_519 -> m14_552  [key=0, style=solid];
m14_519 -> m14_523  [color=darkseagreen4, key=1, label=node, style=dashed];
m14_519 -> m14_520  [key=0, style=solid];
m14_519 -> m14_27  [key=2, style=dotted];
m14_521 -> m14_522  [key=0, style=solid];
m14_521 -> m14_521  [color=darkorchid, key=3, label="Local variable string expected", style=bold];
m14_522 -> m14_523  [key=0, style=solid];
m14_522 -> m14_130  [key=2, style=dotted];
m14_522 -> m14_122  [key=2, style=dotted];
m14_523 -> m14_552  [key=0, style=solid];
m14_523 -> m14_0  [key=2, style=dotted];
m14_523 -> m14_524  [key=0, style=solid];
m14_523 -> m14_525  [color=darkseagreen4, key=1, label=xmlJson, style=dashed];
m14_525 -> m14_526  [key=0, style=solid];
m14_525 -> m14_122  [key=2, style=dotted];
m14_526 -> m14_527  [key=0, style=solid];
m14_526 -> m14_130  [key=2, style=dotted];
m14_526 -> m14_513  [color=blue, key=0, style=bold];
m14_529 -> m14_530  [key=0, style=solid];
m14_547 -> m14_475  [key=0, style=solid];
m14_547 -> m14_548  [key=0, style=solid];
m14_549 -> m14_550  [key=0, style=solid];
m14_549 -> m14_560  [key=2, style=dotted];
m14_549 -> m14_221  [key=2, style=dotted];
m14_549 -> m14_552  [color=darkseagreen4, key=1, label=node, style=dashed];
m14_550 -> m14_552  [key=0, style=solid];
m14_550 -> m14_345  [key=2, style=dotted];
m14_550 -> m14_551  [key=0, style=solid];
m14_552 -> m14_182  [color=blue, key=0, style=bold];
m14_552 -> m14_15  [key=2, style=dotted];
m14_552 -> m14_553  [key=0, style=solid];
m14_205 -> m14_206  [key=0, style=solid];
m14_205 -> m14_287  [key=0, style=solid];
m14_205 -> m14_187  [key=2, style=dotted];
m14_205 -> m14_188  [key=2, style=dotted];
m14_209 -> m14_142  [key=2, style=dotted];
m14_209 -> m14_210  [key=0, style=solid];
m14_209 -> m14_213  [key=0, style=solid];
m14_209 -> m14_216  [key=0, style=solid];
m14_209 -> m14_219  [key=0, style=solid];
m14_209 -> m14_222  [key=0, style=solid];
m14_209 -> m14_225  [key=0, style=solid];
m14_209 -> m14_228  [key=0, style=solid];
m14_209 -> m14_233  [color=red, key=0, style=solid];
m14_209 -> m14_258  [key=0, style=solid];
m14_208 -> m14_209  [key=0, style=solid];
m14_208 -> m14_22  [key=2, style=dotted];
m14_210 -> m14_211  [key=0, style=solid];
m14_210 -> m14_213  [key=2, style=dotted];
m14_207 -> m14_208  [key=0, style=solid];
m14_207 -> m14_210  [color=darkseagreen4, key=1, label=xml, style=dashed];
m14_207 -> m14_713  [key=2, style=dotted];
m14_207 -> m14_209  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m14_207 -> m14_231  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m14_207 -> m14_260  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m14_211 -> m14_212  [key=0, style=solid];
m14_211 -> m14_214  [key=2, style=dotted];
m14_211 -> m14_211  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m14_206 -> m14_207  [key=0, style=solid];
m14_206 -> m14_206  [color=darkorchid, key=3, label="Local variable string xmlString", style=bold];
m14_206 -> m14_253  [color=darkseagreen4, key=1, label=escapeStartPos, style=dashed];
m14_206 -> m14_263  [color=darkseagreen4, key=1, label=escapeStartPos, style=dashed];
m14_212 -> m14_205  [color=blue, key=0, style=bold];
m14_212 -> m14_261  [key=0, style=solid];
m14_311 -> m14_307  [color=darkorchid, key=3, label="Parameter variable XDocument doc", style=bold];
m14_311 -> m14_314  [key=0, style=solid];
m14_311 -> m14_315  [color=darkseagreen4, key=1, label=bool, style=dashed];
m14_311 -> m14_316  [color=darkseagreen4, key=1, label=XDocument, style=dashed];
m14_314 -> m14_319  [key=2, style=dotted];
m14_314 -> m14_315  [key=0, style=solid];
m14_314 -> m14_317  [color=darkseagreen4, key=1, label=builder, style=dashed];
m14_315 -> m14_63  [key=2, style=dotted];
m14_315 -> m14_312  [key=2, style=dotted];
m14_315 -> m14_61  [key=2, style=dotted];
m14_315 -> m14_316  [key=0, style=solid];
m14_315 -> m14_317  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m14_316 -> m14_320  [key=2, style=dotted];
m14_316 -> m14_317  [key=0, style=solid];
m14_316 -> m14_355  [key=0, style=solid];
m14_317 -> m14_321  [key=2, style=dotted];
m14_317 -> m14_318  [key=0, style=solid];
m14_317 -> m14_326  [key=0, style=solid];
m14_317 -> m14_353  [key=0, style=solid];
m14_317 -> m14_317  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m14_317 -> m14_319  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m14_317 -> m14_320  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m14_317 -> m14_324  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m14_318 -> m14_311  [color=blue, key=0, style=bold];
m14_318 -> m14_319  [key=0, style=solid];
m14_229 -> m14_230  [key=0, style=solid];
m14_233 -> m14_15  [key=2, style=dotted];
m14_233 -> m14_234  [color=red, key=0, style=solid];
m14_233 -> m14_235  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m14_235 -> m14_122  [key=2, style=dotted];
m14_235 -> m14_236  [key=0, style=solid];
m14_231 -> m14_233  [color=darkseagreen4, key=1, label=doc, style=dashed];
m14_231 -> m14_232  [key=0, style=solid];
m14_231 -> m14_132  [key=2, style=dotted];
m14_232 -> m14_233  [key=0, style=solid];
m14_232 -> m14_133  [key=2, style=dotted];
m14_232 -> m14_261  [key=0, style=solid];
m14_232 -> m14_232  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m14_232 -> m14_234  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m14_234 -> m14_235  [key=0, style=solid];
m14_234 -> m14_234  [color=darkorchid, key=3, label="Local variable string expected", style=bold];
m14_230 -> m14_231  [key=0, style=solid];
m14_230 -> m14_232  [color=darkseagreen4, key=1, label=xml, style=dashed];
m14_230 -> m14_230  [color=darkorchid, key=3, label="Local variable string xml", style=bold];
m14_236 -> m14_229  [color=blue, key=0, style=bold];
m14_236 -> m14_237  [key=0, style=solid];
m14_236 -> m14_288  [key=2, style=dotted];
m14_236 -> m14_239  [color=darkseagreen4, key=1, label=writeChar, style=dashed];
m14_236 -> m14_243  [color=darkseagreen4, key=1, label=writeChar, style=dashed];
m14_236 -> m14_263  [color=darkseagreen4, key=1, label=writeChar, style=dashed];
m14_109 -> m14_110  [key=0, style=solid];
m14_109 -> m14_112  [color=darkseagreen4, key=1, label=int, style=dashed];
m14_109 -> m14_114  [color=darkseagreen4, key=1, label=bool, style=dashed];
m14_184 -> m14_362  [key=0, style=solid];
m14_184 -> m14_22  [key=2, style=dotted];
m14_184 -> m14_185  [key=0, style=solid];
m14_184 -> m14_713  [key=2, style=dotted];
m14_184 -> m14_186  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_397 -> m14_398  [key=0, style=solid];
m14_397 -> m14_399  [key=0, style=solid];
m14_397 -> m14_402  [key=2, style=dotted];
m14_397 -> m14_389  [color=blue, key=0, style=bold];
m14_399 -> m14_400  [key=0, style=solid];
m14_399 -> m14_187  [key=2, style=dotted];
m14_399 -> m14_188  [key=2, style=dotted];
m14_399 -> m14_401  [color=darkseagreen4, key=1, label=arrayXml, style=dashed];
m14_399 -> m14_399  [color=darkorchid, key=3, label="Local variable string arrayXml", style=bold];
m14_383 -> m14_384  [key=0, style=solid];
m14_390 -> m14_391  [key=0, style=solid];
m14_390 -> m14_390  [color=darkorchid, key=3, label="Local variable string jsonText", style=bold];
m14_393 -> m14_394  [key=0, style=solid];
m14_393 -> m14_23  [key=2, style=dotted];
m14_395 -> m14_396  [key=0, style=solid];
m14_384 -> m14_385  [key=0, style=solid];
m14_384 -> m14_186  [key=2, style=dotted];
m14_384 -> m14_142  [key=2, style=dotted];
m14_384 -> m14_386  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_385 -> m14_400  [key=0, style=solid];
m14_385 -> m14_383  [color=blue, key=0, style=bold];
m14_389 -> m14_400  [key=0, style=solid];
m14_389 -> m14_390  [key=0, style=solid];
m14_391 -> m14_392  [key=0, style=solid];
m14_391 -> m14_24  [key=2, style=dotted];
m14_391 -> m14_394  [color=darkseagreen4, key=1, label=newDoc, style=dashed];
m14_391 -> m14_393  [color=darkseagreen4, key=1, label=newDoc, style=dashed];
m14_392 -> m14_362  [key=0, style=solid];
m14_392 -> m14_393  [key=0, style=solid];
m14_392 -> m14_392  [color=darkorchid, key=3, label="Local variable string expected", style=bold];
m14_394 -> m14_362  [key=0, style=solid];
m14_394 -> m14_292  [key=2, style=dotted];
m14_394 -> m14_15  [key=2, style=dotted];
m14_394 -> m14_395  [key=0, style=solid];
m14_394 -> m14_396  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_396 -> m14_362  [key=0, style=solid];
m14_396 -> m14_293  [key=2, style=dotted];
m14_396 -> m14_122  [key=2, style=dotted];
m14_396 -> m14_397  [key=0, style=solid];
m14_398 -> m14_362  [key=0, style=solid];
m14_398 -> m14_399  [key=0, style=solid];
m14_400 -> m14_184  [color=blue, key=0, style=bold];
m14_400 -> m14_402  [color=darkseagreen4, key=1, label=arrayDoc, style=dashed];
m14_400 -> m14_401  [key=0, style=solid];
m14_400 -> m14_132  [key=2, style=dotted];
m14_794 -> m14_795  [key=0, style=solid];
m14_797 -> m14_23  [key=2, style=dotted];
m14_797 -> m14_798  [key=0, style=solid];
m14_797 -> m14_271  [key=2, style=dotted];
m14_797 -> m14_799  [key=0, style=solid];
m14_796 -> m14_75  [key=2, style=dotted];
m14_796 -> m14_797  [key=0, style=solid];
m14_796 -> m14_798  [color=darkseagreen4, key=1, label=dxml, style=dashed];
m14_796 -> m14_402  [key=2, style=dotted];
m14_798 -> m14_799  [key=0, style=solid];
m14_798 -> m14_271  [key=2, style=dotted];
m14_798 -> m14_84  [key=2, style=dotted];
m14_795 -> m14_796  [key=0, style=solid];
m14_795 -> m14_795  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_795 -> m14_799  [key=0, style=solid];
m14_799 -> m14_794  [color=blue, key=0, style=bold];
m14_799 -> m14_777  [color=blue, key=0, style=bold];
m14_327 -> m14_328  [key=0, style=solid];
m14_331 -> m14_15  [key=2, style=dotted];
m14_331 -> m14_332  [key=0, style=solid];
m14_331 -> m14_333  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m14_331 -> m14_334  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m14_334 -> m14_24  [key=2, style=dotted];
m14_334 -> m14_335  [key=0, style=solid];
m14_333 -> m14_122  [key=2, style=dotted];
m14_333 -> m14_334  [key=0, style=solid];
m14_329 -> m14_331  [color=darkseagreen4, key=1, label=doc, style=dashed];
m14_329 -> m14_330  [key=0, style=solid];
m14_329 -> m14_132  [key=2, style=dotted];
m14_329 -> m14_335  [color=darkseagreen4, key=1, label=doc, style=dashed];
m14_330 -> m14_331  [key=0, style=solid];
m14_330 -> m14_133  [key=2, style=dotted];
m14_332 -> m14_333  [key=0, style=solid];
m14_332 -> m14_332  [color=darkorchid, key=3, label="Local variable string expected", style=bold];
m14_335 -> m14_23  [key=2, style=dotted];
m14_335 -> m14_336  [key=0, style=solid];
m14_328 -> m14_329  [key=0, style=solid];
m14_328 -> m14_330  [color=darkseagreen4, key=1, label=xml, style=dashed];
m14_328 -> m14_328  [color=darkorchid, key=3, label="Local variable string xml", style=bold];
m14_336 -> m14_327  [color=blue, key=0, style=bold];
m14_336 -> m14_337  [key=0, style=solid];
m14_313 -> m14_312  [color=blue, key=0, style=bold];
m14_452 -> m14_455  [key=0, style=solid];
m14_452 -> m14_453  [key=0, style=solid];
m14_452 -> m14_15  [key=2, style=dotted];
m14_456 -> m14_452  [color=blue, key=0, style=bold];
m14_271 -> m14_272  [key=0, style=solid];
m14_271 -> m14_293  [key=2, style=dotted];
m14_221 -> m14_261  [key=0, style=solid];
m14_8 -> m14_9  [key=0, style=solid];
m14_8 -> m14_11  [key=0, style=solid];
m14_8 -> m14_18  [key=2, style=dotted];
m14_8 -> m14_19  [key=2, style=dotted];
m14_9 -> m14_10  [key=0, style=solid];
m14_9 -> m14_11  [key=0, style=solid];
m14_9 -> m14_20  [key=2, style=dotted];
m14_10 -> m14_12  [key=0, style=solid];
m14_10 -> m14_14  [key=2, style=dotted];
m14_10 -> m14_11  [key=0, style=solid];
m14_10 -> m14_21  [key=2, style=dotted];
m14_11 -> m14_12  [key=0, style=solid];
m14_11 -> m14_22  [key=2, style=dotted];
m14_12 -> m14_13  [key=0, style=solid];
m14_12 -> m14_23  [key=2, style=dotted];
m14_13 -> m14_8  [color=blue, key=0, style=bold];
m14_13 -> m14_14  [key=0, style=solid];
m14_453 -> m14_454  [key=0, style=solid];
m14_453 -> m14_456  [key=2, style=dotted];
m14_453 -> m14_458  [key=0, style=solid];
m14_189 -> m14_190  [key=0, style=solid];
m14_189 -> m14_194  [color=red, key=1, label=charPos, style=dashed];
m14_192 -> m14_15  [key=2, style=dotted];
m14_192 -> m14_193  [key=0, style=solid];
m14_192 -> m14_251  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m14_192 -> m14_253  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m14_192 -> m14_261  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m14_192 -> m14_263  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m14_192 -> m14_279  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m14_192 -> m14_282  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m14_192 -> m14_283  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m14_196 -> m14_15  [key=2, style=dotted];
m14_196 -> m14_197  [key=0, style=solid];
m14_196 -> m14_193  [key=0, style=solid];
m14_190 -> m14_192  [color=darkseagreen4, key=1, label=doc, style=dashed];
m14_190 -> m14_191  [key=0, style=solid];
m14_190 -> m14_132  [key=2, style=dotted];
m14_190 -> m14_277  [color=darkseagreen4, key=1, label=initialPosition, style=dashed];
m14_190 -> m14_278  [color=darkseagreen4, key=1, label=initialPosition, style=dashed];
m14_191 -> m14_192  [key=0, style=solid];
m14_191 -> m14_133  [key=2, style=dotted];
m14_191 -> m14_253  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m14_191 -> m14_263  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m14_193 -> m14_23  [key=2, style=dotted];
m14_193 -> m14_194  [color=red, key=0, style=solid];
m14_193 -> m14_287  [key=0, style=solid];
m14_194 -> m14_196  [color=red, key=1, label=charPos, style=dashed];
m14_194 -> m14_195  [color=red, key=0, style=solid];
m14_194 -> m14_132  [key=2, style=dotted];
m14_194 -> m14_201  [color=red, key=0, style=solid];
m14_194 -> m14_265  [color=red, key=0, style=solid];
m14_194 -> m14_269  [color=red, key=0, style=solid];
m14_194 -> m14_273  [color=red, key=0, style=solid];
m14_194 -> m14_194  [color=red, key=1, label=charPos, style=dashed];
m14_194 -> m14_197  [color=red, key=1, label=charPos, style=dashed];
m14_194 -> m14_202  [color=red, key=1, label=charPos, style=dashed];
m14_194 -> m14_204  [color=red, key=1, label=charPos, style=dashed];
m14_194 -> m14_206  [color=red, key=1, label=charPos, style=dashed];
m14_194 -> m14_207  [color=red, key=1, label=charPos, style=dashed];
m14_194 -> m14_211  [color=red, key=1, label=charPos, style=dashed];
m14_195 -> m14_196  [key=0, style=solid];
m14_195 -> m14_133  [key=2, style=dotted];
m14_197 -> m14_23  [key=2, style=dotted];
m14_197 -> m14_198  [key=0, style=solid];
m14_197 -> m14_197  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m14_197 -> m14_199  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m14_197 -> m14_202  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m14_197 -> m14_204  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m14_197 -> m14_206  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m14_197 -> m14_207  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m14_197 -> m14_211  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m14_200 -> m14_23  [key=2, style=dotted];
m14_200 -> m14_201  [key=0, style=solid];
m14_200 -> m14_287  [key=0, style=solid];
m14_200 -> m14_187  [key=2, style=dotted];
m14_200 -> m14_188  [key=2, style=dotted];
m14_203 -> m14_23  [key=2, style=dotted];
m14_203 -> m14_204  [key=0, style=solid];
m14_203 -> m14_206  [key=0, style=solid];
m14_203 -> m14_104  [key=2, style=dotted];
m14_199 -> m14_22  [key=2, style=dotted];
m14_199 -> m14_200  [key=0, style=solid];
m14_202 -> m14_22  [key=2, style=dotted];
m14_202 -> m14_203  [key=0, style=solid];
m14_198 -> m14_199  [key=0, style=solid];
m14_198 -> m14_713  [key=2, style=dotted];
m14_198 -> m14_193  [key=0, style=solid];
m14_198 -> m14_71  [key=2, style=dotted];
m14_201 -> m14_202  [key=0, style=solid];
m14_201 -> m14_713  [key=2, style=dotted];
m14_204 -> m14_189  [color=blue, key=0, style=bold];
m14_204 -> m14_205  [key=0, style=solid];
m14_814 -> m14_815  [key=0, style=solid];
m14_814 -> m14_188  [key=2, style=dotted];
m14_164 -> m14_165  [key=0, style=solid];
m14_24 -> m14_283  [color=darkorchid, key=3, label="Parameter variable string json", style=bold];
m14_24 -> m14_25  [key=0, style=solid];
m14_24 -> m14_27  [color=darkorchid, key=3, label="method methodReturn XmlNode DeserializeXmlNode", style=bold];
m14_24 -> m14_331  [color=darkorchid, key=3, label="Parameter variable string json", style=bold];
m14_24 -> m14_338  [color=darkorchid, key=3, label="Parameter variable string json", style=bold];
m14_24 -> m14_358  [color=darkorchid, key=3, label="Parameter variable string json", style=bold];
m14_24 -> m14_366  [color=darkorchid, key=3, label="Parameter variable string json", style=bold];
m14_24 -> m14_372  [color=darkorchid, key=3, label="Parameter variable string json", style=bold];
m14_24 -> m14_390  [color=darkorchid, key=3, label="Parameter variable string json", style=bold];
m14_24 -> m14_483  [color=darkorchid, key=3, label="Parameter variable string json", style=bold];
m14_24 -> m14_493  [color=darkorchid, key=3, label="Parameter variable string json", style=bold];
m14_24 -> m14_502  [color=darkorchid, key=3, label="Parameter variable string json", style=bold];
m14_24 -> m14_507  [color=darkorchid, key=3, label="Parameter variable string json", style=bold];
m14_24 -> m14_579  [color=darkorchid, key=3, label="Parameter variable string json", style=bold];
m14_24 -> m14_30  [key=0, style=solid];
m14_25 -> m14_27  [key=2, style=dotted];
m14_25 -> m14_26  [key=0, style=solid];
m14_26 -> m14_24  [color=blue, key=0, style=bold];
m14_26 -> m14_27  [key=0, style=solid];
m14_26 -> m14_28  [key=0, style=solid];
m14_361 -> m14_354  [color=blue, key=0, style=bold];
m14_149 -> m14_122  [key=2, style=dotted];
m14_149 -> m14_150  [key=0, style=solid];
m14_149 -> m14_147  [color=blue, key=0, style=bold];
m14_147 -> m14_143  [key=2, style=dotted];
m14_147 -> m14_148  [key=0, style=solid];
m14_147 -> m14_151  [key=2, style=dotted];
m14_148 -> m14_149  [key=0, style=solid];
m14_148 -> m14_121  [key=2, style=dotted];
m14_148 -> m14_150  [key=2, style=dotted];
m14_146 -> m14_147  [key=0, style=solid];
m14_146 -> m14_713  [key=2, style=dotted];
m14_322 -> m14_323  [key=0, style=solid];
m14_322 -> m14_319  [key=2, style=dotted];
m14_322 -> m14_325  [color=darkseagreen4, key=1, label=builder, style=dashed];
m14_322 -> m14_316  [key=0, style=solid];
m14_322 -> m14_71  [key=2, style=dotted];
m14_323 -> m14_324  [key=0, style=solid];
m14_323 -> m14_312  [key=2, style=dotted];
m14_323 -> m14_63  [key=2, style=dotted];
m14_323 -> m14_61  [key=2, style=dotted];
m14_323 -> m14_355  [key=0, style=solid];
m14_324 -> m14_325  [key=0, style=solid];
m14_324 -> m14_320  [key=2, style=dotted];
m14_325 -> m14_326  [key=0, style=solid];
m14_325 -> m14_321  [key=2, style=dotted];
m14_325 -> m14_355  [key=0, style=solid];
m14_326 -> m14_310  [color=blue, key=0, style=bold];
m14_326 -> m14_327  [key=0, style=solid];
m14_110 -> m14_111  [key=0, style=solid];
m14_110 -> m14_112  [key=0, style=solid];
m14_562 -> m14_563  [key=0, style=solid];
m14_134 -> m14_135  [key=0, style=solid];
m14_566 -> m14_567  [key=0, style=solid];
m14_566 -> m14_122  [key=2, style=dotted];
m14_567 -> m14_568  [key=0, style=solid];
m14_567 -> m14_569  [key=0, style=solid];
m14_567 -> m14_104  [key=2, style=dotted];
m14_567 -> m14_15  [key=2, style=dotted];
m14_568 -> m14_569  [key=0, style=solid];
m14_568 -> m14_122  [key=2, style=dotted];
m14_569 -> m14_570  [key=0, style=solid];
m14_569 -> m14_15  [key=2, style=dotted];
m14_569 -> m14_562  [color=blue, key=0, style=bold];
m14_554 -> m14_812  [key=0, style=solid];
m14_554 -> m14_547  [color=blue, key=0, style=bold];
m14_815 -> m14_554  [color=blue, key=0, style=bold];
m14_815 -> m14_816  [key=0, style=solid];
m14_237 -> m14_238  [key=0, style=solid];
m14_237 -> m14_239  [key=0, style=solid];
m14_237 -> m14_289  [key=2, style=dotted];
m14_245 -> m14_15  [key=2, style=dotted];
m14_245 -> m14_246  [key=0, style=solid];
m14_245 -> m14_288  [key=2, style=dotted];
m14_245 -> m14_247  [color=darkseagreen4, key=1, label=writeChar, style=dashed];
m14_245 -> m14_263  [color=darkseagreen4, key=1, label=writeChar, style=dashed];
m14_252 -> m14_15  [key=2, style=dotted];
m14_252 -> m14_253  [key=0, style=solid];
m14_252 -> m14_8  [key=2, style=dotted];
m14_252 -> m14_261  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m14_252 -> m14_263  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m14_252 -> m14_279  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m14_252 -> m14_282  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m14_252 -> m14_283  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m14_255 -> m14_15  [key=2, style=dotted];
m14_255 -> m14_256  [key=0, style=solid];
m14_255 -> m14_263  [color=darkseagreen4, key=1, label=writeChar, style=dashed];
m14_268 -> m14_15  [key=2, style=dotted];
m14_268 -> m14_269  [key=0, style=solid];
m14_268 -> m14_193  [key=0, style=solid];
m14_268 -> m14_270  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m14_269 -> m14_122  [key=2, style=dotted];
m14_269 -> m14_270  [key=0, style=solid];
m14_243 -> m14_245  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m14_243 -> m14_244  [key=0, style=solid];
m14_243 -> m14_253  [color=darkseagreen4, key=1, label=highSurrogate, style=dashed];
m14_244 -> m14_245  [key=0, style=solid];
m14_246 -> m14_23  [key=2, style=dotted];
m14_246 -> m14_247  [key=0, style=solid];
m14_246 -> m14_251  [key=0, style=solid];
m14_246 -> m14_289  [key=2, style=dotted];
m14_251 -> m14_252  [key=0, style=solid];
m14_251 -> m14_273  [key=2, style=dotted];
m14_251 -> m14_265  [color=darkseagreen4, key=1, label=instruction, style=dashed];
m14_251 -> m14_253  [key=0, style=solid];
m14_253 -> m14_23  [key=2, style=dotted];
m14_253 -> m14_254  [key=0, style=solid];
m14_253 -> m14_291  [key=2, style=dotted];
m14_254 -> m14_255  [key=0, style=solid];
m14_254 -> m14_274  [key=2, style=dotted];
m14_254 -> m14_266  [color=darkseagreen4, key=1, label=cDataSection, style=dashed];
m14_254 -> m14_256  [key=0, style=solid];
m14_254 -> m14_263  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m14_256 -> m14_23  [key=2, style=dotted];
m14_256 -> m14_257  [key=0, style=solid];
m14_256 -> m14_240  [key=0, style=solid];
m14_257 -> m14_268  [color=darkseagreen4, key=1, label=element, style=dashed];
m14_257 -> m14_258  [key=0, style=solid];
m14_257 -> m14_275  [key=2, style=dotted];
m14_257 -> m14_261  [color=darkseagreen4, key=1, label=element, style=dashed];
m14_257 -> m14_264  [color=darkseagreen4, key=1, label=element, style=dashed];
m14_257 -> m14_265  [color=darkseagreen4, key=1, label=element, style=dashed];
m14_257 -> m14_266  [color=darkseagreen4, key=1, label=element, style=dashed];
m14_257 -> m14_267  [color=darkseagreen4, key=1, label=element, style=dashed];
m14_267 -> m14_268  [key=0, style=solid];
m14_267 -> m14_278  [key=2, style=dotted];
m14_267 -> m14_292  [key=2, style=dotted];
m14_250 -> m14_23  [key=2, style=dotted];
m14_250 -> m14_251  [key=0, style=solid];
m14_250 -> m14_253  [color=darkseagreen4, key=1, label=highSurrogate, style=dashed];
m14_249 -> m14_22  [key=2, style=dotted];
m14_249 -> m14_250  [key=0, style=solid];
m14_249 -> m14_251  [key=0, style=solid];
m14_249 -> m14_256  [color=darkseagreen4, key=1, label=anotherHighSurrogate, style=dashed];
m14_241 -> m14_243  [color=darkseagreen4, key=1, label=document, style=dashed];
m14_241 -> m14_132  [key=2, style=dotted];
m14_241 -> m14_242  [key=0, style=solid];
m14_241 -> m14_256  [color=darkseagreen4, key=1, label=anotherHighSurrogate, style=dashed];
m14_242 -> m14_243  [key=0, style=solid];
m14_242 -> m14_133  [key=2, style=dotted];
m14_242 -> m14_255  [key=0, style=solid];
m14_242 -> m14_104  [key=2, style=dotted];
m14_247 -> m14_248  [key=0, style=solid];
m14_247 -> m14_713  [key=2, style=dotted];
m14_247 -> m14_250  [key=0, style=solid];
m14_247 -> m14_290  [key=2, style=dotted];
m14_238 -> m14_251  [color=darkseagreen4, key=1, label=doc, style=dashed];
m14_238 -> m14_254  [color=darkseagreen4, key=1, label=doc, style=dashed];
m14_238 -> m14_257  [color=darkseagreen4, key=1, label=doc, style=dashed];
m14_238 -> m14_267  [color=darkseagreen4, key=1, label=doc, style=dashed];
m14_238 -> m14_132  [key=2, style=dotted];
m14_238 -> m14_239  [key=0, style=solid];
m14_238 -> m14_258  [color=darkseagreen4, key=1, label=doc, style=dashed];
m14_238 -> m14_259  [color=darkseagreen4, key=1, label=doc, style=dashed];
m14_238 -> m14_262  [color=darkseagreen4, key=1, label=doc, style=dashed];
m14_238 -> m14_263  [color=darkseagreen4, key=1, label=writeChar, style=dashed];
m14_265 -> m14_266  [key=0, style=solid];
m14_265 -> m14_278  [key=2, style=dotted];
m14_266 -> m14_267  [key=0, style=solid];
m14_266 -> m14_278  [key=2, style=dotted];
m14_258 -> m14_259  [key=0, style=solid];
m14_258 -> m14_276  [key=2, style=dotted];
m14_258 -> m14_277  [key=2, style=dotted];
m14_258 -> m14_258  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m14_258 -> m14_264  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m14_258 -> m14_266  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m14_261 -> m14_262  [key=0, style=solid];
m14_261 -> m14_277  [key=2, style=dotted];
m14_261 -> m14_263  [key=0, style=solid];
m14_264 -> m14_265  [key=0, style=solid];
m14_264 -> m14_277  [key=2, style=dotted];
m14_264 -> m14_193  [key=0, style=solid];
m14_264 -> m14_281  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m14_264 -> m14_282  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m14_248 -> m14_249  [key=0, style=solid];
m14_248 -> m14_271  [key=2, style=dotted];
m14_248 -> m14_272  [key=2, style=dotted];
m14_248 -> m14_253  [color=darkseagreen4, key=1, label=highSurrogate, style=dashed];
m14_240 -> m14_241  [key=0, style=solid];
m14_240 -> m14_242  [color=darkseagreen4, key=1, label=xml, style=dashed];
m14_240 -> m14_247  [color=darkseagreen4, key=1, label=xml, style=dashed];
m14_240 -> m14_240  [color=darkorchid, key=3, label="Local variable string xml", style=bold];
m14_239 -> m14_240  [key=0, style=solid];
m14_239 -> m14_257  [key=0, style=solid];
m14_239 -> m14_290  [key=2, style=dotted];
m14_259 -> m14_261  [color=darkseagreen4, key=1, label=aa, style=dashed];
m14_259 -> m14_260  [key=0, style=solid];
m14_259 -> m14_276  [key=2, style=dotted];
m14_262 -> m14_264  [color=darkseagreen4, key=1, label=aa, style=dashed];
m14_262 -> m14_263  [key=0, style=solid];
m14_262 -> m14_276  [key=2, style=dotted];
m14_262 -> m14_8  [key=2, style=dotted];
m14_262 -> m14_279  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m14_262 -> m14_282  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m14_262 -> m14_283  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m14_260 -> m14_261  [key=0, style=solid];
m14_260 -> m14_287  [key=0, style=solid];
m14_260 -> m14_187  [key=2, style=dotted];
m14_260 -> m14_188  [key=2, style=dotted];
m14_263 -> m14_264  [key=0, style=solid];
m14_263 -> m14_291  [key=2, style=dotted];
m14_270 -> m14_237  [color=blue, key=0, style=bold];
m14_270 -> m14_271  [key=0, style=solid];
m14_611 -> m14_612  [key=0, style=solid];
m14_611 -> m14_614  [key=0, style=solid];
m14_611 -> m14_402  [key=2, style=dotted];
m14_602 -> m14_603  [key=0, style=solid];
m14_602 -> m14_617  [key=0, style=solid];
m14_605 -> m14_221  [key=2, style=dotted];
m14_605 -> m14_606  [key=0, style=solid];
m14_605 -> m14_607  [color=darkseagreen4, key=1, label=xmlProduct, style=dashed];
m14_605 -> m14_608  [key=0, style=solid];
m14_607 -> m14_15  [key=2, style=dotted];
m14_607 -> m14_608  [key=0, style=solid];
m14_607 -> m14_617  [key=0, style=solid];
m14_607 -> m14_292  [key=2, style=dotted];
m14_604 -> m14_605  [key=0, style=solid];
m14_604 -> m14_600  [key=2, style=dotted];
m14_604 -> m14_601  [key=2, style=dotted];
m14_604 -> m14_595  [key=0, style=solid];
m14_606 -> m14_455  [key=2, style=dotted];
m14_606 -> m14_122  [key=2, style=dotted];
m14_606 -> m14_607  [key=0, style=solid];
m14_606 -> m14_617  [color=darkseagreen4, key=1, label=endPosition, style=dashed];
m14_608 -> m14_122  [key=2, style=dotted];
m14_608 -> m14_609  [key=0, style=solid];
m14_608 -> m14_611  [key=0, style=solid];
m14_603 -> m14_604  [key=0, style=solid];
m14_603 -> m14_610  [key=2, style=dotted];
m14_603 -> m14_611  [key=2, style=dotted];
m14_603 -> m14_598  [key=2, style=dotted];
m14_603 -> m14_605  [key=0, style=solid];
m14_603 -> m14_457  [key=2, style=dotted];
m14_609 -> m14_602  [color=blue, key=0, style=bold];
m14_609 -> m14_610  [key=0, style=solid];
m14_609 -> m14_617  [color=darkseagreen4, key=1, label=endPosition, style=dashed];
m14_50 -> m14_189  [key=0, style=solid];
m14_50 -> m14_200  [color=darkseagreen4, key=1, label=char, style=dashed];
m14_50 -> m14_205  [color=darkseagreen4, key=1, label=char, style=dashed];
m14_50 -> m14_275  [color=darkseagreen4, key=1, label=char, style=dashed];
m14_835 -> m14_836  [key=0, style=solid];
m14_835 -> m14_763  [color=darkorchid, key=3, label="Local variable string xmlString", style=bold];
m14_836 -> m14_837  [key=0, style=solid];
m14_836 -> m14_842  [key=2, style=dotted];
m14_836 -> m14_713  [key=2, style=dotted];
m14_837 -> m14_838  [key=0, style=solid];
m14_837 -> m14_839  [key=0, style=solid];
m14_837 -> m14_22  [key=2, style=dotted];
m14_838 -> m14_839  [key=0, style=solid];
m14_838 -> m14_843  [key=2, style=dotted];
m14_838 -> m14_23  [key=2, style=dotted];
m14_839 -> m14_840  [key=0, style=solid];
m14_839 -> m14_841  [key=0, style=solid];
m14_839 -> m14_834  [color=blue, key=0, style=bold];
m14_222 -> m14_223  [key=0, style=solid];
m14_224 -> m14_142  [key=2, style=dotted];
m14_224 -> m14_225  [key=0, style=solid];
m14_224 -> m14_226  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_224 -> m14_261  [key=0, style=solid];
m14_223 -> m14_224  [key=0, style=solid];
m14_223 -> m14_227  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_223 -> m14_223  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_223 -> m14_226  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m14_225 -> m14_222  [color=blue, key=0, style=bold];
m14_225 -> m14_226  [key=0, style=solid];
m14_23 -> m14_24  [key=0, style=solid];
m14_23 -> m14_51  [key=2, style=dotted];
m14_619 -> m14_620  [key=0, style=solid];
m14_619 -> m14_185  [key=2, style=dotted];
m14_625 -> m14_221  [key=2, style=dotted];
m14_625 -> m14_626  [key=0, style=solid];
m14_625 -> m14_188  [key=2, style=dotted];
m14_623 -> m14_15  [key=2, style=dotted];
m14_623 -> m14_625  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_623 -> m14_624  [key=0, style=solid];
m14_623 -> m14_356  [key=2, style=dotted];
m14_624 -> m14_625  [key=0, style=solid];
m14_624 -> m14_122  [key=2, style=dotted];
m14_624 -> m14_626  [key=0, style=solid];
m14_624 -> m14_454  [key=2, style=dotted];
m14_626 -> m14_122  [key=2, style=dotted];
m14_626 -> m14_310  [key=2, style=dotted];
m14_626 -> m14_627  [key=0, style=solid];
m14_626 -> m14_556  [color=blue, key=0, style=bold];
m14_621 -> m14_623  [color=darkseagreen4, key=1, label=d, style=dashed];
m14_621 -> m14_622  [key=0, style=solid];
m14_621 -> m14_132  [key=2, style=dotted];
m14_621 -> m14_626  [key=0, style=solid];
m14_621 -> m14_187  [key=2, style=dotted];
m14_621 -> m14_188  [key=2, style=dotted];
m14_622 -> m14_623  [key=0, style=solid];
m14_622 -> m14_133  [key=2, style=dotted];
m14_620 -> m14_621  [key=0, style=solid];
m14_620 -> m14_622  [color=darkseagreen4, key=1, label=xml, style=dashed];
m14_620 -> m14_620  [color=darkorchid, key=3, label="Local variable string xml", style=bold];
m14_17 -> m14_18  [key=0, style=solid];
m14_553 -> m14_122  [key=2, style=dotted];
m14_553 -> m14_554  [key=0, style=solid];
m14_553 -> m14_800  [key=0, style=solid];
m14_71 -> m14_72  [key=0, style=solid];
m14_71 -> m14_23  [key=2, style=dotted];
m14_71 -> m14_51  [key=2, style=dotted];
m14_72 -> m14_73  [key=0, style=solid];
m14_72 -> m14_74  [key=2, style=dotted];
m14_72 -> m14_22  [key=2, style=dotted];
m14_73 -> m14_71  [color=blue, key=0, style=bold];
m14_73 -> m14_23  [key=2, style=dotted];
m14_73 -> m14_74  [key=0, style=solid];
m14_21 -> m14_22  [key=0, style=solid];
m14_21 -> m14_49  [key=2, style=dotted];
m14_181 -> m14_129  [color=blue, key=0, style=bold];
m14_274 -> m14_275  [key=0, style=solid];
m14_47 -> m14_167  [color=darkorchid, key=3, label="Property variable System.DateTimeOffset Date", style=bold];
m14_47 -> m14_48  [key=0, style=solid];
m14_122 -> m14_123  [key=0, style=solid];
m14_354 -> m14_355  [key=0, style=solid];
m14_355 -> m14_356  [key=0, style=solid];
m14_355 -> m14_357  [color=darkseagreen4, key=1, label=xml, style=dashed];
m14_355 -> m14_355  [color=darkorchid, key=3, label="Local variable string xml", style=bold];
m14_355 -> m14_314  [color=blue, key=0, style=bold];
m14_167 -> m14_168  [key=0, style=solid];
m14_167 -> m14_177  [key=2, style=dotted];
m14_167 -> m14_178  [key=2, style=dotted];
m14_167 -> m14_179  [key=2, style=dotted];
m14_167 -> m14_180  [key=2, style=dotted];
m14_170 -> m14_171  [key=0, style=solid];
m14_170 -> m14_97  [key=2, style=dotted];
m14_170 -> m14_48  [key=2, style=dotted];
m14_170 -> m14_165  [key=2, style=dotted];
m14_170 -> m14_173  [color=darkseagreen4, key=1, label=doc1, style=dashed];
m14_166 -> m14_181  [key=0, style=solid];
m14_166 -> m14_183  [key=2, style=dotted];
m14_166 -> m14_167  [key=0, style=solid];
m14_168 -> m14_169  [key=0, style=solid];
m14_168 -> m14_155  [key=0, style=solid];
m14_168 -> m14_184  [key=2, style=dotted];
m14_168 -> m14_175  [color=darkseagreen4, key=1, label=x, style=dashed];
m14_168 -> m14_181  [key=2, style=dotted];
m14_169 -> m14_181  [key=0, style=solid];
m14_169 -> m14_170  [key=0, style=solid];
m14_169 -> m14_164  [key=2, style=dotted];
m14_171 -> m14_172  [key=0, style=solid];
m14_171 -> m14_179  [key=0, style=solid];
m14_171 -> m14_104  [key=2, style=dotted];
m14_171 -> m14_51  [key=2, style=dotted];
m14_172 -> m14_173  [key=0, style=solid];
m14_172 -> m14_185  [key=2, style=dotted];
m14_172 -> m14_23  [key=2, style=dotted];
m14_173 -> m14_174  [key=0, style=solid];
m14_173 -> m14_175  [key=0, style=solid];
m14_173 -> m14_121  [key=2, style=dotted];
m14_174 -> m14_181  [key=0, style=solid];
m14_174 -> m14_175  [key=0, style=solid];
m14_174 -> m14_110  [key=2, style=dotted];
m14_175 -> m14_176  [key=0, style=solid];
m14_175 -> m14_178  [key=0, style=solid];
m14_175 -> m14_23  [key=2, style=dotted];
m14_176 -> m14_177  [key=0, style=solid];
m14_176 -> m14_186  [key=2, style=dotted];
m14_176 -> m14_166  [color=blue, key=0, style=bold];
m14_178 -> m14_181  [key=0, style=solid];
m14_178 -> m14_187  [key=2, style=dotted];
m14_178 -> m14_188  [key=2, style=dotted];
m14_275 -> m14_276  [key=0, style=solid];
m14_275 -> m14_193  [key=0, style=solid];
m14_278 -> m14_284  [key=0, style=solid];
m14_278 -> m14_294  [key=2, style=dotted];
m14_279 -> m14_280  [key=0, style=solid];
m14_279 -> m14_281  [key=0, style=solid];
m14_282 -> m14_283  [key=0, style=solid];
m14_282 -> m14_295  [key=2, style=dotted];
m14_282 -> m14_0  [key=2, style=dotted];
m14_283 -> m14_284  [key=0, style=solid];
m14_283 -> m14_294  [key=2, style=dotted];
m14_283 -> m14_296  [key=2, style=dotted];
m14_283 -> m14_122  [key=2, style=dotted];
m14_273 -> m14_274  [key=0, style=solid];
m14_214 -> m14_215  [key=0, style=solid];
m14_214 -> m14_214  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m14_214 -> m14_217  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m14_272 -> m14_193  [key=0, style=solid];
m14_272 -> m14_275  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m14_272 -> m14_276  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m14_281 -> m14_282  [key=0, style=solid];
m14_281 -> m14_283  [key=0, style=solid];
m14_281 -> m14_23  [key=2, style=dotted];
m14_284 -> m14_285  [key=0, style=solid];
m14_284 -> m14_284  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m14_284 -> m14_279  [color=blue, key=0, style=bold];
m14_280 -> m14_281  [key=0, style=solid];
m14_280 -> m14_8  [key=2, style=dotted];
m14_280 -> m14_282  [color=darkseagreen4, key=1, label=node, style=dashed];
m14_280 -> m14_283  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m14_280 -> m14_24  [key=2, style=dotted];
m14_777 -> m14_778  [key=0, style=solid];
m14_777 -> m14_796  [color=darkseagreen4, key=1, label=char, style=dashed];
m14_777 -> m14_23  [key=2, style=dotted];
m14_778 -> m14_779  [key=0, style=solid];
m14_778 -> m14_783  [key=0, style=solid];
m14_778 -> m14_788  [key=0, style=solid];
m14_778 -> m14_791  [key=0, style=solid];
m14_778 -> m14_796  [key=0, style=solid];
m14_778 -> m14_23  [key=2, style=dotted];
m14_779 -> m14_780  [key=0, style=solid];
m14_779 -> m14_775  [color=blue, key=0, style=bold];
m14_786 -> m14_787  [key=0, style=solid];
m14_111 -> m14_121  [key=0, style=solid];
m14_120 -> m14_121  [key=0, style=solid];
m14_187 -> m14_23  [key=2, style=dotted];
m14_187 -> m14_51  [key=2, style=dotted];
m14_187 -> m14_188  [key=0, style=solid];
m14_457 -> m14_458  [key=0, style=solid];
m14_459 -> m14_221  [key=2, style=dotted];
m14_459 -> m14_460  [key=0, style=solid];
m14_459 -> m14_463  [color=darkseagreen4, key=1, label=newDoc, style=dashed];
m14_459 -> m14_474  [key=0, style=solid];
m14_458 -> m14_446  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_458 -> m14_459  [key=0, style=solid];
m14_458 -> m14_461  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_458 -> m14_464  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_458 -> m14_465  [color=darkseagreen4, key=1, label=initialPosition, style=dashed];
m14_458 -> m14_471  [color=darkseagreen4, key=1, label=initialPosition, style=dashed];
m14_463 -> m14_15  [key=2, style=dotted];
m14_463 -> m14_464  [key=0, style=solid];
m14_463 -> m14_459  [key=0, style=solid];
m14_463 -> m14_71  [key=2, style=dotted];
m14_460 -> m14_455  [key=2, style=dotted];
m14_460 -> m14_122  [key=2, style=dotted];
m14_460 -> m14_461  [key=0, style=solid];
m14_460 -> m14_467  [key=0, style=solid];
m14_461 -> m14_462  [key=0, style=solid];
m14_461 -> m14_75  [key=2, style=dotted];
m14_464 -> m14_122  [key=2, style=dotted];
m14_464 -> m14_465  [key=0, style=solid];
m14_464 -> m14_474  [key=0, style=solid];
m14_464 -> m14_188  [key=2, style=dotted];
m14_462 -> m14_455  [key=2, style=dotted];
m14_462 -> m14_122  [key=2, style=dotted];
m14_462 -> m14_463  [key=0, style=solid];
m14_462 -> m14_51  [key=2, style=dotted];
m14_462 -> m14_465  [key=0, style=solid];
m14_465 -> m14_457  [color=blue, key=0, style=bold];
m14_465 -> m14_466  [key=0, style=solid];
m14_465 -> m14_294  [key=2, style=dotted];
m14_22 -> m14_23  [key=0, style=solid];
m14_22 -> m14_50  [key=2, style=dotted];
m14_848 -> m14_849  [key=0, style=solid];
m14_848 -> m14_3  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_4  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_5  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_9  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_10  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_11  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_12  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_16  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_17  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_20  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_21  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_22  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_23  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_24  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_26  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_28  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_29  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_30  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_31  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_32  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_33  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_34  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_35  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_37  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_39  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_41  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_43  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_44  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_46  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_47  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_61  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_62  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_63  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_65  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_66  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_67  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_68  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_69  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_72  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_75  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_77  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_79  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_81  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_82  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_83  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_84  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_87  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_88  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_90  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_91  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_92  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_93  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_94  [color=red, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_95  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_96  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_98  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_99  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_105  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_106  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_110  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_112  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_114  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_123  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_124  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_125  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_132  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_136  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_140  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_144  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_148  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_152  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_156  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_163  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_166  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_168  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_171  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_172  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_173  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_175  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_176  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_178  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_180  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_189  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_190  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_191  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_194  [color=red, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_196  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_198  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_199  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_200  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_202  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_203  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_204  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_205  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_207  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_235  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_236  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_242  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_244  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_245  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_252  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_253  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_254  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_257  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_259  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_260  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_262  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_263  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_266  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_267  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_268  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_270  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_271  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_272  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_275  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_278  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_280  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_282  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_283  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_285  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_298  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_303  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_304  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_307  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_308  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_315  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_317  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_319  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_321  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_322  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_324  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_353  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_357  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_358  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_359  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_363  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_366  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_367  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_368  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_370  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_372  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_373  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_376  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_377  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_380  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_381  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_384  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_387  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_388  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_392  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_394  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_396  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_398  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_399  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_404  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_407  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_408  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_410  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_412  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_413  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_416  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_419  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_421  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_424  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_426  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_427  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_430  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_433  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_435  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_436  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_437  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_439  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_440  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_441  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_442  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_443  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_444  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_445  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_446  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_447  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_448  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_449  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_458  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_460  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_462  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_463  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_464  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_465  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_467  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_468  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_469  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_471  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_473  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_476  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_479  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_480  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_482  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_485  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_488  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_491  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_494  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_495  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_497  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_499  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_500  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_501  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_504  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_507  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_510  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_511  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_512  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_515  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_518  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_521  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_522  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_525  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_526  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_529  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_530  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_533  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_536  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_537  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_540  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_542  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_545  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_547  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_549  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_551  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_563  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_564  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_566  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_567  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_568  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_569  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_574  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_577  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_578  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_580  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_582  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_584  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_587  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_591  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_592  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_593  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_596  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_598  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_599  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_600  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_601  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_602  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_604  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_606  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_607  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_609  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_610  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_612  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_613  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_615  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_616  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_617  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_618  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_619  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_620  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_621  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_622  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_623  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_624  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_625  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_628  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_629  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_630  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_631  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_632  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_633  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_636  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_637  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_638  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_642  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_646  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_648  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_652  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_653  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_655  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_659  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_663  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_664  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_668  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_674  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_677  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_680  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_685  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_687  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_690  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_691  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_695  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_699  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_701  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_702  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_715  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_716  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_717  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_719  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_721  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_723  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_724  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_725  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_728  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_730  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_731  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_733  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_734  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_736  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_738  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_740  [color=red, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_741  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_742  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_743  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_747  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_749  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_752  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_754  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_755  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_756  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_757  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_760  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_764  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_767  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_770  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_773  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_775  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_784  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_786  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_789  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_800  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_801  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_802  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_804  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_805  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_806  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_808  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_809  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_810  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_812  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_813  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_814  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_816  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_817  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_819  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_820  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_823  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_824  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_826  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_827  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_829  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_830  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_832  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_833  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_836  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_837  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_838  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_839  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_848 -> m14_840  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m14_850 -> m14_23  [key=2, style=dotted];
m14_850 -> m14_51  [key=2, style=dotted];
m14_850 -> m14_851  [key=0, style=solid];
m14_852 -> m14_23  [key=2, style=dotted];
m14_852 -> m14_853  [key=0, style=solid];
m14_854 -> m14_23  [key=2, style=dotted];
m14_854 -> m14_51  [key=2, style=dotted];
m14_854 -> m14_855  [key=0, style=solid];
m14_849 -> m14_850  [key=0, style=solid];
m14_849 -> m14_856  [key=2, style=dotted];
m14_849 -> m14_851  [color=darkseagreen4, key=1, label=original, style=dashed];
m14_851 -> m14_852  [key=0, style=solid];
m14_851 -> m14_121  [key=2, style=dotted];
m14_851 -> m14_853  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_853 -> m14_854  [key=0, style=solid];
m14_853 -> m14_110  [key=2, style=dotted];
m14_855 -> m14_848  [color=blue, key=0, style=bold];
m14_139 -> m14_140  [key=0, style=solid];
m14_139 -> m14_121  [key=2, style=dotted];
m14_140 -> m14_141  [key=0, style=solid];
m14_140 -> m14_142  [key=2, style=dotted];
m14_140 -> m14_122  [key=2, style=dotted];
m14_141 -> m14_139  [color=blue, key=0, style=bold];
m14_141 -> m14_134  [color=blue, key=0, style=bold];
m14_15 -> m14_16  [key=0, style=solid];
m14_15 -> m14_17  [color=darkseagreen4, key=1, label=int, style=dashed];
m14_16 -> m14_17  [key=0, style=solid];
m14_599 -> m14_600  [key=0, style=solid];
m14_599 -> m14_595  [key=0, style=solid];
m14_599 -> m14_71  [key=2, style=dotted];
m14_600 -> m14_626  [key=0, style=solid];
m14_600 -> m14_188  [key=2, style=dotted];
m14_473 -> m14_474  [key=0, style=solid];
m14_473 -> m14_187  [key=2, style=dotted];
m14_473 -> m14_188  [key=2, style=dotted];
m14_474 -> m14_453  [color=blue, key=0, style=bold];
m14_474 -> m14_476  [color=darkseagreen4, key=1, label=doc, style=dashed];
m14_474 -> m14_475  [key=0, style=solid];
m14_474 -> m14_132  [key=2, style=dotted];
m14_132 -> m14_133  [key=0, style=solid];
m14_132 -> m14_134  [key=2, style=dotted];
m14_48 -> m14_19  [color=blue, key=0, style=bold];
m14_185 -> m14_23  [key=2, style=dotted];
m14_185 -> m14_186  [key=0, style=solid];
m14_185 -> m14_571  [key=0, style=solid];
m14_185 -> m14_589  [color=darkseagreen4, key=1, label=bool, style=dashed];
m14_188 -> m14_182  [color=blue, key=0, style=bold];
m14_46 -> m14_47  [key=0, style=solid];
m14_46 -> m14_53  [key=2, style=dotted];
m14_133 -> m14_131  [color=blue, key=0, style=bold];
m14_582 -> m14_573  [key=0, style=solid];
m14_582 -> m14_292  [key=2, style=dotted];
m14_582 -> m14_153  [color=darkorchid, key=3, label="Property variable decimal Number", style=bold];
m14_865 -> m14_866  [key=0, style=solid];
m14_867 -> m14_23  [key=2, style=dotted];
m14_867 -> m14_51  [key=2, style=dotted];
m14_867 -> m14_868  [key=0, style=solid];
m14_869 -> m14_23  [key=2, style=dotted];
m14_869 -> m14_870  [key=0, style=solid];
m14_871 -> m14_23  [key=2, style=dotted];
m14_871 -> m14_51  [key=2, style=dotted];
m14_871 -> m14_872  [key=0, style=solid];
m14_866 -> m14_867  [key=0, style=solid];
m14_866 -> m14_774  [key=2, style=dotted];
m14_866 -> m14_856  [key=2, style=dotted];
m14_866 -> m14_868  [color=darkseagreen4, key=1, label=original, style=dashed];
m14_868 -> m14_869  [key=0, style=solid];
m14_868 -> m14_121  [key=2, style=dotted];
m14_868 -> m14_870  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_870 -> m14_871  [key=0, style=solid];
m14_870 -> m14_110  [key=2, style=dotted];
m14_872 -> m14_865  [color=blue, key=0, style=bold];
m14_293 -> m14_563  [key=0, style=solid];
m14_402 -> m14_15  [key=2, style=dotted];
m14_402 -> m14_403  [key=0, style=solid];
m14_402 -> m14_404  [color=darkseagreen4, key=1, label=arrayJsonText, style=dashed];
m14_827 -> m14_828  [key=0, style=solid];
m14_827 -> m14_188  [key=2, style=dotted];
m14_828 -> m14_558  [color=blue, key=0, style=bold];
m14_828 -> m14_831  [color=darkseagreen4, key=1, label=dt, style=dashed];
m14_828 -> m14_829  [key=0, style=solid];
m14_828 -> m14_813  [key=2, style=dotted];
m14_401 -> m14_402  [key=0, style=solid];
m14_401 -> m14_133  [key=2, style=dotted];
m14_563 -> m14_564  [key=0, style=solid];
m14_563 -> m14_563  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_564 -> m14_565  [key=0, style=solid];
m14_564 -> m14_15  [key=2, style=dotted];
m14_564 -> m14_221  [key=2, style=dotted];
m14_564 -> m14_567  [color=darkseagreen4, key=1, label=node, style=dashed];
m14_565 -> m14_293  [color=blue, key=0, style=bold];
m14_565 -> m14_345  [key=2, style=dotted];
m14_565 -> m14_566  [key=0, style=solid];
m14_136 -> m14_138  [color=darkseagreen4, key=1, label=xmlDocument, style=dashed];
m14_136 -> m14_137  [key=0, style=solid];
m14_136 -> m14_132  [key=2, style=dotted];
m14_137 -> m14_138  [key=0, style=solid];
m14_137 -> m14_133  [key=2, style=dotted];
m14_137 -> m14_135  [color=blue, key=0, style=bold];
m14_135 -> m14_136  [key=0, style=solid];
m14_135 -> m14_137  [color=darkseagreen4, key=1, label=xml, style=dashed];
m14_135 -> m14_135  [color=darkorchid, key=3, label="Local variable string xml", style=bold];
m14_345 -> m14_346  [key=0, style=solid];
m14_345 -> m14_519  [color=darkorchid, key=3, label="Parameter variable XmlNode node", style=bold];
m14_345 -> m14_532  [color=darkorchid, key=3, label="Parameter variable XmlNode node", style=bold];
m14_345 -> m14_540  [color=darkorchid, key=3, label="Parameter variable XmlNode node", style=bold];
m14_345 -> m14_549  [color=darkorchid, key=3, label="Parameter variable XmlNode node", style=bold];
m14_345 -> m14_564  [color=darkorchid, key=3, label="Parameter variable XmlNode node", style=bold];
m14_345 -> m14_572  [color=darkorchid, key=3, label="Parameter variable XmlNode node", style=bold];
m14_345 -> m14_350  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m14_346 -> m14_347  [key=0, style=solid];
m14_346 -> m14_63  [key=2, style=dotted];
m14_347 -> m14_348  [key=0, style=solid];
m14_347 -> m14_347  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_347 -> m14_349  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_348 -> m14_349  [key=0, style=solid];
m14_348 -> m14_62  [key=2, style=dotted];
m14_348 -> m14_351  [color=darkseagreen4, key=1, label=sw, style=dashed];
m14_349 -> m14_350  [key=0, style=solid];
m14_349 -> m14_61  [key=2, style=dotted];
m14_350 -> m14_351  [key=0, style=solid];
m14_350 -> m14_353  [key=2, style=dotted];
m14_351 -> m14_352  [key=0, style=solid];
m14_351 -> m14_67  [key=2, style=dotted];
m14_352 -> m14_316  [key=0, style=solid];
m14_352 -> m14_345  [color=blue, key=0, style=bold];
m14_894 -> m14_448  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m14_894 -> m14_449  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m14_894 -> m14_282  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m14_894 -> m14_523  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m14_894 -> m14_280  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m14_894 -> m14_519  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m14_894 -> m14_25  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m14_894 -> m14_233  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m14_894 -> m14_331  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m14_894 -> m14_334  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m14_894 -> m14_339  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m14_894 -> m14_341  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m14_894 -> m14_358  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m14_894 -> m14_359  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m14_894 -> m14_366  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m14_894 -> m14_368  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m14_894 -> m14_373  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m14_894 -> m14_391  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m14_894 -> m14_394  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m14_894 -> m14_402  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m14_894 -> m14_408  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m14_894 -> m14_414  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m14_894 -> m14_420  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m14_894 -> m14_451  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m14_894 -> m14_460  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m14_894 -> m14_462  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m14_894 -> m14_476  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m14_894 -> m14_483  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m14_894 -> m14_486  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m14_894 -> m14_493  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m14_894 -> m14_496  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m14_894 -> m14_503  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m14_894 -> m14_508  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m14_894 -> m14_510  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m14_894 -> m14_520  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m14_894 -> m14_533  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m14_894 -> m14_541  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m14_894 -> m14_550  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m14_894 -> m14_565  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m14_894 -> m14_573  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m14_894 -> m14_580  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m14_894 -> m14_584  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m14_894 -> m14_594  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m14_894 -> m14_606  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m14_895 -> m14_227  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_896 -> m14_429  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_898 -> m14_560  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_900 -> m14_760  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_899 -> m14_584  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_897 -> m14_436  [color=darkseagreen4, key=1, label=json, style=dashed];
}
