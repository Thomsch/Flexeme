digraph  {
n0 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeClass.UserConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeClass.UserConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="45-45"];
n1 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeClass.UserConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", label="User user = (User)value", span="47-47"];
n2 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeClass.UserConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", label="writer.WriteValue(user.UserName)", span="49-49"];
n3 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeClass.UserConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeClass.UserConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="45-45"];
n4 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="819-819"];
n5 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeClass.UserConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeClass.UserConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="52-52"];
n6 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeClass.UserConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", label="User user = new User()", span="54-54"];
n7 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeClass.UserConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", label="user.UserName = (string)reader.Value", span="55-55"];
n10 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeClass.User.User()", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeClass.User.User()", span="67-67"];
n8 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeClass.UserConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", label="return user;", span="57-57"];
n9 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeClass.UserConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeClass.UserConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="52-52"];
n11 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeClass.UserConverter.CanConvert(System.Type)", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeClass.UserConverter.CanConvert(System.Type)", span="60-60"];
n12 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeClass.UserConverter.CanConvert(System.Type)", label="return objectType == typeof(User);", span="62-62"];
n13 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeClass.UserConverter.CanConvert(System.Type)", label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeClass.UserConverter.CanConvert(System.Type)", span="60-60"];
n14 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeClass.Example()", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeClass.Example()", span="74-74"];
n15 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeClass.Example()", label="User user = new User\r\n            {\r\n                UserName = @''domain\username''\r\n            }", span="77-80"];
n16 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeClass.Example()", label="string json = JsonConvert.SerializeObject(user, Formatting.Indented)", span="82-82"];
n17 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeClass.Example()", label="Console.WriteLine(json)", span="84-84"];
n20 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="525-525"];
n18 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeClass.Example()", label="Assert.AreEqual(@''''''domain\\username'''''', json)", span="88-88"];
n21 [cluster="System.Console.WriteLine(string)", label="Entry System.Console.WriteLine(string)", span="0-0"];
n19 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeClass.Example()", label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeClass.Example()", span="74-74"];
n22 [cluster="Unk.AreEqual", label="Entry Unk.AreEqual", span=""];
d397 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentCollection(System.Type)", color=green, community=0, label="Type definition = t.GetGenericTypeDefinition()", prediction=0, span="886-886"];
d395 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentCollection(System.Type)", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentCollection(System.Type)", span="882-882"];
d396 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentCollection(System.Type)", label="t.IsGenericType()", span="884-884"];
d398 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentCollection(System.Type)", label="definition.FullName", span="888-888"];
d407 [cluster="System.Type.GetGenericTypeDefinition()", label="Entry System.Type.GetGenericTypeDefinition()", span="0-0"];
d404 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentCollection(System.Type)", color=green, community=0, label="return false;", prediction=1, span="898-898"];
d405 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentCollection(System.Type)", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentCollection(System.Type)", span="882-882"];
d408 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipDeserialized(System.Type)", label="IsConcurrentCollection(t)", span="904-904"];
d412 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipSerializing(System.Type)", label="IsConcurrentCollection(t)", span="921-921"];
d111 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataMemberForType(System.Type)", label="MemberInfo extensionDataMember = members.LastOrDefault(m =>\r\n            {\r\n                MemberTypes memberType = m.MemberType();\r\n                if (memberType != MemberTypes.Property && memberType != MemberTypes.Field)\r\n                {\r\n                    return false;\r\n                }\r\n\r\n                // last instance of attribute wins on type if there are multiple\r\n                if (!m.IsDefined(typeof(JsonExtensionDataAttribute), false))\r\n                {\r\n                    return false;\r\n                }\r\n\r\n                if (!ReflectionUtils.CanReadMemberValue(m, true))\r\n                {\r\n                    throw new JsonException(''Invalid extension data attribute on '{0}'. Member '{1}' must have a getter.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(m.DeclaringType), m.Name));\r\n                }\r\n\r\n                Type t = ReflectionUtils.GetMemberUnderlyingType(m);\r\n\r\n                Type dictionaryType;\r\n                if (ReflectionUtils.ImplementsGenericDefinition(t, typeof(IDictionary<,>), out dictionaryType))\r\n                {\r\n                    Type keyType = dictionaryType.GetGenericArguments()[0];\r\n                    Type valueType = dictionaryType.GetGenericArguments()[1];\r\n\r\n                    if (keyType.IsAssignableFrom(typeof(string)) && valueType.IsAssignableFrom(typeof(JToken)))\r\n                    {\r\n                        return true;\r\n                    }\r\n                }\r\n\r\n                throw new JsonException(''Invalid extension data attribute on '{0}'. Member '{1}' type must implement IDictionary<string, JToken>.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(m.DeclaringType), m.Name));\r\n            })", span="410-444"];
d45 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(object)", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(object)", span="415-415"];
d390 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipDeserialized(System.Type)", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipDeserialized(System.Type)", span="901-901"];
d389 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipSerializing(System.Type)", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipSerializing(System.Type)", span="919-919"];
d406 [cluster="System.Type.IsGenericType()", label="Entry System.Type.IsGenericType()", span="153-153"];
d399 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentCollection(System.Type)", label="''System.Collections.Concurrent.ConcurrentQueue`1''", span="890-890"];
d403 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentCollection(System.Type)", label="return true;", span="894-894"];
d409 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipDeserialized(System.Type)", label="return true;", span="906-906"];
d410 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipDeserialized(System.Type)", label="return false;", span="916-916"];
d413 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipSerializing(System.Type)", label="return true;", span="923-923"];
d414 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipSerializing(System.Type)", label="return false;", span="933-933"];
d710 [label="Newtonsoft.Json.Serialization.DefaultContractResolver", span=""];
d104 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataMemberForType(System.Type)", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataMemberForType(System.Type)", span="399-399"];
d110 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataMemberForType(System.Type)", label="IEnumerable<MemberInfo> members = GetClassHierarchyForType(type).SelectMany(baseType =>\r\n            {\r\n                IList<MemberInfo> m = new List<MemberInfo>();\r\n                m.AddRange(baseType.GetProperties(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));\r\n                m.AddRange(baseType.GetFields(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));\r\n\r\n                return m;\r\n            })", span="401-408"];
d392 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", span="1242-1242"];
d510 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", span="1224-1224"];
d112 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataMemberForType(System.Type)", label="return extensionDataMember;", span="446-446"];
d116 [cluster="Unk.LastOrDefault", label="Entry Unk.LastOrDefault", span=""];
d126 [cluster="lambda expression", label="Entry lambda expression", span="410-444"];
d25 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", label="JsonTypeReflector.GetAttribute<JsonPropertyAttribute>(member) != null", span="244-244"];
d27 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", label="JsonTypeReflector.GetAttribute<JsonRequiredAttribute>(member) != null", span="248-248"];
d429 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", label="JsonContainerAttribute containerAttribute = JsonTypeReflector.GetAttribute<JsonContainerAttribute>(objectType)", span="962-962"];
d598 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", label="JsonPropertyAttribute propertyAttribute = JsonTypeReflector.GetAttribute<JsonPropertyAttribute>(attributeProvider)", span="1423-1423"];
d599 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", label="JsonRequiredAttribute requiredAttribute = JsonTypeReflector.GetAttribute<JsonRequiredAttribute>(attributeProvider)", span="1424-1424"];
d607 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", label="JsonContainerAttribute containerAttribute = JsonTypeReflector.GetAttribute<JsonContainerAttribute>(declaringType)", span="1446-1446"];
d646 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", label="bool hasJsonIgnoreAttribute =\r\n                JsonTypeReflector.GetAttribute<JsonIgnoreAttribute>(attributeProvider) != null\r\n                    // automatically ignore extension data dictionary property if it is public\r\n                || JsonTypeReflector.GetAttribute<JsonExtensionDataAttribute>(attributeProvider) != null", span="1521-1524"];
d653 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", label="DefaultValueAttribute defaultValueAttribute = JsonTypeReflector.GetAttribute<DefaultValueAttribute>(attributeProvider)", span="1552-1552"];
d618 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", label="bool hasMemberAttribute = false", span="1473-1473"];
d648 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", label="bool hasIgnoreDataMemberAttribute = false", span="1532-1532"];
d363 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", label="bool skipDeserialized = ShouldSkipDeserialized(baseType)", span="834-834"];
d411 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipDeserialized(System.Type)", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipDeserialized(System.Type)", span="901-901"];
d356 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", label="GetClassHierarchyForType(type)", span="824-824"];
d362 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", label="bool skipSerializing = ShouldSkipSerializing(baseType)", span="833-833"];
d415 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipSerializing(System.Type)", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipSerializing(System.Type)", span="919-919"];
d400 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentCollection(System.Type)", label="''System.Collections.Concurrent.ConcurrentStack`1''", span="891-891"];
d402 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentCollection(System.Type)", label="''System.Collections.Concurrent.ConcurrentDictionary`2''", span="893-893"];
d1 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", label="DefaultMembersSearchFlags = BindingFlags.Instance | BindingFlags.Public", span="177-177"];
d2 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", label="_contractCache = new ThreadSafeStore<Type, JsonContract>(CreateContract)", span="180-180"];
d8 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", label="return _contractCache.Get(type);", span="195-195"];
d20 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", label="List<MemberInfo> defaultMembers = ReflectionUtils.GetFieldsAndProperties(objectType, DefaultMembersSearchFlags)\r\n                    .Where(m => !ReflectionUtils.IsIndexedProperty(m)).ToList()", span="226-227"];
d22 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", label="SerializeCompilerGeneratedMembers || !member.IsDefined(typeof(CompilerGeneratedAttribute), true)", span="233-233"];
d56 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", label="InitializeContract(contract)", span="315-315"];
d60 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", label="contract.Properties.AddRange(CreateProperties(contract.NonNullableUnderlyingType, contract.MemberSerialization))", span="325-325"];
d69 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", label="extensionDataNameResolver = ResolveExtensionDataName", span="342-342"];
d72 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", label="ConstructorInfo overrideConstructor = GetAttributeConstructor(contract.NonNullableUnderlyingType)", span="349-349"];
d75 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", label="contract.CreatorParameters.AddRange(CreateConstructorParameters(overrideConstructor, contract.Properties))", span="355-355"];
d78 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", label="ConstructorInfo constructor = GetParameterizedConstructor(contract.NonNullableUnderlyingType)", span="370-370"];
d81 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", label="contract.CreatorParameters.AddRange(CreateConstructorParameters(constructor, contract.Properties))", span="374-374"];
d83 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", label="ConstructorInfo constructor = GetImmutableConstructor(contract.NonNullableUnderlyingType, contract.Properties)", span="381-381"];
d86 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", label="contract.CreatorParameters.AddRange(CreateConstructorParameters(constructor, contract.Properties))", span="385-385"];
d87 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", label="MemberInfo extensionDataMember = GetExtensionDataMemberForType(contract.NonNullableUnderlyingType)", span="390-390"];
d133 [cluster="lambda expression", label="throw new JsonException(''Invalid extension data attribute on '{0}'. Member '{1}' must have a getter.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(m.DeclaringType), m.Name));", span="426-426"];
d141 [cluster="lambda expression", label="throw new JsonException(''Invalid extension data attribute on '{0}'. Member '{1}' type must implement IDictionary<string, JToken>.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(m.DeclaringType), m.Name));", span="443-443"];
d253 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)", label="var memberProperty = MatchProperty(memberProperties, parameterInfo.Name, parameterInfo.ParameterType)", span="595-595"];
d269 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", label="JsonProperty matchingMemberProperty = MatchProperty(memberProperties, parameterInfo.Name, parameterInfo.ParameterType)", span="647-647"];
d271 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", label="JsonProperty property = CreatePropertyFromConstructorParameter(matchingMemberProperty, parameterInfo)", span="653-653"];
d291 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", label="SetPropertySettingsFromAttributes(property, parameterInfo, parameterInfo.Name, parameterInfo.Member.DeclaringType, MemberSerialization.OptOut, out allowNonPublicAccess)", span="697-697"];
d322 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", label="contract.Converter = ResolveContractConverter(contract.NonNullableUnderlyingType)", span="763-763"];
d325 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", label="contract.DefaultCreator = GetDefaultCreator(contract.CreatedType)", span="771-771"];
d327 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", label="ResolveCallbackMethods(contract, contract.NonNullableUnderlyingType)", span="777-777"];
d338 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", label="GetCallbackMethodsForType(t, out onSerializing, out onSerialized, out onDeserializing, out onDeserialized, out onError)", span="788-788"];
d428 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", label="InitializeContract(contract)", span="960-960"];
d433 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", label="contract.DictionaryKeyResolver = ResolveDictionaryKey", span="970-970"];
d434 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", label="ConstructorInfo overrideConstructor = GetAttributeConstructor(contract.NonNullableUnderlyingType)", span="973-973"];
d453 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", label="InitializeContract(contract)", span="1009-1009"];
d454 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", label="ConstructorInfo overrideConstructor = GetAttributeConstructor(contract.NonNullableUnderlyingType)", span="1011-1011"];
d469 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", label="InitializeContract(contract)", span="1047-1047"];
d475 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", label="InitializeContract(contract)", span="1060-1060"];
d481 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", label="InitializeContract(contract)", span="1124-1124"];
d487 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", label="return CreatePrimitiveContract(objectType);", span="1138-1138"];
d491 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", label="return CreateObjectContract(objectType);", span="1146-1146"];
d493 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", label="return CreateArrayContract(objectType);", span="1151-1151"];
d495 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", label="return CreateDictionaryContract(objectType);", span="1156-1156"];
d497 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", label="return CreateLinqContract(objectType);", span="1161-1161"];
d499 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", label="return CreateDictionaryContract(objectType);", span="1166-1166"];
d501 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", label="return CreateArrayContract(objectType);", span="1171-1171"];
d503 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", label="return CreateStringContract(objectType);", span="1176-1176"];
d504 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", label="return CreateObjectContract(objectType);", span="1201-1201"];
d546 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", label="List<MemberInfo> members = GetSerializableMembers(type)", span="1307-1307"];
d549 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", label="PropertyNameTable nameTable = GetNameTable()", span="1313-1313"];
d552 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", label="JsonProperty property = CreateProperty(member, memberSerialization)", span="1319-1319"];
d568 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetNameTable()", label="return _nameTable;", span="1339-1339"];
d572 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", label=DynamicCodeGeneration, span="1353-1353"];
d582 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", label="property.ValueProvider = CreateMemberValueProvider(member)", span="1381-1381"];
d585 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", label="SetPropertySettingsFromAttributes(property, member, member.Name, member.DeclaringType, memberSerialization, out allowNonPublicAccess)", span="1385-1385"];
d591 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", label="property.ShouldSerialize = CreateShouldSerializeTest(member)", span="1398-1398"];
d592 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", label="SetIsSpecifiedActions(property, member, allowNonPublicAccess)", span="1400-1400"];
d613 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", label="namingStrategy = NamingStrategy", span="1459-1459"];
d616 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", label="property.PropertyName = ResolvePropertyName(mappedName)", span="1468-1468"];
d657 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", label="(DefaultMembersSearchFlags & BindingFlags.NonPublic) == BindingFlags.NonPublic", span="1560-1560"];
d692 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", label="NamingStrategy != null", span="1620-1620"];
d693 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", label="return NamingStrategy.GetPropertyName(propertyName, false);", span="1622-1622"];
d697 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveExtensionDataName(string)", label="NamingStrategy != null", span="1635-1635"];
d698 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveExtensionDataName(string)", label="return NamingStrategy.GetExtensionDataName(extensionDataName);", span="1637-1637"];
d703 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(string)", label="NamingStrategy != null", span="1650-1650"];
d704 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(string)", label="return NamingStrategy.GetDictionaryKey(dictionaryKey);", span="1652-1652"];
d705 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(string)", label="return ResolvePropertyName(dictionaryKey);", span="1655-1655"];
d708 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)", label="return ResolvePropertyName(propertyName);", span="1667-1667"];
d114 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", span="936-936"];
d113 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataMemberForType(System.Type)", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataMemberForType(System.Type)", span="399-399"];
d115 [cluster="Unk.SelectMany", label="Entry Unk.SelectMany", span=""];
d117 [cluster="lambda expression", label="Entry lambda expression", span="401-408"];
d368 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", label="!skipSerializing && IsValidCallback(method, parameters, typeof(OnSerializingAttribute), currentOnSerializing, ref prevAttributeType)", span="848-848"];
d372 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", label="IsValidCallback(method, parameters, typeof(OnSerializedAttribute), currentOnSerialized, ref prevAttributeType)", span="854-854"];
d376 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", label="IsValidCallback(method, parameters, typeof(OnDeserializingAttribute), currentOnDeserializing, ref prevAttributeType)", span="860-860"];
d380 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", label="!skipDeserialized && IsValidCallback(method, parameters, typeof(OnDeserializedAttribute), currentOnDeserialized, ref prevAttributeType)", span="866-866"];
d384 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", label="IsValidCallback(method, parameters, typeof(OnErrorAttribute), currentOnError, ref prevAttributeType)", span="872-872"];
d536 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", span="1242-1242"];
d519 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", label="!method.IsDefined(attributeType, false)", span="1244-1244"];
d521 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", label="currentCallback != null", span="1249-1249"];
d522 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", label="throw new JsonException(''Invalid attribute. Both '{0}' and '{1}' in type '{2}' have '{3}'.''.FormatWith(CultureInfo.InvariantCulture, method, currentCallback, GetClrTypeFullName(method.DeclaringType), attributeType));", span="1251-1251"];
d523 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", label="prevAttributeType != null", span="1254-1254"];
d524 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", label="throw new JsonException(''Invalid Callback. Method '{3}' in type '{2}' has both '{0}' and '{1}'.''.FormatWith(CultureInfo.InvariantCulture, prevAttributeType, attributeType, GetClrTypeFullName(method.DeclaringType), method));", span="1256-1256"];
d525 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", label="method.IsVirtual", span="1259-1259"];
d526 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", label="throw new JsonException(''Virtual Method '{0}' of type '{1}' cannot be marked with '{2}' attribute.''.FormatWith(CultureInfo.InvariantCulture, method, GetClrTypeFullName(method.DeclaringType), attributeType));", span="1261-1261"];
d527 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", label="method.ReturnType != typeof(void)", span="1264-1264"];
d528 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", label="throw new JsonException(''Serialization Callback '{1}' in type '{0}' must return void.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(method.DeclaringType), method));", span="1266-1266"];
d529 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", label="attributeType == typeof(OnErrorAttribute)", span="1269-1269"];
d530 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", label="parameters == null || parameters.Length != 2 || parameters[0].ParameterType != typeof(StreamingContext) || parameters[1].ParameterType != typeof(ErrorContext)", span="1271-1271"];
d531 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", label="throw new JsonException(''Serialization Error Callback '{1}' in type '{0}' must have two parameters of type '{2}' and '{3}'.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(method.DeclaringType), method, typeof(StreamingContext), typeof(ErrorContext)));", span="1273-1273"];
d532 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", label="parameters == null || parameters.Length != 1 || parameters[0].ParameterType != typeof(StreamingContext)", span="1278-1278"];
d533 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", label="throw new JsonException(''Serialization Callback '{1}' in type '{0}' must have a single parameter of type '{2}'.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(method.DeclaringType), method, typeof(StreamingContext)));", span="1280-1280"];
d534 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", label="prevAttributeType = attributeType", span="1284-1284"];
d364 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", label="baseType.GetMethods(BindingFlags.NonPublic | BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)", span="836-836"];
d367 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", label="ParameterInfo[] parameters = method.GetParameters()", span="846-846"];
d357 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", label="MethodInfo currentOnSerializing = null", span="827-827"];
d358 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", label="MethodInfo currentOnSerialized = null", span="828-828"];
d359 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", label="MethodInfo currentOnDeserializing = null", span="829-829"];
d360 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", label="MethodInfo currentOnDeserialized = null", span="830-830"];
d361 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", label="MethodInfo currentOnError = null", span="831-831"];
d366 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", label="Type prevAttributeType = null", span="845-845"];
d502 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", label="CanConvertToString(t)", span="1174-1174"];
d518 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", span="1224-1224"];
d515 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", label="type == typeof(Type) || type.IsSubclassOf(typeof(Type))", span="1234-1234"];
d488 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", label="Type t = ReflectionUtils.EnsureNotNullableType(objectType)", span="1141-1141"];
d142 [cluster="lambda expression", label="Exit lambda expression", span="410-444"];
d127 [cluster="lambda expression", label="MemberTypes memberType = m.MemberType()", span="412-412"];
d130 [cluster="lambda expression", label="!m.IsDefined(typeof(JsonExtensionDataAttribute), false)", span="419-419"];
d132 [cluster="lambda expression", label="!ReflectionUtils.CanReadMemberValue(m, true)", span="424-424"];
d134 [cluster="lambda expression", label="Type t = ReflectionUtils.GetMemberUnderlyingType(m)", span="429-429"];
d21 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", label=allMembers, span="230-230"];
d23 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", label="defaultMembers.Contains(member)", span="235-235"];
d26 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", label="serializableMembers.Add(member)", span="246-246"];
d28 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", label="serializableMembers.Add(member)", span="250-250"];
d29 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", label="memberSerialization == MemberSerialization.Fields && member.MemberType() == MemberTypes.Field", span="258-258"];
d426 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", span="957-957"];
d430 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", label="containerAttribute?.NamingStrategyType != null", span="963-963"];
d431 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", label="NamingStrategy namingStrategy = JsonTypeReflector.GetContainerNamingStrategy(containerAttribute)", span="965-965"];
d311 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", span="1405-1405"];
d602 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", label="propertyAttribute?.PropertyName != null", span="1428-1428"];
d603 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", label="mappedName = propertyAttribute.PropertyName", span="1430-1430"];
d609 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", label="propertyAttribute?.NamingStrategyType != null", span="1449-1449"];
d610 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", label="namingStrategy = JsonTypeReflector.CreateNamingStrategyInstance(propertyAttribute.NamingStrategyType, propertyAttribute.NamingStrategyParameters)", span="1451-1451"];
d619 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", label="propertyAttribute != null", span="1474-1474"];
d620 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", label="property._required = propertyAttribute._required", span="1476-1476"];
d621 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", label="property.Order = propertyAttribute._order", span="1477-1477"];
d622 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", label="property.DefaultValueHandling = propertyAttribute._defaultValueHandling", span="1478-1478"];
d624 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", label="property.NullValueHandling = propertyAttribute._nullValueHandling", span="1480-1480"];
d625 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", label="property.ReferenceLoopHandling = propertyAttribute._referenceLoopHandling", span="1481-1481"];
d626 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", label="property.ObjectCreationHandling = propertyAttribute._objectCreationHandling", span="1482-1482"];
d627 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", label="property.TypeNameHandling = propertyAttribute._typeNameHandling", span="1483-1483"];
d628 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", label="property.IsReference = propertyAttribute._isReference", span="1484-1484"];
d629 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", label="property.ItemIsReference = propertyAttribute._itemIsReference", span="1486-1486"];
d630 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", label="property.ItemConverter = propertyAttribute.ItemConverterType != null ? JsonTypeReflector.CreateJsonConverterInstance(propertyAttribute.ItemConverterType, propertyAttribute.ItemConverterParameters) : null", span="1487-1487"];
d631 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", label="property.ItemReferenceLoopHandling = propertyAttribute._itemReferenceLoopHandling", span="1488-1488"];
d632 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", label="property.ItemTypeNameHandling = propertyAttribute._itemTypeNameHandling", span="1489-1489"];
d600 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", label="string mappedName", span="1426-1426"];
d642 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", label="requiredAttribute != null", span="1513-1513"];
d604 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", label="hasSpecifiedName = true", span="1431-1431"];
d606 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", label="hasSpecifiedName = false", span="1443-1443"];
d608 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", label="NamingStrategy namingStrategy", span="1448-1448"];
d611 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", label="containerAttribute?.NamingStrategyType != null", span="1453-1453"];
d612 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", label="namingStrategy = JsonTypeReflector.GetContainerNamingStrategy(containerAttribute)", span="1455-1455"];
d645 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", label="property.HasMemberAttribute = hasMemberAttribute", span="1519-1519"];
d647 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", label="memberSerialization != MemberSerialization.OptIn", span="1530-1530"];
d649 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", label="property.Ignored = (hasJsonIgnoreAttribute || hasIgnoreDataMemberAttribute)", span="1539-1539"];
d650 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", label="property.Ignored = (hasJsonIgnoreAttribute || !hasMemberAttribute)", span="1544-1544"];
d652 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", label="property.MemberConverter = JsonTypeReflector.GetJsonConverter(attributeProvider)", span="1550-1550"];
d654 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", label="defaultValueAttribute != null", span="1553-1553"];
d655 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", label="property.DefaultValue = defaultValueAttribute.Value", span="1555-1555"];
d617 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", label="property.UnderlyingName = name", span="1471-1471"];
d659 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", label=hasMemberAttribute, span="1565-1565"];
d350 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", span="816-816"];
d355 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", label="onError = null", span="822-822"];
d388 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", span="816-816"];
d401 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentCollection(System.Type)", label="''System.Collections.Concurrent.ConcurrentBag`1''", span="892-892"];
d0 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", span="170-170"];
d3 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", span="170-170"];
d4 [cluster="ThreadSafeStore<Type, JsonContract>.cstr", label="Entry ThreadSafeStore<Type, JsonContract>.cstr", span=""];
d5 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", span="188-188"];
d6 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", label="type == null", span="190-190"];
d9 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", span="188-188"];
d12 [cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)", label="Entry Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)", span="60-60"];
d13 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", span="203-203"];
d19 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", label="memberSerialization != MemberSerialization.Fields", span="219-219"];
d38 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", span="645-645"];
d39 [cluster="Unk.Where", label="Entry Unk.Where", span=""];
d41 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="817-817"];
d51 [cluster="lambda expression", label="Entry lambda expression", span="227-227"];
d42 [cluster="System.Reflection.MemberInfo.IsDefined(System.Type, bool)", label="Entry System.Reflection.MemberInfo.IsDefined(System.Type, bool)", span="0-0"];
d55 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", label="JsonObjectContract contract = new JsonObjectContract(objectType)", span="314-314"];
d57 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", label="bool ignoreSerializableAttribute", span="317-317"];
d93 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", span="744-744"];
d59 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", label="contract.MemberSerialization = JsonTypeReflector.GetObjectMemberSerialization(contract.NonNullableUnderlyingType, ignoreSerializableAttribute)", span="324-324"];
d61 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", label="Func<string, string> extensionDataNameResolver = null", span="327-327"];
d94 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", span="1305-1305"];
d95 [cluster="System.Collections.Generic.IList<T>.AddRange<T>(System.Collections.Generic.IEnumerable<T>)", label="Entry System.Collections.Generic.IList<T>.AddRange<T>(System.Collections.Generic.IEnumerable<T>)", span="68-68"];
d68 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", label="extensionDataNameResolver == null", span="340-340"];
d70 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", label="contract.ExtensionDataNameResolver = extensionDataNameResolver", span="345-345"];
d71 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", label="contract.IsInstantiable", span="347-347"];
d100 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", span="639-639"];
d73 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", label="overrideConstructor != null", span="352-352"];
d98 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", span="557-557"];
d74 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", label="contract.OverrideCreator = JsonTypeReflector.ReflectionDelegateFactory.CreateParameterizedConstructor(overrideConstructor)", span="354-354"];
d77 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", label="contract.DefaultCreator == null || contract.DefaultCreatorNonPublic", span="368-368"];
d79 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", label="constructor != null", span="371-371"];
d101 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParameterizedConstructor(System.Type)", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetParameterizedConstructor(System.Type)", span="610-610"];
d80 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", label="contract.ParameterizedCreator = JsonTypeReflector.ReflectionDelegateFactory.CreateParameterizedConstructor(constructor)", span="373-373"];
d82 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", label="contract.NonNullableUnderlyingType.IsValueType()", span="377-377"];
d84 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", label="constructor != null", span="382-382"];
d103 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)", span="581-581"];
d85 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", label="contract.OverrideCreator = JsonTypeReflector.ReflectionDelegateFactory.CreateParameterizedConstructor(constructor)", span="384-384"];
d76 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", label="contract.MemberSerialization == MemberSerialization.Fields", span="357-357"];
d105 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", span="449-449"];
d88 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", label="extensionDataMember != null", span="391-391"];
d89 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", label="SetExtensionDataDelegates(contract, extensionDataMember)", span="393-393"];
d146 [cluster="Newtonsoft.Json.JsonException.JsonException(string)", label="Entry Newtonsoft.Json.JsonException.JsonException(string)", span="54-54"];
d147 [cluster="Unk.GetClrTypeFullName", label="Entry Unk.GetClrTypeFullName", span=""];
d148 [cluster="Unk.FormatWith", label="Entry Unk.FormatWith", span=""];
d136 [cluster="lambda expression", label="ReflectionUtils.ImplementsGenericDefinition(t, typeof(IDictionary<,>), out dictionaryType)", span="432-432"];
d139 [cluster="lambda expression", label="keyType.IsAssignableFrom(typeof(string)) && valueType.IsAssignableFrom(typeof(JToken))", span="437-437"];
d252 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)", label=parameters, span="593-593"];
d254 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)", label="memberProperty == null || memberProperty.Writable", span="596-596"];
d260 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.MatchProperty(Newtonsoft.Json.Serialization.JsonPropertyCollection, string, System.Type)", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.MatchProperty(Newtonsoft.Json.Serialization.JsonPropertyCollection, string, System.Type)", span="665-665"];
d268 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", label=constructorParameters, span="645-645"];
d277 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", span="690-690"];
d270 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", label="matchingMemberProperty != null || parameterInfo.Name != null", span="651-651"];
d272 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", label="property != null", span="655-655"];
d273 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", label="parameterCollection.AddProperty(property)", span="657-657"];
d287 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", label="JsonProperty property = new JsonProperty()", span="692-692"];
d290 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", label="bool allowNonPublicAccess", span="696-696"];
d292 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", label="property.Readable = false", span="699-699"];
d321 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", label="contract.IsReference = containerAttribute._isReference", span="749-749"];
d320 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", label="containerAttribute != null", span="747-747"];
d323 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", label="contract.InternalConverter = JsonSerializer.GetMatchingConverter(BuiltInConverters, contract.NonNullableUnderlyingType)", span="766-766"];
d312 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", span="731-731"];
d324 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", label="contract.IsInstantiable\r\n                && (ReflectionUtils.HasDefaultConstructor(contract.CreatedType, true) || contract.CreatedType.IsValueType())", span="768-769"];
d326 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", label="contract.DefaultCreatorNonPublic = (!contract.CreatedType.IsValueType() &&\r\n                                                    ReflectionUtils.GetDefaultConstructor(contract.CreatedType) == null)", span="773-774"];
d316 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", span="736-736"];
d328 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", span="744-744"];
d332 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", span="780-780"];
d337 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", label="List<SerializationErrorCallback> onError", span="786-786"];
d339 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", label="onSerializing != null", span="790-790"];
d340 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", label="contract.OnSerializingCallbacks.AddRange(onSerializing)", span="792-792"];
d341 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", label="onSerialized != null", span="795-795"];
d342 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", label="contract.OnSerializedCallbacks.AddRange(onSerialized)", span="797-797"];
d343 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", label="onDeserializing != null", span="800-800"];
d344 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", label="contract.OnDeserializingCallbacks.AddRange(onDeserializing)", span="802-802"];
d345 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", label="onDeserialized != null", span="805-805"];
d346 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", label="contract.OnDeserializedCallbacks.AddRange(onDeserialized)", span="807-807"];
d347 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", label="onError != null", span="810-810"];
d348 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", label="contract.OnErrorCallbacks.AddRange(onError)", span="812-812"];
d427 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", label="JsonDictionaryContract contract = new JsonDictionaryContract(objectType)", span="959-959"];
d432 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", label="contract.DictionaryKeyResolver = s => namingStrategy.GetDictionaryKey(s)", span="966-966"];
d435 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", label="overrideConstructor != null", span="975-975"];
d436 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", label="ParameterInfo[] parameters = overrideConstructor.GetParameters()", span="977-977"];
d443 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", label="contract.OverrideCreator = JsonTypeReflector.ReflectionDelegateFactory.CreateParameterizedConstructor(overrideConstructor)", span="995-995"];
d452 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", label="JsonArrayContract contract = new JsonArrayContract(objectType)", span="1008-1008"];
d455 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", label="overrideConstructor != null", span="1013-1013"];
d456 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", label="ParameterInfo[] parameters = overrideConstructor.GetParameters()", span="1015-1015"];
d463 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", label="contract.OverrideCreator = JsonTypeReflector.ReflectionDelegateFactory.CreateParameterizedConstructor(overrideConstructor)", span="1033-1033"];
d468 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", label="JsonPrimitiveContract contract = new JsonPrimitiveContract(objectType)", span="1046-1046"];
d470 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", label="return contract;", span="1049-1049"];
d474 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", label="JsonLinqContract contract = new JsonLinqContract(objectType)", span="1059-1059"];
d476 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", label="return contract;", span="1062-1062"];
d480 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", label="JsonStringContract contract = new JsonStringContract(objectType)", span="1123-1123"];
d482 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", label="return contract;", span="1126-1126"];
d485 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", span="1134-1134"];
d486 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", label="IsJsonPrimitiveType(objectType)", span="1136-1136"];
d505 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", span="1134-1134"];
d467 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", span="1044-1044"];
d490 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", label="containerAttribute is JsonObjectAttribute", span="1144-1144"];
d54 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", span="312-312"];
d492 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", label="containerAttribute is JsonArrayAttribute", span="1149-1149"];
d451 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", span="1006-1006"];
d494 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", label="containerAttribute is JsonDictionaryAttribute", span="1154-1154"];
d496 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", label="t == typeof(JToken) || t.IsSubclassOf(typeof(JToken))", span="1159-1159"];
d473 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", span="1057-1057"];
d498 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", label="CollectionUtils.IsDictionaryType(t)", span="1164-1164"];
d500 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", label="typeof(IEnumerable).IsAssignableFrom(t)", span="1169-1169"];
d479 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", span="1121-1121"];
d547 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", label="members == null", span="1308-1308"];
d551 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", label=members, span="1317-1317"];
d550 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", label="JsonPropertyCollection properties = new JsonPropertyCollection(type)", span="1315-1315"];
d560 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetNameTable()", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetNameTable()", span="1337-1337"];
d554 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", label=nameTable, span="1324-1324"];
d555 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", label="property.PropertyName = nameTable.Add(property.PropertyName)", span="1326-1326"];
d553 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", label="property != null", span="1321-1321"];
d561 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", span="1376-1376"];
d556 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", label="properties.AddProperty(property)", span="1329-1329"];
d569 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetNameTable()", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetNameTable()", span="1337-1337"];
d571 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", label="IValueProvider valueProvider", span="1350-1350"];
d573 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", label="valueProvider = new DynamicValueProvider(member)", span="1355-1355"];
d574 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", label="valueProvider = new ReflectionValueProvider(member)", span="1359-1359"];
d579 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", label="JsonProperty property = new JsonProperty()", span="1378-1378"];
d581 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", label="property.DeclaringType = member.DeclaringType", span="1380-1380"];
d583 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", label="property.AttributeProvider = new ReflectionAttributeProvider(member)", span="1382-1382"];
d570 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", span="1347-1347"];
d584 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", label="bool allowNonPublicAccess", span="1384-1384"];
d586 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", label="memberSerialization != MemberSerialization.Fields", span="1387-1387"];
d587 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", label="property.Readable = ReflectionUtils.CanReadMemberValue(member, allowNonPublicAccess)", span="1389-1389"];
d588 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", label="property.Writable = ReflectionUtils.CanSetMemberValue(member, allowNonPublicAccess, property.HasMemberAttribute)", span="1390-1390"];
d590 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", label="property.Writable = true", span="1396-1396"];
d596 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", span="1575-1575"];
d593 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", label="return property;", span="1402-1402"];
d597 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", span="1590-1590"];
d614 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", label="namingStrategy != null", span="1462-1462"];
d615 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", label="property.PropertyName = namingStrategy.GetPropertyName(mappedName, hasSpecifiedName)", span="1464-1464"];
d605 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", label="mappedName = name", span="1442-1442"];
d666 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", span="1618-1618"];
d656 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", label="allowNonPublicAccess = false", span="1558-1558"];
d658 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", label="allowNonPublicAccess = true", span="1562-1562"];
d694 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", label="return propertyName;", span="1625-1625"];
d695 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", span="1618-1618"];
d665 [cluster="Newtonsoft.Json.Serialization.NamingStrategy.GetPropertyName(string, bool)", label="Entry Newtonsoft.Json.Serialization.NamingStrategy.GetPropertyName(string, bool)", span="32-32"];
d696 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveExtensionDataName(string)", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveExtensionDataName(string)", span="1633-1633"];
d699 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveExtensionDataName(string)", label="return extensionDataName;", span="1640-1640"];
d700 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveExtensionDataName(string)", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveExtensionDataName(string)", span="1633-1633"];
d701 [cluster="Newtonsoft.Json.Serialization.NamingStrategy.GetExtensionDataName(string)", label="Entry Newtonsoft.Json.Serialization.NamingStrategy.GetExtensionDataName(string)", span="47-47"];
d702 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(string)", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(string)", span="1648-1648"];
d706 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(string)", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(string)", span="1648-1648"];
d109 [cluster="Newtonsoft.Json.Serialization.NamingStrategy.GetDictionaryKey(string)", label="Entry Newtonsoft.Json.Serialization.NamingStrategy.GetDictionaryKey(string)", span="62-62"];
d707 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)", span="1663-1663"];
d709 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)", span="1663-1663"];
d417 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", label="Type current = type", span="940-940"];
d423 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", span="936-936"];
d416 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", label="List<Type> ret = new List<Type>()", span="938-938"];
d122 [cluster="lambda expression", label="Exit lambda expression", span="401-408"];
d118 [cluster="lambda expression", label="IList<MemberInfo> m = new List<MemberInfo>()", span="403-403"];
d119 [cluster="lambda expression", label="m.AddRange(baseType.GetProperties(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly))", span="404-404"];
d120 [cluster="lambda expression", label="m.AddRange(baseType.GetFields(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly))", span="405-405"];
d369 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", label="onSerializing = onSerializing ?? new List<SerializationCallback>()", span="850-850"];
d371 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", label="currentOnSerializing = method", span="852-852"];
d373 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", label="onSerialized = onSerialized ?? new List<SerializationCallback>()", span="856-856"];
d375 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", label="currentOnSerialized = method", span="858-858"];
d377 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", label="onDeserializing = onDeserializing ?? new List<SerializationCallback>()", span="862-862"];
d379 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", label="currentOnDeserializing = method", span="864-864"];
d381 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", label="onDeserialized = onDeserialized ?? new List<SerializationCallback>()", span="868-868"];
d383 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", label="currentOnDeserialized = method", span="870-870"];
d385 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", label="onError = onError ?? new List<SerializationErrorCallback>()", span="874-874"];
d520 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", label="return false;", span="1246-1246"];
d535 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", label="return true;", span="1286-1286"];
d537 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", span="1289-1289"];
d538 [cluster="string.FormatWith(System.IFormatProvider, object, object, object, object)", label="Entry string.FormatWith(System.IFormatProvider, object, object, object, object)", span="62-62"];
d539 [cluster="string.FormatWith(System.IFormatProvider, object, object, object)", label="Entry string.FormatWith(System.IFormatProvider, object, object, object)", span="57-57"];
d447 [cluster="string.FormatWith(System.IFormatProvider, object, object)", label="Entry string.FormatWith(System.IFormatProvider, object, object)", span="52-52"];
d365 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", label="method.ContainsGenericParameters", span="840-840"];
d387 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", label="currentOnError = method", span="876-876"];
d391 [cluster="System.Type.GetMethods(System.Reflection.BindingFlags)", label="Entry System.Type.GetMethods(System.Reflection.BindingFlags)", span="0-0"];
d370 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", label="onSerializing.Add(JsonContract.CreateSerializationCallback(method))", span="851-851"];
d374 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", label="onSerialized.Add(JsonContract.CreateSerializationCallback(method))", span="857-857"];
d378 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", label="onDeserializing.Add(JsonContract.CreateSerializationCallback(method))", span="863-863"];
d382 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", label="onDeserialized.Add(JsonContract.CreateSerializationCallback(method))", span="869-869"];
d386 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", label="onError.Add(JsonContract.CreateSerializationErrorCallback(method))", span="875-875"];
d259 [cluster="System.Reflection.MethodBase.GetParameters()", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
d516 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", label="return true;", span="1236-1236"];
d517 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", label="return false;", span="1239-1239"];
d508 [cluster="System.Type.IsSubclassOf(System.Type)", label="Entry System.Type.IsSubclassOf(System.Type)", span="0-0"];
d489 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", label="JsonContainerAttribute containerAttribute = JsonTypeReflector.GetCachedAttribute<JsonContainerAttribute>(t)", span="1142-1142"];
d507 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.EnsureNotNullableType(System.Type)", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.EnsureNotNullableType(System.Type)", span="274-274"];
d129 [cluster="lambda expression", label="return false;", span="415-415"];
d131 [cluster="lambda expression", label="return false;", span="421-421"];
d140 [cluster="lambda expression", label="return true;", span="439-439"];
d128 [cluster="lambda expression", label="memberType != MemberTypes.Property && memberType != MemberTypes.Field", span="413-413"];
d143 [cluster="Unk.MemberType", label="Entry Unk.MemberType", span=""];
d144 [cluster="Unk.IsDefined", label="Entry Unk.IsDefined", span=""];
d145 [cluster="Unk.CanReadMemberValue", label="Entry Unk.CanReadMemberValue", span=""];
d135 [cluster="lambda expression", label="Type dictionaryType", span="431-431"];
d149 [cluster="Unk.GetMemberUnderlyingType", label="Entry Unk.GetMemberUnderlyingType", span=""];
d17 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", label="IEnumerable<MemberInfo> allMembers = ReflectionUtils.GetFieldsAndProperties(objectType, BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.Static)\r\n                .Where(m => !ReflectionUtils.IsIndexedProperty(m))", span="214-215"];
d24 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", label="serializableMembers.Add(member)", span="238-238"];
d30 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", label="serializableMembers.Add(member)", span="260-260"];
d35 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", label="return serializableMembers;", span="288-288"];
d43 [cluster="System.Collections.Generic.List<T>.Contains(T)", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
d18 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", label="List<MemberInfo> serializableMembers = new List<MemberInfo>()", span="217-217"];
d44 [cluster="System.Collections.Generic.List<T>.Add(T)", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
d16 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", label="MemberSerialization memberSerialization = JsonTypeReflector.GetObjectMemberSerialization(objectType, ignoreSerializableAttribute)", span="212-212"];
d46 [cluster="System.Reflection.MemberInfo.MemberType()", label="Entry System.Reflection.MemberInfo.MemberType()", span="107-107"];
d445 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", span="957-957"];
d97 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetContainerNamingStrategy(Newtonsoft.Json.JsonContainerAttribute)", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetContainerNamingStrategy(Newtonsoft.Json.JsonContainerAttribute)", span="212-212"];
d449 [cluster="lambda expression", label="namingStrategy.GetDictionaryKey(s)", span="966-966"];
d663 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", span="1405-1405"];
d633 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", label="property.NullValueHandling = null", span="1493-1493"];
d634 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", label="property.ReferenceLoopHandling = null", span="1494-1494"];
d635 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", label="property.ObjectCreationHandling = null", span="1495-1495"];
d636 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", label="property.TypeNameHandling = null", span="1496-1496"];
d637 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", label="property.IsReference = null", span="1497-1497"];
d638 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", label="property.ItemIsReference = null", span="1498-1498"];
d639 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", label="property.ItemConverter = null", span="1499-1499"];
d640 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", label="property.ItemReferenceLoopHandling = null", span="1500-1500"];
d641 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", label="property.ItemTypeNameHandling = null", span="1501-1501"];
d643 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", label="property._required = Required.Always", span="1515-1515"];
d651 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", label="property.Converter = JsonTypeReflector.GetJsonConverter(attributeProvider)", span="1549-1549"];
d661 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", label="memberSerialization == MemberSerialization.Fields", span="1569-1569"];
d601 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", label="bool hasSpecifiedName", span="1427-1427"];
d664 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.CreateNamingStrategyInstance(System.Type, object[])", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.CreateNamingStrategyInstance(System.Type, object[])", span="206-206"];
d623 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", label="hasMemberAttribute = true", span="1479-1479"];
d667 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.CreateJsonConverterInstance(System.Type, object[])", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.CreateJsonConverterInstance(System.Type, object[])", span="200-200"];
d644 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", label="hasMemberAttribute = true", span="1516-1516"];
d315 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(object)", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(object)", span="178-178"];
d660 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", label="allowNonPublicAccess = true", span="1567-1567"];
d351 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", label="onSerializing = null", span="818-818"];
d333 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", label="List<SerializationCallback> onSerializing", span="782-782"];
d334 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", label="List<SerializationCallback> onSerialized", span="783-783"];
d335 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", label="List<SerializationCallback> onDeserializing", span="784-784"];
d336 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", label="List<SerializationCallback> onDeserialized", span="785-785"];
d354 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", label="onDeserialized = null", span="821-821"];
d352 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", label="onSerialized = null", span="819-819"];
d353 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", label="onDeserializing = null", span="820-820"];
d7 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", label="throw new ArgumentNullException(nameof(type));", span="192-192"];
d36 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", span="203-203"];
d14 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", label="bool ignoreSerializableAttribute", span="205-205"];
d31 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", label=allMembers, span="278-278"];
d228 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", label="IEnumerator<ConstructorInfo> en = objectType.GetConstructors(BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).Where(c => c.IsDefined(typeof(JsonConstructorAttribute), true)).GetEnumerator()", span="559-559"];
d53 [cluster="lambda expression", label="Exit lambda expression", span="227-227"];
d52 [cluster="lambda expression", label="!ReflectionUtils.IsIndexedProperty(m)", span="227-227"];
d92 [cluster="Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", label="Entry Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", span="162-162"];
d62 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", label="JsonObjectAttribute attribute = JsonTypeReflector.GetCachedAttribute<JsonObjectAttribute>(contract.NonNullableUnderlyingType)", span="329-329"];
d64 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", label="contract.ItemRequired = attribute._itemRequired", span="332-332"];
d90 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", label="return contract;", span="396-396"];
d58 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", label="ignoreSerializableAttribute = true", span="321-321"];
d319 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", label="JsonContainerAttribute containerAttribute = JsonTypeReflector.GetCachedAttribute<JsonContainerAttribute>(contract.NonNullableUnderlyingType)", span="746-746"];
d37 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type, bool)", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type, bool)", span="151-151"];
d177 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="ExtensionDataGetter extensionDataGetter = o =>\r\n                {\r\n                    object dictionary = getExtensionDataDictionary(o);\r\n                    if (dictionary == null)\r\n                    {\r\n                        return null;\r\n                    }\r\n\r\n                    return (IEnumerable<KeyValuePair<object, object>>)createEnumerableWrapper(dictionary);\r\n                }", span="514-523"];
d67 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", label="extensionDataNameResolver = s => namingStrategy.GetDictionaryKey(s)", span="336-336"];
d559 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", span="1305-1305"];
d557 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", label="IList<JsonProperty> orderedProperties = properties.OrderBy(p => p.Order ?? -1).ToList()", span="1333-1333"];
d63 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", label="attribute != null", span="330-330"];
d65 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", label="attribute.NamingStrategyType != null", span="333-333"];
d275 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", span="639-639"];
d266 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", label="ParameterInfo[] constructorParameters = constructor.GetParameters()", span="641-641"];
d267 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", label="JsonPropertyCollection parameterCollection = new JsonPropertyCollection(constructor.DeclaringType)", span="643-643"];
d237 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", span="557-557"];
d234 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", label="objectType == typeof(Version)", span="573-573"];
d235 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", label="return objectType.GetConstructor(new[] { typeof(int), typeof(int), typeof(int), typeof(int) });", span="575-575"];
d230 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", label="ConstructorInfo conInfo = en.Current", span="563-563"];
d99 [cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateParameterizedConstructor(System.Reflection.MethodBase)", label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateParameterizedConstructor(System.Reflection.MethodBase)", span="73-73"];
d265 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParameterizedConstructor(System.Type)", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetParameterizedConstructor(System.Type)", span="610-610"];
d261 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParameterizedConstructor(System.Type)", label="ConstructorInfo[] constructors = objectType.GetConstructors(BindingFlags.Public | BindingFlags.Instance)", span="624-624"];
d102 [cluster="System.Type.IsValueType()", label="Entry System.Type.IsValueType()", span="535-535"];
d258 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)", span="581-581"];
d245 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)", label="IEnumerable<ConstructorInfo> constructors = objectType.GetConstructors()", span="583-583"];
d248 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)", label="ConstructorInfo constructor = en.Current", span="587-587"];
d180 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", span="449-449"];
d153 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="JsonExtensionDataAttribute extensionDataAttribute = ReflectionUtils.GetAttribute<JsonExtensionDataAttribute>(member)", span="451-451"];
d156 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="Type t = ReflectionUtils.GetMemberUnderlyingType(member)", span="457-457"];
d165 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="Func<object, object> getExtensionDataDictionary = JsonTypeReflector.ReflectionDelegateFactory.CreateGet<object>(member)", span="477-477"];
d167 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="Action<object, object> setExtensionDataDictionary = (ReflectionUtils.CanSetMemberValue(member, true, false))\r\n                 ? JsonTypeReflector.ReflectionDelegateFactory.CreateSet<object>(member)\r\n                 : null", span="481-483"];
d171 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="ExtensionDataSetter extensionDataSetter = (o, key, value) =>\r\n                {\r\n                    object dictionary = getExtensionDataDictionary(o);\r\n                    if (dictionary == null)\r\n                    {\r\n                        if (setExtensionDataDictionary == null)\r\n                        {\r\n                            throw new JsonSerializationException(''Cannot set value onto extension data member '{0}'. The extension data collection is null and it cannot be set.''.FormatWith(CultureInfo.InvariantCulture, member.Name));\r\n                        }\r\n\r\n                        dictionary = createExtensionDataDictionary();\r\n                        setExtensionDataDictionary(o, dictionary);\r\n                    }\r\n\r\n                    setExtensionDataDictionaryValue(dictionary, key, value);\r\n                }", span="488-503"];
d197 [cluster="lambda expression", label="throw new JsonSerializationException(''Cannot set value onto extension data member '{0}'. The extension data collection is null and it cannot be set.''.FormatWith(CultureInfo.InvariantCulture, member.Name));", span="495-495"];
d172 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="contract.ExtensionDataSetter = extensionDataSetter", span="505-505"];
d178 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="contract.ExtensionDataGetter = extensionDataGetter", span="525-525"];
d179 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="contract.ExtensionDataValueType = valueType", span="528-528"];
d232 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", label="throw new JsonException(''Multiple constructors with the JsonConstructorAttribute.'');", span="566-566"];
d442 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", label="throw new JsonException(''Constructor for '{0}' must have no parameters or a single parameter that implements '{1}'.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType, expectedParameterType));", span="992-992"];
d462 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", label="throw new JsonException(''Constructor for '{0}' must have no parameters or a single parameter that implements '{1}'.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType, expectedParameterType));", span="1030-1030"];
d137 [cluster="lambda expression", label="Type keyType = dictionaryType.GetGenericArguments()[0]", span="434-434"];
d150 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", span="298-298"];
d138 [cluster="lambda expression", label="Type valueType = dictionaryType.GetGenericArguments()[1]", span="435-435"];
d152 [cluster="System.Type.IsAssignableFrom(System.Type)", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
d250 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)", label="ParameterInfo[] parameters = constructor.GetParameters()", span="590-590"];
d251 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)", label="parameters.Length > 0", span="591-591"];
d256 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)", label="return constructor;", span="602-602"];
d255 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)", label="return null;", span="598-598"];
d285 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.MatchProperty(Newtonsoft.Json.Serialization.JsonPropertyCollection, string, System.Type)", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.MatchProperty(Newtonsoft.Json.Serialization.JsonPropertyCollection, string, System.Type)", span="665-665"];
d279 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.MatchProperty(Newtonsoft.Json.Serialization.JsonPropertyCollection, string, System.Type)", label="name == null", span="669-669"];
d281 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.MatchProperty(Newtonsoft.Json.Serialization.JsonPropertyCollection, string, System.Type)", label="JsonProperty property = properties.GetClosestMatchProperty(name)", span="674-674"];
d282 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.MatchProperty(Newtonsoft.Json.Serialization.JsonPropertyCollection, string, System.Type)", label="property == null || property.PropertyType != type", span="676-676"];
d274 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", label="return parameterCollection;", span="662-662"];
d308 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", span="690-690"];
d288 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", label="property.PropertyType = parameterInfo.ParameterType", span="693-693"];
d289 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", label="property.AttributeProvider = new ReflectionAttributeProvider(parameterInfo)", span="694-694"];
d294 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", label="matchingMemberProperty != null", span="703-703"];
d295 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", label="property.PropertyName = (property.PropertyName != parameterInfo.Name) ? property.PropertyName : matchingMemberProperty.PropertyName", span="705-705"];
d296 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", label="property.Converter = property.Converter ?? matchingMemberProperty.Converter", span="706-706"];
d297 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", label="property.MemberConverter = property.MemberConverter ?? matchingMemberProperty.MemberConverter", span="707-707"];
d298 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", label="!property._hasExplicitDefaultValue && matchingMemberProperty._hasExplicitDefaultValue", span="709-709"];
d299 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", label="property.DefaultValue = matchingMemberProperty.DefaultValue", span="711-711"];
d300 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", label="property._required = property._required ?? matchingMemberProperty._required", span="714-714"];
d301 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", label="property.IsReference = property.IsReference ?? matchingMemberProperty.IsReference", span="715-715"];
d302 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", label="property.NullValueHandling = property.NullValueHandling ?? matchingMemberProperty.NullValueHandling", span="716-716"];
d303 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", label="property.DefaultValueHandling = property.DefaultValueHandling ?? matchingMemberProperty.DefaultValueHandling", span="717-717"];
d304 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", label="property.ReferenceLoopHandling = property.ReferenceLoopHandling ?? matchingMemberProperty.ReferenceLoopHandling", span="718-718"];
d305 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", label="property.ObjectCreationHandling = property.ObjectCreationHandling ?? matchingMemberProperty.ObjectCreationHandling", span="719-719"];
d306 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", label="property.TypeNameHandling = property.TypeNameHandling ?? matchingMemberProperty.TypeNameHandling", span="720-720"];
d278 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", span="70-70"];
d309 [cluster="Newtonsoft.Json.Serialization.JsonProperty.JsonProperty()", label="Entry Newtonsoft.Json.Serialization.JsonProperty.JsonProperty()", span="38-38"];
d293 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", label="property.Writable = true", span="700-700"];
d307 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", label="return property;", span="723-723"];
d329 [cluster="Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type)", label="Entry Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type)", span="1164-1164"];
d314 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", span="731-731"];
d313 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", label="return JsonTypeReflector.GetJsonConverter(objectType);", span="733-733"];
d330 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", span="227-227"];
d331 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type)", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type)", span="239-239"];
d318 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", span="736-736"];
d317 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", label="return JsonTypeReflector.ReflectionDelegateFactory.CreateDefaultConstructor<object>(createdType);", span="738-738"];
d349 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", span="780-780"];
d446 [cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", label="Entry Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", span="115-115"];
d437 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", label="Type expectedParameterType = (contract.DictionaryKeyType != null && contract.DictionaryValueType != null)\r\n                    ? typeof(IEnumerable<>).MakeGenericType(typeof(KeyValuePair<,>).MakeGenericType(contract.DictionaryKeyType, contract.DictionaryValueType))\r\n                    : typeof(IDictionary)", span="978-980"];
d439 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", label="contract.HasParameterizedCreator = false", span="984-984"];
d441 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", label="contract.HasParameterizedCreator = true", span="988-988"];
d444 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", label="return contract;", span="998-998"];
d438 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", label="parameters.Length == 0", span="982-982"];
d440 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", label="parameters.Length == 1 && expectedParameterType.IsAssignableFrom(parameters[0].ParameterType)", span="986-986"];
d466 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", label="Entry Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", span="117-117"];
d457 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", label="Type expectedParameterType = (contract.CollectionItemType != null)\r\n                    ? typeof(IEnumerable<>).MakeGenericType(contract.CollectionItemType)\r\n                    : typeof(IEnumerable)", span="1016-1018"];
d459 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", label="contract.HasParameterizedCreator = false", span="1022-1022"];
d461 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", label="contract.HasParameterizedCreator = true", span="1026-1026"];
d464 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", label="return contract;", span="1036-1036"];
d458 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", label="parameters.Length == 0", span="1020-1020"];
d460 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", label="parameters.Length == 1 && expectedParameterType.IsAssignableFrom(parameters[0].ParameterType)", span="1024-1024"];
d472 [cluster="Newtonsoft.Json.Serialization.JsonPrimitiveContract.JsonPrimitiveContract(System.Type)", label="Entry Newtonsoft.Json.Serialization.JsonPrimitiveContract.JsonPrimitiveContract(System.Type)", span="42-42"];
d471 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", span="1044-1044"];
d478 [cluster="Newtonsoft.Json.Serialization.JsonLinqContract.JsonLinqContract(System.Type)", label="Entry Newtonsoft.Json.Serialization.JsonLinqContract.JsonLinqContract(System.Type)", span="38-38"];
d477 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", span="1057-1057"];
d484 [cluster="Newtonsoft.Json.Serialization.JsonStringContract.JsonStringContract(System.Type)", label="Entry Newtonsoft.Json.Serialization.JsonStringContract.JsonStringContract(System.Type)", span="38-38"];
d483 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", span="1121-1121"];
d506 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsJsonPrimitiveType(System.Type)", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.IsJsonPrimitiveType(System.Type)", span="1204-1204"];
d91 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", span="312-312"];
d465 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", span="1006-1006"];
d509 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", span="96-96"];
d548 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", label="throw new JsonSerializationException(''Null collection of serializable members returned.'');", span="1310-1310"];
d276 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(System.Type)", label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(System.Type)", span="46-46"];
d562 [cluster="Newtonsoft.Json.Utilities.PropertyNameTable.Add(string)", label="Entry Newtonsoft.Json.Utilities.PropertyNameTable.Add(string)", span="76-76"];
d594 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", span="1376-1376"];
d580 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", label="property.PropertyType = ReflectionUtils.GetMemberUnderlyingType(member)", span="1379-1379"];
d575 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", label="return valueProvider;", span="1367-1367"];
d577 [cluster="DynamicValueProvider.cstr", label="Entry DynamicValueProvider.cstr", span=""];
d578 [cluster="Newtonsoft.Json.Serialization.ReflectionValueProvider.ReflectionValueProvider(System.Reflection.MemberInfo)", label="Entry Newtonsoft.Json.Serialization.ReflectionValueProvider.ReflectionValueProvider(System.Reflection.MemberInfo)", span="43-43"];
d589 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", label="property.Readable = true", span="1395-1395"];
d310 [cluster="Newtonsoft.Json.Serialization.ReflectionAttributeProvider.ReflectionAttributeProvider(object)", label="Entry Newtonsoft.Json.Serialization.ReflectionAttributeProvider.ReflectionAttributeProvider(object)", span="43-43"];
d576 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", span="1347-1347"];
d595 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", span="562-562"];
d186 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", span="604-604"];
d673 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", span="1575-1575"];
d668 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", label="MethodInfo shouldSerializeMethod = member.DeclaringType.GetMethod(JsonTypeReflector.ShouldSerializePrefix + member.Name, ReflectionUtils.EmptyTypes)", span="1577-1577"];
d672 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", label="return o => (bool)shouldSerializeCall(o);", span="1587-1587"];
d686 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", span="1590-1590"];
d677 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", label="MemberInfo specifiedMember = member.DeclaringType.GetProperty(member.Name + JsonTypeReflector.SpecifiedPostfix)", span="1592-1592"];
d679 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", label="specifiedMember = member.DeclaringType.GetField(member.Name + JsonTypeReflector.SpecifiedPostfix)", span="1595-1595"];
d683 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", label="property.GetIsSpecified = o => (bool)specifiedPropertyGet(o)", span="1605-1605"];
d684 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", label="ReflectionUtils.CanSetMemberValue(specifiedMember, allowNonPublicAccess, false)", span="1607-1607"];
d685 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", label="property.SetIsSpecified = JsonTypeReflector.ReflectionDelegateFactory.CreateSet<object>(specifiedMember)", span="1609-1609"];
d107 [cluster="lambda expression", label="namingStrategy.GetDictionaryKey(s)", span="336-336"];
d418 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", label="current != null && current != typeof(object)", span="941-941"];
d419 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", label="ret.Add(current)", span="943-943"];
d420 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", label="current = current.BaseType()", span="944-944"];
d422 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", label="return ret;", span="949-949"];
d40 [cluster="System.Collections.Generic.List<T>.List()", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
d421 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", label="ret.Reverse()", span="948-948"];
d121 [cluster="lambda expression", label="return m;", span="407-407"];
d123 [cluster="Unk.GetProperties", label="Entry Unk.GetProperties", span=""];
d124 [cluster="Unk.AddRange", label="Entry Unk.AddRange", span=""];
d125 [cluster="Unk.GetFields", label="Entry Unk.GetFields", span=""];
d543 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", span="1289-1289"];
d540 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", label="type.IsGenericTypeDefinition() || !type.ContainsGenericParameters()", span="1291-1291"];
d541 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", label="return type.FullName;", span="1293-1293"];
d542 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", label="return ''{0}.{1}''.FormatWith(CultureInfo.InvariantCulture, type.Namespace, type.Name);", span="1296-1296"];
d393 [cluster="Newtonsoft.Json.Serialization.JsonContract.CreateSerializationCallback(System.Reflection.MethodInfo)", label="Entry Newtonsoft.Json.Serialization.JsonContract.CreateSerializationCallback(System.Reflection.MethodInfo)", span="306-306"];
d394 [cluster="Newtonsoft.Json.Serialization.JsonContract.CreateSerializationErrorCallback(System.Reflection.MethodInfo)", label="Entry Newtonsoft.Json.Serialization.JsonContract.CreateSerializationErrorCallback(System.Reflection.MethodInfo)", span="311-311"];
d96 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetCachedAttribute<T>(object)", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetCachedAttribute<T>(object)", span="66-66"];
d243 [cluster="lambda expression", label="c.IsDefined(typeof(JsonConstructorAttribute), true)", span="559-559"];
d47 [cluster="lambda expression", label="Entry lambda expression", span="215-215"];
d34 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", label="serializableMembers.Add(member)", span="283-283"];
d15 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", label="ignoreSerializableAttribute = true", span="209-209"];
d66 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", label="NamingStrategy namingStrategy = JsonTypeReflector.GetContainerNamingStrategy(attribute)", span="335-335"];
d719 [label=namingStrategy, span=""];
d448 [cluster="lambda expression", label="Entry lambda expression", span="966-966"];
d450 [cluster="lambda expression", label="Exit lambda expression", span="966-966"];
d662 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", label="allowNonPublicAccess = true", span="1571-1571"];
d10 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
d11 [cluster="Unk.nameof", label="Entry Unk.nameof", span=""];
d33 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", label="field != null && !field.IsStatic", span="281-281"];
d32 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", label="FieldInfo field = member as FieldInfo", span="280-280"];
d229 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", label="en.MoveNext()", span="561-561"];
d238 [cluster="System.Type.GetConstructors(System.Reflection.BindingFlags)", label="Entry System.Type.GetConstructors(System.Reflection.BindingFlags)", span="0-0"];
d239 [cluster="System.Collections.Generic.IEnumerable<T>.GetEnumerator()", label="Entry System.Collections.Generic.IEnumerable<T>.GetEnumerator()", span="0-0"];
d242 [cluster="lambda expression", label="Entry lambda expression", span="559-559"];
d231 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", label="en.MoveNext()", span="564-564"];
d50 [cluster="Unk.IsIndexedProperty", label="Entry Unk.IsIndexedProperty", span=""];
d176 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="ObjectConstructor<object> createEnumerableWrapper = JsonTypeReflector.ReflectionDelegateFactory.CreateParameterizedConstructor(constructors)", span="512-512"];
d209 [cluster="lambda expression", label="object dictionary = getExtensionDataDictionary(o)", span="516-516"];
d558 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", label="return orderedProperties;", span="1334-1334"];
d563 [cluster="Unk.OrderBy", label="Entry Unk.OrderBy", span=""];
d564 [cluster="Unk.ToList", label="Entry Unk.ToList", span=""];
d565 [cluster="lambda expression", label="Entry lambda expression", span="1333-1333"];
d233 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", label="return conInfo;", span="569-569"];
d236 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", label="return null;", span="578-578"];
d241 [cluster="System.Type.GetConstructor(System.Type[])", label="Entry System.Type.GetConstructor(System.Type[])", span="0-0"];
d263 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParameterizedConstructor(System.Type)", label="return constructors[0];", span="627-627"];
d264 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParameterizedConstructor(System.Type)", label="return null;", span="630-630"];
d262 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParameterizedConstructor(System.Type)", label="constructors.Length == 1", span="625-625"];
d215 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.EnumerableDictionaryWrapper(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TEnumeratorKey, TEnumeratorValue>>)", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.EnumerableDictionaryWrapper(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TEnumeratorKey, TEnumeratorValue>>)", span="537-537"];
d257 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)", label="return null;", span="607-607"];
d246 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)", label="IEnumerator<ConstructorInfo> en = constructors.GetEnumerator()", span="584-584"];
d191 [cluster="System.Type.GetConstructors()", label="Entry System.Type.GetConstructors()", span="0-0"];
d247 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)", label="en.MoveNext()", span="585-585"];
d249 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)", label="!en.MoveNext()", span="588-588"];
d155 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="return;", span="454-454"];
d154 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="extensionDataAttribute == null", span="452-452"];
d181 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object)", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object)", span="728-728"];
d166 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="extensionDataAttribute.ReadData", span="479-479"];
d173 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="extensionDataAttribute.WriteData", span="508-508"];
d161 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="Type createdType", span="465-465"];
d157 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="Type dictionaryType", span="459-459"];
d182 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", span="445-445"];
d158 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="ReflectionUtils.ImplementsGenericDefinition(t, typeof(IDictionary<,>), out dictionaryType)", span="460-460"];
d162 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="ReflectionUtils.IsGenericDefinition(t, typeof(IDictionary<,>))", span="468-468"];
d164 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="createdType = t", span="474-474"];
d169 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="MethodInfo addMethod = t.GetMethod(''Add'', new[] { keyType, valueType })", span="485-485"];
d163 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="createdType = typeof(Dictionary<,>).MakeGenericType(keyType, valueType)", span="470-470"];
d185 [cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateGet<T>(System.Reflection.MemberInfo)", label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateGet<T>(System.Reflection.MemberInfo)", span="38-38"];
d194 [cluster="lambda expression", label="object dictionary = getExtensionDataDictionary(o)", span="490-490"];
d168 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="Func<object> createExtensionDataDictionary = JsonTypeReflector.ReflectionDelegateFactory.CreateDefaultConstructor<object>(createdType)", span="484-484"];
d187 [cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateSet<T>(System.Reflection.MemberInfo)", label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateSet<T>(System.Reflection.MemberInfo)", span="55-55"];
d196 [cluster="lambda expression", label="setExtensionDataDictionary == null", span="493-493"];
d199 [cluster="lambda expression", label="setExtensionDataDictionary(o, dictionary)", span="499-499"];
d170 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="MethodCall<object, object> setExtensionDataDictionaryValue = JsonTypeReflector.ReflectionDelegateFactory.CreateMethodCall<object>(addMethod)", span="486-486"];
d200 [cluster="lambda expression", label="setExtensionDataDictionaryValue(dictionary, key, value)", span="502-502"];
d714 [label="System.Reflection.MemberInfo", span=""];
d201 [cluster="lambda expression", label="Exit lambda expression", span="488-503"];
d203 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="52-52"];
d204 [cluster="string.FormatWith(System.IFormatProvider, object)", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
d160 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="Type valueType = dictionaryType.GetGenericArguments()[1]", span="463-463"];
d151 [cluster="System.Type.GetGenericArguments()", label="Entry System.Type.GetGenericArguments()", span="0-0"];
d280 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.MatchProperty(Newtonsoft.Json.Serialization.JsonPropertyCollection, string, System.Type)", label="return null;", span="671-671"];
d284 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.MatchProperty(Newtonsoft.Json.Serialization.JsonPropertyCollection, string, System.Type)", label="return property;", span="681-681"];
d283 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.MatchProperty(Newtonsoft.Json.Serialization.JsonPropertyCollection, string, System.Type)", label="return null;", span="678-678"];
d286 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)", label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)", span="125-125"];
d188 [cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", span="74-74"];
d184 [cluster="System.Type.MakeGenericType(params System.Type[])", label="Entry System.Type.MakeGenericType(params System.Type[])", span="0-0"];
d513 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsJsonPrimitiveType(System.Type)", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.IsJsonPrimitiveType(System.Type)", span="1204-1204"];
d511 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsJsonPrimitiveType(System.Type)", label="PrimitiveTypeCode typeCode = ConvertUtils.GetTypeCode(t)", span="1206-1206"];
d670 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", label="return null;", span="1581-1581"];
d669 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", label="shouldSerializeMethod == null || shouldSerializeMethod.ReturnType != typeof(bool)", span="1579-1579"];
d189 [cluster="System.Type.GetMethod(string, System.Type[])", label="Entry System.Type.GetMethod(string, System.Type[])", span="0-0"];
d671 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", label="MethodCall<object, object> shouldSerializeCall =\r\n                JsonTypeReflector.ReflectionDelegateFactory.CreateMethodCall<object>(shouldSerializeMethod)", span="1584-1585"];
d675 [cluster="lambda expression", label="(bool)shouldSerializeCall(o)", span="1587-1587"];
d681 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", label="return;", span="1600-1600"];
d678 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", label="specifiedMember == null", span="1593-1593"];
d687 [cluster="System.Type.GetProperty(string)", label="Entry System.Type.GetProperty(string)", span="0-0"];
d680 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", label="specifiedMember == null || ReflectionUtils.GetMemberUnderlyingType(specifiedMember) != typeof(bool)", span="1598-1598"];
d682 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", label="Func<object, object> specifiedPropertyGet = JsonTypeReflector.ReflectionDelegateFactory.CreateGet<object>(specifiedMember)", span="1603-1603"];
d688 [cluster="System.Type.GetField(string)", label="Entry System.Type.GetField(string)", span="0-0"];
d690 [cluster="lambda expression", label="(bool)specifiedPropertyGet(o)", span="1605-1605"];
d711 [label=namingStrategy, span=""];
d106 [cluster="lambda expression", label="Entry lambda expression", span="336-336"];
d108 [cluster="lambda expression", label="Exit lambda expression", span="336-336"];
d424 [cluster="System.Type.BaseType()", label="Entry System.Type.BaseType()", span="171-171"];
d425 [cluster="System.Collections.Generic.List<T>.Reverse()", label="Entry System.Collections.Generic.List<T>.Reverse()", span="0-0"];
d544 [cluster="System.Type.IsGenericTypeDefinition()", label="Entry System.Type.IsGenericTypeDefinition()", span="162-162"];
d545 [cluster="System.Type.ContainsGenericParameters()", label="Entry System.Type.ContainsGenericParameters()", span="135-135"];
d244 [cluster="lambda expression", label="Exit lambda expression", span="559-559"];
d49 [cluster="lambda expression", label="Exit lambda expression", span="215-215"];
d48 [cluster="lambda expression", label="!ReflectionUtils.IsIndexedProperty(m)", span="215-215"];
d216 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.EnumerableDictionaryWrapper(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TEnumeratorKey, TEnumeratorValue>>)", label="ValidationUtils.ArgumentNotNull(e, nameof(e))", span="539-539"];
d240 [cluster="System.Collections.IEnumerator.MoveNext()", label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0"];
d175 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="ConstructorInfo constructors = enumerableWrapper.GetConstructors().First()", span="511-511"];
d212 [cluster="lambda expression", label="return (IEnumerable<KeyValuePair<object, object>>)createEnumerableWrapper(dictionary);", span="522-522"];
d712 [label=getExtensionDataDictionary, span=""];
d208 [cluster="lambda expression", label="Entry lambda expression", span="514-523"];
d210 [cluster="lambda expression", label="dictionary == null", span="517-517"];
d202 [cluster="Newtonsoft.Json.Serialization.Func<T, TResult>.Invoke(T)", label="Entry Newtonsoft.Json.Serialization.Func<T, TResult>.Invoke(T)", span="3040-3040"];
d567 [cluster="lambda expression", label="Exit lambda expression", span="1333-1333"];
d566 [cluster="lambda expression", label="p.Order ?? -1", span="1333-1333"];
d218 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.EnumerableDictionaryWrapper(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TEnumeratorKey, TEnumeratorValue>>)", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.EnumerableDictionaryWrapper(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TEnumeratorKey, TEnumeratorValue>>)", span="537-537"];
d217 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.EnumerableDictionaryWrapper(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TEnumeratorKey, TEnumeratorValue>>)", label="_e = e", span="540-540"];
d174 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="Type enumerableWrapper = typeof(EnumerableDictionaryWrapper<,>).MakeGenericType(keyType, valueType)", span="510-510"];
d159 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="Type keyType = dictionaryType.GetGenericArguments()[0]", span="462-462"];
d183 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", span="281-281"];
d193 [cluster="lambda expression", label="Entry lambda expression", span="488-503"];
d195 [cluster="lambda expression", label="dictionary == null", span="491-491"];
d198 [cluster="lambda expression", label="dictionary = createExtensionDataDictionary()", span="498-498"];
d713 [label=setExtensionDataDictionary, span=""];
d206 [cluster="Newtonsoft.Json.Serialization.Action<T1, T2>.Invoke(T1, T2)", label="Entry Newtonsoft.Json.Serialization.Action<T1, T2>.Invoke(T1, T2)", span="3050-3050"];
d190 [cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", span="72-72"];
d716 [label=setExtensionDataDictionaryValue, span=""];
d207 [cluster="Newtonsoft.Json.Utilities.MethodCall<T, TResult>.Invoke(T, params object[])", label="Entry Newtonsoft.Json.Utilities.MethodCall<T, TResult>.Invoke(T, params object[])", span="27-27"];
d512 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsJsonPrimitiveType(System.Type)", label="return (typeCode != PrimitiveTypeCode.Empty && typeCode != PrimitiveTypeCode.Object);", span="1208-1208"];
d514 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type)", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type)", span="185-185"];
d720 [label=shouldSerializeCall, span=""];
d674 [cluster="lambda expression", label="Entry lambda expression", span="1587-1587"];
d676 [cluster="lambda expression", label="Exit lambda expression", span="1587-1587"];
d721 [label=specifiedPropertyGet, span=""];
d689 [cluster="lambda expression", label="Entry lambda expression", span="1605-1605"];
d691 [cluster="lambda expression", label="Exit lambda expression", span="1605-1605"];
d219 [cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="31-31"];
d192 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="391-391"];
d717 [label=createEnumerableWrapper, span=""];
d213 [cluster="lambda expression", label="Exit lambda expression", span="514-523"];
d214 [cluster="Newtonsoft.Json.Serialization.ObjectConstructor<T>.Invoke(params object[])", label="Entry Newtonsoft.Json.Serialization.ObjectConstructor<T>.Invoke(params object[])", span="31-31"];
d211 [cluster="lambda expression", label="return null;", span="519-519"];
d718 [label="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>", span=""];
d715 [label=createExtensionDataDictionary, span=""];
d205 [cluster="Newtonsoft.Json.Serialization.Func<TResult>.Invoke()", label="Entry Newtonsoft.Json.Serialization.Func<TResult>.Invoke()", span="3038-3038"];
d221 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.GetEnumerator()", label=_e, span="545-545"];
d226 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.System.Collections.IEnumerable.GetEnumerator()", label="return GetEnumerator();", span="553-553"];
d220 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.GetEnumerator()", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.GetEnumerator()", span="543-543"];
d222 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.GetEnumerator()", label="yield return new KeyValuePair<object, object>(item.Key, item.Value);", span="547-547"];
d223 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.GetEnumerator()", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.GetEnumerator()", span="543-543"];
d225 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.System.Collections.IEnumerable.GetEnumerator()", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.System.Collections.IEnumerable.GetEnumerator()", span="551-551"];
d227 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.System.Collections.IEnumerable.GetEnumerator()", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.System.Collections.IEnumerable.GetEnumerator()", span="551-551"];
d224 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m1_10 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="Program.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m1_16 [cluster="string.Join(string, params string[])", file="Program.cs", label="Entry string.Join(string, params string[])", span="0-0"];
m1_15 [cluster="System.Collections.Generic.List<T>.ToArray()", file="Program.cs", label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0"];
m1_9 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.PopulateObject.Account.Account()", file="Program.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.PopulateObject.Account.Account()", span="47-47"];
m1_0 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.PopulateObject.Example()", file="Program.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.PopulateObject.Example()", span="57-57"];
m1_1 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.PopulateObject.Example()", file="Program.cs", label="Account account = new Account\r\n            {\r\n                Email = ''james@example.com'',\r\n                Active = true,\r\n                CreatedDate = new DateTime(2013, 1, 20, 0, 0, 0, DateTimeKind.Utc),\r\n                Roles = new List<string>\r\n                {\r\n                    ''User'',\r\n                    ''Admin''\r\n                }\r\n            }", span="60-70"];
m1_2 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.PopulateObject.Example()", file="Program.cs", label="string json = @''{\r\n              'Active': false,\r\n              'Roles': [\r\n                'Expired'\r\n              ]\r\n            }''", span="72-77"];
m1_3 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.PopulateObject.Example()", file="Program.cs", label="JsonConvert.PopulateObject(json, account)", span="79-79"];
m1_4 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.PopulateObject.Example()", file="Program.cs", label="Console.WriteLine(account.Email)", span="81-81"];
m1_5 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.PopulateObject.Example()", file="Program.cs", label="Console.WriteLine(account.Active)", span="84-84"];
m1_6 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.PopulateObject.Example()", file="Program.cs", label="Console.WriteLine(string.Join('', '', account.Roles.ToArray()))", span="87-87"];
m1_7 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.PopulateObject.Example()", file="Program.cs", label="Assert.AreEqual(''User, Admin, Expired'', string.Join('', '', account.Roles.ToArray()))", span="91-91"];
m1_8 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.PopulateObject.Example()", file="Program.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Serializer.PopulateObject.Example()", span="57-57"];
m1_14 [cluster="System.Console.WriteLine(bool)", file="Program.cs", label="Entry System.Console.WriteLine(bool)", span="0-0"];
m1_12 [cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", file="Program.cs", label="Entry Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", span="924-924"];
m1_11 [cluster="System.Collections.Generic.List<T>.List()", file="Program.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m1_13 [cluster="System.Console.WriteLine(string)", file="Program.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m2_33 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool)", span="127-127"];
m2_0 [cluster="Newtonsoft.Json.Tests.JavaScriptConvertTest.EscapeJavaScriptString()", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Tests.JavaScriptConvertTest.EscapeJavaScriptString()", span="11-11"];
m2_1 [cluster="Newtonsoft.Json.Tests.JavaScriptConvertTest.EscapeJavaScriptString()", file="ReflectionUtils.cs", label="string result", span="13-13"];
m2_2 [cluster="Newtonsoft.Json.Tests.JavaScriptConvertTest.EscapeJavaScriptString()", file="ReflectionUtils.cs", label="result = JavaScriptUtils.ToEscapedJavaScriptString(''How now brown cow?'', '''', true)", span="15-15"];
m2_3 [cluster="Newtonsoft.Json.Tests.JavaScriptConvertTest.EscapeJavaScriptString()", file="ReflectionUtils.cs", label="Assert.AreEqual(@''''''How now brown cow?'''''', result)", span="16-16"];
m2_4 [cluster="Newtonsoft.Json.Tests.JavaScriptConvertTest.EscapeJavaScriptString()", file="ReflectionUtils.cs", label="result = JavaScriptUtils.ToEscapedJavaScriptString(''How now 'brown' cow?'', '''', true)", span="18-18"];
m2_5 [cluster="Newtonsoft.Json.Tests.JavaScriptConvertTest.EscapeJavaScriptString()", file="ReflectionUtils.cs", label="Assert.AreEqual(@''''''How now 'brown' cow?'''''', result)", span="19-19"];
m2_6 [cluster="Newtonsoft.Json.Tests.JavaScriptConvertTest.EscapeJavaScriptString()", file="ReflectionUtils.cs", label="result = JavaScriptUtils.ToEscapedJavaScriptString(''How now <brown> cow?'', '''', true)", span="21-21"];
m2_7 [cluster="Newtonsoft.Json.Tests.JavaScriptConvertTest.EscapeJavaScriptString()", file="ReflectionUtils.cs", label="Assert.AreEqual(@''''''How now <brown> cow?'''''', result)", span="22-22"];
m2_8 [cluster="Newtonsoft.Json.Tests.JavaScriptConvertTest.EscapeJavaScriptString()", file="ReflectionUtils.cs", label="result = JavaScriptUtils.ToEscapedJavaScriptString(@''How \r\nnow brown cow?'', '''', true)", span="24-25"];
m2_9 [cluster="Newtonsoft.Json.Tests.JavaScriptConvertTest.EscapeJavaScriptString()", file="ReflectionUtils.cs", label="Assert.AreEqual(@''''''How \r\nnow brown cow?'''''', result)", span="26-26"];
m2_10 [cluster="Newtonsoft.Json.Tests.JavaScriptConvertTest.EscapeJavaScriptString()", file="ReflectionUtils.cs", label="result = JavaScriptUtils.ToEscapedJavaScriptString(''\u0000\u0001\u0002\u0003\u0004\u0005\u0006\u0007'', '''', true)", span="28-28"];
m2_11 [cluster="Newtonsoft.Json.Tests.JavaScriptConvertTest.EscapeJavaScriptString()", file="ReflectionUtils.cs", label="Assert.AreEqual(@''''''\u0000\u0001\u0002\u0003\u0004\u0005\u0006\u0007'''''', result)", span="29-29"];
m2_12 [cluster="Newtonsoft.Json.Tests.JavaScriptConvertTest.EscapeJavaScriptString()", file="ReflectionUtils.cs", label="result =\r\n        JavaScriptUtils.ToEscapedJavaScriptString(''\b\t\n\u000b\f\r\u000e\u000f\u0010\u0011\u0012\u0013'', '''', true)", span="31-32"];
m2_13 [cluster="Newtonsoft.Json.Tests.JavaScriptConvertTest.EscapeJavaScriptString()", file="ReflectionUtils.cs", label="Assert.AreEqual(@''''''\b\t\n\u000b\f\r\u000e\u000f\u0010\u0011\u0012\u0013'''''', result)", span="33-33"];
m2_14 [cluster="Newtonsoft.Json.Tests.JavaScriptConvertTest.EscapeJavaScriptString()", file="ReflectionUtils.cs", label="result =\r\n        JavaScriptUtils.ToEscapedJavaScriptString(\r\n          ''\u0014\u0015\u0016\u0017\u0018\u0019\u001a\u001b\u001c\u001d\u001e\u001f '', '''', true)", span="35-37"];
m2_15 [cluster="Newtonsoft.Json.Tests.JavaScriptConvertTest.EscapeJavaScriptString()", file="ReflectionUtils.cs", label="Assert.AreEqual(@''''''\u0014\u0015\u0016\u0017\u0018\u0019\u001a\u001b\u001c\u001d\u001e\u001f '''''', result)", span="38-38"];
m2_16 [cluster="Newtonsoft.Json.Tests.JavaScriptConvertTest.EscapeJavaScriptString()", file="ReflectionUtils.cs", label="result =\r\n        JavaScriptUtils.ToEscapedJavaScriptString(\r\n          ''!\''#$%&\u0027()*+,-./0123456789:;\u003c=\u003e?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]'', '''', true)", span="40-42"];
m2_17 [cluster="Newtonsoft.Json.Tests.JavaScriptConvertTest.EscapeJavaScriptString()", file="ReflectionUtils.cs", label="Assert.AreEqual(@''''''!\''''#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]'''''', result)", span="43-43"];
m2_18 [cluster="Newtonsoft.Json.Tests.JavaScriptConvertTest.EscapeJavaScriptString()", file="ReflectionUtils.cs", label="result = JavaScriptUtils.ToEscapedJavaScriptString(''^_`abcdefghijklmnopqrstuvwxyz{|}~'', '''', true)", span="45-45"];
m2_19 [cluster="Newtonsoft.Json.Tests.JavaScriptConvertTest.EscapeJavaScriptString()", file="ReflectionUtils.cs", label="Assert.AreEqual(@''''''^_`abcdefghijklmnopqrstuvwxyz{|}~'''''', result)", span="46-46"];
m2_22 [cluster="Newtonsoft.Json.Tests.JavaScriptConvertTest.EscapeJavaScriptString()", file="ReflectionUtils.cs", label="result = JavaScriptUtils.ToEscapedJavaScriptString(data, '''', true)", span="53-53"];
m2_23 [cluster="Newtonsoft.Json.Tests.JavaScriptConvertTest.EscapeJavaScriptString()", file="ReflectionUtils.cs", label="Assert.AreEqual(expected, result)", span="54-54"];
m2_24 [cluster="Newtonsoft.Json.Tests.JavaScriptConvertTest.EscapeJavaScriptString()", file="ReflectionUtils.cs", label="result = JavaScriptUtils.ToEscapedJavaScriptString(''Fred's cat.'', '\'', true)", span="56-56"];
m2_25 [cluster="Newtonsoft.Json.Tests.JavaScriptConvertTest.EscapeJavaScriptString()", file="ReflectionUtils.cs", label="Assert.AreEqual(result, @'''Fred\'s cat.''')", span="57-57"];
m2_26 [cluster="Newtonsoft.Json.Tests.JavaScriptConvertTest.EscapeJavaScriptString()", file="ReflectionUtils.cs", label="result = JavaScriptUtils.ToEscapedJavaScriptString(@''''''How are you gentlemen?'''' said Cats.'', '''', true)", span="59-59"];
m2_27 [cluster="Newtonsoft.Json.Tests.JavaScriptConvertTest.EscapeJavaScriptString()", file="ReflectionUtils.cs", label="Assert.AreEqual(result, @''''''\''''How are you gentlemen?\'''' said Cats.'''''')", span="60-60"];
m2_28 [cluster="Newtonsoft.Json.Tests.JavaScriptConvertTest.EscapeJavaScriptString()", file="ReflectionUtils.cs", label="result = JavaScriptUtils.ToEscapedJavaScriptString(@''''''How are' you gentlemen?'''' said Cats.'', '''', true)", span="62-62"];
m2_29 [cluster="Newtonsoft.Json.Tests.JavaScriptConvertTest.EscapeJavaScriptString()", file="ReflectionUtils.cs", label="Assert.AreEqual(result, @''''''\''''How are' you gentlemen?\'''' said Cats.'''''')", span="63-63"];
m2_30 [cluster="Newtonsoft.Json.Tests.JavaScriptConvertTest.EscapeJavaScriptString()", file="ReflectionUtils.cs", label="result = JavaScriptUtils.ToEscapedJavaScriptString(@''Fred's ''''cat''''.'', '\'', true)", span="65-65"];
m2_31 [cluster="Newtonsoft.Json.Tests.JavaScriptConvertTest.EscapeJavaScriptString()", file="ReflectionUtils.cs", label="Assert.AreEqual(result, @'''Fred\'s ''''cat''''.''')", span="66-66"];
m2_32 [cluster="Newtonsoft.Json.Tests.JavaScriptConvertTest.EscapeJavaScriptString()", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Tests.JavaScriptConvertTest.EscapeJavaScriptString()", span="11-11"];
m3_10 [cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)", file="ThreadSafeStore.cs", label="!_store.TryGetValue(key, out value)", span="66-66"];
m3_11 [cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)", file="ThreadSafeStore.cs", label="return AddValue(key);", span="68-68"];
m3_9 [cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)", file="ThreadSafeStore.cs", label="TValue value", span="65-65"];
m3_12 [cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)", file="ThreadSafeStore.cs", label="return value;", span="71-71"];
m3_13 [cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)", file="ThreadSafeStore.cs", label="Exit Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)", span="60-60"];
m3_15 [cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.AddValue(TKey)", file="ThreadSafeStore.cs", label="Entry Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.AddValue(TKey)", span="76-76"];
m3_16 [cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.AddValue(TKey)", file="ThreadSafeStore.cs", label="TValue value = _creator(key)", span="78-78"];
m3_17 [cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.AddValue(TKey)", file="ThreadSafeStore.cs", label=_lock, span="80-80"];
m3_18 [cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.AddValue(TKey)", file="ThreadSafeStore.cs", label="_store == null", span="82-82"];
m3_19 [cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.AddValue(TKey)", file="ThreadSafeStore.cs", label="_store = new Dictionary<TKey, TValue>()", span="84-84"];
m3_20 [cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.AddValue(TKey)", file="ThreadSafeStore.cs", label="_store[key] = value", span="85-85"];
m3_22 [cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.AddValue(TKey)", file="ThreadSafeStore.cs", label="_store.TryGetValue(key, out checkValue)", span="91-91"];
m3_24 [cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.AddValue(TKey)", file="ThreadSafeStore.cs", label="Dictionary<TKey, TValue> newStore = new Dictionary<TKey, TValue>(_store)", span="96-96"];
m3_26 [cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.AddValue(TKey)", file="ThreadSafeStore.cs", label="_store = newStore", span="102-102"];
m3_25 [cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.AddValue(TKey)", file="ThreadSafeStore.cs", label="newStore[key] = value", span="97-97"];
m3_27 [cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.AddValue(TKey)", file="ThreadSafeStore.cs", label="return value;", span="105-105"];
m3_21 [cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.AddValue(TKey)", file="ThreadSafeStore.cs", label="TValue checkValue", span="90-90"];
m3_23 [cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.AddValue(TKey)", file="ThreadSafeStore.cs", label="return checkValue;", span="93-93"];
m3_28 [cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.AddValue(TKey)", file="ThreadSafeStore.cs", label="Exit Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.AddValue(TKey)", span="76-76"];
m3_14 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="ThreadSafeStore.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m3_6 [cluster="Unk.ArgumentNotNull", file="ThreadSafeStore.cs", label="Entry Unk.ArgumentNotNull", span=""];
m3_29 [cluster="Unk._creator", file="ThreadSafeStore.cs", label="Entry Unk._creator", span=""];
m3_30 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="ThreadSafeStore.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m3_5 [cluster="Unk.nameof", file="ThreadSafeStore.cs", label="Entry Unk.nameof", span=""];
m3_7 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ThreadSafeStore.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m3_0 [cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.ThreadSafeStore(Newtonsoft.Json.Serialization.Func<TKey, TValue>)", file="ThreadSafeStore.cs", label="Entry Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.ThreadSafeStore(Newtonsoft.Json.Serialization.Func<TKey, TValue>)", span="48-48"];
m3_1 [cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.ThreadSafeStore(Newtonsoft.Json.Serialization.Func<TKey, TValue>)", color=green, community=0, file="ThreadSafeStore.cs", label="ValidationUtils.ArgumentNotNull(creator, nameof(creator))", prediction=2, span="50-50"];
m3_2 [cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.ThreadSafeStore(Newtonsoft.Json.Serialization.Func<TKey, TValue>)", file="ThreadSafeStore.cs", label="_creator = creator", span="52-52"];
m3_3 [cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.ThreadSafeStore(Newtonsoft.Json.Serialization.Func<TKey, TValue>)", file="ThreadSafeStore.cs", label="_store = new Dictionary<TKey, TValue>()", span="56-56"];
m3_4 [cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.ThreadSafeStore(Newtonsoft.Json.Serialization.Func<TKey, TValue>)", file="ThreadSafeStore.cs", label="Exit Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.ThreadSafeStore(Newtonsoft.Json.Serialization.Func<TKey, TValue>)", span="48-48"];
m3_31 [file="ThreadSafeStore.cs", label="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>", span=""];
m4_12 [cluster="Newtonsoft.Json.Linq.JsonPath.FieldFilter.FieldFilter()", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.FieldFilter.FieldFilter()", span="6-6"];
m4_14 [cluster="Newtonsoft.Json.Linq.JsonPath.CompositeExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.CompositeExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", span="35-35"];
m4_13 [cluster="Newtonsoft.Json.Linq.JObject.JObject()", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject()", span="88-88"];
m4_15 [cluster="Unk.IsTrue", file="TypeExtensions.cs", label="Entry Unk.IsTrue", span=""];
m4_11 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.BooleanQueryExpression()", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.BooleanQueryExpression()", span="59-59"];
m4_16 [cluster="Unk.IsFalse", file="TypeExtensions.cs", label="Entry Unk.IsFalse", span=""];
m4_17 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.QueryExpressionTests.OrExpressionTest()", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.QueryExpressionTests.OrExpressionTest()", span="77-77"];
m4_18 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.QueryExpressionTests.OrExpressionTest()", file="TypeExtensions.cs", label="CompositeExpression compositeExpression = new CompositeExpression\r\n            {\r\n                Operator = QueryOperator.Or,\r\n                Expressions = new List<QueryExpression>\r\n                {\r\n                    new BooleanQueryExpression\r\n                    {\r\n                        Operator = QueryOperator.Exists,\r\n                        Path = new List<PathFilter>\r\n                        {\r\n                            new FieldFilter\r\n                            {\r\n                                Name = ''FirstName''\r\n                            }\r\n                        }\r\n                    },\r\n                    new BooleanQueryExpression\r\n                    {\r\n                        Operator = QueryOperator.Exists,\r\n                        Path = new List<PathFilter>\r\n                        {\r\n                            new FieldFilter\r\n                            {\r\n                                Name = ''LastName''\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }", span="79-107"];
m4_19 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.QueryExpressionTests.OrExpressionTest()", file="TypeExtensions.cs", label="JObject o1 = new JObject\r\n            {\r\n                {''Title'',''Title!''},\r\n                {''FirstName'', ''FirstName!''},\r\n                {''LastName'', ''LastName!''}\r\n            }", span="109-114"];
m4_20 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.QueryExpressionTests.OrExpressionTest()", file="TypeExtensions.cs", label="Assert.IsTrue(compositeExpression.IsMatch(o1))", span="116-116"];
m4_22 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.QueryExpressionTests.OrExpressionTest()", file="TypeExtensions.cs", label="Assert.IsTrue(compositeExpression.IsMatch(o2))", span="124-124"];
m4_24 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.QueryExpressionTests.OrExpressionTest()", file="TypeExtensions.cs", label="Assert.IsFalse(compositeExpression.IsMatch(o3))", span="131-131"];
m4_21 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.QueryExpressionTests.OrExpressionTest()", file="TypeExtensions.cs", label="JObject o2 = new JObject\r\n            {\r\n                {''Title'',''Title!''},\r\n                {''FirstName'', ''FirstName!''}\r\n            }", span="118-122"];
m4_23 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.QueryExpressionTests.OrExpressionTest()", file="TypeExtensions.cs", label="JObject o3 = new JObject\r\n            {\r\n                {''Title'',''Title!''}\r\n            }", span="126-129"];
m4_25 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.QueryExpressionTests.OrExpressionTest()", file="TypeExtensions.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.QueryExpressionTests.OrExpressionTest()", span="77-77"];
m4_9 [cluster="Newtonsoft.Json.Linq.JsonPath.CompositeExpression.CompositeExpression()", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.CompositeExpression.CompositeExpression()", span="30-30"];
m4_0 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.QueryExpressionTests.AndExpressionTest()", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.QueryExpressionTests.AndExpressionTest()", span="19-19"];
m4_1 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.QueryExpressionTests.AndExpressionTest()", file="TypeExtensions.cs", label="CompositeExpression compositeExpression = new CompositeExpression\r\n            {\r\n                Operator = QueryOperator.And,\r\n                Expressions = new List<QueryExpression>\r\n                {\r\n                    new BooleanQueryExpression\r\n                    {\r\n                        Operator = QueryOperator.Exists,\r\n                        Path = new List<PathFilter>\r\n                        {\r\n                            new FieldFilter\r\n                            {\r\n                                Name = ''FirstName''\r\n                            }\r\n                        }\r\n                    },\r\n                    new BooleanQueryExpression\r\n                    {\r\n                        Operator = QueryOperator.Exists,\r\n                        Path = new List<PathFilter>\r\n                        {\r\n                            new FieldFilter\r\n                            {\r\n                                Name = ''LastName''\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }", span="21-49"];
m4_2 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.QueryExpressionTests.AndExpressionTest()", file="TypeExtensions.cs", label="JObject o1 = new JObject\r\n            {\r\n                {''Title'',''Title!''},\r\n                {''FirstName'', ''FirstName!''},\r\n                {''LastName'', ''LastName!''}\r\n            }", span="51-56"];
m4_3 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.QueryExpressionTests.AndExpressionTest()", file="TypeExtensions.cs", label="Assert.IsTrue(compositeExpression.IsMatch(o1))", span="58-58"];
m4_5 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.QueryExpressionTests.AndExpressionTest()", file="TypeExtensions.cs", label="Assert.IsFalse(compositeExpression.IsMatch(o2))", span="66-66"];
m4_7 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.QueryExpressionTests.AndExpressionTest()", file="TypeExtensions.cs", label="Assert.IsFalse(compositeExpression.IsMatch(o3))", span="73-73"];
m4_4 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.QueryExpressionTests.AndExpressionTest()", file="TypeExtensions.cs", label="JObject o2 = new JObject\r\n            {\r\n                {''Title'',''Title!''},\r\n                {''FirstName'', ''FirstName!''}\r\n            }", span="60-64"];
m4_6 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.QueryExpressionTests.AndExpressionTest()", file="TypeExtensions.cs", label="JObject o3 = new JObject\r\n            {\r\n                {''Title'',''Title!''}\r\n            }", span="68-71"];
m4_8 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.QueryExpressionTests.AndExpressionTest()", file="TypeExtensions.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.QueryExpressionTests.AndExpressionTest()", span="19-19"];
m5_669 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ExistingBaseValue()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ExistingBaseValue()", span="1986-1986"];
m5_671 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ExistingBaseValue()", file="TypeNameHandlingTests.cs", label="GroupingInfo g = JsonConvert.DeserializeObject<GroupingInfo>(json, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects\r\n            })", span="2002-2005"];
m5_670 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ExistingBaseValue()", file="TypeNameHandlingTests.cs", label="string json = @''{\r\n    ''''itemIdentifier'''': {\r\n        ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.ReportItemKeys, Newtonsoft.Json.Tests'''',\r\n        ''''dataType'''': 0,\r\n        ''''wantedUnitID'''': 1,\r\n        ''''application'''': 3,\r\n        ''''id'''': 101,\r\n        ''''name'''': ''''Machine''''\r\n    },\r\n    ''''isBusinessEntity'''': false,\r\n    ''''isKeyItem'''': true,\r\n    ''''summarizeOnThisItem'''': false\r\n}''", span="1988-2000"];
m5_672 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ExistingBaseValue()", file="TypeNameHandlingTests.cs", label="ReportItemKeys item = (ReportItemKeys)g.ItemIdentifier", span="2007-2007"];
m5_673 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ExistingBaseValue()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(1UL, item.WantedUnitID)", span="2008-2008"];
m5_674 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ExistingBaseValue()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ExistingBaseValue()", span="1986-1986"];
m5_372 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXNode(string)", file="TypeNameHandlingTests.cs", label="return DeserializeXNode(value, null);", span="1072-1072"];
m5_373 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXNode(string)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonConvert.DeserializeXNode(string)", span="1070-1070"];
m5_374 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXNode(string, string)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeXNode(string, string)", span="1081-1081"];
m5_104 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeWrapper()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeWrapper()", span="311-311"];
m5_125 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameFromGacAssembly()", file="TypeNameHandlingTests.cs", label="object cookie = JsonConvert.DeserializeObject(json, null, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects\r\n            })", span="402-405"];
m5_126 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameFromGacAssembly()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(Cookie), cookie)", span="407-407"];
m5_127 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameFromGacAssembly()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameFromGacAssembly()", span="393-393"];
m5_237 [cluster="Newtonsoft.Json.JsonConvert.SerializeObjectInternal(object, System.Type, Newtonsoft.Json.JsonSerializer)", file="TypeNameHandlingTests.cs", label="return sw.ToString();", span="632-632"];
m5_615 [cluster="System.Guid.Guid(string)", file="TypeNameHandlingTests.cs", label="Entry System.Guid.Guid(string)", span="0-0"];
m5_11 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.EnsureDateTime(System.DateTime, Newtonsoft.Json.DateTimeZoneHandling)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.EnsureDateTime(System.DateTime, Newtonsoft.Json.DateTimeZoneHandling)", span="76-76"];
m5_675 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericItemTypeCollection()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericItemTypeCollection()", span="2014-2014"];
m5_681 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericItemTypeCollection()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(''property'', deserialized.Rows[''key''].First().SomeProperty)", span="2035-2035"];
m5_679 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericItemTypeCollection()", file="TypeNameHandlingTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Rows'''': {\r\n    ''''key'''': {\r\n      ''''$type'''': ''''System.Collections.Generic.List`1[[Newtonsoft.Json.Tests.Serialization.MyInterfaceImplementationType, Newtonsoft.Json.Tests]], mscorlib'''',\r\n      ''''$values'''': [\r\n        {\r\n          ''''SomeProperty'''': ''''property''''\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}'', serialized)", span="2020-2031"];
m5_677 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericItemTypeCollection()", file="TypeNameHandlingTests.cs", label="data.Rows.Add(''key'', new List<MyInterfaceImplementationType> { new MyInterfaceImplementationType() { SomeProperty = ''property'' } })", span="2017-2017"];
m5_680 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericItemTypeCollection()", file="TypeNameHandlingTests.cs", label="DataType deserialized = JsonConvert.DeserializeObject<DataType>(serialized)", span="2033-2033"];
m5_678 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericItemTypeCollection()", file="TypeNameHandlingTests.cs", label="string serialized = JsonConvert.SerializeObject(data, Formatting.Indented)", span="2018-2018"];
m5_676 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericItemTypeCollection()", file="TypeNameHandlingTests.cs", label="DataType data = new DataType()", span="2016-2016"];
m5_682 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericItemTypeCollection()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericItemTypeCollection()", span="2014-2014"];
m5_367 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable(T, Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>)", file="TypeNameHandlingTests.cs", label="this.next = next", span="1181-1181"];
m5_368 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable(T, Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>)", file="TypeNameHandlingTests.cs", label="count = this.next.count + 1", span="1182-1182"];
m5_369 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable(T, Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable(T, Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>)", span="1178-1178"];
m5_370 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable()", file="TypeNameHandlingTests.cs", label="count = 0", span="1187-1187"];
m5_48 [cluster="Newtonsoft.Json.JsonConvert.ToString(ushort)", file="TypeNameHandlingTests.cs", label="return value.ToString(null, CultureInfo.InvariantCulture);", span="216-216"];
m5_263 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToType(string, string)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToType(string, string)", span="878-878"];
m5_264 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToType(string, string)", file="TypeNameHandlingTests.cs", label="string resolvedTypeName = string.Format(TypeFormat, typeName)", span="880-880"];
m5_265 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToType(string, string)", file="TypeNameHandlingTests.cs", label="return Type.GetType(resolvedTypeName, true);", span="882-882"];
m5_448 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameList<T>.TypeNameList()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameList<T>.TypeNameList()", span="2429-2429"];
m5_214 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", file="TypeNameHandlingTests.cs", label="JsonSerializerSettings settings = (converters != null && converters.Length > 0)\r\n                ? new JsonSerializerSettings { Converters = converters }\r\n                : null", span="541-543"];
m5_220 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="557-557"];
m5_223 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonConvert.SerializeObject(object, System.Type, Newtonsoft.Json.JsonSerializerSettings)", span="576-576"];
m5_224 [cluster="Newtonsoft.Json.JsonSerializer.CreateDefault(Newtonsoft.Json.JsonSerializerSettings)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.CreateDefault(Newtonsoft.Json.JsonSerializerSettings)", span="493-493"];
m5_225 [cluster="Newtonsoft.Json.JsonConvert.SerializeObjectInternal(object, System.Type, Newtonsoft.Json.JsonSerializer)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObjectInternal(object, System.Type, Newtonsoft.Json.JsonSerializer)", span="621-621"];
m5_226 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="TypeNameHandlingTests.cs", label="return SerializeObject(value, null, formatting, settings);", span="595-595"];
m5_227 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="593-593"];
m5_228 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, System.Type, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="TypeNameHandlingTests.cs", label="JsonSerializer jsonSerializer = JsonSerializer.CreateDefault(settings)", span="615-615"];
m5_218 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="557-557"];
m5_216 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", span="539-539"];
m5_219 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="TypeNameHandlingTests.cs", label="return SerializeObject(value, null, settings);", span="559-559"];
m5_221 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="TypeNameHandlingTests.cs", label="JsonSerializer jsonSerializer = JsonSerializer.CreateDefault(settings)", span="578-578"];
m5_215 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", file="TypeNameHandlingTests.cs", label="return SerializeObject(value, null, formatting, settings);", span="545-545"];
m5_222 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="TypeNameHandlingTests.cs", label="return SerializeObjectInternal(value, type, jsonSerializer);", span="580-580"];
m5_217 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, System.Type, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, System.Type, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="613-613"];
m5_229 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, System.Type, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="TypeNameHandlingTests.cs", label="jsonSerializer.Formatting = formatting", span="616-616"];
m5_334 [cluster="lambda expression", file="TypeNameHandlingTests.cs", label="PopulateObject(value, target, settings)", span="945-945"];
m5_339 [cluster="Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode, Newtonsoft.Json.Formatting)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode, Newtonsoft.Json.Formatting)", span="966-966"];
m5_335 [cluster="lambda expression", file="TypeNameHandlingTests.cs", label="Exit lambda expression", span="945-945"];
m5_338 [cluster="Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode)", span="955-955"];
m5_340 [cluster="Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode, Newtonsoft.Json.Formatting)", file="TypeNameHandlingTests.cs", label="XmlNodeConverter converter = new XmlNodeConverter()", span="968-968"];
m5_336 [cluster="Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode)", span="955-955"];
m5_337 [cluster="Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode)", file="TypeNameHandlingTests.cs", label="return SerializeXmlNode(node, Formatting.None);", span="957-957"];
m5_341 [cluster="Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode, Newtonsoft.Json.Formatting)", file="TypeNameHandlingTests.cs", label="return SerializeObject(node, formatting, converter);", span="970-970"];
m5_30 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DictionaryAuto()", file="TypeNameHandlingTests.cs", label="string json = JsonConvert.SerializeObject(dic, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Auto\r\n            })", span="166-169"];
m5_31 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DictionaryAuto()", file="TypeNameHandlingTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''movie'''': {\r\n    ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Movie, Newtonsoft.Json.Tests'''',\r\n    ''''Name'''': ''''Die Hard'''',\r\n    ''''Description'''': null,\r\n    ''''Classification'''': null,\r\n    ''''Studio'''': null,\r\n    ''''ReleaseDate'''': null,\r\n    ''''ReleaseCountries'''': null\r\n  }\r\n}'', json)", span="171-181"];
m5_32 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DictionaryAuto()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DictionaryAuto()", span="159-159"];
m5_361 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializingIEnumerableOfTShouldRetainGenericTypeInfo()", file="TypeNameHandlingTests.cs", label="string json = JsonConvert.SerializeObject(products, Formatting.Indented, new JsonSerializerSettings { TypeNameHandling = TypeNameHandling.All })", span="1163-1163"];
m5_362 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializingIEnumerableOfTShouldRetainGenericTypeInfo()", file="TypeNameHandlingTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''$type'''': '''''' + productClassRef + @'''''',\r\n  ''''$values'''': []\r\n}'', json)", span="1165-1168"];
m5_363 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializingIEnumerableOfTShouldRetainGenericTypeInfo()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializingIEnumerableOfTShouldRetainGenericTypeInfo()", span="1157-1157"];
m5_375 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", span="1195-1195"];
m5_376 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="TypeNameHandlingTests.cs", label="count == 0", span="1197-1197"];
m5_90 [cluster="Newtonsoft.Json.JsonConvert.ToString(double, Newtonsoft.Json.FloatFormatHandling, char, bool)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(double, Newtonsoft.Json.FloatFormatHandling, char, bool)", span="294-294"];
m5_91 [cluster="Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(double, string)", file="TypeNameHandlingTests.cs", label="double.IsNaN(value) || double.IsInfinity(value) || text.IndexOf('.') != -1 || text.IndexOf('E') != -1 || text.IndexOf('e') != -1", span="301-301"];
m5_92 [cluster="Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(double, string)", file="TypeNameHandlingTests.cs", label="return text;", span="302-302"];
m5_93 [cluster="Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(double, string)", file="TypeNameHandlingTests.cs", label="return text + ''.0'';", span="304-304"];
m5_108 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteTypeNameForObjects()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteTypeNameForObjects()", span="351-351"];
m5_628 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", span="1877-1877"];
m5_630 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="TypeNameHandlingTests.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Auto,\r\n                DateFormatHandling = DateFormatHandling.IsoDateFormat,\r\n                MissingMemberHandling = MissingMemberHandling.Ignore,\r\n                DefaultValueHandling = DefaultValueHandling.Ignore,\r\n                NullValueHandling = NullValueHandling.Ignore,\r\n                Formatting = Formatting.Indented\r\n            }", span="1887-1895"];
m5_629 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="TypeNameHandlingTests.cs", label="MyParent p = new MyParent\r\n            {\r\n                Child = new MyChildList\r\n                {\r\n                    ''string!''\r\n                }\r\n            }", span="1879-1885"];
m5_631 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="TypeNameHandlingTests.cs", label="string json = JsonConvert.SerializeObject(p, settings)", span="1897-1897"];
m5_633 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="TypeNameHandlingTests.cs", label="MyParent p2 = JsonConvert.DeserializeObject<MyParent>(json, settings)", span="1908-1908"];
m5_632 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="TypeNameHandlingTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''c'''': {\r\n    ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.MyChildList, Newtonsoft.Json.Tests'''',\r\n    ''''$values'''': [\r\n      ''''string!''''\r\n    ]\r\n  }\r\n}'', json)", span="1899-1906"];
m5_634 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(MyChildList), p2.Child)", span="1909-1909"];
m5_635 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(1, ((MyChildList)p2.Child).Count)", span="1910-1910"];
m5_636 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(''string!'', ((MyChildList)p2.Child)[0])", span="1911-1911"];
m5_637 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", span="1877-1877"];
m5_72 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameIfDerivedWithAuto()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameIfDerivedWithAuto()", span="232-232"];
m5_73 [cluster="System.IO.StringWriter.StringWriter()", file="TypeNameHandlingTests.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m5_74 [cluster="Newtonsoft.Json.JsonConvert.ToString(float, Newtonsoft.Json.FloatFormatHandling, char, bool)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(float, Newtonsoft.Json.FloatFormatHandling, char, bool)", span="268-268"];
m5_40 [cluster="Newtonsoft.Json.JsonConvert.ToString(int)", file="TypeNameHandlingTests.cs", label="return value.ToString(null, CultureInfo.InvariantCulture);", span="195-195"];
m5_42 [cluster="int.ToString(string, System.IFormatProvider)", file="TypeNameHandlingTests.cs", label="Entry int.ToString(string, System.IFormatProvider)", span="0-0"];
m5_46 [cluster="short.ToString(string, System.IFormatProvider)", file="TypeNameHandlingTests.cs", label="Entry short.ToString(string, System.IFormatProvider)", span="0-0"];
m5_41 [cluster="Newtonsoft.Json.JsonConvert.ToString(int)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(int)", span="193-193"];
m5_43 [cluster="Newtonsoft.Json.JsonConvert.ToString(short)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(short)", span="203-203"];
m5_45 [cluster="Newtonsoft.Json.JsonConvert.ToString(short)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(short)", span="203-203"];
m5_44 [cluster="Newtonsoft.Json.JsonConvert.ToString(short)", file="TypeNameHandlingTests.cs", label="return value.ToString(null, CultureInfo.InvariantCulture);", span="205-205"];
m5_47 [cluster="Newtonsoft.Json.JsonConvert.ToString(ushort)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(ushort)", span="214-214"];
m5_798 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", span="2362-2362"];
m5_801 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="TypeNameHandlingTests.cs", label="ReferenceEquals(this, obj)", span="2368-2368"];
m5_804 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="TypeNameHandlingTests.cs", label="return Name.Equals(((IExample)obj).Name);", span="2374-2374"];
m5_799 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="TypeNameHandlingTests.cs", label="obj == null", span="2364-2364"];
m5_802 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="TypeNameHandlingTests.cs", label="return true;", span="2370-2370"];
m5_803 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="TypeNameHandlingTests.cs", label="obj is IExample", span="2372-2372"];
m5_800 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="TypeNameHandlingTests.cs", label="return false;", span="2366-2366"];
m5_805 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="TypeNameHandlingTests.cs", label="return false;", span="2378-2378"];
m5_806 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", span="2362-2362"];
m5_51 [cluster="lambda expression", file="TypeNameHandlingTests.cs", label="Entry lambda expression", span="222-228"];
m5_52 [cluster="lambda expression", file="TypeNameHandlingTests.cs", label="var reader = new JsonTextReader(new StringReader(sb.ToString()))", span="224-224"];
m5_53 [cluster="lambda expression", file="TypeNameHandlingTests.cs", label="var ser = new JsonSerializer()", span="225-225"];
m5_772 [cluster="Newtonsoft.Json.Tests.Serialization.MyParent.System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MyParent.System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="2260-2260"];
m5_773 [cluster="Newtonsoft.Json.Tests.Serialization.MyParent.System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="TypeNameHandlingTests.cs", label="info.AddValue(''c'', Child)", span="2262-2262"];
m5_774 [cluster="Newtonsoft.Json.Tests.Serialization.MyParent.System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.MyParent.System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="2260-2260"];
m5_405 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.Car.Car()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.Car.Car()", span="1220-1220"];
m5_88 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameAutoWithJsonConvert_Generic()", file="TypeNameHandlingTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Organization.WagePerson, Newtonsoft.Json.Tests'''',\r\n  ''''HourlyWage'''': 0.0,\r\n  ''''Name'''': null,\r\n  ''''BirthDate'''': ''''0001-01-01T00:00:00'''',\r\n  ''''LastModified'''': ''''0001-01-01T00:00:00''''\r\n}'', json)", span="284-290"];
m5_89 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameAutoWithJsonConvert_Generic()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameAutoWithJsonConvert_Generic()", span="277-277"];
m5_730 [cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", span="579-579"];
m5_343 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.XmlNodeConverter()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.XmlNodeConverter()", span="743-743"];
m5_344 [cluster="Unk.SerializeObject", file="TypeNameHandlingTests.cs", label="Entry Unk.SerializeObject", span=""];
m5_346 [cluster="Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode, Newtonsoft.Json.Formatting, bool)", file="TypeNameHandlingTests.cs", label="XmlNodeConverter converter = new XmlNodeConverter { OmitRootObject = omitRootObject }", span="982-982"];
m5_349 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string)", span="992-992"];
m5_345 [cluster="Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode, Newtonsoft.Json.Formatting, bool)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode, Newtonsoft.Json.Formatting, bool)", span="980-980"];
m5_347 [cluster="Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode, Newtonsoft.Json.Formatting, bool)", file="TypeNameHandlingTests.cs", label="return SerializeObject(node, formatting, converter);", span="984-984"];
m5_348 [cluster="Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode, Newtonsoft.Json.Formatting, bool)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode, Newtonsoft.Json.Formatting, bool)", span="980-980"];
m5_350 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string)", file="TypeNameHandlingTests.cs", label="return DeserializeXmlNode(value, null);", span="994-994"];
m5_351 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string)", span="992-992"];
m5_352 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string)", span="1003-1003"];
m5_353 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string)", file="TypeNameHandlingTests.cs", label="return DeserializeXmlNode(value, deserializeRootElementName, false);", span="1005-1005"];
m5_354 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string)", span="1003-1003"];
m5_355 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string, bool)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string, bool)", span="1019-1019"];
m5_356 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string, bool)", file="TypeNameHandlingTests.cs", label="XmlNodeConverter converter = new XmlNodeConverter()", span="1021-1021"];
m5_79 [cluster="Newtonsoft.Json.JsonConvert.EnsureFloatFormat(double, string, Newtonsoft.Json.FloatFormatHandling, char, bool)", file="TypeNameHandlingTests.cs", label="return (!nullable) ? ''0.0'' : Null;", span="279-279"];
m5_776 [cluster="Newtonsoft.Json.Tests.Serialization.SerializableWrapper.Equals(object)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializableWrapper.Equals(object)", span="2312-2312"];
m5_780 [cluster="Newtonsoft.Json.Tests.Serialization.SerializableWrapper.Equals(object)", file="TypeNameHandlingTests.cs", label="return Equals(w.Content, Content);", span="2321-2321"];
m5_777 [cluster="Newtonsoft.Json.Tests.Serialization.SerializableWrapper.Equals(object)", file="TypeNameHandlingTests.cs", label="SerializableWrapper w = obj as SerializableWrapper", span="2314-2314"];
m5_778 [cluster="Newtonsoft.Json.Tests.Serialization.SerializableWrapper.Equals(object)", file="TypeNameHandlingTests.cs", label="w == null", span="2316-2316"];
m5_779 [cluster="Newtonsoft.Json.Tests.Serialization.SerializableWrapper.Equals(object)", file="TypeNameHandlingTests.cs", label="return false;", span="2318-2318"];
m5_781 [cluster="Newtonsoft.Json.Tests.Serialization.SerializableWrapper.Equals(object)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializableWrapper.Equals(object)", span="2312-2312"];
m5_13 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="618-618"];
m5_95 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeWrapper()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeWrapper()", span="311-311"];
m5_213 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="537-537"];
m5_617 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", span="1842-1842"];
m5_619 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", file="TypeNameHandlingTests.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Auto,\r\n                DateFormatHandling = DateFormatHandling.IsoDateFormat,\r\n                MissingMemberHandling = MissingMemberHandling.Ignore,\r\n                DefaultValueHandling = DefaultValueHandling.Ignore,\r\n                NullValueHandling = NullValueHandling.Ignore,\r\n                Formatting = Formatting.Indented\r\n            }", span="1852-1860"];
m5_618 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", file="TypeNameHandlingTests.cs", label="MyParent p = new MyParent\r\n            {\r\n                Child = new MyChild\r\n                {\r\n                    MyProperty = ''string!''\r\n                }\r\n            }", span="1844-1850"];
m5_620 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", file="TypeNameHandlingTests.cs", label="string json = JsonConvert.SerializeObject(p, settings)", span="1862-1862"];
m5_622 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", file="TypeNameHandlingTests.cs", label="MyParent p2 = JsonConvert.DeserializeObject<MyParent>(json, settings)", span="1871-1871"];
m5_621 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", file="TypeNameHandlingTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''c'''': {\r\n    ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.MyChild, Newtonsoft.Json.Tests'''',\r\n    ''''p'''': ''''string!''''\r\n  }\r\n}'', json)", span="1864-1869"];
m5_623 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(MyChild), p2.Child)", span="1872-1872"];
m5_624 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(''string!'', ((MyChild)p2.Child).MyProperty)", span="1873-1873"];
m5_625 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", span="1842-1842"];
m5_708 [cluster="Newtonsoft.Json.Tests.Serialization.Message2.Message2(string)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Message2.Message2(string)", span="2200-2200"];
m5_757 [cluster="Newtonsoft.Json.Tests.Serialization.Message2.Message2(string)", file="TypeNameHandlingTests.cs", label="value == null", span="2202-2202"];
m5_758 [cluster="Newtonsoft.Json.Tests.Serialization.Message2.Message2(string)", file="TypeNameHandlingTests.cs", label="throw new ArgumentNullException(nameof(value));", span="2202-2202"];
m5_759 [cluster="Newtonsoft.Json.Tests.Serialization.Message2.Message2(string)", file="TypeNameHandlingTests.cs", label="Value = value", span="2204-2204"];
m5_760 [cluster="Newtonsoft.Json.Tests.Serialization.Message2.Message2(string)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.Message2.Message2(string)", span="2200-2200"];
m5_329 [cluster="Newtonsoft.Json.JsonConvert.PopulateObjectAsync(string, object, Newtonsoft.Json.JsonSerializerSettings)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.PopulateObjectAsync(string, object, Newtonsoft.Json.JsonSerializerSettings)", span="943-943"];
m5_743 [cluster="Newtonsoft.Json.Serialization.ISerializationBinder.BindToType(string, string)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Serialization.ISerializationBinder.BindToType(string, string)", span="42-42"];
m5_34 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.KeyValuePairAuto()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.KeyValuePairAuto()", span="185-185"];
m5_139 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", file="TypeNameHandlingTests.cs", label="string personRef = typeof(Person).AssemblyQualifiedName", span="469-469"];
m5_140 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", file="TypeNameHandlingTests.cs", label="string json = @''[\r\n  {\r\n    ''''$id'''': ''''1'''',\r\n    ''''$type'''': '''''' + employeeRef + @'''''',\r\n    ''''Name'''': ''''Bob'''',\r\n    ''''Manager'''': {\r\n      ''''$id'''': ''''2'''',\r\n      ''''$type'''': '''''' + employeeRef + @'''''',\r\n      ''''Name'''': ''''Frank'''',\r\n      ''''Manager'''': null\r\n    }\r\n  },\r\n  {\r\n    ''''$type'''': '''''' + personRef + @'''''',\r\n    ''''Name'''': null,\r\n    ''''BirthDate'''': ''''\/Date(978134400000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(978134400000)\/''''\r\n  },\r\n  ''''String!'''',\r\n  -2147483648\r\n]''", span="471-491"];
m5_415 [cluster="Newtonsoft.Json.Tests.Serialization.SerializableWrapper.SerializableWrapper()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializableWrapper.SerializableWrapper()", span="2308-2308"];
m5_502 [cluster="object.ToString()", file="TypeNameHandlingTests.cs", label="Entry object.ToString()", span="0-0"];
m5_101 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeWrapper()", file="TypeNameHandlingTests.cs", label="Wrapper w2 = JsonConvert.DeserializeObject<Wrapper>(json)", span="345-345"];
m5_102 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeWrapper()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(List<EmployeeReference>), w2.Array)", span="346-346"];
m5_103 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeWrapper()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(Dictionary<string, EmployeeReference>), w2.Dictionary)", span="347-347"];
m5_87 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameAutoWithJsonConvert_Generic()", file="TypeNameHandlingTests.cs", label="string json = JsonConvert.SerializeObject(new WagePerson(), typeof(object), Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Auto\r\n            })", span="279-282"];
m5_129 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeGenericObjectListWithTypeName()", file="TypeNameHandlingTests.cs", label="string employeeRef = typeof(EmployeeReference).AssemblyQualifiedName", span="414-414"];
m5_141 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", file="TypeNameHandlingTests.cs", label="List<object> values = (List<object>)JsonConvert.DeserializeObject(json, typeof(List<object>), new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects,\r\n#pragma warning disable 618\r\n                TypeNameAssemblyFormat = FormatterAssemblyStyle.Full\r\n#pragma warning restore 618\r\n            })", span="493-499"];
m5_143 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", file="TypeNameHandlingTests.cs", label="EmployeeReference e = (EmployeeReference)values[0]", span="503-503"];
m5_142 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(4, values.Count)", span="501-501"];
m5_144 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", file="TypeNameHandlingTests.cs", label="Person p = (Person)values[1]", span="504-504"];
m5_16 [cluster="Unk.AreEqual", file="TypeNameHandlingTests.cs", label="Entry Unk.AreEqual", span=""];
m5_17 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.KnownAutoTypesTest()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.KnownAutoTypesTest()", span="108-108"];
m5_18 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.KnownAutoTypesTest()", file="TypeNameHandlingTests.cs", label="KnownAutoTypes c = new KnownAutoTypes\r\n            {\r\n                Collection = new List<string> { ''Collection value!'' },\r\n                List = new List<string> { ''List value!'' },\r\n                Dictionary = new Dictionary<string, string>\r\n                {\r\n                    { ''Dictionary key!'', ''Dictionary value!'' }\r\n                },\r\n                ReadOnlyCollection = new ReadOnlyCollection<string>(new[] { ''Read Only Collection value!'' }),\r\n                ReadOnlyList = new ReadOnlyCollection<string>(new[] { ''Read Only List value!'' }),\r\n                Set = new HashSet<string> { ''Set value!'' },\r\n                ReadOnlyDictionary = new ReadOnlyDictionary<string, string>(new Dictionary<string, string>\r\n                {\r\n                    { ''Read Only Dictionary key!'', ''Read Only Dictionary value!'' }\r\n                })\r\n            }", span="110-125"];
m5_75 [cluster="Newtonsoft.Json.Tests.TestObjects.Organization.WagePerson.WagePerson()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Organization.WagePerson.WagePerson()", span="27-27"];
m5_76 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", span="1020-1020"];
m5_77 [cluster="System.IO.StringWriter.ToString()", file="TypeNameHandlingTests.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m5_78 [cluster="string.Contains(string)", file="TypeNameHandlingTests.cs", label="Entry string.Contains(string)", span="0-0"];
m5_80 [cluster="Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", span="311-311"];
m5_81 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameAutoWithJsonConvert()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameAutoWithJsonConvert()", span="260-260"];
m5_106 [cluster="Newtonsoft.Json.JsonConvert.ToString(sbyte)", file="TypeNameHandlingTests.cs", label="return value.ToString(null, CultureInfo.InvariantCulture);", span="333-333"];
m5_247 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(Customer), newValues[0])", span="854-854"];
m5_248 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="TypeNameHandlingTests.cs", label="Customer customer = (Customer)newValues[0]", span="855-855"];
m5_249 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(''Caroline Customer'', customer.Name)", span="856-856"];
m5_270 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NewSerializeUsingCustomBinder()", file="TypeNameHandlingTests.cs", label="NewTypeNameSerializationBinder binder = new NewTypeNameSerializationBinder(''Newtonsoft.Json.Tests.Serialization.{0}, Newtonsoft.Json.Tests'')", span="890-890"];
m5_271 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NewSerializeUsingCustomBinder()", file="TypeNameHandlingTests.cs", label="IList<object> values = new List<object>\r\n            {\r\n                new Customer\r\n                {\r\n                    Name = ''Caroline Customer''\r\n                },\r\n                new Purchase\r\n                {\r\n                    ProductName = ''Elbow Grease'',\r\n                    Price = 5.99m,\r\n                    Quantity = 1\r\n                }\r\n            }", span="892-904"];
m5_272 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NewSerializeUsingCustomBinder()", file="TypeNameHandlingTests.cs", label="string json = JsonConvert.SerializeObject(values, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Auto,\r\n                SerializationBinder = binder\r\n            })", span="906-910"];
m5_431 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", span="170-170"];
m5_809 [cluster="Newtonsoft.Json.Tests.Serialization.Example.GetHashCode()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Example.GetHashCode()", span="2382-2382"];
m5_810 [cluster="Newtonsoft.Json.Tests.Serialization.Example.GetHashCode()", file="TypeNameHandlingTests.cs", label="Name == null", span="2384-2384"];
m5_811 [cluster="Newtonsoft.Json.Tests.Serialization.Example.GetHashCode()", file="TypeNameHandlingTests.cs", label="return 0;", span="2386-2386"];
m5_812 [cluster="Newtonsoft.Json.Tests.Serialization.Example.GetHashCode()", file="TypeNameHandlingTests.cs", label="return Name.GetHashCode();", span="2389-2389"];
m5_813 [cluster="Newtonsoft.Json.Tests.Serialization.Example.GetHashCode()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.Example.GetHashCode()", span="2382-2382"];
m5_748 [cluster="System.Reflection.Assembly.GetAssembly(System.Type)", file="TypeNameHandlingTests.cs", label="Entry System.Reflection.Assembly.GetAssembly(System.Type)", span="0-0"];
m5_62 [cluster="Unk.ToString", file="TypeNameHandlingTests.cs", label="Entry Unk.ToString", span=""];
m5_65 [cluster="Newtonsoft.Json.JsonConvert.ToString(ulong)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(ulong)", span="253-253"];
m5_67 [cluster="Newtonsoft.Json.JsonConvert.ToString(float)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(float)", span="263-263"];
m5_63 [cluster="Newtonsoft.Json.JsonConvert.ToString(ulong)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(ulong)", span="253-253"];
m5_64 [cluster="Newtonsoft.Json.JsonConvert.ToString(ulong)", file="TypeNameHandlingTests.cs", label="return value.ToString(null, CultureInfo.InvariantCulture);", span="255-255"];
m5_66 [cluster="ulong.ToString(string, System.IFormatProvider)", file="TypeNameHandlingTests.cs", label="Entry ulong.ToString(string, System.IFormatProvider)", span="0-0"];
m5_71 [cluster="Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(double, string)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(double, string)", span="299-299"];
m5_68 [cluster="Newtonsoft.Json.JsonConvert.ToString(float)", file="TypeNameHandlingTests.cs", label="return EnsureDecimalPlace(value, value.ToString(''R'', CultureInfo.InvariantCulture));", span="265-265"];
m5_70 [cluster="float.ToString(string, System.IFormatProvider)", file="TypeNameHandlingTests.cs", label="Entry float.ToString(string, System.IFormatProvider)", span="0-0"];
m5_69 [cluster="Newtonsoft.Json.JsonConvert.ToString(float)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(float)", span="263-263"];
m5_256 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string)", span="687-687"];
m5_602 [cluster="Newtonsoft.Json.Tests.Serialization.PropertyItemTypeNameHandlingDynamic.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.PropertyItemTypeNameHandlingDynamic.PropertyItemTypeNameHandlingDynamic()", span="2401-2401"];
m5_232 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeUsingCustomBinder()", file="TypeNameHandlingTests.cs", label="object p = JsonConvert.DeserializeObject(json, null, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects,\r\n#pragma warning disable CS0618 // Type or member is obsolete\r\n                Binder = new CustomSerializationBinder()\r\n#pragma warning restore CS0618 // Type or member is obsolete\r\n            })", span="769-775"];
m5_235 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeUsingCustomBinder()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(''Name!'', person.Name)", span="781-781"];
m5_236 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeUsingCustomBinder()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeUsingCustomBinder()", span="761-761"];
m5_233 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeUsingCustomBinder()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(Person), p)", span="777-777"];
m5_234 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeUsingCustomBinder()", file="TypeNameHandlingTests.cs", label="Person person = (Person)p", span="779-779"];
m5_238 [cluster="Newtonsoft.Json.JsonConvert.SerializeObjectInternal(object, System.Type, Newtonsoft.Json.JsonSerializer)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonConvert.SerializeObjectInternal(object, System.Type, Newtonsoft.Json.JsonSerializer)", span="621-621"];
m5_230 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, System.Type, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="TypeNameHandlingTests.cs", label="return SerializeObjectInternal(value, type, jsonSerializer);", span="618-618"];
m5_231 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, System.Type, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonConvert.SerializeObject(object, System.Type, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="613-613"];
m5_501 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameObject.TypeNameObject()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameObject.TypeNameObject()", span="2439-2439"];
m5_15 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", span="681-681"];
m5_292 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NewTypeNameSerializationBinder.BindToType(string, string)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NewTypeNameSerializationBinder.BindToType(string, string)", span="968-968"];
m5_279 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NewSerializeUsingCustomBinder()", file="TypeNameHandlingTests.cs", label="Purchase purchase = (Purchase)newValues[1]", span="949-949"];
m5_282 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NewTypeNameSerializationBinder.NewTypeNameSerializationBinder(string)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NewTypeNameSerializationBinder.NewTypeNameSerializationBinder(string)", span="957-957"];
m5_283 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NewTypeNameSerializationBinder.NewTypeNameSerializationBinder(string)", file="TypeNameHandlingTests.cs", label="TypeFormat = typeFormat", span="959-959"];
m5_284 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NewTypeNameSerializationBinder.NewTypeNameSerializationBinder(string)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NewTypeNameSerializationBinder.NewTypeNameSerializationBinder(string)", span="957-957"];
m5_246 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="TypeNameHandlingTests.cs", label="IList<object> newValues = JsonConvert.DeserializeObject<IList<object>>(json, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Auto,\r\n#pragma warning disable CS0618 // Type or member is obsolete\r\n                Binder = new TypeNameSerializationBinder(''Newtonsoft.Json.Tests.Serialization.{0}, Newtonsoft.Json.Tests'')\r\n#pragma warning restore CS0618 // Type or member is obsolete\r\n            })", span="846-852"];
m5_250 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(Purchase), newValues[1])", span="858-858"];
m5_251 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="TypeNameHandlingTests.cs", label="Purchase purchase = (Purchase)newValues[1]", span="859-859"];
m5_684 [cluster="Newtonsoft.Json.Tests.Serialization.MyInterfaceImplementationType.MyInterfaceImplementationType()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MyInterfaceImplementationType.MyInterfaceImplementationType()", span="2234-2234"];
m5_814 [cluster="string.GetHashCode()", file="TypeNameHandlingTests.cs", label="Entry string.GetHashCode()", span="0-0"];
m5_296 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs", label="testObject.AnotherTestMember = new Dictionary<int, IList<ContentBaseClass>>()", span="981-981"];
m5_109 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteTypeNameForObjects()", file="TypeNameHandlingTests.cs", label="string employeeRef = ReflectionUtils.GetTypeName(typeof(EmployeeReference), TypeNameAssemblyFormatHandling.Simple, null)", span="353-353"];
m5_110 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteTypeNameForObjects()", file="TypeNameHandlingTests.cs", label="EmployeeReference employee = new EmployeeReference()", span="355-355"];
m5_111 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteTypeNameForObjects()", file="TypeNameHandlingTests.cs", label="string json = JsonConvert.SerializeObject(employee, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects\r\n            })", span="357-360"];
m5_467 [cluster="Newtonsoft.Json.Tests.TestObjects.Organization.Employee.Employee()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Organization.Employee.Employee()", span="29-29"];
m5_35 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.KeyValuePairAuto()", file="TypeNameHandlingTests.cs", label="IList<KeyValuePair<string, object>> dic = new List<KeyValuePair<string, object>>\r\n            {\r\n                new KeyValuePair<string, object>(''movie'', new Movie { Name = ''Die Hard'' })\r\n            }", span="187-190"];
m5_36 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.KeyValuePairAuto()", file="TypeNameHandlingTests.cs", label="string json = JsonConvert.SerializeObject(dic, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Auto\r\n            })", span="192-195"];
m5_37 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.KeyValuePairAuto()", file="TypeNameHandlingTests.cs", label="StringAssert.AreEqual(@''[\r\n  {\r\n    ''''Key'''': ''''movie'''',\r\n    ''''Value'''': {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Movie, Newtonsoft.Json.Tests'''',\r\n      ''''Name'''': ''''Die Hard'''',\r\n      ''''Description'''': null,\r\n      ''''Classification'''': null,\r\n      ''''Studio'''': null,\r\n      ''''ReleaseDate'''': null,\r\n      ''''ReleaseCountries'''': null\r\n    }\r\n  }\r\n]'', json)", span="197-210"];
m5_686 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeComplexGenericDictionary_Simple()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeComplexGenericDictionary_Simple()", span="2041-2041"];
m5_687 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeComplexGenericDictionary_Simple()", file="TypeNameHandlingTests.cs", label="JsonSerializerSettings serializerSettings = new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.All,\r\n#pragma warning disable 618\r\n                TypeNameAssemblyFormat = FormatterAssemblyStyle.Simple\r\n#pragma warning restore 618\r\n            }", span="2043-2049"];
m5_688 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeComplexGenericDictionary_Simple()", file="TypeNameHandlingTests.cs", label="Dictionary<int, HashSet<string>> dictionary = new Dictionary<int, HashSet<string>>\r\n            {\r\n                { 1, new HashSet<string>(new[] { ''test'' }) },\r\n            }", span="2051-2054"];
m5_689 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeComplexGenericDictionary_Simple()", file="TypeNameHandlingTests.cs", label="string obtainedJson = JsonConvert.SerializeObject(dictionary, serializerSettings)", span="2056-2056"];
m5_690 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeComplexGenericDictionary_Simple()", file="TypeNameHandlingTests.cs", label="Dictionary<int, HashSet<string>> obtainedDictionary = (Dictionary<int, HashSet<string>>)JsonConvert.DeserializeObject(obtainedJson, serializerSettings)", span="2058-2058"];
m5_691 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeComplexGenericDictionary_Simple()", file="TypeNameHandlingTests.cs", label="Assert.IsNotNull(obtainedDictionary)", span="2060-2060"];
m5_692 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeComplexGenericDictionary_Simple()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeComplexGenericDictionary_Simple()", span="2041-2041"];
m5_255 [cluster="lambda expression", file="TypeNameHandlingTests.cs", label="Exit lambda expression", span="676-676"];
m5_241 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="116-116"];
m5_244 [cluster="Newtonsoft.Json.JsonConvert.SerializeObjectAsync(object)", file="TypeNameHandlingTests.cs", label="return SerializeObjectAsync(value, Formatting.None, null);", span="646-646"];
m5_242 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", span="742-742"];
m5_243 [cluster="Newtonsoft.Json.JsonConvert.SerializeObjectAsync(object)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObjectAsync(object)", span="644-644"];
m5_245 [cluster="Newtonsoft.Json.JsonConvert.SerializeObjectAsync(object)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonConvert.SerializeObjectAsync(object)", span="644-644"];
m5_252 [cluster="System.Threading.Tasks.TaskFactory.StartNew<TResult>(System.Func<TResult>)", file="TypeNameHandlingTests.cs", label="Entry System.Threading.Tasks.TaskFactory.StartNew<TResult>(System.Func<TResult>)", span="0-0"];
m5_253 [cluster="lambda expression", file="TypeNameHandlingTests.cs", label="Entry lambda expression", span="676-676"];
m5_723 [cluster="Unk.IsInstanceOf", file="TypeNameHandlingTests.cs", label="Entry Unk.IsInstanceOf", span=""];
m5_3 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeValueTupleWithTypeName()", file="TypeNameHandlingTests.cs", label="string json = JsonConvert.SerializeObject(t, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.All\r\n            })", span="72-75"];
m5_4 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeValueTupleWithTypeName()", file="TypeNameHandlingTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''$type'''': '''''' + tupleRef + @'''''',\r\n  ''''Item1'''': 1,\r\n  ''''Item2'''': 2,\r\n  ''''Item3'''': ''''string''''\r\n}'', json)", span="77-82"];
m5_7 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeValueTupleWithTypeName()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(2, t2.Item2)", span="90-90"];
m5_5 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeValueTupleWithTypeName()", file="TypeNameHandlingTests.cs", label="ValueTuple<int, int, string> t2 = (ValueTuple<int, int, string>)JsonConvert.DeserializeObject(json, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.All\r\n            })", span="84-87"];
m5_6 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeValueTupleWithTypeName()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(1, t2.Item1)", span="89-89"];
m5_8 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeValueTupleWithTypeName()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(''string'', t2.Item3)", span="91-91"];
m5_9 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeValueTupleWithTypeName()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeValueTupleWithTypeName()", span="66-66"];
m5_10 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, Newtonsoft.Json.TypeNameAssemblyFormatHandling, Newtonsoft.Json.Serialization.ISerializationBinder)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, Newtonsoft.Json.TypeNameAssemblyFormatHandling, Newtonsoft.Json.Serialization.ISerializationBinder)", span="147-147"];
m5_137 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.Uri, char)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(System.Uri, char)", span="397-397"];
m5_150 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="TypeNameHandlingTests.cs", label="PrimitiveTypeCode typeCode = ConvertUtils.GetTypeCode(value)", span="436-436"];
m5_151 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="TypeNameHandlingTests.cs", label=typeCode, span="438-438"];
m5_138 [cluster="System.Uri.ToString()", file="TypeNameHandlingTests.cs", label="Entry System.Uri.ToString()", span="0-0"];
m5_145 [cluster="System.ArgumentException.ArgumentException(string, string)", file="TypeNameHandlingTests.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m5_146 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool)", span="211-211"];
m5_147 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(object)", span="431-431"];
m5_148 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="TypeNameHandlingTests.cs", label="value == null", span="433-433"];
m5_149 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="TypeNameHandlingTests.cs", label="return Null;", span="434-434"];
m5_152 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="TypeNameHandlingTests.cs", label="PrimitiveTypeCode.String", span="440-440"];
m5_12 [cluster="Newtonsoft.Json.Utilities.StringUtils.CreateStringWriter(int)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.CreateStringWriter(int)", span="103-103"];
m5_212 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameProperty.TypeNameProperty()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameProperty.TypeNameProperty()", span="678-678"];
m5_27 [cluster="Newtonsoft.Json.JsonConvert.ToString(bool)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(bool)", span="163-163"];
m5_267 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="TypeNameHandlingTests.cs", label="return DeserializeObject<T>(value, (JsonSerializerSettings)null);", span="725-725"];
m5_482 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameDictionary<T>.TypeNameDictionary()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameDictionary<T>.TypeNameDictionary()", span="2434-2434"];
m5_168 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="TypeNameHandlingTests.cs", label="PrimitiveTypeCode.UInt32", span="456-456"];
m5_257 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.TypeNameSerializationBinder(string)", file="TypeNameHandlingTests.cs", label="TypeFormat = typeFormat", span="869-869"];
m5_258 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.TypeNameSerializationBinder(string)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.TypeNameSerializationBinder(string)", span="867-867"];
m5_735 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SetOldBinderAndSerializationBinderReturnsWrapper()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SetOldBinderAndSerializationBinderReturnsWrapper()", span="2154-2154"];
m5_736 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SetOldBinderAndSerializationBinderReturnsWrapper()", color=green, community=0, file="TypeNameHandlingTests.cs", label="var serializer = JsonSerializer.Create(new JsonSerializerSettings() { Binder = new OldBinder() })", prediction=3, span="2157-2157"];
m5_737 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SetOldBinderAndSerializationBinderReturnsWrapper()", file="TypeNameHandlingTests.cs", label="Assert.IsInstanceOf(typeof(OldBinder), serializer.Binder)", span="2158-2158"];
m5_738 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SetOldBinderAndSerializationBinderReturnsWrapper()", file="TypeNameHandlingTests.cs", label="var binder = serializer.SerializationBinder", span="2161-2161"];
m5_739 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SetOldBinderAndSerializationBinderReturnsWrapper()", file="TypeNameHandlingTests.cs", label="Assert.IsInstanceOf(typeof(SerializationBinderAdapter), binder)", span="2163-2163"];
m5_740 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SetOldBinderAndSerializationBinderReturnsWrapper()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(typeof(string), binder.BindToType(null, null))", span="2164-2164"];
m5_741 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SetOldBinderAndSerializationBinderReturnsWrapper()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SetOldBinderAndSerializationBinderReturnsWrapper()", span="2154-2154"];
m5_153 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="TypeNameHandlingTests.cs", label="return ToString((string)value);", span="441-441"];
m5_157 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="TypeNameHandlingTests.cs", label="return ToString((bool)value);", span="445-445"];
m5_156 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="TypeNameHandlingTests.cs", label="PrimitiveTypeCode.Boolean", span="444-444"];
m5_158 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="TypeNameHandlingTests.cs", label="PrimitiveTypeCode.SByte", span="446-446"];
m5_154 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="TypeNameHandlingTests.cs", label="PrimitiveTypeCode.Char", span="442-442"];
m5_155 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="TypeNameHandlingTests.cs", label="return ToString((char)value);", span="443-443"];
m5_159 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="TypeNameHandlingTests.cs", label="return ToString((sbyte)value);", span="447-447"];
m5_160 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="TypeNameHandlingTests.cs", label="PrimitiveTypeCode.Int16", span="448-448"];
m5_276 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NewSerializeUsingCustomBinder()", file="TypeNameHandlingTests.cs", label="Customer customer = (Customer)newValues[0]", span="945-945"];
m5_277 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NewSerializeUsingCustomBinder()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(''Caroline Customer'', customer.Name)", span="946-946"];
m5_278 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NewSerializeUsingCustomBinder()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(Purchase), newValues[1])", span="948-948"];
m5_22 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling)", file="TypeNameHandlingTests.cs", label="DateTimeUtils.WriteDateTimeOffsetString(writer, value, format, null, CultureInfo.InvariantCulture)", span="151-151"];
m5_575 [cluster="Newtonsoft.Json.Linq.JObject.JObject()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject()", span="87-87"];
m5_330 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="TypeNameHandlingTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m5_331 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="TypeNameHandlingTests.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m5_326 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(ContentSubClass), list[0])", span="1047-1047"];
m5_707 [cluster="Newtonsoft.Json.Tests.Serialization.ObjectWithOptionalMessage.ObjectWithOptionalMessage(Newtonsoft.Json.Tests.Serialization.Message2?)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ObjectWithOptionalMessage.ObjectWithOptionalMessage(Newtonsoft.Json.Tests.Serialization.Message2?)", span="2212-2212"];
m5_763 [cluster="Newtonsoft.Json.Tests.Serialization.ObjectWithOptionalMessage.ObjectWithOptionalMessage(Newtonsoft.Json.Tests.Serialization.Message2?)", file="TypeNameHandlingTests.cs", label="Message = message", span="2214-2214"];
m5_764 [cluster="Newtonsoft.Json.Tests.Serialization.ObjectWithOptionalMessage.ObjectWithOptionalMessage(Newtonsoft.Json.Tests.Serialization.Message2?)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ObjectWithOptionalMessage.ObjectWithOptionalMessage(Newtonsoft.Json.Tests.Serialization.Message2?)", span="2212-2212"];
m5_794 [cluster="System.Runtime.Serialization.SerializationInfo.GetString(string)", file="TypeNameHandlingTests.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetString(string)", span="0-0"];
m5_112 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteTypeNameForObjects()", file="TypeNameHandlingTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$type'''': '''''' + employeeRef + @'''''',\r\n  ''''Name'''': null,\r\n  ''''Manager'''': null\r\n}'', json)", span="362-367"];
m5_55 [cluster="lambda expression", file="TypeNameHandlingTests.cs", label="ser.Deserialize<sbyte>(reader)", span="227-227"];
m5_56 [cluster="lambda expression", file="TypeNameHandlingTests.cs", label="Exit lambda expression", span="222-228"];
m5_57 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="75-75"];
m5_113 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteTypeNameForObjects()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteTypeNameForObjects()", span="351-351"];
m5_114 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeName()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeName()", span="371-371"];
m5_115 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeName()", file="TypeNameHandlingTests.cs", label="string employeeRef = ReflectionUtils.GetTypeName(typeof(EmployeeReference), TypeNameAssemblyFormatHandling.Simple, null)", span="373-373"];
m5_318 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs", label="anotherTestObject = deserializingTester.Deserialize<HolderClass>(jsonReader)", span="1035-1035"];
m5_319 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs", label="Assert.IsNotNull(anotherTestObject)", span="1038-1038"];
m5_320 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(ContentSubClass), anotherTestObject.TestMember)", span="1039-1039"];
m5_322 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(1, anotherTestObject.AnotherTestMember.Count)", span="1041-1041"];
m5_321 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(Dictionary<int, IList<ContentBaseClass>>), anotherTestObject.AnotherTestMember)", span="1040-1040"];
m5_323 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs", label="IList<ContentBaseClass> list = anotherTestObject.AnotherTestMember[1]", span="1043-1043"];
m5_324 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(List<ContentBaseClass>), list)", span="1045-1045"];
m5_325 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(1, list.Count)", span="1046-1046"];
m5_371 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable()", span="1185-1185"];
m5_761 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="TypeNameHandlingTests.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m5_192 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="TypeNameHandlingTests.cs", label="PrimitiveTypeCode.BigInteger", span="485-485"];
m5_196 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(object)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(object)", span="208-208"];
m5_195 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="TypeNameHandlingTests.cs", label="throw new ArgumentException(''Unsupported type: {0}. Use the JsonSerializer class to get the object's JSON representation.''.FormatWith(CultureInfo.InvariantCulture, value.GetType()));", span="490-490"];
m5_197 [cluster="System.ArgumentException.ArgumentException(string)", file="TypeNameHandlingTests.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m5_194 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(object)", span="431-431"];
m5_193 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="TypeNameHandlingTests.cs", label="return ToStringInternal((BigInteger)value);", span="486-486"];
m5_198 [cluster="object.GetType()", file="TypeNameHandlingTests.cs", label="Entry object.GetType()", span="0-0"];
m5_293 [cluster="System.IO.StringReader.StringReader(string)", file="TypeNameHandlingTests.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m5_312 [cluster="lambda expression", file="TypeNameHandlingTests.cs", label="Entry lambda expression", span="892-892"];
m5_297 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObjectAsync<T>(string)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObjectAsync<T>(string)", span="841-841"];
m5_308 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObjectAsync(string)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonConvert.DeserializeObjectAsync(string)", span="872-872"];
m5_309 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObjectAsync(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObjectAsync(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", span="890-890"];
m5_310 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObjectAsync(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="TypeNameHandlingTests.cs", label="return Task.Factory.StartNew(() => DeserializeObject(value, type, settings));", span="892-892"];
m5_302 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObjectAsync<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonConvert.DeserializeObjectAsync<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="859-859"];
m5_306 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObjectAsync(string)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObjectAsync(string)", span="872-872"];
m5_307 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObjectAsync(string)", file="TypeNameHandlingTests.cs", label="return DeserializeObjectAsync(value, null, null);", span="874-874"];
m5_311 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObjectAsync(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonConvert.DeserializeObjectAsync(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", span="890-890"];
m5_313 [cluster="lambda expression", file="TypeNameHandlingTests.cs", label="DeserializeObject(value, type, settings)", span="892-892"];
m5_294 [cluster="Newtonsoft.Json.JsonSerializer.IsCheckAdditionalContentSet()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.IsCheckAdditionalContentSet()", span="409-409"];
m5_298 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObjectAsync<T>(string)", file="TypeNameHandlingTests.cs", label="return DeserializeObjectAsync<T>(value, null);", span="843-843"];
m5_295 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="73-73"];
m5_314 [cluster="lambda expression", file="TypeNameHandlingTests.cs", label="Exit lambda expression", span="892-892"];
m5_316 [cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", file="TypeNameHandlingTests.cs", label="PopulateObject(value, target, null)", span="904-904"];
m5_317 [cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", span="902-902"];
m5_300 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObjectAsync<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObjectAsync<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="859-859"];
m5_301 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObjectAsync<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="TypeNameHandlingTests.cs", label="return Task.Factory.StartNew(() => DeserializeObject<T>(value, settings));", span="861-861"];
m5_303 [cluster="lambda expression", file="TypeNameHandlingTests.cs", label="Entry lambda expression", span="861-861"];
m5_305 [cluster="lambda expression", file="TypeNameHandlingTests.cs", label="Exit lambda expression", span="861-861"];
m5_299 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObjectAsync<T>(string)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonConvert.DeserializeObjectAsync<T>(string)", span="841-841"];
m5_315 [cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", span="902-902"];
m5_304 [cluster="lambda expression", file="TypeNameHandlingTests.cs", label="DeserializeObject<T>(value, settings)", span="861-861"];
m5_327 [cluster="Newtonsoft.Json.JsonReader.Read()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonReader.Read()", span="354-354"];
m5_416 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", span="1297-1297"];
m5_417 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="TypeNameHandlingTests.cs", label="StringWriter writer = new StringWriter()", span="1299-1299"];
m5_419 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="TypeNameHandlingTests.cs", label="serializer.TypeNameHandling = flag", span="1303-1303"];
m5_420 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="TypeNameHandlingTests.cs", label="serializer.Serialize(new JsonTextWriter(writer), e)", span="1306-1306"];
m5_422 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(e, f, ''Objects should be equal after round trip json serialization'')", span="1315-1315"];
m5_418 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="TypeNameHandlingTests.cs", label="JsonSerializer serializer = new JsonSerializer()", span="1302-1302"];
m5_421 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="TypeNameHandlingTests.cs", label="SerializableWrapper f = serializer.Deserialize<SerializableWrapper>(new JsonTextReader(new StringReader(writer.ToString())))", span="1312-1312"];
m5_423 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", span="1297-1297"];
m5_483 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", span="1464-1464"];
m5_496 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(1, ((TestComponentSimple)o2.Object1).MyProperty)", span="1493-1493"];
m5_492 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="TypeNameHandlingTests.cs", label="StringAssert.AreEqual(expected, json)", span="1487-1487"];
m5_499 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="TypeNameHandlingTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''MyProperty'''': 2147483647\r\n}'', o2.ObjectNotHandled.ToString())", span="1496-1498"];
m5_493 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="TypeNameHandlingTests.cs", label="TypeNameObject o2 = JsonConvert.DeserializeObject<TypeNameObject>(json)", span="1489-1489"];
m5_495 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(TestComponentSimple), o2.Object1)", span="1492-1492"];
m5_497 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(long), o2.Object2)", span="1494-1494"];
m5_498 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(JObject), o2.ObjectNotHandled)", span="1495-1495"];
m5_490 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="TypeNameHandlingTests.cs", label="string json = JsonConvert.SerializeObject(o1, Formatting.Indented)", span="1474-1474"];
m5_491 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="TypeNameHandlingTests.cs", label="string expected = @''{\r\n  ''''Object1'''': {\r\n    ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n    ''''MyProperty'''': 1\r\n  },\r\n  ''''Object2'''': 123,\r\n  ''''ObjectNotHandled'''': {\r\n    ''''MyProperty'''': 2147483647\r\n  },\r\n  ''''String'''': ''''String!'''',\r\n  ''''Integer'''': 2147483647\r\n}''", span="1475-1486"];
m5_494 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="TypeNameHandlingTests.cs", label="Assert.IsNotNull(o2)", span="1490-1490"];
m5_484 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="TypeNameHandlingTests.cs", label="TypeNameObject o1 = new TypeNameObject()", span="1466-1466"];
m5_489 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="TypeNameHandlingTests.cs", label="o1.Integer = int.MaxValue", span="1472-1472"];
m5_485 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="TypeNameHandlingTests.cs", label="o1.Object1 = new TestComponentSimple { MyProperty = 1 }", span="1468-1468"];
m5_487 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="TypeNameHandlingTests.cs", label="o1.ObjectNotHandled = new TestComponentSimple { MyProperty = int.MaxValue }", span="1470-1470"];
m5_486 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="TypeNameHandlingTests.cs", label="o1.Object2 = 123", span="1469-1469"];
m5_488 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="TypeNameHandlingTests.cs", label="o1.String = ''String!''", span="1471-1471"];
m5_500 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", span="1464-1464"];
m5_260 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", span="701-701"];
m5_261 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", file="TypeNameHandlingTests.cs", label="return DeserializeObject(value, null, settings);", span="703-703"];
m5_262 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", span="701-701"];
m5_770 [cluster="System.Runtime.Serialization.SerializationInfo.GetValue(string, System.Type)", file="TypeNameHandlingTests.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetValue(string, System.Type)", span="0-0"];
m5_364 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable()", span="1185-1185"];
m5_365 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable(T, Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable(T, Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>)", span="1178-1178"];
m5_366 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable(T, Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>)", file="TypeNameHandlingTests.cs", label="this.value = value", span="1180-1180"];
m5_121 [cluster="System.Guid.ToString(string, System.IFormatProvider)", file="TypeNameHandlingTests.cs", label="Entry System.Guid.ToString(string, System.IFormatProvider)", span="0-0"];
m5_259 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", span="817-817"];
m5_285 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="TypeNameHandlingTests.cs", label="ValidationUtils.ArgumentNotNull(value, ''value'')", span="819-819"];
m5_286 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="TypeNameHandlingTests.cs", label="StringReader sr = new StringReader(value)", span="821-821"];
m5_287 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="TypeNameHandlingTests.cs", label="JsonSerializer jsonSerializer = JsonSerializer.CreateDefault(settings)", span="822-822"];
m5_290 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NewTypeNameSerializationBinder.BindToType(string, string)", file="TypeNameHandlingTests.cs", label="string resolvedTypeName = string.Format(TypeFormat, typeName)", span="970-970"];
m5_288 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="TypeNameHandlingTests.cs", label="!jsonSerializer.IsCheckAdditionalContentSet()", span="825-825"];
m5_289 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NewTypeNameSerializationBinder.BindToType(string, string)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NewTypeNameSerializationBinder.BindToType(string, string)", span="968-968"];
m5_291 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NewTypeNameSerializationBinder.BindToType(string, string)", file="TypeNameHandlingTests.cs", label="return Type.GetType(resolvedTypeName, true);", span="972-972"];
m5_268 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="723-723"];
m5_378 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXNode(string, string, bool)", file="TypeNameHandlingTests.cs", label="XmlNodeConverter converter = new XmlNodeConverter()", span="1099-1099"];
m5_379 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXNode(string, string, bool)", file="TypeNameHandlingTests.cs", label="converter.DeserializeRootElementName = deserializeRootElementName", span="1100-1100"];
m5_377 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXNode(string, string, bool)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeXNode(string, string, bool)", span="1097-1097"];
m5_380 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXNode(string, string, bool)", file="TypeNameHandlingTests.cs", label="converter.WriteArrayAttribute = writeArrayAttribute", span="1101-1101"];
m5_381 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXNode(string, string, bool)", file="TypeNameHandlingTests.cs", label="return (XDocument)DeserializeObject(value, typeof(XDocument), converter);", span="1103-1103"];
m5_382 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXNode(string, string, bool)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonConvert.DeserializeXNode(string, string, bool)", span="1097-1097"];
m5_383 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="TypeNameHandlingTests.cs", label=object, span=""];
m5_384 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="TypeNameHandlingTests.cs", label="Newtonsoft.Json.Formatting", span=""];
m5_573 [cluster="Newtonsoft.Json.Tests.Serialization.PropertyItemTypeNameHandlingObject.PropertyItemTypeNameHandlingObject()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.PropertyItemTypeNameHandlingObject.PropertyItemTypeNameHandlingObject()", span="2394-2394"];
m5_161 [cluster="string.StartsWith(string)", file="TypeNameHandlingTests.cs", label="Entry string.StartsWith(string)", span="0-0"];
m5_163 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameWithNoTypeNameHandling()", file="TypeNameHandlingTests.cs", label="string employeeRef = typeof(EmployeeReference).AssemblyQualifiedName", span="549-549"];
m5_165 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameWithNoTypeNameHandling()", file="TypeNameHandlingTests.cs", label="JObject o = (JObject)JsonConvert.DeserializeObject(json)", span="558-558"];
m5_167 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameWithNoTypeNameHandling()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameWithNoTypeNameHandling()", span="547-547"];
m5_169 [cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="422-422"];
m5_171 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameOnly()", file="TypeNameHandlingTests.cs", label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Employee'''',\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Manager'''': null\r\n}''", span="569-574"];
m5_173 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameOnly()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameOnly()", span="567-567"];
m5_175 [cluster="lambda expression", file="TypeNameHandlingTests.cs", label="JsonConvert.DeserializeObject(json, null, new JsonSerializerSettings\r\n                {\r\n                    TypeNameHandling = TypeNameHandling.Objects\r\n                })", span="578-581"];
m5_177 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="TypeNameHandlingTests.cs", label="return ToString((double)value);", span="465-465"];
m5_179 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="TypeNameHandlingTests.cs", label="return ToString((DateTime)value);", span="467-467"];
m5_181 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", span="610-610"];
m5_185 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(SendHttpRequest), message)", span="635-635"];
m5_187 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(''xyz'', request.CorrelationId)", span="638-638"];
m5_189 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(''siedemnaście'', request.RequestData[''Id''])", span="640-640"];
m5_191 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="766-766"];
m5_162 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameWithNoTypeNameHandling()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameWithNoTypeNameHandling()", span="547-547"];
m5_164 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameWithNoTypeNameHandling()", file="TypeNameHandlingTests.cs", label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$type'''': '''''' + employeeRef + @'''''',\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Manager'''': null\r\n}''", span="551-556"];
m5_166 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameWithNoTypeNameHandling()", file="TypeNameHandlingTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Manager'''': null\r\n}'', o.ToString())", span="560-563"];
m5_170 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameOnly()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameOnly()", span="567-567"];
m5_172 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameOnly()", file="TypeNameHandlingTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject(json, null, new JsonSerializerSettings\r\n                {\r\n                    TypeNameHandling = TypeNameHandling.Objects\r\n                });\r\n            }, ''Type specified in JSON 'Newtonsoft.Json.Tests.TestObjects.Employee' was not resolved. Path '$type', line 3, position 55.'')", span="576-582"];
m5_174 [cluster="lambda expression", file="TypeNameHandlingTests.cs", label="Entry lambda expression", span="576-582"];
m5_176 [cluster="lambda expression", file="TypeNameHandlingTests.cs", label="Exit lambda expression", span="576-582"];
m5_178 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="TypeNameHandlingTests.cs", label="PrimitiveTypeCode.DateTime", span="466-466"];
m5_180 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="TypeNameHandlingTests.cs", label="PrimitiveTypeCode.Decimal", span="468-468"];
m5_182 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", file="TypeNameHandlingTests.cs", label="string typeName = typeof(SendHttpRequest).AssemblyQualifiedName", span="612-612"];
m5_184 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", file="TypeNameHandlingTests.cs", label="ICorrelatedMessage message = JsonConvert.DeserializeObject<ICorrelatedMessage>(json, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects,\r\n#pragma warning disable 618\r\n                TypeNameAssemblyFormat = FormatterAssemblyStyle.Full\r\n#pragma warning restore 618\r\n            })", span="627-633"];
m5_186 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", file="TypeNameHandlingTests.cs", label="SendHttpRequest request = (SendHttpRequest)message", span="637-637"];
m5_188 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(2, request.RequestData.Count)", span="639-639"];
m5_190 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", span="610-610"];
m5_183 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", file="TypeNameHandlingTests.cs", label="string json = @''{\r\n''''$type'''': '''''' + typeName + @'''''',\r\n''''RequestData'''': {\r\n''''$type'''': ''''System.Collections.Generic.Dictionary`2[[System.String, mscorlib,Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.String, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'''',\r\n''''Id'''': ''''siedemnaście'''',\r\n''''X'''': ''''323''''\r\n},\r\n''''Method'''': ''''GET'''',\r\n''''Url'''': ''''http://www.onet.pl'''',\r\n''''RequestEncoding'''': ''''UTF-8'''',\r\n''''CorrelationId'''': ''''xyz''''\r\n}''", span="614-625"];
m5_503 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", span="1502-1502"];
m5_509 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(3, c2.Data.Count)", span="1525-1525"];
m5_514 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(1, c.MyProperty)", span="1531-1531"];
m5_507 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="TypeNameHandlingTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Data'''': [\r\n    1,\r\n    ''''two'''',\r\n    {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n      ''''MyProperty'''': 1\r\n    }\r\n  ]\r\n}'', json)", span="1513-1522"];
m5_505 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="TypeNameHandlingTests.cs", label="c1.Data = new List<object>\r\n            {\r\n                1,\r\n                ''two'',\r\n                new TestComponentSimple { MyProperty = 1 }\r\n            }", span="1505-1510"];
m5_508 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="TypeNameHandlingTests.cs", label="PropertyItemTypeNameHandling c2 = JsonConvert.DeserializeObject<PropertyItemTypeNameHandling>(json)", span="1524-1524"];
m5_510 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(long), c2.Data[0])", span="1527-1527"];
m5_511 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(string), c2.Data[1])", span="1528-1528"];
m5_512 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(TestComponentSimple), c2.Data[2])", span="1529-1529"];
m5_513 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="TypeNameHandlingTests.cs", label="TestComponentSimple c = (TestComponentSimple)c2.Data[2]", span="1530-1530"];
m5_506 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="TypeNameHandlingTests.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="1512-1512"];
m5_504 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="TypeNameHandlingTests.cs", label="PropertyItemTypeNameHandling c1 = new PropertyItemTypeNameHandling()", span="1504-1504"];
m5_515 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", span="1502-1502"];
m5_516 [cluster="Newtonsoft.Json.Tests.Serialization.PropertyItemTypeNameHandling.PropertyItemTypeNameHandling()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.PropertyItemTypeNameHandling.PropertyItemTypeNameHandling()", span="2422-2422"];
m5_742 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.OldBinder.OldBinder()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.OldBinder.OldBinder()", span="2184-2184"];
m5_122 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.TimeSpan)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(System.TimeSpan)", span="374-374"];
m5_124 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.TimeSpan)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(System.TimeSpan)", span="374-374"];
m5_123 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.TimeSpan)", file="TypeNameHandlingTests.cs", label="return ToString(value, '''');", span="376-376"];
m5_358 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string, bool)", file="TypeNameHandlingTests.cs", label="converter.WriteArrayAttribute = writeArrayAttribute", span="1023-1023"];
m5_360 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string, bool)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string, bool)", span="1019-1019"];
m5_359 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string, bool)", file="TypeNameHandlingTests.cs", label="return (XmlDocument)DeserializeObject(value, typeof(XmlDocument), converter);", span="1025-1025"];
m5_721 [cluster="Newtonsoft.Json.JsonSerializer.Create()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.Create()", span="563-563"];
m5_762 [cluster="Unk.nameof", file="TypeNameHandlingTests.cs", label="Entry Unk.nameof", span=""];
m5_603 [cluster="Newtonsoft.Json.Tests.Linq.DynamicDictionary.DynamicDictionary()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.DynamicDictionary.DynamicDictionary()", span="958-958"];
m5_775 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", file="TypeNameHandlingTests.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", span="0-0"];
m5_328 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="52-52"];
m5_807 [cluster="object.ReferenceEquals(object, object)", file="TypeNameHandlingTests.cs", label="Entry object.ReferenceEquals(object, object)", span="0-0"];
m5_54 [cluster="lambda expression", file="TypeNameHandlingTests.cs", label="ser.MetadataPropertyHandling = MetadataPropertyHandling.Default", span="226-226"];
m5_19 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling)", span="146-146"];
m5_20 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling)", file="TypeNameHandlingTests.cs", label="StringWriter writer = StringUtils.CreateStringWriter(64)", span="148-148"];
m5_21 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling)", file="TypeNameHandlingTests.cs", label="writer.Write('''')", span="150-150"];
m5_116 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeName()", file="TypeNameHandlingTests.cs", label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$type'''': '''''' + employeeRef + @'''''',\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Manager'''': null\r\n}''", span="375-380"];
m5_117 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeName()", file="TypeNameHandlingTests.cs", label="object employee = JsonConvert.DeserializeObject(json, null, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects\r\n            })", span="382-385"];
m5_118 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeName()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(EmployeeReference), employee)", span="387-387"];
m5_119 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeName()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(''Name!'', ((EmployeeReference)employee).Name)", span="388-388"];
m5_120 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeName()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeName()", span="371-371"];
m5_722 [cluster="Unk.NotNull", file="TypeNameHandlingTests.cs", label="Entry Unk.NotNull", span=""];
m5_61 [cluster="Newtonsoft.Json.JsonConvert.ToStringInternal(BigInteger)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonConvert.ToStringInternal(BigInteger)", span="241-241"];
m5_407 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", span="1275-1275"];
m5_410 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", file="TypeNameHandlingTests.cs", label="TestJsonSerializationRoundTrip(w, TypeNameHandling.All)", span="1292-1292"];
m5_411 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", file="TypeNameHandlingTests.cs", label="TestJsonSerializationRoundTrip(w, TypeNameHandling.Auto)", span="1293-1293"];
m5_412 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", file="TypeNameHandlingTests.cs", label="TestJsonSerializationRoundTrip(w, TypeNameHandling.Objects)", span="1294-1294"];
m5_409 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", file="TypeNameHandlingTests.cs", label="SerializableWrapper w = new SerializableWrapper\r\n            {\r\n                Content = e\r\n            }", span="1280-1283"];
m5_408 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", file="TypeNameHandlingTests.cs", label="IExample e = new Example(''Rob'')", span="1278-1278"];
m5_413 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", span="1275-1275"];
m5_385 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.System.Collections.IEnumerable.GetEnumerator()", file="TypeNameHandlingTests.cs", label="Newtonsoft.Json.JsonSerializerSettings", span=""];
m5_386 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.System.Collections.IEnumerable.GetEnumerator()", file="TypeNameHandlingTests.cs", label=string, span=""];
m5_387 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.System.Collections.IEnumerable.GetEnumerator()", file="TypeNameHandlingTests.cs", label="Newtonsoft.Json.JsonSerializerSettings", span=""];
m5_99 [cluster="Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(string)", file="TypeNameHandlingTests.cs", label="return text + ''.0'';", span="312-312"];
m5_96 [cluster="Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(string)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(string)", span="307-307"];
m5_98 [cluster="Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(string)", file="TypeNameHandlingTests.cs", label="return text;", span="310-310"];
m5_100 [cluster="Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(string)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(string)", span="307-307"];
m5_97 [cluster="Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(string)", file="TypeNameHandlingTests.cs", label="text.IndexOf('.') != -1", span="309-309"];
m5_795 [cluster="Newtonsoft.Json.Tests.Serialization.Example.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Example.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="2355-2355"];
m5_796 [cluster="Newtonsoft.Json.Tests.Serialization.Example.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="TypeNameHandlingTests.cs", label="info.AddValue(''name'', Name)", span="2357-2357"];
m5_797 [cluster="Newtonsoft.Json.Tests.Serialization.Example.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.Example.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="2355-2355"];
m5_58 [cluster="System.IO.StringReader.StringReader(string)", file="TypeNameHandlingTests.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m5_0 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTime)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(System.DateTime)", span="104-104"];
m5_2 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTime)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(System.DateTime)", span="104-104"];
m5_1 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTime)", file="TypeNameHandlingTests.cs", label="return ToString(value, DateFormatHandling.IsoDateFormat, DateTimeZoneHandling.RoundtripKind);", span="106-106"];
m5_517 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", span="1535-1535"];
m5_522 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(2, c2.Data.Count)", span="1571-1571"];
m5_529 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(2, c2.Data.Count)", span="1597-1597"];
m5_535 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(1, (int)o[''MyProperty''])", span="1604-1604"];
m5_520 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="TypeNameHandlingTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Data'''': [\r\n    {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n      ''''MyProperty'''': 1\r\n    },\r\n    {\r\n      ''''$type'''': ''''System.Collections.Generic.List`1[[System.Object, mscorlib]], mscorlib'''',\r\n      ''''$values'''': [\r\n        [\r\n          []\r\n        ]\r\n      ]\r\n    }\r\n  ]\r\n}'', json)", span="1553-1568"];
m5_518 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="TypeNameHandlingTests.cs", label="PropertyItemTypeNameHandling c1 = new PropertyItemTypeNameHandling\r\n            {\r\n                Data = new List<object>\r\n                {\r\n                    new TestComponentSimple { MyProperty = 1 },\r\n                    new List<object>\r\n                    {\r\n                        new List<object>\r\n                        {\r\n                            new List<object>()\r\n                        }\r\n                    }\r\n                }\r\n            }", span="1537-1550"];
m5_521 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="TypeNameHandlingTests.cs", label="PropertyItemTypeNameHandling c2 = JsonConvert.DeserializeObject<PropertyItemTypeNameHandling>(json)", span="1570-1570"];
m5_528 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="TypeNameHandlingTests.cs", label="c2 = JsonConvert.DeserializeObject<PropertyItemTypeNameHandling>(json)", span="1596-1596"];
m5_523 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(TestComponentSimple), c2.Data[0])", span="1573-1573"];
m5_524 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(List<object>), c2.Data[1])", span="1574-1574"];
m5_526 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(JArray), c[0])", span="1576-1576"];
m5_530 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(TestComponentSimple), c2.Data[0])", span="1599-1599"];
m5_531 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(List<object>), c2.Data[1])", span="1600-1600"];
m5_533 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(JObject), c[0])", span="1602-1602"];
m5_534 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="TypeNameHandlingTests.cs", label="JObject o = (JObject)c[0]", span="1603-1603"];
m5_519 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="TypeNameHandlingTests.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="1552-1552"];
m5_525 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="TypeNameHandlingTests.cs", label="List<object> c = (List<object>)c2.Data[1]", span="1575-1575"];
m5_527 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="TypeNameHandlingTests.cs", label="json = @''{\r\n  ''''Data'''': [\r\n    {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n      ''''MyProperty'''': 1\r\n    },\r\n    {\r\n      ''''$type'''': ''''System.Collections.Generic.List`1[[System.Object, mscorlib]], mscorlib'''',\r\n      ''''$values'''': [\r\n        {\r\n          ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n          ''''MyProperty'''': 1\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}''", span="1578-1594"];
m5_532 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="TypeNameHandlingTests.cs", label="c = (List<object>)c2.Data[1]", span="1601-1601"];
m5_536 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", span="1535-1535"];
m5_269 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NewSerializeUsingCustomBinder()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NewSerializeUsingCustomBinder()", span="888-888"];
m5_280 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NewSerializeUsingCustomBinder()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(''Elbow Grease'', purchase.ProductName)", span="950-950"];
m5_281 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NewSerializeUsingCustomBinder()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NewSerializeUsingCustomBinder()", span="888-888"];
m5_199 [cluster="string.FormatWith(System.IFormatProvider, object)", file="TypeNameHandlingTests.cs", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
m5_33 [cluster="char.ToString(char)", file="TypeNameHandlingTests.cs", label="Entry char.ToString(char)", span="0-0"];
m5_729 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.FancyBinder.FancyBinder()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.FancyBinder.FancyBinder()", span="2167-2167"];
m5_724 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ObsoleteBinderThrowsIfISerializationBinderSet()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ObsoleteBinderThrowsIfISerializationBinderSet()", span="2139-2139"];
m5_725 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ObsoleteBinderThrowsIfISerializationBinderSet()", file="TypeNameHandlingTests.cs", label="var serializer = JsonSerializer.Create(new JsonSerializerSettings() { SerializationBinder = new FancyBinder() })", span="2141-2141"];
m5_727 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ObsoleteBinderThrowsIfISerializationBinderSet()", file="TypeNameHandlingTests.cs", label="Assert.IsInstanceOf(typeof(FancyBinder), serializer.SerializationBinder)", span="2150-2150"];
m5_726 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ObsoleteBinderThrowsIfISerializationBinderSet()", file="TypeNameHandlingTests.cs", label="ExceptionAssert.Throws<InvalidOperationException>(() =>\r\n            {\r\n#pragma warning disable CS0618 // Type or member is obsolete\r\n                var serializationBinder = serializer.Binder;\r\n#pragma warning restore CS0618 // Type or member is obsolete\r\n                serializationBinder.ToString();\r\n            }, ''Cannot get SerializationBinder because an ISerializationBinder was previously set.'')", span="2142-2148"];
m5_728 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ObsoleteBinderThrowsIfISerializationBinderSet()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ObsoleteBinderThrowsIfISerializationBinderSet()", span="2139-2139"];
m5_94 [cluster="Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(double, string)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(double, string)", span="299-299"];
m5_203 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", file="TypeNameHandlingTests.cs", label="string json = JsonConvert.SerializeObject(typeNameProperty, Formatting.Indented)", span="700-700"];
m5_744 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.FancyBinder.BindToName(System.Type, out string, out string)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.FancyBinder.BindToName(System.Type, out string, out string)", span="2171-2171"];
m5_745 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.FancyBinder.BindToName(System.Type, out string, out string)", file="TypeNameHandlingTests.cs", label="assemblyName = string.Format(''FancyAssemblyName=>{0}'', Assembly.GetAssembly(serializedType)?.GetName().Name)", span="2173-2173"];
m5_746 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.FancyBinder.BindToName(System.Type, out string, out string)", file="TypeNameHandlingTests.cs", label="typeName = string.Format(''{0}{1}{0}'', Annotate, serializedType.Name)", span="2174-2174"];
m5_747 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.FancyBinder.BindToName(System.Type, out string, out string)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.FancyBinder.BindToName(System.Type, out string, out string)", span="2171-2171"];
m5_616 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="582-582"];
m5_342 [cluster="Newtonsoft.Json.Tests.Serialization.Message.Message()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Message.Message()", span="2281-2281"];
m5_557 [cluster="Newtonsoft.Json.Tests.Serialization.PropertyItemTypeNameHandlingDictionary.PropertyItemTypeNameHandlingDictionary()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.PropertyItemTypeNameHandlingDictionary.PropertyItemTypeNameHandlingDictionary()", span="2416-2416"];
m5_468 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", span="1437-1437"];
m5_476 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(3, l2.Count)", span="1455-1455"];
m5_478 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(1, ((TestComponentSimple)l2[''First'']).MyProperty)", span="1458-1458"];
m5_474 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="TypeNameHandlingTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''First'''': {\r\n    ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n    ''''MyProperty'''': 1\r\n  },\r\n  ''''Second'''': ''''String!'''',\r\n  ''''Third'''': 9223372036854775807\r\n}'', json)", span="1445-1452"];
m5_475 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="TypeNameHandlingTests.cs", label="TypeNameDictionary<object> l2 = JsonConvert.DeserializeObject<TypeNameDictionary<object>>(json)", span="1454-1454"];
m5_477 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(TestComponentSimple), l2[''First''])", span="1457-1457"];
m5_479 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(string), l2[''Second''])", span="1459-1459"];
m5_480 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(long), l2[''Third''])", span="1460-1460"];
m5_470 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="TypeNameHandlingTests.cs", label="l.Add(''First'', new TestComponentSimple { MyProperty = 1 })", span="1440-1440"];
m5_471 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="TypeNameHandlingTests.cs", label="l.Add(''Second'', ''String!'')", span="1441-1441"];
m5_472 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="TypeNameHandlingTests.cs", label="l.Add(''Third'', long.MaxValue)", span="1442-1442"];
m5_473 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="TypeNameHandlingTests.cs", label="string json = JsonConvert.SerializeObject(l, Formatting.Indented)", span="1444-1444"];
m5_469 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="TypeNameHandlingTests.cs", label="TypeNameDictionary<object> l = new TypeNameDictionary<object>()", span="1439-1439"];
m5_481 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", span="1437-1437"];
m5_424 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializationBinderWithFullName()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializationBinderWithFullName()", span="1321-1321"];
m5_426 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializationBinderWithFullName()", file="TypeNameHandlingTests.cs", label="string json = JsonConvert.SerializeObject(message, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.All,\r\n#pragma warning disable CS0618 // Type or member is obsolete\r\n                TypeNameAssemblyFormat = FormatterAssemblyStyle.Full,\r\n                Binder = new MetroBinder(),\r\n#pragma warning restore CS0618 // Type or member is obsolete\r\n                ContractResolver = new DefaultContractResolver\r\n                {\r\n#if !(PORTABLE || DNXCORE50)\r\n                    IgnoreSerializableAttribute = true\r\n#endif\r\n                }\r\n            })", span="1329-1342"];
m5_425 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializationBinderWithFullName()", file="TypeNameHandlingTests.cs", label="Message message = new Message\r\n            {\r\n                Address = ''jamesnk@testtown.com'',\r\n                Body = new Version(1, 2, 3, 4)\r\n            }", span="1323-1327"];
m5_427 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializationBinderWithFullName()", file="TypeNameHandlingTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''$type'''': '''':::MESSAGE:::, AssemblyName'''',\r\n  ''''Address'''': ''''jamesnk@testtown.com'''',\r\n  ''''Body'''': {\r\n    ''''$type'''': '''':::VERSION:::, AssemblyName'''',\r\n    ''''Major'''': 1,\r\n    ''''Minor'''': 2,\r\n    ''''Build'''': 3,\r\n    ''''Revision'''': 4,\r\n    ''''MajorRevision'''': 0,\r\n    ''''MinorRevision'''': 4\r\n  }\r\n}'', json)", span="1344-1356"];
m5_428 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializationBinderWithFullName()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializationBinderWithFullName()", span="1321-1321"];
m5_683 [cluster="Newtonsoft.Json.Tests.Serialization.DataType.DataType()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.DataType.DataType()", span="2220-2220"];
m5_765 [cluster="Newtonsoft.Json.Tests.Serialization.DataType.DataType()", file="TypeNameHandlingTests.cs", label="Rows = new Dictionary<string, IEnumerable<IMyInterfaceType>>()", span="2222-2222"];
m5_766 [cluster="Newtonsoft.Json.Tests.Serialization.DataType.DataType()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.DataType.DataType()", span="2220-2220"];
m5_207 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(TypeNameProperty), deserialized.Value)", span="713-713"];
m5_388 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="TypeNameHandlingTests.cs", label=string, span=""];
m5_393 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="TypeNameHandlingTests.cs", label="Newtonsoft.Json.JsonSerializerSettings", span=""];
m5_392 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="TypeNameHandlingTests.cs", label=object, span=""];
m5_394 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="TypeNameHandlingTests.cs", label="jsonSettings.NullValueHandling = NullValueHandling.Ignore", span="1242-1242"];
m5_395 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="TypeNameHandlingTests.cs", label="jsonSettings.TypeNameHandling = TypeNameHandling.All", span="1243-1243"];
m5_396 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="TypeNameHandlingTests.cs", label="string output = JsonConvert.SerializeObject(testerObject, Formatting.Indented, jsonSettings)", span="1245-1245"];
m5_399 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="TypeNameHandlingTests.cs", label="Car obj = JsonConvert.DeserializeObject<Car>(output, jsonSettings)", span="1263-1263"];
m5_389 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="TypeNameHandlingTests.cs", label="System.Type", span=""];
m5_391 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="TypeNameHandlingTests.cs", label=string, span=""];
m5_397 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="TypeNameHandlingTests.cs", label="string carClassRef = ReflectionUtils.GetTypeName(typeof(Car), TypeNameAssemblyFormatHandling.Simple, null)", span="1247-1247"];
m5_398 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="TypeNameHandlingTests.cs", label="StringAssert.AreEqual(output, @''{\r\n  ''''$type'''': '''''' + carClassRef + @'''''',\r\n  ''''Year'''': ''''2000-10-05T01:01:01Z'''',\r\n  ''''Objects'''': {\r\n    ''''$type'''': ''''System.Object[], mscorlib'''',\r\n    ''''$values'''': [\r\n      {\r\n        ''''$type'''': ''''System.Byte[], mscorlib'''',\r\n        ''''$value'''': ''''S0FSSVJB''''\r\n      },\r\n      ''''prueba''''\r\n    ]\r\n  }\r\n}'')", span="1249-1262"];
m5_400 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="TypeNameHandlingTests.cs", label="Assert.IsNotNull(obj)", span="1265-1265"];
m5_401 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="TypeNameHandlingTests.cs", label="Assert.IsTrue(obj.Objects[0] is byte[])", span="1267-1267"];
m5_402 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="TypeNameHandlingTests.cs", label="byte[] d = (byte[])obj.Objects[0]", span="1269-1269"];
m5_390 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="TypeNameHandlingTests.cs", label="Newtonsoft.Json.JsonSerializerSettings", span=""];
m5_403 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="TypeNameHandlingTests.cs", label="CollectionAssert.AreEquivalent(data, d)", span="1270-1270"];
m5_404 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", span="1234-1234"];
m5_82 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameAutoWithJsonConvert()", file="TypeNameHandlingTests.cs", label="string json = JsonConvert.SerializeObject(new WagePerson(), typeof(object), Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Auto\r\n            })", span="262-265"];
m5_663 [cluster="System.Collections.Generic.Stack<T>.Stack(System.Collections.Generic.IEnumerable<T>)", file="TypeNameHandlingTests.cs", label="Entry System.Collections.Generic.Stack<T>.Stack(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m5_105 [cluster="Newtonsoft.Json.JsonConvert.ToString(sbyte)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(sbyte)", span="331-331"];
m5_751 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.FancyBinder.BindToType(string, string)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.FancyBinder.BindToType(string, string)", span="2177-2177"];
m5_752 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.FancyBinder.BindToType(string, string)", file="TypeNameHandlingTests.cs", label="return null;", span="2179-2179"];
m5_753 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.FancyBinder.BindToType(string, string)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.FancyBinder.BindToType(string, string)", span="2177-2177"];
m5_332 [cluster="System.Threading.Tasks.TaskFactory.StartNew(System.Action)", file="TypeNameHandlingTests.cs", label="Entry System.Threading.Tasks.TaskFactory.StartNew(System.Action)", span="0-0"];
m5_60 [cluster="Newtonsoft.Json.JsonConvert.ToStringInternal(BigInteger)", file="TypeNameHandlingTests.cs", label="return value.ToString(null, CultureInfo.InvariantCulture);", span="243-243"];
m5_86 [cluster="Newtonsoft.Json.JsonConvert.ToString(double)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(double)", span="289-289"];
m5_750 [cluster="string.Format(string, object, object)", file="TypeNameHandlingTests.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m5_128 [cluster="System.TimeSpan.ToString()", file="TypeNameHandlingTests.cs", label="Entry System.TimeSpan.ToString()", span="0-0"];
m5_132 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.Uri)", file="TypeNameHandlingTests.cs", label="return Null;", span="392-392"];
m5_131 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.Uri)", file="TypeNameHandlingTests.cs", label="value == null", span="391-391"];
m5_133 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.Uri)", file="TypeNameHandlingTests.cs", label="return ToString(value, '''');", span="394-394"];
m5_130 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.Uri)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(System.Uri)", span="389-389"];
m5_134 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.Uri)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(System.Uri)", span="389-389"];
m5_357 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string, bool)", file="TypeNameHandlingTests.cs", label="converter.DeserializeRootElementName = deserializeRootElementName", span="1022-1022"];
m5_449 [cluster="System.Collections.Generic.List<T>.Add(T)", file="TypeNameHandlingTests.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m5_604 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", span="1816-1816"];
m5_609 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="TypeNameHandlingTests.cs", label="JsonSerializerSettings jsonSerializerSettings = new JsonSerializerSettings()\r\n            {\r\n                Formatting = Formatting.Indented,\r\n                TypeNameHandling = TypeNameHandling.All\r\n            }", span="1824-1828"];
m5_608 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="TypeNameHandlingTests.cs", label="inputContext.Add(contextKey, someValue)", span="1822-1822"];
m5_610 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="TypeNameHandlingTests.cs", label="string serializedString = JsonConvert.SerializeObject(inputContext, jsonSerializerSettings)", span="1829-1829"];
m5_612 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="TypeNameHandlingTests.cs", label="var deserializedObject = (Dictionary<string, Guid>)JsonConvert.DeserializeObject(serializedString, jsonSerializerSettings)", span="1836-1836"];
m5_605 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="TypeNameHandlingTests.cs", label="string contextKey = ''k1''", span="1818-1818"];
m5_606 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="TypeNameHandlingTests.cs", label="var someValue = new Guid(''a6e986df-fc2c-4906-a1ef-9492388f7833'')", span="1819-1819"];
m5_607 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="TypeNameHandlingTests.cs", label="Dictionary<string, Guid> inputContext = new Dictionary<string, Guid>()", span="1821-1821"];
m5_611 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="TypeNameHandlingTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''$type'''': ''''System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Guid, mscorlib]], mscorlib'''',\r\n  ''''k1'''': ''''a6e986df-fc2c-4906-a1ef-9492388f7833''''\r\n}'', serializedString)", span="1831-1834"];
m5_613 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(someValue, deserializedObject[contextKey])", span="1838-1838"];
m5_614 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", span="1816-1816"];
m5_26 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeOffsetString(System.IO.TextWriter, System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeOffsetString(System.IO.TextWriter, System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", span="509-509"];
m5_693 [cluster="System.Collections.Generic.HashSet<T>.HashSet(System.Collections.Generic.IEnumerable<T>)", file="TypeNameHandlingTests.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m5_430 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.MetroBinder.MetroBinder()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.MetroBinder.MetroBinder()", span="1359-1359"];
m5_574 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTestObject.TypeNameHandlingTestObject()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTestObject.TypeNameHandlingTestObject()", span="2408-2408"];
m5_24 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling)", file="TypeNameHandlingTests.cs", label="return writer.ToString();", span="153-153"];
m5_50 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="367-367"];
m5_135 [cluster="Newtonsoft.Json.Tests.TestObjects.Organization.Person.Person()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Organization.Person.Person()", span="34-34"];
m5_136 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="TypeNameHandlingTests.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m5_406 [cluster="Unk.AreEquivalent", file="TypeNameHandlingTests.cs", label="Entry Unk.AreEquivalent", span=""];
m5_23 [cluster="System.Collections.Generic.List<T>.List()", file="TypeNameHandlingTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m5_25 [cluster="System.Collections.ObjectModel.ReadOnlyCollection<T>.ReadOnlyCollection(System.Collections.Generic.IList<T>)", file="TypeNameHandlingTests.cs", label="Entry System.Collections.ObjectModel.ReadOnlyCollection<T>.ReadOnlyCollection(System.Collections.Generic.IList<T>)", span="0-0"];
m5_85 [cluster="Newtonsoft.Json.JsonConvert.ToString(double)", file="TypeNameHandlingTests.cs", label="return EnsureDecimalPlace(value, value.ToString(''R'', CultureInfo.InvariantCulture));", span="291-291"];
m5_274 [cluster="Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T, Newtonsoft.Json.JsonSerializerSettings)", file="TypeNameHandlingTests.cs", label="return DeserializeObject<T>(value, settings);", span="761-761"];
m5_273 [cluster="Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T, Newtonsoft.Json.JsonSerializerSettings)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T, Newtonsoft.Json.JsonSerializerSettings)", span="759-759"];
m5_275 [cluster="Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T, Newtonsoft.Json.JsonSerializerSettings)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T, Newtonsoft.Json.JsonSerializerSettings)", span="759-759"];
m5_432 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.MetroBinder.BindToType(string, string)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.MetroBinder.BindToType(string, string)", span="1361-1361"];
m5_433 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.MetroBinder.BindToType(string, string)", file="TypeNameHandlingTests.cs", label="return null;", span="1363-1363"];
m5_434 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.MetroBinder.BindToType(string, string)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.MetroBinder.BindToType(string, string)", span="1361-1361"];
m5_39 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="TypeNameHandlingTests.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m5_333 [cluster="lambda expression", file="TypeNameHandlingTests.cs", label="Entry lambda expression", span="945-945"];
m5_254 [cluster="lambda expression", file="TypeNameHandlingTests.cs", label="SerializeObject(value, formatting, settings)", span="676-676"];
m5_84 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameAutoWithJsonConvert()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameAutoWithJsonConvert()", span="260-260"];
m5_732 [cluster="lambda expression", file="TypeNameHandlingTests.cs", label="var serializationBinder = serializer.Binder", span="2145-2145"];
m5_666 [cluster="lambda expression", file="TypeNameHandlingTests.cs", label="Entry lambda expression", span="1977-1977"];
m5_731 [cluster="lambda expression", file="TypeNameHandlingTests.cs", label="Entry lambda expression", span="2142-2148"];
m5_733 [cluster="lambda expression", file="TypeNameHandlingTests.cs", label="serializationBinder.ToString()", span="2147-2147"];
m5_668 [cluster="lambda expression", file="TypeNameHandlingTests.cs", label="Exit lambda expression", span="1977-1977"];
m5_667 [cluster="lambda expression", file="TypeNameHandlingTests.cs", label=s, span="1977-1977"];
m5_734 [cluster="lambda expression", file="TypeNameHandlingTests.cs", label="Exit lambda expression", span="2142-2148"];
m5_14 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(System.IO.TextWriter, System.DateTime, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(System.IO.TextWriter, System.DateTime, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", span="377-377"];
m5_107 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="703-703"];
m5_665 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="TypeNameHandlingTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m5_83 [cluster="double.IsNaN(double)", file="TypeNameHandlingTests.cs", label="Entry double.IsNaN(double)", span="0-0"];
m5_200 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="499-499"];
m5_206 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="512-512"];
m5_209 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", file="TypeNameHandlingTests.cs", label="JsonSerializerSettings settings = (converters != null && converters.Length > 0)\r\n                ? new JsonSerializerSettings { Converters = converters }\r\n                : null", span="525-527"];
m5_210 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", file="TypeNameHandlingTests.cs", label="return SerializeObject(value, null, settings);", span="529-529"];
m5_204 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="512-512"];
m5_205 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="TypeNameHandlingTests.cs", label="return SerializeObject(value, formatting, (JsonSerializerSettings)null);", span="514-514"];
m5_201 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="TypeNameHandlingTests.cs", label="return SerializeObject(value, null, (JsonSerializerSettings)null);", span="501-501"];
m5_208 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", span="523-523"];
m5_202 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="499-499"];
m5_211 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", span="523-523"];
m5_440 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", span="1379-1379"];
m5_446 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", file="TypeNameHandlingTests.cs", label="StringAssert.AreEqual(@''[\r\n  1,\r\n  2,\r\n  3\r\n]'', json)", span="1387-1391"];
m5_442 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", file="TypeNameHandlingTests.cs", label="l.Add(1)", span="1382-1382"];
m5_443 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", file="TypeNameHandlingTests.cs", label="l.Add(2)", span="1383-1383"];
m5_444 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", file="TypeNameHandlingTests.cs", label="l.Add(3)", span="1384-1384"];
m5_445 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", file="TypeNameHandlingTests.cs", label="string json = JsonConvert.SerializeObject(l, Formatting.Indented)", span="1386-1386"];
m5_441 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", file="TypeNameHandlingTests.cs", label="TypeNameList<int> l = new TypeNameList<int>()", span="1381-1381"];
m5_447 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", span="1379-1379"];
m5_49 [cluster="System.Text.StringBuilder.Append(string)", file="TypeNameHandlingTests.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m5_28 [cluster="Newtonsoft.Json.JsonConvert.ToString(bool)", file="TypeNameHandlingTests.cs", label="return (value) ? True : False;", span="165-165"];
m5_29 [cluster="Newtonsoft.Json.JsonConvert.ToString(bool)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(bool)", span="163-163"];
m5_638 [cluster="Newtonsoft.Json.Tests.Serialization.MyChildList.MyChildList()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MyChildList.MyChildList()", span="2272-2272"];
m5_429 [cluster="System.Version.Version(int, int, int, int)", file="TypeNameHandlingTests.cs", label="Entry System.Version.Version(int, int, int, int)", span="0-0"];
m5_664 [cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="TypeNameHandlingTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0"];
m5_576 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", span="1742-1742"];
m5_591 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(1, c.MyProperty)", span="1784-1784"];
m5_594 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(2, (int)o[''MyProperty''])", span="1788-1788"];
m5_600 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(2, (int)o[''MyProperty''])", span="1810-1810"];
m5_585 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Data'''': {\r\n    ''''one'''': {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n      ''''MyProperty'''': 1\r\n    },\r\n    ''''two'''': {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.Linq.DynamicDictionary, Newtonsoft.Json.Tests'''',\r\n      ''''one'''': {\r\n        ''''MyProperty'''': 2\r\n      }\r\n    }\r\n  }\r\n}'', json)", span="1763-1776"];
m5_586 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs", label="PropertyItemTypeNameHandlingDynamic d2 = JsonConvert.DeserializeObject<PropertyItemTypeNameHandlingDynamic>(json)", span="1778-1778"];
m5_596 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs", label="d2 = JsonConvert.DeserializeObject<PropertyItemTypeNameHandlingDynamic>(json)", span="1806-1806"];
m5_590 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs", label="TestComponentSimple c = (TestComponentSimple)data3.one", span="1783-1783"];
m5_592 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs", label="dynamic data4 = data3.two", span="1786-1786"];
m5_593 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs", label="JObject o = (JObject)data4.one", span="1787-1787"];
m5_595 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs", label="json = @''{\r\n  ''''Data'''': {\r\n    ''''one'''': {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n      ''''MyProperty'''': 1\r\n    },\r\n    ''''two'''': {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.Linq.DynamicDictionary, Newtonsoft.Json.Tests'''',\r\n      ''''one'''': {\r\n        ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n        ''''MyProperty'''': 2\r\n      }\r\n    }\r\n  }\r\n}''", span="1790-1804"];
m5_599 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs", label="o = (JObject)data4.one", span="1809-1809"];
m5_584 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs", label="string json = JsonConvert.SerializeObject(d1, Formatting.Indented)", span="1762-1762"];
m5_587 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs", label="Assert.IsNotNull(d2)", span="1779-1779"];
m5_588 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs", label="Assert.IsNotNull(d2.Data)", span="1780-1780"];
m5_589 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs", label="dynamic data3 = d2.Data", span="1782-1782"];
m5_597 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs", label="data3 = d2.Data", span="1807-1807"];
m5_598 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs", label="data4 = data3.two", span="1808-1808"];
m5_577 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs", label="PropertyItemTypeNameHandlingDynamic d1 = new PropertyItemTypeNameHandlingDynamic()", span="1744-1744"];
m5_583 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs", label="d1.Data = (DynamicDictionary)data", span="1760-1760"];
m5_579 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs", label="data.one = new TestComponentSimple\r\n            {\r\n                MyProperty = 1\r\n            }", span="1747-1750"];
m5_581 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs", label="data2.one = new TestComponentSimple\r\n            {\r\n                MyProperty = 2\r\n            }", span="1753-1756"];
m5_578 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs", label="dynamic data = new DynamicDictionary()", span="1746-1746"];
m5_582 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs", label="data.two = data2", span="1758-1758"];
m5_580 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs", label="dynamic data2 = new DynamicDictionary()", span="1752-1752"];
m5_601 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", span="1742-1742"];
m5_59 [cluster="System.Text.StringBuilder.ToString()", file="TypeNameHandlingTests.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m5_627 [cluster="Newtonsoft.Json.Tests.Serialization.MyChild.MyChild()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MyChild.MyChild()", span="2266-2266"];
m5_650 [cluster="Newtonsoft.Json.Tests.Serialization.ParentParent.ParentParent()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ParentParent.ParentParent()", span="2240-2240"];
m5_626 [cluster="Newtonsoft.Json.Tests.Serialization.MyParent.MyParent()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MyParent.MyParent()", span="2256-2256"];
m5_771 [cluster="Newtonsoft.Json.Tests.Serialization.MyParent.MyParent()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.MyParent.MyParent()", span="2256-2256"];
m5_240 [cluster="System.IO.StringWriter.StringWriter(System.Text.StringBuilder, System.IFormatProvider)", file="TypeNameHandlingTests.cs", label="Entry System.IO.StringWriter.StringWriter(System.Text.StringBuilder, System.IFormatProvider)", span="0-0"];
m5_709 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeNullableStructProperty_Auto()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeNullableStructProperty_Auto()", span="2107-2107"];
m5_710 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeNullableStructProperty_Auto()", file="TypeNameHandlingTests.cs", label="JsonSerializerSettings serializerSettings = new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Auto,\r\n                Formatting = Formatting.Indented\r\n            }", span="2109-2113"];
m5_711 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeNullableStructProperty_Auto()", file="TypeNameHandlingTests.cs", label="string json = @''{\r\n  ''''Message'''': {\r\n    ''''Value'''': ''''Hello!''''\r\n  }\r\n}''", span="2115-2119"];
m5_712 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeNullableStructProperty_Auto()", file="TypeNameHandlingTests.cs", label="ObjectWithOptionalMessage objWithMessage = JsonConvert.DeserializeObject<ObjectWithOptionalMessage>(json, serializerSettings)", span="2120-2120"];
m5_713 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeNullableStructProperty_Auto()", file="TypeNameHandlingTests.cs", label="StringAssert.AreEqual(''Hello!'', objWithMessage.Message.Value.Value)", span="2122-2122"];
m5_714 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeNullableStructProperty_Auto()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeNullableStructProperty_Auto()", span="2107-2107"];
m5_639 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", span="1915-1915"];
m5_642 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="TypeNameHandlingTests.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.IsoDateFormat,\r\n                MissingMemberHandling = MissingMemberHandling.Ignore,\r\n                DefaultValueHandling = DefaultValueHandling.Ignore,\r\n                NullValueHandling = NullValueHandling.Ignore,\r\n                Formatting = Formatting.Indented\r\n            }", span="1927-1934"];
m5_641 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="TypeNameHandlingTests.cs", label="pp.ParentProp = new MyParent\r\n            {\r\n                Child = new MyChild\r\n                {\r\n                    MyProperty = ''string!''\r\n                }\r\n            }", span="1919-1925"];
m5_643 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="TypeNameHandlingTests.cs", label="string json = JsonConvert.SerializeObject(pp, settings)", span="1936-1936"];
m5_645 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="TypeNameHandlingTests.cs", label="ParentParent pp2 = JsonConvert.DeserializeObject<ParentParent>(json, settings)", span="1947-1947"];
m5_640 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="TypeNameHandlingTests.cs", label="ParentParent pp = new ParentParent()", span="1917-1917"];
m5_644 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="TypeNameHandlingTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''ParentProp'''': {\r\n    ''''c'''': {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.MyChild, Newtonsoft.Json.Tests'''',\r\n      ''''p'''': ''''string!''''\r\n    }\r\n  }\r\n}'', json)", span="1938-1945"];
m5_646 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="TypeNameHandlingTests.cs", label="MyParent p2 = pp2.ParentProp", span="1948-1948"];
m5_648 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(''string!'', ((MyChild)p2.Child).MyProperty)", span="1950-1950"];
m5_647 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(MyChild), p2.Child)", span="1949-1949"];
m5_649 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", span="1915-1915"];
m5_788 [cluster="object.GetHashCode()", file="TypeNameHandlingTests.cs", label="Entry object.GetHashCode()", span="0-0"];
m5_651 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", span="1955-1955"];
m5_656 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="TypeNameHandlingTests.cs", label="string serialized = JsonConvert.SerializeObject(input,\r\n                Newtonsoft.Json.Formatting.Indented,\r\n                new JsonSerializerSettings\r\n                {\r\n                    TypeNameHandling = TypeNameHandling.All,\r\n#pragma warning disable 618\r\n                    TypeNameAssemblyFormat = FormatterAssemblyStyle.Full // TypeNameHandling.Auto will work\r\n#pragma warning restore 618\r\n                })", span="1963-1971"];
m5_657 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="TypeNameHandlingTests.cs", label="var output = JsonConvert.DeserializeObject<List<Stack<string>>>(serialized,\r\n                new JsonSerializerSettings { TypeNameHandling = TypeNameHandling.All }\r\n                )", span="1973-1975"];
m5_652 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="TypeNameHandlingTests.cs", label="var input = new List<Stack<string>>()", span="1957-1957"];
m5_655 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="TypeNameHandlingTests.cs", label="input.Add(new Stack<string>(new List<string> { ''Seven'', ''Eight'', ''Nine'' }))", span="1961-1961"];
m5_658 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="TypeNameHandlingTests.cs", label="List<string> strings = output.SelectMany(s => s).ToList()", span="1977-1977"];
m5_653 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="TypeNameHandlingTests.cs", label="input.Add(new Stack<string>(new List<string> { ''One'', ''Two'', ''Three'' }))", span="1959-1959"];
m5_654 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="TypeNameHandlingTests.cs", label="input.Add(new Stack<string>(new List<string> { ''Four'', ''Five'', ''Six'' }))", span="1960-1960"];
m5_659 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(9, strings.Count)", span="1979-1979"];
m5_660 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(''One'', strings[0])", span="1980-1980"];
m5_661 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(''Nine'', strings[8])", span="1981-1981"];
m5_662 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", span="1955-1955"];
m5_537 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", span="1608-1608"];
m5_542 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(2, c2.Data.Count)", span="1648-1648"];
m5_549 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(2, c2.Data.Count)", span="1672-1672"];
m5_555 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(1, (int)o[''MyProperty''])", span="1680-1680"];
m5_540 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="TypeNameHandlingTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Data'''': {\r\n    ''''one'''': {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n      ''''MyProperty'''': 1\r\n    },\r\n    ''''two'''': {\r\n      ''''$type'''': ''''System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib'''',\r\n      ''''one'''': {\r\n        ''''one'''': 1\r\n      }\r\n    }\r\n  }\r\n}'', json)", span="1632-1645"];
m5_538 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="TypeNameHandlingTests.cs", label="PropertyItemTypeNameHandlingDictionary c1 = new PropertyItemTypeNameHandlingDictionary()\r\n            {\r\n                Data = new Dictionary<string, object>\r\n                {\r\n                    {\r\n                        ''one'', new TestComponentSimple { MyProperty = 1 }\r\n                    },\r\n                    {\r\n                        ''two'', new Dictionary<string, object>\r\n                        {\r\n                            {\r\n                                ''one'', new Dictionary<string, object>\r\n                                {\r\n                                    { ''one'', 1 }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }", span="1610-1629"];
m5_541 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="TypeNameHandlingTests.cs", label="PropertyItemTypeNameHandlingDictionary c2 = JsonConvert.DeserializeObject<PropertyItemTypeNameHandlingDictionary>(json)", span="1647-1647"];
m5_548 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="TypeNameHandlingTests.cs", label="c2 = JsonConvert.DeserializeObject<PropertyItemTypeNameHandlingDictionary>(json)", span="1671-1671"];
m5_543 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(TestComponentSimple), c2.Data[''one''])", span="1650-1650"];
m5_544 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(Dictionary<string, object>), c2.Data[''two''])", span="1651-1651"];
m5_546 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(JObject), c[''one''])", span="1653-1653"];
m5_550 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(TestComponentSimple), c2.Data[''one''])", span="1674-1674"];
m5_551 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(Dictionary<string, object>), c2.Data[''two''])", span="1675-1675"];
m5_553 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(JObject), c[''one''])", span="1677-1677"];
m5_554 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="TypeNameHandlingTests.cs", label="JObject o = (JObject)c[''one'']", span="1679-1679"];
m5_539 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="TypeNameHandlingTests.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="1631-1631"];
m5_545 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="TypeNameHandlingTests.cs", label="Dictionary<string, object> c = (Dictionary<string, object>)c2.Data[''two'']", span="1652-1652"];
m5_547 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="TypeNameHandlingTests.cs", label="json = @''{\r\n  ''''Data'''': {\r\n    ''''one'''': {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n      ''''MyProperty'''': 1\r\n    },\r\n    ''''two'''': {\r\n      ''''$type'''': ''''System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib'''',\r\n      ''''one'''': {\r\n        ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n        ''''MyProperty'''': 1\r\n      }\r\n    }\r\n  }\r\n}''", span="1655-1669"];
m5_552 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="TypeNameHandlingTests.cs", label="c = (Dictionary<string, object>)c2.Data[''two'']", span="1676-1676"];
m5_556 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", span="1608-1608"];
m5_38 [cluster="System.Enum.ToString(string)", file="TypeNameHandlingTests.cs", label="Entry System.Enum.ToString(string)", span="0-0"];
m5_558 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", span="1684-1684"];
m5_571 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(1, (int)j[''MyProperty''])", span="1737-1737"];
m5_561 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="TypeNameHandlingTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Data'''': {\r\n    ''''Prop1'''': {\r\n      ''''$type'''': ''''System.Collections.Generic.List`1[[System.Object, mscorlib]], mscorlib'''',\r\n      ''''$values'''': [\r\n        {\r\n          ''''MyProperty'''': 1\r\n        }\r\n      ]\r\n    },\r\n    ''''Prop2'''': {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n      ''''MyProperty'''': 1\r\n    },\r\n    ''''Prop3'''': 3,\r\n    ''''Prop4'''': {}\r\n  }\r\n}'', json)", span="1707-1724"];
m5_559 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="TypeNameHandlingTests.cs", label="PropertyItemTypeNameHandlingObject o1 = new PropertyItemTypeNameHandlingObject\r\n            {\r\n                Data = new TypeNameHandlingTestObject\r\n                {\r\n                    Prop1 = new List<object>\r\n                    {\r\n                        new TestComponentSimple\r\n                        {\r\n                            MyProperty = 1\r\n                        }\r\n                    },\r\n                    Prop2 = new TestComponentSimple\r\n                    {\r\n                        MyProperty = 1\r\n                    },\r\n                    Prop3 = 3,\r\n                    Prop4 = new JObject()\r\n                }\r\n            }", span="1686-1704"];
m5_562 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="TypeNameHandlingTests.cs", label="PropertyItemTypeNameHandlingObject o2 = JsonConvert.DeserializeObject<PropertyItemTypeNameHandlingObject>(json)", span="1726-1726"];
m5_565 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(List<object>), o2.Data.Prop1)", span="1730-1730"];
m5_566 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(TestComponentSimple), o2.Data.Prop2)", span="1731-1731"];
m5_567 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(long), o2.Data.Prop3)", span="1732-1732"];
m5_568 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(JObject), o2.Data.Prop4)", span="1733-1733"];
m5_570 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="TypeNameHandlingTests.cs", label="JObject j = (JObject)o[0]", span="1736-1736"];
m5_560 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="TypeNameHandlingTests.cs", label="string json = JsonConvert.SerializeObject(o1, Formatting.Indented)", span="1706-1706"];
m5_563 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="TypeNameHandlingTests.cs", label="Assert.IsNotNull(o2)", span="1727-1727"];
m5_564 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="TypeNameHandlingTests.cs", label="Assert.IsNotNull(o2.Data)", span="1728-1728"];
m5_569 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="TypeNameHandlingTests.cs", label="List<object> o = (List<object>)o2.Data.Prop1", span="1735-1735"];
m5_572 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", span="1684-1684"];
m5_701 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeNullableStructProperty_Auto()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeNullableStructProperty_Auto()", span="2087-2087"];
m5_702 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeNullableStructProperty_Auto()", file="TypeNameHandlingTests.cs", label="JsonSerializerSettings serializerSettings = new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Auto,\r\n                Formatting = Formatting.Indented\r\n            }", span="2089-2093"];
m5_703 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeNullableStructProperty_Auto()", file="TypeNameHandlingTests.cs", label="ObjectWithOptionalMessage objWithMessage = new ObjectWithOptionalMessage(new Message2(''Hello!''))", span="2095-2095"];
m5_704 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeNullableStructProperty_Auto()", file="TypeNameHandlingTests.cs", label="string json = JsonConvert.SerializeObject(objWithMessage, serializerSettings)", span="2097-2097"];
m5_705 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeNullableStructProperty_Auto()", file="TypeNameHandlingTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Message'''': {\r\n    ''''Value'''': ''''Hello!''''\r\n  }\r\n}'', json)", span="2099-2103"];
m5_706 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeNullableStructProperty_Auto()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeNullableStructProperty_Auto()", span="2087-2087"];
m5_715 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializerWithDefaultBinder()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializerWithDefaultBinder()", span="2128-2128"];
m5_718 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializerWithDefaultBinder()", file="TypeNameHandlingTests.cs", label="Assert.IsInstanceOf(typeof(DefaultSerializationBinder), serializer.Binder)", span="2133-2133"];
m5_719 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializerWithDefaultBinder()", file="TypeNameHandlingTests.cs", label="Assert.IsInstanceOf(typeof(DefaultSerializationBinder), serializer.SerializationBinder)", span="2135-2135"];
m5_716 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializerWithDefaultBinder()", file="TypeNameHandlingTests.cs", label="var serializer = JsonSerializer.Create()", span="2130-2130"];
m5_717 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializerWithDefaultBinder()", file="TypeNameHandlingTests.cs", label="Assert.NotNull(serializer.Binder)", span="2132-2132"];
m5_720 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializerWithDefaultBinder()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializerWithDefaultBinder()", span="2128-2128"];
m5_414 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Example(string)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Example.Example(string)", span="2345-2345"];
m5_789 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Example(string)", file="TypeNameHandlingTests.cs", label="Name = name", span="2347-2347"];
m5_790 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Example(string)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.Example.Example(string)", span="2345-2345"];
m5_782 [cluster="object.Equals(object, object)", file="TypeNameHandlingTests.cs", label="Entry object.Equals(object, object)", span="0-0"];
m5_266 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToType(string, string)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToType(string, string)", span="878-878"];
m5_808 [cluster="string.Equals(string)", file="TypeNameHandlingTests.cs", label="Entry string.Equals(string)", span="0-0"];
m5_783 [cluster="Newtonsoft.Json.Tests.Serialization.SerializableWrapper.GetHashCode()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializableWrapper.GetHashCode()", span="2324-2324"];
m5_784 [cluster="Newtonsoft.Json.Tests.Serialization.SerializableWrapper.GetHashCode()", file="TypeNameHandlingTests.cs", label="Content == null", span="2326-2326"];
m5_785 [cluster="Newtonsoft.Json.Tests.Serialization.SerializableWrapper.GetHashCode()", file="TypeNameHandlingTests.cs", label="return 0;", span="2328-2328"];
m5_786 [cluster="Newtonsoft.Json.Tests.Serialization.SerializableWrapper.GetHashCode()", file="TypeNameHandlingTests.cs", label="return Content.GetHashCode();", span="2331-2331"];
m5_787 [cluster="Newtonsoft.Json.Tests.Serialization.SerializableWrapper.GetHashCode()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializableWrapper.GetHashCode()", span="2324-2324"];
m5_466 [cluster="Newtonsoft.Json.Tests.TestObjects.TestComponentSimple.TestComponentSimple()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.TestComponentSimple.TestComponentSimple()", span="33-33"];
m5_450 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", span="1395-1395"];
m5_460 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(4, l2.Count)", span="1428-1428"];
m5_458 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="TypeNameHandlingTests.cs", label="StringAssert.AreEqual(@''[\r\n  {\r\n    ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n    ''''MyProperty'''': 0\r\n  },\r\n  {\r\n    ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Organization.Employee, Newtonsoft.Json.Tests'''',\r\n    ''''FirstName'''': null,\r\n    ''''LastName'''': null,\r\n    ''''BirthDate'''': ''''2000-12-12T12:12:12Z'''',\r\n    ''''Department'''': ''''Department!'''',\r\n    ''''JobTitle'''': null\r\n  },\r\n  ''''String!'''',\r\n  9223372036854775807\r\n]'', json)", span="1410-1425"];
m5_459 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="TypeNameHandlingTests.cs", label="TypeNameList<object> l2 = JsonConvert.DeserializeObject<TypeNameList<object>>(json)", span="1427-1427"];
m5_461 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(TestComponentSimple), l2[0])", span="1430-1430"];
m5_462 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(Employee), l2[1])", span="1431-1431"];
m5_463 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(string), l2[2])", span="1432-1432"];
m5_464 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(long), l2[3])", span="1433-1433"];
m5_454 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="TypeNameHandlingTests.cs", label="l.Add(new Employee\r\n            {\r\n                BirthDate = new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc),\r\n                Department = ''Department!''\r\n            })", span="1401-1405"];
m5_453 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="TypeNameHandlingTests.cs", label="l.Add(c1)", span="1400-1400"];
m5_455 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="TypeNameHandlingTests.cs", label="l.Add(''String!'')", span="1406-1406"];
m5_456 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="TypeNameHandlingTests.cs", label="l.Add(long.MaxValue)", span="1407-1407"];
m5_457 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="TypeNameHandlingTests.cs", label="string json = JsonConvert.SerializeObject(l, Formatting.Indented)", span="1409-1409"];
m5_452 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="TypeNameHandlingTests.cs", label="TypeNameList<object> l = new TypeNameList<object>()", span="1399-1399"];
m5_451 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="TypeNameHandlingTests.cs", label="var c1 = new TestComponentSimple()", span="1397-1397"];
m5_465 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", span="1395-1395"];
m5_749 [cluster="System.Reflection.Assembly.GetName()", file="TypeNameHandlingTests.cs", label="Entry System.Reflection.Assembly.GetName()", span="0-0"];
m5_791 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Example(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Example.Example(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="2350-2350"];
m5_792 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Example(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="TypeNameHandlingTests.cs", label="Name = info.GetString(''name'')", span="2352-2352"];
m5_793 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Example(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.Example.Example(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="2350-2350"];
m5_767 [cluster="Newtonsoft.Json.Tests.Serialization.MyParent.MyParent(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MyParent.MyParent(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="2251-2251"];
m5_768 [cluster="Newtonsoft.Json.Tests.Serialization.MyParent.MyParent(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="TypeNameHandlingTests.cs", label="Child = (ISomeBase)info.GetValue(''c'', typeof(ISomeBase))", span="2253-2253"];
m5_769 [cluster="Newtonsoft.Json.Tests.Serialization.MyParent.MyParent(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.MyParent.MyParent(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="2251-2251"];
m5_239 [cluster="System.Text.StringBuilder.StringBuilder(int)", file="TypeNameHandlingTests.cs", label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0"];
m5_694 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeComplexGenericDictionary_Full()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeComplexGenericDictionary_Full()", span="2064-2064"];
m5_695 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeComplexGenericDictionary_Full()", file="TypeNameHandlingTests.cs", label="JsonSerializerSettings serializerSettings = new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.All,\r\n#pragma warning disable 618\r\n                TypeNameAssemblyFormat = FormatterAssemblyStyle.Full\r\n#pragma warning restore 618\r\n            }", span="2066-2072"];
m5_696 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeComplexGenericDictionary_Full()", file="TypeNameHandlingTests.cs", label="Dictionary<int, HashSet<string>> dictionary = new Dictionary<int, HashSet<string>>\r\n            {\r\n                { 1, new HashSet<string>(new[] { ''test'' }) },\r\n            }", span="2074-2077"];
m5_697 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeComplexGenericDictionary_Full()", file="TypeNameHandlingTests.cs", label="string obtainedJson = JsonConvert.SerializeObject(dictionary, serializerSettings)", span="2079-2079"];
m5_698 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeComplexGenericDictionary_Full()", file="TypeNameHandlingTests.cs", label="Dictionary<int, HashSet<string>> obtainedDictionary = (Dictionary<int, HashSet<string>>)JsonConvert.DeserializeObject(obtainedJson, serializerSettings)", span="2081-2081"];
m5_699 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeComplexGenericDictionary_Full()", file="TypeNameHandlingTests.cs", label="Assert.IsNotNull(obtainedDictionary)", span="2083-2083"];
m5_700 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeComplexGenericDictionary_Full()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeComplexGenericDictionary_Full()", span="2064-2064"];
m5_820 [file="TypeNameHandlingTests.cs", label=json, span=""];
m5_826 [file="TypeNameHandlingTests.cs", label=serializer, span=""];
m5_825 [file="TypeNameHandlingTests.cs", label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests", span=""];
m5_822 [file="TypeNameHandlingTests.cs", label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder", span=""];
m5_823 [file="TypeNameHandlingTests.cs", label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NewTypeNameSerializationBinder", span=""];
m5_829 [file="TypeNameHandlingTests.cs", label="Newtonsoft.Json.Tests.Serialization.DataType", span=""];
m5_824 [file="TypeNameHandlingTests.cs", label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>", span=""];
m5_828 [file="TypeNameHandlingTests.cs", label="Newtonsoft.Json.Tests.Serialization.ObjectWithOptionalMessage", span=""];
m5_827 [file="TypeNameHandlingTests.cs", label="out Newtonsoft.Json.Tests.Serialization.Message2", span=""];
m5_831 [file="TypeNameHandlingTests.cs", label="Newtonsoft.Json.Tests.Serialization.SerializableWrapper", span=""];
m5_832 [file="TypeNameHandlingTests.cs", label="Newtonsoft.Json.Tests.Serialization.Example", span=""];
m5_819 [file="TypeNameHandlingTests.cs", label=sb, span=""];
m5_830 [file="TypeNameHandlingTests.cs", label="Newtonsoft.Json.Tests.Serialization.MyParent", span=""];
n0 -> n2  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n6 -> n8  [color=darkseagreen4, key=1, label=user, style=dashed];
n16 -> n18  [color=darkseagreen4, key=1, label=json, style=dashed];
d111 -> d126  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d710 -> d8  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
d710 -> d22  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
d710 -> d56  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
d710 -> d60  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
d710 -> d75  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
d710 -> d81  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
d710 -> d86  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
d710 -> d133  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
d710 -> d141  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
d710 -> d291  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
d710 -> d327  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
d710 -> d338  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
d710 -> d356  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
d710 -> d428  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
d710 -> d453  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
d710 -> d469  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
d710 -> d475  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
d710 -> d481  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
d710 -> d487  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
d710 -> d491  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
d710 -> d493  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
d710 -> d495  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
d710 -> d497  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
d710 -> d499  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
d710 -> d501  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
d710 -> d503  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
d710 -> d504  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
d710 -> d568  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
d710 -> d572  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
d710 -> d585  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
d710 -> d592  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
d710 -> d657  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
d710 -> d692  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
d710 -> d693  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
d710 -> d697  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
d710 -> d698  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
d710 -> d703  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
d710 -> d704  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
d710 -> d705  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
d710 -> d708  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
d110 -> d117  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d392 -> d521  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
d392 -> d522  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
d392 -> d523  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
d392 -> d524  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
d392 -> d525  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
d392 -> d526  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
d392 -> d527  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
d392 -> d528  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
d392 -> d529  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d392 -> d530  [color=darkseagreen4, key=1, label="System.Reflection.ParameterInfo[]", style=dashed];
d392 -> d531  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
d392 -> d532  [color=darkseagreen4, key=1, label="System.Reflection.ParameterInfo[]", style=dashed];
d392 -> d533  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
d126 -> d130  [color=darkseagreen4, key=1, label="?", style=dashed];
d126 -> d132  [color=darkseagreen4, key=1, label="?", style=dashed];
d126 -> d133  [color=darkseagreen4, key=1, label="?", style=dashed];
d126 -> d141  [color=darkseagreen4, key=1, label="?", style=dashed];
d598 -> d602  [color=darkseagreen4, key=1, label=propertyAttribute, style=dashed];
d598 -> d609  [color=darkseagreen4, key=1, label=propertyAttribute, style=dashed];
d598 -> d619  [color=darkseagreen4, key=1, label=propertyAttribute, style=dashed];
d599 -> d642  [color=darkseagreen4, key=1, label=requiredAttribute, style=dashed];
d607 -> d611  [color=darkseagreen4, key=1, label=containerAttribute, style=dashed];
d618 -> d659  [color=darkseagreen4, key=1, label=hasMemberAttribute, style=dashed];
d363 -> d380  [color=darkseagreen4, key=1, label=skipDeserialized, style=dashed];
d356 -> d364  [color=darkseagreen4, key=1, label=baseType, style=dashed];
d362 -> d368  [color=darkseagreen4, key=1, label=skipSerializing, style=dashed];
d20 -> d51  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d20 -> d23  [color=darkseagreen4, key=1, label=defaultMembers, style=dashed];
d72 -> d75  [color=darkseagreen4, key=1, label=overrideConstructor, style=dashed];
d78 -> d81  [color=darkseagreen4, key=1, label=constructor, style=dashed];
d83 -> d86  [color=darkseagreen4, key=1, label=constructor, style=dashed];
d87 -> d89  [color=darkseagreen4, key=1, label=extensionDataMember, style=dashed];
d271 -> d273  [color=darkseagreen4, key=1, label=property, style=dashed];
d338 -> d340  [color=darkseagreen4, key=1, label=onSerializing, style=dashed];
d338 -> d341  [color=darkseagreen4, key=1, label=onSerialized, style=dashed];
d338 -> d342  [color=darkseagreen4, key=1, label=onSerialized, style=dashed];
d338 -> d343  [color=darkseagreen4, key=1, label=onDeserializing, style=dashed];
d338 -> d344  [color=darkseagreen4, key=1, label=onDeserializing, style=dashed];
d338 -> d345  [color=darkseagreen4, key=1, label=onDeserialized, style=dashed];
d338 -> d346  [color=darkseagreen4, key=1, label=onDeserialized, style=dashed];
d338 -> d347  [color=darkseagreen4, key=1, label=onError, style=dashed];
d338 -> d348  [color=darkseagreen4, key=1, label=onError, style=dashed];
d546 -> d551  [color=darkseagreen4, key=1, label=members, style=dashed];
d549 -> d554  [color=darkseagreen4, key=1, label=nameTable, style=dashed];
d552 -> d556  [color=darkseagreen4, key=1, label=property, style=dashed];
d585 -> d592  [color=darkseagreen4, key=1, label=allowNonPublicAccess, style=dashed];
d117 -> d119  [color=darkseagreen4, key=1, label="?", style=dashed];
d117 -> d120  [color=darkseagreen4, key=1, label="?", style=dashed];
d368 -> d368  [color=darkseagreen4, key=1, label=prevAttributeType, style=dashed];
d372 -> d372  [color=darkseagreen4, key=1, label=prevAttributeType, style=dashed];
d376 -> d376  [color=darkseagreen4, key=1, label=prevAttributeType, style=dashed];
d380 -> d380  [color=darkseagreen4, key=1, label=prevAttributeType, style=dashed];
d384 -> d384  [color=darkseagreen4, key=1, label=prevAttributeType, style=dashed];
d534 -> d536  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
d364 -> d368  [color=darkseagreen4, key=1, label=method, style=dashed];
d364 -> d372  [color=darkseagreen4, key=1, label=method, style=dashed];
d364 -> d376  [color=darkseagreen4, key=1, label=method, style=dashed];
d364 -> d380  [color=darkseagreen4, key=1, label=method, style=dashed];
d364 -> d384  [color=darkseagreen4, key=1, label=method, style=dashed];
d364 -> d370  [color=darkseagreen4, key=1, label=method, style=dashed];
d364 -> d374  [color=darkseagreen4, key=1, label=method, style=dashed];
d364 -> d378  [color=darkseagreen4, key=1, label=method, style=dashed];
d364 -> d382  [color=darkseagreen4, key=1, label=method, style=dashed];
d364 -> d386  [color=darkseagreen4, key=1, label=method, style=dashed];
d367 -> d372  [color=darkseagreen4, key=1, label=parameters, style=dashed];
d367 -> d376  [color=darkseagreen4, key=1, label=parameters, style=dashed];
d367 -> d380  [color=darkseagreen4, key=1, label=parameters, style=dashed];
d367 -> d384  [color=darkseagreen4, key=1, label=parameters, style=dashed];
d357 -> d368  [color=darkseagreen4, key=1, label=currentOnSerializing, style=dashed];
d358 -> d372  [color=darkseagreen4, key=1, label=currentOnSerialized, style=dashed];
d359 -> d376  [color=darkseagreen4, key=1, label=currentOnDeserializing, style=dashed];
d360 -> d380  [color=darkseagreen4, key=1, label=currentOnDeserialized, style=dashed];
d361 -> d384  [color=darkseagreen4, key=1, label=currentOnError, style=dashed];
d366 -> d368  [color=darkseagreen4, key=1, label=prevAttributeType, style=dashed];
d488 -> d502  [color=darkseagreen4, key=1, label=t, style=dashed];
d488 -> d496  [color=darkseagreen4, key=1, label=t, style=dashed];
d488 -> d498  [color=darkseagreen4, key=1, label=t, style=dashed];
d488 -> d500  [color=darkseagreen4, key=1, label=t, style=dashed];
d134 -> d136  [color=darkseagreen4, key=1, label=t, style=dashed];
d21 -> d25  [color=darkseagreen4, key=1, label=member, style=dashed];
d21 -> d27  [color=darkseagreen4, key=1, label=member, style=dashed];
d21 -> d23  [color=darkseagreen4, key=1, label=member, style=dashed];
d21 -> d24  [color=darkseagreen4, key=1, label=member, style=dashed];
d21 -> d26  [color=darkseagreen4, key=1, label=member, style=dashed];
d21 -> d28  [color=darkseagreen4, key=1, label=member, style=dashed];
d21 -> d29  [color=darkseagreen4, key=1, label=member, style=dashed];
d21 -> d30  [color=darkseagreen4, key=1, label=member, style=dashed];
d431 -> d449  [color=darkseagreen4, key=1, label=namingStrategy, style=dashed];
d311 -> d646  [color=darkseagreen4, key=1, label=object, style=dashed];
d311 -> d647  [color=darkseagreen4, key=1, label="Newtonsoft.Json.MemberSerialization", style=dashed];
d311 -> d661  [color=darkseagreen4, key=1, label="Newtonsoft.Json.MemberSerialization", style=dashed];
d350 -> d356  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d355 -> d388  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>", style=dashed];
d5 -> d8  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d5 -> d7  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d55 -> d60  [color=darkseagreen4, key=1, label=contract, style=dashed];
d55 -> d75  [color=darkseagreen4, key=1, label=contract, style=dashed];
d55 -> d81  [color=darkseagreen4, key=1, label=contract, style=dashed];
d55 -> d86  [color=darkseagreen4, key=1, label=contract, style=dashed];
d55 -> d71  [color=darkseagreen4, key=1, label=contract, style=dashed];
d55 -> d76  [color=darkseagreen4, key=1, label=contract, style=dashed];
d55 -> d77  [color=darkseagreen4, key=1, label=contract, style=dashed];
d55 -> d82  [color=darkseagreen4, key=1, label=contract, style=dashed];
d55 -> d89  [color=darkseagreen4, key=1, label=contract, style=dashed];
d55 -> d90  [color=darkseagreen4, key=1, label=contract, style=dashed];
d93 -> d327  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
d93 -> d324  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
d61 -> d68  [color=darkseagreen4, key=1, label=extensionDataNameResolver, style=dashed];
d98 -> d234  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d98 -> d235  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d105 -> d197  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
d260 -> d282  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d268 -> d270  [color=darkseagreen4, key=1, label=parameterInfo, style=dashed];
d277 -> d291  [color=darkseagreen4, key=1, label="System.Reflection.ParameterInfo", style=dashed];
d277 -> d294  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
d277 -> d298  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
d287 -> d291  [color=darkseagreen4, key=1, label=property, style=dashed];
d287 -> d298  [color=darkseagreen4, key=1, label=property, style=dashed];
d287 -> d307  [color=darkseagreen4, key=1, label=property, style=dashed];
d332 -> d338  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d332 -> d340  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
d332 -> d342  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
d332 -> d344  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
d332 -> d346  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
d332 -> d348  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
d427 -> d442  [color=darkseagreen4, key=1, label=contract, style=dashed];
d427 -> d444  [color=darkseagreen4, key=1, label=contract, style=dashed];
d432 -> d449  [color=darkseagreen4, key=1, label=string, style=dashed];
d436 -> d438  [color=darkseagreen4, key=1, label=parameters, style=dashed];
d436 -> d440  [color=darkseagreen4, key=1, label=parameters, style=dashed];
d452 -> d462  [color=darkseagreen4, key=1, label=contract, style=dashed];
d452 -> d464  [color=darkseagreen4, key=1, label=contract, style=dashed];
d456 -> d458  [color=darkseagreen4, key=1, label=parameters, style=dashed];
d456 -> d460  [color=darkseagreen4, key=1, label=parameters, style=dashed];
d468 -> d470  [color=darkseagreen4, key=1, label=contract, style=dashed];
d474 -> d476  [color=darkseagreen4, key=1, label=contract, style=dashed];
d480 -> d482  [color=darkseagreen4, key=1, label=contract, style=dashed];
d485 -> d487  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d485 -> d491  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d485 -> d493  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d485 -> d495  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d485 -> d497  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d485 -> d499  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d485 -> d501  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d485 -> d503  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d485 -> d504  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d550 -> d556  [color=darkseagreen4, key=1, label=properties, style=dashed];
d561 -> d585  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
d561 -> d592  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
d561 -> d586  [color=darkseagreen4, key=1, label="Newtonsoft.Json.MemberSerialization", style=dashed];
d579 -> d585  [color=darkseagreen4, key=1, label=property, style=dashed];
d579 -> d592  [color=darkseagreen4, key=1, label=property, style=dashed];
d579 -> d593  [color=darkseagreen4, key=1, label=property, style=dashed];
d597 -> d684  [color=darkseagreen4, key=1, label=bool, style=dashed];
d666 -> d693  [color=darkseagreen4, key=1, label=string, style=dashed];
d666 -> d694  [color=darkseagreen4, key=1, label=string, style=dashed];
d656 -> d663  [color=darkseagreen4, key=1, label="out bool", style=dashed];
d658 -> d663  [color=darkseagreen4, key=1, label="out bool", style=dashed];
d696 -> d698  [color=darkseagreen4, key=1, label=string, style=dashed];
d696 -> d699  [color=darkseagreen4, key=1, label=string, style=dashed];
d702 -> d704  [color=darkseagreen4, key=1, label=string, style=dashed];
d702 -> d705  [color=darkseagreen4, key=1, label=string, style=dashed];
d417 -> d419  [color=darkseagreen4, key=1, label=current, style=dashed];
d416 -> d419  [color=darkseagreen4, key=1, label=ret, style=dashed];
d416 -> d421  [color=darkseagreen4, key=1, label=ret, style=dashed];
d416 -> d422  [color=darkseagreen4, key=1, label=ret, style=dashed];
d118 -> d120  [color=darkseagreen4, key=1, label=m, style=dashed];
d118 -> d121  [color=darkseagreen4, key=1, label=m, style=dashed];
d369 -> d388  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
d373 -> d388  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
d377 -> d388  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
d381 -> d388  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
d385 -> d388  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>", style=dashed];
d537 -> d541  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d537 -> d542  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d489 -> d492  [color=darkseagreen4, key=1, label=containerAttribute, style=dashed];
d489 -> d494  [color=darkseagreen4, key=1, label=containerAttribute, style=dashed];
d17 -> d21  [color=darkseagreen4, key=1, label=allMembers, style=dashed];
d17 -> d47  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d17 -> d31  [color=darkseagreen4, key=1, label=allMembers, style=dashed];
d18 -> d26  [color=darkseagreen4, key=1, label=serializableMembers, style=dashed];
d18 -> d28  [color=darkseagreen4, key=1, label=serializableMembers, style=dashed];
d18 -> d24  [color=darkseagreen4, key=1, label=serializableMembers, style=dashed];
d18 -> d30  [color=darkseagreen4, key=1, label=serializableMembers, style=dashed];
d18 -> d35  [color=darkseagreen4, key=1, label=serializableMembers, style=dashed];
d18 -> d34  [color=darkseagreen4, key=1, label=serializableMembers, style=dashed];
d16 -> d29  [color=darkseagreen4, key=1, label=memberSerialization, style=dashed];
d16 -> d19  [color=darkseagreen4, key=1, label=memberSerialization, style=dashed];
d623 -> d659  [color=darkseagreen4, key=1, label=hasMemberAttribute, style=dashed];
d644 -> d659  [color=darkseagreen4, key=1, label=hasMemberAttribute, style=dashed];
d660 -> d663  [color=darkseagreen4, key=1, label="out bool", style=dashed];
d351 -> d388  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
d354 -> d388  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
d352 -> d388  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
d353 -> d388  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
d31 -> d34  [color=darkseagreen4, key=1, label=member, style=dashed];
d228 -> d242  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d228 -> d231  [color=darkseagreen4, key=1, label=en, style=dashed];
d62 -> d65  [color=darkseagreen4, key=1, label=attribute, style=dashed];
d67 -> d107  [color=darkseagreen4, key=1, label=string, style=dashed];
d557 -> d565  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d266 -> d268  [color=darkseagreen4, key=1, label=constructorParameters, style=dashed];
d267 -> d273  [color=darkseagreen4, key=1, label=parameterCollection, style=dashed];
d267 -> d274  [color=darkseagreen4, key=1, label=parameterCollection, style=dashed];
d230 -> d233  [color=darkseagreen4, key=1, label=conInfo, style=dashed];
d261 -> d263  [color=darkseagreen4, key=1, label=constructors, style=dashed];
d248 -> d256  [color=darkseagreen4, key=1, label=constructor, style=dashed];
d153 -> d166  [color=darkseagreen4, key=1, label=extensionDataAttribute, style=dashed];
d153 -> d173  [color=darkseagreen4, key=1, label=extensionDataAttribute, style=dashed];
d156 -> d158  [color=darkseagreen4, key=1, label=t, style=dashed];
d156 -> d162  [color=darkseagreen4, key=1, label=t, style=dashed];
d167 -> d196  [color=darkseagreen4, key=1, label=setExtensionDataDictionary, style=dashed];
d167 -> d199  [color=darkseagreen4, key=1, label=setExtensionDataDictionary, style=dashed];
d171 -> d199  [color=darkseagreen4, key=1, label=object, style=dashed];
d171 -> d200  [color=darkseagreen4, key=1, label=string, style=dashed];
d137 -> d139  [color=darkseagreen4, key=1, label=keyType, style=dashed];
d250 -> d252  [color=darkseagreen4, key=1, label=parameters, style=dashed];
d281 -> d284  [color=darkseagreen4, key=1, label=property, style=dashed];
d437 -> d442  [color=darkseagreen4, key=1, label=expectedParameterType, style=dashed];
d437 -> d440  [color=darkseagreen4, key=1, label=expectedParameterType, style=dashed];
d457 -> d462  [color=darkseagreen4, key=1, label=expectedParameterType, style=dashed];
d457 -> d460  [color=darkseagreen4, key=1, label=expectedParameterType, style=dashed];
d668 -> d671  [color=darkseagreen4, key=1, label=shouldSerializeMethod, style=dashed];
d672 -> d675  [color=darkseagreen4, key=1, label=object, style=dashed];
d677 -> d680  [color=darkseagreen4, key=1, label=specifiedMember, style=dashed];
d677 -> d684  [color=darkseagreen4, key=1, label=specifiedMember, style=dashed];
d679 -> d684  [color=darkseagreen4, key=1, label=specifiedMember, style=dashed];
d683 -> d690  [color=darkseagreen4, key=1, label=object, style=dashed];
d66 -> d107  [color=darkseagreen4, key=1, label=namingStrategy, style=dashed];
d719 -> d449  [color=darkseagreen4, key=1, label=namingStrategy, style=dashed];
d176 -> d212  [color=darkseagreen4, key=1, label=createEnumerableWrapper, style=dashed];
d209 -> d212  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
d246 -> d249  [color=darkseagreen4, key=1, label=en, style=dashed];
d194 -> d200  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
d170 -> d200  [color=darkseagreen4, key=1, label=setExtensionDataDictionaryValue, style=dashed];
d714 -> d197  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
d671 -> d675  [color=darkseagreen4, key=1, label=shouldSerializeCall, style=dashed];
d682 -> d690  [color=darkseagreen4, key=1, label=specifiedPropertyGet, style=dashed];
d711 -> d107  [color=darkseagreen4, key=1, label=namingStrategy, style=dashed];
d193 -> d199  [color=darkseagreen4, key=1, label=object, style=dashed];
d193 -> d200  [color=darkseagreen4, key=1, label=string, style=dashed];
d198 -> d200  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
d713 -> d196  [color=darkseagreen4, key=1, label=setExtensionDataDictionary, style=dashed];
d713 -> d199  [color=darkseagreen4, key=1, label=setExtensionDataDictionary, style=dashed];
d716 -> d200  [color=darkseagreen4, key=1, label=setExtensionDataDictionaryValue, style=dashed];
d720 -> d675  [color=darkseagreen4, key=1, label=shouldSerializeCall, style=dashed];
d721 -> d690  [color=darkseagreen4, key=1, label=specifiedPropertyGet, style=dashed];
d717 -> d212  [color=darkseagreen4, key=1, label=createEnumerableWrapper, style=dashed];
d718 -> d221  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>", style=dashed];
d718 -> d226  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>", style=dashed];
d222 -> d222  [color=darkseagreen4, key=1, label=item, style=dashed];
m1_1 -> m1_3  [color=darkseagreen4, key=1, label=account, style=dashed];
m1_1 -> m1_4  [color=darkseagreen4, key=1, label=account, style=dashed];
m1_1 -> m1_5  [color=darkseagreen4, key=1, label=account, style=dashed];
m1_1 -> m1_6  [color=darkseagreen4, key=1, label=account, style=dashed];
m1_1 -> m1_7  [color=darkseagreen4, key=1, label=account, style=dashed];
m3_15 -> m3_22  [color=darkseagreen4, key=1, label=TKey, style=dashed];
m3_16 -> m3_27  [color=darkseagreen4, key=1, label=value, style=dashed];
m3_31 -> m3_10  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>", style=dashed];
m3_31 -> m3_11  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>", style=dashed];
m3_31 -> m3_17  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>", style=dashed];
m3_31 -> m3_18  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>", style=dashed];
m3_31 -> m3_22  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>", style=dashed];
m4_18 -> m4_20  [color=darkseagreen4, key=1, label=compositeExpression, style=dashed];
m4_18 -> m4_22  [color=darkseagreen4, key=1, label=compositeExpression, style=dashed];
m4_18 -> m4_24  [color=darkseagreen4, key=1, label=compositeExpression, style=dashed];
m4_1 -> m4_3  [color=darkseagreen4, key=1, label=compositeExpression, style=dashed];
m4_1 -> m4_5  [color=darkseagreen4, key=1, label=compositeExpression, style=dashed];
m4_1 -> m4_7  [color=darkseagreen4, key=1, label=compositeExpression, style=dashed];
m5_126 -> m5_126  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m5_367 -> m5_369  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m5_225 -> m5_235  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_225 -> m5_236  [color=darkseagreen4, key=1, label=object, style=dashed];
m5_228 -> m5_230  [color=darkseagreen4, key=1, label=jsonSerializer, style=dashed];
m5_219 -> m5_222  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m5_215 -> m5_218  [color=darkseagreen4, key=1, label=listRef, style=dashed];
m5_222 -> m5_224  [color=darkseagreen4, key=1, label=nested, style=dashed];
m5_222 -> m5_225  [color=darkseagreen4, key=1, label=nested, style=dashed];
m5_222 -> m5_226  [color=darkseagreen4, key=1, label=nested, style=dashed];
m5_222 -> m5_227  [color=darkseagreen4, key=1, label=nested, style=dashed];
m5_217 -> m5_219  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_217 -> m5_230  [color=darkseagreen4, key=1, label=object, style=dashed];
m5_339 -> m5_341  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m5_335 -> m5_337  [color=darkseagreen4, key=1, label=message, style=dashed];
m5_335 -> m5_338  [color=darkseagreen4, key=1, label=message, style=dashed];
m5_633 -> m5_635  [color=darkseagreen4, key=1, label=p2, style=dashed];
m5_633 -> m5_636  [color=darkseagreen4, key=1, label=p2, style=dashed];
m5_42 -> m5_45  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_46 -> m5_51  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_41 -> m5_46  [color=darkseagreen4, key=1, label=sb, style=dashed];
m5_41 -> m5_44  [color=darkseagreen4, key=1, label=sb, style=dashed];
m5_45 -> m5_45  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_798 -> m5_801  [color=darkseagreen4, key=1, label=object, style=dashed];
m5_798 -> m5_804  [color=darkseagreen4, key=1, label=object, style=dashed];
m5_798 -> m5_803  [color=darkseagreen4, key=1, label=object, style=dashed];
m5_52 -> m5_55  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_53 -> m5_55  [color=darkseagreen4, key=1, label=ser, style=dashed];
m5_346 -> m5_348  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_346 -> m5_349  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_349 -> m5_351  [color=darkseagreen4, key=1, label=c, style=dashed];
m5_345 -> m5_347  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m5_351 -> m5_353  [color=darkseagreen4, key=1, label=newCollection, style=dashed];
m5_351 -> m5_354  [color=darkseagreen4, key=1, label=newCollection, style=dashed];
m5_355 -> m5_359  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_356 -> m5_359  [color=darkseagreen4, key=1, label=converter, style=dashed];
m5_777 -> m5_780  [color=darkseagreen4, key=1, label=w, style=dashed];
m5_213 -> m5_215  [color=darkseagreen4, key=1, label=object, style=dashed];
m5_622 -> m5_624  [color=darkseagreen4, key=1, label=p2, style=dashed];
m5_708 -> m5_758  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_759 -> m5_827  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.Message2", style=dashed];
m5_329 -> m5_334  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_101 -> m5_103  [color=darkseagreen4, key=1, label=w2, style=dashed];
m5_129 -> m5_133  [color=darkseagreen4, key=1, label=employeeRef, style=dashed];
m5_141 -> m5_151  [color=darkseagreen4, key=1, label=values, style=dashed];
m5_143 -> m5_145  [color=darkseagreen4, key=1, label=e, style=dashed];
m5_144 -> m5_147  [color=darkseagreen4, key=1, label=p, style=dashed];
m5_144 -> m5_148  [color=darkseagreen4, key=1, label=p, style=dashed];
m5_144 -> m5_149  [color=darkseagreen4, key=1, label=p, style=dashed];
m5_75 -> m5_77  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_75 -> m5_78  [color=darkseagreen4, key=1, label="Newtonsoft.Json.FloatFormatHandling", style=dashed];
m5_75 -> m5_79  [color=darkseagreen4, key=1, label=bool, style=dashed];
m5_75 -> m5_80  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_272 -> m5_274  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_63 -> m5_65  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m5_63 -> m5_70  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m5_64 -> m5_66  [color=darkseagreen4, key=1, label=sw, style=dashed];
m5_66 -> m5_68  [color=darkseagreen4, key=1, label=result, style=dashed];
m5_66 -> m5_69  [color=darkseagreen4, key=1, label=result, style=dashed];
m5_71 -> m5_92  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_71 -> m5_93  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_233 -> m5_237  [color=darkseagreen4, key=1, label=sw, style=dashed];
m5_234 -> m5_236  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m5_246 -> m5_254  [color=darkseagreen4, key=1, label=object, style=dashed];
m5_250 -> m5_253  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_109 -> m5_112  [color=darkseagreen4, key=1, label=employeeRef, style=dashed];
m5_242 -> m5_244  [color=darkseagreen4, key=1, label=binder, style=dashed];
m5_3 -> m5_7  [color=darkseagreen4, key=1, label="Newtonsoft.Json.DateFormatHandling", style=dashed];
m5_4 -> m5_7  [color=darkseagreen4, key=1, label=updatedDateTime, style=dashed];
m5_5 -> m5_7  [color=darkseagreen4, key=1, label=t2, style=dashed];
m5_5 -> m5_8  [color=darkseagreen4, key=1, label=t2, style=dashed];
m5_5 -> m5_9  [color=darkseagreen4, key=1, label=writer, style=dashed];
m5_147 -> m5_153  [color=darkseagreen4, key=1, label=object, style=dashed];
m5_147 -> m5_155  [color=darkseagreen4, key=1, label=object, style=dashed];
m5_147 -> m5_157  [color=darkseagreen4, key=1, label=object, style=dashed];
m5_147 -> m5_159  [color=darkseagreen4, key=1, label=object, style=dashed];
m5_147 -> m5_161  [color=darkseagreen4, key=1, label=object, style=dashed];
m5_147 -> m5_167  [color=darkseagreen4, key=1, label=object, style=dashed];
m5_147 -> m5_169  [color=darkseagreen4, key=1, label=object, style=dashed];
m5_147 -> m5_173  [color=darkseagreen4, key=1, label=object, style=dashed];
m5_147 -> m5_177  [color=darkseagreen4, key=1, label=object, style=dashed];
m5_147 -> m5_179  [color=darkseagreen4, key=1, label=object, style=dashed];
m5_147 -> m5_181  [color=darkseagreen4, key=1, label=object, style=dashed];
m5_147 -> m5_185  [color=darkseagreen4, key=1, label=object, style=dashed];
m5_147 -> m5_187  [color=darkseagreen4, key=1, label=object, style=dashed];
m5_147 -> m5_189  [color=darkseagreen4, key=1, label=object, style=dashed];
m5_147 -> m5_191  [color=darkseagreen4, key=1, label=object, style=dashed];
m5_147 -> m5_193  [color=darkseagreen4, key=1, label=object, style=dashed];
m5_147 -> m5_195  [color=darkseagreen4, key=1, label=object, style=dashed];
m5_738 -> m5_740  [color=darkseagreen4, key=1, label=binder, style=dashed];
m5_154 -> m5_156  [color=darkseagreen4, key=1, label=employeeRef, style=dashed];
m5_154 -> m5_159  [color=darkseagreen4, key=1, label=employeeRef, style=dashed];
m5_155 -> m5_159  [color=darkseagreen4, key=1, label=personRef, style=dashed];
m5_330 -> m5_333  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_318 -> m5_320  [color=darkseagreen4, key=1, label=anotherTestObject, style=dashed];
m5_318 -> m5_322  [color=darkseagreen4, key=1, label=anotherTestObject, style=dashed];
m5_318 -> m5_321  [color=darkseagreen4, key=1, label=anotherTestObject, style=dashed];
m5_319 -> m5_321  [color=darkseagreen4, key=1, label=sr, style=dashed];
m5_320 -> m5_322  [color=darkseagreen4, key=1, label=jsonSerializer, style=dashed];
m5_323 -> m5_326  [color=darkseagreen4, key=1, label=list, style=dashed];
m5_194 -> m5_197  [color=darkseagreen4, key=1, label=productListTypeName, style=dashed];
m5_193 -> m5_197  [color=darkseagreen4, key=1, label=containerTypeName, style=dashed];
m5_308 -> m5_311  [color=darkseagreen4, key=1, label=contentSubClassRef, style=dashed];
m5_309 -> m5_311  [color=darkseagreen4, key=1, label=dictionaryRef, style=dashed];
m5_309 -> m5_313  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_310 -> m5_312  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_302 -> m5_307  [color=darkseagreen4, key=1, label=sw, style=dashed];
m5_307 -> m5_312  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_307 -> m5_313  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_313 -> m5_316  [color=darkseagreen4, key=1, label=sr, style=dashed];
m5_294 -> m5_297  [color=darkseagreen4, key=1, label=testObject, style=dashed];
m5_294 -> m5_306  [color=darkseagreen4, key=1, label=testObject, style=dashed];
m5_294 -> m5_298  [color=darkseagreen4, key=1, label=testObject, style=dashed];
m5_294 -> m5_299  [color=darkseagreen4, key=1, label=testObject, style=dashed];
m5_314 -> m5_317  [color=darkseagreen4, key=1, label=deserializingTester, style=dashed];
m5_300 -> m5_306  [color=darkseagreen4, key=1, label=serializingTester, style=dashed];
m5_300 -> m5_305  [color=darkseagreen4, key=1, label=serializingTester, style=dashed];
m5_300 -> m5_304  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_301 -> m5_303  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_303 -> m5_306  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m5_416 -> m5_420  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.SerializableWrapper", style=dashed];
m5_416 -> m5_422  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.SerializableWrapper", style=dashed];
m5_417 -> m5_420  [color=darkseagreen4, key=1, label=writer, style=dashed];
m5_418 -> m5_420  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m5_493 -> m5_496  [color=darkseagreen4, key=1, label=o2, style=dashed];
m5_493 -> m5_499  [color=darkseagreen4, key=1, label=o2, style=dashed];
m5_493 -> m5_495  [color=darkseagreen4, key=1, label=o2, style=dashed];
m5_493 -> m5_497  [color=darkseagreen4, key=1, label=o2, style=dashed];
m5_493 -> m5_498  [color=darkseagreen4, key=1, label=o2, style=dashed];
m5_490 -> m5_492  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_287 -> m5_289  [color=darkseagreen4, key=1, label=jsonSerializer, style=dashed];
m5_378 -> m5_381  [color=darkseagreen4, key=1, label=converter, style=dashed];
m5_379 -> m5_381  [color=darkseagreen4, key=1, label=nextInLine, style=dashed];
m5_379 -> m5_382  [color=darkseagreen4, key=1, label=nextInLine, style=dashed];
m5_379 -> m5_383  [color=darkseagreen4, key=1, label=nextInLine, style=dashed];
m5_377 -> m5_381  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_383 -> m5_383  [color=darkseagreen4, key=1, label=nextInLine, style=dashed];
m5_383 -> m5_254  [color=darkseagreen4, key=1, label=object, style=dashed];
m5_384 -> m5_254  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Formatting", style=dashed];
m5_172 -> m5_174  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_186 -> m5_188  [color=darkseagreen4, key=1, label=request, style=dashed];
m5_186 -> m5_189  [color=darkseagreen4, key=1, label=request, style=dashed];
m5_508 -> m5_510  [color=darkseagreen4, key=1, label=c2, style=dashed];
m5_508 -> m5_511  [color=darkseagreen4, key=1, label=c2, style=dashed];
m5_508 -> m5_512  [color=darkseagreen4, key=1, label=c2, style=dashed];
m5_359 -> m5_362  [color=darkseagreen4, key=1, label=productClassRef, style=dashed];
m5_19 -> m5_22  [color=darkseagreen4, key=1, label="System.DateTimeOffset", style=dashed];
m5_20 -> m5_22  [color=darkseagreen4, key=1, label=writer, style=dashed];
m5_20 -> m5_23  [color=darkseagreen4, key=1, label=writer, style=dashed];
m5_20 -> m5_24  [color=darkseagreen4, key=1, label=writer, style=dashed];
m5_116 -> m5_118  [color=darkseagreen4, key=1, label="System.Guid", style=dashed];
m5_116 -> m5_119  [color=darkseagreen4, key=1, label=char, style=dashed];
m5_117 -> m5_119  [color=darkseagreen4, key=1, label=employee, style=dashed];
m5_118 -> m5_118  [color=darkseagreen4, key=1, label="System.Guid", style=dashed];
m5_409 -> m5_411  [color=darkseagreen4, key=1, label=w, style=dashed];
m5_409 -> m5_412  [color=darkseagreen4, key=1, label=w, style=dashed];
m5_385 -> m5_254  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m5_386 -> m5_304  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_387 -> m5_304  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m5_96 -> m5_99  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_96 -> m5_98  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_1 -> m5_4  [color=darkseagreen4, key=1, label=tupleRef, style=dashed];
m5_521 -> m5_523  [color=darkseagreen4, key=1, label=c2, style=dashed];
m5_521 -> m5_524  [color=darkseagreen4, key=1, label=c2, style=dashed];
m5_528 -> m5_530  [color=darkseagreen4, key=1, label=c2, style=dashed];
m5_528 -> m5_531  [color=darkseagreen4, key=1, label=c2, style=dashed];
m5_725 -> m5_727  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m5_726 -> m5_731  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_203 -> m5_222  [color=darkseagreen4, key=1, label=object, style=dashed];
m5_203 -> m5_205  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_745 -> m5_747  [color=darkseagreen4, key=1, label="out string", style=dashed];
m5_475 -> m5_478  [color=darkseagreen4, key=1, label=l2, style=dashed];
m5_475 -> m5_477  [color=darkseagreen4, key=1, label=l2, style=dashed];
m5_475 -> m5_479  [color=darkseagreen4, key=1, label=l2, style=dashed];
m5_475 -> m5_480  [color=darkseagreen4, key=1, label=l2, style=dashed];
m5_469 -> m5_471  [color=darkseagreen4, key=1, label=l, style=dashed];
m5_469 -> m5_472  [color=darkseagreen4, key=1, label=l, style=dashed];
m5_388 -> m5_313  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_393 -> m5_334  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m5_392 -> m5_334  [color=darkseagreen4, key=1, label=object, style=dashed];
m5_396 -> m5_398  [color=darkseagreen4, key=1, label=output, style=dashed];
m5_399 -> m5_401  [color=darkseagreen4, key=1, label=obj, style=dashed];
m5_389 -> m5_392  [color=darkseagreen4, key=1, label=testerObject, style=dashed];
m5_389 -> m5_313  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m5_391 -> m5_403  [color=darkseagreen4, key=1, label=data, style=dashed];
m5_391 -> m5_334  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_390 -> m5_313  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m5_130 -> m5_133  [color=darkseagreen4, key=1, label="System.Uri", style=dashed];
m5_605 -> m5_608  [color=darkseagreen4, key=1, label=contextKey, style=dashed];
m5_605 -> m5_613  [color=darkseagreen4, key=1, label=contextKey, style=dashed];
m5_606 -> m5_608  [color=darkseagreen4, key=1, label=someValue, style=dashed];
m5_606 -> m5_613  [color=darkseagreen4, key=1, label=someValue, style=dashed];
m5_274 -> m5_278  [color=darkseagreen4, key=1, label=newValues, style=dashed];
m5_205 -> m5_207  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m5_205 -> m5_208  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m5_201 -> m5_204  [color=darkseagreen4, key=1, label=typeNamePropertyRef, style=dashed];
m5_208 -> m5_210  [color=darkseagreen4, key=1, label=object, style=dashed];
m5_441 -> m5_443  [color=darkseagreen4, key=1, label=l, style=dashed];
m5_441 -> m5_444  [color=darkseagreen4, key=1, label=l, style=dashed];
m5_586 -> m5_588  [color=darkseagreen4, key=1, label=d2, style=dashed];
m5_646 -> m5_648  [color=darkseagreen4, key=1, label=p2, style=dashed];
m5_652 -> m5_654  [color=darkseagreen4, key=1, label=input, style=dashed];
m5_652 -> m5_655  [color=darkseagreen4, key=1, label=input, style=dashed];
m5_658 -> m5_666  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_658 -> m5_660  [color=darkseagreen4, key=1, label=strings, style=dashed];
m5_658 -> m5_661  [color=darkseagreen4, key=1, label=strings, style=dashed];
m5_541 -> m5_543  [color=darkseagreen4, key=1, label=c2, style=dashed];
m5_541 -> m5_544  [color=darkseagreen4, key=1, label=c2, style=dashed];
m5_548 -> m5_550  [color=darkseagreen4, key=1, label=c2, style=dashed];
m5_548 -> m5_551  [color=darkseagreen4, key=1, label=c2, style=dashed];
m5_562 -> m5_564  [color=darkseagreen4, key=1, label=o2, style=dashed];
m5_562 -> m5_565  [color=darkseagreen4, key=1, label=o2, style=dashed];
m5_562 -> m5_566  [color=darkseagreen4, key=1, label=o2, style=dashed];
m5_562 -> m5_567  [color=darkseagreen4, key=1, label=o2, style=dashed];
m5_562 -> m5_568  [color=darkseagreen4, key=1, label=o2, style=dashed];
m5_716 -> m5_718  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m5_716 -> m5_719  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m5_459 -> m5_461  [color=darkseagreen4, key=1, label=l2, style=dashed];
m5_459 -> m5_462  [color=darkseagreen4, key=1, label=l2, style=dashed];
m5_459 -> m5_463  [color=darkseagreen4, key=1, label=l2, style=dashed];
m5_459 -> m5_464  [color=darkseagreen4, key=1, label=l2, style=dashed];
m5_452 -> m5_455  [color=darkseagreen4, key=1, label=l, style=dashed];
m5_452 -> m5_456  [color=darkseagreen4, key=1, label=l, style=dashed];
m5_451 -> m5_453  [color=darkseagreen4, key=1, label=c1, style=dashed];
m5_825 -> m5_410  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests", style=dashed];
m5_825 -> m5_411  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests", style=dashed];
m5_825 -> m5_412  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests", style=dashed];
m5_824 -> m5_373  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>", style=dashed];
m5_824 -> m5_376  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>", style=dashed];
m5_824 -> m5_386  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>", style=dashed];
m5_831 -> m5_784  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.SerializableWrapper", style=dashed];
m5_831 -> m5_786  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.SerializableWrapper", style=dashed];
m5_831 -> m5_780  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.SerializableWrapper", style=dashed];
m5_832 -> m5_810  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.Example", style=dashed];
m5_832 -> m5_812  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.Example", style=dashed];
m5_832 -> m5_796  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.Example", style=dashed];
m5_832 -> m5_801  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.Example", style=dashed];
m5_832 -> m5_804  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.Example", style=dashed];
m5_830 -> m5_773  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.MyParent", style=dashed];
}
